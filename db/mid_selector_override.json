{"result":[{"sys_mod_count":"24","active":"true","sys_updated_on":"2019-06-10 11:16:00","sys_tags":"","type":"capability_filter","script":"/*\nMIDSelection override for cloud. Customers can modify this script include to override any other custom changes. For example, for CMP provision use cases, one can use the context to get additional attributes (e.g. vpc)\n\nOut of box, in cases when there is no specific match,  we want to fallback to a more general provider match (AWS, Azure, etc..) and if there is no match, then we want to fallback to a even more general cloud level. Here is some examples.\n\nExample 1:\n\nRequest:\n\tcapability: [{capability : \"AWS\", value: \"US-WEST1\"}]\n\tcapability: [{capability : \"Cloud Management\"}]\n\nMID configruation:\n\tMIDA:\n\t\tcapability: AWS, Value: null\n\t\tcapability: Cloud Management, Value: null\n\nIf there is no override, then we wont match MIDA since there is a specific value for the ldc. This override will make sure we find MIDA by finding MIDS that just have the AWS capability with no value.\n\n\nExample 2:\n\tcapability: [{capability : \"AWS\", value: \"US-WEST1\"}]\n\tcapability: [{capability : \"Cloud Management\"}]\n\nMID configruation:\n\tMIDA:\n\t\tcapability: Cloud Management, Value: null\n\nIf there is no override, then we wont match MIDA since there is no AWS capability defined on the MID. This override will make sure we find MIDA by finding MIDS that just have the Cloud capability with no value.\n\n@param {array of MIDServerJS} candidateMIDList All Mids\n@param {array of MIDServerJS} defaultSelectedMIDList Filtered MID list\n@param {object} midSelectorContext Extra contextual parameters passed in for CMP uses cases.\n@param {object} requestedParameters MIDSelectorParamJS - a POJO to get requested MID selection criteria such as application, target, capabilities\n\nMIDServerJS: a POJO representing MID server object. Can get MID name, status, capabilities, IP range, applications assing to that MID\n\n*/\n(function filter(/* MIDServerJS Array */  candidateMIDList, /* MIDServerJS Array */  defaultSelectedMIDList, /* Native JS object */ midSelectorContext, /* MIDSelectorParamJS */ requestedParameters) {\n\t\t// If anything matching no need to do anything\n\t\tif (defaultSelectedMIDList.length > 0)\n\t\t\treturn defaultSelectedMIDList;\n\n\t\t// Check if this is cloud capability - if not nothing to do\n\t\tif (!hasCloudCapability(requestedParameters.capabilities))\n\t\t\treturn defaultSelectedMIDList;\n\n\t\t// get first non cloud capability (e.g AWS) - there should be only one more\n\t\tvar capability = getNonCloudCapability(requestedParameters.capabilities);\n\t\tif (JSUtil.nil(capability)) {\n\t\t\tgs.warn(\"MID Selection filterOnCapability could not find a capablity for provider!\");\n\t\t\treturn defaultSelectedMIDList;\n\t\t}\n\n\t\t// Get mid with AWS capability\n\t\tvar mids = getMidsWithCapability(capability);\n\n\t\tif (mids.length > 0)\n\t\t\treturn mids;\n\n\t\tmids = getMidsWithCapability('Cloud Management');\n\n\t    getMidsWithoutCapability(mids, capability);\n\t    return mids;\n\n\t\t//\n\t\t// INNER FUNCTIONS\n\t\t//\n\n\t\t//\n\t\t// Do we have the Cloud capability in the list?\n\t\t//\n\t\tfunction hasCloudCapability(capabilities) {\n\t\t\tfor(var j in capabilities) {\n\t\t\t\tif(capabilities[j].capability == 'Cloud Management')\n\t\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\t//\n\t\t// Get the first non cloud capability (e.g. AWS)\n\t\t//\n\t\tfunction getNonCloudCapability(capabilities) {\n\t\t\tfor(var j in capabilities) {\n\t\t\t\tif(capabilities[j].capability != 'Cloud Management')\n\t\t\t\t\treturn capabilities[j].capability;\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\n\t\t//\n\t\t// Get the mids with this specific capability\n\t\t//\n\t\tfunction getMidsWithCapability(capability) {\n\t\t\tvar selectedMids = [];\n\t\t\tfor (var i in candidateMIDList) {\n\t\t\t\t//Get all capabilities assign to a MID server\n\t\t\t\tvar capabilities = candidateMIDList[i].capabilities;\n\n\t\t\t\tfor(var j in capabilities) {\n\t\t\t\t\tif('' + capabilities[j].capability == '' + capability &&\n\t\t\t\t\t\t   JSUtil.nil(capabilities[j].value))\n\t\t\t\t\tselectedMids.push(candidateMIDList[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn selectedMids;\n\t\t}\n\n\t\t//\n\t\t// Filter out the mids with certain capability (Check name only, ignore value)\n\t\t//\n\t\tfunction getMidsWithoutCapability(mids, capability) {\n\t\t\tfor (var i = 0; i < mids.length; i ++) {\n\t\t\t\tfor (var j = 0; j < mids[i].capabilities.length; j ++) {\n\t\t\t\t\tif (mids[i].capabilities[j].capability + '' == capability + '') {\n\t\t\t\t\t\tmids.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n})(candidateMIDList, defaultSelectedMIDList, midSelectorContext, requestedParameters);","sys_class_name":"mid_selector_override","sys_id":"7d99b1a1dc281300964fca64ab408156","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/91d8237704f12210559073c06a02f73b","value":"91d8237704f12210559073c06a02f73b"},"sys_update_name":"mid_selector_override_7d99b1a1dc281300964fca64ab408156","sys_updated_by":"jorge.velazquez","sys_created_on":"2018-02-27 19:54:40","name":"Override by capability","sys_name":"Override by capability","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"amit.dhuleshia@snc","sys_policy":""}]}