{"result":[{"sys_mod_count":"0","active":"true","sys_updated_on":"2023-03-02 16:40:13","sys_tags":"","script":"if (('true' === gs.getProperty('glide.source_control.post_clone_import_enabled', true)) &&\n\t('true' === gs.getProperty('com.glide.update_operation.queue_app_operation_enabled', true))) {\n\tgs.print(\"Scheduling apply remote changes for all existing git repository configurations\");\n\tvar importsUrl = new GlideTinyURL().createTinyURL(new SncEnqueueImportFromSCTask().run());\n\tgs.print(\"Tracking apply remote changes post clone: \" + importsUrl);\n} else\n  gs.print(\"Apply remote changes post clone is disabled on this instance\");","sys_class_name":"clone_cleanup_script","sys_id":"011290de771961105d8df4b39f5a99cb","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/2954e3bb04312210559073c06a02f7ef","value":"2954e3bb04312210559073c06a02f7ef"},"default":"false","sys_update_name":"clone_cleanup_script_011290de771961105d8df4b39f5a99cb","sys_updated_by":"admin","sys_created_on":"2023-03-02 16:40:13","name":"Apply remote changes for SC app","sys_name":"Apply remote changes for SC app","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"include_in_system_clone":"true","sys_created_by":"admin","order":"200","sys_policy":""},{"sys_mod_count":"1","active":"true","sys_updated_on":"2016-12-17 04:00:00","sys_tags":"","script":"new BadMIDCredentialAfterClone().scheduleJobs();","sys_class_name":"clone_cleanup_script","sys_id":"175964ccc773220003fa9c569b9763bd","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/42b8273704f12210559073c06a02f78d","value":"42b8273704f12210559073c06a02f78d"},"default":"true","sys_update_name":"clone_cleanup_script_175964ccc773220003fa9c569b9763bd","sys_updated_by":"ardis.maison","sys_created_on":"2016-12-17 03:00:00","name":"Bad MID Server credentials after clone","sys_name":"Bad MID Server credentials after clone","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"include_in_system_clone":"true","sys_created_by":"ardis.maison","order":"100","sys_policy":""},{"sys_mod_count":"4","active":"true","sys_updated_on":"2020-07-18 01:51:07","sys_tags":"","script":"gs.log(\"Text Index for preserved Data - START\");\nvar pres = new GlideRecord('clone_data_preserver');\npres.query();\nwhile(pres.next())\n{\n   var txtindex = new GlideRecord('sys_dictionary');\n   txtindex.addEncodedQuery('text_index!=false^internal_type=collection^name='+pres.table);\n   txtindex.query();\n   while(txtindex.next())\n   {\n      gs.log(pres.table + \" to be text indexed\");\n      var data = new GlideRecord(pres.table);\n      data.addEncodedQuery(pres.condition);\n      data.query();\n      gs.log(\"# of records \" + data.getRowCount());\n      while(data.next())\n      {\n         var table = pres.table;\n         var sysID = data.sys_id;\n         new GlideTSUtil().indexDocument(table, sysID);\n      }\n   }\n}\ngs.log(\"Text Index for preserved Data - END\");","sys_class_name":"clone_cleanup_script","sys_id":"1cc23a0137302000414180f7bcbe5d15","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/3b83a3f304312210559073c06a02f788","value":"3b83a3f304312210559073c06a02f788"},"default":"true","sys_update_name":"clone_cleanup_script_1cc23a0137302000414180f7bcbe5d15","sys_updated_by":"admin","sys_created_on":"2012-03-14 14:43:35","name":"Regenerate all text indexes","sys_name":"Regenerate all text indexes","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"include_in_system_clone":"true","sys_created_by":"admin","order":"100","sys_policy":""},{"sys_mod_count":"3","active":"true","sys_updated_on":"2023-06-15 12:37:47","sys_tags":"","script":"/*\n    ===================================================================\n    After the instance is cloned, if any IDP related filter criterias(Identity Provider or IDP Attributes) \n    are being used in the policy conditions of the adaptive authentication, and adaptive authentication is\n    enabled, then it will disable such policies which have above filters associated.\n    ===================================================================\n*/\nthis.logInfo(\"Started running post clone cleantup script - Fix Adaptive Auth with IDP Filters\");\ntry {\n    disableAdaptiveAuthPolicyHavingIDPFilters();\n    this.logInfo(\"Completed running script Fix Adaptive Auth with IDP Filters\");\n} catch (e) {\n    this.logError(\"Exception occured while running script Fix Adaptive Auth with IDP Filters. \" + e.message);\n    this.logError(e);\n}\n\nfunction disableAdaptiveAuthPolicyHavingIDPFilters() {\n      var m2mGr = new GlideRecord(\"sys_authentication_policy_criteria_m2m\");\n      if (m2mGr.isValid()) {\n          m2mGr.addEncodedQuery(\"sys_auth_filter_criteria.ref_sys_generic_user_filter_criteria.typeINidentity_provider,idp_attribute^policy.active=true^used=true\");\n          m2mGr.query();\n          while (m2mGr.next()) {\n              var policyId = m2mGr.getValue(\"policy\");\n              //disable the AA Policy if its active..\n              if(m2mGr.policy.active){\n                  this.logInfo(\"Disabling Adaptive Authentication policy: \" + policyId);\n                  disablePolicy(policyId);\n              }\n          }\n      }\n}\n\nfunction disablePolicy(policyId) {\n    var policyGr = new GlideRecord(\"sys_authentication_policy\");\n    if (policyGr.isValid()) {\n        policyGr.get(policyId);\n        policyGr.setValue(\"active\", \"false\");\n        var result = policyGr.update();\n        if (GlideStringUtil.notNil(result)) {\n            this.logInfo(\"Adaptive Auth Policy disabled due to missing filters:\" + policyId);\n        }\n    }\n}\n\nfunction logInfo(message) {\n    gs.info(\"post_clone: AdaptiveAuth: \" + message);\n}\n\nfunction logError(message) {\n    gs.error(\"post_clone: AdaptiveAuth: \" + message);\n}","sys_class_name":"clone_cleanup_script","sys_id":"2acfa1137717211029fc1646ba5a992d","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/c46ca73b04352210559073c06a02f75c","value":"c46ca73b04352210559073c06a02f75c"},"default":"true","sys_update_name":"clone_cleanup_script_2acfa1137717211029fc1646ba5a992d","sys_updated_by":"maint","sys_created_on":"2023-06-13 11:59:44","name":"Fix Adaptive Auth with IDP Filters","sys_name":"Fix Adaptive Auth with IDP Filters","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"include_in_system_clone":"true","sys_created_by":"admin","order":"100","sys_policy":""},{"sys_mod_count":"1","active":"true","sys_updated_on":"2018-03-09 21:28:59","sys_tags":"","script":"var doesMidExist = function(midSysIdToCheck) {\n\treturn midSysIdToCheck && (new GlideRecord('ecc_agent')).get('sys_id', midSysIdToCheck);\n};\n\nvar agentApplicationGlideRecord = new GlideRecord('ecc_agent_application'),\n\tsource = 'MIDApplicationCloning',\n\tmessage = '';\nagentApplicationGlideRecord.query();\n\nwhile (agentApplicationGlideRecord.next()) {\n\n\tif (JSUtil.notNil(agentApplicationGlideRecord.default_mid_server) && !doesMidExist(agentApplicationGlideRecord.default_mid_server)) {\n\t\tmessage = 'Default MID server \"' + agentApplicationGlideRecord.default_mid_server + '\" for \"' + agentApplicationGlideRecord.name + '\" MID application doesn\\'t exist on this instance and will be removed from this application.';\n\t\tMIDServerUtil.createOrUpdateIssue('', source, message);\n\t\tagentApplicationGlideRecord.default_mid_server = '';\n\t\tagentApplicationGlideRecord.update();\n\t\tMIDServerUtil.resolveExistingIssues('', source, message);\n\t}\n}","sys_class_name":"clone_cleanup_script","sys_id":"34c7a57c9f30130055063758442e705a","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/42b8273704f12210559073c06a02f78d","value":"42b8273704f12210559073c06a02f78d"},"default":"true","sys_update_name":"clone_cleanup_script_34c7a57c9f30130055063758442e705a","sys_updated_by":"oron.subayi","sys_created_on":"2018-03-09 21:17:21","name":"Clean Non-Existent MIDs From Application","sys_name":"Clean Non-Existent MIDs From Application","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"include_in_system_clone":"true","sys_created_by":"oron.subayi","order":"100","sys_policy":""},{"sys_mod_count":"1","active":"true","sys_updated_on":"2025-06-05 05:48:00","sys_tags":"","script":"if (new sn_ais.StatusApi().isAisEnabled() && gs.getProperty('glide.ais.parallel_ingestion', 'false') == 'true')\n    new sn_ais.AisUtil().setParallelIngestionProcessor(1);","sys_class_name":"clone_cleanup_script","sys_id":"35a263c9b7235210ad59f89f9e11a932","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/76946b3f04312210559073c06a02f73b","value":"76946b3f04312210559073c06a02f73b"},"default":"true","sys_update_name":"clone_cleanup_script_35a263c9b7235210ad59f89f9e11a932","sys_updated_by":"system","sys_created_on":"2025-02-04 19:37:19","name":"Migrate To Single Node Ingestion","sys_name":"Migrate To Single Node Ingestion","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"include_in_system_clone":"true","sys_created_by":"admin","order":"100","sys_policy":""},{"sys_mod_count":"1","active":"true","sys_updated_on":"2024-05-19 04:12:35","sys_tags":"","script":"/*\n    ======================================================================================================\n    After the instance is cloned, if the user record which was present earlier in the target but removed \n\tafter clone, for those user records, the multi factor auth tables will have the broken reference in these\n\ttables - security_nonce, user_multifactor_auth and sys_user_multi_factor_setup. This script is to identify\n\tsuch records from these tables and delete the identified broken records itself from the target instance.\n    ======================================================================================================\n*/\nthis.logInfo(\"Started running post clone cleantup script - Clear Broken Multi Factor User Records\");\ntry {\n    removeBrokenUserRecordsFromTable('security_nonce');\n    removeBrokenUserRecordsFromTable('user_multifactor_auth');\n    removeBrokenUserRecordsFromTable('sys_user_multi_factor_setup');\n    removeBrokenUserRecordsFromTable('sys_user_public_credential');\n    this.logInfo(\"Completed running script Fix Multi Factor Tables\");\n} catch (e) {\n    this.logError(\"Exception occured while running script Clear Broken Multi Factor User Records: \" + e.message);\n    this.logError(e);\n}\n\nfunction removeBrokenUserRecordsFromTable(tableName){\n    var glideRecord = new GlideRecord(tableName);\n    if (!glideRecord.isValid())\n        return;\n\n    glideRecord.addEncodedQuery(\"userISNOTEMPTY^user.sys_idISEMPTY\");\n    glideRecord.query();\n    if(!glideRecord.next())\n        return;\n\n    glideRecord.deleteMultiple();\n    this.logInfo(\"Fixed broken user records in table : \" + tableName);\n}\n\nfunction logInfo(message) {\n    gs.info(\"post_clone: Multi Factor Auth: \" + message);\n}\n\nfunction logError(message) {\n    gs.error(\"post_clone: Multi Factor Auth: \" + message);\n}","sys_class_name":"clone_cleanup_script","sys_id":"417a0081771202104bb41646ba5a995c","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/d7152f3304712210559073c06a02f70f","value":"d7152f3304712210559073c06a02f70f"},"default":"true","sys_update_name":"clone_cleanup_script_417a0081771202104bb41646ba5a995c","sys_updated_by":"maint","sys_created_on":"2024-05-19 04:11:19","name":"Clear Broken Multi Factor User Records","sys_name":"Clear Broken Multi Factor User Records","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"include_in_system_clone":"true","sys_created_by":"maint","order":"100","sys_policy":""},{"sys_mod_count":"2","active":"true","sys_updated_on":"2022-02-04 23:53:50","sys_tags":"","script":"var result = new SNC.VaultUtilAPI().clearToken();\ngs.info(\"Cleared Token: \" + result);\n","sys_class_name":"clone_cleanup_script","sys_id":"43c829e707010110aeee9ad77cd30019","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/7f83a3f304312210559073c06a02f787","value":"7f83a3f304312210559073c06a02f787"},"default":"true","sys_update_name":"clone_cleanup_script_43c829e707010110aeee9ad77cd30019","sys_updated_by":"admin","sys_created_on":"2022-01-20 17:23:20","name":"Clear Vault Token","sys_name":"Clear Vault Token","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"include_in_system_clone":"true","sys_created_by":"admin","order":"100","sys_policy":""},{"sys_mod_count":"0","active":"true","sys_updated_on":"2020-03-05 14:48:31","sys_tags":"","script":"var gr = new GlideRecord('sys_repo_config');\ngr.query();\ngs.info('Set current ref for SC apps post clone script processing ' + gr.getRowCount() + ' repository configurations.');\nwhile (gr.next()) {\n\tvar tagName = '';\n\tvar currentRef = '';\n\tvar appId = gr.getValue('sys_app');\n\tvar repoId = gr.getUniqueValue();\n\tgs.info('Updating current ref for repo ' + repoId + ' for app ' + appId);\n\n\tvar custGr = new GlideRecord('sys_app_customization');\n\tcustGr.addQuery('vendor_app', appId);\n\tcustGr.query();\n\tif (custGr.next()) {\n\t\tif (custGr.getValue('version') === 'none') {\n\t\t\tgs.info('The customization is not currently installed');\n\t\t} else {\n\t\t\ttagName = custGr.getValue('version');\n\t\t\tgs.info('Current customization version ' + tagName);\n\t\t}\n\t} else {\n\t\tvar appGr = new GlideRecord('sys_app');\n\t\tif (appGr.get(appId)) {\n\t\t\ttagName = appGr.getValue('version');\n\t\t\tgs.info('Current app version ' + tagName);\n\t\t}\n\t}\n\n\tif (tagName !== '') {\n\t\tvar tagGr = new GlideRecord('sys_repo_tag');\n\t\ttagGr.addQuery('sys_repo_config', repoId);\n\t\ttagGr.addQuery('name', tagName);\n\t\ttagGr.query();\n\t\tif (tagGr.next())\n\t\t\tcurrentRef = tagGr.getValue('object_id');\n\t}\n\n\tgs.info('Setting current ref to ' + currentRef + ' for repo ' + repoId);\n\tgr.setValue('current_ref', currentRef);\n\tgr.update();\n}","sys_class_name":"clone_cleanup_script","sys_id":"4c9054be531300105e97ddeeff7b12f7","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/2954e3bb04312210559073c06a02f7ef","value":"2954e3bb04312210559073c06a02f7ef"},"default":"true","sys_update_name":"clone_cleanup_script_4c9054be531300105e97ddeeff7b12f7","sys_updated_by":"admin","sys_created_on":"2020-03-04 23:18:08","name":"Set current ref for SC apps","sys_name":"Delete current ref for SC apps","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"include_in_system_clone":"true","sys_created_by":"admin","order":"100","sys_policy":""},{"sys_mod_count":"0","active":"true","sys_updated_on":"2012-03-19 23:18:08","sys_tags":"","script":"gs.setProperty(\"glide.email.read.active\", false);\r\ngs.setProperty(\"glide.email.smtp.active\", false);","sys_class_name":"clone_cleanup_script","sys_id":"5a6896f2373020006e6f80f7bcbe5d89","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/3b83a3f304312210559073c06a02f788","value":"3b83a3f304312210559073c06a02f788"},"default":"true","sys_update_name":"clone_cleanup_script_5a6896f2373020006e6f80f7bcbe5d89","sys_updated_by":"admin","sys_created_on":"2012-03-19 23:18:08","name":"Disable emails","sys_name":"Disable emails","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"include_in_system_clone":"true","sys_created_by":"admin","order":"100","sys_policy":""},{"sys_mod_count":"6","active":"true","sys_updated_on":"2022-09-20 15:35:41","sys_tags":"","script":"gs.log(\"App Collaborator Permissions Resync - START\");\nvar synchronizer = new AppCollabPermissionResynchronizer();\nvar message = { message: \"App Collaborator Permissions Resync - FAILED\" };\n\ntry {\n\tsynchronizer.syncCollaborators(true);\n} catch (error) {\n\tmessage.exception = error;\n\tgs.log(JSON.stringify(message));\n}","sys_class_name":"clone_cleanup_script","sys_id":"5ae0b884c371111085c091294440dda1","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/5c5f3f3ec3622210ed4bd50d05013133","value":"5c5f3f3ec3622210ed4bd50d05013133"},"default":"false","sys_update_name":"clone_cleanup_script_5ae0b884c371111085c091294440dda1","sys_updated_by":"admin","sys_created_on":"2022-09-07 21:23:52","name":"ReSync App Collaborator Permissions","sys_name":"ReSync App Collaborator Permissions","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"include_in_system_clone":"true","sys_created_by":"admin","order":"1000","sys_policy":"read"},{"sys_mod_count":"4","active":"true","sys_updated_on":"2012-05-16 00:10:30","sys_tags":"","script":"var separationExceptionFieldProperty = gs.getProperty(\"glide.db.separation.exception.field\");\r\nvar separationFieldProperty = gs.getProperty(\"glide.db.separation.field\");\r\n \r\nif(separationExceptionFieldProperty  || separationFieldProperty){\r\n    var pm = new GlidePluginManager();\r\n     pm.registerPlugin(\"com.glide.separation\");\r\n}","sys_class_name":"clone_cleanup_script","sys_id":"5b6372c597422000f309124eda2975d4","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/3b83a3f304312210559073c06a02f788","value":"3b83a3f304312210559073c06a02f788"},"default":"true","sys_update_name":"clone_cleanup_script_5b6372c597422000f309124eda2975d4","sys_updated_by":"admin","sys_created_on":"2012-05-15 20:26:27","name":"Install deactivated plugin","sys_name":"Install deactivated plugin","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"include_in_system_clone":"true","sys_created_by":"admin","order":"100","sys_policy":""},{"sys_mod_count":"6","active":"true","sys_updated_on":"2020-01-23 04:34:07","sys_tags":"","script":"if (GlidePluginManager.isRegistered('com.glide.email_accounts')) {\n\tvar accounts = new GlideRecord('sys_email_account');\n\n\tif (accounts.isValid()) {\n\t\taccounts.query();\n\n\t\t//Assumption is that Email Accounts was enabled on source instance and not target instance.\n\t\tif (!accounts.hasNext() && (typeof EmailAccountsMigrator !== 'undefined')) {\n\t\t\tvar migrator = new EmailAccountsMigrator();\n\t\t\tmigrator.migrateEmailProperties();\n\t\t}\n\t}\n}","sys_class_name":"clone_cleanup_script","sys_id":"6404ad03eb303100c8690e815206fe82","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/3b83a3f304312210559073c06a02f788","value":"3b83a3f304312210559073c06a02f788"},"default":"true","sys_update_name":"clone_cleanup_script_6404ad03eb303100c8690e815206fe82","sys_updated_by":"admin","sys_created_on":"2014-12-09 21:23:03","name":"Configure Email Accounts","sys_name":"Configure Email Accounts","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"include_in_system_clone":"true","sys_created_by":"admin","order":"100","sys_policy":""},{"sys_mod_count":"1","active":"false","sys_updated_on":"2022-10-18 11:22:58","sys_tags":"","script":"try {\n    var ops = new PIPluginPostCloneOperations();\n    ops.reactivate();\n} catch (error) {\n   gs.error(sn_i18n.Message.getMessage(\"piplugin-clone-cleanup-script\",\"Error while executing Reactivation in Predictive Intelligence Plugin Post clone operations {error}\",{error: error}));\n}","sys_class_name":"clone_cleanup_script","sys_id":"8d805b2247225150926d7372846d4352","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/3b83a3f304312210559073c06a02f788","value":"3b83a3f304312210559073c06a02f788"},"default":"false","sys_update_name":"clone_cleanup_script_8d805b2247225150926d7372846d4352","sys_updated_by":"admin","sys_created_on":"2022-10-18 08:08:36","name":"PI Training Schedules Reactivation","sys_name":"PI Training Schedules Reactivation","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"include_in_system_clone":"true","sys_created_by":"admin","order":"200","sys_policy":""},{"sys_mod_count":"6","active":"true","sys_updated_on":"2022-10-18 11:22:52","sys_tags":"","script":"try {\n    var ops = new PIPluginPostCloneOperations();\n    ops.deactivate();\n} catch (error) {\n   gs.error(sn_i18n.Message.getMessage(\"piplugin-clone-cleanup-script\",\"Error while executing Deactivation in Predictive Intelligence Plugin Post clone operations {error}\",{error: error}));\n}","sys_class_name":"clone_cleanup_script","sys_id":"a789e42d773111105de60f207b5a991c","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/3b83a3f304312210559073c06a02f788","value":"3b83a3f304312210559073c06a02f788"},"default":"true","sys_update_name":"clone_cleanup_script_a789e42d773111105de60f207b5a991c","sys_updated_by":"admin","sys_created_on":"2022-09-07 10:36:53","name":"PI Training Schedules Deactivation","sys_name":"PI Training Schedules Deactivation","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"include_in_system_clone":"true","sys_created_by":"admin","order":"100","sys_policy":""},{"sys_mod_count":"5","active":"true","sys_updated_on":"2012-03-23 20:05:51","sys_tags":"","script":"if ('true' == gs.getProperty(\"glide.db.clone.rollback_allowed\", true)) {\r\n  gs.print(\"Scheduling drop backup tables task\");\r\n  new SncScheduleDropBackupTablesTask().run();\r\n} else\r\n  gs.print(\"Rollback is disabled - skipping scheduling backup tables (they are dropped immediately)\");","sys_class_name":"clone_cleanup_script","sys_id":"e001c60037012000414180f7bcbe5d2b","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/3b83a3f304312210559073c06a02f788","value":"3b83a3f304312210559073c06a02f788"},"default":"true","sys_update_name":"clone_cleanup_script_e001c60037012000414180f7bcbe5d2b","sys_updated_by":"admin","sys_created_on":"2012-03-23 18:49:45","name":"Schedule drop backup tables","sys_name":"Schedule drop backup tables","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"include_in_system_clone":"true","sys_created_by":"admin","order":"100","sys_policy":""},{"sys_mod_count":"8","active":"true","sys_updated_on":"2012-08-27 20:52:25","sys_tags":"","script":"var names = [];\r\nnames.push('Clean logs');\r\nnames.push('Clean Temp Files');\t\r\nnames.push('events process');\r\nnames.push('System - reduce resources');\r\n\r\nvar jobIds = getDuplicateJobSysIds(names);\r\ndeleteJobs(jobIds);\r\n\r\nfunction deleteJobs(sysIds) {\r\n\tgs.log(\"InstanceClone: deleting \" + sysIds.length + \" duplicate sys_trigger jobs\"); \r\n\tvar md = new GlideMultipleDelete('sys_trigger');\r\n\tmd.addQuery('sys_id', 'IN', sysIds);\r\n\tmd.execute();\r\n}\r\n\r\nfunction getDuplicateJobSysIds(names) {\r\n\tvar jobSysIds = [];\r\n\tvar jobs = [];\r\n\t\r\n\tvar gr = new GlideAggregate(\"sys_trigger\");\r\n\tgr.setWorkflow(false);\r\n\tgr.addAggregate(\"COUNT\", \"sys_id\");\r\n\tgr.addAggregate(\"MIN\", \"sys_id\");\r\n\tgr.addQuery(\"name\", \"IN\", names);\r\n\tgr.groupBy(\"name\");\r\n\tgr.groupBy(\"job_id\");\r\n\tgr.groupBy(\"trigger_type\");\r\n\tgr.groupBy(\"repeat\");\r\n\tgr.groupBy(\"system_id\");\r\n\tgr.addHaving(\"COUNT\", \">\", \"1\");\r\n\tgr.query();\r\n\r\n\twhile(gr.next()) {\r\n\t\tvar count = gr.getAggregate(\"COUNT\", \"sys_id\");\r\n\t\tvar firstSysId = gr.getAggregate(\"MIN\", \"sys_id\");\t\r\n\t\tif (count <= 1)\r\n\t\t\tcontinue;\r\n\t\r\n\t\tvar job = { \r\n\t\t\tname: gr.getValue(\"name\"), \r\n\t\t\tjob_id: gr.getValue(\"job_id\"), \r\n\t\t\ttrigger_type: gr.getValue(\"trigger_type\"),\r\n\t\t\trepeat: gr.getValue(\"repeat\"),\r\n\t\t\tsystem_id: gr.getValue(\"system_id\")||'',\r\n\t\t\tfirstSysId: firstSysId\r\n\t\t};\r\n\t\tjobs.push(job);\r\n\t}\r\n\tgr.close();\r\n\r\n\tfor (var i = 0; i < jobs.length; i++) {\r\n\t\tvar job = jobs[i];\r\n\t\tvar grd = new GlideRecord(\"sys_trigger\");\r\n\t\tgrd.addQuery(\"name\", job.name);\r\n\t\tgrd.addQuery(\"job_id\", job.job_id);\r\n\t\tgrd.addQuery(\"trigger_type\", job.trigger_type);\r\n\t\tgrd.addQuery(\"repeat\", job.repeat);\r\n\t\tgrd.addQuery(\"system_id\", job.system_id);\r\n\t\tgrd.query();\r\n\t\r\n\t\twhile (grd.next()) {\r\n\t\t\tvar sysId = grd.getValue(\"sys_id\");\r\n\t\t\tif (sysId == job.firstSysId) {\r\n\t\t\t\tgs.log(\"InstanceClone: skipping FIRST sys_trigger duplicate job: \" + job.name + \" (sys_id=\" + sysId + \")\");\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tgs.log(\"InstanceClone: marking sys_trigger duplicate job for deletion: \" + job.name + \" (sys_id=\" + sysId + \")\");\r\n\t\t\tjobSysIds.push(sysId);\r\n\t\t}\r\n\t\tgrd.close();\r\n\t}\r\n\t\r\n\treturn jobSysIds;\r\n}","sys_class_name":"clone_cleanup_script","sys_id":"ea24d3970a0006657ae48ca0249bd162","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/3b83a3f304312210559073c06a02f788","value":"3b83a3f304312210559073c06a02f788"},"default":"true","sys_update_name":"clone_cleanup_script_ea24d3970a0006657ae48ca0249bd162","sys_updated_by":"maint","sys_created_on":"2011-03-24 23:15:57","name":"Clear scheduled job node association","sys_name":"Clear scheduled job node association","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"include_in_system_clone":"true","sys_created_by":"jeremiah.hall","order":"100","sys_policy":""},{"sys_mod_count":"0","active":"true","sys_updated_on":"2020-07-14 21:41:32","sys_tags":"","script":"new SNC.KMFKeyExchangePostCloneAPI().startKeyExchangeClone();","sys_class_name":"clone_cleanup_script","sys_id":"fda9d089c7021010e7bacb6b1dc2608e","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/7f83a3f304312210559073c06a02f787","value":"7f83a3f304312210559073c06a02f787"},"default":"true","sys_update_name":"clone_cleanup_script_fda9d089c7021010e7bacb6b1dc2608e","sys_updated_by":"admin","sys_created_on":"2020-07-14 21:41:32","name":"Exchange Keys for Modules","sys_name":"Exchange Keys for Modules","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"include_in_system_clone":"true","sys_created_by":"admin","order":"100","sys_policy":""}]}