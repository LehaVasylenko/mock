{"result":[{"sys_mod_count":"1","validator":"function validate(value) { \n   if (value == null || value == \"\")\n      return true;\n   if (isEmailValid(value))\n      return true;\n   else\n      return new GwtMessage().getMessage(\"Invalid email address\");\n}","active":"true","description":"Service Catalog Email Validator","sys_updated_on":"2016-04-26 13:00:31","sys_tags":"","sys_class_name":"sys_script_validator","sys_id":"1602fb8147031200e0ef563dbb9a7129","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/3028ab3304f12210559073c06a02f7b7","value":"3028ab3304f12210559073c06a02f7b7"},"ui_type":"0","sys_update_name":"sys_script_validator_1602fb8147031200e0ef563dbb9a7129","sys_updated_by":"admin","sys_created_on":"2016-04-26 13:00:17","sys_name":"sc_email","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"internal_type":"sc_email","sys_created_by":"admin","sys_policy":""},{"sys_mod_count":"2","validator":"function validate(value) {\n    if(!containsOnlyChars(g_user_decimal_separator + g_user_grouping_separator + \" 0123456789-+()\", value))\n        return new GwtMessage().getMessage(\"Invalid number\");\n\n    return true;\n}","active":"true","description":"Validate  phone numbers only consit of numbers and phone characters","sys_updated_on":"2021-08-26 23:11:10","sys_tags":"","sys_class_name":"sys_script_validator","sys_id":"16d53910b7927010d22640008e11a9c8","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/9543af3304312210559073c06a02f769","value":"9543af3304312210559073c06a02f769"},"ui_type":"0","sys_update_name":"sys_script_validator_16d53910b7927010d22640008e11a9c8","sys_updated_by":"admin","sys_created_on":"2021-08-26 23:07:35","sys_name":"ph_number","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"internal_type":"ph_number","sys_created_by":"admin","sys_policy":""},{"sys_mod_count":"46","validator":"function validate(value, fieldName) {\n\tif(!NOW.sp)\n\t\treturn true;\n\n\tvar validator = function(callback) {\n\t\tif (!value) { \n\t\t\tcallback(fieldName, true);\n\t\t\treturn;\n\t\t}\n\n\t\t// disable validation for certain tables\n\t\tvar tableName = g_form.getTableName();\n\t\tif (tableName === 'sys_ui_script' || tableName === 'sys_script_client' || tableName === 'sys_script_validator') {\n\t\t\tcallback(fieldName, true);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvar ajax = new GlideAjax('XMLValidator');\n\t\tajax.addParam('sysparm_name', 'validate');\n\t\tajax.addParam('sysparm_xml', value);\n\t\tajax.getXMLAnswer(function(answer) {\n\t\t\tif (answer === null) {\n\t\t\t\tcallback(fieldName, true);\n\t\t\t} else {\n\t\t\t\tcallback(fieldName, false, answer);\n\t\t\t}\n\t\t});\n\t};\n\n\tvar executor = g_ui_scripts['sp.validation.executor']();\n\treturn executor.execute(fieldName, validator, g_validation_script_field_count, g_form, NOW);\n}","active":"true","description":"Validates XML fields in Service Portal.  Note that the fields that have \"xml_view\" field set to true in the dictionary will be validated as XML.","sys_updated_on":"2022-08-11 20:35:04","sys_tags":"","sys_class_name":"sys_script_validator","sys_id":"1a35961de7721300b2888f49c2f6a997","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/69996b7b04f12210559073c06a02f7e2","value":"69996b7b04f12210559073c06a02f7e2"},"ui_type":"1","sys_update_name":"sys_script_validator_1a35961de7721300b2888f49c2f6a997","sys_updated_by":"admin","sys_created_on":"2018-06-18 23:29:21","sys_name":"xml","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"internal_type":"xml","sys_created_by":"admin","sys_policy":""},{"sys_mod_count":"5","validator":"function validate(value, fieldName) {\n    if (!NOW.sp)\n        return true;\n\n    var validator = function(callback) {\n        if (!value) {\n            callback(fieldName, true);\n            return;\n        }\n\n        // disable validation for certain tables\n        var tableName = g_form.getTableName();\n        if (tableName === 'sys_ui_script' || tableName === 'sys_script_client' || tableName === 'sys_script_validator') {\n            callback(fieldName, true);\n            return;\n        }\n\n        var sysId = g_form.getUniqueValue();\n        var useEsLatest = typeof g_form.useEsLatest === 'function' ? g_form.useEsLatest() : undefined;\n        if (sysId == '-1' && useEsLatest) {\n            callback(fieldName, true);\n            return;\n        }\n        var ajax = new GlideAjax('JSValidator');\n        var scope = g_form.getValue('sys_scope');\n        ajax.addParam('sysparm_name', 'validate');\n        ajax.addParam('sysparm_js_expression', value);\n        ajax.addParam('sysparm_scope', scope);\n        ajax.addParam('sysparm_table', tableName);\n        ajax.addParam('sysparm_id', sysId);\n        if (typeof useEsLatest !== 'undefined')\n            ajax.addParam('sysparm_use_es_latest', useEsLatest);\n        ajax.getXMLAnswer(function(answer) {\n            if (answer === null) {\n                callback(fieldName, true);\n            } else {\n                getMessage('Could not save record because of a compile error', function(trnsErrMsg) {\n                    callback(fieldName, false, trnsErrMsg + ': ' + answer);\n                });\n            }\n        });\n    };\n\n    var executor = g_ui_scripts['sp.validation.executor']();\n    return executor.execute(fieldName, validator, g_validation_script_field_count, g_form, NOW);\n}","active":"true","description":"Tests that a piece of javascript contains no compile errors in Service Portal","sys_updated_on":"2024-11-28 07:20:53","sys_tags":"","sys_class_name":"sys_script_validator","sys_id":"21abcad1e7721300b2888f49c2f6a916","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/69996b7b04f12210559073c06a02f7e2","value":"69996b7b04f12210559073c06a02f7e2"},"ui_type":"1","sys_update_name":"sys_script_validator_21abcad1e7721300b2888f49c2f6a916","sys_updated_by":"admin","sys_created_on":"2018-06-18 22:45:02","sys_name":"script","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"internal_type":"script","sys_created_by":"admin","sys_policy":""},{"sys_mod_count":"36","validator":"function validate(value, fieldName) {\n\t\t\tif(!NOW.sp)\n\t\t\t\treturn true;\n\t\t\t\n\t\t\tvar validator = function(callback) {\n\t\t\t\tif (value === null || value === '') { \n\t\t\t\t\tcallback(fieldName, true); \n\t\t\t\t\treturn ;\n\t\t\t\t}\n\t\t\t\tvar ajax = new GlideAjax('IPAddressValidator');\n\t\t\t\tajax.addParam('sysparm_name', 'validateMobileAndServicePortal');\n\t\t\t\tajax.addParam('table', g_form.getTableName());\n\t\t\t\tajax.addParam('field', fieldName);\n\t\t\t\tajax.addParam('value', value);\n\t\t\t\tajax.getXMLAnswer(function(answer) {\n\t\t\t\t\tif (answer == \"false\") {\n\t\t\t\t\t\tgetMessage(\"is an invalid IP address\", function(trnsErrMsg) { \n\t\t\t\t\t\t\tcallback(fieldName, false, value + \" \" + trnsErrMsg); \n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse { \n\t\t\t\t\t\tcallback(fieldName, true); \n\t\t\t\t\t}\n\t\t\t\t});\t\t\n\t\t\t};\n\t\t\tvar executor = g_ui_scripts['sp.validation.executor']();\n\t\t\treturn executor.execute(fieldName, validator, g_validation_script_field_count, g_form, NOW);\n\t\t}","active":"true","description":"Validates IPv4/IPv6 address in Service Portal","sys_updated_on":"2022-02-24 00:09:37","sys_tags":"","sys_class_name":"sys_script_validator","sys_id":"271f9197db0a301000862baf059619d4","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/69996b7b04f12210559073c06a02f7e2","value":"69996b7b04f12210559073c06a02f7e2"},"ui_type":"1","sys_update_name":"sys_script_validator_271f9197db0a301000862baf059619d4","sys_updated_by":"admin","sys_created_on":"2021-08-23 18:53:20","sys_name":"ip_addr","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"internal_type":"ip_addr","sys_created_by":"admin","sys_policy":""},{"sys_mod_count":"14","validator":"function validate(value) {\n    if(!containsOnlyChars(g_user_decimal_separator + g_user_grouping_separator + \" 0123456789-\", value))\n        return new GwtMessage().getMessage(\"Invalid number\");\n\t\n    return true;\n}","active":"true","description":"Valid numbers contain only numbers, comma, decimal, or negation","sys_updated_on":"2012-11-29 11:54:41","sys_tags":"","sys_class_name":"sys_script_validator","sys_id":"2739ef2c0a0a0a6f00c6caa5c548550c","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/9543af3304312210559073c06a02f769","value":"9543af3304312210559073c06a02f769"},"ui_type":"0","sys_update_name":"sys_script_validator_2739ef2c0a0a0a6f00c6caa5c548550c","sys_updated_by":"admin","sys_created_on":"2007-06-13 22:36:15","sys_name":"numeric","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"internal_type":"numeric","sys_created_by":"glide.maint","sys_policy":""},{"sys_mod_count":"13","validator":"function validate(value) { \n    if(!containsOnlyChars( g_user_grouping_separator + \" 0123456789-\", value))\n        return new GwtMessage().getMessage(\"Invalid integer\");\n    return true;\n}","active":"true","description":"Valid integers contain only numbers, comma, or negation","sys_updated_on":"2025-06-05 05:18:03","sys_tags":"","sys_class_name":"sys_script_validator","sys_id":"273b72af0a0a0a6f00d93f8688201934","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/9543af3304312210559073c06a02f769","value":"9543af3304312210559073c06a02f769"},"ui_type":"0","sys_update_name":"sys_script_validator_273b72af0a0a0a6f00d93f8688201934","sys_updated_by":"system","sys_created_on":"2007-06-13 22:36:53","sys_name":"integer","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"internal_type":"integer","sys_created_by":"glide.maint","sys_policy":""},{"sys_mod_count":"12","validator":"function validate(value) { \n    if(!containsOnlyChars(g_user_decimal_separator + g_user_grouping_separator + \" 0123456789-\", value))\n        return new GwtMessage().getMessage(\"Invalid number\");\n\n    return true;\n}","active":"true","description":"Valid floats contain only numbers, comma, decimal, or negation","sys_updated_on":"2025-06-05 05:18:03","sys_tags":"","sys_class_name":"sys_script_validator","sys_id":"273bc4410a0a0a6f00ae32e5a0001e0c","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/9543af3304312210559073c06a02f769","value":"9543af3304312210559073c06a02f769"},"ui_type":"0","sys_update_name":"sys_script_validator_273bc4410a0a0a6f00ae32e5a0001e0c","sys_updated_by":"system","sys_created_on":"2007-06-13 22:37:14","sys_name":"float","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"internal_type":"float","sys_created_by":"glide.maint","sys_policy":""},{"sys_mod_count":"82","validator":"function validate(value) {\n    if (g_form.getTableName() === 'sys_ui_script' || g_form.getTableName() === 'sys_script_client')\n        return true;\n\n\tif (g_form.getTableName() === 'sys_module') {\n\t\tvar path = g_form.getValue('path');\n\t\tif (path && !path.endsWith(\".js\" ) && !path.endsWith(\".ts\"))\n\t\t\treturn true;\n\t}\n\n    var ajax = new GlideAjax('JSValidator');\n    var scope = g_form.getValue('sys_scope');\n    ajax.addParam('sysparm_name', 'validate');\n    ajax.addParam('sysparm_js_expression', value);\n    ajax.addParam('sysparm_scope', scope);\n    ajax.addParam('sysparm_table', g_form.getTableName());\n    ajax.addParam('sysparm_id', g_form.getUniqueValue());\n    ajax.addParam('sysparm_use_es_latest', g_form.useEsLatest());\n    ajax.getXMLWait();\n    var answer = ajax.getAnswer();\n    if (answer === null)\n        return true;\n\n    answer = getMessage(\"Could not save record because of a compile error: \" + answer);\n    return answer;\n}","active":"true","description":"Tests that a piece of javascript contains no compile errors   ","sys_updated_on":"2024-03-22 20:21:58","sys_tags":"","sys_class_name":"sys_script_validator","sys_id":"2780cf700a0a0a6f0060332eba6ab860","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/9543af3304312210559073c06a02f769","value":"9543af3304312210559073c06a02f769"},"ui_type":"0","sys_update_name":"sys_script_validator_2780cf700a0a0a6f0060332eba6ab860","sys_updated_by":"maint","sys_created_on":"2007-06-13 23:52:50","sys_name":"script_plain","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"internal_type":"script_plain","sys_created_by":"glide.maint","sys_policy":""},{"sys_mod_count":"38","validator":"function validate(value) {\n    if (g_form.getTableName() === 'sys_ui_script' || g_form.getTableName() === 'sys_script_client')\n        return true;\n\n\tif (g_form.getTableName() === 'sys_module') {\n\t\tvar path = g_form.getValue('path');\n\t\tif (path && !path.endsWith(\".js\" ) && !path.endsWith(\".ts\"))\n\t\t\treturn true;\n\t}\n\n    var ajax = new GlideAjax('JSValidator');\n    var scope = g_form.getValue('sys_scope');\n    ajax.addParam('sysparm_name', 'validate');\n    ajax.addParam('sysparm_js_expression', value);\n    ajax.addParam('sysparm_scope', scope);\n    ajax.addParam('sysparm_table', g_form.getTableName());\n    ajax.addParam('sysparm_id', g_form.getUniqueValue());\n    ajax.addParam('sysparm_use_es_latest', g_form.useEsLatest());\n    ajax.getXMLWait();\n    var answer = ajax.getAnswer();\n    if (answer === null)\n        return true;\n\n    answer = getMessage(\"Could not save record because of a compile error: \" + answer);\n    return answer;\n}","active":"true","description":"Tests that a piece of javascript contains no compile errors","sys_updated_on":"2024-03-22 20:22:07","sys_tags":"","sys_class_name":"sys_script_validator","sys_id":"279c99440a0a0a6f00872ceab0e759ed","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/9543af3304312210559073c06a02f769","value":"9543af3304312210559073c06a02f769"},"ui_type":"0","sys_update_name":"sys_script_validator_279c99440a0a0a6f00872ceab0e759ed","sys_updated_by":"maint","sys_created_on":"2007-06-14 00:23:00","sys_name":"script","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"internal_type":"script","sys_created_by":"glide.maint","sys_policy":""},{"sys_mod_count":"3","validator":"function validate(value) { \n    if(!containsOnlyChars(\".0123456789\", value) || value.indexOf(\"..\") != -1 || value.endsWith(\".\"))\n        return new GwtMessage().getMessage(\"Invalid version number.  Must use dot-decimal notation.\");\n\n    return true;\n}","active":"true","description":"Validates that the given version number contains only numbers separated by periods.","sys_updated_on":"2018-04-13 17:49:45","sys_tags":"","sys_class_name":"sys_script_validator","sys_id":"2a176d16c3321100bac14ddcddba8f97","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/fe0427f704312210559073c06a02f71a","value":"fe0427f704312210559073c06a02f71a"},"ui_type":"0","sys_update_name":"sys_script_validator_2a176d16c3321100bac14ddcddba8f97","sys_updated_by":"admin","sys_created_on":"2014-02-12 05:14:25","sys_name":"version","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"internal_type":"version","sys_created_by":"michael.hoefer","sys_policy":""},{"sys_mod_count":"32","validator":"function validate(value, fieldName) {\n   \tif (!(NOW.sp)) {\n\t\treturn true;\n\t}\n    var validator = function(callback) {\n        var isInvalid = g_form.getField(fieldName).isInvalidDateFormat;\n        if (isInvalid) {\n            getMessage(' ', function(trnsErrMsg) {\n                callback(fieldName, false, trnsErrMsg);\n            });\n        } else\n            callback(fieldName, !isInvalid);\n    };\n\n    var executor = g_ui_scripts['sp.validation.executor']();\n    return executor.execute(fieldName, validator, g_validation_script_field_count, g_form, NOW);\n}","active":"true","description":"Validator for Date field","sys_updated_on":"2020-06-17 17:52:47","sys_tags":"","sys_class_name":"sys_script_validator","sys_id":"2a7b4f2c77170010e46abe41a910618e","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/69996b7b04f12210559073c06a02f7e2","value":"69996b7b04f12210559073c06a02f7e2"},"ui_type":"1","sys_update_name":"sys_script_validator_2a7b4f2c77170010e46abe41a910618e","sys_updated_by":"admin","sys_created_on":"2020-02-28 04:31:26","sys_name":"glide_date","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"internal_type":"glide_date","sys_created_by":"admin","sys_policy":""},{"sys_mod_count":"5","validator":"function validate(value) {\n    var tableName = g_form.getElement('name').value;\n    var scopeId = g_form.getElement('sys_scope').value;\n    var ajax = new GlideAjax('FormulaValidator');\n    ajax.addParam('sysparm_name','validate');\n    ajax.addParam('sysparm_formula_expression',value);\n    ajax.addParam('sysparm_table',tableName);\n    ajax.addParam('sysparm_scope_id', scopeId);\n    ajax.getXMLWait();\n    var answer = ajax.getAnswer();\n\tif (JSON.parse(answer).valid === 'true') {\n\t\treturn null;\n\t}\n\tvar errors = JSON.parse(answer).errors;\n\tif (errors) {\n\t\tvar error = JSON.parse(errors);\n\t\tvar errorMsg = error[0].error;\n\t\tvar errorPosition = error[0].position;\n\t\tif(errorPosition == null)\n\t\t\tanswer = new GwtMessage().getMessage(\"Invalid Formula: {0}\", errorMsg);\n\t\telse \n\t\t\tanswer = new GwtMessage().getMessage(\"Invalid Formula: {0} between positions ({1})\", errorMsg, errorPosition);\n\t\treturn answer;\t\n\t}\n}","active":"true","description":"Tests that a piece of formula expression is valid","sys_updated_on":"2022-09-13 13:03:03","sys_tags":"","sys_class_name":"sys_script_validator","sys_id":"49f67f5aa3ba49102b40084566fcdaf1","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/7215eb3304712210559073c06a02f714","value":"7215eb3304712210559073c06a02f714"},"ui_type":"0","sys_update_name":"sys_script_validator_49f67f5aa3ba49102b40084566fcdaf1","sys_updated_by":"admin","sys_created_on":"2022-04-14 06:25:02","sys_name":"expression","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"internal_type":"expression","sys_created_by":"admin","sys_policy":""},{"sys_mod_count":"31","validator":"function validate(value, fieldName) {\n\tif(!NOW.sp)\n\t\treturn true;\n\n\tvar containsOnlyChars = function(validChars, text) {\n\t\tfor (var i = 0; i < text.length; i++) {\n\t\t\tvar c = text.charAt(i);\n\t\t\tif (validChars.indexOf(c) === -1) { return false; } // not a match\n\t\t}\n\n\t\treturn true;\n\t};\n\n\tvar validator = function(callback) {\n\t\tif (value === null || value === '') { callback(fieldName, true); }\n\t\telse if (!containsOnlyChars('.0123456789', value) || value.indexOf('..') != -1 || value.endsWith('.')) {\n\t\t\tgetMessage('Invalid version number. Must use dot-decimal notation.', function(trnsErrMsg) { \n\t\t\t\tcallback(fieldName, false, trnsErrMsg); \n\t\t\t});\n\t\t} else { callback(fieldName, true); }\n\t};\n\n\tvar executor = g_ui_scripts['sp.validation.executor']();\n\treturn executor.execute(fieldName, validator, g_validation_script_field_count, g_form, NOW);\n}","active":"true","description":"Validates that the given version number contains only numbers separated by periods in Mobile / Service Portal.","sys_updated_on":"2018-07-31 23:22:58","sys_tags":"","sys_class_name":"sys_script_validator","sys_id":"6aa70ce3e7511300b2888f49c2f6a95c","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/69996b7b04f12210559073c06a02f7e2","value":"69996b7b04f12210559073c06a02f7e2"},"ui_type":"1","sys_update_name":"sys_script_validator_6aa70ce3e7511300b2888f49c2f6a95c","sys_updated_by":"admin","sys_created_on":"2018-04-11 23:16:07","sys_name":"version","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"internal_type":"version","sys_created_by":"admin","sys_policy":""},{"sys_mod_count":"1","validator":"function validate(value) {\n\treturn isDate(value, getIntegerTimeFormat(g_user_date_time_format)) ? true : new GwtMessage().getMessage(\"Invalid Time. Please use format: {0}\", getIntegerTimeFormat(g_user_date_time_format));\n}\n\nfunction getIntegerTimeFormat(dateTimeFormat) {\n\tvar timeFormat = \"\";\n\tvar timeFormatArr = dateTimeFormat.split(\" \");\n\tif (timeFormatArr.length > 2)\n\t\ttimeFormat = timeFormatArr[1] + \" \" + timeFormatArr[2];\n\telse if (timeFormatArr.length == 2)\n\t\ttimeFormat = timeFormatArr[1];\n\telse\n\t\ttimeFormat = \"HH:mm:ss\";\n\treturn timeFormat;\n}","active":"true","description":"Validate an integer time based on a time format e.g.  'HH:mm:ss' for 24 hour and 'hh:mm:ss a' for 12 am/pm. Dots may substitute colons.\r\nPlatform provides global variable: g_user_date_time_format which is driven by combination of: glide.sys.date_format and glide.sys.time_format (separated by a space)\r\nThe following are valude for 24 hours\r\n00:00:00 to 23:59:59\r\n\r\ne.g.\r\n01:12:20 is valid\r\n1:12:20 is NOT valid\r\n\r\nThe following are valude for 12 hours\r\n01:00:00 am|pm to 12:59:59 am|pm\r\ne.g.\r\n1:00:00 pm and 1:00:00 am are NOT valid (must prefix with 0) unless the time format 'h:mm:ss a' is used.","sys_updated_on":"2016-02-19 13:54:55","sys_tags":"","sys_class_name":"sys_script_validator","sys_id":"703d2560d7001200f2d224837e6103ac","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/8c6ca73b04352210559073c06a02f754","value":"8c6ca73b04352210559073c06a02f754"},"ui_type":"","sys_update_name":"sys_script_validator_703d2560d7001200f2d224837e6103ac","sys_updated_by":"admin","sys_created_on":"2015-11-27 10:54:39","sys_name":"integer_time","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"internal_type":"integer_time","sys_created_by":"admin","sys_policy":""},{"sys_mod_count":"2","validator":"function validate(value) { \n    \tvar re = /(((ftp|http|https):\\/\\/)|(www\\.))([-\\w\\.\\/#$\\?=+@&%_:;]+)/gi;\n    \tif (value == null || value == \"\")\n        \t\treturn true;\n\tif (re.test(value)) { \n\t\treturn true;\n\t}\n\treturn false;\n}","active":"true","description":"Service Catalog URL Validator","sys_updated_on":"2018-06-07 04:19:39","sys_tags":"","sys_class_name":"sys_script_validator","sys_id":"742761b147431200e0ef563dbb9a71d2","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/3028ab3304f12210559073c06a02f7b7","value":"3028ab3304f12210559073c06a02f7b7"},"ui_type":"0","sys_update_name":"sys_script_validator_742761b147431200e0ef563dbb9a71d2","sys_updated_by":"admin","sys_created_on":"2016-04-28 10:55:17","sys_name":"sc_url","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"internal_type":"sc_url","sys_created_by":"admin","sys_policy":""},{"sys_mod_count":"4","validator":"function validate(value, fieldName) {\n\tvar re = /(((ftp|http|https):\\/\\/)|(www\\.))([-\\w\\.\\/#$\\?=+@&%_:;]+)/gi;\n    if (!(NOW.sp)) {\n        if (value == null || value == \"\") {\n            return true;\n        } else if (re.test(value)) {\n            return true;\n        } else {\n            g_form.$private.setFieldInvalid(fieldName, true);\n            getMessage('Invalid URL', function(trnsErrMsg) {\n                g_form.showFieldMsg(fieldName, trnsErrMsg, 'error');\n                g_form.$private.showFieldInvalidMsg(g_form);\n            });\n            return false;\n        }\n    }\n    var validator = function(callback) {\n        if (value == null || value == \"\") {\n            callback(fieldName, true);\n        } else if (re.test(value)) {\n            callback(fieldName, true);\n        } else {\n            g_form.$private.setFieldInvalid(fieldName, true);\n            getMessage('Invalid URL', function(trnsErrMsg) {\n                g_form.$private.setFieldInvalid(fieldName, false);\n                callback(fieldName, false, trnsErrMsg);\n            });\n        }\n    };\n\n    var executor = g_ui_scripts['sp.validation.executor']();\n    return executor.execute(fieldName, validator, g_validation_script_field_count, g_form, NOW);\n}","active":"true","description":"Validation of URL in Service Catalog Form in Mobile /\n\t\tService Portal\n\t","sys_updated_on":"2021-03-01 05:22:26","sys_tags":"","sys_class_name":"sys_script_validator","sys_id":"7f544ceadb082300e890f71fbf961991","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/d1c9ebbb04f12210559073c06a02f719","value":"d1c9ebbb04f12210559073c06a02f719"},"ui_type":"1","sys_update_name":"sys_script_validator_7f544ceadb082300e890f71fbf961991","sys_updated_by":"admin","sys_created_on":"2018-08-23 13:29:57","sys_name":"sc_url","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"internal_type":"sc_url","sys_created_by":"admin","sys_policy":""},{"sys_mod_count":"12","validator":"function validate(value) {\n    // empty fields are still valid dates\n    if(!value)\n        return true;\n\n    // We \"should\" have the global date format defined always defined. but there's always that edge case...\n    if(typeof g_user_date_time_format !== 'undefined')\n        return isDate(value, g_user_date_time_format) ? true : new GwtMessage().getMessage(\"Invalid Date: {0}. Must be a valid date in the format {1}\", value, g_user_date_time_format);\n\n    // if we don't have that defined, we can always try guessing\n    return parseDate(value) !== null ? true : getMessage(\"Invalid Date\");\n\t\n} ","active":"true","description":"","sys_updated_on":"2021-08-26 17:16:23","sys_tags":"","sys_class_name":"sys_script_validator","sys_id":"829b0bb0533131008d7d154f811c08f7","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/9543af3304312210559073c06a02f769","value":"9543af3304312210559073c06a02f769"},"ui_type":"0","sys_update_name":"sys_script_validator_829b0bb0533131008d7d154f811c08f7","sys_updated_by":"maint","sys_created_on":"2015-01-21 19:54:45","sys_name":"glide_date_time","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"internal_type":"glide_date_time","sys_created_by":"admin","sys_policy":""},{"sys_mod_count":"33","validator":"function validate(value, fieldName) {\n    if (!NOW.sp)\n        return true;\n    var validator = function(callback) {\n        if (!value) {\n            callback(fieldName, true);\n            return;\n        }\n\n        // disable validation for certain tables\n        var tableName = g_form.getTableName();\n        if (tableName === 'sys_ui_script' || tableName === 'sys_script_client' || tableName === 'sys_script_validator') {\n            callback(fieldName, true);\n            return;\n        }\n\n        var ajax = new GlideAjax('JSValidator');\n        var scope = g_form.getValue('sys_scope');\n        ajax.addParam('sysparm_name', 'validate');\n        ajax.addParam('sysparm_js_expression', value);\n        ajax.addParam('sysparm_scope', scope);\n        ajax.addParam('sysparm_id', g_form.getUniqueValue());\n        if (g_form.useEsLatest)\n            ajax.addParam('sysparm_use_es_latest', g_form.useEsLatest());\n\n        ajax.getXMLAnswer(function(answer) {\n            if (answer === null) {\n                callback(fieldName, true);\n            } else {\n                getMessage('Could not save record because of a compile error', function(trnsErrMsg) {\n                    callback(fieldName, false, trnsErrMsg + ': ' + answer);\n                });\n            }\n        });\n    };\n\n    var executor = g_ui_scripts['sp.validation.executor']();\n    return executor.execute(fieldName, validator, g_validation_script_field_count, g_form, NOW);\n}","active":"true","description":"Tests that a piece of javascript contains no compile errors in Service Portal","sys_updated_on":"2024-02-29 19:49:44","sys_tags":"","sys_class_name":"sys_script_validator","sys_id":"97e24a5de7321300b2888f49c2f6a950","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/69996b7b04f12210559073c06a02f7e2","value":"69996b7b04f12210559073c06a02f7e2"},"ui_type":"1","sys_update_name":"sys_script_validator_97e24a5de7321300b2888f49c2f6a950","sys_updated_by":"admin","sys_created_on":"2018-06-18 22:03:02","sys_name":"script_plain","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"internal_type":"script_plain","sys_created_by":"admin","sys_policy":""},{"sys_mod_count":"3","validator":"function validate(value, fieldName) {\n\tvar validatorFn = g_ui_scripts['utils.validators.email']();\n    if (!(NOW.sp)) {\n        if (value == null || value == \"\") {\n           return true;\n        } else if (validatorFn.isEmailValid(value) === true) {\n            return true;\n        } else {\n            g_form.$private.setFieldInvalid(fieldName, true);\n            getMessage('Invalid email address', function(trnsErrMsg) {\n                g_form.showFieldMsg(fieldName, trnsErrMsg, 'error');\n                g_form.$private.showFieldInvalidMsg(g_form);\n            });\n            return false;\n        }\n    }\n    var validator = function(callback) {\n        if (value == null || value == \"\") {\n            callback(fieldName, true);\n        } else if (validatorFn.isEmailValid(value) === true) {\n            callback(fieldName, true);\n        } else {\n            g_form.$private.setFieldInvalid(fieldName, true);\n            getMessage('Invalid email address', function(trnsErrMsg) {\n                g_form.$private.setFieldInvalid(fieldName, false);\n                callback(fieldName, false, trnsErrMsg);\n            });\n        }\n    };\n\n    var executor = g_ui_scripts['sp.validation.executor']();\n    return executor.execute(fieldName, validator, g_validation_script_field_count, g_form, NOW);\n}","active":"true","description":"Validation of email address in Service Catalog form in Mobile / Service Portal","sys_updated_on":"2021-03-01 05:44:34","sys_tags":"","sys_class_name":"sys_script_validator","sys_id":"9f138c6edb082300e890f71fbf9619a6","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/d1c9ebbb04f12210559073c06a02f719","value":"d1c9ebbb04f12210559073c06a02f719"},"ui_type":"1","sys_update_name":"sys_script_validator_9f138c6edb082300e890f71fbf9619a6","sys_updated_by":"admin","sys_created_on":"2018-08-23 13:19:43","sys_name":"sc_email","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"internal_type":"sc_email","sys_created_by":"admin","sys_policy":""},{"sys_mod_count":"4","validator":"function isValidPassword(value, field, isPortal) {\n    if (typeof field.useConfirmation !== 'undefined' && field.useConfirmation) {\n        if (isPortal)\n            return value === field.confirmPassword;\n        else\n            return value === field.confirmationValue;\n    }\n    return true;\n}\n\nfunction validate(value, fieldName) {\n    var field = g_form.$private.getField(fieldName);\n    var fieldLabel = field.label;\n    var isPortal = !!NOW.sp;\n    if (typeof g_aw !== 'undefined') {\n        if (isValidPassword(value, field, isPortal))\n            return true;\n        else {\n            g_form.addErrorMessage(format(getMessage(\"Error validating fields: {0}\"), fieldLabel));\n            return false;\n        }\n    } else {\n        if (!isPortal) {\n            if (isValidPassword(value, field, isPortal))\n                return true;\n            loadMessage(message, message);\n            g_form.addErrorMessage(getMessage(\"Error validating fields: {0}\", fieldLabel));\n            return false;\n        }\n        var validator = function(callback) {\n            if (isValidPassword(value, field, isPortal))\n                callback(fieldName, true);\n            else\n                callback(fieldName, false, \"\");\n        };\n        var executor = g_ui_scripts['sp.validation.executor']();\n        return executor.execute(fieldName, validator, g_validation_script_field_count, g_form, NOW);\n    }\n}","active":"true","description":"Catalog masked variable validator for workspace. Checks if the confirmation value matches the field value","sys_updated_on":"2021-04-14 17:52:47","sys_tags":"","sys_class_name":"sys_script_validator","sys_id":"b29f999173101010e88a0690fdf6a75c","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/3028ab3304f12210559073c06a02f7b7","value":"3028ab3304f12210559073c06a02f7b7"},"ui_type":"1","sys_update_name":"sys_script_validator_b29f999173101010e88a0690fdf6a75c","sys_updated_by":"admin","sys_created_on":"2020-04-19 21:36:26","sys_name":"masked","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"internal_type":"masked","sys_created_by":"admin","sys_policy":""},{"sys_mod_count":"39","validator":"function validate(value, fieldName) {\n\tif (!(NOW.sp)) {\n\t\treturn true;\n\t}\n    var validator = function(callback) {\n        var isInvalid = g_form.getField(fieldName).isInvalidDateFormat;\n        if (isInvalid) {\n            getMessage(' ', function(trnsErrMsg) {\n                callback(fieldName, false, trnsErrMsg);\n            });\n        } else\n            callback(fieldName, !isInvalid);\n    };\n\n    var executor = g_ui_scripts['sp.validation.executor']();\n    return executor.execute(fieldName, validator, g_validation_script_field_count, g_form, NOW);\n}","active":"true","description":"Validator for Date/Time field","sys_updated_on":"2020-06-17 00:17:34","sys_tags":"","sys_class_name":"sys_script_validator","sys_id":"c43ccb2c77170010e46abe41a91061cb","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/69996b7b04f12210559073c06a02f7e2","value":"69996b7b04f12210559073c06a02f7e2"},"ui_type":"1","sys_update_name":"sys_script_validator_c43ccb2c77170010e46abe41a91061cb","sys_updated_by":"admin","sys_created_on":"2020-02-28 04:31:46","sys_name":"glide_date_time","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"internal_type":"glide_date_time","sys_created_by":"admin","sys_policy":""},{"sys_mod_count":"13","validator":"function validate(value) {\r\n    if (value == \"\")\r\n       return true;\r\n\r\n    var code = value;\r\n    code = removeCommentsFromClientScript(code);\r\n\r\n    // take out the double quote strings, we do not want to check them\r\n    var doubleQuotePattern = /\"[^\"\\r\\n]*\"/g;\r\n    code = code.replace(doubleQuotePattern,\"\"); \r\n\r\n    // take out the single quote strings, we do not want to check them either\r\n    var singleQuotePattern = /'[^'\\r\\n]*'/g;\r\n    code = code.replace(singleQuotePattern,\"\");\r\n\r\n    // take out equality tests\r\n    var equalityPattern = /(={3}|={2})/g;\r\n    code = code.replace(equalityPattern,\"\");\r\n\r\n    // take out != <= >=\r\n    var otherEqualsPattern = /(!=|<=|>=)/g;\r\n    code = code.replace(otherEqualsPattern,\"\");\r\n\r\n    // are there any single equal signs?\r\n    if (code.indexOf(\"=\") > -1) {\r\n       // permit assignment if a var is declared, we'll assume you know what you're doing\r\n       var varPattern = /var\\s+\\S+\\s*=/;\r\n       if (!varPattern.test(code))\r\n          return new GwtMessage().getMessage(\"Use two equal signs to test equality; conditions should not do assignment\");\r\n    }\r\n\r\n    var ajax = new GlideAjax('JSValidator');\r\n    ajax.addParam('sysparm_name','validate');\r\n    ajax.addParam('sysparm_js_expression',value);\r\n    ajax.getXMLWait();\r\n    var answer = ajax.getAnswer();\r\n    if (answer == null)\r\n        return true;\r\n\r\n    return answer;\r\n}","active":"true","description":"Check that condition strings do not contain assignment.","sys_updated_on":"2025-06-05 05:18:03","sys_tags":"","sys_class_name":"sys_script_validator","sys_id":"c76bd312072200000ca55720e1021eef","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/9543af3304312210559073c06a02f769","value":"9543af3304312210559073c06a02f769"},"ui_type":"0","sys_update_name":"sys_script_validator_c76bd312072200000ca55720e1021eef","sys_updated_by":"system","sys_created_on":"2011-05-12 22:24:20","sys_name":"condition_string","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"internal_type":"condition_string","sys_created_by":"glide.maint","sys_policy":""},{"sys_mod_count":"17","validator":"function validate(value) { \n   if (value == null || value == \"\")\n      return true;\n   if (isEmailValid(value))\n      return true;\n   else\n      return new GwtMessage().getMessage(\"Invalid email address\");\n}","active":"true","description":"Validation of email address","sys_updated_on":"2025-06-05 05:18:03","sys_tags":"","sys_class_name":"sys_script_validator","sys_id":"d4d0a30f0a0a0b3a006933897dd8e416","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/9543af3304312210559073c06a02f769","value":"9543af3304312210559073c06a02f769"},"ui_type":"0","sys_update_name":"sys_script_validator_d4d0a30f0a0a0b3a006933897dd8e416","sys_updated_by":"system","sys_created_on":"2007-12-13 18:46:10","sys_name":"email","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"internal_type":"email","sys_created_by":"glide.maint","sys_policy":""},{"sys_mod_count":"9","validator":"function validate(value) { \n    if(!containsOnlyChars(g_user_decimal_separator + g_user_grouping_separator + \" 0123456789-\", value))\n        return new GwtMessage().getMessage(\"Invalid decimal number\");\n\t\n    return true;\n}","active":"true","description":"Valid numbers contain only numbers, comma, decimal, or negation","sys_updated_on":"2025-06-05 05:18:03","sys_tags":"","sys_class_name":"sys_script_validator","sys_id":"d530dee00a0a0b3a00fc4bb5294f71f0","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/9543af3304312210559073c06a02f769","value":"9543af3304312210559073c06a02f769"},"ui_type":"0","sys_update_name":"sys_script_validator_d530dee00a0a0b3a00fc4bb5294f71f0","sys_updated_by":"system","sys_created_on":"2007-12-13 20:27:38","sys_name":"decimal","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"internal_type":"decimal","sys_created_by":"glide.maint","sys_policy":""},{"sys_mod_count":"7","validator":"function validate(value) {\r\n    if (!value)\r\n       return true;\r\n\r\n    var ajax = new GlideAjax('XMLValidator');\r\n    ajax.addParam('sysparm_name','validate');\r\n    ajax.addParam('sysparm_xml',value);\r\n    ajax.getXMLWait();\r\n    var answer = ajax.getAnswer();\r\n    if (answer == null)\r\n        return true;\r\n\r\n    return answer;\r\n}","active":"true","description":"Validates XML fields.  Note that these fields that have \"xml_view\" field set to true in the dictionary will be validated as XML.","sys_updated_on":"2025-06-05 05:18:03","sys_tags":"","sys_class_name":"sys_script_validator","sys_id":"d5390a1d0a0004df6f6cd6bd9ee57e3f","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/9543af3304312210559073c06a02f769","value":"9543af3304312210559073c06a02f769"},"ui_type":"0","sys_update_name":"sys_script_validator_d5390a1d0a0004df6f6cd6bd9ee57e3f","sys_updated_by":"system","sys_created_on":"2010-09-03 01:33:17","sys_name":"xml","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"internal_type":"xml","sys_created_by":"glide.maint","sys_policy":""},{"sys_mod_count":"234","validator":"function validate(value) {\n\tif (!value)\n\t\treturn true;\n\n\tif (typeof g_scratchpad === 'undefined') {\n\t\t// If g_scratchpad is undefined, assume we should be doing strict validation of IPs\n\t\tvar ajax = new GlideAjax('IPAddressValidator');\n\t\tajax.addParam('sysparm_name', 'validateStrict');\n\t\tajax.addParam('ip_value', value);\n\t\tajax.getXMLWait();\n\t\tvar answer = ajax.getAnswer();\n\t\tif (answer === \"true\")\n\t\t\treturn true;\n\n\t\treturn new GwtMessage().getMessage(\"{0} is an invalid IP Address\", value);\n\t} else {\n\t\tif (!g_scratchpad['ip_address_validation'] || g_scratchpad['ip_address_validation'].length == 0) {\n\t\t\tvar tableName = g_form.getTableName();\n\t\t\tvar fields = [];\n\t\t\tvar values = [];\n\t\t\tfor (var i = 0; i < g_form['elements'].length; i++) {\n\t\t\t\tvar element = g_form['elements'][i];\n\t\t\t\tif (element['type'] == 'ip_addr') {\n\t\t\t\t\tfields.push(element['fieldName']);\n\t\t\t\t\tvalues.push(g_form.getValue(element['fieldName']));\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar ajax = new GlideAjax('IPAddressValidator');\n\t\t\tajax.addParam('sysparm_name', 'validateDesktop');\n\t\t\tajax.addParam('table', tableName);\n\t\t\tajax.addParam('fields', fields);\n\t\t\tajax.addParam('values', values);\n\t\t\tajax.getXMLWait();\n\t\t\tg_scratchpad['ip_address_validation'] = JSON.parse(ajax.getAnswer());\n\t\t}\n\t\tvar isValid = g_scratchpad['ip_address_validation'][0];\n\t\tg_scratchpad['ip_address_validation'].shift();\n\t\tif (isValid)\n\t\t\treturn true;\n\n\t\treturn new GwtMessage().getMessage(\"{0} is an invalid IP Address\", value);\n\t}\n}","active":"true","description":"Validates IPv4/IPv6 address","sys_updated_on":"2022-03-23 21:41:57","sys_tags":"","sys_class_name":"sys_script_validator","sys_id":"d8fe6ab33b2222002670239434efc46f","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/9543af3304312210559073c06a02f769","value":"9543af3304312210559073c06a02f769"},"ui_type":"0","sys_update_name":"sys_script_validator_d8fe6ab33b2222002670239434efc46f","sys_updated_by":"admin","sys_created_on":"2016-10-25 20:55:08","sys_name":"ip_addr","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"internal_type":"ip_addr","sys_created_by":"marjan.marzban","sys_policy":""},{"sys_mod_count":"32","validator":"function validate(value, fieldName) {\n\tif (!NOW.sp)\n\t\treturn true;\n\n\tvar validator = function(callback) {\n\t\tvar validator = g_ui_scripts['utils.validators.email']();\n\t\tif (value === null || value === '' || validator.isEmailValid(value) === true) { callback(fieldName, true); } \n\t\telse { getMessage('Invalid email address', function(trnsErrMsg) { callback(fieldName, false, trnsErrMsg); }); }\n\t};\n\n\tvar executor = g_ui_scripts['sp.validation.executor']();\n\treturn executor.execute(fieldName, validator, g_validation_script_field_count, g_form, NOW);\n}","active":"true","description":"Validation of email address in Mobile / Service Portal","sys_updated_on":"2018-07-31 23:24:19","sys_tags":"","sys_class_name":"sys_script_validator","sys_id":"e39fd717e7111300b2888f49c2f6a9c4","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/69996b7b04f12210559073c06a02f7e2","value":"69996b7b04f12210559073c06a02f7e2"},"ui_type":"1","sys_update_name":"sys_script_validator_e39fd717e7111300b2888f49c2f6a9c4","sys_updated_by":"admin","sys_created_on":"2018-04-11 20:27:01","sys_name":"email","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"internal_type":"email","sys_created_by":"admin","sys_policy":""},{"sys_mod_count":"0","validator":"function validate(value) {\n\t//Fix for DEF0197478\n\n    // empty fields are still valid dates\n    if (!value)\n        return true;\n    // Default case: we have global g_user_date_format defined\n\tif (typeof g_user_date_format !== 'undefined') {\n\t\t//yyyy-MM-dd should be valid if the sys_property is yyyy-MM-dd HH:mm:ss\n\t\t//yyyy-MM-dd HH:mm:ss should be valid if the sys_property is yyyy-MM-dd\n\t\tvar newValue = value + ' 00:00:00';\n\t\tvar dateFormatOk = (g_user_date_time_format !== 'undefined') ? isDate(value, g_user_date_time_format) : false;\n\t\treturn isDate(value, g_user_date_format) ||\n\t\t\tisDate(newValue, g_user_date_format) ||\n\t\t\tdateFormatOk ||\n\t\t\tgetMessage(\"Invalid Date\");\n\t}\n\t// Edge case: we can always try guessing if g_user_date_format is not defined\n    return parseDate(value) !== null || getMessage(\"Invalid Date\");\n\n}","active":"true","description":"Using the same validator as the one used by the normal date field. This is keeping in line with how seismic behaves.","sys_updated_on":"2023-07-27 09:44:24","sys_tags":"","sys_class_name":"sys_script_validator","sys_id":"e3d5bf5d439071106badac7c28b8f2e8","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/9543af3304312210559073c06a02f769","value":"9543af3304312210559073c06a02f769"},"ui_type":"10","sys_update_name":"sys_script_validator_e3d5bf5d439071106badac7c28b8f2e8","sys_updated_by":"admin","sys_created_on":"2023-07-27 09:44:24","sys_name":"integer_date","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"internal_type":"integer_date","sys_created_by":"admin","sys_policy":""},{"sys_mod_count":"0","validator":"function validate(value) {\n    // empty fields are still valid dates \n    if(!value) \n        return true; \n\n    // We \"should\" have the global date format defined, but there's always that edge case... \n    if (typeof g_user_date_time_format !== 'undefined') \n        return isDate(value, g_user_date_time_format) ? true : getMessage(\"Invalid Date\"); \n\n    // if we don't have that defined, we can always try guessing \n    return parseDate(value) !== null ? true : getMessage(\"Invalid Date\"); \n\t\n} ","active":"true","description":"","sys_updated_on":"2020-03-20 20:59:53","sys_tags":"","sys_class_name":"sys_script_validator","sys_id":"f5c7f6a30f234010fe3c5489c4767ec2","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/dd672bfb04b12210559073c06a02f7e3","value":"dd672bfb04b12210559073c06a02f7e3"},"ui_type":"0","sys_update_name":"sys_script_validator_f5c7f6a30f234010fe3c5489c4767ec2","sys_updated_by":"admin","sys_created_on":"2020-03-20 20:59:53","sys_name":"calendar_date_time","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"internal_type":"calendar_date_time","sys_created_by":"admin","sys_policy":""},{"sys_mod_count":"0","validator":"function validate(value) {\n\t//Fix for DEF0197478\n\n    // empty fields are still valid dates\n    if (!value)\n        return true;\n    // Default case: we have global g_user_date_format defined\n\tif (typeof g_user_date_format !== 'undefined') {\n\t\t//yyyy-MM-dd should be valid if the sys_property is yyyy-MM-dd HH:mm:ss\n\t\t//yyyy-MM-dd HH:mm:ss should be valid if the sys_property is yyyy-MM-dd\n\t\tvar newValue = value + ' 00:00:00';\n\t\tvar dateFormatOk = (g_user_date_time_format !== 'undefined') ? isDate(value, g_user_date_time_format) : false;\n\t\treturn isDate(value, g_user_date_format) ||\n\t\t\tisDate(newValue, g_user_date_format) ||\n\t\t\tdateFormatOk ||\n\t\t\tgetMessage(\"Invalid Date\");\n\t}\n\t   // Edge case: we can always try guessing if g_user_date_format is not defined\n    return parseDate(value) !== null || getMessage(\"Invalid Date\");\n\n}","active":"true","description":"Add Date Desktop UI validator","sys_updated_on":"2021-04-15 16:47:30","sys_tags":"","sys_class_name":"sys_script_validator","sys_id":"fd03e39db7232010601640008e11a998","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/9543af3304312210559073c06a02f769","value":"9543af3304312210559073c06a02f769"},"ui_type":"0","sys_update_name":"sys_script_validator_fd03e39db7232010601640008e11a998","sys_updated_by":"admin","sys_created_on":"2021-04-15 16:47:30","sys_name":"glide_date","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"internal_type":"glide_date","sys_created_by":"admin","sys_policy":""}]}