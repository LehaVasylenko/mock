{"result":[{"roles":"","sys_updated_on":"2023-03-24 15:51:51","sys_class_name":"sp_search_source","sys_id":"c6170ae86721220023c82e08f585efe6","sys_updated_by":"admin","facet_generation_script":"(function(query, facetService, searchResults) {\n\n    /* Calculate your facets here using facetService */\n    /* var stateFacet = facetService.createFacet('State', 'state'); */\n    /* stateFacet.addFacetItem('Facet Item Label', '123'); */\n\n    // If no facets selected and no results, don't show any facets\n    if (searchResults.length == 0 && Object.keys(facets).length == 0)\n        return;\n\n    var kbLabelMap = {\n        more_than_500: \"More Than 500\",\n        more_than_200: \"More Than 200\",\n        more_than_100: \"More Than 100\",\n        more_than_50: \"More Than 50\",\n        more_than_10: \"More Than 10\",\n        less_than_10: \"Less Than 10\",\n        more_ago: \"Past 2 Years\",\n        year_ago: \"Past Year\",\n        month_ago: \"Past Month\",\n        week_ago: \"Past Week\",\n        day_ago: \"Past 24 Hours\"\n    };\n\n    var kbArray = [];\n    var kbQuery = '';\n    var kbQueryDataObj = {};\n    var kbQueryData = '';\n    var taxonomyId = $sp.getTaxonomies();\n    if (taxonomyId) {\n        kbQuery = \"taxonomy_topic.active=true^taxonomy_topic.taxonomyIN\" + taxonomyId;\n        kbQueryDataObj = {\n            value: 'kb',\n            dynamic: false,\n            filters: [{\n                id: 'kb',\n                label: 'Knowledge base',\n                order: 1,\n                query: [{\n                    display_value: kbQuery,\n                    table: 'kb_knowledge',\n                    value: kbQuery\n                }]\n            }]\n        };\n        kbQueryData = JSON.stringify(kbQueryDataObj);\n    } else {\n        var kbs = $sp.getKnowledgeBases();\n        if (!gs.nil(kbs)) {\n            kbArray = kbs.split(',');\n            kbQuery = 'kb_knowledge_baseIN' + kbs;\n            kbQueryDataObj = {\n                value: 'kb',\n                dynamic: false,\n                filters: [{\n                    id: 'kb',\n                    label: 'Knowledge base',\n                    order: 1,\n                    query: [{\n                        display_value: kbQuery,\n                        table: 'kb_knowledge',\n                        value: kbQuery\n                    }]\n                }]\n            };\n            kbQueryData = JSON.stringify(kbQueryDataObj);\n        }\n    }\n\n\tvar honourSearchOrder = gs.getProperty('glide.sp.honour.kb.search.order', false);\n\tvar searchOrderBy = honourSearchOrder === 'true' ? '' : 'sys_view_count,true';\n\t\n    var kbFacets = new KBPortalServiceImpl().getAllFacets(query, '',\n        '{\"kb_knowledge_base\":{\"aggregate\":false,\"include_null\":false,\"orderby\":\"label\",\"table\":\"kb_knowledge\",\"value\":[]},\"author\":{\"aggregate\":false,\"include_null\":false,\"orderby\":\"label\",\"table\":\"kb_knowledge\",\"value\":[]},\"kb_category\":{\"aggregate\":false,\"include_null\":true,\"orderby\":\"label\",\"table\":\"kb_knowledge\",\"value\":[]},\"taxonomy_topic\":{\"aggregate\":false,\"include_null\":false,\"orderby\":\"label\",\"table\":\"kb_knowledge\",\"value\":[]}}',\n        '{' + (kbQueryData ? 'kb:' + kbQueryData + \",\" : \"\") + '\"modified\":{\"dynamic\":false,\"filters\":[{\"id\":\"more_ago\",\"label\":\"Past 2 Years\",\"order\":5,\"query\":[{\"display_value\":\"sys_updated_onRELATIVEGT@year@ago@2^sys_updated_onRELATIVELT@year@ago@1\",\"table\":\"\",\"value\":\"sys_updated_onRELATIVEGT@year@ago@2\"}]},{\"id\":\"year_ago\",\"label\":\"Past Year\",\"order\":4,\"query\":[{\"display_value\":\"sys_updated_onRELATIVEGT@year@ago@1^sys_updated_onRELATIVELT@month@ago@1\",\"table\":\"\",\"value\":\"sys_updated_onRELATIVEGT@year@ago@1\"}]},{\"id\":\"month_ago\",\"label\":\"Past Month\",\"order\":3,\"query\":[{\"display_value\":\"sys_updated_onRELATIVEGT@month@ago@1^sys_updated_onRELATIVELT@dayofweek@ago@7\",\"table\":\"\",\"value\":\"sys_updated_onRELATIVEGT@month@ago@1\"}]},{\"id\":\"week_ago\",\"label\":\"Past Week\",\"order\":2,\"query\":[{\"display_value\":\"sys_updated_onRELATIVEGT@dayofweek@ago@2^sys_updated_onRELATIVELT@dayofweek@ago@1\",\"table\":\"\",\"value\":\"sys_updated_onRELATIVEGT@dayofweek@ago@7\"}]},{\"id\":\"day_ago\",\"label\":\"Past 24 Hours\",\"order\":1,\"query\":[{\"display_value\":\"sys_updated_onRELATIVEGT@dayofweek@ago@1\",\"table\":\"\",\"value\":\"sys_updated_onRELATIVEGT@dayofweek@ago@1\"}]}],\"value\":\"\"},\"resources\":{\"dynamic\":true,\"filters\":\"\",\"value\":\"Knowledge\"},\"view_count\":{\"dynamic\":false,\"filters\":[{\"id\":\"more_than_500\",\"label\":\"More Than 500\",\"order\":6,\"query\":[{\"display_value\":\"sys_view_count>500\",\"table\":\"kb_knowledge\",\"value\":\"sys_view_count>500\"}]},{\"id\":\"more_than_200\",\"label\":\"More Than 200\",\"order\":5,\"query\":[{\"display_value\":\"sys_view_count>200^sys_view_count<500\",\"table\":\"kb_knowledge\",\"value\":\"sys_view_count>200\"}]},{\"id\":\"more_than_100\",\"label\":\"More Than 100\",\"order\":4,\"query\":[{\"display_value\":\"sys_view_count>100^sys_view_count<200\",\"table\":\"kb_knowledge\",\"value\":\"sys_view_count>100\"}]},{\"id\":\"more_than_50\",\"label\":\"More Than 50\",\"order\":3,\"query\":[{\"display_value\":\"sys_view_count>50^sys_view_count<100\",\"table\":\"kb_knowledge\",\"value\":\"sys_view_count>50\"}]},{\"id\":\"more_than_10\",\"label\":\"More Than 10\",\"order\":2,\"query\":[{\"display_value\":\"sys_view_count>10^sys_view_count<50\",\"table\":\"kb_knowledge\",\"value\":\"sys_view_count>10\"}]},{\"id\":\"less_than_10\",\"label\":\"Less Than 10\",\"order\":1,\"query\":[{\"display_value\":\"sys_view_count<11\",\"table\":\"kb_knowledge\",\"value\":\"sys_view_count<11\"}]}],\"value\":\"\"}}',\n        searchOrderBy);\n\n    var kbFacetObj = JSON.parse(kbFacets);\n\n    if (taxonomyId) {\n        createMultiChoiceFacetFromKB(\"UppercaseTopic\", \"topic\", kbFacetObj.taxonomy_topic, 'order');\n    } else {\n        if (kbFacetObj.kb_knowledge_base && kbFacetObj.kb_knowledge_base.length > 1)\n            createVariableFacetFromKB(\"Knowledge Base\", \"kb_knowledge_base\", kbFacetObj.kb_knowledge_base, 'label');\n        createMultiChoiceFacetFromKB(\"Category\", \"category\", kbFacetObj.kb_category, 'order');\n    }\n\n    createVariableFacetFromKB(\"Author\", \"author\", kbFacetObj.author, 'label');\n\n    createVariableFacetFromKB(\"Last Modified\", \"updated\", kbFacetObj.modified, 'order');\n    createVariableFacetFromKB(\"View Count\", \"viewcount\", kbFacetObj.view_count, 'order');\n\n    function createVariableFacetFromKB(label, variable, values, orderBy) {\n        if (!values || values.length == 0)\n            return;\n\n        var kbFacet = facetService.createFacet(label, variable);\n\n        if (orderBy)\n            values.sort(function(a, b) {\n                if (a[orderBy] < b[orderBy])\n                    return -1;\n                if (a[orderBy] > b[orderBy])\n                    return 1;\n                return 0;\n            });\n\n        if (facets.author && variable == 'author')\n            kbFacet.addFacetItem(getLabel(values, facets[variable]), facets[variable]);\n        else if (facets.updated && variable == 'updated' && kbLabelMap[facets.updated])\n            kbFacet.addFacetItem(kbLabelMap[facets.updated], facets.updated);\n        else if (facets.viewcount && variable == 'viewcount' && kbLabelMap[facets.viewcount])\n            kbFacet.addFacetItem(kbLabelMap[facets.viewcount], facets.viewcount);\n        else if (facets.kb_knowledge_base && variable == 'kb_knowledge_base')\n            kbFacet.addFacetItem(getLabel(values, facets[variable]), facets[variable]);\n        else {\n            for (var i in values)\n                kbFacet.addFacetItem(values[i].label, values[i].id);\n        }\n    }\n\n    function createMultiChoiceFacetFromKB(label, variable, values, orderBy) {\n        if (!values || values.length == 0)\n            return;\n\n        var kbFacet = facetService.createMultiChoiceFacet(label, variable);\n        var kbMap = {};\n        for (var i in values) {\n            var key = values[i].label;\n            var value = values[i].id;\n            var parent = new KBParentData().getParentCategory(value, key);\n            key = parent.join(' > ');\n            kbMap[key] = value;\n        }\n\n        var labels = Object.keys(kbMap).sort();\n        for (i = 0; i < labels.length; i++) {\n            var currentLabel = labels[i];\n            kbFacet.addFacetItem(currentLabel, kbMap[currentLabel]);\n        }\n    }\n\n    function getLabel(values, id) {\n        for (var i in values) {\n            if (values[i].id == id)\n                return values[i].label;\n        }\n        return \"\";\n    }\n})(query, facetService, searchResults);","sys_created_on":"2016-08-26 22:34:19","typeahead_glyph":"file-text-o","sys_name":"Knowledge Bases","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"id":"kb","sys_created_by":"admin","display_fields":"","data_fetch_script":"var indexGroup = (typeof indexGroup !== \"undefined\") ? indexGroup : \"portal_index_group\";\nvar queryLocation = queryLocation || 0;\nvar count = count || 30;\nvar facets = facets || {};\n(function(query, queryLocation, count, facets, indexGroup) {\n\n    return doContextualSearch(query, count, facets, queryLocation);\n\n    function doContextualSearch(query, count, facets, queryLocation) {\n        var results = [];\n        var taxonomyId = $sp.getTaxonomies();\n        var displayAttachments = gs.getProperty('glide.knowman.search.attachment', 'LINK_SNIPPET');\n        var kbArray = [];\n        var variables = {\n            author: [facets.author]\n        };\n        if (!taxonomyId) {\n            if (facets.kb_knowledge_base)\n                kbArray.push(facets.kb_knowledge_base);\n            else {\n                var kbs = $sp.getKnowledgeBases();\n                if (!gs.nil(kbs))\n                    kbArray = kbs.split(',');\n            }\n            variables.kb_knowledge_base = kbArray;\n            variables.kb_category = facets.category;\n        } else {\n            variables.taxonomy_topic = facets.topic;\n        }\n\n        // Set up request\n        var request = {\n            keyword: query,\n            language: \"\",\n            variables: variables,\n            resource: 'Knowledge',\n            context: gs.getProperty('glide.knowman.sp.search_context', 'Knowledge Search'),\n            kb_query: getFacetQuery(facets, taxonomyId),\n            social_query: \"\",\n            order: \"relevancy,true\",\n            start: queryLocation,\n            end: count,\n            attachment: displayAttachments != \"NO_ATTACHMENT\",\n            knowledge_fields: [\n                \"number\",\n                \"sys_id\",\n                \"published\"\n            ],\n            index_group: indexGroup\n        };\n\n        if (JSUtil.notNil(data.limit) && !isNaN(data.limit))\n            request.end = data.limit + queryLocation;\n\n        // execute search return result\n        var response = new KBPortalServiceImpl().getResultData(request);\n\n        // Send results back ro UI\n        var kbCount = 0;\n        for (var i = 0; i < response.results.length; i++) {\n            result = response.results[i];\n            var article = {};\n            article.sys_id = result.meta.sys_id.display_value;\n            article.number = result.meta.number.display_value;\n            article.short_description = result.title;\n            article.published = result.meta.published.display_value;\n            article.publishedUTC = result.meta.published.value;\n            article.type = \"kb\";\n            article.text = result.snippet || \"\";\n            article.text = $sp.stripHTML(article.text) + \"\";\n            article.text = article.text.substring(0, 200);\n            article.score = result.meta.score;\n            article.label = article.short_description;\n            article.primary = article.short_description;\n            article.query_location = queryLocation + kbCount;\n            article.table = \"kb_knowledge\"; // populate the table name for analytics\n            article.link = result.link;\n            article.attachments = result.meta.attachments || [];\n            for (var list = 0; list < article.attachments.length; list++) {\n                 if (article.attachments[list].terms)\n            \t\tarticle.attachments[list].terms = $sp.stripHTML(article.attachments[list].terms);\n            }\n            results.push(article);\n\n            kbCount++;\n        }\n\n        if (!data.includeFacets)\n            $sp.logSearch('kb_knowledge', query, kbCount, data.searchType, data.portal, data.page);\n\n        if (results.length == 0)\n            return results;\n\n        if (results.length < count) {\n            var lastResult = results.pop();\n            lastResult.isLastResult = true;\n            results.push(lastResult);\n        }\n        return results;\n    }\n\n    // Build the kb_query based on facets\n    function getFacetQuery(facets, taxonomyId) {\n        var kbFacetMap = {\n            // updated\n            \"more_ago\": \"^sys_updated_onRELATIVEGT@year@ago@2\",\n            \"year_ago\": \"^sys_updated_onRELATIVEGT@year@ago@1\",\n            \"month_ago\": \"^sys_updated_onRELATIVEGT@month@ago@1\",\n            \"week_ago\": \"^sys_updated_onRELATIVEGT@dayofweek@ago@7\",\n            \"day_ago\": \"^sys_updated_onRELATIVEGT@dayofweek@ago@1\",\n\n            // viewcount\n            \"more_than_500\": \"^sys_view_count>500\",\n            \"more_than_200\": \"^sys_view_count>200\",\n            \"more_than_100\": \"^sys_view_count>100\",\n            \"more_than_50\": \"^sys_view_count>50\",\n            \"more_than_10\": \"^sys_view_count>10\",\n            \"less_than_10\": \"^sys_view_count<10\"\n        };\n\n        // Fill in facet info into kbQuery\n        var kbQuery = \"\";\n        //If portal is assosiated to taxonomy then add topic and taxonomy Filter \n        if (taxonomyId)\n            kbQuery = \"taxonomy_topic.active=true^taxonomy_topic.taxonomyIN\" + taxonomyId;\n        if (facets.updated)\n            kbQuery += kbFacetMap[facets.updated];\n        if (facets.viewcount)\n            kbQuery += kbFacetMap[facets.viewcount];\n\n        // return built up query, stripping away leading ^\n        return (kbQuery.startsWith(\"^\")) ? kbQuery.substring(1) : kbQuery;\n    }\n})(query, queryLocation, count, facets, indexGroup);","search_page_template":"<div>\n  <a href=\"{{item.link}}\" class=\"h4 text-primary m-b-sm block\">\n    <i class=\"fa fa-book m-r-sm\"></i>\n    <span ng-bind-html=\"highlight(escapeHTML(item.short_description), escapeHTML(data.q))\"></span></a>\n    <p ng-bind-html=\"highlight(escapeHTML(item.text), escapeHTML(data.q))\"></p>\n  <div style=\"padding-left: 24px; font-size: small;\" ng-repeat=\"attachment in ::item.attachments\">\n    <span title=\"${Attached by} {{::attachment.sys_created_by}} : {{::attachment.sys_created_on}}\" class=\"glyphicon glyphicon-paperclip\"></span>\n    <a ng-href=\"{{::attachment.link + '&view=true'}}\" aria-label=\"${Download} {{::attachment.file_name}}\">{{::attachment.file_name}}</a>\n    <a href=\"{{::attachment.link}}\" title=\"${Download} {{::attachment.file_name}}\">\n    \t<span class=\"glyphicon glyphicon-download-alt\"></span>\n    </a>\n    <p ng-if=\"attachment.terms\" ng-bind-html=\"::highlight(escapeHTML(attachment.terms), escapeHTML(data.q))\"></p>\n  </div>\n\n  <span class=\"text-muted\">${Article}: {{item.number}}</span>\n  <span class=\"text-muted\">\n    <span class=\"m-l-xs m-r-xs\" aria-hidden=\"true\"> &middot; </span>\n    ${Published}: <sn-day-ago date=\"item.publishedUTC\"/>\n  </span>\n</div>\n","is_scripted_source":"true","primary_display_field":"","sys_mod_count":"435","typeahead_template":"","sys_tags":"","pagination_supported":"false","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/69996b7b04f12210559073c06a02f7e2","value":"69996b7b04f12210559073c06a02f7e2"},"condition":"","sys_update_name":"sp_search_source_c6170ae86721220023c82e08f585efe6","enable_typeahead":"true","name":"Knowledge Bases","page":{"link":"https://dev315171.service-now.com/api/now/v1/table/sp_page/dea5792147132100ba13a5554ee4902d","value":"dea5792147132100ba13a5554ee4902d"},"advanced_typeahead_config":"false","source_table":"","sys_policy":""},{"roles":"","sys_updated_on":"2023-09-12 17:07:44","sys_class_name":"sp_search_source","sys_id":"c96eb1686721220023c82e08f585efff","sys_updated_by":"admin","facet_generation_script":"(function(query, facetService, searchResults) {\n    var taxonomyId = $sp.getTaxonomies();\n\n    var portalValue = \"\";\n    if (!taxonomyId)\n        portalValue = $sp.getCatalogs().value;\n    var sc;\n    var results = [];\n    if (gs.getProperty(\"glide.sc.largeSet.optimization.enable\", \"false\") == \"true\")\n        return;\n    sc = new sn_sc.CatalogSearch().search(portalValue, '', query);\n    sc.addQuery('sys_class_name', 'NOT IN', 'sc_cat_item_wizard');\n    sc.addEncodedQuery('hide_sp=false^ORhide_spISEMPTY');\n    if (taxonomyId) {\n        sc.addQuery('taxonomy_topic.active', true);\n        sc.addQuery('taxonomy_topic.taxonomy', taxonomyId);\n    }\n\n    sc.query();\n    var catItemCount = 0;\n    if (!taxonomyId) {\n        while (sc.next()) {\n            var primaryCategory = sc.getValue(\"category\");\n            if (GlideStringUtil.isEligibleSysID(primaryCategory)) {\n                var primaryCategoryJS = new sn_sc.CatCategory(primaryCategory);\n                var catalog_item = new sn_sc.CatItem(sc.getUniqueValue());\n                var category = catalog_item.getFirstAccessibleCategoryForSearch(portalValue);\n                if (!catalog_item.canViewOnSearch() ||\n                    !category || !primaryCategoryJS.canView()) {\n                    continue;\n                }\n                var item = {};\n                item.categoryID = primaryCategory;\n                var categoryJS = new sn_sc.CatCategory(primaryCategory);\n                if (categoryJS) {\n                    item.categoryLabel = categoryJS.getTitle();\n                    item.catalogID = categoryJS.getCatalog();\n                    var catalogJS = new sn_sc.Catalog(item.catalogID);\n                    item.catalogLabel = catalogJS.getTitle();\n                }\n                results.push(item);\n            }\n        }\n        var catalogMap = {};\n        var categoryMap = {};\n        var catalogCount = 0;\n        results.forEach(function(item) {\n            var catalogLabel = item.catalogLabel;\n            var catalogValue = item.catalogID;\n            var categoryLabel = item.categoryLabel;\n            var categoryValue = item.categoryID;\n            if (!categoryMap[categoryLabel]) {\n                categoryMap[categoryLabel] = categoryValue;\n            } else if ((categoryMap[categoryLabel] + \"\").indexOf(categoryValue) < 0) {\n                categoryMap[categoryLabel] += \",\" + categoryValue;\n            }\n            if (!catalogMap[catalogLabel]) {\n                catalogMap[catalogLabel] = catalogValue;\n                catalogCount++;\n            }\n        });\n\n        if (portalValue.split(\",\").length > 1) {\n            var catalogFacet = facetService.createFacet(gs.getMessage('Catalog'), 'catalog');\n            for (var label in catalogMap)\n                catalogFacet.addFacetItem(label, catalogMap[label]);\n        }\n\n        var categoryFacet = facetService.createMultiChoiceFacet(gs.getMessage('ATF:Category_uppercase'), 'category');\n        for (var label in categoryMap)\n            categoryFacet.addFacetItem(label, categoryMap[label]);\n    } else {\n        var topics = {};\n        while (sc.next()) {\n            var primaryTopic = sc.getValue(\"taxonomy_topic\");\n            catalog_item = new sn_sc.CatItem(sc.getUniqueValue());\n\n            if (!catalog_item.canViewOnSearch())\n                continue;\n\n            var topicLabel = sc.taxonomy_topic.getDisplayValue();\n            topics[primaryTopic] = topicLabel;\n        }\n        var topicFacet = facetService.createMultiChoiceFacet('UppercaseTopic', 'topic');\n        for (var id in topics)\n            topicFacet.addFacetItem(topics[id], id);\n\n    }\n\n\n\n})(query, facetService, searchResults);","sys_created_on":"2016-08-26 21:56:02","typeahead_glyph":"empty","sys_name":"Catalogs","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"id":"sc","sys_created_by":"admin","display_fields":"","data_fetch_script":"var indexGroup = (typeof indexGroup !== \"undefined\") ? indexGroup : \"portal_index_group\";\nvar queryLocation = (typeof queryLocation != \"undefined\") ? queryLocation : 0;\n(function(query, indexGroup, queryLocation) {\n    // To support pagination. The value set to the key query_location on the last item is available in the next iteration here\n    queryLocation = queryLocation || 0;\n    var limitCount = data.limit;\n    var results = [];\n    //Here goes the logic. Compute results however you want!\n    if (!gs.isLoggedIn())\n        return results;\n\n    var taxonomyId = $sp.getTaxonomies();\n    var sc;\n    if (taxonomyId) {\n        //For taxonomy topic based search send catalogs and categories as empty .\n        sc = new sn_sc.CatalogSearch().search('', '', query);\n        sc.addQuery('taxonomy_topic.active', true);\n        sc.addQuery('taxonomy_topic.taxonomy', taxonomyId);\n        sc.addQuery('sys_class_name', 'NOT IN', 'sc_cat_item_wizard');\n        sc.addEncodedQuery('hide_sp=false^ORhide_spISEMPTY');\n        if (facets.topic)\n            sc.addQuery(\"taxonomy_topic\", \"IN\", facets.topic.join(\",\"));\n    } else {\n        var portalValue = $sp.getCatalogs().value;\n        sc = new sn_sc.CatalogSearch().search(portalValue, '', query);\n        sc.addQuery('sys_class_name', 'NOT IN', 'sc_cat_item_wizard');\n        sc.addEncodedQuery('hide_sp=false^ORhide_spISEMPTY');\n        if (facets.category)\n            sc.addQuery(\"category\", \"IN\", facets.category.join(\",\"));\n        if (facets.catalog)\n            sc.addQuery(\"sc_catalogs\", \"CONTAINS\", facets.catalog);\n    }\n\n    if (indexGroup)\n        sc.addQuery('123TEXTINDEXGROUP321', indexGroup);\n\n    var newLimitCount = queryLocation + limitCount;\n    sc.query();\n    var catCount = 0;\n    while (sc.next() && catCount < newLimitCount + 1) {\n        var catalog_item = new sn_sc.CatItem(sc.getUniqueValue());\n        var category = catalog_item.getFirstAccessibleCategoryForSearch(facets.catalog ? facets.catalog : portalValue);\n        var canViewItem = catalog_item.canViewOnSearch();\n        if (!taxonomyId && !category)\n            canViewItem = false;\n\n        if (!canViewItem)\n            continue;\n\n        // We compute the first k + r and return the last r items\n        if (catCount < queryLocation) {\n            catCount++;\n            continue;\n        }\n\n        var item = {};\n        item.type = \"sc\"; // supported types are \"sc\" and \"sc_content\"\n        item.page = \"sc_cat_item\";\n        item.table = \"sc_cat_item\"; // populate the table name for analytics\n        if (sc.getRecordClassName() == \"sc_cat_item_guide\")\n            item.page = \"sc_cat_item_guide\";\n        else if (sc.getRecordClassName() == \"sc_cat_item_content\") {\n            var gr = new GlideRecord('sc_cat_item_content');\n            gr.get(sc.getUniqueValue());\n            $sp.getRecordValues(item, gr, 'url,content_type,kb_article');\n            item.type = \"sc_content\";\n        }\n\n        $sp.getRecordDisplayValues(item, sc, 'name,short_description,sys_id,sys_class_name');\n\n        item['picture'] = catalog_item.getPicture();\n        item['icon'] = catalog_item.getIcon();\n        item['price'] = catalog_item.getCompleteItemPrice();\n        item.score = parseInt(sc.ir_query_score.getDisplayValue());\n        item.label = item.name;\n        item.primary = item.name;\n        // determine URL/target and default icon in case item has no picture/icon\n        if (item.type == \"sc\") {\n            item.url = '?id=' + item.page + '&sys_id=' + item.sys_id;\n            item.default_icon = \"folder-open-o\";\n        } else if (item.type == \"sc_content\") {\n            item.default_icon = \"book\";\n            if (item.content_type == \"kb\") {\n                item.url = '?id=kb_article&sys_id=' + item.kb_article;\n                item.default_icon = \"file-text-o\";\n            } else if (item.content_type == \"external\") {\n                item.url = item.url + \"\";\n                item.target = '_blank';\n            } else if (item.content_type == \"dynamic\") {\n\t\t\t\tvar itemSummary = catalog_item.getItemSummary(false, \"basic\");\n\t\t\t\tvar dynamicContentItemConfig = itemSummary.dynamic;\n\t\t\t\tvar portalUrl = new global.DynamicCatalogContentUtil().getServicePortalUrl(dynamicContentItemConfig.model, dynamicContentItemConfig.content);\n\t\t\t\tif (portalUrl) \n\t\t\t\t\titem.portalUrl = portalUrl;\n\t\t\t\t\t\n\t\t\t\titem.url =  itemSummary.url+ \"\";\n\t\t\t} else\n                item.url = '?id=sc_cat_item&sys_id=' + item.sys_id;\n        }\n\n        item['query_location'] = catCount;\n        results.push(item);\n        catCount++;\n    }\n\n    if (!data.includeFacets)\n        $sp.logSearch('sc_cat_item', query, sc.getRowCount(), data.searchType, data.portal, data.page);\n\n    // We have populated one extra to know if it is the last result in the list\n    if (results.length !== 0) {\n\t\tif (results.length > limitCount)\n\t\t\tresults.pop();\n\t\telse\n\t\t\tresults[results.length - 1].isLastResult = true;\n    }\n\n    return results;\n})(query, indexGroup, queryLocation);","search_page_template":"<div ng-if=\"item.type == 'sc'\" class=\"sc\">\n  <a href=\"{{item.url}}\" class=\"h4 text-primary m-b-sm block catalog-description-wrapper\" onclick=\"window.GlideWebAnalytics.trackEvent('Service Catalog', 'Catalog Search Results Page', 'Item Clicked');\">\n    <i ng-if=\"item.picture\" class=\"ta-img\" style=\"background-image:url('{{item.picture}}?t=small')\"></i>\n\t<i ng-if=\"!item.picture && item.icon\" class=\"ta-icon\" style=\"background-image:url('{{item.icon}}');\"></i>\n    <i ng-if=\"!item.picture && !item.icon\" class=\"ta-icon fa fa-shopping-cart\"></i>\n    <span ng-bind-html=\"highlight(escapeHTML(item.name), escapeHTML(data.q))\" class=\"item-name\"></span></a>\n  <div ng-style=\"getBGImage(item)\" ng-if=\"item.picture\" class=\"img-responsive m-r item-image pull-left\"></div>\n  <p ng-bind-html=\"highlight(escapeHTML(item.short_description), escapeHTML(data.q))\"></p>\n  <span class=\"text-muted m-r-sm\" ng-if=\"data.showPrices && item.price != '$0.00'\">{{item.price}}</span>\n</div>\n<div ng-if=\"item.type == 'sc_content'\">\n  <a ng-if=\"item.content_type == 'external'|| (item.content_type == 'dynamic' && !item.portalUrl)\" ng-href=\"{{::item.url}}\" target=\"_blank\" class=\"h4 text-primary m-b-sm block\" onclick=\"window.GlideWebAnalytics.trackEvent('Service Catalog', 'Catalog Search Results Page', 'Item Clicked');\">\n    <span ng-bind-html=\"highlight(escapeHTML(item.name), escapeHTML(data.q))\"></span> ➚</a>\n  <a ng-if=\"item.content_type == 'dynamic' && item.portalUrl\" ng-href=\"{{::item.portalUrl}}\" class=\"h4 text-primary m-b-sm block\" onclick=\"window.GlideWebAnalytics.trackEvent('Service Catalog', 'Catalog Search Results Page', 'Item Clicked');\">\n    <span ng-bind-html=\"highlight(escapeHTML(item.name), escapeHTML(data.q))\"></span>\n  </a>\n  <a ng-if=\"item.content_type == 'kb'\" ng-href=\"?id=kb_article&sys_id={{::item.kb_article}}\" class=\"h4 text-primary m-b-sm block\" onclick=\"window.GlideWebAnalytics.trackEvent('Service Catalog', 'Catalog Search Results Page', 'Item Clicked');\">\n    <i class=\"fa m-r-sm fa-file-text-o\"></i>\n    <span ng-bind-html=\"highlight(escapeHTML(item.name), escapeHTML(data.q))\"></span>\n  </a>\n  <a ng-if=\"item.content_type == 'literal'\" ng-href=\"?id={{item.page}}&sys_id={{item.sys_id}}\" class=\"h4 text-primary m-b-sm block\" onclick=\"window.GlideWebAnalytics.trackEvent('Service Catalog', 'Catalog Search Results Page', 'Item Clicked');\">\n    <i class=\"fa m-r-sm fa-file-text-o\"></i>\n    <span ng-bind-html=\"highlight(escapeHTML(item.name), escapeHTML(data.q))\"></span></a>\n  <div ng-style=\"getBGImage(item)\" ng-if=\"item.picture\" class=\"img-responsive m-r item-image pull-left\"></div>\n  <p ng-bind-html=\"highlight(escapeHTML(item.short_description), escapeHTML(data.q))\"></p>\n</div>","is_scripted_source":"true","primary_display_field":"","sys_mod_count":"99","typeahead_template":"<!-- prefer item picture to item icon, prefer item icon to default icon -->\n<div onclick=\"window.GlideWebAnalytics.trackEvent('Service Catalog', 'Catalog Search Type Ahead', 'Item Clicked')\">\n<i ng-if=\"match.model.picture\" class=\"ta-img\" style=\"background-image:url('{{match.model.picture}}?t=small')\"></i>\n<i ng-if=\"!match.model.picture && match.model.icon\" class=\"ta-icon\" style=\"background-image:url('{{match.model.icon}}'); width:16px; height:16px\"></i>\n<i ng-if=\"!match.model.picture && !match.model.icon\" class=\"ta-icon fa fa-{{match.model.default_icon}}\"></i>\n<span ng-bind-html=\"match.label | uibTypeaheadHighlight:query\"></span>\n<strong ng-if=\"match.model.type == 'sc_content' && match.model.content_type == 'external'\">➚</strong>\n</div>","sys_tags":"","pagination_supported":"false","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/d1c9ebbb04f12210559073c06a02f719","value":"d1c9ebbb04f12210559073c06a02f719"},"condition":"","sys_update_name":"sp_search_source_c96eb1686721220023c82e08f585efff","enable_typeahead":"true","name":"Catalogs","page":"","advanced_typeahead_config":"true","source_table":"","sys_policy":""}]}