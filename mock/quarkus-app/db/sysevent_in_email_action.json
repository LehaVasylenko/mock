{"result":[{"template":"","required_roles":"","condition_script":"","description":"","sys_updated_on":"2014-11-21 08:38:59","type":"reply","sys_class_name":"sysevent_in_email_action","stop_processing":"false","sys_id":"1c96e4f5373021009a80a0ffbe41f164","sys_updated_by":"admin","sys_created_on":"2014-05-20 21:12:51","sys_domain":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_user_group/global","value":"global"},"action":"record_action","sys_name":"Create Live Feed Reply","from":"","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"assignment_operator":"","sys_created_by":"admin","table":"live_message","order":"100","sys_mod_count":"9","active":"true","sys_overrides":"","sys_domain_path":"","script":"var lfUtil = new LiveFeedUtil();\nvar reply = lfUtil.extractMessageFromEmail(email.body_text);\nlfUtil.addReplyByEmail(current, reply);","filter_condition":"","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/50442b7b04312210559073c06a02f7ef","value":"50442b7b04312210559073c06a02f7ef"},"sys_update_name":"sysevent_in_email_action_1c96e4f5373021009a80a0ffbe41f164","reply_email":"","name":"Create Live Feed Reply","event_name":"email.read","sys_policy":""},{"template":"","required_roles":"","condition_script":"","description":"This inbound email action is triggered when an email is sent to ServiceNow and:\r\n\r\n1. The email is a reply.\r\n2. The email being replied to was sent by ServiceNow due to an update or creation of a Requested Item.\r\n\r\n\r\nThis inbound email action can update the following fields on a Requested Item:\r\n\r\nassigned_to\r\npriority\r\n\r\nIn addition to being able to explicitly set the values of the above fields within the email, the whole email is added to the Requested Item as a comment.\r\n\r\n\r\nExample reply email: This reply will update comments for the request with \"Let's get this ASAP.\" It will also set priority to \"1\" if the sender has the itil role.\r\n\r\n-----\r\n\r\nFrom: \tFred Luddy <fred.luddy@example.com>\r\nSubject: \tRe: Request REQ0010001 has been opened on your behalf\r\nDate: \tJune 10, 2013 5:56:00 PM PDT\r\nTo: \t        ServiceNow\r\n\r\npriority: 1\r\n\r\nLet's get this ASAP.\r\n\r\nOn Jun 10, 2013, at 5:52 PM, IT Service Desk wrote:\r\n\r\nClick here to view Request: REQ0010001\r\n \r\nNumber: REQ0010001\r\nDue date: 2013-06-15 17:00:00 PDT\r\nOpened: 2013-06-10 17:42:26 PDT\r\nApproval: Approved\r\n \r\n\r\nRequested items:\r\n \r\nRef:MSG0000002\r\n\r\n-----","sys_updated_on":"2021-07-30 06:34:48","type":"reply","sys_class_name":"sysevent_in_email_action","stop_processing":"false","sys_id":"1e33e31f0a0a3c74015b770ccb3467c4","sys_updated_by":"admin","sys_created_on":"2010-11-05 22:41:45","sys_domain":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_user_group/global","value":"global"},"action":"record_action","sys_name":"Update Request Item","from":"","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"assignment_operator":"","sys_created_by":"admin","table":"sc_req_item","order":"100","sys_mod_count":"14","active":"true","sys_overrides":"","sys_domain_path":"","script":"gs.include('validators');\n\nif (current.getTableName() == \"sc_req_item\" && current.canWrite()) {\n    current.comments = \"reply from: \" + email.origemail + \"\\n\\n\" + email.body_text;\n\n    if (gs.hasRole(\"itil\")) {\n        if (email.body.assign != undefined)\n            current.assigned_to = email.body.assign;\n\n        if (email.body.priority != undefined && isNumeric(email.body.priority))\n            current.priority = email.body.priority;\n    }\n    current.update();\n}","filter_condition":"","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a083abb304312210559073c06a02f7c0","value":"a083abb304312210559073c06a02f7c0"},"sys_update_name":"sysevent_in_email_action_1e33e31f0a0a3c74015b770ccb3467c4","reply_email":"","name":"Update Request Item","event_name":"email.read","sys_policy":""},{"template":"","required_roles":"","condition_script":"","description":"This inbound email action is triggered when an email is sent to ServiceNow and the email is not a reply or forward.\r\n\r\n\r\nThis inbound email action can set the following fields on a new Incident:\r\n\r\nassigned_to\r\npriority\r\n\r\nIn addition to being able to explicitly set the values of the above fields within the email, the following is done automatically:\r\n\r\n1. The Incident caller_id is set to the the user who sent the email.\r\n2. The email subject is set as the Incident short description.\r\n3. The whole email is added to the Incident as a comment.\r\n4. The Incident category is set to \"inquiry\".\r\n5. The Incident state is set to \"1\".\r\n6. The Incident notify is set to \"2\".\r\n7. The Incident contact type is set to \"email\".\r\n\r\n\r\nExample email: This email will create a new Incident with the following:\r\n\r\n1. The Incident caller is set to \"Fred Luddy\".\r\n2. The Incident short description will be set to \"Not able to connect to wireless network\"\r\n3. The whole email body is added to the Incident as a comment.\r\n4. The Incident is assigned to \"Bow Ruggeri\" if the sender has the itil role.\r\n5. The Incident category is set to \"inquiry\".\r\n6. The Incident state is set to \"1\".\r\n7. The Incident notify is set to \"2\".\r\n8. The Incident contact type is set to \"email\".\r\n\r\n-----\r\n\r\nFrom: \tFred Luddy <fred.luddy@example.com>\r\nSubject: \tNot able to connect to wireless network\r\nDate: \tJune 11, 2013 1:44:55 PM PDT\r\nTo: \t        ServiceNow\r\n\r\nThe wireless network has been down for 30 minutes now. \r\n\r\nassign: Bow Ruggeri\r\n\r\n-----","sys_updated_on":"2021-07-15 09:54:54","type":"new","sys_class_name":"sysevent_in_email_action","stop_processing":"false","sys_id":"3ccfeff5c611227a0180144333c87af9","sys_updated_by":"admin","sys_created_on":"2005-04-13 18:26:30","sys_domain":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_user_group/global","value":"global"},"action":"record_action","sys_name":"Create Incident","from":"","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"assignment_operator":"","sys_created_by":"david.loo","table":"incident","order":"100","sys_mod_count":"61","active":"true","sys_overrides":"","sys_domain_path":"","script":"//\tNote: current.opened_by is already set to the first UserID that matches the From: email address\n\ncurrent.caller_id = gs.getUserID();\ncurrent.comments = \"received from: \" + email.origemail + \"\\n\\n\" + email.body_text;\ncurrent.short_description = email.subject;\n\ncurrent.category = \"inquiry\";\ncurrent.incident_state = IncidentState.NEW;\ncurrent.notify = 2;\ncurrent.contact_type = \"email\";\n\nif (email.body.assign != undefined)\n   current.assigned_to = email.body.assign;\n\nif (email.importance != undefined) {\n   if (email.importance.toLowerCase() == \"high\") {\n\t\tcurrent.impact = 1;\n\t\tcurrent.urgency = 1;\n   }\n}\n\nif (current.canCreate())\n\tcurrent.insert();","filter_condition":"","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a083abb304312210559073c06a02f7c0","value":"a083abb304312210559073c06a02f7c0"},"sys_update_name":"sysevent_in_email_action_3ccfeff5c611227a0180144333c87af9","reply_email":"","name":"Create Incident","event_name":"email.read","sys_policy":""},{"template":"","required_roles":"","condition_script":"","description":"This inbound email action is triggered when an email is sent to ServiceNow and:\r\n\r\n1. The email is a reply.\r\n2. The email being replied to was sent by ServiceNow due to an update or creation of an Incident.\r\n\r\n\r\nThis inbound email action can update the following fields on an Incident:\r\n\r\nassigned_to\r\npriority\r\ncategory\r\nshort_description\r\n\r\nIn addition to being able to explicitly set the values of the above fields within the email, the whole email is added to the Incident as a comment.\r\n\r\n\r\nExample reply email: this reply will update comments for the Incident with \"Our engineers are on this - should see resolution in a couple hours.\", assign the Incident to David Loo, and set priority to \"2\".\r\n\r\n-----\r\n\r\nFrom: \tFred Luddy <fred.luddy@example.com>\r\nSubject: \tRe: Incident INC0010008 has been assigned to you\r\nDate: \tJune 10, 2013 10:47:00 AM PDT\r\nTo: \t        ServiceNow\r\n\r\nOur engineers are on this - should see resolution in a couple hours.\r\n\r\npriority: 2\r\nassigned_to: david.loo\r\n\r\nOn Jun 10, 2013, at 10:43 AM, IT Service Desk wrote:\r\n\r\nShort Description: A new occurrence of network outage\r\nClick here to view Incident: INC0010008\r\nSeverity: 3 - Low\r\nPriority: 4 - Low\r\nCategory: Inquiry / Help\r\nComments:\r\n \r\nRef:MSG0000034\r\n\r\n-----","sys_updated_on":"2024-05-06 05:19:24","type":"reply","sys_class_name":"sysevent_in_email_action","stop_processing":"false","sys_id":"3f789469c0a80064015ad36dc4205a9a","sys_updated_by":"admin","sys_created_on":"2005-04-14 06:49:56","sys_domain":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_user_group/global","value":"global"},"action":"record_action","sys_name":"Update Incident","from":"","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"assignment_operator":"","sys_created_by":"fred.luddy","table":"incident","order":"100","sys_mod_count":"34","active":"false","sys_overrides":"","sys_domain_path":"","script":"gs.include('validators');\n\nif (current.getTableName() == \"incident\") {\n\tcurrent.comments = \"reply from: \" + email.origemail + \"\\n\\n\" + email.body_text;\n\t\n\tif (gs.hasRole(\"sn_incident_write\") || gs.hasRole(\"itil\")) {\n\t\tif (email.body.assign != undefined)\n\t\t\tcurrent.assigned_to = email.body.assign;\n\t\t\n\t\tif (email.body.priority != undefined && isNumeric(email.body.priority))\n\t\t\tcurrent.priority = email.body.priority;\n\t}\n\n\tif (current.canWrite())\n\t\tcurrent.update();\n}","filter_condition":"","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a083abb304312210559073c06a02f7c0","value":"a083abb304312210559073c06a02f7c0"},"sys_update_name":"sysevent_in_email_action_3f789469c0a80064015ad36dc4205a9a","reply_email":"","name":"Update Incident","event_name":"email.read","sys_policy":""},{"template":"","required_roles":"","condition_script":"","description":"","sys_updated_on":"2014-11-21 08:36:00","type":"reply","sys_class_name":"sysevent_in_email_action","stop_processing":"false","sys_id":"3f8f4ac1472031007f47563dbb9a7100","sys_updated_by":"admin","sys_created_on":"2014-11-21 06:54:34","sys_domain":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_user_group/global","value":"global"},"action":"","sys_name":"Create Live Feed Like Reply","from":"","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"assignment_operator":"","sys_created_by":"admin","table":"live_message_like","order":"100","sys_mod_count":"1","active":"true","sys_overrides":"","sys_domain_path":"","script":"var lfUtil = new LiveFeedUtil();\n\nvar reply = lfUtil.extractMessageFromEmail(email.body_text);\nlfUtil.addReplyByEmail(current.message, reply);\n","filter_condition":"","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/50442b7b04312210559073c06a02f7ef","value":"50442b7b04312210559073c06a02f7ef"},"sys_update_name":"sysevent_in_email_action_3f8f4ac1472031007f47563dbb9a7100","reply_email":"","name":"Create Live Feed Like Reply","event_name":"email.read","sys_policy":""},{"template":"","required_roles":"","condition_script":"","description":"","sys_updated_on":"2024-04-18 12:27:00","type":"new","sys_class_name":"sysevent_in_email_action","stop_processing":"false","sys_id":"4659d1bf7fb312007f005212bdfa9140","sys_updated_by":"admin","sys_created_on":"2016-06-10 21:51:35","sys_domain":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_user_group/global","value":"global"},"action":"record_action","sys_name":"Unsubscribe from notification","from":"","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"assignment_operator":"","sys_created_by":"admin","table":"cmn_notif_message","order":"1","sys_mod_count":"24","active":"true","sys_overrides":"","sys_domain_path":"","script":"(function runAction(/*GlideRecord*/ current, /*GlideRecord*/ event, /*EmailWrapper*/ email, /*ScopedEmailLogger*/ logger, /*EmailClassifier*/ classifier) {\n    var unsubscribeJson = email.body.unsubscribe;\n    if (!unsubscribeJson) {\n\t\tlogger.warn(\"An unsubscribe request with no unsubscribe field\");\n        return;\n\t}\n\n    var unsubscribeMap = new JSON().decode(unsubscribeJson);\n\n    if (!unsubscribeMap) {\n\t\tlogger.warn(\"An unsubscribe request with an invalid unsubscribe field\");\n        return;\n\t}\n\n    var unsubToken = gs.getProperty('glide.notification.unsubscribe_inbound_action_token', 'c797e62132');\n\n    var incomingToken = (unsubscribeMap.token || unsubscribeMap.unsub_token);\n    if (unsubToken != incomingToken) {\n        logger.warn(\"An unsubscribe request with an invalid ServiceNow unsubscribe ID\");\n        return;\n    }\n\n    var notificationId = (unsubscribeMap.id || unsubscribeMap.notification_id);\n    if (notificationId) {\n        var notificationUnsubscribe = new NotificationUnsubscribe();\n\n        var user = GlideUser.getSysIdByEmail(email.fromAddress);\n\t\tvar unsubscribeResult;\n\t\tif(user == null)\n\t\t\tunsubscribeResult = notificationUnsubscribe.unsubscribeSecondaryEmailDevice(notificationId, \"email\", email.fromAddress);\n\t\telse\n\t\t\tunsubscribeResult = notificationUnsubscribe.unsubscribe(notificationId, \"email\");\n\n        logger.log(\"Unsubscribe result: \" + unsubscribeResult.header + \" - \" + unsubscribeResult.message, 'NotificationUnsubsribe');\n    } else {\n        logger.warn(\"An unsubscribe request with an invalid notification ID\");\n    }\n\n    event.state = \"stop_processing\";\n\n})(current, event, email, logger, classifier);","filter_condition":"subjectSTARTSWITHUnsubscribe from^EQ","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/8cf367b704312210559073c06a02f7ff","value":"8cf367b704312210559073c06a02f7ff"},"sys_update_name":"sysevent_in_email_action_4659d1bf7fb312007f005212bdfa9140","reply_email":"","name":"Unsubscribe from Notification","event_name":"email.read","sys_policy":""},{"template":"","required_roles":"","condition_script":"","description":"This inbound email action behaves the same as Update Incident, but additionally will reopen a closed incident if the email subject contains \"please reopen\". In reopening the incident, the incident state will be set to \"2\" and \"The caller did not feel that this issue was resolved\" will be added to the incident as a work note.","sys_updated_on":"2024-05-06 05:18:48","type":"reply","sys_class_name":"sysevent_in_email_action","stop_processing":"false","sys_id":"498e10410a0a0b4b007c8c7f63531747","sys_updated_by":"admin","sys_created_on":"2009-05-16 13:14:39","sys_domain":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_user_group/global","value":"global"},"action":"record_action","sys_name":"Update Incident (BP)","from":"","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"assignment_operator":"","sys_created_by":"glide.maint","table":"incident","order":"100","sys_mod_count":"10","active":"true","sys_overrides":"","sys_domain_path":"","script":"gs.include('validators');\n\nif (current.getTableName() == \"incident\") {\n\t\n\tvar gr = current;\n\t\n\tif (email.subject.toLowerCase().indexOf(\"please reopen\") >= 0)\n\t\tgr = new Incident().reopen(gr, email) || gr;\n\t\n\tgr.comments = \"reply from: \" + email.origemail + \"\\n\\n\" + email.body_text;\n\t\n\tif (gs.hasRole(\"sn_incident_write\") || gs.hasRole(\"itil\")) {\n\t\tif (email.body.assign != undefined)\n\t\t\tgr.assigned_to = email.body.assign;\n\t\t\n\t\tif (email.body.priority != undefined && isNumeric(email.body.priority))\n\t\t\tgr.priority = email.body.priority;\n\t}\n\t\n\tif (gr.canWrite())\n\t\tgr.update();\n}","filter_condition":"","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a083abb304312210559073c06a02f7c0","value":"a083abb304312210559073c06a02f7c0"},"sys_update_name":"sysevent_in_email_action_498e10410a0a0b4b007c8c7f63531747","reply_email":"","name":"Update Incident (BP)","event_name":"email.read","sys_policy":""},{"template":"","required_roles":"","condition_script":"","description":"This inbound email action is triggered when a forwarded email is sent to ServiceNow.\r\n\r\n\r\nThis inbound email action can set the following fields on a new Incident:\r\n\r\nassigned_to\r\n\r\nIn addition to being able to explicitly set the values of the above fields within the email, the following is done automatically:\r\n\r\n1. The Incident caller_id is set to the the user who replied to the email.\r\n2. The email subject is set as the Incident short description.\r\n3. The whole email is added to the Incident as a comment.\r\n4. The Incident category is set to \"inquiry\".\r\n5. The Incident state is set to \"1\".\r\n6. The Incident notify is set to \"2\".\r\n7. The Incident contact type is set to \"email\".\r\n\r\n\r\nExample email: This email will create a new Incident with the following:\r\n\r\n1. The Incident caller is set to \"Fred Luddy\".\r\n2. The Incident short description will be set to \"Not able to connect to wireless network\"\r\n3. The whole email body is added to the Incident as a comment.\r\n4. The Incident is assigned to \"Bow Ruggeri\" if the sender has the itil role.\r\n5. The Incident category is set to \"request\".\r\n6. The Incident state is set to \"1\".\r\n7. The Incident notify is set to \"2\".\r\n8. The Incident contact type is set to \"email\".\r\n\r\n-----\r\n\r\nFrom: \tFred Luddy <fred.luddy@example.com>\r\nSubject: \tFw: Not able to connect to wireless network\r\nDate: \tJune 11, 2013 1:44:55 PM PDT\r\nTo: \t        ServiceNow\r\n\r\nThe wireless network has been down for 30 minutes now. \r\n\r\nassign: Bow Ruggeri\r\n\r\n-----","sys_updated_on":"2021-07-15 09:55:06","type":"forward","sys_class_name":"sysevent_in_email_action","stop_processing":"false","sys_id":"5e53d645c0a8006400b4b0a49f2139ba","sys_updated_by":"admin","sys_created_on":"2005-04-20 06:38:02","sys_domain":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_user_group/global","value":"global"},"action":"record_action","sys_name":"Create Incident (Forwarded)","from":"","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"assignment_operator":"","sys_created_by":"david.loo","table":"incident","order":"100","sys_mod_count":"28","active":"true","sys_overrides":"","sys_domain_path":"","script":"//\tNote: current.opened_by is already set to the first UserID that matches the From: email address\n\ncurrent.caller_id = gs.getUserID();\ncurrent.comments = \"forwarded by: \" + email.origemail + \"\\n\\n\" + email.body_text;\ncurrent.short_description = email.subject;\n\ncurrent.category = \"inquiry\";\ncurrent.incident_state = IncidentState.NEW;\ncurrent.notify = 2;\ncurrent.contact_type = \"email\";\n\nif (email.body.assign != undefined)\n   current.assigned_to = email.body.assign;\n\nif (current.canCreate())\n\tcurrent.insert();","filter_condition":"","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a083abb304312210559073c06a02f7c0","value":"a083abb304312210559073c06a02f7c0"},"sys_update_name":"sysevent_in_email_action_5e53d645c0a8006400b4b0a49f2139ba","reply_email":"","name":"Create Incident (Forwarded)","event_name":"email.read","sys_policy":""},{"template":"","required_roles":"","condition_script":"","description":"This inbound email action is triggered when an email is sent to ServiceNow and:\r\n\r\n1. The email is a reply.\r\n2. The email being replied to was sent by ServiceNow due to creation or update of a Problem.\r\n\r\n\r\nThis inbound email action can update the following fields on a Problem:\r\n\r\nassigned_to\r\npriority\r\n\r\nIn addition to being able to explicitly set the values of the above fields within the email, the whole email is added to the Problem as a comment.\r\n\r\n\r\nExample reply email: this reply will update comments for the request with \"Let's have Don take care of this one.\" It will also assign the problem to \"Don Goodliffe\" if the sender has the itil role.\r\n\r\n-----\r\n\r\nFrom: \tFred Luddy <fred.luddy@example.com>\r\nSubject: \tRe: Problem PRB0040001 has been assigned to you\r\nDate: \tJune 11, 2013 2:38:49 PM PDT\r\nTo: \t        ServiceNow\r\n\r\nLet's have Don take care of this one.\r\n\r\nassign: Don Goodliffe\r\n\r\nOn Jun 11, 2013, at 2:37 PM, IT Service Desk wrote:\r\n\r\nRef:MSG0000008\r\n\r\n-----","sys_updated_on":"2024-02-20 04:17:11","type":"reply","sys_class_name":"sysevent_in_email_action","stop_processing":"false","sys_id":"69e0a6624a3623120176e93014127f43","sys_updated_by":"admin","sys_created_on":"2010-05-05 19:10:49","sys_domain":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_user_group/global","value":"global"},"action":"record_action","sys_name":"Update Problem","from":"","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"assignment_operator":"","sys_created_by":"admin","table":"problem","order":"100","sys_mod_count":"8","active":"true","sys_overrides":"","sys_domain_path":"","script":"gs.include('validators');\nif (current.getTableName() == \"problem\") {\n    current.work_notes = \"reply from: \" + email.origemail + \"\\n\\n\" + email.body_text;\n    if (current.canWrite()) {\n        if (email.body.assign != undefined) {\n            if (canAssignProblemToUser(email.body.assign)) {\n                current.assigned_to = email.body.assign;\n            }\n        }\n        current.update();\n    }\n    //Priority field on problem should not be updated directly, so that code logic is removed\n}\n\nfunction canAssignProblemToUser(assignedTo) {\n    var gr = new GlideRecord(\"sys_user\");\n    gr.addQuery(\"name\", assignedTo);\n    gr.query();\n    while (gr.next()) {\n        var user = gs.getUser().getUserByID(gr.getUniqueValue());\n        var requiredRole = GlidePluginManager.isActive(\"com.snc.best_practice.problem.madrid\") ? 'problem_coordinator' : 'itil';\n        if (!user.hasRole(requiredRole)) {\n            gs.info(\"Log from Update Problem email action \"+requiredRole + \" role is missing for \" + assignedTo + \" user\");\n            return false;\n        }\n        return true;\n    }\n    return false;\n}","filter_condition":"","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a083abb304312210559073c06a02f7c0","value":"a083abb304312210559073c06a02f7c0"},"sys_update_name":"sysevent_in_email_action_69e0a6624a3623120176e93014127f43","reply_email":"","name":"Update Problem","event_name":"email.read","sys_policy":""},{"template":"","required_roles":"","condition_script":"","description":"This inbound email action is triggered when an email is sent to ServiceNow and:\r\n\r\n1. The email is a reply.\r\n2. The email being replied to was sent by ServiceNow due to creation or update of a Change Task.\r\n\r\n\r\nThis inbound email action can update the following fields on a Change Task:\r\n\r\nassigned_to\r\npriority\r\n\r\nIn addition to being able to explicitly set the values of the above fields within the email, the whole email is added to the Change Task as a comment.\r\n\r\n\r\nExample reply email: this reply will update comments for Change Task with \"We need this now.\" It will also set priority to \"1\" if the sender has the itil role.\r\n\r\n-----\r\n\r\nFrom: \tFred Luddy <fred.luddy@example.com>\r\nSubject: \tRe: Change task CTASK0010002 has been assigned to you\r\nDate: \tJune 11, 2013 3:10:54 PM PDT\r\nTo: \t        ServiceNow\r\n\r\nWe need this now.\r\n\r\npriority: 1\r\n\r\nOn Jun 11, 2013, at 3:08 PM, IT Service Desk wrote:\r\n\r\nRef:MSG0000014\r\n\r\n-----","sys_updated_on":"2023-11-24 10:14:36","type":"reply","sys_class_name":"sysevent_in_email_action","stop_processing":"false","sys_id":"69ecea7c4a36231201cc5dfe67a0e639","sys_updated_by":"admin","sys_created_on":"2010-05-05 19:24:13","sys_domain":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_user_group/global","value":"global"},"action":"record_action","sys_name":"Update Change task","from":"","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"assignment_operator":"","sys_created_by":"admin","table":"change_task","order":"100","sys_mod_count":"6","active":"true","sys_overrides":"","sys_domain_path":"","script":"gs.include('validators');\n\nif (current.getTableName() == \"change_task\") {\n\tcurrent.work_notes = \"reply from: \" + email.origemail + \"\\n\\n\" + email.body_text;\n\t\n\tif (gs.hasRole(\"itil, sn_change_write\")) {\n\t\tif (email.body.assign != undefined)\n\t\t\tcurrent.assigned_to = email.body.assign;\n\t\t\n\t\tif (email.body.priority != undefined && isNumeric(email.body.priority))\n\t\t\tcurrent.priority = email.body.priority;\n\t}\n\n\tif (current.canWrite())\n\t\tcurrent.update();\n}","filter_condition":"","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a083abb304312210559073c06a02f7c0","value":"a083abb304312210559073c06a02f7c0"},"sys_update_name":"sysevent_in_email_action_69ecea7c4a36231201cc5dfe67a0e639","reply_email":"","name":"Update Change task","event_name":"email.read","sys_policy":""},{"template":"","required_roles":"","condition_script":"","description":"This inbound email action is triggered when an email is sent to ServiceNow and:\r\n\r\n1. The email is a reply.\r\n2. The email being replied to was sent by ServiceNow due to creation or update of a Change Request.\r\n\r\n\r\nThis inbound email action can update the following fields on a Change Request:\r\n\r\nassigned_to\r\npriority\r\n\r\nIn addition to being able to explicitly set the values of the above fields within the email, the whole email is added to the Change Request as a comment.\r\n\r\n\r\nExample reply email: this reply will update comments for the Change with \"Eric owns this.\" It will also assign the Change to \"Eric Schroeder\" if the sender has the itil role.\r\n\r\n-----\r\n\r\nFrom: \tFred Luddy <fred.luddy@example.com>\r\nSubject: \tRe: Change CHG0000004 has been assigned to you\r\nDate: \tJune 11, 2013 3:03:13 PM PDT\r\nTo: \t        ServiceNow\r\n\r\nEric owns this.\r\n\r\nassign: eric.schroeder\r\n\r\nOn Jun 11, 2013, at 3:01 PM, IT Service Desk wrote:\r\n\r\nRef:MSG0000013\r\n\r\n-----","sys_updated_on":"2023-11-24 10:14:30","type":"reply","sys_class_name":"sysevent_in_email_action","stop_processing":"false","sys_id":"69ed98804a3623120144e31afee85971","sys_updated_by":"admin","sys_created_on":"2010-05-05 19:24:58","sys_domain":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_user_group/global","value":"global"},"action":"record_action","sys_name":"Update Change","from":"","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"assignment_operator":"","sys_created_by":"admin","table":"change_request","order":"100","sys_mod_count":"9","active":"true","sys_overrides":"","sys_domain_path":"","script":"gs.include('validators');\n\nif (current.getTableName() == \"change_request\") {\n\tcurrent.comments = \"reply from: \" + email.origemail + \"\\n\\n\" + email.body_text;\n\t\n\tif (gs.hasRole(\"itil, sn_change_write\")) {\n\t\tif (email.body.assign != undefined)\n\t\t\tcurrent.assigned_to = email.body.assign;\n\t\t\n\t\tif (email.body.priority != undefined && isNumeric(email.body.priority))\n\t\t\tcurrent.priority = email.body.priority;\n\t}\n\n\tif (current.canWrite())\n\t\tcurrent.update();\n}","filter_condition":"","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a083abb304312210559073c06a02f7c0","value":"a083abb304312210559073c06a02f7c0"},"sys_update_name":"sysevent_in_email_action_69ed98804a3623120144e31afee85971","reply_email":"","name":"Update Change","event_name":"email.read","sys_policy":""},{"template":"","required_roles":"","condition_script":"","description":"","sys_updated_on":"2023-10-16 11:44:35","type":"new","sys_class_name":"sysevent_in_email_action","stop_processing":"true","sys_id":"6e583dffeb6022002a7a666cd206fe85","sys_updated_by":"admin","sys_created_on":"2016-07-18 07:52:29","sys_domain":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_user_group/global","value":"global"},"action":"record_action","sys_name":"Process CAB meeting invite replies","from":"","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"assignment_operator":"","sys_created_by":"admin","table":"cab_attendee","order":"1","sys_mod_count":"21","active":"true","sys_overrides":"","sys_domain_path":"","script":"(function runAction(/*GlideRecord*/ current, /*GlideRecord*/ event, /*EmailWrapper*/ email, /*ScopedEmailLogger*/ logger, /*EmailClassifier*/ classifier) {\n\n\tif (!sys_email.user_id)\n\t\treturn;\n\n\tvar sysAttachmentsGr = new GlideSysAttachment().getAttachments(\"sys_email\", event.parm1);\n\tif (!sysAttachmentsGr.next()) {\n\t\treturn;\n\t}\n\t\n\tvar attachmentContent = new GlideSysAttachment().getContent(sysAttachmentsGr);\n\tvar uidMatch = attachmentContent.match(/UID:([a-fA-F0-9]{32})/);\n\t\n\tif (uidMatch == null)\n\t\treturn;\n\t\n\tvar meetingId = uidMatch[1];\n\tif (!meetingId)\n\t\treturn;\n\t\n\tvar cabAttendeeGr = new GlideRecord(CAB.ATTENDEE);\n\tcabAttendeeGr.addQuery(\"cab_meeting\", meetingId);\n\tcabAttendeeGr.addQuery(\"attendee\", sys_email.user_id);\n\tcabAttendeeGr.query();\n\t\n\tif (!cabAttendeeGr.next())\n\t\treturn;\n\t\n\tvar attendeeMatch = attachmentContent.match(/ATTENDEE;.*PARTSTAT=([^:;]*)/);\n    var attendanceReply = null;\n\tif (attendeeMatch && attendeeMatch.length > 1)\n\t\tattendanceReply = attendeeMatch[1].toLowerCase();\n\t\n\tif (attendanceReply == null )\n\t\treturn;\n\t\n\tvar mapReplyToAttendance = {\"tentative\": \"tentative\",\n\t\t\t\t\t\t\t    \"accepted\": \"attending\",\n\t\t\t\t\t\t\t    \"declined\": \"not_attending\"};\n\t\n\tvar attendeeAttendance = mapReplyToAttendance[attendanceReply];\n\tif (!attendeeAttendance)\n\t\treturn;\n\t\n\tvar cabAttendee = new CABAttendee(cabAttendeeGr);\n\tcabAttendee.setAttendance(attendeeAttendance);\n\tcabAttendee.update();\n\t\n\tsys_email.target_table = \"cab_attendee\";\n\tsys_email.instance = cabAttendeeGr.getUniqueValue();\n\t\n})(current, event, email, logger, classifier);","filter_condition":"subjectSTARTSWITHTentative: CAB Meeting: Your attendance is requested in CAB^ORsubjectSTARTSWITHAccepted: CAB Meeting: Your attendance is requested in CAB^ORsubjectSTARTSWITHDeclined: CAB Meeting: Your attendance is requested in CAB^EQ","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"sys_update_name":"sysevent_in_email_action_6e583dffeb6022002a7a666cd206fe85","reply_email":"","name":"Process CAB meeting invite replies","event_name":"email.read","sys_policy":""},{"template":"","required_roles":"","condition_script":"","description":"","sys_updated_on":"2013-12-13 16:48:29","type":"reply","sys_class_name":"sysevent_in_email_action","stop_processing":"false","sys_id":"aa5e79f25f2111001c9b2572f2b47715","sys_updated_by":"glide.james","sys_created_on":"2013-12-13 16:45:56","sys_domain":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_user_group/global","value":"global"},"action":"","sys_name":"Update Service Category Request","from":"","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"assignment_operator":"","sys_created_by":"glide.james","table":"catalog_category_request","order":"100","sys_mod_count":"1","active":"true","sys_overrides":"","sys_domain_path":"","script":"if (current.getTableName() == \"catalog_category_request\") {\n   current.comments = \"reply from: \" + email.origemail + \"\\n\\n\" + email.body_text;\n   current.update();\n}","filter_condition":"","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/696867b304f12210559073c06a02f721","value":"696867b304f12210559073c06a02f721"},"sys_update_name":"sysevent_in_email_action_aa5e79f25f2111001c9b2572f2b47715","reply_email":"","name":"Update Service Category Request","event_name":"email.read","sys_policy":""},{"template":"","required_roles":"","condition_script":"","description":"Checks if an email reply is a response to an email that was sent out by the 'On-Call: Assign by Acknowledgement' workflow\r\nParse the inbound email and strip the text after incident number and check the remaining text for ACC or REJ and assign after checking the notify device table for any user association with that email (sent from).","sys_updated_on":"2021-03-23 14:12:33","type":"reply","sys_class_name":"sysevent_in_email_action","stop_processing":"false","sys_id":"ae4aa8700fd502003dde8fbce1050e45","sys_updated_by":"admin","sys_created_on":"2015-07-14 07:48:47","sys_domain":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_user_group/global","value":"global"},"action":"record_action","sys_name":"On-Call: Assign by Acknowledgement","from":"","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"assignment_operator":"","sys_created_by":"aat.rutten@snc","table":"incident","order":"101","sys_mod_count":"89","active":"true","sys_overrides":"","sys_domain_path":"","script":"new OnCallAssignByAck()\n\t.setRecord(current)\n\t.setEmail(email)\n\t.setUser(gs.getUserID())\n\t.process();","filter_condition":"","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/8c6ca73b04352210559073c06a02f754","value":"8c6ca73b04352210559073c06a02f754"},"sys_update_name":"sysevent_in_email_action_ae4aa8700fd502003dde8fbce1050e45","reply_email":"","name":"On-Call: Assign by Acknowledgement","event_name":"email.read","sys_policy":""},{"template":"","required_roles":"","condition_script":"","description":"This inbound email action is triggered when an email is sent to ServiceNow and:\r\n\r\n1. The email is a reply.\r\n2. The email being replied to was sent by ServiceNow due to creation or update of an Approval Request.\r\n\r\nThis inbound email action can update the state field of an Approval Request, if the subject of the email contains either \"approve\" or \"reject\", or if the state is set within the body of the email.\r\n\r\nIn addition to being able to explicitly set the value of the state field, the whole email is added to the Approval Request as a comment.\r\n\r\nExample reply email: this reply will update comments for the Approval Request with \"This seems fine.\", and set the state to \"approved\". \r\n\r\n-----\r\n\r\nFrom: \tFred Luddy <fred.luddy@example.com>\r\nSubject: \tRe: Approval request has been assigned to you\r\nDate: \tJune 11, 2013 3:10:54 PM PDT\r\nTo: \t        ServiceNow\r\n\r\nThis seems fine.\r\n\r\nstate: approved\r\n\r\nOn Jun 11, 2013, at 3:08 PM, IT Service Desk wrote:\r\n\r\nRef:MSG0000107\r\n\r\n----- ","sys_updated_on":"2019-04-03 21:08:28","type":"reply","sys_class_name":"sysevent_in_email_action","stop_processing":"true","sys_id":"b43ef438c611227100a9aa83fe121dda","sys_updated_by":"david.airmet@snc","sys_created_on":"2005-05-06 23:02:34","sys_domain":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_user_group/global","value":"global"},"action":"record_action","sys_name":"/*global current, email, gs, GlideContro","from":"","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"assignment_operator":"","sys_created_by":"glide.maint","table":"sysapproval_approver","order":"100","sys_mod_count":"27","active":"true","sys_overrides":"","sys_domain_path":"","script":"/*global current, email, gs, GlideController, GlideRecord*/\n/*eslint-disable eqeqeq*/\nprocessApprovalEmail();\n\nfunction processApprovalEmail() {\n\t\"use strict\";\n\tvar errorMsg = \"\";\n\tvar msgArray = [];\n\n\tif (current.getTableName() != \"sysapproval_approver\")\n\t\treturn;\n\n\tvar displayValue = getApprovalDisplayValue(current);\n\n\tif (!validUser()) {\n\t\tgs.log(getFailurePreamble() + \"Sender email does not match approval assignee.\");\n\t\tmsgArray.push(displayValue);\n\t\tmsgArray.push(current.approver.getDisplayValue());\n\t\tmsgArray.push(current.approver.email);\n\t\terrorMsg = gs.getMessage(\"approvalInvalidUser\", msgArray);\n\t\tcreateEmailEvent(errorMsg);\n\t\treturn;\n\t}\n\n\tif (current.state == 'cancelled') {\n\t\tgs.log(getFailurePreamble() + \"The approval has been canceled.\");\n\t\tmsgArray.push(displayValue);\n\t\terrorMsg = gs.getMessage(\"approvalCancelled\", msgArray);\n\t\tcreateEmailEvent(errorMsg);\n\t\treturn;\n\t}\n\n\t//Added for 'No Longer Required' approval state\n\tif (current.state == 'not_required') {\n\t\tgs.log(getFailurePreamble() + \"The approval is no longer required.\");\n\t\tmsgArray.push(displayValue);\n\t\terrorMsg = gs.getMessage(\"approvalNotRequired\", msgArray);\n\t\tcreateEmailEvent(errorMsg);\n\t\treturn;\n\t}\n\n\tif (email.body.state != undefined)\n\t\tcurrent.state = email.body.state;\n\n\tif (email.subject.indexOf(\"approve\") >= 0)\n\t\tcurrent.state = \"approved\";\n\n\tif (email.subject.indexOf(\"reject\") >= 0)\n\t\tcurrent.state = \"rejected\";\n\n\tif (current.state != \"approved\" && current.state != \"rejected\") {\n\t\tgs.log(getFailurePreamble() + \"The subject is malformed. The approver probably did not click the approve or reject button on the email.\");\n\t\tmsgArray.push(displayValue);\n\t\terrorMsg = gs.getMessage(\"approvalFailed\", msgArray);\n\t\tcreateEmailEvent(errorMsg);\n\t\treturn;\n\t}\n\n\tcurrent.comments = \"reply from: \" + email.from + \"\\n\\n\" + email.body_text;\n\tvar controller = new GlideController();\n\tcontroller.putGlobal(\"approvalSource\", \"email\");\n\tcurrent.update();\n\tcontroller.removeGlobal(\"approvalSource\");\n\n\tfunction validUser() {\n\t\treturn new ApprovalDelegationUtil().isMyApproval(current);\n\t}\n\n\tfunction createEmailEvent(msg) {\n\t\tgs.eventQueue(\"approval.email.errorMsg\", current, email.from, msg);\n\t}\n\n\tfunction getFailurePreamble() {\n\t\treturn 'Approval email from ' + email.from + ' for task \"' + displayValue + '\" assigned to \"' + current.approver.getDisplayValue()\n\t\t\t\t+ '\" failed because: ';\n\t}\n\n\tfunction getApprovalDisplayValue(approval) {\n\t\tif (!gs.nil(approval.sysapproval))\n\t\t\treturn approval.getDisplayValue();\n\t\telse {\n\t\t\tvar target = new GlideRecord(approval.source_table);\n\t\t\tif (target.get(approval.document_id))\n\t\t\t\treturn target.getDisplayValue();\n\t\t}\n\t\tgs.warn(\"Target for sysapproval_approver:\" + approval.getUniqueValue() + \" not found. Target=\" + approval.source_table + \":\" + approval.document_id);\n\t\treturn \"Unknown\";\n\t}\n\n}\n","filter_condition":"","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a083abb304312210559073c06a02f7c0","value":"a083abb304312210559073c06a02f7c0"},"sys_update_name":"sysevent_in_email_action_b43ef438c611227100a9aa83fe121dda","reply_email":"","name":"Update Approval Request","event_name":"email.read","sys_policy":""}]}