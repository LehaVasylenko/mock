{"result":[{"sys_mod_count":"2","active":"true","sys_updated_on":"2008-07-24 20:20:32","sys_tags":"","when":"onAfter","script":"//\r\n// After a group has been inserted the line of code below will get\r\n// all the users that belong to the group according to LDAP and\r\n// put the users into this group.  This is done by getting \r\n// the value from the u_members field from the source record.\r\n// If you do not want to put the users in the group then you \r\n// can comment out or remove the line below.  If you are using\r\n// something other than Active Directory and user membership is\r\n// not indicated via the 'member' attribute then you can add the\r\n// following line to indicate what field should be used.  This\r\n// line would be added before the the call to addMembers.\r\n//\r\n//  ldapUtils.setMemberField('u_yourAttributeNameGoesHere');\r\n//\r\nldapUtils.addMembers(source, target);","sys_class_name":"sys_transform_script","sys_id":"0dc646160a0a0b26007beb877ee7cdf9","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/d6c727bf04b12210559073c06a02f7fe","value":"d6c727bf04b12210559073c06a02f7fe"},"sys_update_name":"sys_transform_script_0dc646160a0a0b26007beb877ee7cdf9","sys_updated_by":"glide.maint","sys_created_on":"2008-05-21 23:18:15","sys_name":"onAfter","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"map":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_transform_map/e9cf6f790a0a0b2600bbe67ca2f2e676","value":"e9cf6f790a0a0b2600bbe67ca2f2e676"},"sys_created_by":"glide.maint","order":"100","sys_policy":""},{"sys_mod_count":"16","active":"true","sys_updated_on":"2018-02-23 02:08:40","sys_tags":"","when":"onBefore","script":"(function runTransformScript(source, map, log, target /*undefined onStart*/ ) {\n\tvar oidcTransformCheck = new OIDCTransformCheck(source, map, log, target);\n\tvar isMappingValid = oidcTransformCheck.validateMappingOnBefore();\n\tif(!isMappingValid) {\n\t\tignore = true;\n\t}\n})(source, map, log, target);","sys_class_name":"sys_transform_script","sys_id":"464ba877e7101300b16f20c343f6a9bb","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4242b3b04312210559073c06a02f7f7","value":"a4242b3b04312210559073c06a02f7f7"},"sys_update_name":"sys_transform_script_464ba877e7101300b16f20c343f6a9bb","sys_updated_by":"admin","sys_created_on":"2018-02-22 03:27:21","sys_name":"onBefore","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"map":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_transform_map/cf1fa1e953001300696c4956a11c08a3","value":"cf1fa1e953001300696c4956a11c08a3"},"sys_created_by":"admin","order":"100","sys_policy":""},{"sys_mod_count":"64","active":"true","sys_updated_on":"2023-06-12 15:23:44","sys_tags":"","when":"onBefore","script":"(function runTransformScript(source, map, log, target /*undefined onStart*/ ) {\n\n    var SOURCE_TYPE = \"HCM_FILE_UPLOAD\";\n    if (source.u_user_id.nil() && source.u_business_title.nil() && source.u_location.nil() &&\n        source.u_job_family.nil() && source.u_job_title.nil() && source.u_job_code.nil() &&\n        source.u_job_level.nil() && source.u_employment_type.nil() &&\n        source.u_location_type.nil() && source.u_start_date.nil() &&\n        source.u_end_date.nil() &&\n        source.u_work_description.nil()) {\n        ignore = true;\n        return 0;\n    }\n\n    if (source.u_user_id.nil()) {\n        log.warn('User id cannot be empty');\n        ignore = true;\n        return 0;\n    }\n    \n    if (source.u_start_date.nil()) {\n        log.warn('Start date cannot be empty');\n        ignore = true;\n        return 0;\n    }\n\n    //Date validation\n    if (source.u_start_date.nil() && source.u_end_date != \"\") {\n        log.warn('Start date must be provided');\n        ignore = true;\n        return 0;\n    }\n\n    if (source.u_start_date != \"\" && source.u_end_date != \"\") {\n        var startDateMs = new GlideDateTime(source.u_start_date).getNumericValue();\n        var endDateMs = new GlideDateTime(source.u_end_date).getNumericValue();\n\t\t\n        // 0 from \"getDateFormat\" means an invalid date string was passed to it\n        if (startDateMs === 0 || endDateMs === 0) {\n            if (startDate === 0)\n                log.warn(\"Start is invalid\");\n            if (endDate === 0)\n                log.warn(\"End date is invalid \");\n            ignore = true;\n            return 0;\n        }\n        if (startDateMs >= endDateMs) {\n            log.warn(\"Start date must be after end date\");\n            ignore = true;\n            return 0;\n        }\n\n    }\n    var presentDate = new GlideDateTime();\n\n    if(presentDate < new GlideDateTime(source.u_start_date)) {\n        log.warn(\"Start date is in future.\");\n        ignore = true;\n        return 0;\n    }\n\n    //Check sys_user is exists or not, if not ignore inserting\n    var grSysUser = new GlideRecord('sys_user');\n    grSysUser.addQuery(\"user_name\", source.u_user_id);\n    grSysUser.query();\n    if (grSysUser.next()) {\n        //Check sn_employee_profile is exists or not, if not ignore inserting\n        var grEmployeeProfile = new GlideRecord('sn_employee_profile');\n        grEmployeeProfile.addQuery(\"user\", grSysUser.sys_id.toString());\n        grEmployeeProfile.query();\n        if (grEmployeeProfile.next()) {\n            //Check job profile(s) is exists or not, if not ignore inserting\n            var grJobProfile = new GlideRecord('sn_skills_int_job_family_m2m_job_profile');\n            grJobProfile.addQuery(\"job_family.name\", source.u_job_family);\n            grJobProfile.addQuery(\"job_profile.job_code\", source.u_job_code);\n            grJobProfile.addQuery(\"job_profile.job_level.name\", source.u_job_level);\n            grJobProfile.query();\n            if (grJobProfile.next()) {\n                //Check employee position is exists or not, if not insert/update\n                var grEmployeePosition = new GlideRecord('sn_employee_position');\n                grEmployeePosition.addQuery(\"job_profile\", grJobProfile.job_profile.sys_id.toString());\n                grEmployeePosition.addQuery(\"employee_profile\", grEmployeeProfile.sys_id.toString());\n                grEmployeePosition.addActiveQuery();\n                grEmployeePosition.query();\n                //Get location refferance\n                var grLocation = new GlideRecord('cmn_location');\n                grLocation.addQuery('name', source.u_location).addOrCondition('city', source.u_location);\n                grLocation.orderByDesc('name');\n                grLocation.query();\n                var locationId = null;\n                if (grLocation.next()) {\n                    locationId = grLocation.sys_id.toString();\n                }\n\n                if (grEmployeePosition.next()) {\n                    //Update sn_employee_posstion other details\n                    grEmployeePosition.location = locationId;\n                    grEmployeePosition.primary = source.u_primary;\n                    grEmployeePosition.business_title = source.u_business_title;\n                    grEmployeePosition.employment_type = source.employment_type;\n                    grEmployeePosition.location_type = source.u_location_type;\n                    grEmployeePosition.start_date = source.u_start_date;\n                    grEmployeePosition.end_date = source.u_end_date;\n                    grEmployeePosition.work_description = source.u_work_description;\n                    grEmployeePosition.source = SOURCE_TYPE;\n                    grEmployeePosition.update();\n                    ignore = true;\n                } else {\n                    //Insert job position\n                    target.job_profile = grJobProfile.job_profile.toString();\n                    target.employee_profile = grEmployeeProfile.sys_id.toString();\n                    target.location = locationId;\n                    target.source = SOURCE_TYPE;\n                    //Read \n                    var grJobFamily = new GlideRecord('sn_skills_int_job_family');\n                    grJobFamily.addQuery(\"name\", source.u_job_family);\n                    grJobFamily.query();\n                    if (grJobFamily.next()) {\n                        target.job_family = grJobFamily.sys_id.toString();\n                    }\n                }\n            } else {\n                log.warn('Job profile does not exist for ' + source.u_user_id);\n                ignore = true;\n            }\n        } else {\n            log.warn('Employee profile does not exist for  ' + source.u_user_id);\n            ignore = true;\n        }\n\n    } else {\n        log.warn('User does not exist ' + source.u_user_id);\n        ignore = true;\n    }\n})(source, map, log, target);","sys_class_name":"sys_transform_script","sys_id":"7e4f24674349611052e602a4bab8f2aa","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1e95bac2738f001001b566b90ff6a7cd","value":"1e95bac2738f001001b566b90ff6a7cd"},"sys_update_name":"sys_transform_script_7e4f24674349611052e602a4bab8f2aa","sys_updated_by":"admin","sys_created_on":"2023-02-22 05:33:39","sys_name":"onBefore","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1e95bac2738f001001b566b90ff6a7cd","value":"1e95bac2738f001001b566b90ff6a7cd"},"map":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_transform_map/a78720e74309611052e602a4bab8f218","value":"a78720e74309611052e602a4bab8f218"},"sys_created_by":"admin","order":"100","sys_policy":""},{"sys_mod_count":"1","active":"true","sys_updated_on":"2022-11-22 16:37:37","sys_tags":"","when":"onBefore","script":"(function runTransformScript(source, map, log, target /*undefined onStart*/ ) {\n\n    var isAPWAdvancedInstalled = GlidePluginManager.isActive('sn_apw_advanced');\n    var isPortfolioMgmtInstalled = GlidePluginManager.isActive('com.snc.portfolio_management');\n\n    var orgCondition = !gs.nil(source.u_company) || !gs.nil(source.u_business_unit) ||\n        !gs.nil(source.u_department) || (isPortfolioMgmtInstalled && !gs.nil(source.u_portfolio)) ||\n        (isAPWAdvancedInstalled && !gs.nil(source.u_product_model)) ||\n        (isAPWAdvancedInstalled && !gs.nil(source.u_initiative)) ||\n        (isAPWAdvancedInstalled && !gs.nil(source.u_strategic_program));\n    var assignedEntityCondition = !gs.nil(source.u_assigned_entity_type) && !gs.nil(source.u_assigned_entity);\n\n    if ((assignedEntityCondition && orgCondition) || (orgCondition && assignedEntityCondition)) {\n        log.error(\"Goal \" + source.u_name + \" import failed: Please provide either 'one of the organization field' or 'Assigned entity type & Assigned entity'\");\n        ignore = true;\n    }\n\n})(source, map, log, target);","sys_class_name":"sys_transform_script","sys_id":"987cc75467d791107536d10c48f9229a","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/11879041532030103913ddeeff7b12d8","value":"11879041532030103913ddeeff7b12d8"},"sys_update_name":"sys_transform_script_987cc75467d791107536d10c48f9229a","sys_updated_by":"admin","sys_created_on":"2022-11-17 14:50:20","sys_name":"onBefore","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/11879041532030103913ddeeff7b12d8","value":"11879041532030103913ddeeff7b12d8"},"map":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_transform_map/d37c644367541110b604d10c48f922af","value":"d37c644367541110b604d10c48f922af"},"sys_created_by":"admin","order":"100","sys_policy":""},{"sys_mod_count":"5","active":"true","sys_updated_on":"2018-02-23 02:10:31","sys_tags":"","when":"onBefore","script":"(function runTransformScript(source, map, log, target /*undefined onStart*/ ) {\n\tvar oidcTransformCheck = new OIDCTransformCheck(source, map, log, target);\n\tvar isMappingValid = oidcTransformCheck.validateMappingOnBefore();\n\tif(!isMappingValid) {\n\t\tignore = true;\n\t}\n})(source, map, log, target);","sys_class_name":"sys_transform_script","sys_id":"cc17b43be7101300b16f20c343f6a9ad","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4242b3b04312210559073c06a02f7f7","value":"a4242b3b04312210559073c06a02f7f7"},"sys_update_name":"sys_transform_script_cc17b43be7101300b16f20c343f6a9ad","sys_updated_by":"admin","sys_created_on":"2018-02-22 04:18:56","sys_name":"onBefore","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"map":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_transform_map/9c2c0e7653001300696c4956a11c08ea","value":"9c2c0e7653001300696c4956a11c08ea"},"sys_created_by":"admin","order":"100","sys_policy":""},{"sys_mod_count":"4","active":"true","sys_updated_on":"2018-02-23 02:10:42","sys_tags":"","when":"onBefore","script":"(function runTransformScript(source, map, log, target /*undefined onStart*/ ) {\n\tvar oidcTransformCheck = new OIDCTransformCheck(source, map, log, target);\n\tvar isMappingValid = oidcTransformCheck.validateMappingOnBefore();\n\tif(!isMappingValid) {\n\t\tignore = true;\n\t}\n})(source, map, log, target);","sys_class_name":"sys_transform_script","sys_id":"cdd7b83be7101300b16f20c343f6a926","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4242b3b04312210559073c06a02f7f7","value":"a4242b3b04312210559073c06a02f7f7"},"sys_update_name":"sys_transform_script_cdd7b83be7101300b16f20c343f6a926","sys_updated_by":"admin","sys_created_on":"2018-02-22 04:22:07","sys_name":"onBefore","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"map":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_transform_map/61cd3c6553001300696c4956a11c088a","value":"61cd3c6553001300696c4956a11c088a"},"sys_created_by":"admin","order":"100","sys_policy":""},{"sys_mod_count":"3","active":"false","sys_updated_on":"2011-04-11 23:11:04","sys_tags":"","when":"onBefore","script":"//Deactivate LDAP-disabled users during transform based on 'userAccountControl' attribute.\r\n//This transform script is inactive by default\r\n//\r\n//NOTE: User records must be visible based on the OU filter in order to be disabled\r\n\r\n//Convert the userAccountControl attribute to a hex value\r\nvar ctrl = parseInt(source.u_useraccountcontrol, 10);\r\nctrl = ctrl.toString(16);\r\n\r\n//The relevant digit is the final one\r\n//A final hex digit value of '2' in 'ctrl' means disabled\r\nif (ctrl.substr(-1) == \"2\") {\r\n   target.active = false;\r\n   target.locked_out = true;\r\n   if (action == 'insert')\r\n      ignore = true;\r\n} else {\r\n   //Optional: Reactivate and unlock the user account\r\n   //target.active = true;\r\n   //target.locked_out = ctrl.substr(-2, 1) == \"1\";\r\n}","sys_class_name":"sys_transform_script","sys_id":"d41eb6a90a0a3c7401827bac49850be4","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/d6c727bf04b12210559073c06a02f7fe","value":"d6c727bf04b12210559073c06a02f7fe"},"sys_update_name":"sys_transform_script_d41eb6a90a0a3c7401827bac49850be4","sys_updated_by":"admin","sys_created_on":"2010-09-02 20:25:32","sys_name":"onBefore","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"map":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_transform_map/e817468a0a0a0b260050ef1ab53941c6","value":"e817468a0a0a0b260050ef1ab53941c6"},"sys_created_by":"admin","order":"100","sys_policy":""},{"sys_mod_count":"13","active":"true","sys_updated_on":"2018-02-23 02:09:18","sys_tags":"","when":"onBefore","script":"(function runTransformScript(source, map, log, target /*undefined onStart*/ ) {\n\tvar oidcTransformCheck = new OIDCTransformCheck(source, map, log, target);\n\tvar isMappingValid = oidcTransformCheck.validateMappingOnBefore();\n\tif(!isMappingValid) {\n\t\tignore = true;\n\t}\n})(source, map, log, target);","sys_class_name":"sys_transform_script","sys_id":"d757f43be7101300b16f20c343f6a901","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4242b3b04312210559073c06a02f7f7","value":"a4242b3b04312210559073c06a02f7f7"},"sys_update_name":"sys_transform_script_d757f43be7101300b16f20c343f6a901","sys_updated_by":"admin","sys_created_on":"2018-02-22 04:20:10","sys_name":"onBefore","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"map":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_transform_map/255eeda953001300696c4956a11c088b","value":"255eeda953001300696c4956a11c088b"},"sys_created_by":"admin","order":"100","sys_policy":""},{"sys_mod_count":"1","active":"true","sys_updated_on":"2008-05-14 19:22:34","sys_tags":"","when":"onStart","script":"gs.include(\"LDAPUtils\");\r\nvar ldapUtils = new LDAPUtils();\r\nldapUtils.setLog(log);","sys_class_name":"sys_transform_script","sys_id":"e8a3688f0a0a0b2600904e12f419b619","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/d6c727bf04b12210559073c06a02f7fe","value":"d6c727bf04b12210559073c06a02f7fe"},"sys_update_name":"sys_transform_script_e8a3688f0a0a0b2600904e12f419b619","sys_updated_by":"glide.maint","sys_created_on":"2008-05-14 18:14:34","sys_name":"onStart","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"map":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_transform_map/e817468a0a0a0b260050ef1ab53941c6","value":"e817468a0a0a0b260050ef1ab53941c6"},"sys_created_by":"glide.maint","order":"100","sys_policy":""},{"sys_mod_count":"1","active":"true","sys_updated_on":"2008-05-22 00:12:00","sys_tags":"","when":"onComplete","script":"//\r\n// It is possible that the manager for a user did not exist in the database when\r\n// the user was processed and therefore we could not locate and set the manager field.\r\n// The processManagers call below will find all those records for which a manager could\r\n// not be found and attempt to locate the manager again.  This happens at the end of the\r\n// import and therefore all users should have been created and we should be able to\r\n// locate the manager at this point\r\nldapUtils.processManagers();","sys_class_name":"sys_transform_script","sys_id":"e8e54a480a0a0b26000595728b6e47fd","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/d6c727bf04b12210559073c06a02f7fe","value":"d6c727bf04b12210559073c06a02f7fe"},"sys_update_name":"sys_transform_script_e8e54a480a0a0b26000595728b6e47fd","sys_updated_by":"glide.maint","sys_created_on":"2008-05-14 19:26:08","sys_name":"onComplete","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"map":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_transform_map/e817468a0a0a0b260050ef1ab53941c6","value":"e817468a0a0a0b260050ef1ab53941c6"},"sys_created_by":"glide.maint","order":"100","sys_policy":""},{"sys_mod_count":"0","active":"true","sys_updated_on":"2008-05-14 23:48:46","sys_tags":"","when":"onStart","script":"gs.include(\"LDAPUtils\");\r\nvar ldapUtils = new LDAPUtils();\r\nldapUtils.setLog(log);\r\n","sys_class_name":"sys_transform_script","sys_id":"e9d5e6770a0a0b2600bcf02ffc302481","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/d6c727bf04b12210559073c06a02f7fe","value":"d6c727bf04b12210559073c06a02f7fe"},"sys_update_name":"sys_transform_script_e9d5e6770a0a0b2600bcf02ffc302481","sys_updated_by":"glide.maint","sys_created_on":"2008-05-14 23:48:46","sys_name":"onStart","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"map":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_transform_map/e9cf6f790a0a0b2600bbe67ca2f2e676","value":"e9cf6f790a0a0b2600bbe67ca2f2e676"},"sys_created_by":"glide.maint","order":"100","sys_policy":""},{"sys_mod_count":"5","active":"true","sys_updated_on":"2018-02-23 02:09:42","sys_tags":"","when":"onBefore","script":"(function runTransformScript(source, map, log, target /*undefined onStart*/ ) {\n\tvar oidcTransformCheck = new OIDCTransformCheck(source, map, log, target);\n\tvar isMappingValid = oidcTransformCheck.validateMappingOnBefore();\n\tif(!isMappingValid) {\n\t\tignore = true;\n\t}\n})(source, map, log, target);","sys_class_name":"sys_transform_script","sys_id":"ff97783be7101300b16f20c343f6a91c","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4242b3b04312210559073c06a02f7f7","value":"a4242b3b04312210559073c06a02f7f7"},"sys_update_name":"sys_transform_script_ff97783be7101300b16f20c343f6a91c","sys_updated_by":"admin","sys_created_on":"2018-02-22 04:21:09","sys_name":"onBefore","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"map":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_transform_map/00daa5a953001300696c4956a11c0883","value":"00daa5a953001300696c4956a11c0883"},"sys_created_by":"admin","order":"100","sys_policy":""}]}