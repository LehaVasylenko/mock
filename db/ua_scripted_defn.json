{"result":[{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Count of licensed users with access to 51-200 custom tables","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:18:54","kb_article_url":"","sys_tags":"","version":"","script":"answer = SNC.UACTScriptUtils.getUserCTAccessCount(51, 200);","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"00e9a7fb04f12210559073c06a02f770","definition_id":"DEFN1001450","sys_updated_by":"system","exec_time_threshold":"500","sys_created_on":"2025-06-05 05:18:54","name":"Monthly Count of all users with access to [51- 200] tables under\n\t\t\tProfessional SKU","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"<p>Automated Test Framework (ATF):&nbsp;Get a count of each client error that has been encountered</p>","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:17:20","kb_article_url":"","sys_tags":"","version":"","script":"var data = {};\nvar totalClientErrors = 0;\nvar numClientErrors;\n\nvar ga = new GlideAggregate('sys_atf_test_result_item');\nga.addQuery('type', 'client_error');\nga.addAggregate('COUNT', 'summary');\nga.query();\nwhile (ga.next()) {\n    numClientErrors = parseInt(ga.getAggregate('COUNT', 'summary'));\n    data[ga.summary] = numClientErrors;\n    totalClientErrors += numClientErrors;\n}\n\ndata['count'] = totalClientErrors;\nanswer = JSON.stringify(data);","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"0189e37b04f12210559073c06a02f79a","definition_id":"DEFN1000662","sys_updated_by":"system","exec_time_threshold":"1500","sys_created_on":"2025-06-05 05:17:20","name":"Get a count of each client error that has been encountered","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Time to Relief for P5 Or Greater Priority INTs closed yesterday (in Minutes)","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 04:55:17","kb_article_url":"","sys_tags":"","version":"","script":"var totalTTRSecs = 0;\nvar totalTTRMins = 0;\n\nfunction getTTRForP5OrGreaterINTs() {\n\n\tvar incidentTbl = \"incident\";\n\n\tif(!GlideTableDescriptor.isValid(incidentTbl)) \n\t\treturn 0;\n\t\t\n\tvar grClosed = new GlideRecord(incidentTbl);\n\t//All INTs closed yesterday\n\tgrClosed.addEncodedQuery(\"priority>=5^closed_atONYesterday@javascript:gs.daysAgoStart(1)@javascript:gs.daysAgoEnd(1)^closed_atISNOTEMPTY\");\n\t\n\tgrClosed.query();\n\n\twhile (grClosed.next()) {\n\t\t\n\t\tvar opened = grClosed.getValue(\"opened_at\");\n        var closed = grClosed.getValue(\"closed_at\");\n        var ttr = gs.dateDiff(opened, closed, true);\n\t\t\n\t\ttotalTTRSecs += parseInt(ttr);\t\n\t\ttotalTTRMins += parseInt(ttr)/60;\n\t}\n\t\n\treturn Math.round(totalTTRMins);\n}\n\nanswer = '{\"count\": \"' + getTTRForP5OrGreaterINTs() + '\",\"TotalTTR(Seconds)\":\"' + totalTTRSecs + '\"}';\n","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"0274e7fb04312210559073c06a02f70c","definition_id":"SMBEN100015","sys_updated_by":"system","exec_time_threshold":"0","sys_created_on":"2025-06-05 04:55:17","name":"TTR For P5 Or Greater, Closed yesterday - Minutes","sys_created_by":"system"},{"definition_type":"","count_type":"Licensing","sys_mod_count":"0","active":"true","description":"Count of custom applications","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 04:55:17","kb_article_url":"","sys_tags":"","version":"","script":"answer = getCustomApplications();\n\n/*\n* Count the number of records in sys_app\n* Then include the sys_store_app records that have same vendor prefix as those were developed custom apps that were shared to other instances via Make App Available\n*/\nfunction getCustomApplications() {\n    var customApps = -1;\n\tvar prefix = 'x_';\n\tvar prefixSeperator = '_';\n\n\tif (!GlideTableDescriptor.isValid('sys_app') )\n\t\treturn customApps;\n\tvar gr = new GlideAggregate('sys_app');\n\tgr.addAggregate('COUNT');\n\tgr.query();\n\n\tif (gr.next())\n\t\tcustomApps = parseInt(gr.getAggregate('COUNT'));\n\n\tvar customAppsShared = 0;\n\tif (!GlideTableDescriptor.isValid('sys_store_app') )\n\t\treturn customApps;\n\n\tvar companyCode = gs.getProperty('glide.appcreator.company.code');\n\tif (GlideStringUtil.nil(companyCode))\n\t\treturn customApps;\n\n\tvar vendorPrefix = prefix + companyCode + prefixSeperator;\n\tgr = new GlideAggregate('sys_store_app');\n\tgr.addQuery('scope', 'STARTSWITH', vendorPrefix);\n\tgr.addNullQuery('vendor').addOrCondition('vendor', '!=', 'ServiceNow');\n\tgr.addAggregate('COUNT');\n\tgr.query();\n\n\tif (gr.next())\n\t\tcustomAppsShared = parseInt(gr.getAggregate('COUNT'));\n\tcustomApps = customApps + customAppsShared;\n\n\tvar vendorCustomApps = 0;\n\n\tgr = new GlideAggregate('sys_app');\n\tgr.addQuery('scope', 'STARTSWITH', prefix);\n\tgr.addQuery('scope', 'NOT MATCHES', vendorPrefix + '%');\n\tgr.addAggregate('COUNT');\n\tgr.query();\n\n\tif (gr.next())\n\t\tvendorCustomApps = parseInt(gr.getAggregate('COUNT'));\n\n\tcustomApps = customApps - vendorCustomApps;\n\n    return customApps ;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"0274e7fb04312210559073c06a02f70f","definition_id":"DEF1000001.1","sys_updated_by":"system","exec_time_threshold":"","sys_created_on":"2025-06-05 04:55:17","name":"GetCustomApplications","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"# of goals with 1-5 targets","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 06:13:43","kb_article_url":"","sys_tags":"","version":"","script":"var countOfGoals = 0;\nvar gr = new GlideAggregate('sn_gf_goal_target');\ngr.setGroup(true);\ngr.groupBy(\"goal\");\ngr.addAggregate(\"COUNT\",\"sys_id\");\ngr.query();\nwhile(gr.next()){\n\tvar targetCount = gr.getAggregate(\"COUNT\",\"sys_id\");\n\tif(targetCount>=1 && targetCount<=5){\n\t\t++countOfGoals;\n\t}\n}\nanswer = countOfGoals;","sys_class_name":"ua_scripted_defn","run_scope":"sn_gf","schedule":"Monthly","sys_id":"0366fffb04b52210559073c06a02f732","definition_id":"DEFN1004982","sys_updated_by":"system","exec_time_threshold":"7000","sys_created_on":"2025-06-05 06:13:43","name":"CountOfGoalsWithTargetsOneToFive","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Is Knowledge PA Dashboard plugin installed","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:10:38","kb_article_url":"","sys_tags":"","version":"","script":"var isInstalled = pm.isActive('com.snc.pa.knowledge_v2');\n\nif(isInstalled)\n\tanswer = 1;\nelse\n\tanswer = 0;","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"03f7ebff04b12210559073c06a02f712","definition_id":"DEFN1000906","sys_updated_by":"system","exec_time_threshold":"100","sys_created_on":"2025-06-05 05:10:38","name":"PADashboardEnabled","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Percentage of closed feedback tasks/created feedback tasks in a time period (1 month)","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:10:38","kb_article_url":"","sys_tags":"","version":"","script":"var gr = new GlideAggregate('kb_feedback_task');\ngr.addQuery('sys_created_on', '>=', gs.daysAgo(30));\ngr.addAggregate('COUNT');\ngr.query();\nvar result=0;\nvar feedback_task_count = 0;\nif(gr.next()) \n   feedback_task_count = gr.getAggregate('COUNT');\n\n\nvar gr2 = new GlideAggregate('kb_feedback_task');\ngr2.addQuery('closed_at', '>=', gs.daysAgo(30));\ngr2.addAggregate('COUNT');\ngr2.query();\nvar feedback_task_closed_count = 0;\nif(gr2.next()) \n   feedback_task_closed_count = gr2.getAggregate('COUNT');\n\nif(feedback_task_count!=0)\n{\n  result=(feedback_task_closed_count/feedback_task_count)*100;\n}\nanswer=result;","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"07f7ebff04b12210559073c06a02f710","definition_id":"DEFN1000914","sys_updated_by":"system","exec_time_threshold":"100","sys_created_on":"2025-06-05 05:10:38","name":"FeedbackTasksClosingRate","sys_created_by":"system"},{"definition_type":"production","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Count of users with active skills for Now Assist Context menu","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 06:16:31","kb_article_url":"","sys_tags":"","version":"0","script":"var util = new sn_nowassist_admin.NowAdminAssistUtil();\nvar answer = 0;\nvar skills = util.wwnaSkills();\nfor (let skill of skills) {\n    if (util._getSkillConfigStatus(skill?.skillConfigId)?.active === \"1\") {\n        answer = 1;\n        break;\n    }\n};","sys_class_name":"ua_scripted_defn","run_scope":"sn_nowassist_admin","schedule":"Daily","sys_id":"081733bf04b52210559073c06a02f782","definition_id":"TESTDEFN1002577","sys_updated_by":"system","exec_time_threshold":"90000","sys_created_on":"2025-06-05 06:16:31","name":"Count of users with active skills for Now Assist Context menu","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"<p>Automated Test Framework (ATF):&nbsp;Get a count of the number of steps in each step configuration category</p>","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:17:20","kb_article_url":"","sys_tags":"","version":"","script":"var ga = new GlideAggregate('sys_atf_step');\nga.addAggregate('COUNT', 'step_config.category.name');\nga.query();\nvar data = {};\nvar totalNumSteps = 0;\nvar numStepConfigs;\nwhile (ga.next()) {\n\tnumStepConfigs = parseInt(ga.getAggregate('COUNT', 'step_config.category.name'));\n\tdata[ga.getValue('step_config.category.name')] = numStepConfigs;\n\ttotalNumSteps += numStepConfigs;\n}\n\ndata['count'] = totalNumSteps;\nanswer = JSON.stringify(data);","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"0989e37b04f12210559073c06a02f79d","definition_id":"DEFN1000660","sys_updated_by":"system","exec_time_threshold":"1500","sys_created_on":"2025-06-05 05:17:20","name":"Get a count of the number of steps in each step configuration category","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"false","description":"Number of available Items in service catalog which are automated","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 04:55:17","kb_article_url":"","sys_tags":"","version":"","script":"answer = getAutomatedCatItems();\n\n\n// 1. find all catalog items that are assigned workflows\nfunction getAutomatedCatItems() {\n\tif (!GlideTableDescriptor.isValid('sc_cat_item'))\n\t\treturn;\n\t\n\tvar gr = new GlideRecord(\"sc_cat_item\");\n\tgr.addNotNullQuery(\"workflow\");\n\tgr.query();\n\t\n\t// create a collection of versions\n\tvar versions = [];\n\t\n\twhile (gr.next()) {\n\t\tvar version = getVersionId(gr.workflow);\n\t\tif (JSUtil.nil(version))\n\t\t\tcontinue;\n\t\t\n\t\t// see if workflow ask for user interaction\n\t\tvar humanInteractionCount =  wfHasHumanInteraction();\n\t\tif (JSUtil.nil(version))\n\t\t\tcontinue;\n\t\t\n\t\t// collect info in obj\n\t\tvar itemStatus = {};\n\t\titemStatus.workflow = gr.workflow + '';\n\t\titemStatus.name = gr.name + '';\n\t\titemStatus.version = version;\n\t\titemStatus.humanInteractionCount = humanInteractionCount;\t\n\t\tversions.push(itemStatus);\n\t}\n\t\n\treturn versions.length;\n}\n\n// 2. for each workflow get the latest version, published version\nfunction getVersionId(workflowID) {\n\tif (!GlideTableDescriptor.isValid('wf_workflow_version'))\n\t\treturn '';\n\t\n\tvar versionGR = new GlideRecord('wf_workflow_version');\n\tversionGR.addQuery('published', true);\n\tversionGR.addQuery('workflow', workflowID);\n\tversionGR.query();\n\t\n\tif (versionGR.next())\n\t\treturn versionGR.sys_id;\n}\n\n// 3. see if there are any tasks or approvals - if so it needs humans\n//group approval\nfunction wfHasHumanInteraction(versionId) {\n\tif (!GlideTableDescriptor.isValid('wf_activity'))\n\t\treturn '';\n\t\n\t//enumerate activities that require humans\n\tvar activityList = '354e911f0a0a029a00e6a0e6ad74206f,'+  //group approval\n\t'35433da80a0a029a0028c639a1e51eb,' + //approval user\n\t'283e8bb80a2581021d036a052ffc3433,' + //approval coordinator\n\t'533e39330a6a803f54a9619525b0a7e7,' + //manual approval\n\t'38891b6f0a0a0b1e00efdfdd77602027,'+ // catalog task\n\t'9f4d1be5c0a8016400043d34ce066316'; // create task\n\t\n\tvar grActivity = new GlideRecord('wf_activity');\n\tgrActivity.addQuery('activity_definition', 'IN', activityList);\n\tgrActivity.addQuery('workflow_version', versionId);\n\tgrActivity.query();\n\t\n\treturn grActivity.getRowCount();\n\t\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"0a74e7fb04312210559073c06a02f713","definition_id":"DEF1000110","sys_updated_by":"system","exec_time_threshold":"","sys_created_on":"2025-06-05 04:55:17","name":"GetAutomatedCatItems","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"<p>A script for calculating number of steps and pages per tour with welcome or conclusion modal</p>","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:25:52","kb_article_url":"","sys_tags":"","version":"","script":"var ga = new GlideAggregate('sys_embedded_tour_step');\nga.addEncodedQuery('guide.status=published^guide.has_concl=true^ORguide.has_intro=true^order!=-200^order!=-100^order!=-2000^order!=-1000');\nga.addEncodedQuery('sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()');\nga.addAggregate('COUNT', 'window');\nga.orderByAggregate('count', 'window');\nga.groupBy('guide');\nga.query();\nvar steps = [], tourId, ga1;\nwhile(ga.next()){\n  tourId = ga.guide.sys_id.toString();\n  ga1 = new GlideAggregate('sys_embedded_tour_step');\n  ga1.addQuery('guide.sys_id', tourId);\n  ga1.addEncodedQuery('guide.status=published^guide.has_concl=true^ORguide.has_intro=true^order!=-200^order!=-100^order!=-2000^order!=-1000');\n  ga1.addEncodedQuery('sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()');\n  ga1.groupBy('window');\n  ga1.query();\n  if(ga1.next()){\n      steps.push({tourName: ga.guide.name.toString(), tourId: ga.guide.sys_id.toString(), stepCount: ga.getAggregate('COUNT', 'window'), pageCount: ga1.getRowCount()});\n  }\n\n}\n\nvar computedData = {count: steps.length, data: steps };\nanswer = new JSON().encode(computedData);","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"0a7bafb304352210559073c06a02f78b","definition_id":"DEFN1000621","sys_updated_by":"system","exec_time_threshold":"500","sys_created_on":"2025-06-05 05:25:52","name":"gtd_steps_pages_welcome_conclusion","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Number of user criteria extensions created","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 04:57:31","kb_article_url":"","sys_tags":"","version":"","script":"answer = getUserCriteriaExtensionCount();\n\nfunction getUserCriteriaExtensionCount() {\n    var gr = new GlideRecord('user_criteria');\n    var criteriaFields = gr.getElements();\n    var count = 0;\n    var oobFields = {\n        \"role\": true,\n        \"advanced\": true,\n        \"company\": true,\n        \"department\": true,\n        \"group\": true,\n        \"active\": true,\n        \"script\": true,\n        \"name\": true,\n        \"match_all\": true,\n        \"location\": true,\n        \"user\": true\n    }\n\n    for (var i = 0; i < criteriaFields.size(); i++) {\n        var ge = criteriaFields.get(i);\n        var criteriaFieldName = ge.getName();\n\n        if (criteriaFieldName.startsWith('sys_') || oobFields[criteriaFieldName])\n            continue;\n\n        var gr = new GlideRecord('sys_user');\n\n        if (gr.isValidField(criteriaFieldName))\n            count++;\n        else {\n            var userFieldName = '';\n            if (criteriaFieldName.startsWith('u_')) {\n                userFieldName = criteriaFieldName.substring('u_'.length);\n            } else {\n                userFieldName = 'u_' + criteriaFieldName;\n            }\n\n            if (gr.isValidField(userFieldName))\n                count++;\n        }\n    }\n    return count;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"0bf4abff04312210559073c06a02f7ab","definition_id":"DEFN1007459","sys_updated_by":"system","exec_time_threshold":"1000","sys_created_on":"2025-06-05 04:57:31","name":"userCriteriaExtensionCount","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"No of knowledge bases secured by write user criteria","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:10:38","kb_article_url":"","sys_tags":"","version":"","script":"var kb_ids = [];\nvar gr = new GlideAggregate(\"kb_uc_can_contribute_mtom\");\ngr.addEncodedQuery(\"kb_knowledge_base.activeISNOTEMPTY\");\ngr.addAggregate('COUNT');\ngr.groupBy(\"kb_knowledge_base\");\ngr.query();\nwhile(gr.next()){\nkb_ids.push(gr.kb_knowledge_base + '');\n}\n\nvar gr2 = new GlideAggregate(\"kb_uc_cannot_contribute_mtom\");\ngr2.addEncodedQuery(\"kb_knowledge_base.activeISNOTEMPTY\");\ngr2.addAggregate('COUNT');\ngr2.groupBy(\"kb_knowledge_base\");\ngr2.query();\nwhile(gr2.next()){\nif(kb_ids.indexOf(gr2.kb_knowledge_base+'')==-1)\n    kb_ids.push(gr2.kb_knowledge_base + '');\n}\nanswer = kb_ids.length;","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"0bf7ebff04b12210559073c06a02f70e","definition_id":"DEFN1000913","sys_updated_by":"system","exec_time_threshold":"100","sys_created_on":"2025-06-05 05:10:38","name":"KBcount_with_writeUserCriteria","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Get recommendation activity data to analyze the recommendations which are saved/implemented/rejected","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:28:32","kb_article_url":"","sys_tags":"","version":"","script":"var stateToReco = {count: 0};\nvar activity = new GlideRecord('sn_bm_client_recommendation_activity');\nactivity.addEncodedQuery('action_dateISNOTEMPTY^ORimplementation_dateISNOTEMPTY');\nactivity.query();\nwhile(activity.next()) {\n    var state = activity.state + '';\n    var reco  = activity.recommendation.number + '';\n    if(!(state in stateToReco))\n        stateToReco[state] = {count: 0, recommendations: []};\n    stateToReco[state]['count']++;\n    if(state == 'implemented')\n        stateToReco[state]['recommendations'].push({'number': reco, 'implementation_date': activity.implementation_date + ''});\n    else\n        stateToReco[state]['recommendations'].push({'number': reco, 'action_date': activity.action_date + ''});\n    stateToReco['count']++;\n}\nanswer = new JSON().encode(stateToReco);","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"0d1c2bb704352210559073c06a02f79b","definition_id":"DEFN1000535","sys_updated_by":"system","exec_time_threshold":"200","sys_created_on":"2025-06-05 05:28:32","name":"Get recommendation activity stats","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"<p>Automated Test Framework (ATF):&nbsp;Get a count of the number of steps for each step configuration</p>","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:17:20","kb_article_url":"","sys_tags":"","version":"","script":"var ga = new GlideAggregate('sys_atf_step');\nga.addAggregate('COUNT', 'step_config');\nga.query();\nvar data = {};\nvar totalNumSteps = 0;\nvar numStepConfigs;\nwhile (ga.next()) {\n\tnumStepConfigs = parseInt(ga.getAggregate('COUNT', 'step_config'));\n\tdata[ga.step_config.name] = numStepConfigs;\n\ttotalNumSteps += numStepConfigs;\n}\n\nga.initialize();\nga.addQuery('active', true);\nga.addAggregate('COUNT');\nga.query();\ndata['num_active_steps'] = ga.next() ? parseInt(ga.getAggregate('COUNT')) : 0;\n\ndata['count'] = totalNumSteps;\nanswer = JSON.stringify(data);","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"0d89e37b04f12210559073c06a02f79b","definition_id":"DEFN1000661","sys_updated_by":"system","exec_time_threshold":"1500","sys_created_on":"2025-06-05 05:17:20","name":"Get a count of the number of steps for each step configuration","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"No of unique approval publish workflows attached to knowledge bases","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:10:38","kb_article_url":"","sys_tags":"","version":"","script":"var ga = new GlideAggregate('kb_knowledge_base');\nga.groupBy(\"workflow\");\nga.query();\nanswer = ga.getRowCount();","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"0ff7ebff04b12210559073c06a02f70c","definition_id":"DEFN1000895","sys_updated_by":"system","exec_time_threshold":"100","sys_created_on":"2025-06-05 05:10:38","name":"Unique Count of Approval workflows","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Automated Test Framework (ATF): Counts the number of active related list steps","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:17:33","kb_article_url":"","sys_tags":"","version":"","script":"var ga = new GlideAggregate('sys_atf_step');\nga.addActiveQuery();\nga.addQuery('step_config.category', 'bc15fe46e72a3300b5646ea8c2f6a9bf');\nga.query();\nvar numSteps = 0;\nwhile (ga.next()) {\n    if (ga.inputs.list_type == 'related_list' || ga.step_config == '8b84e5e837b1030064a52f3c8e41f170')\n        numSteps += 1;\n}\n\nanswer = numSteps;","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"10992b7b04f12210559073c06a02f70c","definition_id":"DEFN1003695","sys_updated_by":"system","exec_time_threshold":"10000","sys_created_on":"2025-06-05 05:17:33","name":"Automated Test Framework (ATF): Counts the number of active related list steps","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Count how many MID servers have default, valid, and invalid threads.max configurations","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:14:16","kb_article_url":"","sys_tags":"","version":"","script":"answer = JSON.stringify(constructMIDConfig(\"threads.max\"));\n\nfunction isEmptyOrBlank(str) {\n    return (!str || (0 === str.length) || (/^\\s*$/.test(str)));\n}\n\nfunction constructMIDConfig(parameterName) {\n\n    // -------------------- user defined criteria --------------------\n\n    var counterMap = {\n        \"default_count\": 0,\n        \"valid_value_count\": 0,\n        \"invalid_value_count\": 0\n    };\n\n    function updateCountersAndReturnString(value) {\n        if (isEmptyOrBlank(value))\n            ++counterMap[\"default_count\"];\n        else if (/^\\d+$/.test(value) && !/^0+$/.test(value))\n            // if value is purely numeric and non zero, increment valid_value_count\n            ++counterMap[\"valid_value_count\"];\n        else \n            ++counterMap[\"invalid_value_count\"];\n        \n        return value + \"\";\n    }\n\n    // ---------------------------------------------------------------\n\n    var result = {};\n    var TABLE_ECC_AGENT = \"ecc_agent\";\n    var TABLE_ECC_AGENT_PROPERTY = \"ecc_agent_property\";\n    var TABLE_ECC_AGENT_CONFIG = \"ecc_agent_config\";\n\n    if (!GlideTableDescriptor.isValid(TABLE_ECC_AGENT))\n        return result;\n\n    if (!GlideTableDescriptor.isValid(TABLE_ECC_AGENT_CONFIG))\n        return result;\n\n    if (!GlideTableDescriptor.isValid(TABLE_ECC_AGENT_PROPERTY))\n        return result;\n\n    function getMIDConfigForSpecificMid(midRecord) {\n        var target = new GlideRecord(TABLE_ECC_AGENT_CONFIG);\n        target.addQuery(\"ecc_agent\", midRecord.sys_id);\n        target.addQuery(\"param_name\", parameterName);\n        target.query();\n        if (target.next())\n            return target.value.toString();\n        else\n            return \"\";\n    }\n\n    function updatePropertiesForAllMIDs(arrayOfMIDs, valueToBeOverridden, midSet) {\n        var overrideValue = !isEmptyOrBlank(valueToBeOverridden);\n        var midRecords = new GlideRecord(TABLE_ECC_AGENT);\n        midRecords.query();\n        while (midRecords.next()) {\n            var config = {};\n            var midName = midRecords.getDisplayValue();\n            var midAlreadyHasValue = Object.prototype.hasOwnProperty.call(midSet, midName);\n            if (!midAlreadyHasValue) {\n                config[\"name\"] = midName;\n                var propertyValue = overrideValue ? valueToBeOverridden : getMIDConfigForSpecificMid(midRecords);\n                config[parameterName] = updateCountersAndReturnString(propertyValue);\n                arrayOfMIDs.push(config);\n            }\n        }\n    }\n\n    function getMIDAgentProperties() {\n        var valueToBeAppliedToAllMIDs = \"\";\n        var arrayOfMIDs = [];\n        var midsAlreadyProcessed = {};\n\n        var agentProperty = new GlideRecord(TABLE_ECC_AGENT_PROPERTY);\n        agentProperty.addQuery(\"name\", parameterName);\n        agentProperty.query();\n        while (agentProperty.next()) {\n            var resultMap = {};\n            // if a record with specific MID exists\n            if (!agentProperty.ecc_agent.isNil()) {\n                var name = agentProperty.ecc_agent.getDisplayValue();\n                midsAlreadyProcessed[name] = true;\n                resultMap[\"name\"] = name;\n                resultMap[parameterName] = updateCountersAndReturnString(agentProperty.value.toString());\n                arrayOfMIDs.push(resultMap);\n            } else\n                // agent property record for all mids exist\n                valueToBeAppliedToAllMIDs = agentProperty.value.toString();\n        }\n        updatePropertiesForAllMIDs(arrayOfMIDs, valueToBeAppliedToAllMIDs, midsAlreadyProcessed);\n\n        return arrayOfMIDs;\n    }\n\n    // datastructure to hold the mid config mappings\n    var arrayOfMappings = getMIDAgentProperties();\n    result[\"mid_config\"] = arrayOfMappings;\n    Object.keys(counterMap).forEach(function(key) {\n        result[key] = counterMap[key];\n    });\n    result[\"count\"] = arrayOfMappings.length;\n\n    return result;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"10d8ef3704f12210559073c06a02f726","definition_id":"DEFN1001193","sys_updated_by":"system","exec_time_threshold":"1000","sys_created_on":"2025-06-05 05:14:16","name":"Monthly Breakdown of MID Server Configuration [Number of Standard Worker Threads - threads.max","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Count how many MID servers have mid.windows.management_protocol set to wmi, winrm, default setting, or other value","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:14:16","kb_article_url":"","sys_tags":"","version":"","script":"answer = JSON.stringify(constructMIDConfig(\"mid.windows.management_protocol\"));\n\nfunction isEmptyOrBlank(str) {\n    return (!str || (0 === str.length) || (/^\\s*$/.test(str)));\n}\n\nfunction constructMIDConfig(parameterName) {\n\n    // -------------------- user defined criteria --------------------\n\n    var counterMap = {\n        \"default_count\": 0,\n        \"explicit_wmi_count\": 0,\n        \"explicit_winrm_count\": 0,\n        \"other_value_count\": 0\n    };\n\n    function updateCountersAndReturnString(value) {\n        var lower = value.toLowerCase();\n        if (isEmptyOrBlank(lower))\n            ++counterMap[\"default_count\"];\n        else if (lower == \"wmi\")\n            ++counterMap[\"explicit_wmi_count\"];\n        else if (lower == \"winrm\")\n            ++counterMap[\"explicit_winrm_count\"];\n        else \n            ++counterMap[\"other_value_count\"];\n        \n        return value + \"\";\n    }\n\n    // ---------------------------------------------------------------\n\n    var result = {};\n    var TABLE_ECC_AGENT = \"ecc_agent\";\n    var TABLE_ECC_AGENT_PROPERTY = \"ecc_agent_property\";\n    var TABLE_ECC_AGENT_CONFIG = \"ecc_agent_config\";\n\n    if (!GlideTableDescriptor.isValid(TABLE_ECC_AGENT))\n        return result;\n\n    if (!GlideTableDescriptor.isValid(TABLE_ECC_AGENT_CONFIG))\n        return result;\n\n    if (!GlideTableDescriptor.isValid(TABLE_ECC_AGENT_PROPERTY))\n        return result;\n\n    function getMIDConfigForSpecificMid(midRecord) {\n        var target = new GlideRecord(TABLE_ECC_AGENT_CONFIG);\n        target.addQuery(\"ecc_agent\", midRecord.sys_id);\n        target.addQuery(\"param_name\", parameterName);\n        target.query();\n        if (target.next())\n            return target.value.toString();\n        else\n            return \"\";\n    }\n\n    function updatePropertiesForAllMIDs(arrayOfMIDs, valueToBeOverridden, midSet) {\n        var overrideValue = !isEmptyOrBlank(valueToBeOverridden);\n        var midRecords = new GlideRecord(TABLE_ECC_AGENT);\n        midRecords.query();\n        while (midRecords.next()) {\n            var config = {};\n            var midName = midRecords.getDisplayValue();\n            var midAlreadyHasValue = Object.prototype.hasOwnProperty.call(midSet, midName);\n            if (!midAlreadyHasValue) {\n                config[\"name\"] = midName;\n                var propertyValue = overrideValue ? valueToBeOverridden : getMIDConfigForSpecificMid(midRecords);\n                config[parameterName] = updateCountersAndReturnString(propertyValue);\n                arrayOfMIDs.push(config);\n            }\n        }\n    }\n\n    function getMIDAgentProperties() {\n        var valueToBeAppliedToAllMIDs = \"\";\n        var arrayOfMIDs = [];\n        var midsAlreadyProcessed = {};\n\n        var agentProperty = new GlideRecord(TABLE_ECC_AGENT_PROPERTY);\n        agentProperty.addQuery(\"name\", parameterName);\n        agentProperty.query();\n        while (agentProperty.next()) {\n            var resultMap = {};\n            // if a record with specific MID exists\n            if (!agentProperty.ecc_agent.isNil()) {\n                var name = agentProperty.ecc_agent.getDisplayValue();\n                midsAlreadyProcessed[name] = true;\n                resultMap[\"name\"] = name;\n                resultMap[parameterName] = updateCountersAndReturnString(agentProperty.value.toString());\n                arrayOfMIDs.push(resultMap);\n            } else\n                // agent property record for all mids exist\n                valueToBeAppliedToAllMIDs = agentProperty.value.toString();\n        }\n        updatePropertiesForAllMIDs(arrayOfMIDs, valueToBeAppliedToAllMIDs, midsAlreadyProcessed);\n\n        return arrayOfMIDs;\n    }\n\n    // datastructure to hold the mid config mappings\n    var arrayOfMappings = getMIDAgentProperties();\n    result[\"mid_config\"] = arrayOfMappings;\n    Object.keys(counterMap).forEach(function(key) {\n        result[key] = counterMap[key];\n    });\n    result[\"count\"] = arrayOfMappings.length;\n\n    return result;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"10d8ef3704f12210559073c06a02f727","definition_id":"DEFN1001205","sys_updated_by":"system","exec_time_threshold":"1000","sys_created_on":"2025-06-05 05:14:16","name":"Monthly Breakdown of MID Server Configuration [Windows Management Protocol - WMI vs. WinRM]","sys_created_by":"system"},{"definition_type":"production","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Incident Mean Time to Resolve (MTTR) - Calculated for all the closed incidents in the month","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:32:22","kb_article_url":"","sys_tags":"","version":"0","script":"        var totalIncidents = 0;\n        var totalMilliSecondsSum = 0;\n        var gr = new GlideAggregate('incident');\n        gr.addEncodedQuery('closed_atONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()^active=false');\n        gr.addAggregate('SUM', 'opened_at');\n        gr.addAggregate('SUM', 'resolved_at');\n        gr.addAggregate('COUNT');\n        gr.setGroup(false);\n        gr.query();\n        while (gr.next()) {\n            var aggregateOpenedTime = gr.getAggregate('SUM', 'opened_at');\n            var aggregateResolvedTime = gr.getAggregate('SUM', 'resolved_at');\n            totalIncidents = gr.getAggregate('COUNT');\n        }\n        aggregateOpenedTime = new GlideDateTime(aggregateOpenedTime);\n        aggregateResolvedTime = new GlideDateTime(aggregateResolvedTime);\n        var answer = 0;\n        totalMilliSecondsSum = aggregateResolvedTime.getNumericValue() - aggregateOpenedTime.getNumericValue();\n        if (totalIncidents > 0) {\n            answer = totalMilliSecondsSum / (1000 * 60 * 60 * totalIncidents);\n        }\n        else {\n           answer = 0;\n        }","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"11fca33f04352210559073c06a02f787","definition_id":"DEFN1008069","sys_updated_by":"system","exec_time_threshold":"150000","sys_created_on":"2025-06-05 05:32:22","name":"MTTR - incident","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Cumulative Monthly Predictions Count","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 04:56:11","kb_article_url":"","sys_tags":"","version":"","script":"answer = getCumulativePredictionsCount();\n\n\nfunction getCumulativePredictionsCount() {\n\tvar totalCount = 0;\t\t\t\n\tvar license_start_month = getLicenseStartMonth();\n\tvar previous_month = gs.beginningOfLastMonth().slice(0, 7);\n\t\n\tif(!hasRequiredTableAndColumns() || gs.nil(license_start_month))\n\t\treturn 0;\n\t\n\tvar agg = new GlideAggregate('ua_event_stat');\n\tagg.addQuery('event_id', 'ml.predictions');\n\tagg.addQuery('time_stamp', '>=', license_start_month);\n\tagg.addQuery('time_stamp', '<=', previous_month);\n\tagg.addAggregate('SUM', 'event_count');\n\tagg.setGroup(false);\n\tagg.query();\n\tif (agg.next()) \n\t   totalCount = agg.getAggregate('SUM', 'event_count');\n\treturn totalCount;\n}\n\n\nfunction getLicenseStartMonth() {\n\tvar license_start_date = SNC.UsageAnalyticsScriptUtils.getLicenseStartDateForApp('com.glide.platform_ml');\n\treturn gs.nil(license_start_date) || license_start_date.length < 7  ? '' : license_start_date.substring(0, 7);\n}\n\n\nfunction hasRequiredTableAndColumns() {\n\treturn GlideTableDescriptor.isValid('ua_event_stat') && \n\t\tGlideTableDescriptor.fieldExists('ua_event_stat', 'event_id') &&\n\t\tGlideTableDescriptor.fieldExists('ua_event_stat', 'time_stamp') &&\n\t\tGlideTableDescriptor.fieldExists('ua_event_stat', 'event_count');\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"13a4e37f04312210559073c06a02f7a9","definition_id":"DEF1000450","sys_updated_by":"system","exec_time_threshold":"100","sys_created_on":"2025-06-05 04:56:11","name":"Cumulative Monthly Predictions Count","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Active users with any role other than \"approver_user\"\n\t\t","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 04:55:17","kb_article_url":"","sys_tags":"","version":"","script":"answer = SNC.UsageAnalyticsScriptUtils.getCountOfFulfillers();","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"1674e7fb04312210559073c06a02f715","definition_id":"DEF1000053","sys_updated_by":"system","exec_time_threshold":"","sys_created_on":"2025-06-05 04:55:17","name":"UsersWithRoles","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"false","description":"Knowledge base use by Internal users","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 04:55:17","kb_article_url":"","sys_tags":"","version":"","script":"answer = getKBUseInternalUsers();\n\nfunction getKBUseInternalUsers() {\n\tif (!GlideTableDescriptor.isValid('kb_use'))\n\t\treturn 0;\n\tvar ga = new GlideAggregate('kb_use');\n\tga.groupBy('user');\n\tga.addAggregate('COUNT', 'user');\n\tga.query();\n\tvar numRecs = 0;\n\twhile (ga.next()) {\n\t\tvar uid = ga.getValue('user');\n\t\tvar gr = new GlideRecord('sys_user_has_role');\n\t\tgr.addQuery('user', uid);\n\t\tgr.query();\n\t\tif (gr.getRowCount() > 0) \n\t\t\tnumRecs += parseInt(ga.getAggregate('COUNT', 'user'));\n\t}\n\treturn numRecs;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"1674e7fb04312210559073c06a02f722","definition_id":"DEF1000099","sys_updated_by":"system","exec_time_threshold":"","sys_created_on":"2025-06-05 04:55:17","name":"KBUseInternalUsers","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Total views of KB articles","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 04:55:17","kb_article_url":"","sys_tags":"","version":"","script":"answer = totalViewsofKBarticles();\n\nfunction totalViewsofKBarticles () {\n\tif (!GlideTableDescriptor.isValid('kb_knowledge'))\n\t\treturn 0;\n\t\n\tvar ga = new GlideAggregate('kb_knowledge');\n\tga.setGroup(false);\n\tga.addAggregate('SUM', 'sys_view_count');\n\tga.query();\n\tif (ga.next())\n\t\treturn ga.getAggregate('SUM', 'sys_view_count')\n\t\n\treturn 0;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"1674e7fb04312210559073c06a02f732","definition_id":"DEF1000108","sys_updated_by":"system","exec_time_threshold":"","sys_created_on":"2025-06-05 04:55:17","name":"TotalViewsofKBarticles","sys_created_by":"system"},{"definition_type":"production","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Get the count of events from sys_ux_event table which has field type collection in its properties.","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 06:20:17","kb_article_url":"","sys_tags":"","version":"0","script":"\n\t\t\t// Events\n\nvar collectionPropertyUsageByEvent = 0;\n\nvar gr = new GlideRecord('sys_ux_event');\ngr.addEncodedQuery('props!=[]^props!=[ ]');\ngr.query();\n\nwhile (gr.next()) {\n    var properties;\n\n\ttry{\n\t\tproperties = JSON.parse(gr.props);\n\t}\n\tcatch(err){\n\t\tgs.error(gr.event_name);\n\t\tgs.error(JSON.stringify(err));\n\t\tproperties = [];\n\t}\n\n    for(var i=0;i<properties.length; i++){\n        if(properties[i].fieldType === 'collection'){\n            collectionPropertyUsageByEvent++;\n            break;\n        }\n    }\n}\n\nanswer = collectionPropertyUsageByEvent;","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"17e73b3304f52210559073c06a02f760","definition_id":"DEFN1008298","sys_updated_by":"system","exec_time_threshold":"90000","sys_created_on":"2025-06-05 06:20:17","name":"collection property usage by events","sys_created_by":"system"},{"definition_type":"","count_type":"Licensing","sys_mod_count":"0","active":"true","description":"Count of ITSM-only tasks in last 365 days","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 05:07:43","kb_article_url":"","sys_tags":"","version":"","script":"/** ITSM Tasks in last 365 days\n* CSM TASK Daily Definitions: DEFN1003909,DEFN1003914,DEFN1003912,DEFN1003915\n* ITSM TASK Daily Definitions: ['DEFN1000504', 'DEFN1003906', 'DEFN1003905', 'DEFN1003908', 'DEFN1003902', 'DEFN1003907', 'DEFN1003903', 'DEFN1003904'] */\n\nanswer = getITSMOnlyTransactions();\n\nfunction getITSMOnlyTransactions() {\n\n\tvar csmDefns = ['DEFN1003914', 'DEFN1003915', 'DEFN1003909', 'DEFN1003912'];\n\tvar itsmDefns = ['DEFN1000504', 'DEFN1003906', 'DEFN1003905', 'DEFN1003908', 'DEFN1003902', 'DEFN1003907', 'DEFN1003903', 'DEFN1003904'];\n\n\tvar csmTotal = getAggCountLast365Days(csmDefns);\n\tvar itsmTotal = getAggCountLast365Days(itsmDefns);\n\tvar itsmOnlyTasks = (parseInt(itsmTotal) - parseInt(csmTotal));\n\n\treturn (itsmOnlyTasks > 0 ? itsmOnlyTasks : 0);\n}\n\nfunction getAggCountLast365Days(defnArr) {\n\n\tif (gs.nil(defnArr) || defnArr.length <= 0) return 0;\n\n\tvar encQuery = gs.getMessage(\"definition_idIN{0}^time_stamp>javascript:gs.daysAgo(365)\", defnArr.join());\n\tvar ga = new GlideAggregate(\"usageanalytics_count\");\n\t\tga.addEncodedQuery(encQuery);\n\t\tga.addAggregate(\"SUM\", \"count\");\n\t\tga.setGroup(false);\n\t\tga.query();\n\t\tif (ga.next()) {\n\t\t\treturn ga.getAggregate(\"SUM\", \"count\");\n\t\t}\n\n\treturn 0;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"1857afbb04b12210559073c06a02f704","definition_id":"DEFN1004134","sys_updated_by":"system","exec_time_threshold":"500","sys_created_on":"2025-06-05 05:07:43","name":"ITSM Only Tasks in last 365 days - INT, INT Task, PRB, PRB Task,\n\t\t\tCHG, CHG Task, REQ, REQ Task\n\t\t","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Average # of participants per collab chat discussion in last 30 days","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 06:08:21","kb_article_url":"","sys_tags":"","version":"","script":"if (!GlideTableDescriptor.isValid('sys_cs_collab_member')) {\n\tanswer = 0;\n} else {\n\tvar gr = new GlideAggregate('sys_cs_collab_member');\n\tgr.addEncodedQuery('sys_created_onONLast 30 days@javascript:gs.beginningOfLast30Days()@javascript:gs.endOfLast30Days()');\n\tgr.addQuery('active', true);\n\tgr.groupBy('collab_chat');\n\tgr.addAggregate('COUNT');  \n\tgr.query();\nif (!gr.hasNext()) {\n\tanswer = 0;\n} else {\n\tvar sum = 0;\n\twhile(gr.next()) {\n\t\tsum += parseInt(gr.getAggregate('COUNT'));\n\t}\n\tanswer = sum / gr.getRowCount();\n}\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"1c35737b04b52210559073c06a02f730","definition_id":"DEFN1006677","sys_updated_by":"system","exec_time_threshold":"15000","sys_created_on":"2025-06-05 06:08:21","name":"getAvgNumOfParticipantsPerChat","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Time to Relief for P2 INTs closed yesterday (in Minutes)","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 04:55:17","kb_article_url":"","sys_tags":"","version":"","script":"var totalTTRSecs = 0;\nvar totalTTRMins = 0;\n\nfunction getTTRForP2INTs() {\n\n\tvar incidentTbl = \"incident\";\n\n\tif(!GlideTableDescriptor.isValid(incidentTbl)) \n\t\treturn 0;\n\t\t\n\tvar grClosed = new GlideRecord(incidentTbl);\n\t//All INTs closed yesterday\n\tgrClosed.addEncodedQuery(\"priority=2^closed_atONYesterday@javascript:gs.daysAgoStart(1)@javascript:gs.daysAgoEnd(1)^closed_atISNOTEMPTY\");\n\t\n\tgrClosed.query();\n\t\n\twhile (grClosed.next()) {\n\t\t\n\t\tvar opened = grClosed.getValue(\"opened_at\");\n        var closed = grClosed.getValue(\"closed_at\");\n        var ttr = gs.dateDiff(opened, closed, true);\n\t\t\n\t\ttotalTTRSecs += parseInt(ttr);\t\n\t\ttotalTTRMins += parseInt(ttr)/60;\n\t}\n\t\n\treturn Math.round(totalTTRMins);\n}\n\nanswer = '{\"count\": \"' + getTTRForP2INTs() + '\",\"TotalTTR(Seconds)\":\"' + totalTTRSecs + '\"}';","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"1e74e7fb04312210559073c06a02f71c","definition_id":"SMBEN100012","sys_updated_by":"system","exec_time_threshold":"0","sys_created_on":"2025-06-05 04:55:17","name":"TTR For P2 INTs closed yesterday - Minutes","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Performance Analytics Usage Category","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 04:55:17","kb_article_url":"","sys_tags":"","version":"","script":"// This script categorizes the usage of PA in the platform into one of the following categories:\n// 0 = No PA (Neither PA nor PA premium plugins installed)\n// 1 = PA Premium installed and in use (active data collectors)\n// 2 = PA Premium installed, not implemented (no active data collector)\n// 3 = PA Freemium, hacked\n// 4 = PA Freemium, in use\n// 5 = PA Freemium, not implemented\n\nvar paInstalled = GlidePluginManager.isActive('com.snc.pa');\nvar paPremiumInstalled = SNC.PAUtils.isPremium();\nvar numActiveDataCollectors = 0;\nvar numIndicators = 0;\nvar totalFreemiumIndicators = getTotalFreemiumIndicators();\n\nif (paInstalled || paPremiumInstalled) {\n\n\tvar paJobsGR = new GlideRecord('sysauto_pa');\n\tpaJobsGR.addQuery('active', true);\n\tpaJobsGR.addNullQuery('benchmarking').addOrCondition('benchmarking', false);\n\tpaJobsGR.query();\n\tnumActiveDataCollectors = paJobsGR.getRowCount();\n\n\tvar indicatorsGR = new GlideRecord('pa_indicators');\n\tindicatorsGR.addNullQuery('benchmarking').addOrCondition('benchmarking', false);\n\tindicatorsGR.query();\n\tnumIndicators = indicatorsGR.getRowCount();\n}\n\nvar cnt = 0;\nvar paType = 'PA Freemium';\n\nif (paPremiumInstalled) {\n\t\n\tpaType = 'PA Premium';\n\tif (numActiveDataCollectors > 0) {\n\t\t// premium in use\n\t\tcnt = 1;\n\t} else {\n\t\t// premium not used\n\t\tcnt = 2;\n\t}\n\t\n} else if (paInstalled) { \n\t\n\t// freemium case\n\tif (numIndicators > totalFreemiumIndicators) {\n\t\t// using more than allowed for freemium\n\t\tcnt = 3;\n\t\t\n\t} else {\n\t\t\n\t\tif (numActiveDataCollectors > 0) {\n\t\t\t//data collection active\n\t\t\tcnt = 4;\n\t\t} else {\n\t\t\t// no data collection\n\t\t\tcnt = 5;\n\t\t}\n\t}\n}\n\nanswer = '{\"count\": \"';\nanswer += cnt + '\",\"paType\":\"' + paType + \n\t'\",\"active_data_collectors\":\"' + numActiveDataCollectors  + \n\t'\",\"indicators\":\"' + numIndicators + '\"}';\n\n/**\n* Retrieve total indicators that are not benchmark and related to one of the freemium plugins:\n* - com.glide.instance_sec_center\n* - com.snc.pa.usage.overview\n* - com.snc.pa\n* - com.snc.pa.instance_sec_dash\n*/\nfunction getTotalFreemiumIndicators() {\n\tvar totalFreemium = 0;\n\tif (GlidePluginManager.isActive('com.glide.instance_sec_center'))\n\t\ttotalFreemium += 3;\n\n\tif (GlidePluginManager.isActive('com.snc.pa.usage.overview'))\n\t\ttotalFreemium += 14;\n\n\tif (GlidePluginManager.isActive('com.snc.pa'))\n\t\ttotalFreemium += 31;\n\n\tif (GlidePluginManager.isActive('com.snc.pa.instance_sec_dash'))\n\t\ttotalFreemium += 10;\n\n\treturn totalFreemium;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"1e74e7fb04312210559073c06a02f738","definition_id":"DEF1000142","sys_updated_by":"system","exec_time_threshold":"","sys_created_on":"2025-06-05 04:55:17","name":"PAUsageCategory","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Returns a JSON with total number of solutions, solutions per template type, and solutions per template record","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 04:56:11","kb_article_url":"","sys_tags":"","version":"","script":"answer = JSON.stringify(solutionsPerTemplate());\n\nfunction solutionsPerTemplate() {\n\tif (!haveRequiredTables())\n\t\treturn 0;\n\n\tvar obj = {};\n\n\t// Total solution count\n\tvar count = 0;\n\tvar ga = new GlideAggregate('ml_solution');\n\tga.addAggregate('COUNT');\n\tga.addQuery('sys_created_on', '>=', gs.daysAgo(1));\n\tga.query();\n\tif (ga.next()) {\n\t\tcount = ga.getAggregate('COUNT');\n\t}\n\tobj.count = count;\n\n\t// Solutions per template type\n\tvar solution_capability = [];\n\tga = new GlideAggregate('ml_solution');\n\tga.addAggregate('COUNT', 'solution_definition.trainer.name');\n\tga.addQuery('sys_created_on', '>=', gs.daysAgo(1));\n\tga.query();\n\twhile (ga.next()) {\n\t\tvar capability = {};\n\t\tcapability.count = ga.getAggregate('COUNT', 'solution_definition.trainer.name');\n\t\tcapability.capability = ga.getValue('solution_definition.trainer.name');\n\t\tsolution_capability.push(capability);\n\t}\n\tobj.solution_capability = solution_capability;\n\n\t// Solutions per template record\n\tvar solution_template = [];\n\tga = new GlideAggregate('ml_solution');\n\tga.addAggregate('COUNT', 'solution_definition.trainer');\n\tga.addQuery('sys_created_on', '>=', gs.daysAgo(1));\n\tga.query();\n\twhile (ga.next()) {\n\t\tvar template = {};\n\t\tvar gr = new GlideRecord('ml_trainer_definition');\n\t\tif (!gr.get(ga.getValue('solution_definition.trainer')))\n\t\t\tcontinue;\n\n\t\ttemplate.count = ga.getAggregate('COUNT', 'solution_definition.trainer');\n\t\ttemplate.capability = gr.getValue('name');\n\t\ttemplate.label = gr.getValue('label');\n\t\ttemplate.version = gr.getValue('version');\n\t\tsolution_template.push(template);\n\t}\n\tobj.solution_template = solution_template;\n\n\treturn obj;\n}\n\nfunction haveRequiredTables() {\n\treturn GlideTableDescriptor.isValid('ml_solution') && GlideTableDescriptor.isValid('ml_solution_definition') && GlideTableDescriptor.isValid('ml_trainer_definition');\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"1fa4e37f04312210559073c06a02f7aa","definition_id":"DEF1000391","sys_updated_by":"system","exec_time_threshold":"200","sys_created_on":"2025-06-05 04:56:11","name":"SolutionsPerTemplate","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Returns a JSON with total number of failed solutions, failed solutions per template type, and failed solutions per template record","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 04:56:11","kb_article_url":"","sys_tags":"","version":"","script":"answer = JSON.stringify(failedSolutionsPerTemplate());\n\nfunction failedSolutionsPerTemplate() {\n\tif (!haveRequiredTables())\n\t\treturn 0;\n\n\tvar obj = {};\n\n\t// Total failed solution count\n\tvar count = 0;\n\tvar ga = new GlideAggregate('ml_solution');\n\tga.addAggregate('COUNT');\n\tvar stateQuery = ga.addQuery('state', 'solution_error');\n\tstateQuery.addOrCondition('state', 'unauthorized');\n\tstateQuery.addOrCondition('state', 'retry');\n\tstateQuery.addOrCondition('state', 'timed_out');\n\tga.addQuery('sys_created_on', '>=', gs.daysAgo(1));\n\tga.query();\n\tif (ga.next()) {\n\t\tcount = ga.getAggregate('COUNT');\n\t}\n\tobj.count = count;\n\n\t// Failed solutions per template type\n\tvar solution_capability = [];\n\tga = new GlideAggregate('ml_solution');\n\tga.addAggregate('COUNT', 'solution_definition.trainer.name');\n\tstateQuery = ga.addQuery('state', 'solution_error');\n\tstateQuery.addOrCondition('state', 'unauthorized');\n\tstateQuery.addOrCondition('state', 'retry');\n\tstateQuery.addOrCondition('state', 'timed_out');\n\tga.addQuery('sys_created_on', '>=', gs.daysAgo(1));\n\tga.query();\n\twhile (ga.next()) {\n\t\tvar capability = {};\n\t\tcapability.count = ga.getAggregate('COUNT', 'solution_definition.trainer.name');\n\t\tcapability.capability = ga.getValue('solution_definition.trainer.name');\n\n\t\tvar states = {};\n\t\tvar stateGA = new GlideAggregate('ml_solution');\n\t\tstateGA.addAggregate('COUNT', 'state');\n\t\tstateQuery = stateGA.addQuery('state', 'solution_error');\n\t\tstateQuery.addOrCondition('state', 'unauthorized');\n\t\tstateQuery.addOrCondition('state', 'retry');\n\t\tstateQuery.addOrCondition('state', 'timed_out');\n\t\tstateGA.addQuery('solution_definition.trainer.name', ga.getValue('solution_definition.trainer.name'));\n\t\tstateGA.addQuery('sys_created_on', '>=', gs.daysAgo(1));\n\t\tstateGA.query();\n\t\twhile (stateGA.next()) {\n\t\t\tstates[stateGA.getValue('state')] = stateGA.getAggregate('COUNT', 'state');\n\t\t}\n\t\tcapability.states = states;\n\n\t\tsolution_capability.push(capability);\n\t}\n\tobj.solution_capability = solution_capability;\n\n\t// Failed solutions per template record\n\tvar solution_template = [];\n\tga = new GlideAggregate('ml_solution');\n\tga.addAggregate('COUNT', 'solution_definition.trainer');\n\tstateQuery = ga.addQuery('state', 'solution_error');\n\tstateQuery.addOrCondition('state', 'unauthorized');\n\tstateQuery.addOrCondition('state', 'retry');\n\tstateQuery.addOrCondition('state', 'timed_out');\n\tga.addQuery('sys_created_on', '>=', gs.daysAgo(1));\n\tga.query();\n\twhile (ga.next()) {\n\t\tvar template = {};\n\t\tvar gr = new GlideRecord('ml_trainer_definition');\n\t\tif (!gr.get(ga.getValue('solution_definition.trainer')))\n\t\t\tcontinue;\n\n\t\ttemplate.count = ga.getAggregate('COUNT', 'solution_definition.trainer');\n\t\ttemplate.capability = gr.getValue('name');\n\t\ttemplate.label = gr.getValue('label');\n\t\ttemplate.version = gr.getValue('version');\n\n\t\tvar states = {};\n\t\tvar stateGA = new GlideAggregate('ml_solution');\n\t\tstateGA.addAggregate('COUNT', 'state');\n\t\tstateQuery = stateGA.addQuery('state', 'solution_error');\n\t\tstateQuery.addOrCondition('state', 'unauthorized');\n\t\tstateQuery.addOrCondition('state', 'retry');\n\t\tstateQuery.addOrCondition('state', 'timed_out');\n\t\tstateGA.addQuery('solution_definition.trainer', ga.getValue('solution_definition.trainer'));\n\t\tstateGA.addQuery('sys_created_on', '>=', gs.daysAgo(1));\n\t\tstateGA.query();\n\t\twhile (stateGA.next()) {\n\t\t\tstates[stateGA.getValue('state')] = stateGA.getAggregate('COUNT', 'state');\n\t\t}\n\t\ttemplate.states = states;\n\n\t\tsolution_template.push(template);\n\t}\n\tobj.solution_template = solution_template;\n\n\treturn obj;\n}\n\nfunction haveRequiredTables() {\n\treturn GlideTableDescriptor.isValid('ml_solution') && GlideTableDescriptor.isValid('ml_solution_definition') && GlideTableDescriptor.isValid('ml_trainer_definition');\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"1fa4e37f04312210559073c06a02f7ab","definition_id":"DEF1000393","sys_updated_by":"system","exec_time_threshold":"200","sys_created_on":"2025-06-05 04:56:11","name":"FailedSolutionsPerTemplate","sys_created_by":"system"},{"definition_type":"production","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Return % of step completion of best practice \"Integrate with MFA\"","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 06:19:00","kb_article_url":"","sys_tags":"","version":"0","script":"answer = getStepCompletionPercentage('7185b4f943e77110adf71f062bb8f26f');\n\nfunction getStepCompletionPercentage(bestPracticeId){\nvar gr = new GlideRecord('sn_vsc_best_practice_configurations');\nif (gr.get(bestPracticeId)) {\n\tif (gr.getValue('status') == 'completed') {\n\t\tvar grSA = new GlideRecord('sys_audit');\n\t\tgrSA.addEncodedQuery('tablename=sn_vsc_best_practice_configurations^fieldname=status^sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()^newvalue=completed^documentkey=' + bestPracticeId);\n\t\tgrSA.query();\n\t\tif(grSA.hasNext()) {\n\t\t\tvar stepData = new sn_vsc.SCPlaybookUtil().getBPStepData(bestPracticeId);\n\t\t\treturn Math.round((stepData.completedSteps/stepData.totalSteps)*100,2);\n\t\t}\n\t}\n}\nreturn 0;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"20a77fff04b52210559073c06a02f714","definition_id":"DEFN1008198","sys_updated_by":"system","exec_time_threshold":"150000","sys_created_on":"2025-06-05 06:19:00","name":"stepsCompleted","sys_created_by":"system"},{"definition_type":"production","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Return % of step completion of best practice \"Ensure that the High Security plugin is installed and activated\"","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 06:19:00","kb_article_url":"","sys_tags":"","version":"0","script":"answer = getStepCompletionPercentage('2313d16d43237110adf71f062bb8f2de');\n\nfunction getStepCompletionPercentage(bestPracticeId){\nvar gr = new GlideRecord('sn_vsc_best_practice_configurations');\nif (gr.get(bestPracticeId)) {\n\tif (gr.getValue('status') == 'completed') {\n\t\tvar grSA = new GlideRecord('sys_audit');\n\t\tgrSA.addEncodedQuery('tablename=sn_vsc_best_practice_configurations^fieldname=status^sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()^newvalue=completed^documentkey=' + bestPracticeId);\n\t\tgrSA.query();\n\t\tif(grSA.hasNext()) {\n\t\t\tvar stepData = new sn_vsc.SCPlaybookUtil().getBPStepData(bestPracticeId);\n\t\t\treturn Math.round((stepData.completedSteps/stepData.totalSteps)*100,2);\n\t\t}\n\t}\n}\nreturn 0;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"20a77fff04b52210559073c06a02f72e","definition_id":"DEFN1008199","sys_updated_by":"system","exec_time_threshold":"150000","sys_created_on":"2025-06-05 06:19:00","name":"stepsCompleted","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Max Level of dependency for a question in assessment","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:09:27","kb_article_url":"","sys_tags":"","version":"","script":"var questions = new GlideRecord('asmt_metric');\nquestions.addEncodedQuery('metric_type.evaluation_method=assessment^depends_onISNOTEMPTY');\nquestions.query();\nvar count = 1;\nvar maxLevel = 0;\n\nvar dependentMetric = {};\n\nwhile (questions.next()) {\n    dependentMetric[questions.sys_id] = questions.getValue('depends_on');\n}\n\nvar tempListMetric = [];\nvar depthOfMetric = {};\n\nfunction calculateDepth(metric) {\n    if (metric in depthOfMetric) {\n        count = depthOfMetric[metric] + count;\n        return;\n    } else {\n        if (metric in dependentMetric) {\n            count++;\n            tempListMetric.push(metric);\n            calculateDepth(dependentMetric[metric]);\n        }\n    }\n\n}\n\nfunction addDepthForEachMetric() {\n    for (var i = 0; i < tempListMetric.length; i++) {\n        depthOfMetric[tempListMetric[i]] = count - i;\n    }\n}\n\nfor (var metric in dependentMetric) {\n    if (metric in depthOfMetric) {\n        count = depthOfMetric[metric];\n    } else {\n        tempListMetric.push(metric);\n        calculateDepth(dependentMetric[metric]);\n    }\n    if (tempListMetric.length > 0) {\n        addDepthForEachMetric();\n    }\n\n    if (count > maxLevel) {\n        maxLevel = count;\n    }\n    count = 1;\n    tempListMetric = [];\n}\nanswer = maxLevel;","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"21b72f7f04b12210559073c06a02f7ea","definition_id":"DEFN1007461","sys_updated_by":"system","exec_time_threshold":"30000","sys_created_on":"2025-06-05 05:09:27","name":"Max Level","sys_created_by":"system"},{"definition_type":"production","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Return % of step completion of best practice \"Use of certificate based authentication with integration providers\"","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 06:19:00","kb_article_url":"","sys_tags":"","version":"0","script":"answer = getStepCompletionPercentage('a59f175643eb7110adf71f062bb8f20d');\n\nfunction getStepCompletionPercentage(bestPracticeId){\nvar gr = new GlideRecord('sn_vsc_best_practice_configurations');\nif (gr.get(bestPracticeId)) {\n\tif (gr.getValue('status') == 'completed') {\n\t\tvar grSA = new GlideRecord('sys_audit');\n\t\tgrSA.addEncodedQuery('tablename=sn_vsc_best_practice_configurations^fieldname=status^sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()^newvalue=completed^documentkey=' + bestPracticeId);\n\t\tgrSA.query();\n\t\tif(grSA.hasNext()) {\n\t\t\tvar stepData = new sn_vsc.SCPlaybookUtil().getBPStepData(bestPracticeId);\n\t\t\treturn Math.round((stepData.completedSteps/stepData.totalSteps)*100, 2);\n\t\t}\n\t}\n}\nreturn 0;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"24a77fff04b52210559073c06a02f719","definition_id":"DEFN1008176","sys_updated_by":"system","exec_time_threshold":"150000","sys_created_on":"2025-06-05 06:19:00","name":"stepsCompleted","sys_created_by":"system"},{"definition_type":"production","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Return % of step completion of best practice \"Enforce the use of strong passphrases\"","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 06:19:00","kb_article_url":"","sys_tags":"","version":"0","script":"answer = getStepCompletionPercentage('6d49b43d43e77110adf71f062bb8f28c');\n\nfunction getStepCompletionPercentage(bestPracticeId){\nvar gr = new GlideRecord('sn_vsc_best_practice_configurations');\nif (gr.get(bestPracticeId)) {\n\tif (gr.getValue('status') == 'completed') {\n\t\tvar grSA = new GlideRecord('sys_audit');\n\t\tgrSA.addEncodedQuery('tablename=sn_vsc_best_practice_configurations^fieldname=status^sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()^newvalue=completed^documentkey=' + bestPracticeId);\n\t\tgrSA.query();\n\t\tif(grSA.hasNext()) {\n\t\t\tvar stepData = new sn_vsc.SCPlaybookUtil().getBPStepData(bestPracticeId);\n\t\t\treturn Math.round((stepData.completedSteps/stepData.totalSteps)*100,2);\n\t\t}\n\t}\n}\nreturn 0;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"24a77fff04b52210559073c06a02f72c","definition_id":"DEFN1008187","sys_updated_by":"system","exec_time_threshold":"150000","sys_created_on":"2025-06-05 06:19:00","name":"stepsCompleted","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Password Reset","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:24:28","kb_article_url":"","sys_tags":"","version":"","script":"\tvar DEBUG = false;\n\tanswer = getAnswer();\n\n\t/*\n\t * This script is used for password reset audit purposes.\n\t * Returns the total number of user, per credential store (not including SN credential store types) that are enabled for\n\t * the password reset application (whether enrolled or not).\n\t *\n\t * - Password reset is licensed regardless of enrollment status.\n\t * - Password reset is licensed per unique sets of credentials managed, (not unique users).\n\t *        I.e. same user on multiple credential stores will be counted multiple times.\n\t * - Both self-service and service desk channels are chargeable. We don't double-count where both capabilities are available.\n\t * - Any credential stores beyond the out-of-the-box remote and local SN will be counted.\n\t */\n\tfunction getAnswer() {\n\t\tif (!GlidePluginManager.isActive('com.glideapp.password_reset'))\n\t\t\treturn 0;\n\n\t\t// Retrieve total count of active users:\n\t\tvar totalUsers = 0;\n\t\tvar gr_user = new GlideAggregate('sys_user');\n\t\tgr_user.addAggregate('COUNT');\n\t\tgr_user.addActiveQuery();\n\t\tgr_user.query();\n\t\tif (gr_user.next()) {\n\t\t\ttotalUsers = gr_user.getAggregate('COUNT');\n\t\t}\n\t\t\n\t\tvar perCredStoreCount = {};\n\t\t\n\t\t// Iterates through all non-ServiceNow credentail stores:\n\t\tvar gr_cs = new GlideRecord('pwd_cred_store');\n\t\tvar gr_cond = gr_cs.addJoinQuery('pwd_cred_store_type', 'type', 'sys_id');\n\t\tgr_cond.addCondition('sys_id', 'NOT IN', 'e611433fbf020100710071a7bf073921, b6e122829f01010054005f29468ba32e');\t\t// filter out SN credential stores\n\t\tgr_cs.query();\n\t\twhile (gr_cs.next()) {\n\t\t\t_debug(\"DEBUG: Checking credential store '\" + gr_cs.name + \"'\");\n\t\t\t\n\t\t\t// check if cred_store is in an active process:\t\t\t\n\t\t\tvar allUsers = false;\n\t\t\tvar groupSet = {};\n\n\t\t\t// Case #1: check if cred_store is in an active process that is mapped to all users:\n\t\t\tvar gr_proc = new GlideRecord('pwd_process');\n\t\t\tgr_proc.addActiveQuery();\n\t\t\tgr_proc.addQuery('cred_store', gr_cs.sys_id);\n\t\t\tgr_proc.addQuery('apply_to_all_users', 'true');\n\t\t\tgr_proc.query();\n\t\t\tif (gr_proc.hasNext()) {\n\t\t\t\tperCredStoreCount[gr_cs.sys_id] = totalUsers;\n\t\t\t} else {\n\n\t\t\t\t// Case #2: get the count of unique users that belong to groups that are mapped to active processes for this credential store:\n\t\t\t\tvar userCount = 0;\n\t\t\t\tvar processList = \"\";\n\t\t\t\t\n\t\t\t\t// Get all active processes that are mapped to the current cred-store:\n\t\t\t\tvar gr_proc2 = new GlideRecord('pwd_process');\n\t\t\t\tgr_proc2.addActiveQuery();\n\t\t\t\tgr_proc2.addQuery('cred_store', gr_cs.sys_id);\n\t\t\t\tgr_proc2.query();\n\t\t\t\tvar first = true;\n\t\t\t\twhile (gr_proc2.next()) {\n\t\t\t\t\tprocessList += (first ? \"\" : \",\") + gr_proc2.sys_id;\n\t\t\t\t\tfirst = false;\n\t\t\t\t}\n\t\t\t\t_debug(\"DEBUG: processList: \" + processList);\n\t\t\t\t\n\t\t\t\tif (processList != \"\") {\n\t\t\t\t\t// Retrieve the number of unique users in the discovered process list:\n\t\t\t\t\tvar gr_users = new GlideAggregate('sys_user_grmember');\n\t\t\t\t\tgr_users.groupBy('user');\n\t\t\t\t\tvar gc = gr_users.addJoinQuery('pwd_map_proc_to_group', 'group', 'user_group');\n\t\t\t\t\tgc.addCondition('process', 'IN', processList);\n\t\t\t\t\tgr_users.query();\n\t\t\t\t\tuserCount = gr_users.getRowCount();\n\t\t\t\t}\n\t\t\t\tperCredStoreCount[gr_cs.sys_id] = userCount;\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar totalUserCount = 0;\n\t\t\n\t\t// Sum all results:\n\t    for (var i in perCredStoreCount) {\n\t\t\t_debug(\"DEBUG: group: \" + i + \" count: \" + perCredStoreCount[i]);\n\t\t\ttotalUserCount += parseInt(perCredStoreCount[i]);\n\t\t}\n\t\t_debug(\"DEBUG: Total user count (for licensing): \" + totalUserCount);\n\t\t\n\t\treturn totalUserCount;\n\t}\n\t\n\tfunction _debug(msg) {\n\t\tif (DEBUG) {\n\t\t\tgs.log(msg);\n\t\t}\n\t}\n","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"252b637304352210559073c06a02f7f1","definition_id":"DEF1000153","sys_updated_by":"system","exec_time_threshold":"240000","sys_created_on":"2025-06-05 05:24:28","name":"PasswordResetAudit","sys_created_by":"system"},{"definition_type":"production","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Return % of step completion of best practice \"Disable passwordless authentication\"","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 06:19:00","kb_article_url":"","sys_tags":"","version":"0","script":"answer = getStepCompletionPercentage('0ffa57de43ab7110adf71f062bb8f260');\nfunction getStepCompletionPercentage(bestPracticeId){\nvar gr = new GlideRecord('sn_vsc_best_practice_configurations');\nif (gr.get(bestPracticeId)) {\n    if (gr.getValue('status') == 'completed') {\n        var grSA = new GlideRecord('sys_audit');\n        grSA.addEncodedQuery('tablename=sn_vsc_best_practice_configurations^fieldname=status^sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()^newvalue=completed^documentkey=' + bestPracticeId);\n        grSA.query();\n        if(grSA.hasNext()) {\n            var stepData = new sn_vsc.SCPlaybookUtil().getBPStepData(bestPracticeId);\n            return Math.round((stepData.completedSteps/stepData.totalSteps)*100,2);\n        }\n    }\n}\nreturn 0;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"28a77fff04b52210559073c06a02f717","definition_id":"DEFN1008190","sys_updated_by":"system","exec_time_threshold":"150000","sys_created_on":"2025-06-05 06:19:00","name":"stepsCompleted","sys_created_by":"system"},{"definition_type":"production","count_type":"Usage","sys_mod_count":"0","active":"true","description":"return % of step completion of best practice \"Configure your email systems to accept mail from your instance by using SPF\"","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 06:19:00","kb_article_url":"","sys_tags":"","version":"0","script":"answer = getStepCompletionPercentage('42c2cc3943677110adf71f062bb8f2d7');\n\nfunction getStepCompletionPercentage(bestPracticeId){\nvar gr = new GlideRecord('sn_vsc_best_practice_configurations');\nif (gr.get(bestPracticeId)) {\n\tif (gr.getValue('status') == 'completed') {\n\t\tvar grSA = new GlideRecord('sys_audit');\n\t\tgrSA.addEncodedQuery('tablename=sn_vsc_best_practice_configurations^fieldname=status^sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()^newvalue=completed^documentkey=' + bestPracticeId);\n\t\tgrSA.query();\n\t\tif(grSA.hasNext()) {\n\t\t\tvar stepData = new sn_vsc.SCPlaybookUtil().getBPStepData(bestPracticeId);\n\t\t\treturn Math.round((stepData.completedSteps/stepData.totalSteps)*100,2);\n\t\t}\n\t}\n}\nreturn 0;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"28a77fff04b52210559073c06a02f72a","definition_id":"DEFN1008193","sys_updated_by":"system","exec_time_threshold":"150000","sys_created_on":"2025-06-05 06:19:00","name":"stepsCompleted","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"How many employees visit Topic Pages per month","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 06:13:24","kb_article_url":"","sys_tags":"","version":"","script":"/**\n * Function to get url of every topic page.\n */\n function getTopicPageUrls() {\n    var topicPageUrls = {\"4fb26c9cc3d030102ec1a589a840ddbd\": true};\n\n    var dictionaryGr = new GlideRecord(\"sys_dictionary\");\n    dictionaryGr.addQuery(\"name\", \"topic\");\n    dictionaryGr.addQuery(\"element\", \"template\");\n    dictionaryGr.query();\n\n    if (dictionaryGr.getRowCount() > 0) {\n        var gr = new GlideRecord(\"topic\");\n        gr.addNotNullQuery(\"template\");\n        gr.query();\n        while (gr.next())\n            topicPageUrls[gr.template.toString()] = true;\n    }\n    return topicPageUrls;\n}\n\nvar gr = new GlideAggregate(\"sp_log\");\ngr.addQuery('sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()');\ngr.addQuery(\"page\", \"IN\", Object.keys(getTopicPageUrls()));\ngr.setGroup(false);\ngr.addAggregate('COUNT(DISTINCT', 'user');\ngr.query();\ngr.next();\nanswer = gr.getAggregate('COUNT(DISTINCT','user');","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"2a56fbfb04b52210559073c06a02f74e","definition_id":"DEFN1005931","sys_updated_by":"system","exec_time_threshold":"10000","sys_created_on":"2025-06-05 06:13:24","name":"userVisitsOnTopicPage","sys_created_by":"system"},{"definition_type":"production","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Total number of active users who use taxonomy on Employee center portal","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 06:13:24","kb_article_url":"","sys_tags":"","version":"0","script":"// get all potential ESC portals with associated active non empty taxonomy\ntry {\n\n    var discardPortalIds = []; // some dafault Portals that we ship except SP [ observed SP record used as EC ]\n    discardPortalIds.push('26f2fffb77322300454792718a1061e5'); // MESP\n    discardPortalIds.push('0d3fa8649f131200b18a7feea57fcf7a'); // CAB WorkBench\n    discardPortalIds.push('45d6680fdb52220099f93691f0b8f5ad'); // Knowledge Portal\n    discardPortalIds.push('5ef362fa5b4132003d1c484c11f91a05'); // BenchMarks\n    discardPortalIds.push('bebfa187536a1300a699ddeeff7b1223'); // Instance Security Center\n    discardPortalIds.push('d141d4f20b4303008cd6e7ae37673a64'); // Content Publishing Demo\n    discardPortalIds.push('db57a91047001200ba13a5554ee49050'); // SP Config\n    discardPortalIds.push('fe5506d03b0203008ed00d8044efc45d'); // Service Workspace\n    discardPortalIds.push('89275a53cb13020000f8d856634c9c51'); // CSM Portals\n\n    var finalSYSID = [];\n    var finalCount = 0;\n    // Portals with taxonomy using Connected Content and not using OOTB Portal SYS ID\n    var gr = new GlideRecord(\"m2m_sp_portal_taxonomy\");\n    gr.addQuery('sp_portal', 'NOT IN', discardPortalIds);\n    gr.addEncodedQuery(\"taxonomyISNOTEMPTY^active=true^taxonomy.active=true\");\n    gr.query();\n    while (gr.next()) {\n        // Check if connected content exists for an taxonomy\n        var gra = new GlideAggregate(\"m2m_connected_content\");\n        if (gra.isValid()) {\n            gra.addAggregate('COUNT');\n            gra.addEncodedQuery(\"topic.taxonomy=\" + gr.getValue('taxonomy') + \"^topic.active=true\");\n            gra.query();\n            if (gra.next() && gra.getAggregate('COUNT') > 0) {\n                // Prepare the list of SYS_ID's\n                finalSYSID.push(gr.getValue('sp_portal'));\n            }\n        }\n    }\n\n    // execute query in finalSYSID is not empty\n    if (finalSYSID.length != 0) {\n        var graPortal = new GlideAggregate(\"sp_log\");\n        graPortal.addAggregate('COUNT(DISTINCT', 'user');\n        graPortal.addQuery('portal.sys_id', 'IN', finalSYSID);\n        graPortal.addEncodedQuery(\"sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()\");\n        graPortal.setWorkflow(false);\n        graPortal.setGroup(false);\n        graPortal.query();\n        if (graPortal.next()) {\n            finalCount = graPortal.getAggregate('COUNT(DISTINCT', 'user');\n        }\n    }\n    answer = finalCount;\n}\ncatch (e) {\n    gs.info(\"script errored - \" + e.stack);\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"2a56fbfb04b52210559073c06a02f74f","definition_id":"DEFN1008139","sys_updated_by":"system","exec_time_threshold":"150000","sys_created_on":"2025-06-05 06:13:24","name":"Total active users who use taxonomy on Employee center portal","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Count of new content added to EC taxonomy in the last month","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 06:13:24","kb_article_url":"","sys_tags":"","version":"","script":"function getTaxonomyId() {\n    var portalId = getECPortalId();\n    if (!portalId)\n        return;\n\n    var gr = new GlideRecord(\"m2m_sp_portal_taxonomy\");\n    if (!gr.isValid())\n        return;\n\n    gr.addActiveQuery();\n    gr.addQuery(\"sp_portal\", portalId);\n    gr.addQuery(\"taxonomy.active\", true);\n    gr.query();\n    while (gr.next())\n        return gr.taxonomy.toString();\n}\n\n\nfunction getECPortalId() {\n    var gr = new GlideRecord(\"sp_portal\");\n    gr.addActiveQuery();\n    gr.addQuery(\"sys_id\", \"70cd9f3b734b13001fdae9c54cf6a72f\");\n    gr.addOrCondition(\"url_suffix\", \"esc\");\n    gr.query();\n    while (gr.next())\n        return gr.sys_id.toString();\n}\n\nvar count = 0;\n\nvar gr = new GlideRecord(\"m2m_connected_content\");\nvar taxonomyId = getTaxonomyId();\nif (gr.isValid() && taxonomyId) {\n    gr.addEncodedQuery(\"sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()^topic.taxonomy=\" + taxonomyId);\n    gr.query();\n    count = gr.getRowCount();\n}\n\nanswer = count;","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"2a56fbfb04b52210559073c06a02f750","definition_id":"DEFN1005932","sys_updated_by":"system","exec_time_threshold":"10000","sys_created_on":"2025-06-05 06:13:24","name":"taxonomyContentAddedLastMonth","sys_created_by":"system"},{"definition_type":"production","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Total number of active users of  AI Search enabled Employee center portal ","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 06:13:24","kb_article_url":"","sys_tags":"","version":"0","script":"try {\n\n    var discardPortalIds = []; // some dafault Portals that we ship except SP [ observed SP record used as EC ]\n    discardPortalIds.push('26f2fffb77322300454792718a1061e5'); // MESP\n    discardPortalIds.push('0d3fa8649f131200b18a7feea57fcf7a'); // CAB WorkBench\n    discardPortalIds.push('45d6680fdb52220099f93691f0b8f5ad'); // Knowledge Portal\n    discardPortalIds.push('5ef362fa5b4132003d1c484c11f91a05'); // BenchMarks\n    discardPortalIds.push('bebfa187536a1300a699ddeeff7b1223'); // Instance Security Center\n    discardPortalIds.push('d141d4f20b4303008cd6e7ae37673a64'); // Content Publishing Demo\n    discardPortalIds.push('db57a91047001200ba13a5554ee49050'); // SP Config\n    discardPortalIds.push('fe5506d03b0203008ed00d8044efc45d'); // Service Workspace\n    discardPortalIds.push('89275a53cb13020000f8d856634c9c51'); // CSM Portals\n\n    var finalSYSID = [];\n    var finalCount = 0;\n    // Portals using Connected Content and not using OOTB SYS ID  \n    var gr = new GlideRecord(\"m2m_sp_portal_taxonomy\");\n    gr.addQuery('sp_portal', 'NOT IN', discardPortalIds);\n    gr.addQuery('sp_portal', '!=', '70cd9f3b734b13001fdae9c54cf6a72f');\n    gr.addEncodedQuery(\"taxonomyISNOTEMPTY^active=true^taxonomy.active=true\");\n    gr.query();\n    while (gr.next()) {\n        // Check if connected content exists for an taxonomy\n        var gra = new GlideAggregate(\"m2m_connected_content\");\n        if (gra.isValid()) {\n            gra.addAggregate('COUNT');\n            gra.addEncodedQuery(\"topic.taxonomy=\" + gr.getValue('taxonomy') + \"^topic.active=true\");\n            gra.query();\n            if (gra.next() && gra.getAggregate('COUNT') > 0) {\n                // Prepare the list of SYS_ID's\n                finalSYSID.push(gr.getValue('sp_portal'));\n            }\n        }\n    }\n\n    // Portals not using Taxonomy and not using OOTB SYS ID  \n    var sp_portalgr1 = new GlideRecord(\"sp_portal\");\n    sp_portalgr1.addQuery('sys_id', 'NOT IN', finalSYSID);\n    sp_portalgr1.addQuery('sys_id', '!=', '70cd9f3b734b13001fdae9c54cf6a72f');\n    sp_portalgr1.addQuery('enable_ais', true);\n    sp_portalgr1.query();\n    while (sp_portalgr1.next()) {\n        // check if any of the OOTB parameters are matching then add to list\n        if (sp_portalgr1.getValue('theme') == '9b6f06d71bb8f85047582171604bcb9c' ||\n            sp_portalgr1.getValue('sp_rectangle_menu') == '493d01365368301056c1ddeeff7b1207' ||\n            sp_portalgr1.theme.header == 'd0009941eb103010ed7966d6475228c1' ||\n            (sp_portalgr1.getDisplayValue('logo').length != 0 &&\n                (sp_portalgr1.getDisplayValue('logo') == 'ba95c23323c42300fb0c949e27bf6563.iix' || sp_portalgr1.getDisplayValue('logo') == 'dacdee00ff601210860fffffffffffd6.iix')) ||\n            (sp_portalgr1.getValue('homepage') == '8c51a66b532030101865ddeeff7b120d' ||\n                sp_portalgr1.getValue('homepage') == '0c9e5ccd537030101865ddeeff7b12cb' ||\n                sp_portalgr1.getValue('homepage') == '3cd32c40c7a83110b1c6677703c26062' ||\n                sp_portalgr1.getValue('homepage') == 'b10e9a1743d431108c5d43d488b8f26b')) {\n            finalSYSID.push(sp_portalgr1.getUniqueValue());\n        }\n    }\n\n    // Portals using OOTB SYS ID\n    finalSYSID.push('70cd9f3b734b13001fdae9c54cf6a72f');\n\n    // add esc :  not OOTB SYS_ID and not in finalSYSID - track /esc portals\n    var sp_portalgr2 = new GlideRecord(\"sp_portal\");\n    sp_portalgr1.addQuery('enable_ais', true);\n    sp_portalgr2.addQuery('url_suffix', 'esc');\n    sp_portalgr2.addQuery('sys_id', 'NOT IN', finalSYSID);\n    sp_portalgr2.query();\n    while (sp_portalgr2.next()) {\n        finalSYSID.push(sp_portalgr2.getUniqueValue());\n    }\n    // execute query in finalSYSID is not empty\n    if (finalSYSID.length != 0) {\n        var graPortal = new GlideAggregate(\"sp_log\");\n        graPortal.addAggregate('COUNT(DISTINCT', 'user');\n        graPortal.addQuery('portal.sys_id', 'IN', finalSYSID);\n        graPortal.addEncodedQuery(\"sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()\");\n        graPortal.setWorkflow(false);\n        graPortal.setGroup(false);\n        graPortal.query();\n        if (graPortal.next()) {\n            finalCount = graPortal.getAggregate('COUNT(DISTINCT', 'user');\n        }\n    }\n    answer = finalCount;\n}\ncatch (e) {\n    gs.info(\"script errored - \" + e.stack);\n}\n","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"2a56fbfb04b52210559073c06a02f751","definition_id":"DEFN1008134","sys_updated_by":"system","exec_time_threshold":"150000","sys_created_on":"2025-06-05 06:13:24","name":"Total active users of AI Search enabled Employee center portal ","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Returns a JSON with number of total conversations and conversations per conversation states","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 06:03:59","kb_article_url":"","sys_tags":"","version":"","script":"answer = JSON.stringify(conversationCount());\n\nfunction conversationCount() {\n    var result = {};\n    if (!GlideTableDescriptor.isValid('sys_cs_conversation')) {\n      return result;\n    }\n    var ga = new GlideAggregate('sys_cs_conversation');\n    ga.addAggregate('COUNT', 'state');\n    ga.query();\n\n    var count = 0;\n    var stateCount = 0;\n    while (ga.next()) {\n      stateCount = parseInt(ga.getAggregate('COUNT', 'state'));\n      result[ga.state] = stateCount;\n      count += stateCount;\n    }\n    result.count = count;\n    return result;\n}","sys_class_name":"ua_scripted_defn","run_scope":"","schedule":"Daily","sys_id":"2c3433b704b52210559073c06a02f720","definition_id":"DEFN1000501","sys_updated_by":"system","exec_time_threshold":"200","sys_created_on":"2025-06-05 06:03:59","name":"ConversationCount","sys_created_by":"system"},{"definition_type":"production","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Return % of step completion of best practice \"Activate the ServiceNow Access Control plugin\"","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 06:19:00","kb_article_url":"","sys_tags":"","version":"0","script":"answer = getStepCompletionPercentage('6ffdd3d243eb7110adf71f062bb8f26d');\n\nfunction getStepCompletionPercentage(bestPracticeId){\nvar gr = new GlideRecord('sn_vsc_best_practice_configurations');\nif (gr.get(bestPracticeId)) {\n\tif (gr.getValue('status') == 'completed') {\n\t\tvar grSA = new GlideRecord('sys_audit');\n\t\tgrSA.addEncodedQuery('tablename=sn_vsc_best_practice_configurations^fieldname=status^sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()^newvalue=completed^documentkey=' + bestPracticeId);\n\t\tgrSA.query();\n\t\tif(grSA.hasNext()) {\n\t\t\tvar stepData = new sn_vsc.SCPlaybookUtil().getBPStepData(bestPracticeId);\n\t\t\treturn Math.round((stepData.completedSteps/stepData.totalSteps)*100,2);\n\t\t}\n\t}\n}\nreturn 0;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"2ca77fff04b52210559073c06a02f715","definition_id":"DEFN1008195","sys_updated_by":"system","exec_time_threshold":"150000","sys_created_on":"2025-06-05 06:19:00","name":"stepsCompleted","sys_created_by":"system"},{"definition_type":"production","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Return number of completed best practices per month","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 06:19:00","kb_article_url":"","sys_tags":"","version":"0","script":"answer = getCompleteBPCount();\n\nfunction getCompleteBPCount() {\n    var completedBP = 0;\n    var gr = new GlideRecord('sn_vsc_best_practice_configurations');\n    gr.addEncodedQuery('status=completed');\n    gr.query();\n    while (gr.next()) {\n        var grSA = new GlideRecord('sys_audit');\n        grSA.addEncodedQuery(\"tablename=sn_vsc_best_practice_configurations^fieldname=status^newvalue=completed^sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()^documentkey=\" + gr.sys_id);\n        grSA.query();\n        if (grSA.hasNext()) {\n            completedBP++;\n        }\n    }\n    return completedBP;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"2ca77fff04b52210559073c06a02f728","definition_id":"DEFN1008170","sys_updated_by":"system","exec_time_threshold":"90000","sys_created_on":"2025-06-05 06:19:00","name":"completedBP","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Average transactions in last 12 months for all scopes","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:32:56","kb_article_url":"","sys_tags":"","version":"","script":"var aggregator = new OutboundUsageMetricsAggregator();\nvar sums = aggregator.getTransactionCountByMonth('sys_hub_step_instance', false);\nvar totalSum = 0;\nwhile (sums.next()) {  \n  totalSum = totalSum + parseInt(sums.getAggregate('SUM', 'agg_value'), 10);\n}\nanswer = totalSum/12;","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"311d6f3f04352210559073c06a02f7ce","definition_id":"DEF1000407","sys_updated_by":"system","exec_time_threshold":"5000","sys_created_on":"2025-06-05 05:32:56","name":"outbound_usage_metrics_avg_all","sys_created_by":"system"},{"definition_type":"","count_type":"Licensing","sys_mod_count":"0","active":"true","description":"Average transactions during last 12 months","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:32:56","kb_article_url":"","sys_tags":"","version":"","script":"var aggregator = new OutboundUsageMetricsAggregator();\nvar sums = aggregator.getTransactionCountByMonth('sys_hub_step_instance', true);\nvar totalSum = 0;\nwhile (sums.next()) {\n  totalSum = totalSum + parseInt(sums.getAggregate('SUM', 'agg_value'), 10);\n}\n\nanswer = totalSum/12;","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"311d6f3f04352210559073c06a02f7cf","definition_id":"DEF1000400","sys_updated_by":"system","exec_time_threshold":"5000","sys_created_on":"2025-06-05 05:32:56","name":"outbound_usage_metrics_avg_compliance","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Transaction for last 30 days","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 05:32:56","kb_article_url":"","sys_tags":"","version":"","script":"var aggregator = new OutboundUsageMetricsAggregator();\nvar sum = aggregator.getTransactionCountForLast30Days('sys_hub_step_instance', true);\nanswer = sum;","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"311d6f3f04352210559073c06a02f7d0","definition_id":"DEF1000409","sys_updated_by":"system","exec_time_threshold":"2000","sys_created_on":"2025-06-05 05:32:56","name":"outbound_usage_metrics_last30days","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Maximum IntegrationHub transactions in last 12 months for all scopes.","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:32:57","kb_article_url":"","sys_tags":"","version":"","script":"var aggregator = new IHUsageMetricsAggregator();\nvar sums = aggregator.getTransactionCountByMonth(false);\nvar maxCount = 0;\nwhile (sums.next()) {  \n  var currentCount = parseInt(sums.getAggregate('SUM', 'use_count'));\n  if(currentCount > maxCount) \n    maxCount = currentCount;\n}\nanswer = maxCount;","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"311daf3f04352210559073c06a02f701","definition_id":"DEFN1001224","sys_updated_by":"system","exec_time_threshold":"5000","sys_created_on":"2025-06-05 05:32:57","name":"ua_ih_usage_max_all","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Duration of participant sessions per conference call in last 30days","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:30:29","kb_article_url":"","sys_tags":"","version":"","script":"var start = new GlideDateTime(\"1970-01-01 00:00:00\");\nvar end;\nvar gr = new GlideRecord('notify_participant');\ngr.setCategory(\"usage\");\ngr.addQuery('sys_created_onRELATIVEGE@dayofweek@ago@30');\ngr.addNotNullQuery('duration');\ngr.query();\nvar durationInMins = 0;\nwhile (gr.next()) {\n\tend = new GlideDateTime(gr.duration);\n\tdurationInMins += parseInt(gs.dateDiff(start, end, true));\n}\nanswer = Math.round(durationInMins / 60);","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"318c277b04352210559073c06a02f7d1","definition_id":"DEFN1002227","sys_updated_by":"system","exec_time_threshold":"9000","sys_created_on":"2025-06-05 05:30:29","name":"Duration of participant sessions per conference call in last 30days","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"No of recommendations created for Context-Incident in a week for script generator\n      type.","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 06:24:16","kb_article_url":"","sys_tags":"","version":"","script":"function recommendationCountByScriptingRGType() {\n\n  var rgType = \"d17b2845a39b01100f6357fc26fcda5d\"; // Scripting\n  var rgTable = \"sn_nb_action_resource_generator\";\n  var recommendationTable = \"sn_nb_action_recommended_action\";\n  var executionTable = \"sn_nb_action_detail\";\n\n  var resourceGeneratorGr = new GlideRecord(rgTable);\n  resourceGeneratorGr.addQuery(\"generator_type\", rgType);\n  resourceGeneratorGr.addQuery(\"context\",\"71e20d52532211101d87ddeeff7b1206\"); // incident context\n  resourceGeneratorGr.addActiveQuery();\n  resourceGeneratorGr.query();\n  var resourceGenerators = [];\n  while (resourceGeneratorGr.next()) {\n    resourceGenerators.push(resourceGeneratorGr.getUniqueValue());\n  }\n\n  var actions = [];\n  var recommendationGr = new GlideRecord(recommendationTable);\n  recommendationGr.addQuery(\"resource_generator\", 'IN', resourceGenerators);\n  recommendationGr.addActiveQuery();\n  recommendationGr.query();\n\n  while (recommendationGr.next()) {\n    actions.push(recommendationGr.getValue(\"action\"));\n  }\n\n  var gr = new GlideAggregate(executionTable);\n  gr.addQuery('sys_updated_on', '>=', gs.daysAgo(7));\n  gr.addQuery('recommended', 'IN', actions);\n  gr.addAggregate('COUNT');\n  gr.query();\n  var count = 0;\n  if(gr.next()) count = gr. getAggregate(\"COUNT\");\n\n  return count;\n}\n\nanswer = recommendationCountByScriptingRGType();","sys_class_name":"ua_scripted_defn","run_scope":"sn_sow_inc","schedule":"Daily","sys_id":"31d87fb304f52210559073c06a02f767","definition_id":"DEFN1007973","sys_updated_by":"system","exec_time_threshold":"90000","sys_created_on":"2025-06-05 06:24:16","name":"recommendationCountByScriptingRGType","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Total no.of predictions without user confirmation","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:57:31","kb_article_url":"","sys_tags":"","version":"","script":"var result = 0;\nvar glideGr = new GlideAggregate('open_nlu_predict_intent_feedback');\nvar encodedQuery = 'user_confirmation=NA^sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()^nlu_provider=64c023c17300330021a044764df6a70e';\n\ntry {\n    glideGr.addAggregate('COUNT', 'audit_log');\n    glideGr.addEncodedQuery(encodedQuery);\n    glideGr.query();\n    if (glideGr.next()) {\n        result = glideGr.getRowCount();\n    }\n} catch (e) {\n    result = 0;\n}\nanswer = parseInt(result);","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"35b2377304b52210559073c06a02f7c6","definition_id":"DEFN1006664","sys_updated_by":"system","exec_time_threshold":"150000","sys_created_on":"2025-06-05 05:57:31","name":"NLU Performance total coversation without user confirmation of last month","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"No of recommendations created for Context-Incident in a week for Flow generator\n      type.","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 06:24:16","kb_article_url":"","sys_tags":"","version":"","script":"function recommendationCountByFlowRGType() {\n\n  var rgType = \"9ac9cdd153530110e530ddeeff7b1228\";  // Flow\n  var rgTable = \"sn_nb_action_resource_generator\";\n  var recommendationTable = \"sn_nb_action_recommended_action\";\n  var executionTable = \"sn_nb_action_detail\";\n\n  var resourceGeneratorGr = new GlideRecord(rgTable);\n  resourceGeneratorGr.addQuery(\"generator_type\", rgType);\n  resourceGeneratorGr.addQuery(\"context\",\"71e20d52532211101d87ddeeff7b1206\"); // incident context\n  resourceGeneratorGr.addActiveQuery();\n  resourceGeneratorGr.query();\n  var resourceGenerators = [];\n  while(resourceGeneratorGr.next()) {\n    resourceGenerators.push(resourceGeneratorGr.getUniqueValue());\n  }\n\n  var actions = [];\n  var recommendationGr = new GlideRecord(recommendationTable);\n  recommendationGr.addQuery(\"resource_generator\", 'IN', resourceGenerators);\n  recommendationGr.addActiveQuery();\n  recommendationGr.query();\n\n  while(recommendationGr.next()) {\n    actions.push(recommendationGr.getValue(\"action\"));\n  }\n\n  var gr = new GlideAggregate(executionTable);\n  gr.addQuery('sys_updated_on', '>=', gs.daysAgo(7));\n  gr.addQuery('recommended', 'IN', actions);\n  gr.addAggregate('COUNT');\n  gr.query();\n  var count = 0;\n  if(gr.next()) count = gr. getAggregate(\"COUNT\");\n\n  return count;\n}\n\nanswer = recommendationCountByFlowRGType();","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"35d87fb304f52210559073c06a02f768","definition_id":"DEFN1007976","sys_updated_by":"system","exec_time_threshold":"90000","sys_created_on":"2025-06-05 06:24:16","name":"recommendationCountByFlowRGType","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Number of instances with active pre-auth context Policy","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:29:56","kb_article_url":"","sys_tags":"","version":"","script":"answer = getRecordsCount();\n\nfunction getRecordsCount() {\n    var count = 0;\n    var aAPluginActive = GlidePluginManager.isActive(\"com.snc.adaptive_authentication\");\n    var aAPropertyEnabled = GlideProperties.getBoolean(\"glide.authenticate.auth.policy.enabled\");\n    if (aAPluginActive && aAPropertyEnabled) {\n        \n        //check if any pre-auth policy is active\n        var preAuthcontextGr = new GlideRecord(\"sys_auth_policy_context\");\n        preAuthcontextGr.addEncodedQuery(\"sys_id=62c7e85773112010616ca9843cf6a78e^default_policy=allow_policy^allow_policy.active=true^NQsys_id=62c7e85773112010616ca9843cf6a78e^default_policy=deny_policy^deny_policy.active=true\");\n        preAuthcontextGr.query();\n        if (preAuthcontextGr.next()) {\n            var activePreAuthPolicyConditionCount = 0;\n            if (preAuthcontextGr.default_policy == \"allow_policy\") {\n                activePreAuthPolicyConditionCount = getActivePolicyConditionCount(preAuthcontextGr.allow_policy.decision_table);\n            } else {\n                activePreAuthPolicyConditionCount = getActivePolicyConditionCount(preAuthcontextGr.deny_policy.decision_table);\n            }\n            if (activePreAuthPolicyConditionCount > 0)\n                count++;\n        }\n\n    }\n    return count;\n}\n\nfunction getActivePolicyConditionCount(decision_table_sys_id) {\n    var ga = new GlideAggregate(\"sys_auth_policy_condition\");\n    ga.addActiveQuery();\n    ga.addQuery(\"decision_table\", decision_table_sys_id);\n    ga.addAggregate(\"COUNT\", null);\n    ga.query();\n    if (ga.next()) {\n        return ga.getAggregate('COUNT');\n    }\n    return 0;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"396c2b3b04352210559073c06a02f7f4","definition_id":"DEFN1007300","sys_updated_by":"system","exec_time_threshold":"10000","sys_created_on":"2025-06-05 05:29:56","name":"Number of instances with active pre-auth context Policy","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Total no.of single predictions confirmed as incorrect","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:57:31","kb_article_url":"","sys_tags":"","version":"","script":"var encodedQuery = 'sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()^nlu_provider=64c023c17300330021a044764df6a70e';\nanswer = new sn_nlu_workbench.NLUPerformanceUtil().getAuditLogs('SINGLE_INCORRECT', encodedQuery).length;","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"39b2377304b52210559073c06a02f7c4","definition_id":"DEFN1006667","sys_updated_by":"system","exec_time_threshold":"150000","sys_created_on":"2025-06-05 05:57:31","name":"NLU Performance total coversation with single incorrect prediction of last month","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Cumulative number of intents for published NLU models","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 04:56:17","kb_article_url":"","sys_tags":"","version":"","script":"var count = 0;\nvar gRec = new GlideRecord(\"sys_nlu_intent\");\nvar joinQuery = gRec.addJoinQuery('sys_nlu_model_status', 'model', 'model');\njoinQuery.addCondition(\"published_version\", '>', '0');\ngRec.query();\nwhile (gRec.next()) {\n    count++;\n}\nanswer = count;","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"3cb4a77f04312210559073c06a02f70e","definition_id":"DEFN1002075","sys_updated_by":"system","exec_time_threshold":"100","sys_created_on":"2025-06-05 04:56:17","name":"NoIntentsInPublishedNLUModels","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"IntegrationHub transactions for last month","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:32:57","kb_article_url":"","sys_tags":"","version":"","script":"var aggregator = new IHUsageMetricsAggregator();\nvar sums = aggregator.getTransactionCountForLastMonth(true);\nanswer = sums;","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"3d1daf3f04352210559073c06a02f702","definition_id":"DEFN1001225","sys_updated_by":"system","exec_time_threshold":"2000","sys_created_on":"2025-06-05 05:32:57","name":"ua_ih_usage_tx_monthly","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Number of instances with active MFA context Policy","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:29:56","kb_article_url":"","sys_tags":"","version":"","script":"answer = getRecordsCount();\n\nfunction getRecordsCount() {\n    var count = 0;\n    var aAPluginActive = GlidePluginManager.isActive(\"com.snc.adaptive_authentication\");\n    var aAPropertyEnabled = GlideProperties.getBoolean(\"glide.authenticate.auth.policy.enabled\");\n    if (aAPluginActive && aAPropertyEnabled) {\n        //check if any MFA policy is active\n        var mfacontextGr = new GlideRecord(\"sys_mfa_policy_context\");\n        mfacontextGr.addEncodedQuery(\"default_policy=stepup_mfa_policy^stepup_mfa_policy.active=true^NQdefault_policy=stepdown_mfa_policy^stepdown_mfa_policy.active=true\");\n        mfacontextGr.query();\n        if (mfacontextGr.next()) {\n            var activeMFAPolicyConditionCount = 0;\n            if (mfacontextGr.default_policy == \"stepup_mfa_policy\") {\n                activeMFAPolicyConditionCount = getActivePolicyConditionCount(mfacontextGr.stepup_mfa_policy.decision_table);\n            } else {\n                activeMFAPolicyConditionCount = getActivePolicyConditionCount(mfacontextGr.stepdown_mfa_policy.decision_table);\n            }\n            if (activeMFAPolicyConditionCount > 0)\n                count++;\n        }\n    }\n    return count;\n}\n\nfunction getActivePolicyConditionCount(decision_table_sys_id) {\n    var ga = new GlideAggregate(\"sys_auth_policy_condition\");\n    ga.addActiveQuery();\n    ga.addQuery(\"decision_table\", decision_table_sys_id);\n    ga.addAggregate(\"COUNT\", null);\n    ga.query();\n    if (ga.next()) {\n        return ga.getAggregate('COUNT');\n    }\n    return 0;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"3d6c2b3b04352210559073c06a02f7f2","definition_id":"DEFN1007298","sys_updated_by":"system","exec_time_threshold":"10000","sys_created_on":"2025-06-05 05:29:56","name":"Number of instances with active MFA context Policy","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"ITSM agents without CSM roles","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:09:32","kb_article_url":"","sys_tags":"","version":"","script":"var gr = new GlideAggregate('sys_user_has_role');\ngr.addQuery(\"roleIN282bf1fac6112285017366cb5f867469,20803f15870033000e56d61e36cb0b7d,260c203a870033000e56d61e36cb0bbc,ceb92b8153c833004558ddeeff7b12df,71cb2cf2530033004558ddeeff7b126a,d8e675e8532323008ef67c2c0fc587f6,ca27b5e8532323008ef67c2c0fc5879c,f98446040f103300402c6b198b767e1e,89d4c6040f103300402c6b198b767e3c\");\ngr.groupBy(\"user\");\ngr.query();\nvar itilUsers = [];\nwhile (gr.next()) {\n    itilUsers.push(gr.user.toString());\n}\n\nvar csmUserCount = 0;\nvar gr2 = new GlideAggregate('sys_user_has_role');\ngr2.addQuery(\"userIN\" + itilUsers);\ngr2.addQuery(\"roleIN3120f52cc312310015519f2974d3ae83,b2638ae3c303120095ccd02422d3ae55,041bb19487232300d6b0a7da0acb0bd7\");\ngr2.groupBy(\"user\");\ngr2.query();\ncsmUserCount = gr2.getRowCount();\n\nanswer = itilUsers.length - csmUserCount;","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"3eb7af7f04b12210559073c06a02f7e9","definition_id":"DEFN1002669","sys_updated_by":"system","exec_time_threshold":"10000","sys_created_on":"2025-06-05 05:09:32","name":"ITSM agents without CSM roles","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"<p>Automated Test Framework (ATF):&nbsp;Counts the number of test results by status</p>","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:17:20","kb_article_url":"","sys_tags":"","version":"","script":"var ga = new GlideAggregate('sys_atf_test_result');\nga.addAggregate('COUNT', 'status');\nga.query();\nvar data = {};\nvar totalTestResults = 0;\nvar numResults;\nwhile (ga.next()) {\n\tnumResults = parseInt(ga.getAggregate('COUNT', 'status'));\n\tdata[ga.status] = numResults;\n\ttotalTestResults += numResults;\n}\n\nga.initialize();\nga.addQuery('pin', true);\nga.addAggregate('COUNT');\nga.query();\ndata['retain_indefinitely'] = ga.next() ? parseInt(ga.getAggregate('COUNT')) : 0;\n\nga.initialize();\nga.addAggregate('AVG', 'run_time');\nga.query();\ndata['avg_run_time'] = ga.next() ? ga.getAggregate('AVG', 'run_time') : null;\n\ndata['count'] = totalTestResults;\nanswer = JSON.stringify(data);","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"4189e37b04f12210559073c06a02f79d","definition_id":"DEFN1000659","sys_updated_by":"system","exec_time_threshold":"1500","sys_created_on":"2025-06-05 05:17:20","name":"Counts the number of test results by status","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Returns the details of each tour. For e.g tour Name, tour id, active, published , roles, page count and step count","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:25:52","kb_article_url":"","sys_tags":"","version":"","script":"var gr = new GlideRecord('sys_embedded_tour_guide');\ngr.addEncodedQuery('sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()');\ngr.query();\nvar tourIDs = [], data = [];\nwhile (gr.next()) {\n  tourIDs.push({\n                tourId: gr.sys_id.toString(),\n                tourName: gr.name.toString(),\n                roles: gr.roles.toString() || '',\n                published: gr.status.toString() !== 'draft',\n                active: gr.active.toString()\n              });\n}\n\ntourIDs.forEach(function(tour) {\n  data.push(getTourDetails(tour));\n});\n\nfunction getTourDetails(currentTour){\n  var tour = currentTour;\n  var ga = new GlideAggregate('sys_embedded_tour_step');\n  ga.addEncodedQuery('sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()');\n  ga.addQuery('guide.sys_id', tour.tourId);\n  ga.addAggregate('count(distinct', 'window');\n  ga.addAggregate('count', 'guide');\n  ga.groupBy('guide');\n  ga.query();\n  var rowCount = ga.getRowCount();\n  if(rowCount==0){\n    tour.pageCount = 1;\n    tour.stepCount = 0;\n  }else if(rowCount >0 && ga.next()){\n        tour.pageCount = ga.getAggregate('count(distinct', 'window').toString();\n        tour.stepCount = ga.getAggregate('count', 'guide').toString();\n  }\n  return tour;\n}\n\nvar computedData = {count: data.length, data: data };\nanswer = new JSON().encode(computedData);\n","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"427bafb304352210559073c06a02f78b","definition_id":"DEFN1000606","sys_updated_by":"system","exec_time_threshold":"5000","sys_created_on":"2025-06-05 05:25:52","name":"gtd_tour_details","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Number of Knowledge articles created from Case","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:10:38","kb_article_url":"","sys_tags":"","version":"","script":"var articles = 0;\nif (GlideTableDescriptor.isValid('kb_knowledge') && GlideTableDescriptor.isValid('sn_customerservice_case')) {\n  var count = new GlideAggregate('kb_knowledge');\n  count.addJoinQuery('sn_customerservice_case', 'source', 'sys_id');\n  count.addNotNullQuery('source');\n  count.addAggregate('COUNT');\n  count.query();\n  if(count.next())\n       articles = count.getAggregate('COUNT');\n}\nanswer=articles;\n","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"43f7ebff04b12210559073c06a02f70e","definition_id":"DEFN1000922","sys_updated_by":"system","exec_time_threshold":"100","sys_created_on":"2025-06-05 05:10:38","name":"ArticleFromCase","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Count of licensed users with access to 201-4000 custom tables","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:18:54","kb_article_url":"","sys_tags":"","version":"","script":"answer = SNC.UACTScriptUtils.getUserCTAccessCount(201, 4000);","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"44e9a7fb04f12210559073c06a02f76d","definition_id":"DEFN1001451","sys_updated_by":"system","exec_time_threshold":"500","sys_created_on":"2025-06-05 05:18:54","name":"Monthly Count of all users with access to [201- 4000] tables\n\t\t\tunder Enterprise SKU","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Automated Test Framework (ATF): Counts the number of active Workspace form steps","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:17:20","kb_article_url":"","sys_tags":"","version":"","script":"var ga = new GlideAggregate('sys_atf_step');\nga.addActiveQuery();\nga.addQuery('step_config.category', '3c5c4dc20b202200a8d7a12cf6673a95');\nga.query();\nvar numSteps = 0;\nwhile (ga.next()) {\n    if (ga.inputs.form_ui && ga.inputs.form_ui != 'standard_ui')\n        numSteps += 1;\n}\n\nanswer = numSteps;","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"4589e37b04f12210559073c06a02f79b","definition_id":"DEFN1003693","sys_updated_by":"system","exec_time_threshold":"10000","sys_created_on":"2025-06-05 05:17:20","name":"Automated Test Framework (ATF): Counts the number of active Workspace form steps","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Gets the fraction of articles approved after being submitted for review.","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:10:38","kb_article_url":"","sys_tags":"","version":"","script":"var gr = new GlideAggregate('kb_knowledge');\ngr.addAggregate('COUNT');\nif(new SNC.KnowledgeHelper().isVersioningEnabled())\n\tgr.addEncodedQuery('sys_class_name!=kb_knowledge_block^workflow_state=published^ORworkflow_state=review^sys_updated_onONLast 30 days@javascript:gs.beginningOfLast30Days()@javascript:gs.endOfLast30Days()^active=true^NQworkflow_state=draft^version.versionNOT LIKE.01^ORversion.versionNOT LIKE.02^sys_updated_onONLast 30 days@javascript:gs.beginningOfLast30Days()@javascript:gs.endOfLast30Days()^active=true');\nelse\n    gr.addEncodedQuery('sys_class_name!=kb_knowledge_block^workflow_state=published^ORworkflow_state=review^sys_updated_onONLast 30 days@javascript:gs.beginningOfLast30Days()@javascript:gs.endOfLast30Days()^active=true');\ngr.query();\nvar count1;\nif(gr.next())\n    count1=gr.getAggregate('COUNT');\nelse \n\tcount1=0;\n\ngr = new GlideAggregate('kb_knowledge');\ngr.addAggregate('COUNT');\ngr.addEncodedQuery('sys_class_name!=kb_knowledge_block^workflow_state=published^sys_updated_onONLast 30 days@javascript:gs.beginningOfLast30Days()@javascript:gs.endOfLast30Days()^active=true');\ngr.query();\nvar count2;\nif(gr.next())\n    count2=gr.getAggregate('COUNT');\nelse\n\tcount2=0;\n\nif(count1===0)\n\tanswer = 0;\nelse\n\tanswer = count2/count1;","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"47f7ebff04b12210559073c06a02f70c","definition_id":"DEFN1000915","sys_updated_by":"system","exec_time_threshold":"100","sys_created_on":"2025-06-05 05:10:38","name":"Fraction of article published after being reviewed","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Count of licensed users with access to 26-50 custom tables","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:18:54","kb_article_url":"","sys_tags":"","version":"","script":"answer = SNC.UACTScriptUtils.getUserCTAccessCount(26, 50);","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"48e9a7fb04f12210559073c06a02f770","definition_id":"DEFN1001449","sys_updated_by":"system","exec_time_threshold":"500","sys_created_on":"2025-06-05 05:18:54","name":"Monthly Count of all users with access to [26 - 50] tables under\n\t\t\tStandard SKU","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"\r\nTables mapped per application: This can be achieved by adding JSON breakdown of counts per app on the total mapped tables count","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:18:54","kb_article_url":"","sys_tags":"","version":"","script":"\n\t\t\tvar appTables = new GlideAggregate('ua_custom_table_inventory');\nappTables.addAggregate('COUNT');\nappTables.groupBy('app');\nappTables.query();\nvar data = {}, count = 0;\nwhile (appTables.next()) {\n   var app = appTables.app.getDisplayValue();\n   if(!app)\n      app = \"empty\";\n   data[app] = appTables.getAggregate('COUNT');\n   count += parseInt(appTables.getAggregate('COUNT'));\n}\nvar computedData = {count: count, data : data };\nanswer = new JSON().encode(computedData);","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"48e9a7fb04f12210559073c06a02f771","definition_id":"DEFN1000855","sys_updated_by":"system","exec_time_threshold":"100","sys_created_on":"2025-06-05 05:18:54","name":"Total mapped custom tables per application","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Average of highest click rank where record has non zero click rank.","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:10:38","kb_article_url":"","sys_tags":"","version":"","script":"var agg = new GlideAggregate('ts_query_kb');\nagg.addEncodedQuery('top_click_rankISNOTEMPTY^sys_created_on>=javascript:gs.beginningOfLast30Days()');\nagg.addAggregate('AVG', 'top_click_rank');\nagg.setGroup(false);\nagg.query();\nvar avg = 0;\nif(agg.next()){\n\tif(!gs.nil(agg.getAggregate('AVG', 'top_click_rank')))\n\t\tavg = agg.getAggregate('AVG', 'top_click_rank');\n}\nanswer = avg;","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"4bf7ebff04b12210559073c06a02f711","definition_id":"DEFN1000916","sys_updated_by":"system","exec_time_threshold":"100","sys_created_on":"2025-06-05 05:10:38","name":"Average of highest click rank","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"fraction of published articles, with version >1","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:10:38","kb_article_url":"","sys_tags":"","version":"","script":"var versioningEnabled = new SNC.KnowledgeHelper().isVersioningEnabled();\nif(versioningEnabled){\nvar gr = new GlideAggregate('kb_knowledge');\ngr.addAggregate('COUNT');\ngr.addEncodedQuery('sys_class_name!=kb_knowledge_block^workflow_state=published^version.version>=2.0^active=true');\ngr.query();\nvar count1;\nif(gr.next())\n    count1 = gr.getAggregate('COUNT');\nelse \n\tcount1 = 0;\n\ngr = new GlideAggregate('kb_knowledge');\ngr.addAggregate('COUNT');\ngr.addEncodedQuery('sys_class_name!=kb_knowledge_block^workflow_state=published^active=true');\ngr.query();\nvar count2;\nif(gr.next())\n    count2 = gr.getAggregate('COUNT');\n\tif(count2 == 0)\n\t\tanswer = 0;\n\telse\n\t\tanswer = count1/count2;\n}\nelse \n\tanswer = 0;","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"4ff7ebff04b12210559073c06a02f70f","definition_id":"DEFN1000908","sys_updated_by":"system","exec_time_threshold":"100","sys_created_on":"2025-06-05 05:10:38","name":"fraction of published articles, with version >1","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"ITSM Only Change & ChangeTasks in last 30 days\n\t\t","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 05:07:43","kb_article_url":"","sys_tags":"","version":"","script":"/** ITSM Change & ChangeTasks in last 30 days\n* CSM CHGs and CHG tasks daily: DEFN1003914\n* ITSM CHGs Daily: DEFN1000504\n* ITSM CHG tasks Daily: DEFN1003906*/\n\nanswer = getTotalITSMChgs();\n\nfunction getTotalITSMChgs() {\n\t\n\tvar csmChgDefn = 'DEFN1003914';\n\tvar chgDefn = 'DEFN1000504';\n\tvar chgTaskDefn = 'DEFN1003906';\n\n\tvar csmTotal = getAggCountLast30Days(csmChgDefn);\n\tvar chgTotal = getAggCountLast30Days(chgDefn);\n\tvar chgTaskTotal = getAggCountLast30Days(chgTaskDefn);\n\t\n\treturn (parseInt(chgTotal) + parseInt(chgTaskTotal) - parseInt(csmTotal));\n}\n\nfunction getAggCountLast30Days(defId) {\n\t\n\tif (gs.nil(defId)) return 0;\n\t\n\tvar encQuery = gs.getMessage(\"definition_id={0}^time_stampBETWEENjavascript:gs.beginningOfLast30Days()@javascript:gs.endOfLast30Days()\", defId);\n\tvar ga = new GlideAggregate(\"usageanalytics_count\");\n\t\tga.addEncodedQuery(encQuery);\n\t\tga.addAggregate(\"SUM\", \"count\");\n\t\tga.setGroup(false);\n\t\tga.query();\n\t\twhile(ga.next()) {\n\t\t\treturn ga.getAggregate(\"SUM\", \"count\");\n\t\t}\n\t\n\treturn 0;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"5057afbb04b12210559073c06a02f705","definition_id":"DEFN1003930","sys_updated_by":"system","exec_time_threshold":"100","sys_created_on":"2025-06-05 05:07:43","name":"ITSM Only Change & ChangeTasks in last 30 days","sys_created_by":"system"},{"definition_type":"","count_type":"Licensing","sys_mod_count":"0","active":"true","description":"Count of custom tables that extend sm_task or sm_order","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 04:55:17","kb_article_url":"","sys_tags":"","version":"","script":"// Count the number of custom(u_*) tables\n// that extend service creator tables (service_task)\nvar cnt = 0;\nvar gr = new GlideRecord(\"sys_db_object\");\ngr.addQuery(\"name\", \"STARTSWITH\", \"u_\");\ngr.query();\nwhile(gr.next()) {\n\tvar tblName = gr.name;\n\tvar baseTbls = GlideDBObjectManager.getTables(tblName);\n\tif (baseTbls.indexOf('sm_task') >= 0 || baseTbls.indexOf('sm_order') >= 0)\n\t\tcnt++;\n}\nanswer = cnt;","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"5274e7fb04312210559073c06a02f718","definition_id":"DEF1000078","sys_updated_by":"system","exec_time_threshold":"","sys_created_on":"2025-06-05 04:55:17","name":"SMTableExtensions","sys_created_by":"system"},{"definition_type":"","count_type":"Licensing","sys_mod_count":"0","active":"true","description":"Count of store applications","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 04:55:17","kb_article_url":"","sys_tags":"","version":"","script":"answer = getStoreApplications();\n\n/*\n* Count the number of records in sys_store_app\n* Then exclude the sys_store_app records that have same vendor prefix as those were developed custom apps that were shared to other instances via Make App Available\n*/\nfunction getStoreApplications() {\n    var storeApps = -1;\n\tvar prefix = 'x_';\n\tvar prefixSeperator = '_';\n\n\tif (!GlideTableDescriptor.isValid('sys_store_app') )\n\t\treturn storeApps;\n\n\t//count total records in sys_store_app\n\tvar gr = new GlideAggregate('sys_store_app');\n\tgr.addAggregate('COUNT');\n\tgr.query();\n\n\tif (gr.next())\n\t\tstoreApps = parseInt(gr.getAggregate('COUNT'));\n\n\t//Get all service now apps - check the scope as well as the vendor\n\tvar snApps = 0;\n\tgr = new GlideAggregate('sys_store_app');\n\tgr.addQuery('scope', 'STARTSWITH', 'sn_').addOrCondition('scope', 'STARTSWITH', 'x_snc_').addOrCondition('vendor', 'ServiceNow');\n\tgr.addAggregate('COUNT');\n\tgr.query();\n\tif (gr.next())\n\t\tsnApps = parseInt(gr.getAggregate('COUNT'));\n\n\tstoreApps = storeApps - snApps;\n\n\tvar companyCode = gs.getProperty('glide.appcreator.company.code');\n\tif (GlideStringUtil.nil(companyCode))\n\t\treturn storeApps;\n\n\tvar customAppsShared = 0;\n\tvar vendorPrefix = prefix + companyCode + prefixSeperator;\n\tgr = new GlideAggregate('sys_store_app');\n\tgr.addQuery('scope', 'STARTSWITH', vendorPrefix);\n\tgr.addAggregate('COUNT');\n\tgr.query();\n\n\tif (gr.next())\n\t\tcustomAppsShared = parseInt(gr.getAggregate('COUNT'));\n\tstoreApps = storeApps - customAppsShared;\n\n    return storeApps;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"5274e7fb04312210559073c06a02f71b","definition_id":"DEF1000062.1","sys_updated_by":"system","exec_time_threshold":"","sys_created_on":"2025-06-05 04:55:17","name":"GetStoreApplications","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Returns a JSON with total number of skipped predictions, skipped predictions per template type, skipped predictions per template record, and skipped predictions per solution definition","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 04:56:11","kb_article_url":"","sys_tags":"","version":"","script":"answer = JSON.stringify(skippedPredictionsPerTemplate());\n\nfunction skippedPredictionsPerTemplate() {\n\tif (!haveRequiredTables())\n\t\treturn 0;\n\n\tvar obj = {};\n\n\t// Total skipped prediction count\n\tvar count = 0;\n\tvar ga = new GlideAggregate('ml_predictor_results');\n\tga.addAggregate('COUNT');\n\tga.addQuery('skipped', true);\n\tga.addQuery('sys_created_on', '>=', gs.daysAgo(1));\n\tga.query();\n\tif (ga.next()) {\n\t\tcount = ga.getAggregate('COUNT');\n\t}\n\tobj.count = count;\n\n\t// Skipped prediction per template type\n\tvar solution_capability = [];\n\tga = new GlideAggregate('ml_predictor_results');\n\tga.addAggregate('COUNT', 'solution.solution_definition.trainer.name');\n\tga.addQuery('skipped', true);\n\tga.addQuery('sys_created_on', '>=', gs.daysAgo(1));\n\tga.query();\n\twhile (ga.next()) {\n\t\tvar capability = {};\n\t\tcapability.count = ga.getAggregate('COUNT', 'solution.solution_definition.trainer.name');\n\t\tcapability.capability = ga.getValue('solution.solution_definition.trainer.name');\n\t\tsolution_capability.push(capability);\n\t}\n\tobj.solution_capability = solution_capability;\n\n\t// Skipped prediction per template record\n\tvar solution_template = [];\n\tga = new GlideAggregate('ml_predictor_results');\n\tga.addAggregate('COUNT', 'solution.solution_definition.trainer');\n\tga.addQuery('skipped', true);\n\tga.addQuery('sys_created_on', '>=', gs.daysAgo(1));\n\tga.query();\n\twhile (ga.next()) {\n\t\tvar template = {};\n\t\tvar gr = new GlideRecord('ml_trainer_definition');\n\t\tif (!gr.get(ga.getValue('solution.solution_definition.trainer')))\n\t\t\tcontinue;\n\n\t\ttemplate.count = ga.getAggregate('COUNT', 'solution.solution_definition.trainer');\n\t\ttemplate.capability = gr.getValue('name');\n\t\ttemplate.label = gr.getValue('label');\n\t\ttemplate.version = gr.getValue('version');\n\t\tsolution_template.push(template);\n\t}\n\tobj.solution_template = solution_template;\n\n\t// Skipped prediction per solution definition record\n\tvar solution_definition = [];\n   \tga = new GlideAggregate('ml_predictor_results');\n   \tga.addAggregate('COUNT', 'solution.solution_definition');\n   \tga.addQuery('skipped', true);\n\tga.addQuery('sys_created_on', '>=', gs.daysAgo(1));\n\tga.query();\n\twhile (ga.next()) {\n\t\tvar definition = {};\n\t\tvar gr = new GlideRecord('ml_solution_definition');\n\t\tif (!gr.get(ga.getValue('solution.solution_definition')))\n\t\t\tcontinue;\n\n\t\tdefinition.count = ga.getAggregate('COUNT', 'solution.solution_definition');\n\t\tdefinition.name = gr.getValue('solution_name');\n\t\tdefinition.label = gr.getValue('solution_label');\n\t\tsolution_definition.push(definition);\n    }\n    obj.solution_definition = solution_definition;\n\n\treturn obj;\n}\n\nfunction haveRequiredTables() {\n\treturn GlideTableDescriptor.isValid('ml_predictor_results') && GlideTableDescriptor.isValid('ml_solution') && GlideTableDescriptor.isValid('ml_solution_definition') && GlideTableDescriptor.isValid('ml_trainer_definition');\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"53a4e37f04312210559073c06a02f7ad","definition_id":"DEF1000397","sys_updated_by":"system","exec_time_threshold":"200","sys_created_on":"2025-06-05 04:56:11","name":"SkippedPredictionsPerTemplate","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Average # of messages per collab chat discussion in last 30 days","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 06:08:21","kb_article_url":"","sys_tags":"","version":"","script":"if (!GlideTableDescriptor.isValid('sys_cs_collab_message')) {\n\tanswer = 0;\n} else {\n\tvar gr = new GlideAggregate('sys_cs_collab_message');\n\tgr.addEncodedQuery('sys_created_onONLast 30 days@javascript:gs.beginningOfLast30Days()@javascript:gs.endOfLast30Days()');\n\tgr.groupBy('collab_chat');\n\tgr.addAggregate('COUNT');  \n\tgr.query();\nif (!gr.hasNext()) {\n\tanswer = 0;\n} else {\n\tvar sum = 0;\n\twhile(gr.next()) {\n\t\tsum += parseInt(gr.getAggregate('COUNT'));\n\t}\n\tanswer = sum / gr.getRowCount();\n}\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"5435737b04b52210559073c06a02f730","definition_id":"DEFN1006670","sys_updated_by":"system","exec_time_threshold":"10000","sys_created_on":"2025-06-05 06:08:21","name":"getAvgNumOfMessagesPerChat","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Returns a JSON with total number of cancelled solutions, cancelled solutions per template type, and cancelled solutions per template record","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 04:56:11","kb_article_url":"","sys_tags":"","version":"","script":"answer = JSON.stringify(cancelledSolutionsPerTemplate());\n\nfunction cancelledSolutionsPerTemplate() {\n\tif (!haveRequiredTables())\n\t\treturn 0;\n\n\tvar obj = {};\n\n\t// Total cancelled solution count\n\tvar count = 0;\n\tvar ga = new GlideAggregate('ml_solution');\n\tga.addAggregate('COUNT');\n\tga.addQuery('state', 'solution_cancelled');\n\tga.addQuery('sys_created_on', '>=', gs.daysAgo(1));\n\tga.query();\n\tif (ga.next()) {\n\t\tcount = ga.getAggregate('COUNT');\n\t}\n\tobj.count = count;\n\n\t// Cancelled solutions per template type\n\tvar solution_capability = [];\n\tga = new GlideAggregate('ml_solution');\n\tga.addAggregate('COUNT', 'solution_definition.trainer.name');\n\tga.addQuery('state', 'solution_cancelled');\n\tga.addQuery('sys_created_on', '>=', gs.daysAgo(1));\n\tga.query();\n\twhile (ga.next()) {\n\t\tvar capability = {};\n\t\tcapability.count = ga.getAggregate('COUNT', 'solution_definition.trainer.name');\n\t\tcapability.capability = ga.getValue('solution_definition.trainer.name');\n\t\tsolution_capability.push(capability);\n\t}\n\tobj.solution_capability = solution_capability;\n\n\t// Cancelled solutions per template record\n\tvar solution_template = [];\n\tga = new GlideAggregate('ml_solution');\n\tga.addAggregate('COUNT', 'solution_definition.trainer');\n\tga.addQuery('state', 'solution_cancelled');\n\tga.addQuery('sys_created_on', '>=', gs.daysAgo(1));\n\tga.query();\n\twhile (ga.next()) {\n\t\tvar template = {};\n\t\tvar gr = new GlideRecord('ml_trainer_definition');\n\t\tif (!gr.get(ga.getValue('solution_definition.trainer')))\n\t\t\tcontinue;\n\n\t\ttemplate.count = ga.getAggregate('COUNT', 'solution_definition.trainer');\n\t\ttemplate.capability = gr.getValue('name');\n\t\ttemplate.label = gr.getValue('label');\n\t\ttemplate.version = gr.getValue('version');\n\t\tsolution_template.push(template);\n\t}\n\tobj.solution_template = solution_template;\n\n\treturn obj;\n}\n\nfunction haveRequiredTables() {\n\treturn GlideTableDescriptor.isValid('ml_solution') && GlideTableDescriptor.isValid('ml_solution_definition') && GlideTableDescriptor.isValid('ml_trainer_definition');\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"57a4e37f04312210559073c06a02f7aa","definition_id":"DEF1000394","sys_updated_by":"system","exec_time_threshold":"200","sys_created_on":"2025-06-05 04:56:11","name":"CancelledSolutionsPerTemplate","sys_created_by":"system"},{"definition_type":"","count_type":"Licensing","sys_mod_count":"0","active":"true","description":"Count of predictions made by agent intelligence per plugin per month.","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 04:56:11","kb_article_url":"","sys_tags":"","version":"","script":"answer = JSON.stringify(predictionsCountPerCapability());\n\nfunction getPredictionCountPerTable(capability){\n\tvar ga = new GlideAggregate('ml_predictor_results');\n\tga.addAggregate('COUNT', 'predicted_table');\n\tga.addQuery('sys_created_on', '>=', gs.beginningOfLastMonth());\n\tga.addQuery('sys_created_on', '<=', gs.endOfLastMonth());\n\tga.addQuery('solution_type', '=', capability);\n\tga.query();\n\t\n\tvar table_pred_freq_array = [];\n\twhile (ga.next()) {\n\t    var table_pred_freq = {};\n\t\ttable_pred_freq.count = parseInt(ga.getAggregate('COUNT', 'predicted_table'));\n\t\ttable_pred_freq.predicted_table = ga.getValue('predicted_table');\n\t\ttable_pred_freq_array.push(table_pred_freq);\n\t}\n\t\n\treturn table_pred_freq_array;\n}\n\nfunction predictionsCountPerPlugin(capability) {\n\tvar plugin_pred_freq_details = {};\n\tplugin_pred_freq_details.count = 0;\n\t\n\tvar table_pred_freq_array = getPredictionCountPerTable(capability);\n\t\t\n\tfor (var table_freq_index in table_pred_freq_array) {\n\t\t\n\t\tvar table_freq_detail = table_pred_freq_array[table_freq_index];\n\t\t\n\t\tvar table_freq_detail_count = table_freq_detail['count'];\n\t\tvar predicted_table_name = table_freq_detail['predicted_table'];\n\t\tplugin_pred_freq_details.count += parseInt(table_freq_detail_count);\n\t\n\t\t// get plugin source name\n\t\tvar package_source = getPluginSourceName(predicted_table_name);\t\n\t\t\n\t\tvar table_details = {};\n\t\ttable_details.table_name = predicted_table_name;\n\t\ttable_details.count = table_freq_detail_count;\n\n\t\t//initialize the object\n\t\tif (!(package_source in plugin_pred_freq_details)) {\n\t\t\tplugin_pred_freq_details[package_source] = {'table_details' : [], 'count' : 0};\n\t\t}\n\n\t\t//prediction count per table\n\t\tplugin_pred_freq_details[package_source]['table_details'].push(table_details);\n\n\t\t//plugin level prediction count sum\n\t\tplugin_pred_freq_details[package_source]['count'] += table_freq_detail_count;\t\t\n\t}\n\t\n\treturn plugin_pred_freq_details;\n}\n\nfunction getPluginSourceName(predicted_table_name) {\n\tvar gr = new GlideRecord(\"sys_db_object\");\n\tgr.addQuery(\"name\", predicted_table_name);\n\tgr.query();\n\treturn gr.next() ? String(gr.sys_package.source) : '';\n}\n\nfunction hasRequiredTableAndColumns() {\n    return GlideTableDescriptor.isValid('ml_predictor_results') && \n        GlideTableDescriptor.fieldExists('ml_predictor_results', 'sys_created_on') &&\n        GlideTableDescriptor.fieldExists('ml_predictor_results', 'predicted_table') &&\n\t\tGlideTableDescriptor.fieldExists('ml_predictor_results', 'solution_type') &&\n\t\tGlideTableDescriptor.isValid('sys_db_object') && \n        GlideTableDescriptor.fieldExists('sys_db_object', 'name') \n\t\t;\n}\n\nfunction predictionsCountPerCapability(){\n\tvar cap_pred_freq_details = {};\n\tcap_pred_freq_details.count = 0;\n\t\n\tif (!hasRequiredTableAndColumns())\n\t\treturn cap_pred_freq_details;\n\t\n\tvar ga = new GlideAggregate('ml_predictor_results');\n\tga.addAggregate('COUNT', 'solution_type');\n\tga.addQuery('sys_created_on', '>=', gs.beginningOfLastMonth());\n\tga.addQuery('sys_created_on', '<=', gs.endOfLastMonth());\n\tga.query();\n\t\n\twhile (ga.next()) {\n\t\tvar capability = ga.getValue('solution_type');\n\t\tcap_pred_freq_details[capability] = predictionsCountPerPlugin(capability);\n\t\tcap_pred_freq_details.count += parseInt(ga.getAggregate('COUNT', 'solution_type'));\n\t}\n\t\n\treturn cap_pred_freq_details;\n\t\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"57a4e37f04312210559073c06a02f7ab","definition_id":"DEFN1000806","sys_updated_by":"system","exec_time_threshold":"500","sys_created_on":"2025-06-05 04:56:11","name":"Monthly Predictions per Plugin","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Automated Test Framework (ATF): Counts the number of active list steps","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:17:33","kb_article_url":"","sys_tags":"","version":"","script":"var ga = new GlideAggregate('sys_atf_step');\nga.addActiveQuery();\nga.addQuery('step_config.category', 'bc15fe46e72a3300b5646ea8c2f6a9bf');\nga.addQuery('step_config', '!=', '8b84e5e837b1030064a52f3c8e41f170');\nga.query();\nvar numSteps = 0;\nwhile (ga.next()) {\n    if (ga.inputs.list_type == 'list')\n        numSteps += 1;\n}\n\nanswer = numSteps;","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"58992b7b04f12210559073c06a02f70b","definition_id":"DEFN1003694","sys_updated_by":"system","exec_time_threshold":"10000","sys_created_on":"2025-06-05 05:17:33","name":"Automated Test Framework (ATF): Counts the number of active list steps","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Time to Relief for P1 INTs closed yesterday (in Minutes)","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 04:55:17","kb_article_url":"","sys_tags":"","version":"","script":"var totalTTRSecs = 0;\nvar totalTTRMins = 0;\n\nfunction getTTRForP1INTs() {\n\n\tvar incidentTbl = \"incident\";\n\n\tif(!GlideTableDescriptor.isValid(incidentTbl)) \n\t\treturn 0;\n\t\t\n\tvar grClosed = new GlideRecord(incidentTbl);\n\t//All INTs closed yesterday\n\tgrClosed.addEncodedQuery(\"priority=1^closed_atONYesterday@javascript:gs.daysAgoStart(1)@javascript:gs.daysAgoEnd(1)^closed_atISNOTEMPTY\");\n\tgrClosed.query();\n\t\n\twhile (grClosed.next()) {\n\t\t\n\t\tvar opened = grClosed.getValue(\"opened_at\");\n        var closed = grClosed.getValue(\"closed_at\");\n        var ttr = gs.dateDiff(opened, closed, true);\n\t\t\n\t\ttotalTTRSecs += parseInt(ttr);\t\n\t\ttotalTTRMins += parseInt(ttr)/60;\n\t}\n\t\n\treturn Math.round(totalTTRMins);\n}\n\nanswer = '{\"count\": \"' + getTTRForP1INTs() + '\",\"TotalTTR(Seconds)\":\"' + totalTTRSecs + '\"}';","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"5a74e7fb04312210559073c06a02f71e","definition_id":"SMBEN100011","sys_updated_by":"system","exec_time_threshold":"","sys_created_on":"2025-06-05 04:55:17","name":"TTR For P1 INTs closed yesterday  - Minutes","sys_created_by":"system"},{"definition_type":"","count_type":"Licensing","sys_mod_count":"0","active":"true","description":"Count of google map page hits during the current month - as of yesterday","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 04:55:18","kb_article_url":"","sys_tags":"","version":"","script":"// Aggregate the access counts on google map usage records this month across all users.\n// This gets persisted daily,so on any day of the month, you see the cumulative total of the map page hits\n// on the month, until that point\n\nvar nHits = 0;\n\nif (GlideTableDescriptor.isValid('ua_app_usage')) {\n\t// First calculate the current month timestamp\n\tvar now = new Date();\n\tvar curMonth = now.getMonth() + 1;\n\tvar tstamp = now.getFullYear() + '-' + (parseInt(curMonth) < 10 ? '0' + curMonth : curMonth);\n\n\t// Now aggregate the data across the current month and get the total map page access count\n\tvar ga = new GlideAggregate('ua_app_usage');\n\tga.groupBy('time_stamp');\n\tga.addQuery('app_name', 'Google Maps');\n\tga.addQuery('app_type', 'ServiceNow');\n\tga.addQuery('time_stamp', tstamp);\n\tga.addAggregate('SUM', 'access_count');\n\tga.query();\n\n\tif (ga.getRowCount() == 1) {\n\t\tga.next();\n\t\tnHits = ga.getAggregate('SUM', 'access_count');\n\t}\n}\n\n// gs.log('Number of Google Map page hits : ' + nHits);\nanswer = nHits;\n","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"5a74e7fb04312210559073c06a02f763","definition_id":"DEF1000072","sys_updated_by":"system","exec_time_threshold":"","sys_created_on":"2025-06-05 04:55:18","name":"GoogleMapPageHits","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Returns a JSON with total number of solution definitions, solution definitions per template type, and solution definitions per template record","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 04:56:11","kb_article_url":"","sys_tags":"","version":"","script":"answer = JSON.stringify(solutionDefinitionsPerTemplate());\n\nfunction solutionDefinitionsPerTemplate() {\n\tif (!haveRequiredTables())\n\t\treturn 0;\n\n\tvar obj = {};\n\n\t// Total solution definition count\n\tvar count = 0;\n\tvar ga = new GlideAggregate('ml_capability_definition_base');\n\tga.addAggregate('COUNT');\n\tga.addQuery('sys_created_on', '>=', gs.daysAgo(1));\n\tga.query();\n\tif (ga.next()) {\n\t\tcount = ga.getAggregate('COUNT');\n\t}\n\tobj.count = count;\n\n\t// Solution definitions per template type\n\tvar solution_capability = [];\n\tga = new GlideAggregate('ml_capability_definition_base');\n\tga.addAggregate('COUNT', 'capability.value');\n\tga.addQuery('sys_created_on', '>=', gs.daysAgo(1));\n\tga.query();\n\twhile (ga.next()) {\n\t\tvar capability = {};\n\t\tcapability.count = ga.getAggregate('COUNT', 'capability.value');\n\t\tcapability.capability = ga.getValue('capability.value');\n\t\tsolution_capability.push(capability);\n\t}\n\tobj.solution_capability = solution_capability;\n\n\treturn obj;\n}\n\nfunction haveRequiredTables() {\n\treturn GlideTableDescriptor.isValid('ml_capability_definition_base');\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"5ba4e37f04312210559073c06a02f7a8","definition_id":"DEF1000390","sys_updated_by":"system","exec_time_threshold":"200","sys_created_on":"2025-06-05 04:56:11","name":"SolutionDefinitionsPerTemplate","sys_created_by":"system"},{"definition_type":"production","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Get the count of controllers (Controller, UI controller) from sys_ux_macroponent table which has field type collection in its properties.","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 06:20:17","kb_article_url":"","sys_tags":"","version":"0","script":"\n            // Controller & UI controller\n\nvar collectionPropertyUsageByController = 0;\n\nvar gr = new GlideRecord('sys_ux_macroponent');\ngr.addEncodedQuery('categoryINcontroller,ui_controller^props!=[]^props!=[ ]');\ngr.query();\n\nwhile (gr.next()) {\n\n   var properties;\n    try{\n\t\tproperties = JSON.parse(gr.props);\n\t}\n\tcatch(err){\n\t\tgs.error(gr.name);\n\t\tgs.error(JSON.stringify(err));\n\t\tproperties = [];\n\t}\n\n    for(var i=0;i<properties.length; i++){\n        if(properties[i].fieldType === 'collection'){\n            collectionPropertyUsageByController++;\n            break;\n        }\n    }\n}\n\nanswer = collectionPropertyUsageByController;","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"5be73b3304f52210559073c06a02f761","definition_id":"DEFN1008296","sys_updated_by":"system","exec_time_threshold":"90000","sys_created_on":"2025-06-05 06:20:17","name":"collection property usage by controller","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Knowledge Base - Articles expiring in 2 weeks\t\t","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 04:55:17","kb_article_url":"","sys_tags":"","version":"","script":"if (GlideTableDescriptor.isValid('kb_knowledge')) {\n\t\n\tvar today = gs.daysAgo(0);\n\tvar twoWeeksFromToday = gs.daysAgo(-14);\n\tvar gr = new GlideRecord('kb_knowledge');\n\tgr.addQuery('valid_to', '>', today);\n\tgr.addQuery('valid_to', '<=', twoWeeksFromToday);\n\tgr.query();\n\tanswer = gr.getRowCount();\n} else {\n\tanswer = 0;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"5e74e7fb04312210559073c06a02f715","definition_id":"DEF1000083","sys_updated_by":"system","exec_time_threshold":"","sys_created_on":"2025-06-05 04:55:17","name":"kb_expiring_articles","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"User Language preferences on an instance. This script returns the total number of active users on the instance, along with the #users with language preference set, from the sys_user_preference table.","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 04:55:17","kb_article_url":"","sys_tags":"","version":"","script":"answer = getUserCntPerLang();\n\nfunction getUserCntPerLang () {\n\t\n\tvar langData = {};\n\tvar SYS_USER = \"sys_user\";\n\tvar SYS_PROP = \"sys_properties\";\n\tvar SYS_LANG = \"sys_language\";\n\tvar PREF_LANG = \"preferred_language\";\n\tvar PROP_NAME = \"glide.sys.language\";\n\tvar ID = \"id\";\n\tvar VALUE = \"value\";\n\t\n\tvar grUser = new GlideRecord(SYS_USER); \n    grUser.addActiveQuery();\n\tgrUser.query(); \n\n\tlangData.count = grUser.getRowCount();\n\n\tvar defLang = new GlideRecord(SYS_PROP);\n\tdefLang.addQuery(\"name\", PROP_NAME);\n\tdefLang.query();\n\t\n\tif (defLang.next()) {\n\t\tvar sysDefault = defLang.getValue(VALUE);\t\t\n\t\tlangData[\"default\"] = sysDefault;\n\t} \n\n\tvar ga = new GlideAggregate(SYS_USER);\n        ga.addEncodedQuery(\"preferred_language!=^active=true\");\n        ga.addAggregate(\"COUNT\", PREF_LANG);\n        ga.query();\n\n\t\twhile(ga.next()) { \n\t\t\tvar prefLangVal = ga.getValue(PREF_LANG);\n\t\t\tif (JSUtil.notNil(prefLangVal))\n\t\t\t\tlangData[prefLangVal] = ga.getAggregate('COUNT', PREF_LANG);\n\t}\n\n\treturn (new JSON().encode(langData));\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"5e74e7fb04312210559073c06a02f728","definition_id":"DEFN1000536","sys_updated_by":"system","exec_time_threshold":"5000","sys_created_on":"2025-06-05 04:55:17","name":"User Languages","sys_created_by":"system"},{"definition_type":"production","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Return % of step completion of best practice \"Refer your ServiceNow developers to the Secure Coding Guide\"","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 06:19:00","kb_article_url":"","sys_tags":"","version":"0","script":"answer = getStepCompletionPercentage('70b165e143e37110adf71f062bb8f2ab');\n\nfunction getStepCompletionPercentage(bestPracticeId){\nvar gr = new GlideRecord('sn_vsc_best_practice_configurations');\nif (gr.get(bestPracticeId)) {\n\tif (gr.getValue('status') == 'completed') {\n\t\tvar grSA = new GlideRecord('sys_audit');\n\t\tgrSA.addEncodedQuery('tablename=sn_vsc_best_practice_configurations^fieldname=status^sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()^newvalue=completed^documentkey=' + bestPracticeId);\n\t\tgrSA.query();\n\t\tif(grSA.hasNext()) {\n\t\t\tvar stepData = new sn_vsc.SCPlaybookUtil().getBPStepData(bestPracticeId);\n\t\t\treturn Math.round((stepData.completedSteps/stepData.totalSteps)*100,2);\n\t\t}\n\t}\n}\nreturn 0;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"60a77fff04b52210559073c06a02f717","definition_id":"DEFN1008181","sys_updated_by":"system","exec_time_threshold":"150000","sys_created_on":"2025-06-05 06:19:00","name":"stepsCompleted","sys_created_by":"system"},{"definition_type":"production","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Return % of step completion of best practice \"Change the default login credentials\"","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 06:19:00","kb_article_url":"","sys_tags":"","version":"0","script":"answer = getStepCompletionPercentage('a94274f543e77110adf71f062bb8f2a0');\n\nfunction getStepCompletionPercentage(bestPracticeId){\nvar gr = new GlideRecord('sn_vsc_best_practice_configurations');\nif (gr.get(bestPracticeId)) {\n\tif (gr.getValue('status') == 'completed') {\n\t\tvar grSA = new GlideRecord('sys_audit');\n\t\tgrSA.addEncodedQuery('tablename=sn_vsc_best_practice_configurations^fieldname=status^sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()^newvalue=completed^documentkey=' + bestPracticeId);\n\t\tgrSA.query();\n\t\tif(grSA.hasNext()) {\n\t\t\tvar stepData = new sn_vsc.SCPlaybookUtil().getBPStepData(bestPracticeId);\n\t\t\treturn Math.round((stepData.completedSteps/stepData.totalSteps)*100,2);\n\t\t}\n\t}\n}\nreturn 0;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"60a77fff04b52210559073c06a02f72a","definition_id":"DEFN1008196","sys_updated_by":"system","exec_time_threshold":"150000","sys_created_on":"2025-06-05 06:19:00","name":"stepsCompleted","sys_created_by":"system"},{"definition_type":"production","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Total Number of active users of AI search in employee center per month ","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 06:13:24","kb_article_url":"","sys_tags":"","version":"0","script":"try {\n\n    var discardPortalIds = []; // some dafault Portals that we ship except SP [ observed SP record used as EC ]\n    discardPortalIds.push('26f2fffb77322300454792718a1061e5'); // MESP\n    discardPortalIds.push('0d3fa8649f131200b18a7feea57fcf7a'); // CAB WorkBench\n    discardPortalIds.push('45d6680fdb52220099f93691f0b8f5ad'); // Knowledge Portal\n    discardPortalIds.push('5ef362fa5b4132003d1c484c11f91a05'); // BenchMarks\n    discardPortalIds.push('bebfa187536a1300a699ddeeff7b1223'); // Instance Security Center\n    discardPortalIds.push('d141d4f20b4303008cd6e7ae37673a64'); // Content Publishing Demo\n    discardPortalIds.push('db57a91047001200ba13a5554ee49050'); // SP Config\n    discardPortalIds.push('fe5506d03b0203008ed00d8044efc45d'); // Service Workspace\n    discardPortalIds.push('89275a53cb13020000f8d856634c9c51'); // CSM Portals\n\n    var finalSYSID = [];\n    var finalCount = 0;\n    // Portals using Connected Content and not using OOTB SYS ID  \n    var gr = new GlideRecord(\"m2m_sp_portal_taxonomy\");\n    gr.addQuery('sp_portal', 'NOT IN', discardPortalIds);\n    gr.addQuery('sp_portal', '!=', '70cd9f3b734b13001fdae9c54cf6a72f');\n    gr.addEncodedQuery(\"taxonomyISNOTEMPTY^active=true^taxonomy.active=true\");\n    gr.query();\n    while (gr.next()) {\n        // Check if connected content exists for an taxonomy\n        var gra = new GlideAggregate(\"m2m_connected_content\");\n        if (gra.isValid()) {\n            gra.addAggregate('COUNT');\n            gra.addEncodedQuery(\"topic.taxonomy=\" + gr.getValue('taxonomy') + \"^topic.active=true\");\n            gra.query();\n            if (gra.next() && gra.getAggregate('COUNT') > 0) {\n                // Prepare the list of SYS_ID's\n                finalSYSID.push(gr.getValue('sp_portal'));\n            }\n        }\n    }\n\n    // Portals not using Taxonomy and not using OOTB SYS ID  \n    var sp_portalgr1 = new GlideRecord(\"sp_portal\");\n    sp_portalgr1.addQuery('sys_id', 'NOT IN', finalSYSID);\n    sp_portalgr1.addQuery('sys_id', '!=', '70cd9f3b734b13001fdae9c54cf6a72f');\n    sp_portalgr1.query();\n    while (sp_portalgr1.next()) {\n        // check if any of the OOTB parameters are matching then add to list\n        if (sp_portalgr1.getValue('theme') == '9b6f06d71bb8f85047582171604bcb9c' ||\n            sp_portalgr1.getValue('sp_rectangle_menu') == '493d01365368301056c1ddeeff7b1207' ||\n            sp_portalgr1.theme.header == 'd0009941eb103010ed7966d6475228c1' ||\n            (sp_portalgr1.getDisplayValue('logo').length != 0 &&\n                (sp_portalgr1.getDisplayValue('logo') == 'ba95c23323c42300fb0c949e27bf6563.iix' || sp_portalgr1.getDisplayValue('logo') == 'dacdee00ff601210860fffffffffffd6.iix')) ||\n            (sp_portalgr1.getValue('homepage') == '8c51a66b532030101865ddeeff7b120d' ||\n                sp_portalgr1.getValue('homepage') == '0c9e5ccd537030101865ddeeff7b12cb' ||\n                sp_portalgr1.getValue('homepage') == '3cd32c40c7a83110b1c6677703c26062' ||\n                sp_portalgr1.getValue('homepage') == 'b10e9a1743d431108c5d43d488b8f26b')) {\n            finalSYSID.push(sp_portalgr1.getUniqueValue());\n        }\n    }\n\n    // Portals using OOTB SYS ID\n    finalSYSID.push('70cd9f3b734b13001fdae9c54cf6a72f');\n\n    // add esc :  not OOTB SYS_ID and not in finalSYSID - track /esc portals\n    var sp_portalgr2 = new GlideRecord(\"sp_portal\");\n    sp_portalgr2.addQuery('url_suffix', 'esc');\n    sp_portalgr2.addQuery('sys_id', 'NOT IN', finalSYSID);\n    sp_portalgr2.query();\n    while (sp_portalgr2.next()) {\n        finalSYSID.push(sp_portalgr2.getUniqueValue());\n    }\n    // execute query in finalSYSID is not empty\n    if (finalSYSID.length != 0) {\n        var searchApplications = [];\n        var grPortal = new GlideRecord(\"sp_portal\");\n        grPortal.addQuery('enable_ais', true);\n        grPortal.addQuery('sys_id', 'IN', finalSYSID);\n        grPortal.query();\n        while (grPortal.next()) {\n            searchApplications.push(grPortal.getValue('search_application'));\n        }\n        var graSearchEvents = new GlideAggregate(\"sys_search_event\");\n        graSearchEvents.addQuery('application_id', 'IN', searchApplications);\n        graSearchEvents.addEncodedQuery(\"sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()\");\n        graSearchEvents.addAggregate('COUNT');\n        graSearchEvents.groupBy('sys_created_by');\n        graSearchEvents.query();\n        if (graSearchEvents.next()) {\n            finalCount = graSearchEvents.getRowCount();\n        }\n    }\n    answer = finalCount;\n}\ncatch (e) {\n    gs.info(\"script errored - \" + e.stack);\n}\n","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"6256fbfb04b52210559073c06a02f74d","definition_id":"DEFN1008132","sys_updated_by":"system","exec_time_threshold":"150000","sys_created_on":"2025-06-05 06:13:24","name":"Active users of AI Search in Employee center per month ","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Count of content type of type Knowledge linked to topics in EC taxonomy","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 06:13:24","kb_article_url":"","sys_tags":"","version":"","script":"function getTaxonomyId() {\n    var portalId = getECPortalId();\n    if (!portalId)\n        return;\n\n    var gr = new GlideRecord(\"m2m_sp_portal_taxonomy\");\n    if (!gr.isValid())\n        return;\n\n    gr.addActiveQuery();\n    gr.addQuery(\"sp_portal\", portalId);\n    gr.addQuery(\"taxonomy.active\", true);\n    gr.query();\n    while (gr.next())\n        return gr.taxonomy.toString();\n}\n\n\nfunction getECPortalId() {\n    var gr = new GlideRecord(\"sp_portal\");\n    gr.addActiveQuery();\n    gr.addQuery(\"sys_id\", \"70cd9f3b734b13001fdae9c54cf6a72f\");\n    gr.addOrCondition(\"url_suffix\", \"esc\");\n    gr.query();\n    while (gr.next())\n        return gr.sys_id.toString();\n}\n\nanswer = 0;\n\nvar gr = new GlideRecord(\"m2m_connected_content\");\nvar taxonomyId = getTaxonomyId();\nif (gr.isValid() && taxonomyId) {\n    gr.addQuery(\"content_type\", \"4c32a92153622010069addeeff7b12a3\");\n    gr.query();\n    answer = gr.getRowCount();\n}\n","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"6256fbfb04b52210559073c06a02f74e","definition_id":"DEFN1005945","sys_updated_by":"system","exec_time_threshold":"10000","sys_created_on":"2025-06-05 06:13:24","name":"taxonomyKBContentTypeCount","sys_created_by":"system"},{"definition_type":"production","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Return % of step completion of best practice \"Use the email filters feature set to deal with suspect inbound messages\"","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 06:19:00","kb_article_url":"","sys_tags":"","version":"0","script":"answer = getStepCompletionPercentage('4d62a56543e37110adf71f062bb8f2cb');\n\nfunction getStepCompletionPercentage(bestPracticeId){\nvar gr = new GlideRecord('sn_vsc_best_practice_configurations');\nif (gr.get(bestPracticeId)) {\n\tif (gr.getValue('status') == 'completed') {\n\t\tvar grSA = new GlideRecord('sys_audit');\n\t\tgrSA.addEncodedQuery('tablename=sn_vsc_best_practice_configurations^fieldname=status^sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()^newvalue=completed^documentkey=' + bestPracticeId);\n\t\tgrSA.query();\n\t\tif(grSA.hasNext()) {\n\t\t\tvar stepData = new sn_vsc.SCPlaybookUtil().getBPStepData(bestPracticeId);\n\t\t\treturn (stepData.completedSteps/stepData.totalSteps)*100;\n\t\t}\n\t}\n}\nreturn 0;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"64a77fff04b52210559073c06a02f715","definition_id":"DEFN1008174","sys_updated_by":"system","exec_time_threshold":"150000","sys_created_on":"2025-06-05 06:19:00","name":"stepsCompleted","sys_created_by":"system"},{"definition_type":"production","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Avg % of updates completed after due date","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 06:19:00","kb_article_url":"","sys_tags":"","version":"0","script":"\n\t\t\tvar totalCompleted = 0;\nvar totalCompletedAfter = 0;\nvar gr = new GlideRecord(\"sn_critical_update\");\ngr.addEncodedQuery(\"up_active=true^up_update_status=acknowledged^sys_updated_onBETWEENjavascript:gs.beginningOfYesterday()@javascript:gs.endOfToday()\");\ngr.query();\nwhile (gr.next()) {\n    var duedate = new GlideDateTime(gr.up_due_date);\n    totalCompleted++;\n    if (gr.sys_updated_on > duedate) {\n        totalCompletedAfter++;\n    }\n}\nif(totalCompleted == 0) {\n\tanswer = 0;\n} else {\n\tanswer = (totalCompletedAfter / totalCompleted) * 100;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"64a77fff04b52210559073c06a02f728","definition_id":"DEFN1008039","sys_updated_by":"system","exec_time_threshold":"90000","sys_created_on":"2025-06-05 06:19:00","name":"Avg percentage of updates completed after due date","sys_created_by":"system"},{"definition_type":"production","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Return % of step completion of best practice \"Remove the Remember Me'checkbox\"","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 06:19:00","kb_article_url":"","sys_tags":"","version":"0","script":"answer = getStepCompletionPercentage('999b531243eb7110adf71f062bb8f280');\n\nfunction getStepCompletionPercentage(bestPracticeId){\nvar gr = new GlideRecord('sn_vsc_best_practice_configurations');\nif (gr.get(bestPracticeId)) {\n\tif (gr.getValue('status') == 'completed') {\n\t\tvar grSA = new GlideRecord('sys_audit');\n\t\tgrSA.addEncodedQuery('tablename=sn_vsc_best_practice_configurations^fieldname=status^sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()^newvalue=completed^documentkey=' + bestPracticeId);\n\t\tgrSA.query();\n\t\tif(grSA.hasNext()) {\n\t\t\tvar stepData = new sn_vsc.SCPlaybookUtil().getBPStepData(bestPracticeId);\n\t\t\treturn Math.round((stepData.completedSteps/stepData.totalSteps)*100,2);\n\t\t}\n\t}\n}\nreturn 0;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"68a77fff04b52210559073c06a02f713","definition_id":"DEFN1008180","sys_updated_by":"system","exec_time_threshold":"150000","sys_created_on":"2025-06-05 06:19:00","name":"stepsCompleted","sys_created_by":"system"},{"definition_type":"production","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Return % of step completion of best practice \"Use SAML authentication\"","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 06:19:00","kb_article_url":"","sys_tags":"","version":"0","script":"answer = getStepCompletionPercentage('92b434b943e77110adf71f062bb8f236');\n\nfunction getStepCompletionPercentage(bestPracticeId){\nvar gr = new GlideRecord('sn_vsc_best_practice_configurations');\nif (gr.get(bestPracticeId)) {\n\tif (gr.getValue('status') == 'completed') {\n\t\tvar grSA = new GlideRecord('sys_audit');\n\t\tgrSA.addEncodedQuery('tablename=sn_vsc_best_practice_configurations^fieldname=status^sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()^newvalue=completed^documentkey=' + bestPracticeId);\n\t\tgrSA.query();\n\t\tif(grSA.hasNext()) {\n\t\t\tvar stepData = new sn_vsc.SCPlaybookUtil().getBPStepData(bestPracticeId);\n\t\t\treturn Math.round((stepData.completedSteps/stepData.totalSteps)*100, 2);\n\t\t}\n\t}\n}\nreturn 0;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"68a77fff04b52210559073c06a02f71a","definition_id":"DEFN1008175","sys_updated_by":"system","exec_time_threshold":"150000","sys_created_on":"2025-06-05 06:19:00","name":"stepsCompleted","sys_created_by":"system"},{"definition_type":"production","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Return % of step completion of best practice \"Restrict access to your instance from unknown IP addresses\"","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 06:19:00","kb_article_url":"","sys_tags":"","version":"0","script":"answer = getStepCompletionPercentage('5fd9b831432b7110adf71f062bb8f253');\n\nfunction getStepCompletionPercentage(bestPracticeId){\nvar gr = new GlideRecord('sn_vsc_best_practice_configurations');\nif (gr.get(bestPracticeId)) {\n\tif (gr.getValue('status') == 'completed') {\n\t\tvar grSA = new GlideRecord('sys_audit');\n\t\tgrSA.addEncodedQuery('tablename=sn_vsc_best_practice_configurations^fieldname=status^sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()^newvalue=completed^documentkey=' + bestPracticeId);\n\t\tgrSA.query();\n\t\tif(grSA.hasNext()) {\n\t\t\tvar stepData = new sn_vsc.SCPlaybookUtil().getBPStepData(bestPracticeId);\n\t\t\treturn Math.round((stepData.completedSteps/stepData.totalSteps)*100,2);\n\t\t}\n\t}\n}\nreturn 0;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"68a77fff04b52210559073c06a02f72d","definition_id":"DEFN1008179","sys_updated_by":"system","exec_time_threshold":"150000","sys_created_on":"2025-06-05 06:19:00","name":"stepsCompleted","sys_created_by":"system"},{"definition_type":"production","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Return % of step completion of best practice \"Transfer log data from the instance for archival and reference\"","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 06:19:00","kb_article_url":"","sys_tags":"","version":"0","script":"answer = getStepCompletionPercentage('f131fc7543e77110adf71f062bb8f23d');\n\nfunction getStepCompletionPercentage(bestPracticeId){\nvar gr = new GlideRecord('sn_vsc_best_practice_configurations');\nif (gr.get(bestPracticeId)) {\n\tif (gr.getValue('status') == 'completed') {\n\t\tvar grSA = new GlideRecord('sys_audit');\n\t\tgrSA.addEncodedQuery('tablename=sn_vsc_best_practice_configurations^fieldname=status^sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()^newvalue=completed^documentkey=' + bestPracticeId);\n\t\tgrSA.query();\n\t\tif(grSA.hasNext()) {\n\t\t\tvar stepData = new sn_vsc.SCPlaybookUtil().getBPStepData(bestPracticeId);\n\t\t\treturn Math.round((stepData.completedSteps/stepData.totalSteps)*100,2);\n\t\t}\n\t}\n}\nreturn 0;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"6ca77fff04b52210559073c06a02f718","definition_id":"DEFN1008178","sys_updated_by":"system","exec_time_threshold":"90000","sys_created_on":"2025-06-05 06:19:00","name":"stepsCompleted","sys_created_by":"system"},{"definition_type":"production","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Return % of step completion of Best practice \"Disable browser SQL messages\"","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 06:19:00","kb_article_url":"","sys_tags":"","version":"0","script":"answer = getStepCompletionPercentage('46c1b8b543e77110adf71f062bb8f26b');\n\nfunction getStepCompletionPercentage(bestPracticeId){\nvar gr = new GlideRecord('sn_vsc_best_practice_configurations');\nif (gr.get(bestPracticeId)) {\n\tif (gr.getValue('status') == 'completed') {\n\t\tvar grSA = new GlideRecord('sys_audit');\n\t\tgrSA.addEncodedQuery('tablename=sn_vsc_best_practice_configurations^fieldname=status^sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()^newvalue=completed^documentkey=' + bestPracticeId);\n\t\tgrSA.query();\n\t\tif(grSA.hasNext()) {\n\t\t\tvar stepData = new sn_vsc.SCPlaybookUtil().getBPStepData(bestPracticeId);\n\t\t\treturn Math.round((stepData.completedSteps/stepData.totalSteps)*100,2);\n\t\t}\n\t}\n}\nreturn 0;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"6ca77fff04b52210559073c06a02f72b","definition_id":"DEFN1008191","sys_updated_by":"system","exec_time_threshold":"150000","sys_created_on":"2025-06-05 06:19:00","name":"stepsCompleted","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Retrieves active benchmark indicators","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:28:17","kb_article_url":"","sys_tags":"","version":"","script":"function getActiveIndicators () {\n\tvar indicatorGR = new GlideRecord('sn_bm_common_indicator');\n\tindicatorGR.addActiveQuery();\n\tindicatorGR.query();\n\tvar activeIndicators = [];\n\twhile(indicatorGR.next()) {\n\t\tactiveIndicators.push(indicatorGR.getValue('sys_id'));\n\t}\n\treturn activeIndicators;\n}\nvar activeIndicators = getActiveIndicators();\nanswer = '{\"active_indicators\" : \"'+activeIndicators.join(',')+'\", \"count\" : \"'+activeIndicators.length+'\"}';","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"6d0ce3b704352210559073c06a02f7af","definition_id":"SMBEN100027","sys_updated_by":"system","exec_time_threshold":"100","sys_created_on":"2025-06-05 05:28:17","name":"GetActiveBenchmarkIndicators","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Max Level of dependency for a question in survey","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:09:27","kb_article_url":"","sys_tags":"","version":"","script":"var questions = new GlideRecord('asmt_metric');\nquestions.addEncodedQuery('metric_type.evaluation_method=survey^depends_onISNOTEMPTY');\nquestions.query();\nvar count = 1;\nvar maxLevel = 0;\n\nvar dependentMetric = {};\n\nwhile (questions.next()) {\n    dependentMetric[questions.sys_id] = questions.getValue('depends_on');\n}\n\nvar tempListMetric = [];\nvar depthOfMetric = {};\n\nfunction calculateDepth(metric) {\n    if (metric in depthOfMetric) {\n        count = depthOfMetric[metric] + count;\n        return;\n    } else {\n        if (metric in dependentMetric) {\n            count++;\n            tempListMetric.push(metric);\n            calculateDepth(dependentMetric[metric]);\n        }\n    }\n\n}\n\nfunction addDepthForEachMetric() {\n    for (var i = 0; i < tempListMetric.length; i++) {\n        depthOfMetric[tempListMetric[i]] = count - i;\n    }\n}\n\nfor (var metric in dependentMetric) {\n    if (metric in depthOfMetric) {\n        count = depthOfMetric[metric];\n    } else {\n        tempListMetric.push(metric);\n        calculateDepth(dependentMetric[metric]);\n    }\n    if (tempListMetric.length > 0) {\n        addDepthForEachMetric();\n    }\n\n    if (count > maxLevel) {\n        maxLevel = count;\n    }\n    count = 1;\n    tempListMetric = [];\n}\nanswer = maxLevel;","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"6db72f7f04b12210559073c06a02f7e8","definition_id":"DEFN1007460","sys_updated_by":"system","exec_time_threshold":"30000","sys_created_on":"2025-06-05 05:09:27","name":"Max Level dependency","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Number of Instances with active adaptive authentication policies associated with contexts","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:29:56","kb_article_url":"","sys_tags":"","version":"","script":"answer = getRecordsCount();\n\nfunction getRecordsCount() {\n    var count = 0;\n    var aAPluginActive = GlidePluginManager.isActive(\"com.snc.adaptive_authentication\");\n    var aAPropertyEnabled = GlideProperties.getBoolean(\"glide.authenticate.auth.policy.enabled\");\n    if (aAPluginActive && aAPropertyEnabled) {\n        //check if any MFA policy is active\n        var mfacontextGr = new GlideRecord(\"sys_mfa_policy_context\");\n        mfacontextGr.addEncodedQuery(\"default_policy=stepup_mfa_policy^stepup_mfa_policy.active=true^NQdefault_policy=stepdown_mfa_policy^stepdown_mfa_policy.active=true\");\n        mfacontextGr.query();\n        if (mfacontextGr.next()) {\n            var activeMFAPolicyConditionCount = 0;\n            if (mfacontextGr.default_policy == \"stepup_mfa_policy\") {\n                activeMFAPolicyConditionCount = getActivePolicyConditionCount(mfacontextGr.stepup_mfa_policy.decision_table);\n            } else {\n                activeMFAPolicyConditionCount = getActivePolicyConditionCount(mfacontextGr.stepdown_mfa_policy.decision_table);\n            }\n            if (activeMFAPolicyConditionCount > 0)\n                count++;\n        }\n        //check if any pre-auth policy is active\n        var preAuthcontextGr = new GlideRecord(\"sys_auth_policy_context\");\n        preAuthcontextGr.addEncodedQuery(\"sys_id=62c7e85773112010616ca9843cf6a78e^default_policy=allow_policy^allow_policy.active=true^NQsys_id=62c7e85773112010616ca9843cf6a78e^default_policy=deny_policy^deny_policy.active=true\");\n        preAuthcontextGr.query();\n        if (preAuthcontextGr.next()) {\n            var activePreAuthPolicyConditionCount = 0;\n            if (preAuthcontextGr.default_policy == \"allow_policy\") {\n                activePreAuthPolicyConditionCount = getActivePolicyConditionCount(preAuthcontextGr.allow_policy.decision_table);\n            } else {\n                activePreAuthPolicyConditionCount = getActivePolicyConditionCount(preAuthcontextGr.deny_policy.decision_table);\n            }\n            if (activePreAuthPolicyConditionCount > 0)\n                count++;\n        }\n\n        //check if any post-auth policy is active\n        var postAuthcontextGr = new GlideRecord(\"sys_auth_policy_context\");\n        postAuthcontextGr.addEncodedQuery(\"sys_id=c3086c5773112010616ca9843cf6a7ff^default_policy=allow_policy^allow_policy.active=true^NQsys_id=c3086c5773112010616ca9843cf6a7ff^default_policy=deny_policy^deny_policy.active=true\");\n        postAuthcontextGr.query();\n        if (postAuthcontextGr.next()) {\n            var activePostAuthPolicyConditionCount = 0;\n            if (postAuthcontextGr.default_policy == \"allow_policy\") {\n                activePostAuthPolicyConditionCount = getActivePolicyConditionCount(postAuthcontextGr.allow_policy.decision_table);\n            } else {\n                activePostAuthPolicyConditionCount = getActivePolicyConditionCount(postAuthcontextGr.deny_policy.decision_table);\n            }\n            if (activePostAuthPolicyConditionCount > 0)\n                count++;\n        }\n\n    }\n    return count;\n}\n\nfunction getActivePolicyConditionCount(decision_table_sys_id) {\n    var ga = new GlideAggregate(\"sys_auth_policy_condition\");\n    ga.addActiveQuery();\n    ga.addQuery(\"decision_table\", decision_table_sys_id);\n    ga.addAggregate(\"COUNT\", null);\n    ga.query();\n    if (ga.next()) {\n        return ga.getAggregate('COUNT');\n    }\n    return 0;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"716c2b3b04352210559073c06a02f7f4","definition_id":"DEFN1007092","sys_updated_by":"system","exec_time_threshold":"10000","sys_created_on":"2025-06-05 05:29:56","name":"Number of Instances with active adaptive authentication policies associated with contexts","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Total no.of multiple prediction scenarios confirmed as incorrect","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:57:31","kb_article_url":"","sys_tags":"","version":"","script":"var encodedQuery = 'sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()^nlu_provider=64c023c17300330021a044764df6a70e';\nanswer = new sn_nlu_workbench.NLUPerformanceUtil().getAuditLogs('INCORRECT_AMONG_MULTIPLE', encodedQuery).length;","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"71b2377304b52210559073c06a02f7c4","definition_id":"DEFN1006666","sys_updated_by":"system","exec_time_threshold":"150000","sys_created_on":"2025-06-05 05:57:31","name":"NLU Performance total coversation with multiple incorrect prediction of last month","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Cumulative number of entities for published NLU models","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 04:56:17","kb_article_url":"","sys_tags":"","version":"","script":"var count = 0;\nvar model, ga;\nvar gRec = new GlideRecord(\"sys_nlu_model_status\");\ngRec.addQuery('published_version', '>=' , '1');\ngRec.query();\nwhile (gRec.next()) {\n\t//Model level entities\n    model = gRec.getValue('model');\n    ga = new GlideAggregate('sys_nlu_entity');\n    ga.addAggregate('COUNT');\n    ga.addQuery('model', model);\n\t\n    ga.query();\n    if (ga.next()) {\n        count += parseInt(ga.getAggregate('COUNT'));\n    }\n\t//intent level entities\n    var query = 'entity.modelISEMPTY^intent.model.sys_id='+model;\n    ga = new GlideAggregate('m2m_sys_nlu_intent_entity');\n    ga.addAggregate('COUNT');\n    ga.addEncodedQuery(query);\n    ga.query();\n    if (ga.next()) {\n        count += parseInt(ga.getAggregate('COUNT'));\n    }\n}\nanswer = count;","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"74b4a77f04312210559073c06a02f70e","definition_id":"DEFN1002074","sys_updated_by":"system","exec_time_threshold":"300","sys_created_on":"2025-06-05 04:56:17","name":"NoofEntitiesInPublishedNLUModels","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"IntegrationHub transactions for last 12 months.","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:32:57","kb_article_url":"","sys_tags":"","version":"","script":"var aggregator = new IHUsageMetricsAggregator();\nvar sums = aggregator.getTransactionCountByMonth(true);\nvar totalSum = 0;\nwhile (sums.next()) {  \n  totalSum = totalSum + parseInt(sums.getAggregate('SUM', 'use_count'), 10);\n}\nanswer = totalSum;","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"751daf3f04352210559073c06a02f702","definition_id":"DEFN1001300","sys_updated_by":"system","exec_time_threshold":"5000","sys_created_on":"2025-06-05 05:32:57","name":"ua_ih_usage_tx_yearly_compliance","sys_created_by":"system"},{"definition_type":"production","count_type":"Usage","sys_mod_count":"0","active":"true","description":"This definition will provide total cloud consumption by the customers for \"Tier 1\" data .","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 05:54:14","kb_article_url":"","sys_tags":"","version":"0","script":"answer = getAccountUsageDataForCloud();\n\nfunction getAccountUsageDataForCloud() {\n    var cloudEntitlementDetailDAO = new sn_sub_man.CloudEntitlementDetailDAO();\n    var isSharedCapacityType = cloudEntitlementDetailDAO.isSharedCapacityType();\n    //these tables are for Tier 1 data\n    var tableName = isSharedCapacityType ? \"sn_storage_pool_capacity\" : \"sn_storage_cloud_consumption\";\n    var gr = new GlideRecord(tableName);\n    gr.addEncodedQuery('instance_idISEMPTY');\n    gr.query();\n    if (gr.next()) {\n        return gr.getValue('total_usage');\n    }\n    return 0;\n}","sys_class_name":"ua_scripted_defn","run_scope":"sn_sub_man","schedule":"Daily","sys_id":"75f173bf04752210559073c06a02f768","definition_id":"DEFN1008286","sys_updated_by":"system","exec_time_threshold":"90000","sys_created_on":"2025-06-05 05:54:14","name":"Daily Cloud consumption At Account Level for \"Tier 1\" data","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Transaction for last month","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:32:56","kb_article_url":"","sys_tags":"","version":"","script":"var aggregator = new OutboundUsageMetricsAggregator();\nvar sums = aggregator.getTransactionCountForLastMonth('sys_hub_step_instance', true);\nanswer = sums;","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"791d6f3f04352210559073c06a02f7cd","definition_id":"DEF1000406","sys_updated_by":"system","exec_time_threshold":"2000","sys_created_on":"2025-06-05 05:32:56","name":"outbound_usage_metrics_monthly","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Orchestration Core and IntegrationHub transactions executed in last month","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:32:56","kb_article_url":"","sys_tags":"","version":"","script":"// Orchestration Transactions LastMonth\nvar orchTxLastMonth = 0;\nif(GlidePluginManager.isActive('com.snc.runbook_automation.runtime')) {\n\torchTxLastMonth = new global.OrchCoreTransactionQuery().getTransactionsCount(\"sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()\");\n\t// get SAMP TX and substract SAMP TX \n\tvar sampCount = new global.SAMPTXCounter().getReclamationTXCountForLastMonth();\n\torchTxLastMonth = orchTxLastMonth - sampCount;\n} \n// IntegrationHub Transaction LastMonth\nvar ihTxLastMonth = new OutboundUsageMetricsAggregator().getTransactionCountForLastMonth('sys_hub_step_instance', true);\n\nanswer = orchTxLastMonth+ihTxLastMonth;","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"791d6f3f04352210559073c06a02f7ce","definition_id":"DEF1000421","sys_updated_by":"system","exec_time_threshold":"300000","sys_created_on":"2025-06-05 05:32:56","name":"OrchAndIntegrationHubTransactionsLastMonth","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Maximum transactions in last 12 months for all scopes","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:32:56","kb_article_url":"","sys_tags":"","version":"","script":"var aggregator = new OutboundUsageMetricsAggregator();\nvar sums = aggregator.getTransactionCountByMonth('sys_hub_step_instance', false);\nvar maxCount = 0;\nwhile (sums.next()) {  \n  var currentCount = parseInt(sums.getAggregate('SUM', 'agg_value'));\n  if(currentCount > maxCount) \n    maxCount = currentCount;\n}\nanswer = maxCount;","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"791d6f3f04352210559073c06a02f7cf","definition_id":"DEF1000408","sys_updated_by":"system","exec_time_threshold":"5000","sys_created_on":"2025-06-05 05:32:56","name":"outbound_usage_metrics_max_all","sys_created_by":"system"},{"definition_type":"","count_type":"Licensing","sys_mod_count":"0","active":"true","description":"Maximum sum of Orchestration Core and IntegrationHub transactions executed in any given month of last 12 months","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:32:56","kb_article_url":"","sys_tags":"","version":"","script":"function getOrchMaxCount(){\n\tvar maxCnt=0;\n\tif(GlidePluginManager.isActive('com.snc.runbook_automation.runtime')) {\n\t\t// Last 12 months\n\t\tvar queryString = \"sys_created_onBETWEENjavascript:gs.monthsAgoStart(12)@javascript:gs.endOfLastMonth()\";\n\t\tvar monthlyTrend = new global.OrchCoreTransactionQuery().getTransactionsCountMonthlyTrend(queryString);\n\n\t\tfor(var i=0; i<monthlyTrend.length; i++){\n\t\t\tvar monthlyCount = monthlyTrend[i].count;\n\t\t\tvar month = monthlyTrend[i].month;\n\t\t\tvar monthlyQueryString = \"sys_created_onBETWEENjavascript:gs.monthsAgoStart(\" + month + \")@javascript:gs.monthsAgoStart(\" + month-1 + \")\";\n\t\t\tvar sampCnt = new global.SAMPTXCounter().getReclamationTXCount(monthlyQueryString);\n\t\t\tmonthlyCount = monthlyCount - sampCnt;\n\t\t\tif (monthlyCount > maxCnt)\n\t\t\t\tmaxCnt = monthlyCount;\n\t\t}\n\t}\n\treturn maxCnt;\n}\n\nfunction getIHMaxCount(){\n\tvar aggregator = new OutboundUsageMetricsAggregator();\n\tvar sums = aggregator.getTransactionCountByMonth('sys_hub_step_instance', true);\n\tvar maxCount = 0;\n\twhile (sums.next()) {\n\t\tvar currentCount = parseInt(sums.getAggregate('SUM', 'agg_value'));\n\t\tif(currentCount > maxCount)\n\t\t\tmaxCount = currentCount;\n\t}\n\treturn maxCount;\n}\nanswer = getOrchMaxCount()+getIHMaxCount();","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"791d6f3f04352210559073c06a02f7d0","definition_id":"DEF1000420","sys_updated_by":"system","exec_time_threshold":"300000","sys_created_on":"2025-06-05 05:32:56","name":"MaxOrchAndIntegrationHubTransactionsLast12Month","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Transactions for last 12 months","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:32:56","kb_article_url":"","sys_tags":"","version":"","script":"var aggregator = new OutboundUsageMetricsAggregator();\nvar sums = aggregator.getTransactionCountByMonth('sys_hub_step_instance', true);\nvar totalSum = 0;\nwhile (sums.next()) {  \n  totalSum = totalSum + parseInt(sums.getAggregate('SUM', 'agg_value'), 10);\n}\nanswer = totalSum;","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"791d6f3f04352210559073c06a02f7d1","definition_id":"DEF1000410","sys_updated_by":"system","exec_time_threshold":"3000","sys_created_on":"2025-06-05 05:32:56","name":"outbound_usage_metrics_yearly","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Average IntegrationHub transactions in last 12 months for all scopes.","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:32:57","kb_article_url":"","sys_tags":"","version":"","script":"var aggregator = new IHUsageMetricsAggregator();\nvar sums = aggregator.getTransactionCountByMonth(false);\nvar totalSum = 0;\nwhile (sums.next()) {  \n  totalSum = totalSum + parseInt(sums.getAggregate('SUM', 'use_count'), 10);\n}\nanswer = totalSum/12;","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"791daf3f04352210559073c06a02f700","definition_id":"DEFN1001301","sys_updated_by":"system","exec_time_threshold":"5000","sys_created_on":"2025-06-05 05:32:57","name":"ua_ih_usage_avg_all","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Number of designated shift managers","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:30:29","kb_article_url":"","sys_tags":"","version":"","script":"answer = getDesignatedShiftManagers();\n/*\n* Count the number of designated shift managers\n*/\nfunction getDesignatedShiftManagers() {\n\tvar count = 0;\n\tvar gr = new GlideRecord('on_call_group_preference');\n\tgr.setCategory(\"usage\");\n\tgr.addNotNullQuery('rota_managers');\n\tgr.query();\n\n\twhile (gr.next())\n\t\tcount = count + gr.rota_managers.getDisplayValue().split(',').length;\n\n\treturn count;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"798c277b04352210559073c06a02f7d0","definition_id":"DEFN1002170","sys_updated_by":"system","exec_time_threshold":"5000","sys_created_on":"2025-06-05 05:30:29","name":"Number of designated shift managers","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"No of recommendations created for Context-Incident in a week for Decision Table\n      generator type.","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 06:24:16","kb_article_url":"","sys_tags":"","version":"","script":"function recommendationCountByDecisionTableRGType() {\n\n  var rgType = \"0caf16c6532301107234ddeeff7b12a3\";  // Decision Table\n  var rgTable = \"sn_nb_action_resource_generator\";\n  var recommendationTable = \"sn_nb_action_recommended_action\";\n  var executionTable = \"sn_nb_action_detail\";\n\n  var resourceGeneratorGr = new GlideRecord(rgTable);\n  resourceGeneratorGr.addQuery(\"generator_type\", rgType);\n  resourceGeneratorGr.addQuery(\"context\",\"71e20d52532211101d87ddeeff7b1206\"); // incident context\n  resourceGeneratorGr.addActiveQuery();\n  resourceGeneratorGr.query();\n  var resourceGenerators = [];\n  while(resourceGeneratorGr.next()) {\n    resourceGenerators.push(resourceGeneratorGr.getUniqueValue());\n  }\n\n  var actions = [];\n  var recommendationGr = new GlideRecord(recommendationTable);\n  recommendationGr.addQuery(\"resource_generator\", 'IN', resourceGenerators);\n  recommendationGr.addActiveQuery();\n  recommendationGr.query();\n\n  while(recommendationGr.next()) {\n    actions.push(recommendationGr.getValue(\"action\"));\n  }\n\n  var gr = new GlideAggregate(executionTable);\n  gr.addQuery('sys_updated_on', '>=', gs.daysAgo(7));\n  gr.addQuery('recommended', 'IN', actions);\n  gr.addAggregate('COUNT');\n  gr.query();\n  var count = 0;\n  if(gr.next()) count = gr. getAggregate(\"COUNT\");\n\n  return count;\n}\n\nanswer = recommendationCountByDecisionTableRGType();","sys_class_name":"ua_scripted_defn","run_scope":"sn_sow_inc","schedule":"Daily","sys_id":"79d87fb304f52210559073c06a02f766","definition_id":"DEFN1007977","sys_updated_by":"system","exec_time_threshold":"90000","sys_created_on":"2025-06-05 06:24:16","name":"recommendationCountByDecisionTableRGType","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Total no.of predictions with user feedback confirmation enabled","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:57:31","kb_article_url":"","sys_tags":"","version":"","script":"var result = 0;\nvar glideGr = new GlideAggregate('open_nlu_predict_intent_feedback');\nvar encodedQuery = 'user_confirmation=Yes^sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()^nlu_provider=64c023c17300330021a044764df6a70e';\n\ntry {\n    glideGr.addAggregate('COUNT', 'audit_log');\n    glideGr.addEncodedQuery(encodedQuery);\n    glideGr.query();\n    if (glideGr.next()) {\n        result = glideGr.getRowCount();\n    }\n} catch (e) {\n    result = 0;\n}\nanswer = parseInt(result);","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"7db2377304b52210559073c06a02f7c5","definition_id":"DEFN1006662","sys_updated_by":"system","exec_time_threshold":"150000","sys_created_on":"2025-06-05 05:57:31","name":"NLU Performance total coversation with user confirmation enabled of last month","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Count of licensed users with access to 1-10 custom tables","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:18:54","kb_article_url":"","sys_tags":"","version":"","script":"answer = SNC.UACTScriptUtils.getUserCTAccessCount(1, 10);","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"80e9a7fb04f12210559073c06a02f771","definition_id":"DEFN1001447","sys_updated_by":"system","exec_time_threshold":"500","sys_created_on":"2025-06-05 05:18:54","name":"Monthly Count of all users with access to [1 - 10] tables under\n\t\t\tStarter SKU","sys_created_by":"system"},{"definition_type":"","count_type":"Licensing","sys_mod_count":"0","active":"true","description":"Count of all users with access to [201- 300] tables under Enterprise SKU","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:18:54","kb_article_url":"","sys_tags":"","version":"","script":"answer = SNC.UACTScriptUtils.getUserCTAccessCount(201, 300);","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"80e9a7fb04f12210559073c06a02f772","definition_id":"DEFN1002955","sys_updated_by":"system","exec_time_threshold":"2500","sys_created_on":"2025-06-05 05:18:54","name":"Monthly Count of all users with access to [201- 300] tables under Enterprise SKU","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Max Number of category levels created in the system.\r\nArticles are grouped by categories. A hierarchy of categories can be created for proper categorisation.","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:10:38","kb_article_url":"","sys_tags":"","version":"","script":"var gr = new GlideAggregate(\"kb_category\");\ngr.addQuery(\"parent_table\",\"kb_category\");\ngr.query();\nvar max_height = 0;\nwhile(gr.next()){\n\nvar count = 0;\nvar current = gr;\nwhile(current.parent_id){\n   count++;\n   current = current.parent_id;\n}\nif(count>max_height)\n   max_height = count;\n\n}\nanswer = max_height;","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"83f7ebff04b12210559073c06a02f711","definition_id":"DEFN1000896","sys_updated_by":"system","exec_time_threshold":"100","sys_created_on":"2025-06-05 05:10:38","name":"Max Number of category levels created in the system","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Custom tables created by scoped custom applications","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 04:55:17","kb_article_url":"","sys_tags":"","version":"","script":"answer = getCustomTablesByScopedCustomApplications();\n\nfunction getCustomTablesByScopedCustomApplications() {\n    var customTables = -1;\n\tvar prefix = 'x_';\n\tvar prefixSeperator = '_';\n    \n\tif (!GlideTableDescriptor.isValid('sys_db_object') )\n\t\treturn customTables;\n\t\n\tvar companyCode = gs.getProperty('glide.appcreator.company.code');\n\tif (GlideStringUtil.nil(companyCode))\n\t\treturn customTables;\n\tvar vendorPrefix = prefix + companyCode + prefixSeperator;\n\t\n\tvar gr = new GlideAggregate('sys_db_object');\n\tgr.addQuery('name', 'STARTSWITH', vendorPrefix);\n\tgr.addAggregate('COUNT');\n\tgr.query();\n\n\tif (gr.next()) \n\t\tcustomTables = parseInt(gr.getAggregate('COUNT'));\n    return customTables ;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"8674e7fb04312210559073c06a02f70a","definition_id":"DEF1000203","sys_updated_by":"system","exec_time_threshold":"","sys_created_on":"2025-06-05 04:55:17","name":"CustomTablesByScopedCustomApplications","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Time To Relief To INTs First Resolution Where ReAssignment Count = 0 and Closed today in Minutes","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 04:55:17","kb_article_url":"","sys_tags":"","version":"","script":"/*SUM(Time Closed-Time created for all INTs closed that day) where reassignment_count=0, closed yesterday*/\n\nvar totalTTRSecs = 0;\nvar totalTTRMins = 0;\n\nfunction getTTRINTsFirstResolution() {\n\n\tvar incidentTbl = \"incident\";\n\n\tif(!GlideTableDescriptor.isValid(incidentTbl)) \n\t\treturn 0;\n\t\t\n\tvar grClosed = new GlideRecord(incidentTbl);\n\t//All INTs closed yesterday\n\tgrClosed.addEncodedQuery(\"closed_atONYesterday@javascript:gs.daysAgoStart(1)@javascript:gs.daysAgoEnd(1)^reassignment_count=0^closed_atISNOTEMPTY\");\n\t\n\tgrClosed.query();\n\n\twhile (grClosed.next()) {\n\t\t\n\t\tvar opened = grClosed.getValue(\"opened_at\");\n        var closed = grClosed.getValue(\"closed_at\");\n        var ttr = gs.dateDiff(opened, closed, true);\n\t\t\n\t\ttotalTTRSecs += parseInt(ttr);\t\n\t\ttotalTTRMins += parseInt(ttr)/60;\n\t}\n\t\n\treturn Math.round(totalTTRMins);\n}\n\nanswer = '{\"count\": \"' + getTTRINTsFirstResolution() + '\",\"TotalTTR(Seconds)\":\"' + totalTTRSecs + '\"}';","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"8674e7fb04312210559073c06a02f712","definition_id":"SMBEN100025","sys_updated_by":"system","exec_time_threshold":"","sys_created_on":"2025-06-05 04:55:17","name":"TTR to Incidents first resolution - Minutes","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Click Through rate last 30 days","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:10:38","kb_article_url":"","sys_tags":"","version":"","script":"var count1 = 0;\nvar count2 = 0;\nvar result = 0;\nvar record = new GlideAggregate('ts_query_kb');\nrecord.addEncodedQuery(\"top_click_rankISNOTEMPTY\");\nrecord.addQuery('sys_created_on', '>=', gs.daysAgo(30));\nrecord.addAggregate('COUNT');\nrecord.query();\n\nif (record.next()) {\n   count1 = record.getAggregate('COUNT');\n}\n\nvar record2 = new GlideAggregate('ts_query_kb');\nrecord2.addQuery('sys_created_on', '>=', gs.daysAgo(30));\nrecord2.addAggregate('COUNT');\nrecord2.query();\n\nif (record2.next()) {\n   count2 = record2.getAggregate('COUNT');\n}\nif(count2!=0){\n  result = (count1/count2)*100;\n}\nanswer = result;","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"87f7ebff04b12210559073c06a02f70f","definition_id":"DEFN1001312","sys_updated_by":"system","exec_time_threshold":"100","sys_created_on":"2025-06-05 05:10:38","name":"clickThroughRateInLast30days","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Number of test runs that were started within the last 24 hours.\r\n\r\nTest results marked as Retain Indefinitely do not negatively impact this count.","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 05:17:20","kb_article_url":"","sys_tags":"","version":"","script":"var minutesAgo = 1440; // 24 hours\nvar testResultGR = new GlideAggregate('sys_atf_test_result');\ntestResultGR.addQuery('sys_created_on', '>=', gs.minutesAgo(minutesAgo));\ntestResultGR.query();\nanswer = testResultGR.getRowCount();","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"8989e37b04f12210559073c06a02f79c","definition_id":"DEFN1001196","sys_updated_by":"system","exec_time_threshold":"200","sys_created_on":"2025-06-05 05:17:20","name":"ATF: Test Results within the last 24 hours","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Counts the total number of exempted tables on a customer instance, based on the base-exempted tables","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 04:55:17","kb_article_url":"","sys_tags":"","version":"","script":"answer = SNC.UACTScriptUtils.getNumExemptedCustomTables();","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"8a74e7fb04312210559073c06a02f710","definition_id":"DEFN1000940","sys_updated_by":"system","exec_time_threshold":"500","sys_created_on":"2025-06-05 04:55:17","name":"Exempted custom table count","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Returns counts of all tours including individual statuses\r\ne.g. {\"data\":{\"completed\":1,\"dismissed\":2,\"failed\":1,\"started\":1,\"step_started\":1,\"total\":6}, count: 6}","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:25:52","kb_article_url":"","sys_tags":"","version":"","script":"var gr = new GlideAggregate('sys_guided_tour_analytics');\ngr.addAggregate('COUNT');\ngr.groupBy('last_status');\ngr.addEncodedQuery('sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()');\ngr.query();\nvar data={}, status, count, total = 0;\nwhile(gr.next()) {\n   status = gr.last_status.toString();\n   count = parseInt(gr.getAggregate('COUNT'));\n   data[status] = count;\n   total += count;\n}\ndata['total'] = total;\nvar computedData = {count: total, data: data };\nanswer = new JSON().encode(computedData);","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"8a7bafb304352210559073c06a02f78a","definition_id":"DEFN1000597","sys_updated_by":"system","exec_time_threshold":"5000","sys_created_on":"2025-06-05 05:25:52","name":"Aggregate count of all tours played along with the count of statuses (Tours Created Last Month Only)","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Number of records with non zero click rank/number of records","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:10:38","kb_article_url":"","sys_tags":"","version":"","script":"var gr=new GlideAggregate('ts_query_kb');\ngr.addAggregate('COUNT');\ngr.query();\nvar total_records_count = 0;\nvar highest_click_count = 0;\nvar result=0;\nif(gr.next())\n{\n  total_records_count = gr.getAggregate('COUNT');\n}\nvar gr2=new GlideAggregate('ts_query_kb');\ngr2.addNotNullQuery('top_click_rank');\ngr2.addAggregate('COUNT');\ngr2.query();\nif(gr2.next())\n{\n  highest_click_count = gr2.getAggregate('COUNT');\n}\nif(total_records_count!=0)\n{\n  result=highest_click_count/total_records_count;\n}\nanswer=result;\n","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"8bf7ebff04b12210559073c06a02f70d","definition_id":"DEFN1000909","sys_updated_by":"system","exec_time_threshold":"100","sys_created_on":"2025-06-05 05:10:38","name":"HighestClickRank","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Monthly Count of all users with access to [>4000]\n\t\t\ttables - Excessive Usage","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:18:54","kb_article_url":"","sys_tags":"","version":"","script":"answer = SNC.UACTScriptUtils.getUserCTAccessCountUpperLimit(4000);","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"8ce9a7fb04f12210559073c06a02f76d","definition_id":"DEFN1001452","sys_updated_by":"system","exec_time_threshold":"500","sys_created_on":"2025-06-05 05:18:54","name":"Monthly Count of all users with access to [>4000] tables -\n\t\t\tExcessive Usage","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"\r\nTotal table allotment: this is the total number of custom table allotments that the instance has","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:18:54","kb_article_url":"","sys_tags":"","version":"","script":"\n\t\t\tvar totalSum = new GlideAggregate('license_details');\ntotalSum.addQuery('table_count', '!=','N/A');\ntotalSum.addAggregate('SUM', 'table_count');\ntotalSum.query();\n\nvar allTotalCost = 0;\nwhile (totalSum.next()) {\n   allTotalCost += parseInt(totalSum.getAggregate('SUM', 'table_count'));\n}\nanswer = allTotalCost;","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"8ce9a7fb04f12210559073c06a02f76e","definition_id":"DEF10032","sys_updated_by":"system","exec_time_threshold":"200","sys_created_on":"2025-06-05 05:18:54","name":"Total custom table allotment","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Accurate number of test runs that were started within the last 30 days. If the instance has a customized Auto Flush on the table, then we pull data between the oldest possible time of the flush and now.\r\n\r\nTest results marked as Retain Indefinitely d","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:17:20","kb_article_url":"","sys_tags":"","version":"","script":"var minutesAgo = 43200; // base system setting in minutes: 2592000 / 60\nvar flushOlderThanGR = new GlideAggregate('sys_auto_flush');\nflushOlderThanGR.addQuery('sys_name','sys_atf_test_result');\nflushOlderThanGR.query();\nif (flushOlderThanGR.next() && !isNaN(flushOlderThanGR.age))\n  minutesAgo = Math.max(1, flushOlderThanGR.age / 60);\nvar testResultGR = new GlideAggregate('sys_atf_test_result');\ntestResultGR.addQuery('sys_created_on', '>=', gs.minutesAgo(minutesAgo));\ntestResultGR.query();\nanswer = testResultGR.getRowCount();","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"8d89e37b04f12210559073c06a02f79a","definition_id":"DEFN1001197","sys_updated_by":"system","exec_time_threshold":"300","sys_created_on":"2025-06-05 05:17:20","name":"ATF: Most Recent Test Results","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"count of distinct Access Controls with only roles using GlideAggregate and a Join on Access Roles via script","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 04:58:05","kb_article_url":"","sys_tags":"","version":"","script":"answer = countACLs();\n\nfunction countACLs() {\n\tvar gr = new GlideAggregate('sys_security_acl');\n\tgr.addAggregate('COUNT');\n\tvar join = gr.addJoinQuery('sys_security_acl_role', 'sys_id', 'sys_security_acl');\n\tgr.addQuery('active', '1');\n\tgr.addNullQuery('condition');\n\tgr.addNullQuery('script');\n\tjoin.addCondition('sys_security_acl', '!=', '');\n\tgr.query();\n\tif (gr.next())\n\t\treturn gr.getAggregate('COUNT');\n\n\treturn 0;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"8f15eb3304712210559073c06a02f7b1","definition_id":"DEFN1006446","sys_updated_by":"system","exec_time_threshold":"1000","sys_created_on":"2025-06-05 04:58:05","name":"select count of distinct ACLs that only use role","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"# of goals with greater than 5 targets","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 06:13:43","kb_article_url":"","sys_tags":"","version":"","script":"var countOfGoals = 0;\nvar gr = new GlideAggregate('sn_gf_goal_target');\ngr.setGroup(true);\ngr.groupBy(\"goal\");\ngr.addAggregate(\"COUNT\",\"sys_id\");\ngr.query();\nwhile(gr.next()){\n\tvar targetCount = gr.getAggregate(\"COUNT\",\"sys_id\");\n\tif(targetCount>5){\n\t\t++countOfGoals;\n\t}\n}\nanswer = countOfGoals;","sys_class_name":"ua_scripted_defn","run_scope":"sn_gf","schedule":"Monthly","sys_id":"8f66fffb04b52210559073c06a02f732","definition_id":"DEFN1004981","sys_updated_by":"system","exec_time_threshold":"5000","sys_created_on":"2025-06-05 06:13:43","name":"CountOfGoalsWithTargetsGreaterThanFive","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"% of feedbacks/ number of article views for all articles in the span of last month","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:10:38","kb_article_url":"","sys_tags":"","version":"","script":"var views=new GlideAggregate('kb_use');\nviews.addQuery('viewed', 'true');\nviews.addQuery('sys_created_on', '>=', gs.daysAgo(30));\nviews.addAggregate('COUNT');\nviews.query();\nvar feedback_count = 0;\nvar view_count = 0;\nvar result=0;\nif(views.next())\n{\nview_count = views.getAggregate('COUNT');\n\n}\n\nvar feedbacks = new GlideAggregate('kb_feedback');\nfeedbacks.addQuery('sys_created_on', '>=', gs.daysAgo(30));\nfeedbacks.addAggregate('COUNT');\nfeedbacks.query();\nif(feedbacks.next()) \n   feedback_count = feedbacks.getAggregate('COUNT');\n\nif(view_count!=0)\n{\n result=(feedback_count/view_count)*100;\n}\nanswer=result;","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"8ff7ebff04b12210559073c06a02f70b","definition_id":"DEFN1000912","sys_updated_by":"system","exec_time_threshold":"100","sys_created_on":"2025-06-05 05:10:38","name":"FeedbackPerArticleView","sys_created_by":"system"},{"definition_type":"","count_type":"Licensing","sys_mod_count":"0","active":"true","description":"Count of custom tables extending OOB tables other than task","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 04:55:18","kb_article_url":"","sys_tags":"","version":"","script":"// Count the number of custom(u_*) tables\n// that extend from an OOB table other than task.\nvar cnt = 0;\nvar gr = new GlideRecord(\"sys_db_object\");\ngr.addQuery(\"name\", \"STARTSWITH\", \"u_\");\ngr.query();\nwhile(gr.next()) {\n\tvar extendsTableName = gr.super_class.name + '';\n\tif (extendsTableName.length > 0 && !extendsTableName.startsWith('u_')\n\t\t&& extendsTableName != 'task' && extendsTableName != 'sys_import_set_row')\n\t\tcnt++;\n}\nanswer = cnt;","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"9274e7fb04312210559073c06a02f75b","definition_id":"DEF1000057","sys_updated_by":"system","exec_time_threshold":"","sys_created_on":"2025-06-05 04:55:18","name":"OOBTableExtensions","sys_created_by":"system"},{"definition_type":"production","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Get the count of data brokers having collection as field type in its properties.","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 06:20:17","kb_article_url":"","sys_tags":"","version":"0","script":"\n            var collectionPropertyUsageByDataBroker = 0;\n\nvar gr = new GlideRecord('sys_ux_data_broker');\ngr.addEncodedQuery('propsISNOTEMPTY');\ngr.query();\n\nwhile (gr.next()) {\n    var properties = JSON.parse(gr.props);\n\n    for(var i=0;i<properties.length; i++){\n        if(properties[i].fieldType === 'collection'){\n            collectionPropertyUsageByDataBroker++;\n            break;\n        }\n    }\n}\n\nanswer = collectionPropertyUsageByDataBroker;","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"93e73b3304f52210559073c06a02f761","definition_id":"DEFN1008295","sys_updated_by":"system","exec_time_threshold":"90000","sys_created_on":"2025-06-05 06:20:17","name":"collection property usage by data brokers","sys_created_by":"system"},{"definition_type":"","count_type":"Licensing","sys_mod_count":"0","active":"true","description":"Count of ITSM-only tasks in last 30 days","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 05:07:43","kb_article_url":"","sys_tags":"","version":"","script":"/** ITSM Tasks in last 30 days\n* CSM TASK Daily Definitions: DEFN1003909,DEFN1003914,DEFN1003912,DEFN1003915\n* ITSM TASK Daily Definitions: ['DEFN1000504', 'DEFN1003906', 'DEFN1003905', 'DEFN1003908', 'DEFN1003902', 'DEFN1003907', 'DEFN1003903', 'DEFN1003904'] */\n\nanswer = getITSMOnlyTransactions();\n\nfunction getITSMOnlyTransactions() {\n\n\tvar csmDefns = ['DEFN1003914', 'DEFN1003915', 'DEFN1003909', 'DEFN1003912'];\n\tvar itsmDefns = ['DEFN1000504', 'DEFN1003906', 'DEFN1003905', 'DEFN1003908', 'DEFN1003902', 'DEFN1003907', 'DEFN1003903', 'DEFN1003904'];\n\n\tvar csmTotal = getAggCountLast30Days(csmDefns);\n\tvar itsmTotal = getAggCountLast30Days(itsmDefns);\n\tvar itsmOnlyTasks = (parseInt(itsmTotal) - parseInt(csmTotal));\n\n\treturn (itsmOnlyTasks > 0 ? itsmOnlyTasks : 0);\n}\n\nfunction getAggCountLast30Days(defnArr) {\n\n\tif (gs.nil(defnArr) || defnArr.length <= 0) return 0;\n\n\tvar encQuery = gs.getMessage(\"definition_idIN{0}^time_stampBETWEENjavascript:gs.beginningOfLast30Days()@javascript:gs.endOfLast30Days()\", defnArr.join());\n\tvar ga = new GlideAggregate(\"usageanalytics_count\");\n\t\tga.addEncodedQuery(encQuery);\n\t\tga.addAggregate(\"SUM\", \"count\");\n\t\tga.setGroup(false);\n\t\tga.query();\n\t\tif (ga.next()) {\n\t\t\treturn ga.getAggregate(\"SUM\", \"count\");\n\t\t}\n\n\treturn 0;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"9457afbb04b12210559073c06a02f703","definition_id":"DEFN1004131","sys_updated_by":"system","exec_time_threshold":"500","sys_created_on":"2025-06-05 05:07:43","name":"ITSM Only Tasks in last 30 days\t","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Number of Unique Items Ordered","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 04:55:17","kb_article_url":"","sys_tags":"","version":"","script":"answer = getUniqueItemsOrdered();\n\nfunction getUniqueItemsOrdered() {\n\tif (!GlideTableDescriptor.isValid('sc_req_item'))\n\t\treturn 0;\n\tvar ga = new GlideAggregate('sc_req_item');\n\tga.groupBy('cat_item');\n\tga.addAggregate('COUNT', 'cat_item');\n\tga.query();\n\treturn ga.getRowCount();\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"9674e7fb04312210559073c06a02f726","definition_id":"DEF1000094","sys_updated_by":"system","exec_time_threshold":"","sys_created_on":"2025-06-05 04:55:17","name":"SCReqUniqueItemsOrdered","sys_created_by":"system"},{"definition_type":"","count_type":"Licensing","sys_mod_count":"0","active":"true","description":"Count of Vendor Custom Applications","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 04:55:17","kb_article_url":"","sys_tags":"","version":"","script":"answer = getVendorCustomApplications();\n\n/*\n* Count the number of possible store app records in sys_app\n* Then consist of records that have different vendor prefix as those that belongs to the customer\n*/\nfunction getVendorCustomApplications() {\n    var vendorCustomApps = -1;\n\tvar prefix = 'x_';\n\tvar prefixSeperator = '_';\n\n\tif (!GlideTableDescriptor.isValid('sys_app') )\n\t\treturn vendorCustomApps;\n\n\tvar companyCode = gs.getProperty('glide.appcreator.company.code');\n\tif (GlideStringUtil.nil(companyCode))\n\t\treturn vendorCustomApps;\n\n\tvar vendorPrefix = prefix + companyCode + prefixSeperator;\n\n\tgr = new GlideAggregate('sys_app');\n\tgr.addQuery('scope', 'STARTSWITH', prefix);\n\tgr.addQuery('scope', 'NOT MATCHES', vendorPrefix + '%');\n\tgr.addAggregate('COUNT');\n\tgr.query();\n\n\tif (gr.next())\n\t\tvendorCustomApps = parseInt(gr.getAggregate('COUNT'));\n\n    return vendorCustomApps ;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"9674e7fb04312210559073c06a02f729","definition_id":"DEF1000206","sys_updated_by":"system","exec_time_threshold":"","sys_created_on":"2025-06-05 04:55:17","name":"GetVendorCustomApplications","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"ITSM Only Incidents & Incident Tasks in last 30 days\n\t\t","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 05:07:43","kb_article_url":"","sys_tags":"","version":"","script":"/** ITSM Incidents & Incident Tasks in last 30 days\n* CSM INTs and INT tasks daily: DEFN1003915\n* ITSM INTs Daily: DEFN1003905\n* ITSM INT tasks Daily: DEFN1003908*/\n\nanswer = getTotalITSMInts();\n\nfunction getTotalITSMInts() {\n\t\n\tvar csmIntDefn = 'DEFN1003915';\n\tvar intDefn = 'DEFN1003905';\n\tvar intTaskDefn = 'DEFN1003908';\n\n\tvar csmTotal = getAggCountLast30Days(csmIntDefn);\n\tvar intTotal = getAggCountLast30Days(intDefn);\n\tvar intTaskTotal = getAggCountLast30Days(intTaskDefn);\n\t\n\treturn (parseInt(intTotal) + parseInt(intTaskTotal) - parseInt(csmTotal));\n\t\n}\n\nfunction getAggCountLast30Days(defId) {\n\t\n\tif (gs.nil(defId)) return 0;\n\t\n\tvar encQuery = gs.getMessage(\"definition_id={0}^time_stampBETWEENjavascript:gs.beginningOfLast30Days()@javascript:gs.endOfLast30Days()\", defId);\n\tvar ga = new GlideAggregate(\"usageanalytics_count\");\n\t\tga.addEncodedQuery(encQuery);\n\t\tga.addAggregate(\"SUM\", \"count\");\n\t\tga.setGroup(false);\n\t\tga.query();\n\t\twhile(ga.next()) {\n\t\t\treturn ga.getAggregate(\"SUM\", \"count\");\n\t\t}\n\t\n\treturn 0;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"9857afbb04b12210559073c06a02f705","definition_id":"DEFN1003931","sys_updated_by":"system","exec_time_threshold":"100","sys_created_on":"2025-06-05 05:07:43","name":"ITSM Only Incidents & Incident Tasks in last 30 days","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Knowledge base use by ESS users","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 04:55:17","kb_article_url":"","sys_tags":"","version":"","script":"answer = getKBUseESSUsers();\n\nfunction getKBUseESSUsers () {\n\tif (!GlideTableDescriptor.isValid('kb_use'))\n\t\treturn 0;\n\tvar ga = new GlideAggregate('kb_use');\n\tga.groupBy('user');\n\tga.addAggregate('COUNT', 'user');\n\tga.query();\n\tvar numRecs = 0;\n\twhile (ga.next()) {\n\t\tvar uid = ga.getValue('user');\n\t\tvar gr = new GlideRecord('sys_user_has_role');\n\t\tgr.addQuery('user', uid);\n\t\tgr.query();\n\t\tif (gr.getRowCount() == 0) \n\t\t\tnumRecs += parseInt(ga.getAggregate('COUNT', 'user'));\n\t}\n\treturn numRecs;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"9a74e7fb04312210559073c06a02f71b","definition_id":"DEF1000098","sys_updated_by":"system","exec_time_threshold":"","sys_created_on":"2025-06-05 04:55:17","name":"KBUseESSUsers","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Returns a JSON with total number of correct predictions, correct predictions per template type, correct predictions per template record, and correct predictions per solution definition","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 04:56:11","kb_article_url":"","sys_tags":"","version":"","script":"answer = JSON.stringify(correctPredictionsPerTemplate());\n\nfunction correctPredictionsPerTemplate() {\n\tif (!haveRequiredTables())\n\t\treturn 0;\n\n\tvar obj = {};\n\n\t// Total correct prediction count\n\tvar count = 0;\n\tvar ga = new GlideAggregate('ml_predictor_results');\n\tga.addAggregate('COUNT');\n\tga.addQuery('predicted_correctly', true);\n\tga.addQuery('final_value_date', '>=', gs.daysAgo(1));\n\tga.query();\n\tif (ga.next()) {\n\t\tcount = ga.getAggregate('COUNT');\n\t}\n\tobj.count = count;\n\n\t// Correct predictions per template type\n\tvar solution_capability = [];\n\tga = new GlideAggregate('ml_predictor_results');\n\tga.addAggregate('COUNT', 'solution.solution_definition.trainer.name');\n\tga.addQuery('predicted_correctly', true);\n\tga.addQuery('final_value_date', '>=', gs.daysAgo(1));\n\tga.query();\n\twhile (ga.next()) {\n\t\tvar capability = {};\n\t\tcapability.count = ga.getAggregate('COUNT', 'solution.solution_definition.trainer.name');\n\t\tcapability.capability = ga.getValue('solution.solution_definition.trainer.name');\n\t\tsolution_capability.push(capability);\n\t}\n\tobj.solution_capability = solution_capability;\n\n\t// Correct predictions per template record\n\tvar solution_template = [];\n\tga = new GlideAggregate('ml_predictor_results');\n\tga.addAggregate('COUNT', 'solution.solution_definition.trainer');\n\tga.addQuery('predicted_correctly', true);\n\tga.addQuery('final_value_date', '>=', gs.daysAgo(1));\n\tga.query();\n\twhile (ga.next()) {\n\t\tvar template = {};\n\t\tvar gr = new GlideRecord('ml_trainer_definition');\n\t\tif (!gr.get(ga.getValue('solution.solution_definition.trainer')))\n\t\t\tcontinue;\n\n\t\ttemplate.count = ga.getAggregate('COUNT', 'solution.solution_definition.trainer');\n\t\ttemplate.capability = gr.getValue('name');\n\t\ttemplate.label = gr.getValue('label');\n\t\ttemplate.version = gr.getValue('version');\n\t\tsolution_template.push(template);\n\t}\n\tobj.solution_template = solution_template;\n\n\t// Correct predictions per solution definition record\n\tvar solution_definition = [];\n   \tga = new GlideAggregate('ml_predictor_results');\n   \tga.addAggregate('COUNT', 'solution.solution_definition');\n   \tga.addQuery('predicted_correctly', true);\n\tga.addQuery('final_value_date', '>=', gs.daysAgo(1));\n\tga.query();\n\twhile (ga.next()) {\n\t\tvar definition = {};\n\t\tvar gr = new GlideRecord('ml_solution_definition');\n\t\tif (!gr.get(ga.getValue('solution.solution_definition')))\n\t\t\tcontinue;\n\n\t\tdefinition.count = ga.getAggregate('COUNT', 'solution.solution_definition');\n\t\tdefinition.name = gr.getValue('solution_name');\n\t\tdefinition.label = gr.getValue('solution_label');\n\t\tsolution_definition.push(definition);\n    }\n    obj.solution_definition = solution_definition;\n\n\treturn obj;\n}\n\nfunction haveRequiredTables() {\n\treturn GlideTableDescriptor.isValid('ml_predictor_results') && GlideTableDescriptor.isValid('ml_solution') && GlideTableDescriptor.isValid('ml_solution_definition') && GlideTableDescriptor.isValid('ml_trainer_definition');\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"9ba4e37f04312210559073c06a02f7ac","definition_id":"DEF1000395","sys_updated_by":"system","exec_time_threshold":"200","sys_created_on":"2025-06-05 04:56:11","name":"CorrectPredictionsPerTemplate","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Average number of docked windows per user in Sidebar","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 06:08:21","kb_article_url":"","sys_tags":"","version":"","script":"if (!GlideTableDescriptor.isValid('sys_cs_collab_member')) {\n\tanswer = 0;\n} else {\n\tvar gr = new GlideAggregate('sys_cs_collab_member');\n\tgr.addEncodedQuery('frame_state!=closed^ORframe_state=NULL');\n\tgr.groupBy('member');\n\tgr.addAggregate('COUNT');  \n\tgr.query();\nif (!gr.hasNext()) {\n\tanswer = 0;\n} else {\n\tvar sum = 0;\n\twhile(gr.next()) {\n\t\tsum += parseInt(gr.getAggregate('COUNT'));\n\t}\n\tanswer = sum / gr.getRowCount();\n}\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"9c35737b04b52210559073c06a02f72f","definition_id":"DEFN1006671","sys_updated_by":"system","exec_time_threshold":"150000","sys_created_on":"2025-06-05 06:08:21","name":"getAvgNumberofWindowsPerMember","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Monthly Breakdown of MID Server Configuration [Pinned or Not]","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:14:16","kb_article_url":"","sys_tags":"","version":"","script":"answer = JSON.stringify(constructMIDConfig(\"mid.pinned.version\"));\n\nfunction isEmptyOrBlank(str) {\n    return (!str || (0 === str.length) || (/^\\s*$/.test(str)));\n}\n\nfunction constructMIDConfig(parameterName) {\n\n    // --------------- user defined criteria ----------------------------\n\n    var counterMap = {\n        // where mid.pinned.version is NO\n        \"not_pinned_count\": 0,\n        // where mid.pinned.version is YES\n        \"pinned_count\": 0,\n\n    };\n\n    function updateCountersAndReturnString(value) {\n        if (isEmptyOrBlank(value)) {\n            ++counterMap[\"not_pinned_count\"];\n            return \"No\";\n        } else {\n            ++counterMap[\"pinned_count\"];\n            return \"Yes\";\n        }\n    }\n\n    // ---------------------------------------------------------------------\n\n    var result = {};\n    var TABLE_ECC_AGENT = \"ecc_agent\";\n    var TABLE_ECC_AGENT_PROPERTY = \"ecc_agent_property\";\n    var TABLE_ECC_AGENT_CONFIG = \"ecc_agent_config\";\n\n    if (!GlideTableDescriptor.isValid(TABLE_ECC_AGENT))\n        return result;\n\n    if (!GlideTableDescriptor.isValid(TABLE_ECC_AGENT_CONFIG))\n        return result;\n\n    if (!GlideTableDescriptor.isValid(TABLE_ECC_AGENT_PROPERTY))\n        return result;\n\n    function getMIDConfigForSpecificMid(midRecord) {\n        var target = new GlideRecord(TABLE_ECC_AGENT_CONFIG);\n        target.addQuery(\"ecc_agent\", midRecord.sys_id);\n        target.addQuery(\"param_name\", parameterName);\n        target.query();\n        if (target.next())\n            return target.value.toString();\n        else\n            return \"\";\n    }\n\n    function updatePropertiesForAllMIDs(arrayOfMIDs, valueToBeOverridden, midSet) {\n        var overrideValue = !isEmptyOrBlank(valueToBeOverridden);\n        var midRecords = new GlideRecord(TABLE_ECC_AGENT);\n        midRecords.query();\n        while (midRecords.next()) {\n            var config = {};\n            var midName = midRecords.getDisplayValue();\n            var midAlreadyHasValue = Object.prototype.hasOwnProperty.call(midSet, midName);\n            if (!midAlreadyHasValue) {\n                config[\"name\"] = midName;\n                var propertyValue = overrideValue ? valueToBeOverridden : getMIDConfigForSpecificMid(midRecords);\n                config[parameterName] = updateCountersAndReturnString(propertyValue);\n                arrayOfMIDs.push(config);\n            }\n        }\n    }\n\n\n    function getMIDAgentProperties() {\n        var valueToBeAppliedToAllMIDs = \"\";\n        var arrayOfMIDs = [];\n        var midsAlreadyProcessed = {};\n\n        var agentProperty = new GlideRecord(TABLE_ECC_AGENT_PROPERTY);\n        agentProperty.addQuery(\"name\", parameterName);\n        agentProperty.query();\n        while (agentProperty.next()) {\n            var resultMap = {};\n            // if a record with specific MID exists\n            if (!agentProperty.ecc_agent.isNil()) {\n                var name = agentProperty.ecc_agent.getDisplayValue();\n                midsAlreadyProcessed[name] = true;\n                resultMap[\"name\"] = name;\n                resultMap[\"pinned\"] = updateCountersAndReturnString(agentProperty.value.toString());\n                arrayOfMIDs.push(resultMap);\n            } else\n            // agent property record for all mids exist\n                valueToBeAppliedToAllMIDs = agentProperty.value.toString();\n        }\n        updatePropertiesForAllMIDs(arrayOfMIDs, valueToBeAppliedToAllMIDs, midsAlreadyProcessed);\n\n        return arrayOfMIDs;\n    }\n\n    // datastructure to hold the mid config mappings\n    var arrayOfMappings = getMIDAgentProperties();\n    result[\"mid_config\"] = arrayOfMappings;\n    Object.keys(counterMap).forEach(function (key) {\n        result[key] = counterMap[key];\n    });\n    result[\"count\"] = arrayOfMappings.length;\n\n    return result;\n\n}\n\n\n","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"9cd8ef3704f12210559073c06a02f727","definition_id":"DEFN1001195","sys_updated_by":"system","exec_time_threshold":"100","sys_created_on":"2025-06-05 05:14:16","name":"Monthly Breakdown of MID Server Configuration [Pinned or Not]","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":" Number of requests with multiple RITMs in the last month","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:12:14","kb_article_url":"","sys_tags":"","version":"","script":"var gr = new GlideAggregate('sc_req_item');\nif(gr.isValid()) {\n    gr.addAggregate('COUNT','request');\n    gr.addEncodedQuery(\"sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()\");\n    gr.addHaving('COUNT','>=',2);\n    gr.query();\n    answer = gr.getRowCount();\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"9e5863b304f12210559073c06a02f7a1","definition_id":"DEFN1001987","sys_updated_by":"system","exec_time_threshold":"1000","sys_created_on":"2025-06-05 05:12:14","name":"Last Month Requests with multiple RITMs ","sys_created_by":"system"},{"definition_type":"","count_type":"Licensing","sys_mod_count":"0","active":"true","description":"Integration Hub license information on consumption of transaction","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 04:55:17","kb_article_url":"","sys_tags":"","version":"","script":"if (typeof SNC.UsageAnalyticsScriptUtils.canRouteToEMS == 'function' && SNC.UsageAnalyticsScriptUtils.canRouteToEMS())\n    answer = new IHUsageTrackerUtil().generateIHUsageCount(); //SMv2\nelse\n    answer = SNC.UsageAnalyticsScriptUtils.createIHLicensingDefnInfo(); //SMv1","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"9e74e7fb04312210559073c06a02f716","definition_id":"DEFN1001327","sys_updated_by":"system","exec_time_threshold":"200","sys_created_on":"2025-06-05 04:55:17","name":"IH Licensing consumption information","sys_created_by":"system"},{"definition_type":"","count_type":"Licensing","sys_mod_count":"0","active":"true","description":"Count of custom tables that directly extend task","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 04:55:17","kb_article_url":"","sys_tags":"","version":"","script":"// Count the number of custom(u_*) tables\n// that extend task directly\nvar cnt = 0;\nvar gr = new GlideRecord(\"sys_db_object\");\ngr.addQuery(\"name\", \"STARTSWITH\", \"u_\");\ngr.query();\nwhile(gr.next()) {\n\tvar extendsTableName = gr.super_class.name + '';\n\tif (extendsTableName == 'task' )\n\t\tcnt++;\n}\nanswer = cnt;","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"9e74e7fb04312210559073c06a02f719","definition_id":"DEF1000076","sys_updated_by":"system","exec_time_threshold":"","sys_created_on":"2025-06-05 04:55:17","name":"DirectTaskExtensions","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Total # of KB Views for Yesterday","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 04:55:17","kb_article_url":"","sys_tags":"","version":"","script":"var totalViews = 0;\nvar totalDistinctKBsViewed = 0;\n\nfunction getKBViewCounts() {\n\t\n\tvar kbTbl = \"kb_use\";\n\n\tif(!GlideTableDescriptor.isValid(kbTbl)) \n\t\treturn 0;\n\t\n\t var gr = new GlideAggregate(kbTbl);\n\t gr.addAggregate(\"SUM\", \"times_viewed\");\n\t gr.addAggregate(\"COUNT(DISTINCT\", \"article\");\n\t gr.addEncodedQuery(\"sys_created_onONYesterday@javascript:gs.daysAgoStart(1)@javascript:gs.daysAgoEnd(1)\");\n\t gr.setGroup(false);\n     gr.query();\n\n     if(gr.next()) {\n        \n\t\ttotalViews = JSUtil.nil(gr.getAggregate(\"SUM\", \"times_viewed\")) ? 0 : gr.getAggregate(\"SUM\", \"times_viewed\");\n\t\ttotalDistinctKBsViewed = JSUtil.nil(gr.getAggregate(\"COUNT(DISTINCT\", \"article\")) ? 0 : gr.getAggregate(\"COUNT(DISTINCT\", \"article\");\n\t\t \n\t }\n\t\n\treturn totalViews;\n}\n\nanswer = '{\"count\": \"' + getKBViewCounts() + '\",\"TotalDistinctKBsViewed\":\"' + totalDistinctKBsViewed + '\"}';\n","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"9e74e7fb04312210559073c06a02f72f","definition_id":"SMBEN100026","sys_updated_by":"system","exec_time_threshold":"0","sys_created_on":"2025-06-05 04:55:17","name":"Total # KB Views for Yesterday","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Returns a JSON with total number of finished predictions, finished predictions per template type, finished predictions per template record, and finished predictions per solution definition","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 04:56:11","kb_article_url":"","sys_tags":"","version":"","script":"answer = JSON.stringify(predictionsPerTemplate());\n\nfunction predictionsPerTemplate() {\n\tif (!haveRequiredTables())\n\t\treturn 0;\n\n\tvar obj = {};\n\n\t// Total finished prediction count\n\tvar count = 0;\n\tvar ga = new GlideAggregate('ml_predictor_results');\n\tga.addAggregate('COUNT');\n\tga.addQuery('final_value_date', '>=', gs.daysAgo(1));\n\tga.query();\n\tif (ga.next()) {\n\t\tcount = ga.getAggregate('COUNT');\n\t}\n\tobj.count = count;\n\n\t// Finished predictions per template type\n\tvar solution_capability = [];\n\tga = new GlideAggregate('ml_predictor_results');\n\tga.addAggregate('COUNT', 'solution.solution_definition.trainer.name');\n\tga.addQuery('final_value_date', '>=', gs.daysAgo(1));\n\tga.query();\n\twhile (ga.next()) {\n\t\tvar capability = {};\n\t\tcapability.count = ga.getAggregate('COUNT', 'solution.solution_definition.trainer.name');\n\t\tcapability.capability = ga.getValue('solution.solution_definition.trainer.name');\n\t\tsolution_capability.push(capability);\n\t}\n\tobj.solution_capability = solution_capability;\n\n\t// Finished predictions per template record\n\tvar solution_template = [];\n\tga = new GlideAggregate('ml_predictor_results');\n\tga.addAggregate('COUNT', 'solution.solution_definition.trainer');\n\tga.addQuery('final_value_date', '>=', gs.daysAgo(1));\n\tga.query();\n\twhile (ga.next()) {\n\t\tvar template = {};\n\t\tvar gr = new GlideRecord('ml_trainer_definition');\n\t\tif (!gr.get(ga.getValue('solution.solution_definition.trainer')))\n\t\t\tcontinue;\n\n\t\ttemplate.count = ga.getAggregate('COUNT', 'solution.solution_definition.trainer');\n\t\ttemplate.capability = gr.getValue('name');\n\t\ttemplate.label = gr.getValue('label');\n\t\ttemplate.version = gr.getValue('version');\n\t\tsolution_template.push(template);\n\t}\n\tobj.solution_template = solution_template;\n\n\t// Finished predictions per solution definition record\n\tvar solution_definition = [];\n   \tga = new GlideAggregate('ml_predictor_results');\n   \tga.addAggregate('COUNT', 'solution.solution_definition');\n\tga.addQuery('final_value_date', '>=', gs.daysAgo(1));\n\tga.query();\n\twhile (ga.next()) {\n\t\tvar definition = {};\n\t\tvar gr = new GlideRecord('ml_solution_definition');\n\t\tif (!gr.get(ga.getValue('solution.solution_definition')))\n\t\t\tcontinue;\n\n\t\tdefinition.count = ga.getAggregate('COUNT', 'solution.solution_definition');\n\t\tdefinition.name = gr.getValue('solution_name');\n\t\tdefinition.label = gr.getValue('solution_label');\n\t\tsolution_definition.push(definition);\n    }\n    obj.solution_definition = solution_definition;\n\n\treturn obj;\n}\n\nfunction haveRequiredTables() {\n\treturn GlideTableDescriptor.isValid('ml_predictor_results') && GlideTableDescriptor.isValid('ml_solution') && GlideTableDescriptor.isValid('ml_solution_definition') && GlideTableDescriptor.isValid('ml_trainer_definition');\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"9fa4e37f04312210559073c06a02f7a9","definition_id":"DEF1000396","sys_updated_by":"system","exec_time_threshold":"200","sys_created_on":"2025-06-05 04:56:11","name":"PredictionsPerTemplate","sys_created_by":"system"},{"definition_type":"production","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Return % of step completion of best practice \"Ensure automatic account creation\"","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 06:19:00","kb_article_url":"","sys_tags":"","version":"0","script":"answer = getStepCompletionPercentage('e473887943677110adf71f062bb8f2ee');\n\nfunction getStepCompletionPercentage(bestPracticeId){\nvar gr = new GlideRecord('sn_vsc_best_practice_configurations');\nif (gr.get(bestPracticeId)) {\n\tif (gr.getValue('status') == 'completed') {\n\t\tvar grSA = new GlideRecord('sys_audit');\n\t\tgrSA.addEncodedQuery('tablename=sn_vsc_best_practice_configurations^fieldname=status^sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()^newvalue=completed^documentkey=' + bestPracticeId);\n\t\tgrSA.query();\n\t\tif(grSA.hasNext()) {\n\t\t\tvar stepData = new sn_vsc.SCPlaybookUtil().getBPStepData(bestPracticeId);\n\t\t\treturn Math.round((stepData.completedSteps/stepData.totalSteps)*100,2);\n\t\t}\n\t}\n}\nreturn 0;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"a0a77fff04b52210559073c06a02f71a","definition_id":"DEFN1008200","sys_updated_by":"system","exec_time_threshold":"150000","sys_created_on":"2025-06-05 06:19:00","name":"stepsCompleted","sys_created_by":"system"},{"definition_type":"production","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Return % of step completion of best practice \"Limit accepted email sender domains\"","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 06:19:00","kb_article_url":"","sys_tags":"","version":"0","script":"answer = getStepCompletionPercentage('3023a5a543e37110adf71f062bb8f21f');\n\nfunction getStepCompletionPercentage(bestPracticeId){\nvar gr = new GlideRecord('sn_vsc_best_practice_configurations');\nif (gr.get(bestPracticeId)) {\n\tif (gr.getValue('status') == 'completed') {\n\t\tvar grSA = new GlideRecord('sys_audit');\n\t\tgrSA.addEncodedQuery('tablename=sn_vsc_best_practice_configurations^fieldname=status^sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()^newvalue=completed^documentkey=' + bestPracticeId);\n\t\tgrSA.query();\n\t\tif(grSA.hasNext()) {\n\t\t\tvar stepData = new sn_vsc.SCPlaybookUtil().getBPStepData(bestPracticeId);\n\t\t\treturn Math.round((stepData.completedSteps/stepData.totalSteps)*100,2);\n\t\t}\n\t}\n}\nreturn 0;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"a0a77fff04b52210559073c06a02f72d","definition_id":"DEFN1008184","sys_updated_by":"system","exec_time_threshold":"150000","sys_created_on":"2025-06-05 06:19:00","name":"stepsCompleted","sys_created_by":"system"},{"definition_type":"production","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Return % of step completion of best practice \"Install patches as soon as possible\"","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 06:19:00","kb_article_url":"","sys_tags":"","version":"0","script":"answer = getStepCompletionPercentage('73cf5b5643eb7110adf71f062bb8f24a');\n\nfunction getStepCompletionPercentage(bestPracticeId){\nvar gr = new GlideRecord('sn_vsc_best_practice_configurations');\nif (gr.get(bestPracticeId)) {\n\tif (gr.getValue('status') == 'completed') {\n\t\tvar grSA = new GlideRecord('sys_audit');\n\t\tgrSA.addEncodedQuery('tablename=sn_vsc_best_practice_configurations^fieldname=status^sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()^newvalue=completed^documentkey=' + bestPracticeId);\n\t\tgrSA.query();\n\t\tif(grSA.hasNext()) {\n\t\t\tvar stepData = new sn_vsc.SCPlaybookUtil().getBPStepData(bestPracticeId);\n\t\t\treturn Math.round((stepData.completedSteps/stepData.totalSteps)*100,2);\n\t\t}\n\t}\n}\nreturn 0;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"a4a77fff04b52210559073c06a02f718","definition_id":"DEFN1008197","sys_updated_by":"system","exec_time_threshold":"150000","sys_created_on":"2025-06-05 06:19:00","name":"stepsCompleted","sys_created_by":"system"},{"definition_type":"production","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Return % of step completion of best practice \"Enable table auditing for important or sensitive data\"","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 06:19:00","kb_article_url":"","sys_tags":"","version":"0","script":"answer = getStepCompletionPercentage('57b484f943677110adf71f062bb8f2e6');\n\nfunction getStepCompletionPercentage(bestPracticeId){\nvar gr = new GlideRecord('sn_vsc_best_practice_configurations');\nif (gr.get(bestPracticeId)) {\n\tif (gr.getValue('status') == 'completed') {\n\t\tvar grSA = new GlideRecord('sys_audit');\n\t\tgrSA.addEncodedQuery('tablename=sn_vsc_best_practice_configurations^fieldname=status^sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()^newvalue=completed^documentkey=' + bestPracticeId);\n\t\tgrSA.query();\n\t\tif(grSA.hasNext()) {\n\t\t\tvar stepData = new sn_vsc.SCPlaybookUtil().getBPStepData(bestPracticeId);\n\t\t\treturn Math.round((stepData.completedSteps/stepData.totalSteps)*100,2);\n\t\t}\n\t}\n}\nreturn 0;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"a4a77fff04b52210559073c06a02f72b","definition_id":"DEFN1008189","sys_updated_by":"system","exec_time_threshold":"150000","sys_created_on":"2025-06-05 06:19:00","name":"stepsCompleted","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Retrieves customer updated pa indicators","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:28:17","kb_article_url":"","sys_tags":"","version":"","script":"function getPAIndicators() {\n    var indicatorGR = new GlideRecord('sn_bm_common_indicator');\n\tindicatorGR.addActiveQuery();\n\tindicatorGR.query();\n\tvar indicators = [];\n\twhile(indicatorGR.next()) {\n\t\tindicators.push(indicatorGR.getValue('indicator'));\n\t}\n    return indicators;\n}\n\nfunction getUpdatedIndicators (indicators) {\n\tvar queryString = indicators.map(function(indicator_sys_id) {\n\t   return 'pa_indicators_' + indicator_sys_id;\n\t});\n\n\tvar updatedIndicators = [];\n\tvar sysUpdateXMLGR = new GlideRecord('sys_update_xml');\n    sysUpdateXMLGR.addQuery('type', 'Indicator');\n\tsysUpdateXMLGR.addQuery('name', 'IN', queryString);\n\tsysUpdateXMLGR.query();\n\twhile(sysUpdateXMLGR.next()) {\n\t\tupdatedIndicators.push(sysUpdateXMLGR.getValue('name').replace('pa_indicators_', ''));\n\t}\n\treturn updatedIndicators;\n}\n\nfunction getUpdatedIndicatorSources(indicators) {\n\tvar indicatorSources = [];\n\tvar paIndicatorsGR = new GlideRecord('pa_indicators');\n\tpaIndicatorsGR.addNotNullQuery('cube');\n\tpaIndicatorsGR.addQuery('sys_id', 'IN', indicators.join(','));\n    paIndicatorsGR.query();\n\twhile(paIndicatorsGR.next()) {\n\t\tindicatorSources.push(paIndicatorsGR.getValue('cube'));\n\t}\n\n\tvar queryString = indicatorSources.map(function(sys_id) {\n\t\treturn 'pa_cubes_' + sys_id;\n\t});\n    var updatedIndicatorSources = [];\n    var sysUpdateXMLGR = new GlideRecord('sys_update_xml');\n    sysUpdateXMLGR.addQuery('type', 'Indicator Source');\n    sysUpdateXMLGR.addQuery('name', 'IN', queryString);\n    sysUpdateXMLGR.query();\n\twhile(sysUpdateXMLGR.next()) {\n\t\tupdatedIndicatorSources.push(sysUpdateXMLGR.getValue('name').replace('pa_cubes_', ''));\n\t}\n    return updatedIndicatorSources;\n}\n\nvar pa_indicators = getPAIndicators();\nvar updatedIndicators = getUpdatedIndicators(pa_indicators);\nvar updatedIndicatorSources = getUpdatedIndicatorSources(pa_indicators);\nanswer = '{\"updated_pa_indicators\" : \"'+updatedIndicators.join(',')+'\", \"updated_indicator_sources\" : \"'+updatedIndicatorSources.join(',')+'\", \"count\" : \"'+updatedIndicators.length+'\"}';\n","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"a50ce3b704352210559073c06a02f7af","definition_id":"SMBEN100028","sys_updated_by":"system","exec_time_threshold":"200","sys_created_on":"2025-06-05 05:28:17","name":"GetMonthlyUpdatedBMPAIndicators","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"number of surveys defined that the survey content can be embedded in email","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:09:27","kb_article_url":"","sys_tags":"","version":"","script":"answer = getOAMSurvey();\n\n/*\n* Count the number of surveys that can be embedded in the Outlook email  \n* plugin com.sn_ms_oam needs to be installed, otherwise ms_adaptive_cards field doesn't exist.\n*/\nfunction getOAMSurvey() {\n    // check OAM Plugin installed\n    if (!GlidePluginManager.isActive(\"com.sn_ms_oam\"))\n        return 0;\n    \n    var count = 0;\n    var agg = new GlideAggregate('asmt_metric_type');\n\tif (!agg.isValid())\n\t\treturn 0;\n    agg.addEncodedQuery('evaluation_method=survey^active=true^notify_user=true^ms_adaptive_cards=true');\n    agg.addAggregate('COUNT');\n    agg.setWorkflow(false);\n    agg.query();\n          \n    if (agg.next())\n        count = agg.getAggregate('COUNT');\n\n    return count;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"a5b72f7f04b12210559073c06a02f7e8","definition_id":"DEFN1001513","sys_updated_by":"system","exec_time_threshold":"50","sys_created_on":"2025-06-05 05:09:27","name":"getOAMSurvey","sys_created_by":"system"},{"definition_type":"production","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Return % of step completed for BP \"Consider limiting file attachments, uploads and downloads\"","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 06:19:00","kb_article_url":"","sys_tags":"","version":"0","script":"answer = getStepCompletionPercentage('e87d979243eb7110adf71f062bb8f20b');\n\nfunction getStepCompletionPercentage(bestPracticeId){\nvar gr = new GlideRecord('sn_vsc_best_practice_configurations');\nif (gr.get(bestPracticeId)) {\n\tif (gr.getValue('status') == 'completed') {\n\t\tvar grSA = new GlideRecord('sys_audit');\n\t\tgrSA.addEncodedQuery('tablename=sn_vsc_best_practice_configurations^fieldname=status^sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()^newvalue=completed^documentkey=' + bestPracticeId);\n\t\tgrSA.query();\n\t\tif(grSA.hasNext()) {\n\t\t\tvar stepData = new sn_vsc.SCPlaybookUtil().getBPStepData(bestPracticeId);\n\t\t\treturn Math.round((stepData.completedSteps/stepData.totalSteps)*100,2);\n\t\t}\n\t}\n}\nreturn 0;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"a8a77fff04b52210559073c06a02f716","definition_id":"DEFN1008192","sys_updated_by":"system","exec_time_threshold":"150000","sys_created_on":"2025-06-05 06:19:00","name":"stepsCompleted","sys_created_by":"system"},{"definition_type":"production","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Return % of step completion of best practice \"Monitor security events\"","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 06:19:00","kb_article_url":"","sys_tags":"","version":"0","script":"answer = getStepCompletionPercentage('e216407d43677110adf71f062bb8f202');\n\nfunction getStepCompletionPercentage(bestPracticeId){\nvar gr = new GlideRecord('sn_vsc_best_practice_configurations');\nif (gr.get(bestPracticeId)) {\n\tif (gr.getValue('status') == 'completed') {\n\t\tvar grSA = new GlideRecord('sys_audit');\n\t\tgrSA.addEncodedQuery('tablename=sn_vsc_best_practice_configurations^fieldname=status^sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()^newvalue=completed^documentkey=' + bestPracticeId);\n\t\tgrSA.query();\n\t\tif(grSA.hasNext()) {\n\t\t\tvar stepData = new sn_vsc.SCPlaybookUtil().getBPStepData(bestPracticeId);\n\t\t\treturn Math.round((stepData.completedSteps/stepData.totalSteps)*100,2);\n\t\t}\n\t}\n}\nreturn 0;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"a8a77fff04b52210559073c06a02f729","definition_id":"DEFN1008182","sys_updated_by":"system","exec_time_threshold":"150000","sys_created_on":"2025-06-05 06:19:00","name":"stepsCompleted","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Count of content type of type Catalog linked to topics in EC taxonomy","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 06:13:24","kb_article_url":"","sys_tags":"","version":"","script":"function getTaxonomyId() {\n    var portalId = getECPortalId();\n    if (!portalId)\n        return;\n\n    var gr = new GlideRecord(\"m2m_sp_portal_taxonomy\");\n    if (!gr.isValid())\n        return;\n\n    gr.addActiveQuery();\n    gr.addQuery(\"sp_portal\", portalId);\n    gr.addQuery(\"taxonomy.active\", true);\n    gr.query();\n    while (gr.next())\n        return gr.taxonomy.toString();\n}\n\n\nfunction getECPortalId() {\n    var gr = new GlideRecord(\"sp_portal\");\n    gr.addActiveQuery();\n    gr.addQuery(\"sys_id\", \"70cd9f3b734b13001fdae9c54cf6a72f\");\n    gr.addOrCondition(\"url_suffix\", \"esc\");\n    gr.query();\n    while (gr.next())\n        return gr.sys_id.toString();\n}\n\nanswer = 0;\n\nvar gr = new GlideRecord(\"m2m_connected_content\");\nvar taxonomyId = getTaxonomyId();\nif (gr.isValid() && taxonomyId) {\n    gr.addQuery(\"content_type\", \"98f9a16553622010069addeeff7b1248\");\n    gr.query();\n    answer = gr.getRowCount();\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"aa56fbfb04b52210559073c06a02f74c","definition_id":"DEFN1005944","sys_updated_by":"system","exec_time_threshold":"10000","sys_created_on":"2025-06-05 06:13:24","name":"taxonomyCatalogContentTypeCount","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Track the usage of AIS Assist for Record Producers on Employee Center","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 06:13:24","kb_article_url":"","sys_tags":"","version":"","script":"answer = getAisaRpConfigs();\n\nfunction getAisaRpConfigs() {\n    var gr = new GlideRecord('sp_portal');\n    gr.get('70cd9f3b734b13001fdae9c54cf6a72f');\n    if (!gr.isValidRecord()) {\n        return 0;\n    }\n    if (gr.getValue('enable_ais') == '0') {\n        return 0;\n    }\n    var searchApp = gr.search_application;\n    if (gs.nil(searchApp)) {\n        return 0;\n    }\n    var searchProfile = searchApp.search_profile;\n    if (gs.nil(searchProfile) || searchProfile.active == '0' || searchProfile.state != 'PUBLISHED') {\n        return 0;\n    }\n    var ga = new GlideAggregate('aisa_rp_config');\n    ga.addQuery('active', true);\n    ga.addQuery('search_app', searchApp);\n    ga.addAggregate('COUNT');\n    ga.query();\n    if (ga.next()) {\n        return ga.getAggregate('COUNT');\n    }\n    return 0;\n}","sys_class_name":"ua_scripted_defn","run_scope":"sn_ex_sp","schedule":"Daily","sys_id":"aa56fbfb04b52210559073c06a02f74d","definition_id":"TESTDEFN1001588","sys_updated_by":"system","exec_time_threshold":"90000","sys_created_on":"2025-06-05 06:13:24","name":"aisAssistUsageInEC","sys_created_by":"system"},{"definition_type":"production","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Return % of step completion of best practice \"Use the Syslog Probe to send logs to your SIEM\"","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 06:19:00","kb_article_url":"","sys_tags":"","version":"0","script":"answer = getStepCompletionPercentage('bee0787543e77110adf71f062bb8f26f');\n\nfunction getStepCompletionPercentage(bestPracticeId){\nvar gr = new GlideRecord('sn_vsc_best_practice_configurations');\nif (gr.get(bestPracticeId)) {\n\tif (gr.getValue('status') == 'completed') {\n\t\tvar grSA = new GlideRecord('sys_audit');\n\t\tgrSA.addEncodedQuery('tablename=sn_vsc_best_practice_configurations^fieldname=status^sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()^newvalue=completed^documentkey=' + bestPracticeId);\n\t\tgrSA.query();\n\t\tif(grSA.hasNext()) {\n\t\t\tvar stepData = new sn_vsc.SCPlaybookUtil().getBPStepData(bestPracticeId);\n\t\t\treturn (stepData.completedSteps/stepData.totalSteps)*100;\n\t\t}\n\t}\n}\nreturn 0;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"aca77fff04b52210559073c06a02f714","definition_id":"DEFN1008172","sys_updated_by":"system","exec_time_threshold":"150000","sys_created_on":"2025-06-05 06:19:00","name":"stepsCompleted","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Script will return score of Hardening Score Indicator.","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 06:19:00","kb_article_url":"","sys_tags":"","version":"","script":"answer = getComplianceScore();\n\nfunction getComplianceScore() {\n    var sc = new SNC.PAScorecard();\n    sc.addParam('uuid', 'c725162518678110f877e53e0f01871f');\n    var result = sc.query();\n    return result[0].value;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"aca77fff04b52210559073c06a02f727","definition_id":"DEFN1006481","sys_updated_by":"system","exec_time_threshold":"100","sys_created_on":"2025-06-05 06:19:00","name":"GetComplianceScore","sys_created_by":"system"},{"definition_type":"production","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Percentage of Updates completed on or before duedate","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 06:19:00","kb_article_url":"","sys_tags":"","version":"0","script":"\n\t\t\tvar totalCompleted = 0;\nvar totalCompletedBefore = 0;\nvar gr = new GlideRecord(\"sn_critical_update\");\ngr.addEncodedQuery(\"up_active=true^up_update_status=acknowledged^sys_updated_onBETWEENjavascript:gs.beginningOfYesterday()@javascript:gs.endOfToday()\");\ngr.query();\nwhile (gr.next()) {\n    var duedate = new GlideDateTime(gr.up_due_date);\n    totalCompleted++;\n    if (gr.sys_updated_on <= duedate) {\n        totalCompletedBefore++;\n    }\n}\n\nif(totalCompleted == 0) {\n\tanswer = 0;\n} else {\n\tanswer = (totalCompletedBefore / totalCompleted) * 100;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"aca77fff04b52210559073c06a02f72e","definition_id":"DEFN1008038","sys_updated_by":"system","exec_time_threshold":"90000","sys_created_on":"2025-06-05 06:19:00","name":"Avg Updates completed on or before due date","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Calculates percentage of CIs in a CMDB processed via IRE","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:56:24","kb_article_url":"","sys_tags":"","version":"","script":"var using = 0;\nvar result = 0;\n\nvar baseQuery = 'chart.sub_category=cis_processed_by_ire^chart.feature=cmdb_feature_adoption^chart.category=data_ingestion^state=2^group_by=';\nvar usingIRE = 'using_ire';\nvar notUsingIRE = 'not_using_ire';\n\nvar gr = new GlideRecord('sn_cmdb_ws_base_aggregate_data');\ngr.addEncodedQuery(baseQuery + usingIRE);\ngr.query();\nif(gr.next()){\n\tusing = parseInt(gr.getValue(\"count\"));\n\n\tvar gr2 = new GlideRecord(\"sn_cmdb_ws_base_aggregate_data\");\n\tgr2.addEncodedQuery(baseQuery + notUsingIRE);\n\tgr2.query();\n\n\tvar notUsing = gr2.next() ? parseInt(gr2.getValue(\"count\")) : 0;\n\tresult = (using/(using+notUsing)).toFixed(2)*100;\n}\n\nanswer = result;","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"ad72373304b52210559073c06a02f765","definition_id":"DEFN1007758","sys_updated_by":"system","exec_time_threshold":"90000","sys_created_on":"2025-06-05 05:56:24","name":"CalculatePercentageIREProcessed","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Counts the number of server which are mapped to services","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 05:29:47","kb_article_url":"","sys_tags":"","version":"","script":"var ga = new GlideAggregate(\"svc_ci_assoc\");\nif(ga.isValid()) {\n  ga.addJoinQuery(\"cmdb_ci_server\",\"ci_id\",\"sys_id\");\n  ga.groupBy(\"ci_id\");\n  ga.query();\n  var mappedServersCnt = ga.getRowCount();\n  answer = mappedServersCnt;\n}\nelse {\n  answer = 0;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"af5ca73b04352210559073c06a02f724","definition_id":"DEFN1002814","sys_updated_by":"system","exec_time_threshold":"1000","sys_created_on":"2025-06-05 05:29:47","name":"CountServersMappedToServices","sys_created_by":"system"},{"definition_type":"","count_type":"Licensing","sys_mod_count":"0","active":"true","description":"Maximum count of Integration Hub transactions executed in any given month of the last 12 months","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:32:56","kb_article_url":"","sys_tags":"","version":"","script":"var aggregator = new OutboundUsageMetricsAggregator();\nvar sums = aggregator.getTransactionCountByMonth('sys_hub_step_instance', true);\nvar maxCount = 0;\nwhile (sums.next()) {\n  var currentCount = parseInt(sums.getAggregate('SUM', 'agg_value'));\n  if(currentCount > maxCount)\n    maxCount = currentCount;\n}\nanswer = maxCount;\n\n\n","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"b11d6f3f04352210559073c06a02f7d1","definition_id":"DEF1000401","sys_updated_by":"system","exec_time_threshold":"5000","sys_created_on":"2025-06-05 05:32:56","name":"outbound_usage_metrics_max_compliance","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Shifts with Rotate through members Escalation type","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:30:29","kb_article_url":"","sys_tags":"","version":"","script":"answer = getRotateThroughMemberShifts();\n\n/*\n* Count the number of shifts with Rotate through members Escalation type\n*/\nfunction getRotateThroughMemberShifts() {\n\tvar rowCount = 0;\n\tvar gr = new GlideRecord('cmn_rota');\n\tgr.setCategory(\"usage\");\n\tgr.addActiveQuery();\n\tgr.query();\n\n\twhile (gr.next()) {\n\t\tvar gr1 = new GlideRecord('cmn_rota_roster');\n\t\tgr1.setCategory(\"usage\");\n\t\tgr1.addActiveQuery();\n\t\tgr1.addQuery('rota', gr.sys_id);\n\t\tgr1.query();\n\t\tif (gr.use_custom_escalation == false && gr1.getRowCount() == 1)\n\t\t\trowCount++;\n\t}\n\treturn rowCount;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"b18c277b04352210559073c06a02f7d0","definition_id":"DEFN1002212","sys_updated_by":"system","exec_time_threshold":"5000","sys_created_on":"2025-06-05 05:30:29","name":"Shifts with Rotate through members Escalation type","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":" Total no.of single predictions confirmed as correct ","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:57:31","kb_article_url":"","sys_tags":"","version":"","script":"var encodedQuery = 'sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()^nlu_provider=64c023c17300330021a044764df6a70e';\nanswer = new sn_nlu_workbench.NLUPerformanceUtil().getAuditLogs('SINGLE_CORRECT', encodedQuery).length;","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"b5b2377304b52210559073c06a02f7c5","definition_id":"DEFN1006669","sys_updated_by":"system","exec_time_threshold":"150000","sys_created_on":"2025-06-05 05:57:31","name":"NLU Performance total coversation with single correct prediction of last month","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Count of the instances with a combination of IP , Role and Authentication scheme Filter Criteria","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:29:56","kb_article_url":"","sys_tags":"","version":"","script":"answer = getPolicyCountUsingIPRoleAuthSchemeFilters();\n\nfunction getPolicyCountUsingIPRoleAuthSchemeFilters() {\n    var record = new GlideAggregate('sys_authentication_policy_criteria_m2m');\n    record.addAggregate('COUNT');\n    record.groupBy('policy');\n    record.addQuery('used', 'true');\n    record.query();\n    \n    var count = 0;\n    \n    while (record.next()) {\n        //There must be atleast 3 filters criterias inorder to proceed with validation\n        if (record.getAggregate('COUNT') > 2) {\n            var gr = new GlideRecord('sys_authentication_policy_criteria_m2m');\n            gr.addQuery('policy', record.policy);\n            gr.addQuery('used', 'true');\n            gr.query();\n            var role_filter_count = 0,\n                ip_filter_count = 0,\n                auth_scheme_filter_count = 0;\n            while (gr.next()) {\n                if (gr.sys_auth_filter_criteria.sys_class_name == 'sys_role_filter_criteria')\n                    role_filter_count++;\n                else if (gr.sys_auth_filter_criteria.sys_class_name == 'sys_ip_filter_criteria')\n                    ip_filter_count++;\n                else if (gr.sys_auth_filter_criteria.sys_class_name == 'sys_generic_user_filter_criteria' && gr.sys_auth_filter_criteria.sys_id == '535de592c7312010df1417b703c26050')\n                    auth_scheme_filter_count++;\n            }\n            if (role_filter_count > 0 && ip_filter_count > 0 && auth_scheme_filter_count > 0)\n                count++;\n        }\n    }\n    return count;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"b96c2b3b04352210559073c06a02f7f3","definition_id":"DEFN1004566","sys_updated_by":"system","exec_time_threshold":"100","sys_created_on":"2025-06-05 05:29:56","name":"getPolicyCountUsingIPRoleAuthSchemeFilters","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Total no.of multiple prediction scenarios confirmed as correct","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:57:31","kb_article_url":"","sys_tags":"","version":"","script":"var encodedQuery = 'sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()^nlu_provider=64c023c17300330021a044764df6a70e';\nanswer = new sn_nlu_workbench.NLUPerformanceUtil().getAuditLogs('CORRECT_AMONG_MULTIPLE', encodedQuery).length;","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"b9b2377304b52210559073c06a02f7c3","definition_id":"DEFN1006668","sys_updated_by":"system","exec_time_threshold":"150000","sys_created_on":"2025-06-05 05:57:31","name":"NLU Performance total coversation with multiple correct prediction of last month","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Cumulative number of utterances for published models ","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 04:56:17","kb_article_url":"","sys_tags":"","version":"","script":"var count = 0;\nvar model, ga, query;\nvar gRec = new GlideRecord(\"sys_nlu_model_status\");\ngRec.addQuery('published_version', '>=' , '1');\ngRec.query();\nwhile (gRec.next()) {\n\tmodel = gRec.getValue('model');\n    query = 'intent.model.sys_id='+model;\n    ga = new GlideAggregate('sys_nlu_utterance');\n    ga.addAggregate('COUNT');\n    ga.addEncodedQuery(query);\n    ga.query();\n    if (ga.next()) {\n        count += parseInt(ga.getAggregate('COUNT'));\n    }\n}\nanswer = count;","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"bcb4a77f04312210559073c06a02f70d","definition_id":"DEFN1002073","sys_updated_by":"system","exec_time_threshold":"300","sys_created_on":"2025-06-05 04:56:17","name":"NoofUtterancesInPublishedNLUModels ","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Average IntegrationHub transactions in last 12 months.","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:32:57","kb_article_url":"","sys_tags":"","version":"","script":"var aggregator = new IHUsageMetricsAggregator();\nvar sums = aggregator.getTransactionCountByMonth(true);\nvar totalSum = 0;\nwhile (sums.next()) {  \n  totalSum = totalSum + parseInt(sums.getAggregate('SUM', 'use_count'), 10);\n}\nanswer = totalSum/12;","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"bd1daf3f04352210559073c06a02f701","definition_id":"DEFN1001266","sys_updated_by":"system","exec_time_threshold":"5000","sys_created_on":"2025-06-05 05:32:57","name":"ua_ih_usage_avg_compliance","sys_created_by":"system"},{"definition_type":"production","count_type":"Usage","sys_mod_count":"0","active":"true","description":"This definition will provide total cloud usage by the customers at instance level for \"Tier 1\" data .","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 05:54:14","kb_article_url":"","sys_tags":"","version":"0","script":" answer = getInstanceUsageDataForCloud();\n\n function getInstanceUsageDataForCloud() {\n     var cloudEntitlementDetailDAO = new sn_sub_man.CloudEntitlementDetailDAO();\n     var isSharedCapacityType = cloudEntitlementDetailDAO.isSharedCapacityType();\n     var instanceId = gs.getProperty('instance_id');\n\n     //these tables are for Tier 1 \n     var tableName = isSharedCapacityType ? \"sn_storage_pool_capacity\" : \"sn_storage_cloud_consumption\";\n     var gr = new GlideRecord(tableName);\n     gr.addQuery('instance_id', instanceId);\n     gr.query();\n     if (gr.next()) {\n         return gr.getValue('total_usage');\n     }\n     return 0;\n\n }","sys_class_name":"ua_scripted_defn","run_scope":"sn_sub_man","schedule":"Daily","sys_id":"bdf173bf04752210559073c06a02f767","definition_id":"DEFN1008287","sys_updated_by":"system","exec_time_threshold":"90000","sys_created_on":"2025-06-05 05:54:14","name":"Daily Cloud Usage at Instance Level","sys_created_by":"system"},{"definition_type":"production","count_type":"Licensing","sys_mod_count":"0","active":"true","description":"Looks at the last 30 daily aggregates of DEFN1008210 and returns the maximum value from among them, after converting original byte value into megabyte (1,000,000:1).","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 06:25:48","kb_article_url":"","sys_tags":"","version":"0","script":"var SOURCE_TABLE = 'data_egress_count';\nvar AGGREGATE_COLUMN = 'aggregation_value';\nvar AGGREGATE_OP = 'SUM';\nvar GROUP_BY_COLUMN = 'agg_period';\nvar RATIO = 1000000;\nvar DATA_EGRESS_DEBUG_PROPERTY = 'glide.data_egress.debug';\n\nfunction debugLog(message) {\n    if (gs.getProperty(DATA_EGRESS_DEBUG_PROPERTY) == 'true') {\n        gs.debug(message);\n    }\n}\n\nfunction logStats(aggregateStr, adjustedNum, hasError, errorMessage) {\n    try {\n        var logData = {\n            'error': hasError || false,\n            'errorMessage': errorMessage || '',\n            'volume': aggregateStr || '',\n            'adjusted': adjustedNum,\n            'start': gs.beginningOfLast30Days() || '',\n            'end': gs.endOfLast30Days() || ''\n        };\n\n        gs.info('DataEgress - Egress info: ' + JSON.stringify(logData));\n    } catch (e) {\n        gs.warn('DataEgress - Failed to generate debug object: ' + e);\n    }\n}\n\nanswer = (function() {\n    var ga = new GlideAggregate(SOURCE_TABLE);\n\n    // in the past 30 days, query for the day when sum of egress is highest\n    ga.addEncodedQuery('sys_created_onONLast 30 days@javascript:gs.beginningOfLast30Days()@javascript:gs.endOfLast30Days()');\n    ga.addAggregate(AGGREGATE_OP, AGGREGATE_COLUMN);\n    ga.orderByAggregate(AGGREGATE_OP, AGGREGATE_COLUMN);\n    ga.groupBy(GROUP_BY_COLUMN);\n    ga.query();\n\n    // no eligible egress traffic found\n    if (!ga.next()) {\n        debugLog('DataEgress - No record found');\n        logStats('Not found', 0, false);\n        return 0;\n    }\n\n    var maxValueStr = ga.getAggregate(AGGREGATE_OP, AGGREGATE_COLUMN);\n\n    // invalid aggregate value\n    if (maxValueStr == null) {\n        gs.error('DataEgress - Null aggregated value');\n        logStats('null', 0, true, 'Null aggregated value');\n        return 0;\n    }\n\n    var maxValueNum = Number(maxValueStr);\n\n    if (isNaN(maxValueNum)) {\n        gs.error('DataEgress - Invalid aggregated value: ' + maxValueStr);\n        logStats(maxValueStr, 0, true, 'Invalid aggregated value');\n        return 0;\n    }\n\n    var hasError = false;\n    var errorMessage = '';\n\n    // egress value exceeds max javascript integer value\n    if (maxValueNum > Number.MAX_SAFE_INTEGER) {\n        gs.warn('DataEgress - Egress volume exceeds safe parameters: ' + maxValueStr);\n        maxValueNum = Number.MAX_SAFE_INTEGER;\n        hasError = true;\n        errorMessage = 'Egress volume exceeds safe parameters';\n    }\n\n    var scaledMaxValue = Math.floor(maxValueNum / RATIO);\n\n    logStats(maxValueStr, scaledMaxValue, hasError, errorMessage);\n\n    // Set answer instead of logging for actual DEFN\n    return scaledMaxValue;\n})();","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"c039bff304f52210559073c06a02f735","definition_id":"DEFN1008232","sys_updated_by":"system","exec_time_threshold":"90000","sys_created_on":"2025-06-05 06:25:48","name":"Max Daily Data Egressed in Last 30 Days (MB)","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Automated Test Framework (ATF): Counts the number of active Standard UI form steps","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:17:20","kb_article_url":"","sys_tags":"","version":"","script":"var ga = new GlideAggregate('sys_atf_step');\nga.addActiveQuery();\nga.addQuery('step_config.category', '3c5c4dc20b202200a8d7a12cf6673a95');\nga.query();\nvar numSteps = 0;\nwhile (ga.next()) {\n    if (!ga.inputs.form_ui || ga.inputs.form_ui == 'standard_ui')\n        numSteps += 1;\n}\n\nanswer = numSteps;","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"c189e37b04f12210559073c06a02f79c","definition_id":"DEFN1003692","sys_updated_by":"system","exec_time_threshold":"10000","sys_created_on":"2025-06-05 05:17:20","name":"Automated Test Framework (ATF): Counts the number of active Standard UI form steps","sys_created_by":"system"},{"definition_type":"","count_type":"Licensing","sys_mod_count":"0","active":"true","description":"Count of custom tables that extend service_task","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 04:55:17","kb_article_url":"","sys_tags":"","version":"","script":"// Count the number of custom(u_*) tables \n// that extend service creator tables (service_task)\nvar cnt = 0;\nvar gr = new GlideRecord(\"sys_db_object\");\ngr.addQuery(\"name\", \"STARTSWITH\", \"u_\");\ngr.query();\nwhile(gr.next()) {\n\tvar tblName = gr.name;\n\tvar baseTbls = GlideDBObjectManager.getTables(tblName);\n\tif (baseTbls.indexOf('service_task') >= 0)\n\t\tcnt++;\n}\nanswer = cnt;","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"c274e7fb04312210559073c06a02f711","definition_id":"DEF1000077","sys_updated_by":"system","exec_time_threshold":"","sys_created_on":"2025-06-05 04:55:17","name":"ServiceTaskExtensions","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Returns tours start page,  list of all pages,  active, published for every tour","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:25:52","kb_article_url":"","sys_tags":"","version":"","script":"var gr = new GlideRecord('sys_embedded_tour_guide');\ngr.addEncodedQuery('sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()');\ngr.query();\nvar tourIDs = [], data = [];\nwhile (gr.next()) {\n  tourIDs.push({\n                tourId: gr.sys_id.toString(),\n                tourName: gr.name.toString(),\n                startPage: gr.context.toString() || '',\n                published: gr.status.toString() !== 'draft',\n                active: gr.active.toString(),\n                pageList: []\n              });\n}\n\ntourIDs.forEach(function(tour) {\n  data.push(getTourPageDetails(tour));\n});\n\nfunction getTourPageDetails(currentTour){\n  var tour = currentTour;\n  var currentPage = '', startPage = '', pageList = [];\n\n  var gr = new GlideRecord('sys_embedded_tour_step');\n  gr.addEncodedQuery('sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()');\n  gr.addQuery('guide.sys_id', tour.tourId);\n  gr.orderBy('order');\n  gr.query();\n\n  if(gr.rowCount() === 0)\n    return tour;\n\n  while (gr.next()) {\n    currentPage = gr.window.toString();\n    if (!startPage) {\n      tour.startPage = currentPage;\n      startPage = currentPage;\n    }\n\n    if (tour.pageList.indexOf(currentPage) === -1)\n      tour.pageList.push(currentPage);\n  }\n  return tour;\n}\n\nvar computedData = {count: data.length, data: data };\nanswer = new JSON().encode(computedData);","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"c27bafb304352210559073c06a02f78a","definition_id":"DEFN1000603","sys_updated_by":"system","exec_time_threshold":"5000","sys_created_on":"2025-06-05 05:25:52","name":"gtd_tour_pages","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Checking if versioning is installed and not enabled","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:10:38","kb_article_url":"","sys_tags":"","version":"","script":"var versioningInstalled = new SNC.KnowledgeHelper().isVersioningInstalled();\nif(versioningInstalled){\n\tanswer = (new SNC.KnowledgeHelper().isVersioningEnabled())? 0:1;\n}\nelse \nanswer = 0;","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"c3f7ebff04b12210559073c06a02f70d","definition_id":"DEF10057","sys_updated_by":"system","exec_time_threshold":"100","sys_created_on":"2025-06-05 05:10:38","name":"Versioning disabled check","sys_created_by":"system"},{"definition_type":"","count_type":"Licensing","sys_mod_count":"0","active":"true","description":"Count of all users with access to [301- 4000] tables under Enterprise SKU","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:18:54","kb_article_url":"","sys_tags":"","version":"","script":"answer = SNC.UACTScriptUtils.getUserCTAccessCount(301, 4000);","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"c4e9a7fb04f12210559073c06a02f76e","definition_id":"DEFN1002956","sys_updated_by":"system","exec_time_threshold":"2500","sys_created_on":"2025-06-05 05:18:54","name":"Monthly Count of all users with access to [301- 4000] tables under Enterprise SKU","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Count of licensed users with access to 11-25 custom tables","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:18:54","kb_article_url":"","sys_tags":"","version":"","script":"answer = SNC.UACTScriptUtils.getUserCTAccessCount(11, 25);","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"c4e9a7fb04f12210559073c06a02f76f","definition_id":"DEFN1001448","sys_updated_by":"system","exec_time_threshold":"500","sys_created_on":"2025-06-05 05:18:54","name":"Monthly Count of all users with access to [11 - 25] tables under\n\t\t\tStarter+ SKU","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Number of test runs that were started within the last 24 hours and were successful.\r\n\r\nTest results marked as Retain Indefinitely do not negatively impact this count.","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 05:17:20","kb_article_url":"","sys_tags":"","version":"","script":"var minutesAgo = 1440; // 24 hours\nvar testResultGR = new GlideAggregate('sys_atf_test_result');\ntestResultGR.addQuery('sys_created_on', '>=', gs.minutesAgo(minutesAgo));\ntestResultGR.addQuery('status', 'success');\ntestResultGR.query();\nanswer = testResultGR.getRowCount();","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"c589e37b04f12210559073c06a02f79a","definition_id":"DEFN1001305","sys_updated_by":"system","exec_time_threshold":"200","sys_created_on":"2025-06-05 05:17:20","name":"ATF: Test Results within the last 24 hours that were successful","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Time to relief for P0 INTs closed yesterday (in Minutes)","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 04:55:17","kb_article_url":"","sys_tags":"","version":"","script":"var totalTTRSecs = 0;\nvar totalTTRMins = 0;\n\nfunction getTTRForP0INTs() {\n\n\tvar incidentTbl = \"incident\";\n\n\tif(!GlideTableDescriptor.isValid(incidentTbl)) \n\t\treturn 0;\n\t\t\n\tvar grClosed = new GlideRecord(incidentTbl);\n\t//All INTs closed Yesterday\n\tgrClosed.addEncodedQuery(\"priority=0^closed_atONYesterday@javascript:gs.daysAgoStart(1)@javascript:gs.daysAgoEnd(1)^closed_atISNOTEMPTY\");\n\tgrClosed.query();\n\t\n\twhile (grClosed.next()) {\n\t\t\n\t\tvar opened = grClosed.getValue(\"opened_at\");\n        var closed = grClosed.getValue(\"closed_at\");\n        var ttr = gs.dateDiff(opened, closed, true);\n\t\t\n\t\ttotalTTRSecs += parseInt(ttr);\t\n\t\ttotalTTRMins += parseInt(ttr)/60;\n\t}\n\t\n\treturn Math.round(totalTTRMins);\n}\n\nanswer = '{\"count\": \"' + getTTRForP0INTs() + '\",\"TotalTTR(Seconds)\":\"' + totalTTRSecs + '\"}';\n","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"c674e7fb04312210559073c06a02f70e","definition_id":"SMBEN100010","sys_updated_by":"system","exec_time_threshold":"","sys_created_on":"2025-06-05 04:55:17","name":"TTR for P0 INTs closed yesterday - Minutes","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"# of goals aligned to more than one item","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 06:13:43","kb_article_url":"","sys_tags":"","version":"","script":"var countOfGoals = 0;\nvar gr = new GlideAggregate('sn_gf_goal_m2m_relationship');\ngr.setGroup(true);\ngr.groupBy(\"goal\");\ngr.addAggregate(\"COUNT\",\"sys_id\");\ngr.query();\nwhile(gr.next()){\n    var goalRelationships = gr.getAggregate(\"COUNT\",\"sys_id\");\n    if(goalRelationships > 1){\n        ++countOfGoals;\n    }\n}\nanswer = countOfGoals;","sys_class_name":"ua_scripted_defn","run_scope":"sn_gf","schedule":"Monthly","sys_id":"c766fffb04b52210559073c06a02f732","definition_id":"DEFN1004980","sys_updated_by":"system","exec_time_threshold":"1000","sys_created_on":"2025-06-05 06:13:43","name":"NumberOfGoalsAlignedToMoreThanOneItem","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"To check if versioning is installed","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:10:38","kb_article_url":"","sys_tags":"","version":"","script":"var isInstalled = new SNC.KnowledgeHelper().isVersioningInstalled();\n\nif(isInstalled)\n\tanswer = 1;\nelse\n\tanswer = 0;","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"c7f7ebff04b12210559073c06a02f70b","definition_id":"DEFN1000902","sys_updated_by":"system","exec_time_threshold":"100","sys_created_on":"2025-06-05 05:10:38","name":"Checking if versioning installed","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Time to Relief for P4 INTs closed yesterday (in Minutes)","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 04:55:17","kb_article_url":"","sys_tags":"","version":"","script":"var totalTTRSecs = 0;\nvar totalTTRMins = 0;\n\nfunction getTTRForP4INTs() {\n\n\tvar incidentTbl = \"incident\";\n\n\tif(!GlideTableDescriptor.isValid(incidentTbl)) \n\t\treturn 0;\n\t\t\n\tvar grClosed = new GlideRecord(incidentTbl);\n\t//All INTs closed yesterday\n\tgrClosed.addEncodedQuery(\"priority=4^closed_atONYesterday@javascript:gs.daysAgoStart(1)@javascript:gs.daysAgoEnd(1)^closed_atISNOTEMPTY\");\n\tgrClosed.query();\n\n\twhile (grClosed.next()) {\n\t\t\n\t\tvar opened = grClosed.getValue(\"opened_at\");\n        var closed = grClosed.getValue(\"closed_at\");\n        var ttr = gs.dateDiff(opened, closed, true);\n\t\t\n\t\ttotalTTRSecs += parseInt(ttr);\t\n\t\ttotalTTRMins += parseInt(ttr)/60;\n\t}\n\t\n\treturn Math.round(totalTTRMins);\n}\n\nanswer = '{\"count\": \"' + getTTRForP4INTs() + '\",\"TotalTTR(Seconds)\":\"' + totalTTRSecs + '\"}';\n","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"ca74e7fb04312210559073c06a02f706","definition_id":"SMBEN100014","sys_updated_by":"system","exec_time_threshold":"0","sys_created_on":"2025-06-05 04:55:17","name":"TTR For P4 INTs closed yesterday - Minutes","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"No of Knowledge Bases secured by can_ read and cannot_read user criteria","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:10:38","kb_article_url":"","sys_tags":"","version":"","script":"var kb_ids = [];\nvar gr = new GlideAggregate(\"kb_uc_can_read_mtom\");\ngr.addEncodedQuery(\"kb_knowledge_base.activeISNOTEMPTY\");\ngr.addAggregate('COUNT');\ngr.groupBy(\"kb_knowledge_base\");\ngr.query();\nwhile(gr.next()){\nkb_ids.push(gr.kb_knowledge_base + '');\n}\n\nvar gr2 = new GlideAggregate(\"kb_uc_cannot_read_mtom\");\ngr2.addEncodedQuery(\"kb_knowledge_base.activeISNOTEMPTY\");\ngr2.addAggregate('COUNT');\ngr2.groupBy(\"kb_knowledge_base\");\ngr2.query();\nwhile(gr2.next()){\nif(kb_ids.indexOf(gr2.kb_knowledge_base+'')==-1)\n    kb_ids.push(gr2.kb_knowledge_base + '');\n}\nanswer = kb_ids.length;","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"cbf7ebff04b12210559073c06a02f710","definition_id":"DEFN1000910","sys_updated_by":"system","exec_time_threshold":"100","sys_created_on":"2025-06-05 05:10:38","name":"KB_with_readORcannot_read_user_criteria","sys_created_by":"system"},{"definition_type":"production","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Total number of users who turned on NAP","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 06:16:31","kb_article_url":"","sys_tags":"","version":"0","script":"var answer;\nvar configUtil = new sn_nowassist_admin.NowAssistConfig();\nanswer = configUtil.isNowAssistPanelEnabled() ? 1 : 0;","sys_class_name":"ua_scripted_defn","run_scope":"sn_nowassist_admin","schedule":"Daily","sys_id":"cc1733bf04b52210559073c06a02f782","definition_id":"TESTDEFN1002580","sys_updated_by":"system","exec_time_threshold":"90000","sys_created_on":"2025-06-05 06:16:31","name":"Total number of users who turned on NowAssistPanel","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Time to Relief for P3 INTs closed yesterday (in Minutes)","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 04:55:17","kb_article_url":"","sys_tags":"","version":"","script":"var totalTTRSecs = 0;\nvar totalTTRMins = 0;\n\nfunction getTTRForP3INTs() {\n\n\tvar incidentTbl = \"incident\";\n\n\tif(!GlideTableDescriptor.isValid(incidentTbl)) \n\t\treturn 0;\n\t\t\n\tvar grClosed = new GlideRecord(incidentTbl);\n\t//All INTs closed yesterday\n\tgrClosed.addEncodedQuery(\"priority=3^closed_atONYesterday@javascript:gs.daysAgoStart(1)@javascript:gs.daysAgoEnd(1)^closed_atISNOTEMPTY\");\n\tgrClosed.query();\n\n\twhile (grClosed.next()) {\n\t\t\n\t\t\n\t\tvar opened = grClosed.getValue(\"opened_at\");\n        var closed = grClosed.getValue(\"closed_at\");\n        var ttr = gs.dateDiff(opened, closed, true);\n\t\t\n\t\ttotalTTRSecs += parseInt(ttr);\t\n\t\ttotalTTRMins += parseInt(ttr)/60;\n\t}\n\t\n\treturn Math.round(totalTTRMins);\n}\n\nanswer = '{\"count\": \"' + getTTRForP3INTs() + '\",\"TotalTTR(Seconds)\":\"' + totalTTRSecs + '\"}';","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"ce74e7fb04312210559073c06a02f70a","definition_id":"SMBEN100013","sys_updated_by":"system","exec_time_threshold":"0","sys_created_on":"2025-06-05 04:55:17","name":"TTR For P3 INTs closed yesterday - Minutes","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Primary DB size of this instance (in MB)","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 04:55:17","kb_article_url":"","sys_tags":"","version":"","script":"var gr = new GlideRecord('ua_instance_state');\ngr.query();\n\nvar dbSize = 0;\n\nif (gr.next()) {\n\tvar dbSize = gr.getValue('primary_db_size_mb');\n\tif (JSUtil.nil(dbSize))\n\t\tdbSize = 0;\n}\n\nanswer = dbSize;","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"ce74e7fb04312210559073c06a02f712","definition_id":"DEFN1000622","sys_updated_by":"system","exec_time_threshold":"50","sys_created_on":"2025-06-05 04:55:17","name":"Primary DB size (MB)","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Returns a page that exists more than one tour. ","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:25:52","kb_article_url":"","sys_tags":"","version":"","script":"/*\n {\n pagename, tourNames, activeCount, publishedCount\n}\nExample:\n{\"count\":1,\"data\":[{\"activeCount\":1,\"pageName\":\"sn_hiring_question.do\",\"publishedCount\":0,\"tourCount\":2,\"tourNames\":[\"Hiring Event Questions\",\"Hiring Event Questions Global\"]}]}\n\n*/\n\nvar gr = new GlideRecord('sys_embedded_tour_step');\ngr.addEncodedQuery('sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()');\ngr.orderBy('window');\ngr.query();\n\nvar currentPage = '', previousPage = '', page, data = [], currentTour = '';\nwhile (gr.next()) {\n    currentPage = gr.window.toString();\n    currentTour = gr.guide.name.toString();\n    currentTourId = gr.guide.sys_id.toString();\n\n    if (currentPage !== previousPage) {\n        previousPage = currentPage;\n        if (page && page.tourNames.length > 1) {\n\n            page.tourCount = page.tourNames.length;\n            page.tourNames = undefined;\n            data.push(page);\n        }\n        page = {};\n\n        page.pageName = currentPage;\n        page.tourNames = [currentTour];\n        page.activeCount = gr.guide.active.toString() === 'true' ? 1 : 0;\n        page.publishedCount = gr.guide.status.toString() !== 'draft' ? 1: 0;\n        page.tours = [{tourName:currentTour, tourId: currentTourId}];\n\n    } else {\n        if (page.tourNames.indexOf(currentTour) === -1) {\n            page.tourNames.push(currentTour);\n             page.tours.push({tourName:currentTour, tourId: currentTourId});\n            page.activeCount = gr.guide.active.toString() === 'true' ? page.activeCount + 1 : page.activeCount;\n            page.publishedCount = gr.guide.status.toString() !== 'draft' ? page.publishedCount+1 : page.publishedCount;\n        }\n    }\n}\n\nif (page && page.tourNames.length > 1) {\n    page.tourCount = page.tourNames.length;\n    page.tourNames = undefined;\n    data.push(page);\n}\n\nvar computedData = {count: data.length, data: data };\nanswer = new JSON().encode(computedData);\n\n","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"ce7bafb304352210559073c06a02f78b","definition_id":"DEFN1000609","sys_updated_by":"system","exec_time_threshold":"5000","sys_created_on":"2025-06-05 05:25:52","name":"gtd_page_on_multipletours","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"average click rank in last 30 days","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:10:38","kb_article_url":"","sys_tags":"","version":"","script":"var record = new GlideAggregate('ts_query_kb');\nrecord.addAggregate('AVG', 'top_click_rank');\nrecord.addQuery('sys_created_on', '>=', gs.daysAgo(30));\nrecord.setGroup(false);\nrecord.query();\nvar result=0;\nif (record.next()) {\n   result = record.getAggregate('AVG', 'top_click_rank') || 0;\n}\nanswer = result;","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"cff7ebff04b12210559073c06a02f70e","definition_id":"DEFN1001310","sys_updated_by":"system","exec_time_threshold":"100","sys_created_on":"2025-06-05 05:10:38","name":"avgClickRankInLast30days","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"ITSM Only Requests & RequestTasks in last 30 days\n\t\t","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 05:07:43","kb_article_url":"","sys_tags":"","version":"","script":"/** ITSM Problem & ProblemTasks in last 30 days\n* CSM REQs and REQ tasks daily: DEFN1003909\n* ITSM REQs Daily: DEFN1003902\n* ITSM REQ tasks Daily: DEFN1003907*/\n\nanswer = getTotalITSMReqs();\n\nfunction getTotalITSMReqs() {\n\tvar csmReqDefn = 'DEFN1003909';\n\tvar reqDefn = 'DEFN1003902';\n\tvar reqTaskDefn = 'DEFN1003907';\n\n\tvar csmTotal = getAggCountLast30Days(csmReqDefn);\n\tvar reqTotal = getAggCountLast30Days(reqDefn);\n\tvar reqTaskTotal = getAggCountLast30Days(reqTaskDefn);\n\t\n\treturn (parseInt(reqTotal) + parseInt(reqTaskTotal) - parseInt(csmTotal));\t\n}\n\nfunction getAggCountLast30Days(defId) {\n\t\n\tif (gs.nil(defId)) return 0;\n\t\n\tvar encQuery = gs.getMessage(\"definition_id={0}^time_stampBETWEENjavascript:gs.beginningOfLast30Days()@javascript:gs.endOfLast30Days()\", defId);\n\tvar ga = new GlideAggregate(\"usageanalytics_count\");\n\t\tga.addEncodedQuery(encQuery);\n\t\tga.addAggregate(\"SUM\", \"count\");\n\t\tga.setGroup(false);\n\t\tga.query();\n\t\twhile(ga.next()) {\n\t\t\treturn ga.getAggregate(\"SUM\", \"count\");\n\t\t}\n\t\n\treturn 0;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"d057afbb04b12210559073c06a02f706","definition_id":"DEFN1003929","sys_updated_by":"system","exec_time_threshold":"1000","sys_created_on":"2025-06-05 05:07:43","name":"ITSM Only Requests & RequestTasks in last 30 days","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Get an aggregation of last month's unique active logged in users across all supported channels","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 06:05:53","kb_article_url":"","sys_tags":"","version":"","script":"var DEBUG = false;\nvar DEBUG_MODE = ''; \nvar USER_ID_CHUNK_SIZE = 200;\nvar INSTANCE_ANALYZER_MODE = false;\nvar DATE_RANGE = {\n    last_month: 'sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()'\n};\nvar CURRENT_RANGE = DATE_RANGE.last_month;\nvar UNKNOWN_CHANNEL_GRADUATION_THRESHOLD = 3000;\nvar UNKNOWN_CHANNEL_PREFIX = '_custom-';\nvar OTHER_CUSTOM_CHANNEL_NAME = 'custom-other';\n\nvar CHANNEL_ALIASES = {\n    'null': {alias: 'mweb', regex: null},\n    '': {alias: 'mweb', regex: null},\n    'mweb': {alias: 'mweb', regex: null},\n    'sd_chat': {alias: 'mweb', regex: null},\n    'hr_chat': {alias: 'mweb', regex: null},\n    'netid/netid+ (duo)': {alias: 'mweb', regex: null},\n    'general inquiry': {alias: 'mweb', regex: new RegExp('general inquiry')},\n    'general information': {alias: 'mweb', regex: new RegExp('general information')},\n    'incident': {alias: 'mweb', regex: null},\n    'teams': {alias: 'teams', regex: null},\n    'microsoft teams': {alias: 'teams', regex: new RegExp('microsoft teams')},\n    'microsoft teams chat': {alias: 'teams', regex: new RegExp('microsoft teams chat')},\n    'ms teams': {alias: 'teams', regex: new RegExp('ms teams')},\n    'teams chat': {alias: 'teams', regex: new RegExp('teams chat')},\n    'microsoft_teams_chat': {alias: 'teams', regex: new RegExp('microsoft_teams_chat')},\n    'microsoft teams-chat': {alias: 'teams', regex: new RegExp('microsoft teams-chat')},\n    'slack': {alias: 'slack', regex: new RegExp('slack')},\n    'bot to bot': {alias: 'bot to bot', regex: null},\n    'bot-to-bot': {alias: 'bot to bot', regex: new RegExp('bot-to-bot')},\n    'whatsapp': {alias: 'whatsapp', regex: new RegExp('whatsapp')},\n    'facebook messenger': {alias: 'facebook messenger', regex: null},\n    'workplace': {alias: 'workplace', regex: null},\n    'sms': {alias: 'sms', regex: null},\n    'zoom team chat': {alias: 'custom-zoom', regex: new RegExp('zoom team chat')},\n    'zoom chat': {alias: 'custom-zoom', regex: new RegExp('zoom chat')},\n    'google assistant': {alias: 'google assistant', regex: null},\n    'alexa': {alias: 'alexa', regex: null},\n    'google business messages': {alias: 'google business messages', regex: new RegExp('google business messages')},\n    'apple messages for business': {alias: 'apple messages for business', regex: new RegExp('apple business chat')},\n    'blipproviderchatchannel': {alias: 'custom-blip', regex: null},\n    'blip channel': {alias: 'custom-blip', regex: null},\n    'espressive': {alias: 'custom-espressive', regex: null}\n};\n\nvar mapUserNamesToIds = {};\nvar usrsByChannel = {};\n\nfunction convertUserNamesToIds(channelUserIdMap) {\n    if (!channelUserIdMap || Object.keys(channelUserIdMap) == 0) return {};\n    var newUserNames = [];\n    for (channel in channelUserIdMap) {\n        var unames = channelUserIdMap[channel];\n        if (unames) {\n            for (i in unames) {\n                if (!mapUserNamesToIds[unames[i]]) {\n                    newUserNames.push(unames[i]);\n                }\n            }\n        }\n    }\n    if (newUserNames.length > 0) {\n        if (DEBUG) {\n            gs.info('translating ' + newUserNames.length + ' user names, in chunks of ' + USER_ID_CHUNK_SIZE);\n        }\n        for (var i = 0; i < newUserNames.length; i += USER_ID_CHUNK_SIZE) {\n            var userNamesChunk = newUserNames.slice(i, i + USER_ID_CHUNK_SIZE);\n            var grUser = new GlideRecord('sys_user');\n            grUser.addQuery(\"user_name\", \"IN\", userNamesChunk);\n            grUser.query();\n            while(grUser.next()){\n                mapUserNamesToIds[grUser.user_name] = grUser.getValue('sys_id');\n            }\n        }\n        if (DEBUG) {\n            if (DEBUG_MODE === 'verbose') {\n                gs.info('translated name<>id map : ' + JSON.stringify(mapUserNamesToIds));\n            }\n            gs.info('completed ' + newUserNames.length + ' user names translation');\n        }\n    }\n    for (channel in channelUserIdMap) {\n        var unames = channelUserIdMap[channel];\n        if (unames) {\n            for (i in unames) {\n                unames[i] = mapUserNamesToIds[unames[i]];\n            }\n        }\n    }\n    if (DEBUG) {\n        if (DEBUG_MODE === 'verbose') {\n            gs.info('translated map : ' + JSON.stringify(channelUserIdMap));\n        }\n    }\n    return channelUserIdMap;\n}\n\nfunction isValidField(rec, fieldName) {\n    if (fieldName.indexOf('.') == -1) {\n        var validf = rec.isValidField(fieldName);\n        if (DEBUG && !validf) {\n            gs.info('detected invalid field : ' + fieldName);\n        }\n        return validf;\n    }\n    return true;\n}\n\nfunction getUniqueUsers(desc, tableName, encodedQuery, groupingAttribute1, groupingAttribute2) {\n    var hasTwoLevelGrouping = !groupingAttribute1.startsWith('{');\n    var displayValues = {};\n    var grAgg = new GlideAggregate(tableName);\n    if (!grAgg.isValid() || !isValidField(grAgg, groupingAttribute2)) {\n        return displayValues;\n    }\n    if (hasTwoLevelGrouping) {\n        if (!isValidField(grAgg, groupingAttribute1)) {\n            return displayValues;\n        }\n        grAgg.groupBy(groupingAttribute1);\n    }\n    grAgg.groupBy(groupingAttribute2);\n    grAgg.addEncodedQuery(encodedQuery);\n    grAgg.query();\n    var userCount = 0;\n    while (grAgg.next()) {\n        var groupingVal = hasTwoLevelGrouping ? \n            grAgg.getDisplayValue(groupingAttribute1) + '' : \n            groupingAttribute1.substring(1 , groupingAttribute1.length-1);\n        groupingVal = groupingVal.toLowerCase().trim();\n        // apply alias if applicable\n        groupingVal = getAlias(groupingVal) || UNKNOWN_CHANNEL_PREFIX + groupingVal;\n        if (!displayValues[groupingVal]) {\n            displayValues[groupingVal] = [];\n        }\n        userCount++;\n        displayValues[groupingVal].push(grAgg.getValue(groupingAttribute2) + '');\n    }\n    if (DEBUG) {\n        if (DEBUG_MODE === 'verbose') {\n            gs.info(desc + ' : ' + JSON.stringify(displayValues));\n        } else {\n            gs.info(desc+ ' : Found ' + userCount + ' users across ' + Object.keys(displayValues).length + ' channels');\n        }\n    }\n    return displayValues;\n}\n\nfunction getAlias(channelName) {\n    // Handle exact match\n    if (CHANNEL_ALIASES[channelName]) {\n        return CHANNEL_ALIASES[channelName].alias;\n    }\n    // Handle pattern match\n    for(patternName in CHANNEL_ALIASES) {\n        var regEx = CHANNEL_ALIASES[patternName].regex;\n        if (regEx && regEx.test(channelName)) {\n            return CHANNEL_ALIASES[patternName].alias;\n        }\n    }\n    return null;\n}\n\nfunction getUniqueCountByChannel(targetMap) {\n    var result = {};\n    var unknownChannelMap = {};\n    unknownChannelMap[OTHER_CUSTOM_CHANNEL_NAME] = [];\n    Array.prototype.unique = function() {\n        return this.filter(function(value, index, self) {\n            return self.indexOf(value) === index;\n        });\n    };\n    for (key in targetMap) {\n        var channelUniqueUsers = [];\n        var channelUsers = targetMap[key];\n        if (channelUsers !== undefined && channelUsers.length > 0) {\n            channelUniqueUsers = channelUsers.unique();\n            // If current channel is a custom type and doesn't meet graduation threshold, merge to custom bucket\n            if (key.startsWith(UNKNOWN_CHANNEL_PREFIX) && channelUniqueUsers.length < UNKNOWN_CHANNEL_GRADUATION_THRESHOLD) {\n                unknownChannelMap[OTHER_CUSTOM_CHANNEL_NAME] = unknownChannelMap[OTHER_CUSTOM_CHANNEL_NAME].concat(targetMap[key]);\n                continue;\n            } \n        }\n        result[key] = channelUniqueUsers.length;\n    }\n    for (key in unknownChannelMap) {\n        var uChannelUniqueUsers = [];\n        var uChannelUsers = unknownChannelMap[key];\n        if (uChannelUsers !== undefined && uChannelUsers.length > 0) {\n            uChannelUniqueUsers = uChannelUsers.unique();\n        }\n        if (uChannelUniqueUsers.length > 0 ) {\n            result[key] = uChannelUniqueUsers.length;\n        }\n    }\n    return result;\n}\n\nfunction mergeResults(targetMap, sourceMap) {\n    if (sourceMap) {\n        for (key in sourceMap) {\n            if (targetMap[key]) {\n                targetMap[key] = targetMap[key].concat(sourceMap[key]);\n            } else {\n                targetMap[key] = sourceMap[key];\n            }\n        }\n    }\n}\n\nfunction getGuestUserId() {\n    var grUser = new GlideRecord('sys_user');\n    grUser.addQuery(\"user_name\", \"guest\");\n    grUser.query();\n    while(grUser.next()){\n        return grUser.getValue(\"sys_id\");\n    }\n    return null;\n}\n\nfunction getUsersForNotif(encodedQuery) {\n    var results = {};\n    try {\n        var grMO = new GlideRecord('messaging_outbound');\n        if (grMO.isValid()){\n            grMO.addEncodedQuery(encodedQuery);\n            grMO.query();\n            while (grMO.next()) {\n                var channelType = grMO.messaging_application.provider;\n                if (!channelType) continue;\n                var channelKey = 'notif-' + channelType;\n                var payloadStr = grMO.getValue('payload');\n                if (!payloadStr) continue;\n                var payload = JSON.parse(payloadStr);\n                var recipientId = payload.recipient && payload.recipient.id;\n                if (recipientId) {\n                    if(!results[channelKey]) {\n                        results[channelKey] = [];\n                    }\n                    results[channelKey].push(recipientId);\n                }\n            }\n        }\n    } catch(ex) {\n        if (DEBUG) {\n            gs.info('exception processing notif : ' + ex.message);\n        }\n        results['notif-error'] = 'exception'; //dummy value to track exception key\n    }\n    return results;\n}\n\nfunction getScriptDefinitionAggData(uniqueCountByChannel) {\n    var totalCount = 0;\n    var dataArray = [];\n    if (uniqueCountByChannel) {\n        for (key in uniqueCountByChannel) {\n            var data = {};\n            var channelCount = uniqueCountByChannel[key];\n            if (!channelCount) continue;\n            totalCount += channelCount;\n            data['sys_domain'] = 'global'; \n            data['group1'] = key;\n            data['group_by'] = \"channel_name\";\n            data['agg_val'] = channelCount;\n            data['agg_type'] = 'sum';\n            data['agg_col'] = 'user_id';\n            dataArray.push(data); \n        }\n    }\n    return {\"count\": totalCount, \"ua_defn_agg\": dataArray};\n}\n\nvar answer = {};\ntry {\n    var guestUserId = this.getGuestUserId();\n    if (DEBUG) {\n        gs.info('guest user id : ' + guestUserId);\n    }\n\n    /* notif */\n    /* indexes avail on sys_created_on, consumer_account */\n    this.mergeResults(usrsByChannel, this.getUniqueUsers(\n        'va notifications (push or actionable)',\n        'sys_cs_notification',\n        'consumer_account.channel_user_profile.channel!=null^' + CURRENT_RANGE,\n        'consumer_account.channel_user_profile.channel.name',\n        'consumer_account.channel_user_profile.user_document'\n    ));\n\n    if (!guestUserId && DEBUG) {\n        gs.info(JSON.stringify({ \"warning\": \"no guest user found\" }));\n    }\n    var guestUserClause = 'opened_for!=null' + (!guestUserId ? '' : '^opened_for!=' + guestUserId) + '^';\n\n    /* interactions for caf-based provider channels */\n    /* indexes avail on sys_created_on, channel_user_profile */\n    this.mergeResults(usrsByChannel, this.getUniqueUsers(\n        'Chat/Messaging provider channel based channel interactions',\n        'interaction',\n        guestUserClause + 'provider_application!=null^typeINchat,messaging^channel_user_profile!=null^' + CURRENT_RANGE,\n        'channel_user_profile.channel.name',\n        'opened_for'\n    ));\n\n    /* interactions for web/mobile */\n    /* indexes avail on sys_created_on, provider_application */\n    this.mergeResults(usrsByChannel, this.getUniqueUsers(\n        'Chat/Messaging non-provider channel based channel interactions',\n        'interaction',\n        guestUserClause + 'provider_application=null^typeINchat,messaging^subtype!=null^' + CURRENT_RANGE,\n        'subtype',\n        'opened_for'\n    ));\n\n    /* interactions for ad-hoc channel integfrations */\n    /* indexes avail on sys_created_on, provider_application */\n    var OBSERVED_INTERACTION_TYPES = [\n        'microsoft_teams_chat',\n        'zoom_chat'\n    ];\n    this.mergeResults(usrsByChannel, this.getUniqueUsers(\n        'Custom non-provider channel based channel interactions',\n        'interaction',\n        guestUserClause + 'provider_application=null^typeIN' + OBSERVED_INTERACTION_TYPES.join(',') + '^' + CURRENT_RANGE,\n        'type',\n        'opened_for'\n    ));\n\n    /* collab chat */\n    /* indexes avail on provider */\n    this.mergeResults(usrsByChannel, this.convertUserNamesToIds(this.getUniqueUsers(\n        'collab chat',\n        'sys_cs_external_collab_chat_message_map',\n        'provider!=null^context_id!=null^status!=Error^' + CURRENT_RANGE,\n        'provider.channel.name',\n        'sys_created_by'\n    )));\n\n    /* sn_now_teams_usage */\n    /* indexes avail on source_user */\n    var OBSERVED_TEAMS_EVENTS_W_SOURCE_USER = [\n        'agent.initiated.chat', //Number of agents initiating Teams chats\n        'comment.replied', //Number of users responding to comments\n        'approval.replied', //Number of users approving from Microsoft Teams\n        'approval.sent', //Number of users receiving approval notifications\n        'comment.sent' //Number of users receiving comment\n    ];\n    this.mergeResults(usrsByChannel, this.getUniqueUsers(\n        'teams chat : Teams events (source user)',\n        'sn_now_teams_usage',\n        'source_user!=undefined^source_user!=null^event_nameIN' + OBSERVED_TEAMS_EVENTS_W_SOURCE_USER.join(',') + '^' + CURRENT_RANGE,\n        '{Teams}',\n        'source_user'\n    ));\n\n    /* sn_now_teams_usage */\n    /* indexes avail on target_user */\n    var OBSERVED_TEAMS_EVENTS_W_TARGET_USER = [\n        'agent.initiated.chat' //Number of agents initiating Teams chats\n    ];\n    this.mergeResults(usrsByChannel, this.getUniqueUsers(\n        'teams chat : Teams events (target user)',\n        'sn_now_teams_usage',\n        'target_user!=undefined^target_user!=null^event_nameIN' + OBSERVED_TEAMS_EVENTS_W_TARGET_USER.join(',') + '^' + CURRENT_RANGE,\n        '{Teams}',\n        'target_user'\n    ));\n\n    /* sn_notify_msteams_interaction_call_usage */\n    /* indexes avail on interaction_opened_by_user */\n    this.mergeResults(usrsByChannel, this.getUniqueUsers(\n        'teams chat : No of users who transitioned to Teams call',\n        'sn_notify_msteams_interaction_call_usage',\n        'interaction_opened_by_user!=null^' + CURRENT_RANGE,\n        '{Teams}',\n        'interaction_opened_by_user'\n    ));\n\n    /* notify_conference_call */\n    /* indexes avail on user,notify_conference_call */\n    this.mergeResults(usrsByChannel, this.getUniqueUsers(\n        'teams chat : Total Number of Notify Conferences related to Teams',\n        'notify_participant',\n        'user!=null^notify_conference_call.service_provider=Microsoft Teams^' + CURRENT_RANGE,\n        '{Teams}',\n        'user'\n    ));\n\n    /* sn_now_azure_usage */\n    /* indexes avail on user */\n    var OBSERVED_AZURE_EVENTS = [\n        'dashboard.viewed', //Usage of Employee Center dashboard in Teams\n        'viva.quickview.viewed' //Usage of Employee Center dashboard in Teams VIVA\n    ];\n    this.mergeResults(usrsByChannel, this.getUniqueUsers(\n        'teams chat : Usage of Employee Center dashboard in Teams with distinct user count',\n        'sn_now_azure_usage',\n        'user!=null^event_nameIN' + OBSERVED_AZURE_EVENTS.join(',') + '^' + CURRENT_RANGE,\n        '{Teams}',\n        'user'\n    ));\n\n    /* non-va outbound notifications */\n    this.mergeResults(usrsByChannel, this.getUsersForNotif(\n        'messaging_application.providerINteams,slack^' + CURRENT_RANGE\n    ));\n\n    var uniqueUserCounResultMap = this.getUniqueCountByChannel(usrsByChannel);\n    if (INSTANCE_ANALYZER_MODE) {\n        answer = JSON.stringify(uniqueUserCounResultMap);\n    } else {\n        answer = JSON.stringify(this.getScriptDefinitionAggData(uniqueUserCounResultMap));\n    }\n} catch(e) {\n    gs.info(JSON.stringify({ \"error\": e.message }));\n}\nif (INSTANCE_ANALYZER_MODE) {\n    gs.info(answer);\n} else {\n    answer;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"d0a4f3f704b52210559073c06a02f788","definition_id":"DEFN1007681","sys_updated_by":"system","exec_time_threshold":"150000","sys_created_on":"2025-06-05 06:05:53","name":"uniqueUserCountByChannel","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"false","description":"Sum of automated workflow activities for available Items in service catalog","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 04:55:17","kb_article_url":"","sys_tags":"","version":"","script":"answer = getSumOfAutomatedWorkflows();\n\n\n// 1. find all catalog items that are assigned workflows\nfunction getSumOfAutomatedWorkflows() {\n\tif (!GlideTableDescriptor.isValid('sc_cat_item'))\n\t\treturn 0;\n\t\n\tvar gr = new GlideRecord(\"sc_cat_item\");\n\tgr.addNotNullQuery(\"workflow\");\n\tgr.query();\n\t\n\t// create a collection of versions\n\tvar versions = [];\n\t\n\twhile (gr.next()) {\n\t\tvar version = getVersionId(gr.workflow);\n\t\tif (JSUtil.nil(version))\n\t\t\tcontinue;\n\t\t\n\t\t// see if workflow ask for user interaction\n\t\tvar humanInteractionCount =  wfHasHumanInteraction();\n\t\tif (JSUtil.nil(version))\n\t\t\tcontinue;\n\t\t\n\t\t// collect info in obj\n\t\tvar itemStatus = {};\n\t\titemStatus.workflow = gr.workflow + '';\n\t\titemStatus.name = gr.name + '';\n\t\titemStatus.version = version;\n\t\titemStatus.humanInteractionCount = humanInteractionCount;\t\n\t\tversions.push(itemStatus);\n\t}\n\t\n\tvar sum = 0;\n\tfor(var i = 0; i < versions.length; i++) {\n\t\tsum = sum + versions[i].humanInteractionCount;\n\t}\n\treturn sum;\n}\n\n// 2. for each workflow get the latest version, published version\nfunction getVersionId(workflowID) {\n\tif (!GlideTableDescriptor.isValid('wf_workflow_version'))\n\t\treturn '';\n\t\n\tvar versionGR = new GlideRecord('wf_workflow_version');\n\tversionGR.addQuery('published', true);\n\tversionGR.addQuery('workflow', workflowID);\n\tversionGR.query();\n\t\n\tif (versionGR.next())\n\t\treturn versionGR.sys_id;\n}\n\n// 3. see if there are any tasks or approvals - if so it needs humans\n//group approval\nfunction wfHasHumanInteraction(versionId) {\n\tif (!GlideTableDescriptor.isValid('wf_activity'))\n\t\treturn '';\n\t\n\t//enumerate activities that require humans\n\tvar activityList = '354e911f0a0a029a00e6a0e6ad74206f,'+  //group approval\n\t'35433da80a0a029a0028c639a1e51eb,' + //approval user\n\t'283e8bb80a2581021d036a052ffc3433,' + //approval coordinator\n\t'533e39330a6a803f54a9619525b0a7e7,' + //manual approval\n\t'38891b6f0a0a0b1e00efdfdd77602027,'+ // catalog task\n\t'9f4d1be5c0a8016400043d34ce066316'; // create task\n\t\n\tvar grActivity = new GlideRecord('wf_activity');\n\tgrActivity.addQuery('activity_definition', 'IN', activityList);\n\tgrActivity.addQuery('workflow_version', versionId);\n\tgrActivity.query();\n\t\n\treturn grActivity.getRowCount();\n\t\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"d274e7fb04312210559073c06a02f71c","definition_id":"DEF1000112","sys_updated_by":"system","exec_time_threshold":"","sys_created_on":"2025-06-05 04:55:17","name":"GetSumOfAutomatedWorkflows","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"<p>Number of predictions made by Agent Intelligence per month</p>","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 04:56:11","kb_article_url":"","sys_tags":"","version":"","script":"answer = getMonthlyPredictionsCount();\n\nfunction getMonthlyPredictionsCount() {\n\tvar totalCount = 0;\n\tvar previous_month = gs.beginningOfLastMonth().slice(0, 7);\n\t\n\tif(!hasRequiredTableAndColumns())\n\t\treturn 0;\n\t\n\tvar gr = new GlideRecord('ua_event_stat');\n\tgr.addQuery('event_id', 'ml.predictions');\n\tgr.addQuery('time_stamp', previous_month);\n\tgr.query();\n\tif (gr.next())\n\t   totalCount = gr.event_count;\n\treturn totalCount;\n}\n\nfunction hasRequiredTableAndColumns() {\n\treturn GlideTableDescriptor.isValid('ua_event_stat') && \n\t\tGlideTableDescriptor.fieldExists('ua_event_stat', 'event_id') &&\n\t\tGlideTableDescriptor.fieldExists('ua_event_stat', 'time_stamp') &&\n\t\tGlideTableDescriptor.fieldExists('ua_event_stat', 'event_count');\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"d3a4e37f04312210559073c06a02f7ac","definition_id":"DEFN1000629","sys_updated_by":"system","exec_time_threshold":"100","sys_created_on":"2025-06-05 04:56:11","name":"Monthly Predictions Count","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Monthly Breakdown of MID Server Configuration [SSH Technology - J2SSH vs. SNCSSH]","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:14:16","kb_article_url":"","sys_tags":"","version":"","script":"answer = JSON.stringify(constructMIDConfig(\"mid.ssh.use_snc\"));\n\nfunction isEmptyOrBlank(str) {\n    return (!str || (0 === str.length) || (/^\\s*$/.test(str)));\n}\n\nfunction constructMIDConfig(parameterName) {\n\n    // --------------- user defined criteria ----------------------------\n\n    var counterMap = {\n        // where mid.ssh.use_snc is blank or empty\n        \"default_count\": 0,\n        // where mid.ssh.use_snc is false\n        \"explicit_j2ssh_count\": 0,\n        // where mid.ssh.use_snc is true\n        \"explicit_sncssh_count\": 0,\n        // where mid.ssh.use_snc is some other weird value not true, false, or blank\n        \"other_value_count\": 0\n    };\n\n    function updateCountersAndReturnString(value) {\n        var lower = value.toLowerCase();\n        if (lower == \"true\")\n            ++counterMap[\"explicit_sncssh_count\"];\n        else if (lower == \"false\")\n            ++counterMap[\"explicit_j2ssh_count\"];\n        else if (isEmptyOrBlank(lower))\n            ++counterMap[\"default_count\"];\n        else\n            ++counterMap[\"other_value_count\"];\n        return lower + \"\";\n    }\n\n    // ---------------------------------------------------------------------\n\n    var result = {};\n    var TABLE_ECC_AGENT = \"ecc_agent\";\n    var TABLE_ECC_AGENT_PROPERTY = \"ecc_agent_property\";\n    var TABLE_ECC_AGENT_CONFIG = \"ecc_agent_config\";\n\n    if (!GlideTableDescriptor.isValid(TABLE_ECC_AGENT))\n        return result;\n\n    if (!GlideTableDescriptor.isValid(TABLE_ECC_AGENT_CONFIG))\n        return result;\n\n    if (!GlideTableDescriptor.isValid(TABLE_ECC_AGENT_PROPERTY))\n        return result;\n\n    function getMIDConfigForSpecificMid(midRecord) {\n        var target = new GlideRecord(TABLE_ECC_AGENT_CONFIG);\n        target.addQuery(\"ecc_agent\", midRecord.sys_id);\n        target.addQuery(\"param_name\", parameterName);\n        target.query();\n        if (target.next())\n            return target.value.toString();\n        else\n            return \"\";\n    }\n\n    function updatePropertiesForAllMIDs(arrayOfMIDs, valueToBeOverridden, midSet) {\n        var overrideValue = !isEmptyOrBlank(valueToBeOverridden);\n        var midRecords = new GlideRecord(TABLE_ECC_AGENT);\n        midRecords.query();\n        while (midRecords.next()) {\n            var config = {};\n            var midName = midRecords.getDisplayValue();\n            var midAlreadyHasValue = Object.prototype.hasOwnProperty.call(midSet, midName);\n            if (!midAlreadyHasValue) {\n                config[\"name\"] = midName;\n                var propertyValue = overrideValue ? valueToBeOverridden : getMIDConfigForSpecificMid(midRecords);\n                config[parameterName] = updateCountersAndReturnString(propertyValue);\n                arrayOfMIDs.push(config);\n            }\n        }\n    }\n\n\n    function getMIDAgentProperties() {\n        var valueToBeAppliedToAllMIDs = \"\";\n        var arrayOfMIDs = [];\n        var midsAlreadyProcessed = {};\n\n        var agentProperty = new GlideRecord(TABLE_ECC_AGENT_PROPERTY);\n        agentProperty.addQuery(\"name\", parameterName);\n        agentProperty.query();\n        while (agentProperty.next()) {\n            var resultMap = {};\n            // if a record with specific MID exists\n            if (!agentProperty.ecc_agent.isNil()) {\n                var name = agentProperty.ecc_agent.getDisplayValue();\n                midsAlreadyProcessed[name] = true;\n                resultMap[\"name\"] = name;\n                resultMap[parameterName] = updateCountersAndReturnString(agentProperty.value.toString());\n                arrayOfMIDs.push(resultMap);\n            } else\n            // agent property record for all mids exist\n                valueToBeAppliedToAllMIDs = agentProperty.value.toString();\n        }\n        updatePropertiesForAllMIDs(arrayOfMIDs, valueToBeAppliedToAllMIDs, midsAlreadyProcessed);\n\n        return arrayOfMIDs;\n    }\n\n    // datastructure to hold the mid config mappings\n    var arrayOfMappings = getMIDAgentProperties();\n    result[\"mid_config\"] = arrayOfMappings;\n    Object.keys(counterMap).forEach(function (key) {\n        result[key] = counterMap[key];\n    })\n    result[\"count\"] = arrayOfMappings.length;\n\n    return result;\n\n}\n\n\n","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"d4d8ef3704f12210559073c06a02f726","definition_id":"DEFN1001192","sys_updated_by":"system","exec_time_threshold":"100","sys_created_on":"2025-06-05 05:14:16","name":"Monthly Breakdown of MID Server Configuration [SSH Technology - J2SSH vs. SNCSSH]","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Get the count of how many MID servers have the nmap capability","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:14:16","kb_article_url":"","sys_tags":"","version":"","script":"answer = JSON.stringify(constructNmapCapabilityJSON());\n\nfunction constructNmapCapabilityJSON() {\n\tvar result = {};\n\t\n\tif (!GlideTableDescriptor.isValid('ecc_agent'))\n\t\treturn result;\n\t\t\n\tif (!GlideTableDescriptor.isValid('ecc_agent_capability'))\n\t\treturn result;\n\t\n\tif (!GlideTableDescriptor.isValid('ecc_agent_capability_m2m'))\n\t\treturn result;\n\t\n\tvar NAME = 'name';\n\tvar VALUE = 'value';\n\tvar AGENT = 'agent';\n\tvar CAPABILITY = 'capability';\n\tvar NMAP_CAPABLE = 'nmap_capable';\n\t\n\tvar capabilityGr = new GlideRecord('ecc_agent_capability');\n\tcapabilityGr.addQuery(CAPABILITY, 'nmap');\n\tcapabilityGr.query();\n\tvar nmapCapExists = capabilityGr.next();\n\tvar nmapCapSysId;\n\tif (nmapCapExists)\n\t\tnmapCapSysId = capabilityGr.getUniqueValue();\n\t\n\tvar total_count = 0;\n\tvar nmap_capable_count = 0;\n\tvar arrayOfMappings = [];\n\t\n\tvar agentGr = new GlideRecord('ecc_agent');\n\tagentGr.query();\n\twhile (agentGr.next()) {\n\t\tvar mapping = {};\n\t\tmapping[NAME] = agentGr.getValue(NAME);\n\t\tif (nmapCapExists) {\n\t\t\tvar midSysId = agentGr.getUniqueValue();\n\t\t\n\t\t\tvar capabilitym2mGr = new GlideRecord('ecc_agent_capability_m2m');\n\t\t\tcapabilitym2mGr.addQuery(AGENT, midSysId);\n\t\t\tcapabilitym2mGr.addQuery(CAPABILITY, nmapCapSysId);\n\t\t\tcapabilitym2mGr.query();\n\t\t\n\t\t\tvar nmap_capable;\n\t\t\tif (capabilitym2mGr.getRowCount() > 0) {\n\t\t\t\tnmap_capable_count++;\n\t\t\t\tnmap_capable = 'true';\n\t\t\t} else\n\t\t\t\tnmap_capable = 'false';\n\t\t\t\t\n\t\t\tmapping[NMAP_CAPABLE] = nmap_capable;\n\t\t} else\n\t\t\tmapping[NMAP_CAPABLE] = 'N/A';\n\t\t\n\t\tarrayOfMappings.push(mapping);\n\t\ttotal_count++;\n\t}\n\t\n\tresult['mid_config'] = arrayOfMappings;\n\tresult['nmap_capable_count'] = nmap_capable_count;\n\tresult['count'] = total_count;\n\t\n\treturn result;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"d4d8ef3704f12210559073c06a02f727","definition_id":"DEFN1001202","sys_updated_by":"system","exec_time_threshold":"1000","sys_created_on":"2025-06-05 05:14:16","name":"Monthly Breakdown of MID Server Configuration [NMAP Capable or Not]","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Count the number of active catalog items that use an SFS flow as the designated flow","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:35:39","kb_article_url":"","sys_tags":"","version":"","script":"\nvar gr = new GlideAggregate('sc_cat_item');\ngr.addQuery('sys_class_name', 'sc_cat_item');\ngr.addActiveQuery();\nvar qc = gr.addJoinQuery('sc_service_fulfillment_flow_registry', 'flow_designer_flow', 'service_fulfillment_flow');\nqc.addCondition('active', 'true');\ngr.addAggregate('COUNT');\ngr.setWorkflow(false);\ngr.query();\nanswer = gr.getCount();","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"d5bd633304752210559073c06a02f715","definition_id":"DEFN1007646","sys_updated_by":"system","exec_time_threshold":"10000","sys_created_on":"2025-06-05 05:35:39","name":"Count the number of active catalog items that use an SFS flow as the designated flow","sys_created_by":"system"},{"definition_type":"production","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Max number of comments/work notes per incident","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:32:22","kb_article_url":"","sys_tags":"","version":"0","script":"answer = getMaxCommentsOrWorknotes();\nfunction getMaxCommentsOrWorknotes() {\n    var maxCommentsOrWnPerInc = 0;\n    var sysjournalGA = new GlideAggregate('sys_journal_field');\n    if (sysjournalGA.isValid()) {\n        sysjournalGA.addQuery('sys_created_on', '>=', 'javascript:gs.beginningOfLastMonth()');\n        sysjournalGA.addQuery('sys_created_on', '<', 'javascript:gs.beginningOfThisMonth()');\n        sysjournalGA.addQuery('name', '=', 'incident');\n        sysjournalGA.addQuery('element', 'IN', 'comments,work_notes');\n        sysjournalGA.addAggregate('COUNT', 'element_id');\n        sysjournalGA.orderByAggregate('COUNT', 'element_id');\n        sysjournalGA.setWorkflow(false);\n        sysjournalGA.query();\n        if (sysjournalGA.next())\n            maxCommentsOrWnPerInc = Number(sysjournalGA.getAggregate('COUNT', 'element_id'));\n    }\n    return maxCommentsOrWnPerInc;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"d5fca33f04352210559073c06a02f787","definition_id":"DEFN1008098","sys_updated_by":"system","exec_time_threshold":"900000","sys_created_on":"2025-06-05 05:32:22","name":"Max number of comments/work notes per incident","sys_created_by":"system"},{"definition_type":"","count_type":"Licensing","sys_mod_count":"0","active":"true","description":"Info about PA indicators with active jobs that generated scores last month","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 04:55:17","kb_article_url":"","sys_tags":"","version":"","script":"answer = SNC.UsageAnalyticsScriptUtils.getMonthlyPAIndicatorData();","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"d674e7fb04312210559073c06a02f723","definition_id":"DEF1000176","sys_updated_by":"system","exec_time_threshold":"","sys_created_on":"2025-06-05 04:55:17","name":"GetMonthlyPAIndicatorData","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Number of usage records generated last month","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 04:55:17","kb_article_url":"","sys_tags":"","version":"","script":"// get the accrualPeriod of last month in internal dateformat\nvar accrualPeriod =  gs.beginningOfLastMonth().substring(0,7);\nanswer = -1;\nvar tableName = 'ua_app_usage';\nif (GlideTableDescriptor.isValid(tableName)) {\n\tvar gr = new GlideRecord(tableName);\n\tgr.addQuery('time_stamp', accrualPeriod);\n\tgr.query();\n\tanswer = gr.getRowCount();\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"d674e7fb04312210559073c06a02f730","definition_id":"DEF1000117","sys_updated_by":"system","exec_time_threshold":"","sys_created_on":"2025-06-05 04:55:17","name":"Monthly usage record count","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Number of total transactions in ua_ct_usage for each month excluding the ones for exempted, grandfathered and bundled tables","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 04:55:17","kb_article_url":"","sys_tags":"","version":"","script":"var prevMonth = SNC.UsageAnalyticsScriptUtils.getLastMonthAccrualTimeStamp();\n\nvar exemptedTableNames = [];\nvar exemptedTableGr = new GlideRecord('ua_exempted_table_inventory');\nexemptedTableGr.query();\nwhile(exemptedTableGr.next())\n\texemptedTableNames.push(exemptedTableGr.getValue('table_name'));\n\n\nvar allotedCustomTables = [];\nvar customTableGr = new GlideRecord('ua_custom_table_inventory');\nvar qc = customTableGr.addQuery('allotment_type',2);\nqc.addOrCondition('allotment_type',3);\ncustomTableGr.query();\nwhile(customTableGr.next())\n\tallotedCustomTables.push(customTableGr.getValue('table_name'));\n\n\nvar tablesList = exemptedTableNames.concat(allotedCustomTables);\nvar totalSum = 0;\n\nvar ctUsageGr = new GlideAggregate('ua_ct_usage');\nctUsageGr.addQuery('time_stamp', prevMonth);\nctUsageGr.addQuery('table_name','NOT IN',tablesList);\nctUsageGr.addAggregate('SUM', 'insert_count');\nctUsageGr.addAggregate('SUM', 'update_count');\nctUsageGr.addAggregate('SUM', 'delete_count');\nctUsageGr.query();\nwhile (ctUsageGr.next()) {\n\tvar insertCount = parseInt((ctUsageGr.getAggregate('SUM', 'insert_count') == '')? 0 : ctUsageGr.getAggregate('SUM', 'insert_count'));\n\tvar updateCount = parseInt((ctUsageGr.getAggregate('SUM', 'update_count') == '')? 0 : ctUsageGr.getAggregate('SUM', 'update_count'));\n\tvar deleteCount = parseInt((ctUsageGr.getAggregate('SUM', 'delete_count') == '')? 0 : ctUsageGr.getAggregate('SUM', 'delete_count'));\n\n\ttotalSum = totalSum + insertCount + updateCount + deleteCount;\n}\n\nanswer = totalSum;","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"d674e7fb04312210559073c06a02f73c","definition_id":"DEFN1002143","sys_updated_by":"system","exec_time_threshold":"100","sys_created_on":"2025-06-05 04:55:17","name":"Number of custom table transactions","sys_created_by":"system"},{"definition_type":"","count_type":"Licensing","sys_mod_count":"0","active":"true","description":"Count of Discovered Devices in last 90 days","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 04:55:18","kb_article_url":"","sys_tags":"","version":"","script":"var countGr = new GlideRecord(\"itom_lu_definition_usage_count\");\n\t\tcountGr.addQuery(\"name\",\"hardware\");\n\t\tcountGr.query();\n\t\tanswer = countGr.next() ? countGr.getValue('count') : 0;","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"d674e7fb04312210559073c06a02f767","definition_id":"DEF1000149","sys_updated_by":"system","exec_time_threshold":"10000","sys_created_on":"2025-06-05 04:55:18","name":"cmdb_ci_hardware","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Returns a JSON with total number of trained solutions, trained solutions per template type, and trained solutions per template record","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 04:56:11","kb_article_url":"","sys_tags":"","version":"","script":"answer = JSON.stringify(trainedSolutionsPerTemplate());\n\nfunction trainedSolutionsPerTemplate() {\n\tif (!haveRequiredTables())\n\t\treturn 0;\n\n\tvar obj = {};\n\n\t// Total trained solution count\n\tvar count = 0;\n\tvar ga = new GlideAggregate('ml_solution');\n\tga.addAggregate('COUNT');\n\tga.addQuery('state', 'solution_complete');\n\tga.addQuery('sys_created_on', '>=', gs.daysAgo(1));\n\tga.query();\n\tif (ga.next()) {\n\t\tcount = ga.getAggregate('COUNT');\n\t}\n\tobj.count = count;\n\n\t// Trained solutions per template type\n\tvar solution_capability = [];\n\tga = new GlideAggregate('ml_solution');\n\tga.addAggregate('COUNT', 'solution_definition.trainer.name');\n\tga.addQuery('state', 'solution_complete');\n\tga.addQuery('sys_created_on', '>=', gs.daysAgo(1));\n\tga.query();\n\twhile (ga.next()) {\n\t\tvar capability = {};\n\t\tcapability.count = ga.getAggregate('COUNT', 'solution_definition.trainer.name');\n\t\tcapability.capability = ga.getValue('solution_definition.trainer.name');\n\t\tsolution_capability.push(capability);\n\t}\n\tobj.solution_capability = solution_capability;\n\n\t// Trained solutions per template record\n\tvar solution_template = [];\n\tga = new GlideAggregate('ml_solution');\n\tga.addAggregate('COUNT', 'solution_definition.trainer');\n\tga.addQuery('state', 'solution_complete');\n\tga.addQuery('sys_created_on', '>=', gs.daysAgo(1));\n\tga.query();\n\twhile (ga.next()) {\n\t\tvar template = {};\n\t\tvar gr = new GlideRecord('ml_trainer_definition');\n\t\tif (!gr.get(ga.getValue('solution_definition.trainer')))\n\t\t\tcontinue;\n\n\t\ttemplate.count = ga.getAggregate('COUNT', 'solution_definition.trainer');\n\t\ttemplate.capability = gr.getValue('name');\n\t\ttemplate.label = gr.getValue('label');\n\t\ttemplate.version = gr.getValue('version');\n\t\tsolution_template.push(template);\n\t}\n\tobj.solution_template = solution_template;\n\n\treturn obj;\n}\n\nfunction haveRequiredTables() {\n\treturn GlideTableDescriptor.isValid('ml_solution') && GlideTableDescriptor.isValid('ml_solution_definition') && GlideTableDescriptor.isValid('ml_trainer_definition');\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"d7a4e37f04312210559073c06a02f7a9","definition_id":"DEF1000392","sys_updated_by":"system","exec_time_threshold":"200","sys_created_on":"2025-06-05 04:56:11","name":"TrainedSolutionsPerTemplate","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Time To Relief ForAll INTs in Minutes","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 04:55:17","kb_article_url":"","sys_tags":"","version":"","script":"var totalTTRSecs = 0;\nvar totalTTRMins = 0;\n\nfunction getTTRForAllInts() {\n\t\n\tvar incidentTbl = \"incident\";\n\n\tif(!GlideTableDescriptor.isValid(incidentTbl)) \n\t\treturn 0;\n\t\n\tvar grClosed = new GlideRecord(incidentTbl);\n\t//All INTs closed yesterday\n\tgrClosed.addEncodedQuery(\"closed_atONYesterday@javascript:gs.daysAgoStart(1)@javascript:gs.daysAgoEnd(1)^closed_atISNOTEMPTY\");\n\tgrClosed.query();\n\t\n\twhile (grClosed.next()) {\n\t\t\n\t\tvar opened = grClosed.getValue(\"opened_at\");\n        var closed = grClosed.getValue(\"closed_at\");\n        var ttr = gs.dateDiff(opened, closed, true);\n\t\t\n\t\ttotalTTRSecs += parseInt(ttr);\t\n\t\ttotalTTRMins += parseInt(ttr)/60;\n\t}\n\t\n\treturn Math.round(totalTTRMins);\n}\n\nanswer = '{\"count\": \"' + getTTRForAllInts() + '\",\"TotalTTR(Seconds)\":\"' + totalTTRSecs + '\"}';\n","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"da74e7fb04312210559073c06a02f714","definition_id":"SMBEN100001","sys_updated_by":"system","exec_time_threshold":"","sys_created_on":"2025-06-05 04:55:17","name":"TTR for all INTs - Minutes","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Configuration Automation","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 04:55:18","kb_article_url":"","sys_tags":"","version":"","script":"\nanswer = getCIsManagedByConfigAuto();\n\n/*\n* Count the number of managed CIs\n* only if the plugin is installed (otherwise the fields don't exist)\n*/\nfunction getCIsManagedByConfigAuto() {\n    var managedItems = 0;\n    if (pm.isActive('com.snc.configuration_automation')) {\n    \tif (!GlideTableDescriptor.isValid('cmdb_ci_computer') )\n\t\t\treturn managedItems;\n        var gr = new GlideAggregate('cmdb_ci_computer');\n        gr.addEncodedQuery('cfg_auto_providerISNOTEMPTY');\n        gr.addAggregate('COUNT');\n        gr.query();\n\n        if (gr.next()) {\n            managedItems = gr.getAggregate('COUNT');\n        }\n    }\n    return managedItems;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"da74e7fb04312210559073c06a02f75b","definition_id":"DEF1000055","sys_updated_by":"system","exec_time_threshold":"","sys_created_on":"2025-06-05 04:55:18","name":"CfgAutoManagedItems","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Get the number of article views from SP Service Portal\n\t\t","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 05:32:26","kb_article_url":"","sys_tags":"","version":"","script":"var count = 0;\n\nif (GlideTableDescriptor.isValid('sp_log')) {\n    var ga = new GlideAggregate('sp_log');\n    ga.addEncodedQuery('sys_created_onONThis month@javascript:gs.beginningOfThisMonth()@javascript:gs.endOfThisMonth()');\n    ga.addQuery('page', 'a60dcc050be432004ce28ffe15673a54');\n    ga.addQuery('portal', '81b75d3147032100ba13a5554ee4902b');\n    ga.addAggregate('COUNT');\n    ga.query();\n\n    if (ga.next()) {\n        count = ga.getAggregate('COUNT');\n    }\n}\n\nanswer = count;","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"dafce33f04352210559073c06a02f7e0","definition_id":"DEFN1001333","sys_updated_by":"system","exec_time_threshold":"1000","sys_created_on":"2025-06-05 05:32:26","name":"SP Article View Metrics","sys_created_by":"system"},{"definition_type":"production","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Get the count of components from sys_ux_macroponent table which has field type collection in its properties.","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 06:20:17","kb_article_url":"","sys_tags":"","version":"0","script":"\n\t\t\tvar collectionPropertyUsageByComponent = 0;\n\nvar gr = new GlideRecord('sys_ux_macroponent');\ngr.addEncodedQuery('category=component^props!=[]^props!=[ ]');\ngr.query();\n\nwhile (gr.next()) {\n    var properties;\n\n\ttry{\n\t\tproperties = JSON.parse(gr.props);\n\t}\n\tcatch(err){\n\t\tgs.error(gr.name);\n\t\tgs.error(JSON.stringify(err));\n\t\tproperties = [];\n\t}\n\n    for(var i=0;i<properties.length; i++){\n        if(properties[i].fieldType === 'collection'){\n            collectionPropertyUsageByComponent++;\n            break;\n        }\n    }\n}\n\nanswer = collectionPropertyUsageByComponent;","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"dbe73b3304f52210559073c06a02f760","definition_id":"DEFN1008297","sys_updated_by":"system","exec_time_threshold":"90000","sys_created_on":"2025-06-05 06:20:17","name":"controller property usage by component","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"ITSM Only Problem & ProblemTasks in last 30 days\n\t\t","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 05:07:43","kb_article_url":"","sys_tags":"","version":"","script":"/** ITSM Problem & ProblemTasks in last 30 days\n* CSM PRBs and PRB tasks daily: DEFN1003912\n* ITSM PRBs Daily: DEFN1003903\n* ITSM PRB tasks Daily: DEFN1003904*/\n\nanswer = getTotalITSMPrbs();\n\nfunction getTotalITSMPrbs() {\n\t\n\tvar csmPrbDefn = 'DEFN1003912';\n\tvar prbDefn = 'DEFN1003903';\n\tvar prbTaskDefn = 'DEFN1003904';\n\n\tvar csmTotal = getAggCountLast30Days(csmPrbDefn);\n\tvar prbTotal = getAggCountLast30Days(prbDefn);\n\tvar prbTaskTotal = getAggCountLast30Days(prbTaskDefn);\n\t\n\treturn (parseInt(prbTotal) + parseInt(prbTaskTotal) - parseInt(csmTotal));\n}\n\nfunction getAggCountLast30Days(defId) {\n\t\n\tif (gs.nil(defId)) return 0;\n\t\n\tvar encQuery = gs.getMessage(\"definition_id={0}^time_stampBETWEENjavascript:gs.beginningOfLast30Days()@javascript:gs.endOfLast30Days()\", defId);\n\tvar ga = new GlideAggregate(\"usageanalytics_count\");\n\t\tga.addEncodedQuery(encQuery);\n\t\tga.addAggregate(\"SUM\", \"count\");\n\t\tga.setGroup(false);\n\t\tga.query();\n\t\twhile(ga.next()) {\n\t\t\treturn ga.getAggregate(\"SUM\", \"count\");\n\t\t}\n\t\n\treturn 0;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"dc57afbb04b12210559073c06a02f703","definition_id":"DEFN1003928","sys_updated_by":"system","exec_time_threshold":"1000","sys_created_on":"2025-06-05 05:07:43","name":"ITSM Only Problem & ProblemTasks in last 30 days","sys_created_by":"system"},{"definition_type":"","count_type":"Licensing","sys_mod_count":"0","active":"true","description":"Count of active users without the snc_external role","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 04:55:17","kb_article_url":"","sys_tags":"","version":"","script":"var activeUsers = new GlideAggregate('sys_user');\nactiveUsers.addQuery('active', 'true');\nactiveUsers.query();\n\nvar usersWithExternalRole = new GlideAggregate('sys_user_has_role');\nusersWithExternalRole.addQuery('role.name', '=','snc_external');\nusersWithExternalRole.groupBy('user');\nusersWithExternalRole.query();\n\nanswer = activeUsers.getRowCount()-usersWithExternalRole.getRowCount();","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"de74e7fb04312210559073c06a02f72c","definition_id":"DEFN1000653","sys_updated_by":"system","exec_time_threshold":"1000","sys_created_on":"2025-06-05 04:55:17","name":"Active users without the snc_external role","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"total time for count persistor to run","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 04:55:17","kb_article_url":"","sys_tags":"","version":"","script":"answer = getExecTime();\n\nfunction getExecTime() {\n\tvar time_stamp = SNC.UsageAnalyticsScriptUtils.getAccrualTimeStamp('ua_count');\n\tvar answer = -1;\n\tvar gr = new GlideRecord('ua_service_stat');\n\tif(gr.isValid()){\n\t\tgr.addQuery('time_stamp', time_stamp);\n\t\tgr.addQuery('name', 'UsageAnalytics Count Persistor Daily');\n\t\tgr.query();\n\t\tif(gr.next()){\n\t\t\tanswer = gr.getValue('execution_time');\n\t\t}\n\t}\n\treturn answer;\n}\n","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"de74e7fb04312210559073c06a02f736","definition_id":"DEFN1001478","sys_updated_by":"system","exec_time_threshold":"100","sys_created_on":"2025-06-05 04:55:17","name":"UA Count Persistor Daily Execution Time","sys_created_by":"system"},{"definition_type":"production","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Return % of step completion of best practice \"Review ServiceNow's guidance on password spray attacks\"","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 06:19:00","kb_article_url":"","sys_tags":"","version":"0","script":"answer = getStepCompletionPercentage('cd3a7471432b7110adf71f062bb8f2be');\n\nfunction getStepCompletionPercentage(bestPracticeId){\nvar gr = new GlideRecord('sn_vsc_best_practice_configurations');\nif (gr.get(bestPracticeId)) {\n\tif (gr.getValue('status') == 'completed') {\n\t\tvar grSA = new GlideRecord('sys_audit');\n\t\tgrSA.addEncodedQuery('tablename=sn_vsc_best_practice_configurations^fieldname=status^sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()^newvalue=completed^documentkey=' + bestPracticeId);\n\t\tgrSA.query();\n\t\tif(grSA.hasNext()) {\n\t\t\tvar stepData = new sn_vsc.SCPlaybookUtil().getBPStepData(bestPracticeId);\n\t\t\treturn Math.round((stepData.completedSteps/stepData.totalSteps)*100, 2);\n\t\t}\n\t}\n}\nreturn 0;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"e0a77fff04b52210559073c06a02f716","definition_id":"DEFN1008171","sys_updated_by":"system","exec_time_threshold":"150000","sys_created_on":"2025-06-05 06:19:00","name":"stepsCompleted","sys_created_by":"system"},{"definition_type":"production","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Return % of step completion of best practice \"Use encryption modules with RBAC to further enhance data access control\"","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 06:19:00","kb_article_url":"","sys_tags":"","version":"0","script":"answer = getStepCompletionPercentage('06cc9b5243eb7110adf71f062bb8f263');\n\nfunction getStepCompletionPercentage(bestPracticeId){\nvar gr = new GlideRecord('sn_vsc_best_practice_configurations');\nif (gr.get(bestPracticeId)) {\n\tif (gr.getValue('status') == 'completed') {\n\t\tvar grSA = new GlideRecord('sys_audit');\n\t\tgrSA.addEncodedQuery('tablename=sn_vsc_best_practice_configurations^fieldname=status^sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()^newvalue=completed^documentkey=' + bestPracticeId);\n\t\tgrSA.query();\n\t\tif(grSA.hasNext()) {\n\t\t\tvar stepData = new sn_vsc.SCPlaybookUtil().getBPStepData(bestPracticeId);\n\t\t\treturn Math.round((stepData.completedSteps/stepData.totalSteps)*100,2);\n\t\t}\n\t}\n}\nreturn 0;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"e0a77fff04b52210559073c06a02f729","definition_id":"DEFN1008177","sys_updated_by":"system","exec_time_threshold":"150000","sys_created_on":"2025-06-05 06:19:00","name":"stepsCompleted","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"We would like to understand if the ease with which a user is able to identify the a topics. This can be analysed by checking the median of topics that are visited in a single session","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 06:13:24","kb_article_url":"","sys_tags":"","version":"","script":"/**\n * Function to get url of every topic page.\n */\n function getTopicPageUrls() {\n    var topicPageUrls = {\"4fb26c9cc3d030102ec1a589a840ddbd\": true};\n\n    var dictionaryGr = new GlideRecord(\"sys_dictionary\");\n    dictionaryGr.addQuery(\"name\", \"topic\");\n    dictionaryGr.addQuery(\"element\", \"template\");\n    dictionaryGr.query();\n\n    if (dictionaryGr.getRowCount() > 0) {\n        var gr = new GlideRecord(\"topic\");\n        gr.addNotNullQuery(\"template\");\n        gr.query();\n        while (gr.next())\n            topicPageUrls[gr.template.toString()] = true;\n    }\n    return topicPageUrls;\n}\n\n/**\n * Computes mean, median and max value for an array \n */\nfunction computeMean(values){\n    if (!values.length)\n        return 0;\n\n    values.sort(function(a,b){\n      return a-b;\n    });\n  \n    var half = Math.floor(values.length / 2);\n    \n    if (values.length % 2)\n        return values[half];\n    else\n        return (values[half - 1] + values[half]) / 2.0;\n    \n  }\n\nvar gr = new GlideAggregate(\"sp_log\");\ngr.addQuery('sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()');\ngr.addQuery(\"page\", \"IN\", Object.keys(getTopicPageUrls()));\ngr.addAggregate(\"COUNT\");\ngr.groupBy(\"session_id\");\ngr.query();\n\nvar topicCountsPerSession=[];\nwhile (gr.next())\n    try {\n        topicCountsPerSession.push(parseInt(gr.getAggregate(\"COUNT\")));\n    }\n    catch (err) {}\n\nanswer = computeMean(topicCountsPerSession);","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"e256fbfb04b52210559073c06a02f74c","definition_id":"DEFN1005943","sys_updated_by":"system","exec_time_threshold":"10000","sys_created_on":"2025-06-05 06:13:24","name":"topicVisitStatsPerSession","sys_created_by":"system"},{"definition_type":"production","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Total average time taken to complete Critical Update after update activation","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 06:19:00","kb_article_url":"","sys_tags":"","version":"0","script":"var totalTime = 0;\nvar gr = new GlideRecord(\"sn_critical_update\");\ngr.addQuery(\"up_update_status\", \"acknowledged\");\ngr.query();\nvar totalAck = gr.getRowCount();\nwhile (gr.next()) {\n    var endDate = gr.sys_updated_on.getGlideObject();\n    var grR = new GlideRecord(\"sys_audit\");\n    grR.addQuery(\"tablename\", \"sn_critical_update\");\n    grR.addQuery(\"fieldname\", \"up_active\");\n    grR.addQuery(\"documentkey\", gr.sys_id);\n    grR.orderByDesc(\"sys_created_on\");\n    grR.query();\n    if (grR.next() && grR.newvalue == \"1\") {\n        var startDate = grR.sys_created_on.getGlideObject();\n        diff = gs.dateDiff(startDate.getDisplayValueInternal(), endDate.getDisplayValueInternal(), false);\n        var days = diff.split(\" \");\n        if (days.length == 2) {\n            totalTime += days[0];\n        }\n    }\n}\n\nanswer = (totalTime / totalAck);\n","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"e4a77fff04b52210559073c06a02f714","definition_id":"DEFN1008021","sys_updated_by":"system","exec_time_threshold":"90000","sys_created_on":"2025-06-05 06:19:00","name":"Avg completion time","sys_created_by":"system"},{"definition_type":"production","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Return % of step completion of best practice \"Use your own mature email security environment\"","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 06:19:00","kb_article_url":"","sys_tags":"","version":"0","script":"answer = getStepCompletionPercentage('0c544cb943677110adf71f062bb8f20d');\n\nfunction getStepCompletionPercentage(bestPracticeId){\nvar gr = new GlideRecord('sn_vsc_best_practice_configurations');\nif (gr.get(bestPracticeId)) {\n\tif (gr.getValue('status') == 'completed') {\n\t\tvar grSA = new GlideRecord('sys_audit');\n\t\tgrSA.addEncodedQuery('tablename=sn_vsc_best_practice_configurations^fieldname=status^sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()^newvalue=completed^documentkey=' + bestPracticeId);\n\t\tgrSA.query();\n\t\tif(grSA.hasNext()) {\n\t\t\tvar stepData = new sn_vsc.SCPlaybookUtil().getBPStepData(bestPracticeId);\n\t\t\treturn (stepData.completedSteps/stepData.totalSteps)*100;\n\t\t}\n\t}\n}\nreturn 0;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"e4a77fff04b52210559073c06a02f727","definition_id":"DEFN1008173","sys_updated_by":"system","exec_time_threshold":"150000","sys_created_on":"2025-06-05 06:19:00","name":"stepsCompleted","sys_created_by":"system"},{"definition_type":"production","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Return % of step completion of best practice \"Encrypt data at rest within the instance\"","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 06:19:00","kb_article_url":"","sys_tags":"","version":"0","script":"answer = getStepCompletionPercentage('cf2fdb1643eb7110adf71f062bb8f2f0');\n\nfunction getStepCompletionPercentage(bestPracticeId){\nvar gr = new GlideRecord('sn_vsc_best_practice_configurations');\nif (gr.get(bestPracticeId)) {\n\tif (gr.getValue('status') == 'completed') {\n\t\tvar grSA = new GlideRecord('sys_audit');\n\t\tgrSA.addEncodedQuery('tablename=sn_vsc_best_practice_configurations^fieldname=status^sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()^newvalue=completed^documentkey=' + bestPracticeId);\n\t\tgrSA.query();\n\t\tif(grSA.hasNext()) {\n\t\t\tvar stepData = new sn_vsc.SCPlaybookUtil().getBPStepData(bestPracticeId);\n\t\t\treturn Math.round((stepData.completedSteps/stepData.totalSteps)*100,2);\n\t\t}\n\t}\n}\nreturn 0;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"e4a77fff04b52210559073c06a02f72e","definition_id":"DEFN1008188","sys_updated_by":"system","exec_time_threshold":"150000","sys_created_on":"2025-06-05 06:19:00","name":"stepsCompleted","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Counts number of operational services with EM plugin enabled","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 05:29:47","kb_article_url":"","sys_tags":"","version":"","script":"if (GlidePluginManager.isActive(\"com.glideapp.itom.snac\")) {\n\n\tvar rowCount = 0;\n\tvar gr = new GlideRecord('cmdb_ci_service_discovered');\n\tif (gr.isValid()) {\n\t\tgr.addQuery('operational_status', '1');\n\t\tgr.query();\n\t\tif (gr.next())\n\t\t\trowCount = gr.getRowCount();\n\t}\n\tanswer = rowCount;\n}\nelse {\n\tanswer = 0;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"e75ca73b04352210559073c06a02f724","definition_id":"DEFN1002607","sys_updated_by":"system","exec_time_threshold":"2000","sys_created_on":"2025-06-05 05:29:47","name":"CountOperationalSerivcesWithEM","sys_created_by":"system"},{"definition_type":"production","count_type":"Licensing","sys_mod_count":"0","active":"true","description":"Daily aggregation and unit conversion of DEFN1008555.\r\nTo be used as a licensing meter for WDF MVP.","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-07-09 12:47:37","kb_article_url":"","sys_tags":"","version":"0","script":"function getDailySum() {\n    // Encoded query to filter records created in the last day with specific definition_id \n    var encodedQuery = 'definition_id=DEFN1008555^sys_created_onONYesterday@javascript:gs.beginningOfYesterday()@javascript:gs.endOfYesterday()';\n    // Create a GlideAggregate to sum 'sum' field \n    var ga = new GlideAggregate('gcf_licensing_count');\n    ga.addEncodedQuery(encodedQuery);\n    ga.addAggregate('SUM', 'sum');\n    ga.setGroup(false);\n    ga.query();\n    var totalCount = 0.0;\n\n    if (ga.next()) {\n        totalCount = ga.getAggregate('SUM', 'sum'); // Get the sum of the 'sum' column \n    }\n    return totalCount / (1024 * 1024); // Output the sum divided by 1024 * 1024 since count is sent in bytes and we have to report in MB \n}\n\nanswer = getDailySum();","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"e8a61007c3222210ed4bd50d050131a3","definition_id":"DEFN1008556","sys_updated_by":"system","exec_time_threshold":"90000","sys_created_on":"2025-07-09 12:47:37","name":"WDF Zero Copy Daily megabytes processed","sys_created_by":"system"},{"definition_type":"production","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Return % of step completion of best practice \"Monitor important logs to help identify any suspicious or malicious activity\"","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 06:19:00","kb_article_url":"","sys_tags":"","version":"0","script":"answer = getStepCompletionPercentage('f575003d43677110adf71f062bb8f272');\n\nfunction getStepCompletionPercentage(bestPracticeId){\nvar gr = new GlideRecord('sn_vsc_best_practice_configurations');\nif (gr.get(bestPracticeId)) {\n\tif (gr.getValue('status') == 'completed') {\n\t\tvar grSA = new GlideRecord('sys_audit');\n\t\tgrSA.addEncodedQuery('tablename=sn_vsc_best_practice_configurations^fieldname=status^sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()^newvalue=completed^documentkey=' + bestPracticeId);\n\t\tgrSA.query();\n\t\tif(grSA.hasNext()) {\n\t\t\tvar stepData = new sn_vsc.SCPlaybookUtil().getBPStepData(bestPracticeId);\n\t\t\treturn Math.round((stepData.completedSteps/stepData.totalSteps)*100,2);\n\t\t}\n\t}\n}\nreturn 0;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"e8a77fff04b52210559073c06a02f719","definition_id":"DEFN1008186","sys_updated_by":"system","exec_time_threshold":"150000","sys_created_on":"2025-06-05 06:19:00","name":"stepsCompleted","sys_created_by":"system"},{"definition_type":"production","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Return % of step completion of best practice \"Monitor login failure rates and create alerts\"","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 06:19:00","kb_article_url":"","sys_tags":"","version":"0","script":"answer = getStepCompletionPercentage('3c4c9f1243eb7110adf71f062bb8f250');\n\nfunction getStepCompletionPercentage(bestPracticeId){\nvar gr = new GlideRecord('sn_vsc_best_practice_configurations');\nif (gr.get(bestPracticeId)) {\n\tif (gr.getValue('status') == 'completed') {\n\t\tvar grSA = new GlideRecord('sys_audit');\n\t\tgrSA.addEncodedQuery('tablename=sn_vsc_best_practice_configurations^fieldname=status^sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()^newvalue=completed^documentkey=' + bestPracticeId);\n\t\tgrSA.query();\n\t\tif(grSA.hasNext()) {\n\t\t\tvar stepData = new sn_vsc.SCPlaybookUtil().getBPStepData(bestPracticeId);\n\t\t\treturn Math.round((stepData.completedSteps/stepData.totalSteps)*100,2);\n\t\t}\n\t}\n}\nreturn 0;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"e8a77fff04b52210559073c06a02f72c","definition_id":"DEFN1008183","sys_updated_by":"system","exec_time_threshold":"150000","sys_created_on":"2025-06-05 06:19:00","name":"stepsCompleted","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Password Reset Requests - Free","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:24:28","kb_article_url":"","sys_tags":"","version":"","script":"var gr = new GlideRecord('pwd_reset_request');\ngr.addQuery('process.cred_store.type.name', 'Local ServiceNow Instance');\ngr.query();\nanswer = gr.getRowCount();","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"e92b637304352210559073c06a02f7f0","definition_id":"DEF1000152","sys_updated_by":"system","exec_time_threshold":"60000","sys_created_on":"2025-06-05 05:24:28","name":"pwd_reset_request","sys_created_by":"system"},{"definition_type":"production","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Return % of step completion of best practice \"Configure web browsers to use only TLS 1.2 or higher when connecting to your instance\"","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 06:19:00","kb_article_url":"","sys_tags":"","version":"0","script":"answer = getStepCompletionPercentage('418e9fd243eb7110adf71f062bb8f213');\n\nfunction getStepCompletionPercentage(bestPracticeId){\nvar gr = new GlideRecord('sn_vsc_best_practice_configurations');\nif (gr.get(bestPracticeId)) {\n\tif (gr.getValue('status') == 'completed') {\n\t\tvar grSA = new GlideRecord('sys_audit');\n\t\tgrSA.addEncodedQuery('tablename=sn_vsc_best_practice_configurations^fieldname=status^sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()^newvalue=completed^documentkey=' + bestPracticeId);\n\t\tgrSA.query();\n\t\tif(grSA.hasNext()) {\n\t\t\tvar stepData = new sn_vsc.SCPlaybookUtil().getBPStepData(bestPracticeId);\n\t\t\treturn Math.round((stepData.completedSteps/stepData.totalSteps)*100,2);\n\t\t}\n\t}\n}\nreturn 0;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"eca77fff04b52210559073c06a02f717","definition_id":"DEFN1008194","sys_updated_by":"system","exec_time_threshold":"150000","sys_created_on":"2025-06-05 06:19:00","name":"stepsCompleted","sys_created_by":"system"},{"definition_type":"production","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Return % of step completion of best practice \"Monitor your instance Hardening Compliance level\"","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 06:19:00","kb_article_url":"","sys_tags":"","version":"0","script":"answer = getStepCompletionPercentage('60306da143e37110adf71f062bb8f2aa');\n\nfunction getStepCompletionPercentage(bestPracticeId){\nvar gr = new GlideRecord('sn_vsc_best_practice_configurations');\nif (gr.get(bestPracticeId)) {\n\tif (gr.getValue('status') == 'completed') {\n\t\tvar grSA = new GlideRecord('sys_audit');\n\t\tgrSA.addEncodedQuery('tablename=sn_vsc_best_practice_configurations^fieldname=status^sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()^newvalue=completed^documentkey=' + bestPracticeId);\n\t\tgrSA.query();\n\t\tif(grSA.hasNext()) {\n\t\t\tvar stepData = new sn_vsc.SCPlaybookUtil().getBPStepData(bestPracticeId);\n\t\t\treturn Math.round((stepData.completedSteps/stepData.totalSteps)*100,2);\n\t\t}\n\t}\n}\nreturn 0;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"eca77fff04b52210559073c06a02f72a","definition_id":"DEFN1008185","sys_updated_by":"system","exec_time_threshold":"150000","sys_created_on":"2025-06-05 06:19:00","name":"stepsCompleted","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"We're trying to segment the usage of EC portal by department","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 06:13:24","kb_article_url":"","sys_tags":"","version":"","script":"var hrTables = [\"sn_hr_core_case\", \"sn_hr_core_case_benefits\", \"sn_hr_core_case_compensation\", \"sn_hr_core_case_corporate_communication\", \"sn_hr_core_case_global_mobility\", \"sn_hr_core_case_operations\", \"sn_hr_core_case_payroll\", \"sn_hr_core_case_talent_management\", \"sn_hr_core_case_total_rewards\", \"sn_hr_core_case_workforce_admin\", \"sn_hr_le_case\"];\nvar legalTables = [\"sn_lg_ops_compliance\", \"sn_lg_ops_corporate_support\", \"sn_lg_ops_crime\", \"sn_lg_ops_digital_forensics\", \"sn_lg_ops_ethics\", \"sn_lg_ops_general_contract_support\", \"sn_lg_ops_general_legal\", \"sn_lg_ops_government_affairs\", \"sn_lg_ops_health_safety_and_environment\", \"sn_lg_ops_labor_and_employment\", \"sn_lg_ops_legal_operations\", \"sn_lg_ops_licensing_and_tech_transactions\", \"sn_lg_ops_litigation\", \"sn_lg_ops_marketing_support\", \"sn_lg_ops_mergers_and_acquisitions\", \"sn_lg_ops_patents_trademark_and_trade_secrets\", \"sn_lg_ops_privacy_and_data_security\", \"sn_lg_ops_procurement_contract_support\", \"sn_lg_ops_real_estate\", \"sn_lg_ops_sales_contract_support\"];\nvar procurementTables = [\"sn_spend_psd_procurement_request\"];\nvar wsdTables = ['cmn_location', 'sn_wsd_core_approval_configuration', 'sn_wsd_core_approval_definition', 'sn_wsd_core_area', 'sn_wsd_core_arrival_entry', 'sn_wsd_core_arrival_schedule', 'sn_wsd_core_block_location', 'sn_wsd_core_building', 'sn_wsd_core_campus', 'sn_wsd_core_client_role_rule', 'sn_wsd_core_floor', 'sn_wsd_core_floor_plan_update_log', 'sn_wsd_core_html_signing_template', 'sn_wsd_core_m2m_location_shift', 'sn_wsd_core_m2m_user_shift', 'sn_wsd_core_performer_criteria', 'sn_wsd_core_planned_task_def', 'sn_wsd_core_qr', 'sn_wsd_core_region', 'sn_wsd_core_reservation', 'sn_wsd_core_room', 'sn_wsd_core_shift', 'sn_wsd_core_site', 'sn_wsd_core_space', 'sn_wsd_core_space_staging', 'sn_wsd_core_space_type', 'sn_wsd_core_workplace_location', 'sn_wsd_core_workplace_profile', 'sn_wsd_core_workplace_request', 'sn_wsd_core_workplace_task', 'sn_wsd_core_workplace_user', 'sn_wsd_case_fulfillment_instruction', 'sn_wsd_case_m2m_service_item_location', 'sn_wsd_case_m2m_service_location', 'sn_wsd_case_service_item_request', 'sn_wsd_case_tier_definition', 'sn_wsd_case_workplace_case', 'sn_wsd_case_workplace_field_mapping', 'sn_wsd_case_workplace_service', 'sn_wsd_case_workplace_service_activity', 'sn_wsd_case_workplace_service_item', 'sn_wsd_case_workplace_template_configuration', 'sn_wsd_rsv_extra_service', 'sn_wsd_rsv_layout', 'sn_wsd_rsv_m2m_location_layout', 'sn_wsd_rsv_m2m_location_reservable_purpose', 'sn_wsd_rsv_m2m_location_standard_service', 'sn_wsd_rsv_m2m_reservable_module_time_slot', 'sn_wsd_rsv_m2m_reservable_module_user_criteria', 'sn_wsd_rsv_m2m_reservable_module_view_configuration', 'sn_wsd_rsv_m2m_reservable_module_workplace_location', 'sn_wsd_rsv_reservable_module', 'sn_wsd_rsv_reservable_purpose', 'sn_wsd_rsv_reservable_view', 'sn_wsd_rsv_reservation', 'sn_wsd_rsv_reservation_path', 'sn_wsd_rsv_standard_service', 'sn_wsd_rsv_time_slot', 'sn_wsd_visitor_m2m_location_policy', 'sn_wsd_visitor_m2m_user_visitor', 'sn_wsd_visitor_organization', 'sn_wsd_visitor_policy', 'sn_wsd_visitor_visit', 'sn_wsd_visitor_visit_log', 'sn_wsd_visitor_visitor', 'sn_wsd_visitor_visitor_policy_confirmation', 'sn_wsd_visitor_vistor_registration', 'sn_wsd_mappedin_type_mapping', 'sn_wsd_rsv_reservation', 'sn_wsd_rsvsync_calendar_item', 'sn_wsd_rsvsync_delta', 'sn_wsd_rsvsync_event', 'sn_wsd_rsvsync_provider', 'sn_wsd_rsvsync_reservable_sync_configuration', 'sn_wsd_spcmgmt_location_cc_dept_map', 'sn_wsd_mobile_st_mobile_reservation'];\nvar itTables = [\"incident\", \"change_request\", \"std_change_producer_version\", \"std_change_properties\", \"std_change_proposal\", \"std_change_proposal_task\", \"std_change_record_producer\", \"std_change_template\"];\n\nvar results = {hrPortal: false, legalPortal: false, procurementPortal: false, wsdPortal: false, itPortal: false, customPortal: false};\n\n// check portals using new taxonomy\nif (hasTaxonomy()) {\n    var taxonomyId = getTaxonomyId();\n    if (taxonomyId) {\n        var gr = new GlideRecord(\"m2m_connected_content\");\n        gr.addQuery(\"topic.taxonomy\", taxonomyId);\n        gr.query();\n        \n        while(gr.next()) {\n            if (hrTables.indexOf(gr.catalog_item.table_name.getValue(\"name\")) > -1)\n                results.hrPortal = true;\n            else if (legalTables.indexOf(gr.catalog_item.table_name.getValue(\"name\")) > -1)\n                results.legalPortal = true;\n            else if (procurementTables.indexOf(gr.catalog_item.table_name.getValue(\"name\")) > -1)\n                results.procurementPortal = true;\n            else if (wsdTables.indexOf(gr.catalog_item.table_name.getValue(\"name\")) > -1)\n                results.wsdPortal = true;\n            else if (itTables.indexOf(gr.catalog_item.table_name.getValue(\"name\")) > -1)\n                results.itPortal = true;\n            else\n                results.customPortal = true;\n        }\n    }\n}\n\n// check portals using old taxonomy\ngr = new GlideRecord(\"m2m_sp_portal_catalog\");\ngr.addActiveQuery();\ngr.addEncodedQuery(\"sp_portal.sys_id=70cd9f3b734b13001fdae9c54cf6a72f^ORsp_portal.url_suffix=esc\");\n\nif (gr.isValid()) {\n\tgr.query();\n\twhile(gr.next()) {\n\t\tvar catItemGr = new GlideRecord(\"sc_cat_item_producer\");\n\t\tcatItemGr.addActiveQuery();\n\t\tcatItemGr.addEncodedQuery(\"sc_catalogsLIKE\" + gr.sc_catalog.toString());\n\t\tcatItemGr.query();\n\t\twhile (catItemGr.next()) {\n\t\t\ttableName = catItemGr.table_name.getValue(\"name\");\n\t\t\tif (hrTables.indexOf(tableName) > -1)\n\t\t\t\tresults.hrPortal = true;\n\t\t\telse if (legalTables.indexOf(tableName) > -1)\n\t\t\t\tresults.legalPortal = true;\n\t\t\telse if (procurementTables.indexOf(tableName) > -1)\n\t\t\t\tresults.procurementPortal = true;\n\t\t\telse if (wsdTables.indexOf(tableName) > -1)\n\t\t\t\tresults.wsdPortal = true;\n\t\t\telse if (itTables.indexOf(tableName) > -1)\n\t\t\t\tresults.itPortal = true;\n\t\t\telse if (tableName!='sc_req_item' && tableName!='universal_request')\n\t\t\t\tresults.customPortal = true;\n\t\t}\n\t}\n}\n\nanswer = JSON.stringify({\n\tcount: 1,\n\tresults: results\n});\n\nfunction getTaxonomyId() {\n    var gr = new GlideRecord(\"m2m_sp_portal_taxonomy\");\n    gr.addActiveQuery();\n    gr.addEncodedQuery(\"sp_portal.sys_id=70cd9f3b734b13001fdae9c54cf6a72f^ORsp_portal.url_suffix=esc\");\n    gr.query();\n    if (gr.next())\n        return gr.getValue(\"taxonomy\");\n}\n\nfunction hasTaxonomy() {\n    var gr = new GlideRecord(\"sys_db_object\");\n    gr.addQuery(\"name\", \"taxonomy\");\n    gr.query();\n    return gr.hasNext();\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"ee56fbfb04b52210559073c06a02f74e","definition_id":"DEFN1005571","sys_updated_by":"system","exec_time_threshold":"6000","sys_created_on":"2025-06-05 06:13:24","name":"ECPortalUsageSegmentation","sys_created_by":"system"},{"definition_type":"production","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Track the usage (MAU) / deployments (no of instances using portal) of Employee\n\t\t\tCenter and Employee Center Pro portals","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 06:13:24","kb_article_url":"","sys_tags":"","version":"0","script":"// get all portals with associated taxonomy except mesp and other OOTB Portals\ntry{\n\t\n        var discardPortalIds = []; // some dafault Portals that we ship except SP [ observed SP record used as EC ]\n        discardPortalIds.push('26f2fffb77322300454792718a1061e5'); // MESP\n        discardPortalIds.push('0d3fa8649f131200b18a7feea57fcf7a'); // CAB WorkBench\n        discardPortalIds.push('45d6680fdb52220099f93691f0b8f5ad'); // Knowledge Portal\n        discardPortalIds.push('5ef362fa5b4132003d1c484c11f91a05'); // BenchMarks\n        discardPortalIds.push('bebfa187536a1300a699ddeeff7b1223'); // Instance Security Center\n        discardPortalIds.push('d141d4f20b4303008cd6e7ae37673a64'); // Content Publishing Demo\n        discardPortalIds.push('db57a91047001200ba13a5554ee49050'); // SP Config\n        discardPortalIds.push('fe5506d03b0203008ed00d8044efc45d'); // Service Workspace\n\t\tdiscardPortalIds.push('89275a53cb13020000f8d856634c9c51'); // CSM Portals\n    \n\t\t\t\tvar finalSYSID=[];\n\t\t\t\tvar finalCount=0;\n\n\t\t\t\t// Portals using Connected Content and not using OOTB SYS ID  \n\t\t\t\tvar gr = new GlideRecord(\"m2m_sp_portal_taxonomy\");\n\t\t\t\tgr.addQuery('sp_portal', 'NOT IN', discardPortalIds);\n\t\t\t\tgr.addQuery('sp_portal', '!=', '70cd9f3b734b13001fdae9c54cf6a72f'); \n\t\t\t\tgr.addEncodedQuery(\"taxonomyISNOTEMPTY^active=true^taxonomy.active=true\");\n\t\t\t\tgr.query();\n\n\t\t\t\twhile(gr.next()){\n\t\t\t\t\t// Check if connected content exists for an taxonomy\n\t\t\t\t\tvar gra = new GlideAggregate(\"m2m_connected_content\");\n\t\t\t\t\tif(gra.isValid()){\n\t\t\t\t\t\tgra.addAggregate('COUNT');\n\t\t\t\t\t\tgra.addEncodedQuery(\"topic.taxonomy=\"+gr.getValue('taxonomy')+\"^topic.active=true\");\n\t\t\t\t\t\tgra.query();\n\t\t\t\t\t\tif (gra.next() && gra.getAggregate('COUNT') > 0) {\n\t\t\t\t\t\t\t// Prepare the list of SYS_ID's\n\t\t\t\t\t\t\tfinalSYSID.push(gr.getValue('sp_portal'));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\n\t\t\t\t// Portals not using Taxonomy and not using OOTB SYS ID  \n\t\t\t\tvar sp_portalgr1 = new GlideRecord(\"sp_portal\");\n\t\t\t\tsp_portalgr1.addQuery('sys_id', 'NOT IN', finalSYSID);\n\t\t\t\tsp_portalgr1.addQuery('sys_id', '!=', '70cd9f3b734b13001fdae9c54cf6a72f'); \n\t\t\t\tsp_portalgr1.query();\n\n\n\t\t\t\twhile(sp_portalgr1.next()){\n\t\t\t\t\t// check if any of the OOTB parameters are matching then add to list\n\t\t\t\t\tif(\tsp_portalgr1.getValue('theme') == '9b6f06d71bb8f85047582171604bcb9c' || \n\t\t\t\t\tsp_portalgr1.getValue('sp_rectangle_menu') == '493d01365368301056c1ddeeff7b1207' ||\n\t\t\t\t\tsp_portalgr1.theme.header == 'd0009941eb103010ed7966d6475228c1' ||\n\t\t\t\t\t(sp_portalgr1.getDisplayValue('logo').length!=0 &&\n\t\t\t\t\t\t\t(sp_portalgr1.getDisplayValue('logo')=='ba95c23323c42300fb0c949e27bf6563.iix' || sp_portalgr1.getDisplayValue('logo') == 'dacdee00ff601210860fffffffffffd6.iix')) ||\n\t\t\t\t\t(sp_portalgr1.getValue('homepage')=='8c51a66b532030101865ddeeff7b120d' ||\n\t\t\t\t\t\t\tsp_portalgr1.getValue('homepage')=='0c9e5ccd537030101865ddeeff7b12cb' ||\n\t\t\t\t\t\t\tsp_portalgr1.getValue('homepage')=='3cd32c40c7a83110b1c6677703c26062' ||\n\t\t\t\t\t\t\tsp_portalgr1.getValue('homepage')=='b10e9a1743d431108c5d43d488b8f26b' ) ) \n\t\t\t\t\t{\n\t\t\t\t\t\tfinalSYSID.push(sp_portalgr1.getUniqueValue());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t// Portals using OOTB SYS ID\n\t\t\t\tfinalSYSID.push('70cd9f3b734b13001fdae9c54cf6a72f');\n\t\t\t\t\n\t\t\t\t// add esc :  not OOTB SYS_ID and not in finalSYSID - track /esc portals\n\t\t\t\tvar sp_portalgr2 = new GlideRecord(\"sp_portal\");\n\t\t\t\tsp_portalgr2.addQuery('url_suffix','esc');\n\t\t\t\tsp_portalgr2.addQuery('sys_id', 'NOT IN', finalSYSID);\n\t\t\t\tsp_portalgr2.query();\n\n\t\t\t\twhile(sp_portalgr2.next()){\n\t\t\t\t\t\tfinalSYSID.push(sp_portalgr2.getUniqueValue());\n\t\t\t\t}\t\n\n\t\t\t\t// execute query in finalSYSID is not empty\n\t\t\t\tif(finalSYSID.length!=0){\n\t\t\t\t\tvar graPortal= new GlideAggregate(\"sp_log\");\n\t\t\t\t\tgraPortal.addAggregate('COUNT(DISTINCT','user');\n\t\t\t\t\tgraPortal.addQuery('portal.sys_id', 'IN', finalSYSID);\n\t\t\t\t\tgraPortal.addEncodedQuery(\"sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()\");\t\t\t\t\t\t\n\t\t\t\t\tgraPortal.setWorkflow(false);\n\t\t\t\t\tgraPortal.setGroup(false);\n\t\t\t\t\tgraPortal.query();\n\t\t\t\t\tif (graPortal.next()) {\n\t\t\t\t\t\tfinalCount=graPortal.getAggregate('COUNT(DISTINCT','user');\t\t\t\t\n\t\t\t\t\t}\t\t\n\t\t\t\t}\n\t\t\t\tanswer=finalCount;\n\n   } \n   catch (e) \n   {\n            gs.info(\"script errored - \"+e.stack);\n\t}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"ee56fbfb04b52210559073c06a02f74f","definition_id":"DEFN1008020","sys_updated_by":"system","exec_time_threshold":"5000","sys_created_on":"2025-06-05 06:13:24","name":"EC and EC Pro Usage ","sys_created_by":"system"},{"definition_type":"production","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Total number of queries triggered by all users using AI Search enabled Employee center portal. ","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 06:13:24","kb_article_url":"","sys_tags":"","version":"0","script":"try {\n    var discardPortalIds = []; // some dafault Portals that we ship except SP [ observed SP record used as EC ]\n    discardPortalIds.push('26f2fffb77322300454792718a1061e5'); // MESP\n    discardPortalIds.push('0d3fa8649f131200b18a7feea57fcf7a'); // CAB WorkBench\n    discardPortalIds.push('45d6680fdb52220099f93691f0b8f5ad'); // Knowledge Portal\n    discardPortalIds.push('5ef362fa5b4132003d1c484c11f91a05'); // BenchMarks\n    discardPortalIds.push('bebfa187536a1300a699ddeeff7b1223'); // Instance Security Center\n    discardPortalIds.push('d141d4f20b4303008cd6e7ae37673a64'); // Content Publishing Demo\n    discardPortalIds.push('db57a91047001200ba13a5554ee49050'); // SP Config\n    discardPortalIds.push('fe5506d03b0203008ed00d8044efc45d'); // Service Workspace\n    discardPortalIds.push('89275a53cb13020000f8d856634c9c51'); // CSM Portals\n    var finalSYSID = [];\n    var finalCount = 0;\n    // Portals using Connected Content and not using OOTB SYS ID  \n    var gr = new GlideRecord(\"m2m_sp_portal_taxonomy\");\n    gr.addQuery('sp_portal', 'NOT IN', discardPortalIds);\n    gr.addQuery('sp_portal', '!=', '70cd9f3b734b13001fdae9c54cf6a72f');\n    gr.addEncodedQuery(\"taxonomyISNOTEMPTY^active=true^taxonomy.active=true\");\n    gr.query();\n    while (gr.next()) {\n        // Check if connected content exists for an taxonomy\n        var gra = new GlideAggregate(\"m2m_connected_content\");\n        if (gra.isValid()) {\n            gra.addAggregate('COUNT');\n            gra.addEncodedQuery(\"topic.taxonomy=\" + gr.getValue('taxonomy') + \"^topic.active=true\");\n            gra.query();\n            if (gra.next() && gra.getAggregate('COUNT') > 0) {\n                // Prepare the list of SYS_ID's\n                finalSYSID.push(gr.getValue('sp_portal'));\n            }\n        }\n    }\n    // Portals not using Taxonomy and not using OOTB SYS ID  \n    var sp_portalgr1 = new GlideRecord(\"sp_portal\");\n    sp_portalgr1.addQuery('sys_id', 'NOT IN', finalSYSID);\n    sp_portalgr1.addQuery('sys_id', '!=', '70cd9f3b734b13001fdae9c54cf6a72f');\n    sp_portalgr1.query();\n    while (sp_portalgr1.next()) {\n        // check if any of the OOTB parameters are matching then add to list\n        if (sp_portalgr1.getValue('theme') == '9b6f06d71bb8f85047582171604bcb9c' ||\n            sp_portalgr1.getValue('sp_rectangle_menu') == '493d01365368301056c1ddeeff7b1207' ||\n            sp_portalgr1.theme.header == 'd0009941eb103010ed7966d6475228c1' ||\n            (sp_portalgr1.getDisplayValue('logo').length != 0 &&\n                (sp_portalgr1.getDisplayValue('logo') == 'ba95c23323c42300fb0c949e27bf6563.iix' || sp_portalgr1.getDisplayValue('logo') == 'dacdee00ff601210860fffffffffffd6.iix')) ||\n            (sp_portalgr1.getValue('homepage') == '8c51a66b532030101865ddeeff7b120d' ||\n                sp_portalgr1.getValue('homepage') == '0c9e5ccd537030101865ddeeff7b12cb' ||\n                sp_portalgr1.getValue('homepage') == '3cd32c40c7a83110b1c6677703c26062' ||\n                sp_portalgr1.getValue('homepage') == 'b10e9a1743d431108c5d43d488b8f26b')) {\n            finalSYSID.push(sp_portalgr1.getUniqueValue());\n        }\n    }\n    // Portals using OOTB SYS ID\n    finalSYSID.push('70cd9f3b734b13001fdae9c54cf6a72f');\n    // add esc :  not OOTB SYS_ID and not in finalSYSID - track /esc portals\n    var sp_portalgr2 = new GlideRecord(\"sp_portal\");\n    sp_portalgr2.addQuery('url_suffix', 'esc');\n\tsp_portalgr2.addQuery('enable_ais', true);\n    sp_portalgr2.addQuery('sys_id', 'NOT IN', finalSYSID);\n    sp_portalgr2.query();\n    while (sp_portalgr2.next()) {\n        finalSYSID.push(sp_portalgr2.getUniqueValue());\n    }\n    // execute query in finalSYSID is not empty\n    if (finalSYSID.length != 0) {\n        var searchApplications = [];\n        var grPortal = new GlideRecord(\"sp_portal\");\n        grPortal.addQuery('enable_ais', true);\n        grPortal.addQuery('sys_id', 'IN', finalSYSID);\n        grPortal.query();\n        while (grPortal.next()) {\n            searchApplications.push(grPortal.getValue('search_application'))\n        }\n        var graSearchEvents = new GlideAggregate(\"sys_search_event\");\n        graSearchEvents.addQuery('application_id', 'IN', searchApplications);\n        graSearchEvents.addEncodedQuery(\"sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()\");  \n        graSearchEvents.addAggregate('COUNT');\n        graSearchEvents.query();\n        if (graSearchEvents.next()) {\n            finalCount = graSearchEvents.getAggregate('COUNT');\n        }\n    }\n    answer = finalCount;\n}\ncatch (e) {\n    gs.info(\"script errored - \" + e.stack);\n}\n","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"ee56fbfb04b52210559073c06a02f750","definition_id":"DEFN1008133","sys_updated_by":"system","exec_time_threshold":"90000","sys_created_on":"2025-06-05 06:13:24","name":"Total quires of AI Seach in Employee center portal","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Number of instances with active post-auth context Policy","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:29:56","kb_article_url":"","sys_tags":"","version":"","script":"answer = getRecordsCount();\n\nfunction getRecordsCount() {\n    var count = 0;\n    var aAPluginActive = GlidePluginManager.isActive(\"com.snc.adaptive_authentication\");\n    var aAPropertyEnabled = GlideProperties.getBoolean(\"glide.authenticate.auth.policy.enabled\");\n    if (aAPluginActive && aAPropertyEnabled) {\n        \n        //check if any post-auth policy is active\n        var postAuthcontextGr = new GlideRecord(\"sys_auth_policy_context\");\n        postAuthcontextGr.addEncodedQuery(\"sys_id=c3086c5773112010616ca9843cf6a7ff^default_policy=allow_policy^allow_policy.active=true^NQsys_id=c3086c5773112010616ca9843cf6a7ff^default_policy=deny_policy^deny_policy.active=true\");\n        postAuthcontextGr.query();\n        if (postAuthcontextGr.next()) {\n            var activePostAuthPolicyConditionCount = 0;\n            if (postAuthcontextGr.default_policy == \"allow_policy\") {\n                activePostAuthPolicyConditionCount = getActivePolicyConditionCount(postAuthcontextGr.allow_policy.decision_table);\n            } else {\n                activePostAuthPolicyConditionCount = getActivePolicyConditionCount(postAuthcontextGr.deny_policy.decision_table);\n            }\n            if (activePostAuthPolicyConditionCount > 0)\n                count++;\n        }\n\n    }\n    return count;\n}\n\nfunction getActivePolicyConditionCount(decision_table_sys_id) {\n    var ga = new GlideAggregate(\"sys_auth_policy_condition\");\n    ga.addActiveQuery();\n    ga.addQuery(\"decision_table\", decision_table_sys_id);\n    ga.addAggregate(\"COUNT\", null);\n    ga.query();\n    if (ga.next()) {\n        return ga.getAggregate('COUNT');\n    }\n    return 0;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"f16c2b3b04352210559073c06a02f7f3","definition_id":"DEFN1007299","sys_updated_by":"system","exec_time_threshold":"10000","sys_created_on":"2025-06-05 05:29:56","name":"Number of instances with active post-auth context Policy","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Cumulative number of vocabulary for published NLU models","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 04:56:17","kb_article_url":"","sys_tags":"","version":"","script":"var count = 0;\nvar model, ga;\nvar gRec = new GlideRecord(\"sys_nlu_model_status\");\ngRec.addQuery('published_version', '>=' , '1');\ngRec.query();\nwhile (gRec.next()) {\n\tmodel = gRec.getValue('model');\n    ga = new GlideAggregate('sys_nlu_vocabulary');\n    ga.addAggregate('COUNT');\n    ga.addQuery('model', model);\n    ga.query();\n    if (ga.next()) {\n        count += parseInt(ga.getAggregate('COUNT'));\n    }\n}\nanswer = count;","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"f4b4a77f04312210559073c06a02f70d","definition_id":"DEFN1002072","sys_updated_by":"system","exec_time_threshold":"300","sys_created_on":"2025-06-05 04:56:17","name":"NoofVocabularyInPublishedNLUModels","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"IntegrationHub transactions for last 30 Days","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 05:32:57","kb_article_url":"","sys_tags":"","version":"","script":"var aggregator = new IHUsageMetricsAggregator();\nvar sum = aggregator.getTransactionCountForLast30Days(true);\nanswer = sum;","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Daily","sys_id":"f51daf3f04352210559073c06a02f701","definition_id":"DEFN1001226","sys_updated_by":"system","exec_time_threshold":"1000","sys_created_on":"2025-06-05 05:32:57","name":"ua_ih_usage_tx_last_30_days_compliance","sys_created_by":"system"},{"definition_type":"production","count_type":"Usage","sys_mod_count":"0","active":"true","description":"SOW adoption metric to get incident resolved count by persona such as Tier 1 and Tier 2","last_enqueued_accrual_period":"2025-07-13","overridden":"false","sys_updated_on":"2025-06-05 06:24:16","kb_article_url":"","sys_tags":"","version":"0","script":"var result = {};\nvar agentType = {};\nvar aggregation = {\n    count: 0,\n    ua_defn_agg: [],\n};\nvar TABLES = {\n    \"INCIDENT\": \"incident\",\n    \"USER_CRITERIA\": \"user_criteria\",\n    \"GROUP_MEMBER\": \"sys_user_grmember\",\n    \"USER_HAS_ROLE\": \"sys_user_has_role\",\n    \"APPLICABILITY\": \"sys_ux_applicability\",\n    \"APPLICABILITY_M2M_SCREEN\": \"sys_ux_applicability_m2m_screen\",\n    \"USER_CRITERIA_INCLUSION\": \"sys_ux_criteria_m2m_inclusion\",\n    \"USER_CRITERIA_EXCLUSION\": \"sys_ux_criteria_m2m_exclusion\"\n};\n\nvar COLUMNS = {\n    \"RESOLVED_BY\": \"resolved_by\",\n    \"SYS_ID\": \"sys_id\",\n    \"APPLICABILITY\": \"applicability\",\n    \"SCREEN\": \"screen\"\n};\n\nvar SERVICE_DESK_GROUP = \"d625dccec0a8016700a222a0f7900d06\";\nvar SERVICE_DESK_LANDING_PAGE = \"b034cf7877410110c05d885d9f5a9912\";\nvar ITIL_SYS_ID = \"282bf1fac6112285017366cb5f867469\";\nvar INCIDENT_WRITE_SYS_ID = \"260c203a870033000e56d61e36cb0bbc\";\nvar SERVICE_DESK_AGENT_SYS_ID = \"42248b8287bb02100645ddbabbbb3532\";\n\nvar resolvedUsersByRole = getResolvedUsersByRole();\nvar serviceDeskUsers = resolvedUsersByRole[\"serviceDeskUsers\"];\nvar incidentWriteITILUsers = resolvedUsersByRole[\"itilUsers\"];\nvar userCriteriaEnabled = gs.getProperty('glide.ux.user_criteria_enabled', false);\nif (userCriteriaEnabled == \"true\") {\n    var userCriteriaUsers = getFilteredUsersByUserCriteria();\n    setAnswer(userCriteriaUsers);\n} else {\n    var stdUserType = getServiceDeskGroupUsers(incidentWriteITILUsers);\n    incidentWriteITILUsers.forEach(function (user) { stdUserType[user] = stdUserType[user] || \"Tier2\" });\n    setAnswer(stdUserType);\n}\n\nfunction setAnswer(userAgentType) {\n    if (Object.keys(userAgentType).length) {\n        serviceDeskUsers.forEach(function (user) { userAgentType[user] = userAgentType[user] || \"Tier1\" });\n    }\n    result[\"Tier1\"] = getTierCount(userAgentType, \"Tier1\");\n    result[\"Tier2\"] = getTierCount(userAgentType, \"Tier2\");\n    return result;\n}\n\nfunction getTierCount(users, tier) {\n    if(users && Object.keys(users).length == 0) return 0;\n    var count = 0;\n    var usersString = (tier) ? users && Object.keys(users).filter(function (key) { return users[key] === tier; }).join(\",\") : users.join(\",\");\n    var inc = new GlideAggregate(TABLES.INCIDENT);\n    inc.addEncodedQuery('resolved_atONYesterday@javascript:gs.beginningOfYesterday()@javascript:gs.endOfYesterday()^resolved_byISNOTEMPTY');\n    inc.addAggregate('COUNT', COLUMNS.RESOLVED_BY);\n    inc.addQuery(COLUMNS.RESOLVED_BY, \"IN\", usersString);\n    inc.query();\n    while (inc.next()) {\n        count += parseInt(inc.getAggregate('COUNT', COLUMNS.RESOLVED_BY));\n    }\n    return count;\n}\n\nfunction getServiceDeskGroupUsers(users) {\n    var userObj = {};\n    var grUserRole = new GlideRecord(TABLES.GROUP_MEMBER);\n    grUserRole.addQuery('user', 'IN', users.join(','));\n    grUserRole.addQuery('group', SERVICE_DESK_GROUP);\n    grUserRole.query();\n    while(grUserRole.next()) {\n        userObj[grUserRole.getValue(\"user\")] = \"Tier1\";\n    }\n    return userObj;\n}\n\nfunction getResolvedUsersByRole() {\n    var grIncident = new GlideAggregate(TABLES.INCIDENT);\n    grIncident.addEncodedQuery('resolved_atONYesterday@javascript:gs.beginningOfYesterday()@javascript:gs.endOfYesterday()^resolved_byISNOTEMPTY');\n\tgrIncident.addNotNullQuery('resolved_by');\n    grIncident.groupBy('resolved_by');\n    grIncident.query();\n\n    var resolvedUsers = [];\n    while (grIncident.next()) {\n        var resolvedUser = grIncident.getValue(\"resolved_by\");\n        if (resolvedUser) resolvedUsers.push(resolvedUser);\n    }\n    var itilUsers = [];\n    var serviceDeskUsers = [];\n\n    var grUserRole = new GlideRecord(TABLES.USER_HAS_ROLE);\n    grUserRole.addQuery('user', 'IN', resolvedUsers.join(','));\n    grUserRole.addQuery('role.name', 'IN', 'itil,sn_service_desk_agent,sn_incident_write');\n    grUserRole.query();\n\n    var userRoleMap = {};\n    while (grUserRole.next()) {\n        var userSysId = grUserRole.getValue(\"user\");\n        var role = grUserRole.getValue(\"role\");\n        if (role == SERVICE_DESK_AGENT_SYS_ID) {\n            userRoleMap[userSysId] = role;\n        } else if (!userRoleMap[userSysId]) {\n            userRoleMap[userSysId] = role;\n        }\n    }\n    \n    for(var user in userRoleMap) {\n        if(userRoleMap[user] == SERVICE_DESK_AGENT_SYS_ID) {\n            serviceDeskUsers.push(user);\n        } else {\n            itilUsers.push(user);\n        }\n    }\n    \n    return {\n        \"serviceDeskUsers\": serviceDeskUsers,\n        \"itilUsers\": itilUsers\n    };\n}\n\nfunction getFilteredUsersByUserCriteria() {\n    var grAppM2M = new GlideRecord(TABLES.APPLICABILITY_M2M_SCREEN);\n    grAppM2M.addActiveQuery();\n    grAppM2M.addQuery('screen', SERVICE_DESK_LANDING_PAGE);\n    grAppM2M.query();\n\n    var applicabilitySysIds = [];\n    while (grAppM2M.next()) {\n        applicabilitySysIds.push(grAppM2M.getValue(\"applicability\"));\n    }\n\n    var grApp = new GlideRecord(TABLES.APPLICABILITY);\n    grApp.addActiveQuery();\n    grApp.addQuery(COLUMNS.SYS_ID, 'IN', applicabilitySysIds.join(','));\n    grApp.query();\n\n    var filteredApplicabilities = [];\n    while (grApp.next()) {\n\t\tvar sysId = grApp.getValue(\"sys_id\");\n        if (!gs.nil(grApp.getValue(\"role_names\"))) {\n            var roleNames = grApp.getValue(\"role_names\").split(\",\");\n            if (roleNames.includes('itil') || roleNames.includes('sn_incident_write') || roleNames.includes(\"sn_service_desk_agent\"))\n                filteredApplicabilities.push(sysId);\n        } else {\n            var roles = grApp.getValue(\"roles\").split(\",\");\n            if (!filteredApplicabilities.includes(sysId) && (roles.includes(ITIL_SYS_ID) || roles.includes(INCIDENT_WRITE_SYS_ID) || roles.includes(SERVICE_DESK_AGENT_SYS_ID)))\n                filteredApplicabilities.push(sysId);\n        }\n    }\n\n    var inclusionCriteria = [];\n    var exclusionCriteria = [];\n\tvar grCriteriaInc = new GlideRecord(TABLES.USER_CRITERIA_INCLUSION);\n\tgrCriteriaInc.addActiveQuery();\n\tgrCriteriaInc.addQuery(COLUMNS.APPLICABILITY, 'IN', filteredApplicabilities.join(\",\"));\n\tgrCriteriaInc.query();\n\n\twhile (grCriteriaInc.next()) {\n\t\tinclusionCriteria.push(grCriteriaInc.getValue(\"user_criteria\"));\n\t}\n\n\tvar grCriteriaExc = new GlideRecord(TABLES.USER_CRITERIA_EXCLUSION);\n\tgrCriteriaExc.addActiveQuery();\n\tgrCriteriaExc.addQuery(COLUMNS.APPLICABILITY, 'IN', filteredApplicabilities.join(\",\"));\n\tgrCriteriaExc.query();\n\n\twhile (grCriteriaExc.next()) {\n\t\texclusionCriteria.push(grCriteriaExc.getValue(\"user_criteria\"));\n\t}\n\n\tfor(var j=0; j < incidentWriteITILUsers.length; j++) {\n\t\tvar userId = incidentWriteITILUsers[j];\n\t\tif(inclusionCriteria && sn_uc.UserCriteriaLoader.userMatches(userId, inclusionCriteria) && (exclusionCriteria.length == 0 || !sn_uc.UserCriteriaLoader.userMatches(userId, exclusionCriteria))) {\n\t\t\tagentType[userId] = \"Tier1\";\n\t\t} else {\n\t\t\tif(agentType && !agentType[userId]) agentType[userId] = \"Tier2\";\n\t\t}\n\t}\n    return agentType;\n}\n\naggregation.ua_defn_agg.push({\n    sys_domain: \"sn_sow_inc\",\n    group_by: \"Tier\",\n    agg_type: \"count\",\n    agg_col: \"Tier\",\n    group1: \"Tier 1\",\n    agg_val: result[\"Tier1\"],\n});\n\naggregation.ua_defn_agg.push({\n    sys_domain: \"sn_sow_inc\",\n    group_by: \"Tier\",\n    agg_type: \"count\",\n    agg_col: \"Tier\",\n    group1: \"Tier 2\",\n    agg_val: result[\"Tier2\"],\n});\n\naggregation.count = result[\"Tier1\"] + result[\"Tier2\"];\n\nanswer = JSON.stringify(aggregation);","sys_class_name":"ua_scripted_defn","run_scope":"sn_sow_inc","schedule":"Daily","sys_id":"f5d87fb304f52210559073c06a02f767","definition_id":"DEFN1008335","sys_updated_by":"system","exec_time_threshold":"90000","sys_created_on":"2025-06-05 06:24:16","name":"IncidentResolvedCountByPersona","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Maximum monthly IntegrationHub transactions in last 12 months.","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:32:57","kb_article_url":"","sys_tags":"","version":"","script":"var aggregator = new IHUsageMetricsAggregator();\nvar sums = aggregator.getTransactionCountByMonth(true);\nvar maxCount = 0;\nwhile (sums.next()) {  \n  var currentCount = parseInt(sums.getAggregate('SUM', 'use_count'));\n  if(currentCount > maxCount) \n    maxCount = currentCount;\n}\nanswer = maxCount;","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"f91d6f3f04352210559073c06a02f7f3","definition_id":"DEFN1001223","sys_updated_by":"system","exec_time_threshold":"5000","sys_created_on":"2025-06-05 05:32:57","name":"ua_ih_usage_max_compliance","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Number of shifts with Rotate through Roster Escalation type","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:30:29","kb_article_url":"","sys_tags":"","version":"","script":"answer = getRotateThroughRosterShifts();\n\n/*\n* Count the number of shifts with Rotate through Roster Escalation type\n*/\nfunction getRotateThroughRosterShifts() {\n\tvar data = {};\n\tvar rowCount = 0;\n\tvar gr = new GlideRecord('cmn_rota');\n\tgr.setCategory('usage');\n\tgr.addActiveQuery();\n\tgr.query();\n\n\twhile (gr.next()) {\n\t\tvar gr1 = new GlideRecord('cmn_rota_roster');\n\t\tgr1.setCategory('usage');\n\t\tgr1.addActiveQuery();\n\t\tgr1.addQuery('rota', gr.sys_id);\n\t\tgr1.query();\n\t\tif (gr.use_custom_escalation == false && gr1.getRowCount() > 1)\n\t\t\trowCount++;\n\t}\n\treturn rowCount;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"f98c277b04352210559073c06a02f7cf","definition_id":"DEFN1002224","sys_updated_by":"system","exec_time_threshold":"5000","sys_created_on":"2025-06-05 05:30:29","name":"Number of shifts with Rotate through Roster Escalation type","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Total no.of scenarios without prediction (fallback topic launched)","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:57:31","kb_article_url":"","sys_tags":"","version":"","script":"var result = 0;\nvar glideGr = new GlideAggregate('open_nlu_predict_intent_feedback');\nvar encodedQuery = 'predictionISEMPTY^sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()^nlu_provider=64c023c17300330021a044764df6a70e';\n\ntry {\n    glideGr.addAggregate('COUNT', 'audit_log');\n    glideGr.addEncodedQuery(encodedQuery);\n    glideGr.query();\n    if (glideGr.next()) {\n        result = glideGr.getRowCount();\n    }\n} catch (e) {\n    result = 0;\n}\nanswer = parseInt(result);","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"f9b2377304b52210559073c06a02f7c6","definition_id":"DEFN1006663","sys_updated_by":"system","exec_time_threshold":"150000","sys_created_on":"2025-06-05 05:57:31","name":"NLU Performance total coversation without prediction of last month","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Count of the instances with a combination of IP  and Authentication scheme Filter Criteria","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:29:56","kb_article_url":"","sys_tags":"","version":"","script":"answer = getPolicyCountUsingIPAuthSchemeFilters();\n\nfunction getPolicyCountUsingIPAuthSchemeFilters() {\n    var record = new GlideAggregate('sys_authentication_policy_criteria_m2m');\n    record.addAggregate('COUNT');\n    record.groupBy('policy');\n    record.addQuery('used', 'true');\n    record.query();\n    \n    var count = 0;\n    \n    while (record.next()) {\n        //There must be atleast 2 filters criterias inorder to proceed with validation\n        if (record.getAggregate('COUNT') > 1) {\n            var gr = new GlideRecord('sys_authentication_policy_criteria_m2m');\n            gr.addQuery('policy', record.policy);\n            gr.addQuery('used', 'true');\n            gr.query();\n            var ip_filter_count = 0,\n                auth_scheme_filter_count = 0;\n            while (gr.next()) {\n\t\t\t\tif (gr.sys_auth_filter_criteria.sys_class_name == 'sys_ip_filter_criteria')\n                    ip_filter_count++;\n                else if (gr.sys_auth_filter_criteria.sys_class_name == 'sys_generic_user_filter_criteria' && gr.sys_auth_filter_criteria.sys_id == '535de592c7312010df1417b703c26050')\n                    auth_scheme_filter_count++;\n            }\n            if (ip_filter_count > 0 && auth_scheme_filter_count > 0)\n                count++;\n        }\n    }\n    return count;\n}","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"fd6c2b3b04352210559073c06a02f7f4","definition_id":"DEFN1004567","sys_updated_by":"system","exec_time_threshold":"100","sys_created_on":"2025-06-05 05:29:56","name":"getPolicyCountUsingIPAuthSchemeFilters","sys_created_by":"system"},{"definition_type":"","count_type":"Usage","sys_mod_count":"0","active":"true","description":"Total no.of Predictions","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:57:31","kb_article_url":"","sys_tags":"","version":"","script":"var result = 0;\nvar glideGr = new GlideAggregate('open_nlu_predict_intent_feedback');\nvar encodedQuery = 'sys_created_onONLast month@javascript:gs.beginningOfLastMonth()@javascript:gs.endOfLastMonth()^nlu_provider=64c023c17300330021a044764df6a70e';\n\ntry {\n    glideGr.addAggregate('COUNT', 'audit_log');\n    glideGr.addEncodedQuery(encodedQuery);\n    glideGr.query();\n    if (glideGr.next()) {\n        result = glideGr.getRowCount();\n    }\n} catch (e) {\n    result = 0;\n}\nanswer = parseInt(result);","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"fdb2377304b52210559073c06a02f7c4","definition_id":"DEFN1006665","sys_updated_by":"system","exec_time_threshold":"150000","sys_created_on":"2025-06-05 05:57:31","name":"NLU Performance total coversation of last month","sys_created_by":"system"},{"definition_type":"","count_type":"Licensing","sys_mod_count":"0","active":"true","description":"Count of users with base out-of-box Business Stakeholder role","last_enqueued_accrual_period":"","overridden":"false","sys_updated_on":"2025-06-05 05:32:28","kb_article_url":"","sys_tags":"","version":"","script":"function getRoleForDistinctUser() {\n\tvar distinctUsers = new GlideAggregate(\"sys_user_has_role\");\n\tdistinctUsers.addAggregate(\"count(distinct\", \"user\");\n\tdistinctUsers.addQuery(\"role\", \"3be5d3d1b7103300dff9fa13ee11a987\");\n\tdistinctUsers.addQuery(\"user.active\", true);\n\tdistinctUsers.groupBy(\"role\");\n\tdistinctUsers.query();\n\tif (distinctUsers.next())\n\t\treturn parseInt(distinctUsers.getAggregate(\"count(distinct\", \"user\"));\n\n\treturn 0;\n}\n\nanswer = getRoleForDistinctUser();","sys_class_name":"ua_scripted_defn","run_scope":"global","schedule":"Monthly","sys_id":"fefc273f04352210559073c06a02f792","definition_id":"DEFN1001351","sys_updated_by":"system","exec_time_threshold":"3000","sys_created_on":"2025-06-05 05:32:28","name":"GetRoleForDistinctUser","sys_created_by":"system"}]}