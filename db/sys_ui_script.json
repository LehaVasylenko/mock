{"result":[{"ignore_in_now_experience":"false","sys_mod_count":"3","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2023-05-24 08:28:06","sys_tags":"","script_name":"FieldsBasedOnAutomateHandlerWS","script":"(function() {\n    \"use strict\";\n\n    return {\n        setTargetFields: function(g_form, readOnly) {\n            if (g_form.getValue(\"check_in_frequency\") == '')\n                g_form.setReadOnly(\"actual_value\", readOnly);\n            g_form.setMandatory(\"check_in_frequency\", readOnly);\n            if (readOnly || g_form.getValue(\"actual_value\")) {\n                g_form.setMandatory(\"base_value\", true);\n                g_form.setMandatory(\"target_value\", true);\n                g_form.setMandatory(\"measure\", true);\n            } else {\n                g_form.setMandatory(\"measure\", !!(g_form.getValue(\"base_value\") || g_form.getValue(\"target_value\")));\n                g_form.setMandatory(\"base_value\", false);\n                g_form.setMandatory(\"target_value\", false);\n            }\n        },\n        type: \"FieldsBasedOnAutomateHandlerWS\"\n    };\n});","sys_class_name":"sys_ui_script","sys_id":"0053f97577301110114329354f5a999b","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/11879041532030103913ddeeff7b12d8","value":"11879041532030103913ddeeff7b12d8"},"ui_type":"1","sys_update_name":"sys_ui_script_0053f97577301110114329354f5a999b","sys_updated_by":"admin","sys_created_on":"2022-07-20 17:35:15","name":"sn_gf.FieldsBasedOnAutomateHandlerWS","sys_name":"sn_gf.FieldsBasedOnAutomateHandlerWS","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/11879041532030103913ddeeff7b12d8","value":"11879041532030103913ddeeff7b12d8"},"sys_created_by":"maint","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"99","active":"true","description":"Google Captcha UI script","use_scoped_format":"false","global":"false","sys_updated_on":"2015-08-28 01:20:37","sys_tags":"","script_name":"","script":"$j.getScript(getCaptchaAPIURL(), function() {\n\tdisplayGoogleCaptcha(\"google_captcha\");\n});\n\n/**\n* Retuns the API url. add a global language if found.\n*/\nfunction getCaptchaAPIURL() {\n\t\n\tvar baseURL = 'https://www.google.com/recaptcha/api.js';\n\tvar lang = gel('global_lang').getAttribute(\"selected\");\n\t\n\tif (lang != undefined) {\n\t\t//note that the default is en. if not supported, en will be used by default.\n\t\tbaseURL = baseURL+'?hl='+lang;\n\t}\n\treturn baseURL;\n}\nfunction displayGoogleCaptcha(id) {\n\n\tvar GC = document.getElementById(id);\n\tif (GC != undefined) {\n\t\tvar siteKey = GC.getAttribute(\"site_key\");\n\t\tif (siteKey != undefined) {\n\t\t\tvar captchaDiv = '<div class=\"g-recaptcha\" data-sitekey=\"' + siteKey + '\" ></div>';\n\t\t\tGC.innerHTML = captchaDiv;\n\t\t\tGC.style.display = 'inline-block';\t\t\t\n\t\t}\n\t}\n}\n\n","sys_class_name":"sys_ui_script","sys_id":"00f87741d7100200936043d60e6103ae","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/421beb3304352210559073c06a02f7ef","value":"421beb3304352210559073c06a02f7ef"},"ui_type":"","sys_update_name":"sys_ui_script_00f87741d7100200936043d60e6103ae","sys_updated_by":"admin","sys_created_on":"2015-05-27 00:26:29","name":"$google_captcha","sys_name":"$google_captcha","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":"read"},{"ignore_in_now_experience":"false","sys_mod_count":"4","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2019-08-08 14:48:25","sys_tags":"","script_name":"context_menu","script":"angular.module(\"sn.chg_soc.context_menu\", [\"sn.common\"])\n    .constant(\"CONTEXT_MENU\", {\n\t\t\"TRACKING_KEY\": {\n\t\t\t\"CREATE\": \"Create Change Schedule\",\n\t\t\t\"COPY\": \"Copy Change Schedule\",\n\t\t\t\"EDIT\": \"Edit Change Schedule\",\n\t\t\t\"OPEN_SCHEDULE_DEFINITION\": \"Redirect to Change Schedule Definition\",\n\t\t\t\"DELETE\": \"Delete Change Schedule\"\n\t\t},\n        \"CHG_DEF_FORM\": \"chg_soc_definition.do\",\n        \"CHG_SCHED_PAGE\": \"sn_chg_soc_change_soc.do\",\n        \"CHG_DEF_LANDING\": \"sn_chg_soc_landing.do\",\n        \"REST_API\": {\n            \"COPY_SCHEDULE\": \"/api/sn_chg_soc/soc/copySchedule\",\n            \"DELETE_SCHEDULE\": \"/api/sn_chg_soc/soc/deleteSchedule\",\n            \"UPDATE_SCHEDULE\": \"/api/sn_chg_soc/soc/updateSchedule\",\n            \"CHG_DATE_OPTIONS\": \"/api/sn_chg_soc/soc/gettablefields\"\n        },\n        \"KEYS\": {\n            \"TABKEY\": 9,\n            \"ENTER\": 13,\n            \"ESCAPE\": 27,\n            \"UP\": 38,\n            \"DOWN\": 40\n        }\n    })\n    .directive(\"focusMenuItem\", function($timeout) {\n        return {\n            scope: {\n                trigger: \"@focusMenuItem\"\n            },\n            link: function(scope, element) {\n                scope.$watch(\"trigger\", function(value) {\n                    if (value === \"true\")\n                        $timeout(function() {\n                            element.find(\"li\")[0].focus();\n                        });\n                });\n            }\n        };\n    })\n    .directive(\"trapFocus\", function(CONTEXT_MENU, $timeout) {\n        return {\n            restrict: \"A\",\n            link: function($scope, $element, $attr) {\n                function closeContextMenu() {\n                    $scope.$parent.contextMenuCtrl.contextMenu.open = false;\n                    $scope.$parent.$apply();\n                    angular.element(\"#btnContextMenu\").focus();\n                }\n\n                $element.on(\"keyup\", function(event) {\n                    if (event.keyCode === CONTEXT_MENU.KEYS.ESCAPE) {\n                        event.stopPropagation();\n                        event.preventDefault();\n                        closeContextMenu();\n                    }\n                });\n                $element.on(\"keydown\", function(event) {\n                    var list = $element.find(\"li\");\n                    var focused = angular.element(document.activeElement);\n                    var nav = focused.parents('[trap-focus]');\n                    if (nav.length) {\n                        event.preventDefault();\n                        var index, next;\n                        if (typeof index === \"undefined\")\n                            index = list.index(focused);\n                        if (event.keyCode === CONTEXT_MENU.KEYS.DOWN)\n                            index = (index === list.length - 1) ? list.length - 1 : index + 1;\n                        else if (event.keyCode === CONTEXT_MENU.KEYS.UP)\n                            index = (index === 0) ? 0 : index - 1;\n                        next = list.get(index);\n                        if (next)\n                            next.focus();\n                    }\n                });\n            }\n        };\n    })\n    .directive(\"snSocContextMenu\", [\"$window\", \"$timeout\", \"$uibModal\", \"getTemplateUrl\", \"dataService\", function($window, $timeout, $uibModal, getTemplateUrl, dataService) {\n        \"use strict\";\n\n        return {\n            restrict: \"E\",\n            replace: true,\n            templateUrl: getTemplateUrl(\"sn_chg_soc_context_menu_buttons.xml\"),\n            controller: \"ContextMenuCtrl\",\n            controllerAs: \"contextMenuCtrl\",\n            bindToController: true\n        };\n    }])\n    .controller(\"ContextMenuCtrl\", [\"$scope\", \"$window\", \"$timeout\", \"$uibModal\", \"$location\", \"getTemplateUrl\", \"dataService\", \"recordService\", \"i18n\", \"CONTEXT_MENU\", function($scope, $window, $timeout, $uibModal, $location, getTemplateUrl, dataService, recordService, i18n, CONTEXT_MENU) {\n        var contextMenuCtrl = this;\n\n        contextMenuCtrl.backToChangeSchedules = function() {\n            recordService.redirectToChangeSchedules();\n        };\n\n        contextMenuCtrl.contextMenu = {\n            showCreate: false,\n            showDelete: false,\n            showEdit: false,\n            showCopy: false,\n            open: false,\n            template: getTemplateUrl(\"sn_chg_soc_context_menu.xml\")\n        };\n\n        contextMenuCtrl.toggleContextMenu = function() {\n            contextMenuCtrl.contextMenu.showCreate = dataService.canCreate();\n            contextMenuCtrl.contextMenu.showDelete = dataService.canDelete();\n            contextMenuCtrl.contextMenu.showEdit = dataService.canWrite();\n            contextMenuCtrl.contextMenu.showCopy = dataService.canCreate();\n            contextMenuCtrl.contextMenu.open = !contextMenuCtrl.contextMenu.open;\n        };\n\n        $scope.$on(\"sn.change_soc_wizard:opened\", function() {\n            contextMenuCtrl.contextMenu.open = false;\n        });\n\n        contextMenuCtrl.toggleCopySchedule = function() {\n            contextMenuCtrl.contextMenu.open = false;\n            var modalInstance = $uibModal.open({\n                animation: true,\n                ariaLabelledBy: \"copy-change-schedule-title\",\n                ariaDescribedBy: \"copy-change-schedule-modal-body\",\n                templateUrl: getTemplateUrl(\"sn_chg_soc_copy_change_schedule.xml\"),\n                controller: \"CopyChangeModelCtrl\",\n                controllerAs: \"copyChangeModelCtrl\",\n                bindToController: true\n            });\n        };\n\n        contextMenuCtrl.toggleEditSchedule = function() {\n            contextMenuCtrl.contextMenu.open = false;\n            $uibModal.open({\n                animation: true,\n                size: \"lg\",\n                ariaLabelledBy: \"edit-change-schedule-title\",\n                ariaDescribedBy: \"edit-change-schedule-modal-body\",\n                templateUrl: getTemplateUrl(\"sn_chg_soc_editSchedule.xml\"),\n                controller: \"EditChangeModelCtrl\",\n                controllerAs: \"editChangeModelCtrl\",\n                scope: $scope\n            });\n        };\n\n        contextMenuCtrl.redirectToChangeScheduleDef = function() {\n            contextMenuCtrl.contextMenu.open = false;\n            var chgSocSysId = dataService.definition.sys_id.value;\n            if (chgSocSysId)\n                $timeout(function() {\n\t\t\t\t\tdataService.trackEvent(CONTEXT_MENU.TRACKING_KEY.OPEN_SCHEDULE_DEFINITION);\n                    $window.location.href = CONTEXT_MENU.CHG_DEF_FORM + \"?sys_id=\" + chgSocSysId;\n                }, 150);\n        };\n\n        contextMenuCtrl.deleteChangeSchedules = function() {\n            contextMenuCtrl.contextMenu.open = false;\n            var modalInstance = $uibModal.open({\n                animation: true,\n                templateUrl: getTemplateUrl(\"sn_chg_soc_remove_schedule_def.xml\"),\n                controller: \"removeScheduleCtrl\",\n                scope: $scope,\n                size: \"sm\"\n            });\n        };\n\n        contextMenuCtrl.messages = {\n            \"Back to change schedules\": i18n.getMessage(\"Back to change schedules\"),\n            \"Open context menu\": i18n.getMessage(\"Open context menu\"),\n            \"Create New Schedule\": i18n.getMessage(\"Create New Schedule\"),\n            \"Edit Schedule\": i18n.getMessage(\"Edit Schedule\"),\n            \"Copy Schedule\": i18n.getMessage(\"Copy Schedule\"),\n            \"View Schedule Definition\": i18n.getMessage(\"View Schedule Definition\"),\n            \"Delete\": i18n.getMessage(\"Delete\")\n        };\n\n    }])\n    .controller(\"removeScheduleCtrl\", [\"$scope\", \"$uibModalInstance\", \"i18n\", \"dataService\", \"recordService\", \"CONTEXT_MENU\", function($scope, $uibModalInstance, i18n, dataService, recordService, CONTEXT_MENU) {\n\n        $scope.deleteDefMsg = i18n.format(\"Do you want to delete \\\"{0}\\\"?\", dataService.definition.name.display_value);\n\n        $scope.messages = {\n            \"Delete change schedule\": i18n.getMessage(\"Delete change schedule\"),\n            \"Cancel\": i18n.getMessage(\"Cancel\"),\n            \"Delete\": i18n.getMessage(\"Delete\")\n        };\n\n        $scope.cancel = function() {\n            $uibModalInstance.dismiss(\"cancel\");\n        };\n\n        $scope.delete = function() {\n            recordService.deleteSchedule().then(function(response) {\n                $uibModalInstance.dismiss(\"cancel\");\n                if (response.chg_soc_definition && response.removed) {\n\t\t\t\t\tdataService.trackEvent(CONTEXT_MENU.TRACKING_KEY.DELETE);\n\t\t\t\t\trecordService.redirectToChangeSchedules();\n\t\t\t\t}\n                else\n                    console.error(response.error);\n            });\n        };\n\n    }])\n    .controller(\"CopyChangeModelCtrl\", [\"$uibModalInstance\", \"$window\", \"i18n\", \"dataService\", \"recordService\", \"CONTEXT_MENU\", function($uibModalInstance, $window, i18n, dataService, recordService, CONTEXT_MENU) {\n        var copyChangeModelCtrl = this;\n\n        var _initialFileName = i18n.format(\"{0} (Copy)\", dataService.definition.name.display_value);\n\n        copyChangeModelCtrl.form = {\n            name: _initialFileName,\n            placeholder: _initialFileName\n        };\n\n        copyChangeModelCtrl.close = function() {\n            $uibModalInstance.dismiss(\"cancel\");\n        };\n\n        copyChangeModelCtrl.copy = function() {\n            $uibModalInstance.dismiss(\"cancel\");\n            var copyName = copyChangeModelCtrl.form.name;\n            var owner = $window.NOW.user.userID;\n            if (!copyName || !owner)\n                return;\n            recordService.copySchedule(copyName, owner).then(function(response) {\n                var sysId = response.chg_soc_definition;\n                if (sysId && response.copied) {\n\t\t\t\t\tdataService.trackEvent(CONTEXT_MENU.TRACKING_KEY.COPY);\n\t\t\t\t\t$window.location.href = CONTEXT_MENU.CHG_SCHED_PAGE + \"?sysparm_id=\" + sysId + \"&sysparm_redirect=\" + encodeURIComponent(CONTEXT_MENU.CHG_DEF_LANDING);\n\t\t\t\t}\n                else\n                    console.error(response.error);\n            });\n        };\n\n        copyChangeModelCtrl.messages = {\n            \"Copy change schedule\": i18n.getMessage(\"Copy change schedule\"),\n            \"Copy\": i18n.getMessage(\"Copy\"),\n            \"Cancel\": i18n.getMessage(\"Cancel\"),\n            \"Close\": i18n.getMessage(\"Close\"),\n            \"Name\": i18n.getMessage(\"Name\"),\n            \"{0} (Copy)\": i18n.getMessage(\"{0} (Copy)\")\n        };\n\n    }])\n    .controller(\"EditChangeModelCtrl\", [\"$window\", \"$timeout\", \"$scope\", \"$uibModalInstance\", \"dataService\", \"recordService\", \"i18n\", \"CONTEXT_MENU\", \"socNotification\", function($window, $timeout, $scope, $uibModalInstance, dataService, recordService, i18n, CONTEXT_MENU, socNotification) {\n        var editChangeModelCtrl = this;\n\n        editChangeModelCtrl.field = {};\n        editChangeModelCtrl.field.name = dataService.definition.name.display_value;\n        editChangeModelCtrl.field.expandFilter = false;\n        editChangeModelCtrl.field.conditionDisplayValue = dataService.definition.condition.display_value;\n        editChangeModelCtrl.showSubmit = true;\n        editChangeModelCtrl.messages = {\n            \"Close\": i18n.getMessage(\"Close\"),\n            \"Title\": i18n.getMessage(\"Edit Schedule\"),\n            \"Name\": i18n.getMessage(\"Name\"),\n            \"Start date field\": i18n.getMessage(\"Start date field\"),\n            \"End date field\": i18n.getMessage(\"End date field\"),\n            \"Conditions\": i18n.getMessage(\"Conditions\"),\n            \"Show or hide filter\": i18n.getMessage(\"Show or hide filter\"),\n            \"Run\": i18n.getMessage(\"Run\"),\n            \"Cancel\": i18n.getMessage(\"Cancel\"),\n            \"Submit\": i18n.getMessage(\"Submit\")\n        };\n\n        editChangeModelCtrl.field.startDateOptions = [];\n        editChangeModelCtrl.field.endDateOptions = [];\n\n        editChangeModelCtrl.enableSubmit = function() {\n            return $scope.condition !== \"\" && !$scope.condition.startsWith(\"^ORDERBY\");\n        };\n\n        editChangeModelCtrl.enableRun = function() {\n            return false;\n        };\n\n        editChangeModelCtrl.cancel = function() {\n            $uibModalInstance.dismiss(\"cancel\");\n        };\n\n        editChangeModelCtrl.submit = function() {\n            var changeScheduleDefinition = {\n                name: editChangeModelCtrl.field.name,\n                start_date_field: editChangeModelCtrl.field.selectedStartDate,\n                end_date_field: editChangeModelCtrl.field.selectedEndDate,\n                condition: $scope.condition\n            };\n            recordService.updateSchedule(changeScheduleDefinition).then(function(result) {\n                if (result && result.updated) {\n                    $uibModalInstance.close();\n                    $timeout(function() {\n\t\t\t\t\t\tdataService.trackEvent(CONTEXT_MENU.TRACKING_KEY.EDIT);\n                        $window.location.href = CONTEXT_MENU.CHG_SCHED_PAGE + \"?sysparm_id=\" + dataService.definition.sys_id.value;\n                    }, 150);\n                } else\n                    socNotification.show(\"error\", i18n.getMessage(\"Failed to update the Change Schedule\"), 0, null, \".soc-condition-builder-modal-message\");\n            }).catch(function(response) {\n                socNotification.show(\"error\", response.data.error.message, 0, null, \".soc-condition-builder-modal-message\");\n            });\n        };\n\n        var populateSelectField = function() {\n            recordService.getDateTypeFields().then(function(result) {\n                result.forEach(function(option) {\n                    editChangeModelCtrl.field.startDateOptions.push(option);\n                    editChangeModelCtrl.field.endDateOptions.push(option);\n                });\n                editChangeModelCtrl.field.selectedStartDate = dataService.definition.start_date_field.value || \"start_date\";\n                editChangeModelCtrl.field.selectedEndDate = dataService.definition.end_date_field.value || \"end_date\";\n            });\n        };\n\n        populateSelectField();\n\n        $timeout(function() {\n            angular.element(\"#name\").focus();\n        }, 0);\n\n        $scope.table = \"change_request\";\n        $scope.condition = dataService.definition.condition.value;\n        $scope.filterConfig = {\n            dotWalking: false,\n            testFilter: false,\n            closeFilter: false,\n            runFilter: false,\n            saveFilter: false,\n            loadFilter: false,\n            sortFilter: true,\n            clearFilter: false,\n            outputType: \"encoded_query\",\n            encodedQuery: dataService.definition.condition.value\n        };\n\n        $scope.$on(\"snfilter:update_query\", function(currentScope, queryString) {\n            $scope.condition = queryString.replace(\"^ORDERBYundefined\", \"\");\n        });\n\n    }])\n    .service(\"recordService\", [\"$http\", \"$q\", \"$window\", \"$location\", \"dataService\", \"CONTEXT_MENU\", function($http, $q, $window, $location, dataService, CONTEXT_MENU) {\n        var recordService = this;\n\t\trecordService.source = \"\";\n\n        var _sortArray = function(arr) {\n            arr.sort(function(a, b) {\n                if (a.label < b.label)\n                    return -1;\n                if (a.label > b.label)\n                    return 1;\n                return 0;\n            });\n            return arr;\n        };\n\n        var _buildOptions = function(arr) {\n            var options = [];\n            arr.forEach(function(elem) {\n                options.push({\n                    label: elem.label,\n                    value: elem.columnName\n                });\n            });\n            return options;\n        };\n\n        var _getParam = function(param) {\n            var params = $location.search();\n            if (params[param] && typeof params[param] === \"string\")\n                return params[param].toLowerCase();\n            return \"$none$\";\n        };\n\n        recordService.getDateTypeFields = function() {\n            var deferred = $q.defer();\n            var url = CONTEXT_MENU.REST_API.CHG_DATE_OPTIONS + \"?sysparm_ck=\" + $window.g_ck + \"&type=date\";\n            $http.get(url).then(function(response) {\n                deferred.resolve(_buildOptions(_sortArray(response.data.result)));\n            }, function(response) {\n                deferred.reject(response);\n            });\n            return deferred.promise;\n        };\n\n        recordService.redirectToChangeSchedules = function() {\n            $window.location.href = $window.NOW.sn_chg_soc.redirect;\n        };\n\n        recordService.updateSchedule = function(changeSocDefinition) {\n            var deferred = $q.defer();\n            var url = CONTEXT_MENU.REST_API.UPDATE_SCHEDULE + \"?sysparm_ck=\" + $window.g_ck;\n            changeSocDefinition.chg_soc_definition = dataService.definition.sys_id.value;\n            $http.post(url, changeSocDefinition).then(function(response) {\n                deferred.resolve(response.data.result);\n            }, function(response) {\n                deferred.reject(response);\n            });\n            return deferred.promise;\n        };\n\n        recordService.copySchedule = function(name, userSysId) {\n            var deferred = $q.defer();\n            var url = CONTEXT_MENU.REST_API.COPY_SCHEDULE + \"?sysparm_ck=\" + $window.g_ck;\n            $http.post(url, {\n                chg_soc_definition: dataService.definition.sys_id.value,\n                name: name,\n                owner: userSysId\n            }).then(function(response) {\n                deferred.resolve(response.data.result);\n            }, function(response) {\n                deferred.reject(response);\n            });\n            return deferred.promise;\n        };\n\n        recordService.deleteSchedule = function() {\n            var deferred = $q.defer();\n            var url = CONTEXT_MENU.REST_API.DELETE_SCHEDULE + \"?sysparm_ck=\" + $window.g_ck;\n            $http.post(url, {\n                chg_soc_definition: dataService.definition.sys_id.value\n            }).then(function(response) {\n                deferred.resolve(response.data.result);\n            }, function(response) {\n                deferred.reject(response);\n            });\n            return deferred.promise;\n        };\n\t}]);","sys_class_name":"sys_ui_script","sys_id":"01109679d7e01300532c24837e6103c2","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"ui_type":"0","sys_update_name":"sys_ui_script_01109679d7e01300532c24837e6103c2","sys_updated_by":"admin","sys_created_on":"2018-02-28 15:55:15","name":"sn_chg_soc.context_menu","sys_name":"sn_chg_soc.context_menu","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"0","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2018-03-14 11:02:28","sys_tags":"","script_name":"notification","script":"angular.module(\"sn.chg_soc.notification\", [])\n\t.service(\"socNotification\", [\"snNotification\", function(snNotification) {\n\t\tvar socNotification = this;\n\t\tvar msgContainer = \".control-notif\";\n\t\tvar options = {\n\t\t\ttop: 20,\n\t\t\tgap: 10,\n\t\t\tduration: 0\n\t\t};\n\n\t\tsnNotification.setOptions(options);\n\n\t\tsocNotification.show = function(type, message, duration, onClick, container) {\n\t\t\tduration = duration ? duration : options.duration;\n\t\t\tcontainer = container ? container : msgContainer;\n\t\t\t// Maintain a single message at a time.\n\t\t\tsocNotification.hide();\n\t\t\tsnNotification.show(type, message, duration, onClick, container);\n\t\t};\n\n\t\t// Ensures attached handler for the message is invoked; destroys scope, clears timeout, updates snNotification array of messages.\n\t\tsocNotification.hide = function() {\n\t\t\tangular.element(msgContainer).find(\".notification-container .close\").click();\n\t\t};\n\n\t\tsocNotification.setOptions = function(options) {\n\t\t\tsnNotification.setOptions(options);\n\t\t};\n\t}]);","sys_class_name":"sys_ui_script","sys_id":"01e2b943c3e01300b6dcdfdc64d3ae71","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"ui_type":"","sys_update_name":"sys_ui_script_01e2b943c3e01300b6dcdfdc64d3ae71","sys_updated_by":"admin","sys_created_on":"2018-03-04 11:12:39","name":"sn_chg_soc.notification","sys_name":"sn_chg_soc.notification","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"9","active":"true","description":"Common UI script for CSRF handing. This script is for Password Reset Application","use_scoped_format":"false","global":"false","sys_updated_on":"2014-10-22 15:30:33","sys_tags":"","script_name":"","script":"/*\n* Read CSRF token from the master form.\n*/\nfunction findCSRFElement() {\n\treturn gel('pwd_csrf_token');\n}\n\n/**\n* Handles security from AJAX reponse.\n*/\nfunction handleSecurityFrom(response) {\n\t\n\tvar res = response.responseXML.getElementsByTagName('security');\n    \n    try {\n\t\tvar status = res[0].getAttribute(\"status\");\n\t\t\n\t\tif(status =='error'){\n\t\t\t\n\t\t\t// security violation happened.let's send it to the error page.\n\t\t\tvar message= res[0].getAttribute(\"message\");\n\t\t\tsubmitWithBlock('$pwd_error.do', message);\n\t\t\treturn;\n\t\t}\n\t\tvar newToken =  res[0].getAttribute(\"pwd_csrf_token\");\n\t\tfindCSRFElement().value= newToken;\n\t}\n\tcatch(err){\n\t\t// should not happen. just reload the page. \n\t\tthis.location.replace('$pwd_error.do?sysparam_error=unexpected_security_error');\n\t}\n}\n\n/**\n* Submit for OK status.\n*/\nfunction submitWithOK(action){\n    var form = gel('pwd_master_form');\n\tform.action = action;\n\tform.submit();\n}\n\n/**\n* Submit for OK status.\n*/\nfunction submitWithOKAndSysParam(action, sysparamName,sysparamValue){\n\tvar form = gel('pwd_master_form');\n\tform.action = action;\n\tgel(sysparamName).value =sysparamValue;\n\tform.submit();\n}\n\n/**\n* Submit for block status.\n*/\nfunction submitWithBlock(action,msg){\n    var form = gel('pwd_master_form');\n\tform.action = action;\n\tgel('sysparm_error').value = msg;\n\tform.submit(); \n}","sys_class_name":"sys_ui_script","sys_id":"02e74e129f22010054005f29468ba3b1","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/421beb3304352210559073c06a02f7ef","value":"421beb3304352210559073c06a02f7ef"},"ui_type":"","sys_update_name":"sys_ui_script_02e74e129f22010054005f29468ba3b1","sys_updated_by":"admin","sys_created_on":"2013-07-16 01:02:01","name":"pwd_csrf_common_ui_script","sys_name":"pwd_csrf_common_ui_script","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":"read"},{"ignore_in_now_experience":"false","sys_mod_count":"28","active":"true","description":"","use_scoped_format":"false","global":"true","sys_updated_on":"2023-03-01 18:19:41","sys_tags":"","script_name":"","script":"var HermesTopicInspectorUIScript = Class.create();\n\nHermesTopicInspectorUIScript.prototype = {\n    NA: getMessage(\"NA\"),\n\n    initialize: function() {},\n\n    invalidServerResponsePopUp: function() {\n        var gm = new GlideModal('glide_info');\n        gm.setTitle(getMessage(\"Received an invalid response from the server\"));\n        gm.on('closeconfirm', function() {\n            GlideModal.prototype.get('hermes_consumer_viewer').destroy();\n        });\n        gm.render();\n    },\n\n    valueOrNA: function(value) {\n        return value ? value : this.NA;\n    },\n\n    offsetValueOrNA: function(value) {\n        return ((value || value == 0) && value > -1) ? value : this.NA;\n    },\n\n    getResponseElements: function(response, tagName) {\n        if (!response)\n            return;\n\n        var responseXML = response.responseXML;\n        if (!response.responseXML)\n            return;\n\n        var documentElement = responseXML.documentElement;\n        if (!documentElement)\n            return;\n\n        var elements = documentElement.getElementsByTagName(tagName);\n        if (!elements)\n            return;\n\n        return elements;\n    },\n\n    groupAndSortPartitions: function(partitionInfoList, nearDC) {\n        var partitionInfoArr = [].slice.call(partitionInfoList);\n        dcGroupedPartitions = partitionInfoArr.reduce(function(accum, elem) {\n            (accum[elem.getAttribute(\"dc\")] = accum[elem.getAttribute(\"dc\")] || []).push(elem);\n            return accum;\n        }, {});\n        var dcs = Object.keys(dcGroupedPartitions);\n        dcs.sort(function(a, b) { // Sort so all partitions from the near side are shown first \n            if (a == nearDC)\n                return 1;\n            else if (b == nearDC)\n                return -1;\n\n            return 0;\n        });\n        var result = [];\n        for (var i = 0; i < dcs.length; i++) {\n            var dcPartitionInfo = dcGroupedPartitions[dcs[i]];\n            if (!dcPartitionInfo)\n                continue;\n\n            dcPartitionInfo.sort(function(a, b) { // Sort by partition number\n                return b.getAttribute(\"value\") - a.getAttribute(\"value\");\n            });\n            result.push(dcPartitionInfo);\n        }\n        return result.flatMap(function(partitionInfo) {\n            return partitionInfo;\n        });\n    }\n\n};","sys_class_name":"sys_ui_script","sys_id":"02f1b50a434521103464827cfbb8f22e","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/03d4abbf04312210559073c06a02f7f9","value":"03d4abbf04312210559073c06a02f7f9"},"ui_type":"0","sys_update_name":"sys_ui_script_02f1b50a434521103464827cfbb8f22e","sys_updated_by":"admin","sys_created_on":"2023-02-17 18:35:45","name":"HermesTopicInspectorUIScript","sys_name":"HermesTopicInspectorUIScript","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"2","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2023-03-20 12:38:22","sys_tags":"","script_name":"landing_decoration","script":"angular.module(\"sn.chg_model_ui.landing\")\n.directive(\"snLandingDecoration\", function($window, urlTools) {\n\t\"use strict\";\n\treturn {\n\t\treplace : true,\n\t\trestrict : \"E\",\n\t\ttemplateUrl : urlTools.getPartialURL(\"sn_chg_model_ui_cmu_landing_decoration.xml\", \"v=\" + $window.NOW.macro_flush_stamp)\n\t};\n});\n","sys_class_name":"sys_ui_script","sys_id":"049482fc53d350100999ddeeff7b1236","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/bb9f15345332101034d1ddeeff7b12c8","value":"bb9f15345332101034d1ddeeff7b12c8"},"ui_type":"0","sys_update_name":"sys_ui_script_049482fc53d350100999ddeeff7b1236","sys_updated_by":"admin","sys_created_on":"2020-09-14 14:08:17","name":"sn_chg_model_ui.landing_decoration","sys_name":"sn_chg_model_ui.landing_decoration","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/bb9f15345332101034d1ddeeff7b12c8","value":"bb9f15345332101034d1ddeeff7b12c8"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"34","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2024-03-31 14:14:02","sys_tags":"","script_name":"","script":"var PwdUserUnlockManager = Class.create();\n\nPwdUserUnlockManager.prototype = {\n\tDEBUG : true,\n\trequestId : \"\",\n\tprocessId : \"\",\n\tuserId : \"\",\n\terrorMsg : \"\",\n\tstartTime : \"\",\n\twfCheckDoneFrequency : 500,\n\twfTimeOut : 300000,\n\twfContextSysId : \"\",\n\tresultCallback : null,\n\n\tinitialize : function (_wfCheckDoneFrequency, _wfTimeOut) {\n\t\tthis.wfCheckDoneFrequency = _wfCheckDoneFrequency;\n\t\tthis.wfTimeOut = _wfTimeOut;\n\t},\n\n\t// ---------------------------------------------------------------------------------\n\t// ------------- Handle the retrieval of the account lock status : -----------------\n\t// ---------------------------------------------------------------------------------\n\n\t// Triggers the workflow to get the user's lock state:\n\t//\n\t// The resultCallback param is a function,in the calling page, that will be called once the workflow completes.\n\tinitiateGetLockStateWF : function(processId, requestId, userId, resultCallback) {\n\t\tthis.requestId = requestId;\n\t\tthis.processId = processId;\n\t\tthis.resultCallback = resultCallback;\n\n\t\tthis.startTime = new Date().getTime();\n\n\t\tvar ga = new GlideAjax('PwdAjaxUserUnlockProcessor');\n\n\t\t// These 3 params are required.\n\t\tga.addParam('sysparm_name', 'initiateGetLockStateWF');\n\t\tga.addParam('sysparam_request_id', requestId);\n\t\tga.addParam('sysparam_pwd_csrf_token', findCSRFElement().value);\t// csrf token\n\t\tga.getXML(this.CallbackForInitiateGetLockStateWF.bind(this));\n\t},\n\n\n\t// Callback to process the initial ajax response (of triggering the workflow):\n\tCallbackForInitiateGetLockStateWF : function(response) {\n\t\t// Handle security before anything else:\n\t\thandleSecurityFrom(response);\n\n\t\t// reponse message. this always exists.\n\t\tvar res =  response.responseXML.getElementsByTagName(\"response\");\n\t\tvar status = res[0].getAttribute(\"status\");\n\t\tvar message = res[0].getAttribute(\"message\");\n\t\tthis.wfContextSysId = res[0].getAttribute(\"value\");\n\t\tif (status.match(/failure/i)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setTimeoutForGetStateRefresh();\n\t},\n\n\tsetTimeoutForGetStateRefresh : function() {\n\t\twindow.setTimeout(this.checkGetLockStateWF.bind(this), this.wfCheckDoneFrequency);\n\t},\n\n\n\t// Poll if the workflow to get the user's lock state is complete:\n\tcheckGetLockStateWF : function() {\n\t\tvar currTime = new Date().getTime();\n\t\tif (currTime - this.startTime > this.wfTimeOut) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar ga = new GlideAjax('PwdAjaxUserUnlockProcessor');\n\t\tga.addParam('sysparm_name', 'checkGetLockStateWFState');\n\t\tga.addParam('sysparam_wf_context_sys_id', this.wfContextSysId);\n\t\tga.addParam('sysparam_pwd_csrf_token', findCSRFElement().value);\t// csrf token\n\t\tga.getXML(this.CallbackForCheckGetLockStateWF.bind(this));\n\t},\n\n\n\t// Callback to process the lock state response:\n\tCallbackForCheckGetLockStateWF : function(response) {\n\t\t// Handle security before anything else:\n\t\thandleSecurityFrom(response);\n\n\t\tvar res =  response.responseXML.getElementsByTagName(\"response\");\n\t\tvar state = res[0].getAttribute(\"state\");\n\t\tvar result = res[0].getAttribute(\"result\");\n\n\t\tif (!state.match(/finished/i)) {\n\t\t\tthis.setTimeoutForGetStateRefresh();\n\t\t\treturn;\n\t\t}\n\n\t\tthis.resultCallback(result);\n\t},\n\n\n\t// ---------------------------------------------------------------------------------\n\t// -------------------- Handle the actual account ulocking: ------------------------\n\t// ---------------------------------------------------------------------------------\n\n\t// Trigger the workflow to get the user's lock state:\n\t//\n\t// The resultCallback param is a function,in the calling page, that will be called once the workflow completes.\n\tinitiateUnlockWF : function(processId, requestId, resultCallback) {\n\t\tthis.requestId = requestId;\n\t\tthis.processId = processId;\n\t\tthis.resultCallback = resultCallback;\n\n\t\tthis.startTime = new Date().getTime();\n\n\t\tvar ga = new GlideAjax('PwdAjaxUserUnlockProcessor');\n\n\t\t// These 3 params are required.\n\t\tga.addParam('sysparm_name', 'initiateUnlockWF');\n\t\tga.addParam('sysparam_request_id', requestId);\n\t\tga.addParam('sysparam_pwd_csrf_token', findCSRFElement().value);\t// csrf token\n\t\tga.getXML(this.CallbackForInitiateUnlockWF.bind(this));\n\t},\n\n\t// Process the initial ajax response (of triggering the workflow):\n\tCallbackForInitiateUnlockWF : function(response) {\n\t\t// Handle security before anything else:\n\t\thandleSecurityFrom(response);\n\n\t\t// reponse message. this always exists.\n\t\tvar res =  response.responseXML.getElementsByTagName(\"response\");\n\t\tvar status = res[0].getAttribute(\"status\");\n\t\tvar message = res[0].getAttribute(\"message\");\n\t\tthis.wfContextSysId = res[0].getAttribute(\"value\");\n\t\tif (status.match(/failure/i)) {\n\t\t\tvar isFlow = this.isFlow().toString();\n\t\t\tif(isFlow === 'true') {\n\t\t\t\tthis.resultCallback(status);\n\t\t\t} \n\t\t\treturn;\n\t\t}\n\n\t\tthis.setTimeoutForUnlockRefresh();\n\t},\n\n\tsetTimeoutForUnlockRefresh : function() {\n\t\twindow.setTimeout(this.checkUnlockWF.bind(this), this.wfCheckDoneFrequency);\n\t},\n\n\t//To check if the execution is through workflow or flow\n    isFlow: function() {\n        var ga = new GlideAjax('PwdAjaxWFRequestProcessor');\n        ga.addParam('sysparm_name', 'isFlow');\n        ga.addParam('sysparm_process_id', this.processId);\n        ga.getXMLWait();\n        return ga.getAnswer();\n    },\n\n\t// Poll if the workflow to get the user's lock state is complete:\n\tcheckUnlockWF : function() {\n\t\tvar currTime = new Date().getTime();\n\t\tif (currTime - this.startTime > this.wfTimeOut) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar is_flow = this.isFlow().toString();\n\n\t\tif(is_flow === 'true'){\n\t\t\tsubmitWithOKAndSysParam('$pwd_unlock_success.do', 'sysparm_success', 'SUCCESS');\n\t\t} else {\n\t\t\tvar ga = new GlideAjax('PwdAjaxUserUnlockProcessor');\n\t\t\tga.addParam('sysparm_name', 'checkUnlockWFState');\n\t\t\tga.addParam('sysparam_wf_context_sys_id', this.wfContextSysId);\n\t\t\tga.addParam('sysparam_pwd_csrf_token', findCSRFElement().value);\t// csrf token\n\t\t\tga.getXML(this.CallbackForCheckUnlockWF.bind(this));\n\t\t}\n\t},\n\n\n\tCallbackForCheckUnlockWF : function(response) {\n\t\t// Handle security before anything else:\n\t\thandleSecurityFrom(response);\n\n\t\tvar res =  response.responseXML.getElementsByTagName(\"response\");\n\t\tvar state = res[0].getAttribute(\"state\");\n\t\tvar result = res[0].getAttribute(\"result\");\n\n\t\tif (!state.match(/finished/i)) {\n\t\t\tthis.setTimeoutForUnlockRefresh();\n\t\t\treturn;\n\t\t}\n\n\t\tthis.resultCallback(result);\n\t},\n\n\n/*\n\t// Process the result of the workflow to get user's lock state:\n\tprocessGetLockStateWF : function () {\n\t\tvar ga = new GlideAjax('PwdAjaxUserUnlockProcessor');\n\t\t// These 3 params are required.\n\t\tga.addParam('sysparm_name', 'getLockStateWFResults');\n\t\tga.addParam('sysparam_wf_context_sys_id', this.wfContextSysId);\n\t\tga.addParam('sysparam_pwd_csrf_token', findCSRFElement().value);\t// csrf token\n\t\tga.getXML(this.callbackForProcessGetLockStateWF.bind(this));\n\t},\n\n\n\tcallbackForProcessGetLockStateWF : function () {\n\t\tthis._alert(\"client: callbackForProcessLockStateWF triggered!\");\n\n\t\t// Handle security before anything else:\n\t\thandleSecurityFrom(response);\n\n\t\t// Retrieve and test the overall workflow result:\n\t\tvar res =  response.responseXML.getElementsByTagName(\"response\");\n\n\t\tvar wfGeneralStatus = res[0].getAttribute(\"status\");\n\t\tvar message = res[0].getAttribute(\"message\");\n\t\tvar value = res[0].getAttribute(\"value\");\n\n\t\t// Check for failure:\n\t\tif (!wfGeneralStatus.match(/success/i)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Retrieve and test all activities results:\n\t\tvar history = response.responseXML.getElementsByTagName('history');\n\t\tvar names = response.responseXML.getElementsByTagName('activity');\n\n\t\tvar bAllActivitiesSucceeded = true;\n\n\t\t// An array of obj representing the state of an activity\n\t\tvar allActivitiesObj = [];\n\n\t\t// Grab all the activities in the workflow and build an array of objects\n\t\tfor (var i = 0; i < history.length; i++) {\n\t\t\tvar tmp = {};\n\t\t\ttmp.name = names[i].getAttribute(\"name\");\n\t\t\ttmp.index = history[i].getAttribute(\"activity_index\");\n\t\t\ttmp.result = history[i].getAttribute(\"activity_result\");\n\n\t\t\ttmp.faultDescription = history[i].getAttribute(\"fault_description\");\n\t\t\tif (tmp.faultDescription == undefined) {\n\t\t\t\ttmp.faultDescription = \"\";\n\t\t\t}\n\n\t\t\tallActivitiesObj.push(tmp);\n\n\t\t\tthis._alert(\"Adding activity: \" + \"index=\" + tmp.index + \" : name=\" + tmp.name + \" : result=\" + tmp.result + \" : faultDescription=\" + tmp.faultDescription);\n\t\t}\n\n\t\t// Iterate through activity history list to find the first error\n\t\tallActivitiesObj.sort(function(a, b) { return b.index - a.index; });\n\t\tvar failingActivityObj = {};\n\t\tfor (var j in allActivitiesObj) {\n\t\t\tvar eachObj = allActivitiesObj[j];\n\n\t\t\tif (eachObj.result == undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (eachObj.result.match(/failure/i)) {\n\t\t\t\tallActivitiesSucceeded = false;\n\t\t\t\tthis._alert(\"Found an error in activity history -> \" + eachObj.name);\n\n\t\t\t\t// Check if faultDescription is an json object. If so, this was created via SNC.PwdWorkflowManager().creatError().\n\t\t\t\ttry {\n\t\t\t\t\tfailingActivityObj = eval(\"(\" + eachObj.faultDescription + \")\");\n\t\t\t\t\tthis._alert(\"Fault description created via new SNC.PwdWorkflowManager().getErrorJSONString(...): \\n* wfName=\" +\n\t\t\t\t\t\t\t\tfailingActivityObj.wfName + \"\\n* activityName=\" + failingActivityObj.activityName + \" \\n* message=\" +\n\t\t\t\t\t\t\t\tfailingActivityObj.message + \" \\n* isFatal=\" + failingActivityObj.isFatal);\n\t\t\t\t} catch (e) {\n\t\t\t\t\t//The faultDescription was created manually, and not via new SNC.PwdWorkflowManager().getErrorJSONString(...)\n\t\t\t\t\tthis._alert(\"Fault description created manually\");\n\t\t\t\t\tfailingActivityObj.message = eachObj.faultDescription;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (!allActivitiesSucceeded) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (failingActivityObj) {\n\t\t\tvar msg = \"Password reset failed from a non-fatal error. Would you like to retry?\";\n\t\t\tthis._alert(msg);\n\n\t\t\tsubmitWithOKAndSysParam('pwd_new.do','sysparm_page_text', msg);\n\n\t\t}\n\t},\n\n*/\n\n\t_alert : function(msg) {\n\t\tif (this.DEBUG) {\n\t\t\talert(msg);\n\t\t}\n\t},\n\n\ttype : \"PwdUserUnlockManager\"\n};\n\n","sys_class_name":"sys_ui_script","sys_id":"054409f5bf111100c7e39058ff07399c","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/421beb3304352210559073c06a02f7ef","value":"421beb3304352210559073c06a02f7ef"},"ui_type":"0","sys_update_name":"sys_ui_script_054409f5bf111100c7e39058ff07399c","sys_updated_by":"admin","sys_created_on":"2013-11-27 23:44:48","name":"PwdUserUnlockManager","sys_name":"PwdUserUnlockManager","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"0","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2020-09-14 20:19:11","sys_tags":"","script_name":"notification","script":"angular.module(\"sn.chg_model_ui.notification\", [])\n\t.service(\"landingNotification\", [\"snNotification\", function(snNotification) {\n\t\tvar landingNotification = this;\n\t\tvar msgContainer = \".control-notif\";\n\t\tvar options = {\n\t\t\ttop: 20,\n\t\t\tgap: 10,\n\t\t\tduration: 0\n\t\t};\n\n\t\tsnNotification.setOptions(options);\n\n\t\tlandingNotification.show = function(type, message, duration, onClick, container) {\n\t\t\tduration = duration ? duration : options.duration;\n\t\t\tcontainer = container ? container : msgContainer;\n\t\t\t// Maintain a single message at a time.\n\t\t\tlandingNotification.hide();\n\t\t\tsnNotification.show(type, message, duration, onClick, container);\n\t\t};\n\n\t\t// Ensures attached handler for the message is invoked; destroys scope, clears timeout, updates snNotification array of messages.\n\t\tlandingNotification.hide = function() {\n\t\t\tangular.element(msgContainer).find(\".notification-container .close\").click();\n\t\t};\n\n\t\tlandingNotification.setOptions = function(options) {\n\t\t\tsnNotification.setOptions(options);\n\t\t};\n\t}]);","sys_class_name":"sys_ui_script","sys_id":"05795bbc539b10100999ddeeff7b128d","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/bb9f15345332101034d1ddeeff7b12c8","value":"bb9f15345332101034d1ddeeff7b12c8"},"ui_type":"0","sys_update_name":"sys_ui_script_05795bbc539b10100999ddeeff7b128d","sys_updated_by":"admin","sys_created_on":"2020-09-14 20:19:11","name":"sn_chg_model_ui.notification","sys_name":"sn_chg_model_ui.notification","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/bb9f15345332101034d1ddeeff7b12c8","value":"bb9f15345332101034d1ddeeff7b12c8"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"6","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2025-06-05 05:18:18","sys_tags":"","script_name":"","script":"function ldapSendOneTimePassword() {\n\tvar ajax = new GlideAjax(\"LDAPOneTimePasswordGenerator\");\n    ajax.addParam(\"sysparm_name\", \"generateOneTimePassword\");\n    ajax.getXML(processLDAPSendOneTimePasswordResponse.bind(this)); \n\treturn false;\n}\n\nfunction processLDAPSendOneTimePasswordResponse(response) {\n    var results = response.responseXML.getElementsByTagName(\"result\"); \n\tGlideUI.get().clearOutputMessages();\n    if(results && results.length >0) {\n        var msg = results[0].getAttribute(\"msg\");\t\n        GlideUI.get().addOutputMessage({msg: msg, type: \"info\", id: null});\n    } \n}","sys_class_name":"sys_ui_script","sys_id":"0662062193102200da8d37ae867ffba5","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/d6c727bf04b12210559073c06a02f7fe","value":"d6c727bf04b12210559073c06a02f7fe"},"ui_type":"0","sys_update_name":"sys_ui_script_0662062193102200da8d37ae867ffba5","sys_updated_by":"system","sys_created_on":"2016-06-28 21:27:53","name":"LDAPAuthClientUtils","sys_name":"LDAPAuthClientUtils","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"39","active":"true","description":"Service vcabDataSource","use_scoped_format":"false","global":"false","sys_updated_on":"2022-10-11 12:20:17","sys_tags":"","script_name":"","script":"(function() {\n    'use strict';\n\n    /*\n     * Use this service in angular components and vcab widgets to access the data.\n     */\n    angular.module('sn.itsm.vcab.common')\n        .factory('vcabDataSource', function($http, $q, Tables, $log, dataUtil, $rootScope) {           \n            var CLONE_META_API = '/api/now/clone_request_calendar/clone/';\n\n            function getNewPromise(promise, transformResult) {\n                return $q(function(resolve, reject) {\t\t\t\t\t\n                    promise.then(function(response) {\n                        var r = response.data.result;\n                        if (transformResult)\n                            r = transformResult(r);\t\t\n                        resolve(r);\n                    }, function(response) {\n                        reject(response);\n                    });\n                });\n            }\n\n            var Source = {\n                change: {\n                    getRelatedWindows: function(sysId, startDate, endDate) {\n                        return getNewPromise($http.get(CLONE_META_API + sysId + '/' + dataUtil.jsToWsDate(startDate, true) + '/' + dataUtil.jsToWsDate(endDate, true)));\n                    },\n                }\n            };\n            return Source;\n        });\n\n}());","sys_class_name":"sys_ui_script","sys_id":"092d882053025110a6f8ddeeff7b1271","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/3b83a3f304312210559073c06a02f788","value":"3b83a3f304312210559073c06a02f788"},"ui_type":"0","sys_update_name":"sys_ui_script_092d882053025110a6f8ddeeff7b1271","sys_updated_by":"admin","sys_created_on":"2022-09-16 16:14:10","name":"clone_calendar_vcom.vcabDataSource","sys_name":"clone_calendar_vcom.vcabDataSource","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"13","active":"true","description":"Module sn.change_management.cab.  Main application module definition.","use_scoped_format":"false","global":"false","sys_updated_on":"2021-04-13 16:45:14","sys_tags":"","script_name":"app","script":"angular.module(\"sn.change_management.cab\", ['sn.common', 'sn.calendar', 'ui.bootstrap.modal', 'sn.change_management.cab.core', 'sn.change_management.cab.initialLoad', 'sn.change_management.cab.agenda', 'sn.change_management.cab.approval', 'sn.change_management.cab.attendees', 'sn.change_management.cab.calendar', 'sn.change_management.cab.runtime_state', 'sn.app_common.timers', 'sn.change_management.cab.loadWait', 'sn.change_management.cab.watcher'])\n.run([\"getTemplateUrl\", \"$templateRequest\", function(getTemplateUrl, $templateRequest) {\n\tvar t = \"&t=\" + new Date().getTime();\n\t$templateRequest(getTemplateUrl('common_cal_dhtmlx_scheduler.xml'), false);\n\t$templateRequest(getTemplateUrl(\"vcab_sn_vcab_calendar.xml\"), false);\n}]);","sys_class_name":"sys_ui_script","sys_id":"096bad6bd712220034d145bcce61039a","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"ui_type":"0","sys_update_name":"sys_ui_script_096bad6bd712220034d145bcce61039a","sys_updated_by":"admin","sys_created_on":"2016-10-12 11:03:02","name":"sn_change_cab.app","sys_name":"sn_change_cab.app","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"21","active":"true","description":"Module sn.app_common.  Definition for the Common Application Components for Service Portal","use_scoped_format":"false","global":"false","sys_updated_on":"2021-03-01 18:16:04","sys_tags":"","script_name":"","script":"angular.module(\"sn.app_common\", [\"sn.app_common.snapi\",\"sn.app_common.time\",\"sn.app_common.sanitize\"])\n.directive(\"focusThisElement\", [\"$timeout\", \"$log\", function($timeout, $log) {\n    return {\n\t\t\"restrict\": 'A',\n        \"scope\": {\n\t\t\ttrigger: \"<focusThisElement\",\n\t\t\tscroll: \"@preventFocusScroll\"\n\t\t},\n        \"link\": function(scope, element) {\n            scope.$watch(\"trigger\", function(value) {\n                if (value === true)\n                    $timeout(function() { element[0].focus({\"preventScroll\": scope.scroll}); });\n            });\n        }\n    };\n}]);\n\nangular.module(\"sn.app_common.snapi\", [])\n\t.constant('SNAPI', {\n\t\tSERVICE: {\n\t\t\tTABLE: '/api/now/table/',\n\t\t\tNOTIFICATION: '/api/now/session/notification'\n\t\t}\n\t});\n\nangular.module(\"sn.app_common.time\", [])\n\t.constant('TIME', {\n\t\tSECOND: 1000,\n\t\tMINUTE: 60000,\n\t\tHOUR: 3600000,\n\t\tDAY: 86400000\n\t});\n\nangular.module(\"sn.app_common.sanitize\", [])\n\t.filter(\"sanitize\", ['$sce', '$sanitize', function($sce, $sanitize) {\n\t\treturn function(htmlRaw) {\n\t\t\treturn $sce.trustAsHtml($sanitize(htmlRaw));\n\t\t};\n\t}]);","sys_class_name":"sys_ui_script","sys_id":"0b1f4057d712220034d145bcce61032f","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/39fbaf7704352210559073c06a02f71e","value":"39fbaf7704352210559073c06a02f71e"},"ui_type":"0","sys_update_name":"sys_ui_script_0b1f4057d712220034d145bcce61032f","sys_updated_by":"admin","sys_created_on":"2016-10-11 09:43:24","name":"app_com","sys_name":"app_com","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"5","active":"true","description":"","use_scoped_format":"false","global":"true","sys_updated_on":"2018-04-10 21:51:41","sys_tags":"","script_name":"","script":"var ConnectionUtils = {\n\tgetSysConnection: function() {\n\t\tvar connGR = new GlideRecord(\"sys_connection\");\n\t\tconnGR.addQuery('active', true);\n\t\tconnGR.addQuery(\"connection_alias\", g_form.getValue(\"connection_alias\"));\n\t\tconnGR.addQuery(\"sys_domain\", g_form.getValue(\"sys_domain\"));\n\t\tconnGR.addQuery(\"sys_id\", \"!=\", g_form.getUniqueValue());\n\t\tconnGR.query();\n\t\n\t\treturn connGR;\n\t},\n\n\tdoConnection: function(verb) {\n\t\tif (g_form.getValue(\"active\") == \"false\") {\n\t\t\tgsftSubmit(null, g_form.getFormElement(), verb);\n\t\t}\n\t\tvar connGR;\n\t\tvar performOverride = function() {\n\t\t\tconnGR.active = false;\n\t\t\tconnGR.update();\n\t\t\tgsftSubmit(null, g_form.getFormElement(), verb);\n\t\t};\n\t\t\n\t\tvar grConnAlias = new GlideRecord(\"sys_alias\");\n\t\tif (grConnAlias.get(g_form.getValue(\"connection_alias\"))) {\n\t\t\tif (grConnAlias.multiple_connections == 'true') {\n\t\t\t\tgsftSubmit(null, g_form.getFormElement(), verb);\n\t\t\t} else {\n\t\t\t\tconnGR = this.getSysConnection();\n\n\t\t\t\tif (connGR.next()) {\n\t\t\t\t\tvar currName = g_form.getValue(\"name\");\n\t\t\t\t\tif (connGR.name.toUpperCase() == currName.toUpperCase()) {\n\t\t\t\t\t\tvar uniqueErrMsg = new GwtMessage().getMessage(\"A connection with {0} name already exists, duplicate connection names are not allowed\", currName);\n\t\t\t\t\t\tg_form.addErrorMessage(uniqueErrMsg);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\t// Get user confimation to deactive the current active one\n\t\t\t\t\tvar title = new GwtMessage().getMessage(\"Confirm inactivation\");\n\t\t\t\t\tvar question = new GwtMessage().getMessage(\"You already have a {0} connection active, {1}.<br/>By making this one active, {2} will become inactive. <br/>Are you sure you want to make {3} the active connection?\", connGR.protocol, connGR.name, connGR.name, currName);\n\n\t\t\t\t\tthis.confirmOverride(title, question, performOverride);\n\t\t\t\t} else {\n\t\t\t\t\tgsftSubmit(null, g_form.getFormElement(), verb);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tconfirmOverride: function(title, question, onPromptComplete) {\n\t\tvar dialogClass = (window.GlideModal) ? GlideModal : GlideDialogWindow;\n\t\tvar dialog = new GlideDialogWindow('glide_confirm_basic');\n\t\tdialog.setTitle(title);\n\t\tdialog.setSize(400, 325);\n\t\tdialog.setPreference('title', question);\n\t\tdialog.setPreference('onPromptComplete', onPromptComplete);\n\t\tdialog.render();\n\t},\n\t\n};\n","sys_class_name":"sys_ui_script","sys_id":"0da7422d5f1d1300a09a2abd7f4666df","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/fdd8237704f12210559073c06a02f787","value":"fdd8237704f12210559073c06a02f787"},"ui_type":"0","sys_update_name":"sys_ui_script_0da7422d5f1d1300a09a2abd7f4666df","sys_updated_by":"admin","sys_created_on":"2018-04-06 03:34:34","name":"ConnectionUtils","sys_name":"ConnectionUtils","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"78","active":"true","description":"AI Search Assist module and service","use_scoped_format":"false","global":"false","sys_updated_on":"2020-09-01 02:02:11","sys_tags":"","script_name":"","script":"angular.module(\"sn.app_common.aisa\", [\"sn.app_common.aisa.utils\", \"sn.app_common.aisa.search\", \"sn.app_common.aisa.action\"]);","sys_class_name":"sys_ui_script","sys_id":"0e4bf6d167a65010b3d782f45685ef61","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/e4dd6b3304752210559073c06a02f70c","value":"e4dd6b3304752210559073c06a02f70c"},"ui_type":"0","sys_update_name":"sys_ui_script_0e4bf6d167a65010b3d782f45685ef61","sys_updated_by":"admin","sys_created_on":"2020-08-10 00:37:53","name":"app_com.aisa.app","sys_name":"app_com.aisa.app","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"2","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2023-03-20 12:38:26","sys_tags":"","script_name":"landing_splash_screens","script":"/* Module for splash screens */\nangular.module(\"sn.chg_model_ui.landing_splash_screens\", [])\n.directive(\"snSplashScreens\", function($window, urlTools) {\n\t\"use strict\";\n\treturn {\n\t\treplace: true,\n\t\trestrict: \"E\",\n\t\ttemplateUrl: urlTools.getPartialURL(\"sn_chg_model_ui_cmu_landing_splash_screens.xml\", \"v=\" + $window.NOW.macro_flush_stamp)\n\t};\n});\n","sys_class_name":"sys_ui_script","sys_id":"0f0cf1f7530310100999ddeeff7b1283","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/bb9f15345332101034d1ddeeff7b12c8","value":"bb9f15345332101034d1ddeeff7b12c8"},"ui_type":"0","sys_update_name":"sys_ui_script_0f0cf1f7530310100999ddeeff7b1283","sys_updated_by":"admin","sys_created_on":"2020-09-11 10:57:09","name":"sn_chg_model_ui.landing_splash_screens","sys_name":"sn_chg_model_ui.landing_splash_screens","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/bb9f15345332101034d1ddeeff7b12c8","value":"bb9f15345332101034d1ddeeff7b12c8"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"2","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2019-08-08 15:51:28","sys_tags":"","script_name":"style","script":"angular.module(\"sn.chg_soc.style\", [\"sn.common\", \"ui.bootstrap\", \"sn_chg_soc_cp.snColorPicker\", \"sn.chg_soc.data\"])\n\t.constant(\"STYLE\", {\n\t\tTRACKING_KEY: {\n\t\t\tCREATE: \"Create Change Schedule Style\",\n\t\t\tUPDATE: \"Update Change Schedule Style\",\n\t\t\tUPDATE_NAME: \"Update Change Schedule Style Name\",\n\t\t\tUPDATE_COLOR: \"Update Change Style Color\",\n\t\t\tDELETE: \"Delete Change Schedule Style\"\n\t\t},\n\t\tEVENT: {\n\t\t\tDELETED: \"\"\n\t\t},\n\t\tSERVICE: {\n\t\t\tGET_CONDITION: \"/api/sn_chg_soc/soc/getreadablecondition?sysparm_ck=\",\n\t\t\tUPDATE: \"/api/sn_chg_soc/soc/updatestylerule?sysparm_ck=\",\n\t\t\tDELETE: \"/api/sn_chg_soc/soc/deletestylerule?sysparm_ck=\",\n\t\t\tUPDATE_SCHEDULE: \"/api/sn_chg_soc/soc/updatechgdefstyle?sysparm_ck=\"\n\t\t},\n\t\tTYPE: {\n\t\t\tSCHEDULE: \"schedule\"\n\t\t}\n\t})\n\t.service(\"styleService\", [\"dataService\", \"i18n\", \"$q\", \"$http\", \"$window\", \"$document\", \"STYLE\", \"SOC\", function(dataService, i18n, $q, $http, $window, $document, STYLE, SOC) {\n\t\tvar styleService = this;\n\n\t\tstyleService.definition = \"\";\n\t\tstyleService.canCreate = false;\n\t\tstyleService.selectedStyle = {};\n\t\tstyleService.styles = {\n\t\t\tschedule: [],\n\t\t\tchg_soc_style_rule: [],\n\t\t\tchg_soc_definition_style_rule: [],\n\t\t\tchg_soc_def_child_style_rule: []\n\t\t};\n\n\t\tstyleService.addStyle = function(style) {\n\t\t\tstyleService.styles[style.sys_class_name.value].push(style);\n\t\t};\n\n\t\tstyleService.initStyle = function() {\n\t\t\tstyleService.definition = dataService.definition;\n\t\t\tstyleService.canCreate = dataService.definition.__security.canWrite;\n\n\t\t\tif (dataService.definition.show_blackout.value)\n\t\t\t\taddScheduleStyle(\"blackout\", i18n.getMessage(\"Blackout\"), dataService.definition.blackout_span_color.value ? dataService.definition.blackout_span_color.value : SOC.BLACKOUT_SPAN_COLOR, dataService.definition.sys_id.value, \"blackout_span_color\", dataService.definition.__security);\n\t\t\tif (dataService.definition.show_maintenance.value)\n\t\t\t\taddScheduleStyle(\"maintenance\", i18n.getMessage(\"Maintenance\"), dataService.definition.maintenance_span_color.value ? dataService.definition.maintenance_span_color.value : SOC.MAINT_SPAN_COLOR, dataService.definition.sys_id.value, \"maintenance_span_color\", dataService.definition.__security);\n\n\t\t\tfor (var chgSocStyleId in dataService.style.chg_soc_style_rule)\n\t\t\t\tstyleService.addStyle(dataService.style.chg_soc_style_rule[chgSocStyleId]);\n\t\t\tfor (var chgSocDefStyleId in dataService.style.chg_soc_definition_style_rule)\n\t\t\t\tstyleService.addStyle(dataService.style.chg_soc_definition_style_rule[chgSocDefStyleId]);\n\t\t\tfor (var chgSocChildDefStyleId in dataService.style.chg_soc_def_child_style_rule)\n\t\t\t\tstyleService.addStyle(dataService.style.chg_soc_def_child_style_rule[chgSocChildDefStyleId]);\n\t\t};\n\n\t\tstyleService.updateStyleBasic = function(style) {\n\t\t\treturn updateStyle(style);\n\t\t};\n\n\t\tstyleService.updateStyleAdvanced = function(style, records) {\n\t\t\treturn updateStyle(style, records);\n\t\t};\n\n\t\tfunction updateStyle(style, records) {\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar url = STYLE.SERVICE.UPDATE;\n\t\t\tif (style.__type && style.__type === STYLE.TYPE.SCHEDULE)\n\t\t\t\turl = STYLE.SERVICE.UPDATE_SCHEDULE;\n\t\t\turl += $window.g_ck;\n\t\t\t$http.post(url, {\n\t\t\t\t\"chgSocDefId\": dataService.definition.sys_id.value,\n\t\t\t\t\"style\": style,\n\t\t\t\t\"records\": records\n\t\t\t}).then(function(response) {\n\t\t\t\tdeferred.resolve(response.data.result);\n\t\t\t}, function(response) {\n\t\t\t\tdeferred.reject(response);\n\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t}\n\n\t\tstyleService.deleteStyle = function(style, records) {\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar url = STYLE.SERVICE.DELETE + $window.g_ck;\n\t\t\t$http.post(url, {\n\t\t\t\t\"chgSocDefId\": dataService.definition.sys_id.value,\n\t\t\t\t\"style\": style,\n\t\t\t\t\"records\": records\n\t\t\t}).then(function(response) {\n\t\t\t\tdeferred.resolve(response.data.result);\n\t\t\t}, function(response) {\n\t\t\t\tdeferred.reject(response);\n\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tstyleService.getReadableCondition = function(config) {\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar url = STYLE.SERVICE.GET_CONDITION + $window.g_ck;\n\t\t\tfor (var key in config)\n\t\t\t\turl += \"&\" + key + \"=\" + config[key];\n\t\t\t$http.get(url, config).then(function(response) {\n\t\t\t\tdeferred.resolve(response.data.result);\n\t\t\t}, function(response) {\n\t\t\t\tdeferred.reject(response);\n\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tstyleService.updateStyleInSheet = function(style) {\n\t\t\tvar result = findStyleSheetByStyle(style);\n\t\t\tif (!result)\n\t\t\t\treturn;\n\t\t\tvar spanStyleSheet = result.style_sheet;\n\t\t\tvar eventSelector = result.event_selector;\n\t\t\tif (!spanStyleSheet || !eventSelector)\n\t\t\t\treturn;\n\t\t\tvar rule;\n\t\t\tfor (var j = 0; j < spanStyleSheet.cssRules.length; j++)\n\t\t\t\tif (eventSelector[spanStyleSheet.cssRules[j].selectorText]) {\n\t\t\t\t\trule = spanStyleSheet.cssRules[j];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tif (!rule)\n\t\t\t\treturn;\n\t\t\trule.style[\"background-color\"] = style.event_color.value;\n\t\t};\n\n\t\tstyleService.removeStyle = function(style) {\n\t\t\tvar index = -1;\n\t\t\tfor (var i = 0; i < styleService.styles[style.sys_class_name.value].length; i++)\n\t\t\t\tif (style.sys_id.value === styleService.styles[style.sys_class_name.value][i].sys_id.value) {\n\t\t\t\t\tindex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tif (index === -1)\n\t\t\t\treturn;\n\n\t\t\tstyleService.styles[style.sys_class_name.value].splice(index, 1);\n\t\t\treturn styleService.styles;\n\t\t};\n\n\t\tfunction addScheduleStyle(id, label, color, defId, fieldName, security) {\n\t\t\tvar styleItem = {\n\t\t\t\tsys_id: {\n\t\t\t\t\tdisplay_value: id,\n\t\t\t\t\tvalue: id\n\t\t\t\t},\n\t\t\t\tname: {\n\t\t\t\t\tdisplay_value: label,\n\t\t\t\t\tvalue: fieldName\n\t\t\t\t},\n\t\t\t\tevent_color: {\n\t\t\t\t\tdisplay_value: color,\n\t\t\t\t\tvalue: color\n\t\t\t\t},\n\t\t\t\tcondition: {\n\t\t\t\t\tdisplay_value: \"\",\n\t\t\t\t\tvalue: \"\"\n\t\t\t\t},\n\t\t\t\t__def_id: defId,\n\t\t\t\t__security: security,\n\t\t\t\t__type: STYLE.TYPE.SCHEDULE\n\t\t\t};\n\t\t\tstyleService.styles.schedule.push(styleItem);\n\t\t}\n\n\t\tfunction findStyleSheetByStyle(style) {\n\t\t\tvar scheduleStyle = {\n\t\t\t\tblackout: \"blackout\",\n\t\t\t\tmaintenance: \"maint\"\n\t\t\t};\n\n\t\t\tvar spanStyleSheetId = \"soc_span_style\";\n\t\t\tvar eventSelector = {};\n\t\t\teventSelector[\"div.soc_\" + style.sys_id.value + \" .gantt_task_content\"] = true;\n\t\t\tif (style.__type) {\n\t\t\t\tspanStyleSheetId = \"soc_schedule_style\";\n\t\t\t\teventSelector = {};\n\t\t\t\teventSelector[\"div.schedule-bar.\" + scheduleStyle[style.sys_id.value]] = true;\n\t\t\t\teventSelector[\"div.\" + scheduleStyle[style.sys_id.value] + \".schedule-bar\"] = true;\n\t\t\t}\n\n\t\t\tvar spanStyleSheet;\n\t\t\tfor (var i = 0; i < $document[0].styleSheets.length; i++)\n\t\t\t\tif ($document[0].styleSheets[i].ownerNode.id === spanStyleSheetId) {\n\t\t\t\t\tspanStyleSheet = $document[0].styleSheets[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tstyle_sheet: spanStyleSheet,\n\t\t\t\tevent_selector: eventSelector\n\t\t\t};\n\t\t}\n\t}])\n\t.directive(\"socAsideStyle\", [\"getTemplateUrl\", \"styleService\", \"SOC\", \"i18n\", function(getTemplateUrl, styleService, SOC, i18n) {\n\t\t\"use strict\";\n\t\treturn {\n\t\t\trestrict: \"A\",\n\t\t\ttemplateUrl: getTemplateUrl(\"sn_chg_soc_aside_style_body.xml\"),\n\t\t\tscope: {\n\t\t\t\tsocDefId: \"=\"\n\t\t\t},\n\t\t\tcontroller: function($scope) {\n\t\t\t\t$scope.styles = styleService.styles;\n\n\t\t\t\t$scope.canCreate = styleService.canCreate;\n\n\t\t\t\t$scope.openStyle = function() {\n\t\t\t\t\t$scope.$emit(\"sn.aside.change_soc_side.open_style\", {\n\t\t\t\t\t\tchg_soc_definition: {\n\t\t\t\t\t\t\tdisplay_value: styleService.definition.name.display_value,\n\t\t\t\t\t\t\tvalue: styleService.definition.sys_id.value\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcondition: {\n\t\t\t\t\t\t\tdisplay_value: \"\",\n\t\t\t\t\t\t\tvalue: \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\tevent_color: {\n\t\t\t\t\t\t\tdisplay_value: \"rgba(10, 10, 252, 0.5)\",\n\t\t\t\t\t\t\tvalue: \"rgba(10, 10, 252, 0.5)\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\tname: {\n\t\t\t\t\t\t\tdisplay_value: \"\",\n\t\t\t\t\t\t\tvalue: \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\tsys_class_name: {\n\t\t\t\t\t\t\tdisplay_value: \"chg_soc_definition_style_rule\",\n\t\t\t\t\t\t\tvalue: \"chg_soc_definition_style_rule\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\tsys_id: {\n\t\t\t\t\t\t\tdisplay_value: \"-1\",\n\t\t\t\t\t\t\tvalue: \"-1\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t__security: {\n\t\t\t\t\t\t\tcanRead: true,\n\t\t\t\t\t\t\tcanWrite: true,\n\t\t\t\t\t\t\tcanDelete: true\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\t$scope.messages = {\n\t\t\t\t\t\"Add Span Style\": i18n.getMessage(\"Add Span Style\"),\n\t\t\t\t\t\"Schedules\": i18n.getMessage(\"Schedules\"),\n\t\t\t\t\t\"Style rules\": i18n.getMessage(\"Style rules\"),\n\t\t\t\t\t\"Related style rules\": i18n.getMessage(\"Related style rules\")\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t}])\n\t.directive(\"socAsideStyleItem\", [\"getTemplateUrl\", \"$uibModal\", function(getTemplateUrl, $uibModal) {\n\t\t\"use strict\";\n\t\treturn {\n\t\t\trestrict: \"A\",\n\t\t\treplace: true,\n\t\t\ttemplateUrl: getTemplateUrl(\"sn_chg_soc_aside_style_item.xml\"),\n\t\t\tscope: {\n\t\t\t\tsocStyle: \"=\",\n\t\t\t\tsocDefId: \"=\"\n\t\t\t},\n\t\t\tcontroller: \"StyleDefCtrl\",\n\t\t\tlink: function($scope, $element, $attrs, $controller) {\n\t\t\t\t$scope.setFocus = function() {\n\t\t\t\t\t$element.find(\".span-style-name\").focus();\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t}])\n\t.controller(\"StyleDefCtrl\", [\"$scope\", \"$document\", \"$uibModal\", \"getTemplateUrl\", \"i18n\", \"styleService\", \"socNotification\", \"dataService\", \"STYLE\", function($scope, $document, $uibModal, getTemplateUrl, i18n, styleService, socNotification, dataService, STYLE) {\n\t\tvar styleDefCtrl = this;\n\n\t\t$scope.editMode = false;\n\n\t\t$scope.$watch(\"socStyle.event_color.value\", function(newValue, oldValue) {\n\t\t\tif (newValue === oldValue)\n\t\t\t\treturn;\n\t\t\tstyleService.updateStyleInSheet($scope.socStyle);\n\t\t});\n\n\t\t$scope.openStyle = function($event) {\n\t\t\tif ($scope.editMode || $event.target.className.indexOf(\"soc-style-list-color-btn\") !== -1)\n\t\t\t\treturn;\n\t\t\t$scope.$emit(\"sn.aside.change_soc_side.open_style\", $scope.socStyle);\n\t\t};\n\n\t\t$scope.deleteStyle = function($event) {\n\t\t\t$event.stopPropagation();\n\t\t\tvar modalInstance = $uibModal.open({\n\t\t\t\tanimation: true,\n\t\t\t\ttemplateUrl: getTemplateUrl(\"sn_chg_soc_delete_style_def.xml\"),\n\t\t\t\tcontroller: \"DeleteStyleCtrl\",\n\t\t\t\tscope: $scope,\n\t\t\t\tsize: \"sm\"\n\t\t\t}).result.then(function(result) {\n\t\t\t\t$scope.$emit(\"sn.aside.change_soc_side.style_updated\", result);\n\t\t\t\tstyleService.removeStyle(result.style);\n\t\t\t});\n\t\t};\n\n\t\t$scope.updateStyleName = function($event) {\n\t\t\t$event.stopPropagation();\n\t\t\t$scope.editMode = !$scope.editMode;\n\t\t\tstyleService.updateStyleBasic($scope.socStyle).then(function(result) {\n\t\t\t\tdataService.trackEvent(STYLE.TRACKING_KEY.UPDATE_NAME);\n\t\t\t}).catch(function(response) {\n\t\t\t\tsocNotification.show(\"error\", response.data.error.message);\n\t\t\t});\n\t\t};\n\n\t\t$scope.updateStyleColor = function(color) {\n\t\t\tstyleService.updateStyleBasic($scope.socStyle).then(function(result) {\n\t\t\t\tdataService.trackEvent(STYLE.TRACKING_KEY.UPDATE_COLOR);\n\t\t\t}).catch(function(response) {\n\t\t\t\tsocNotification.show(\"error\", response.data.error.message);\n\t\t\t});\n\t\t};\n\n\t\t$scope.editName = function($event) {\n\t\t\t$event.stopPropagation();\n\t\t\t$scope.editMode = !$scope.editMode;\n\t\t};\n\n\t\t$scope.messages = {\n\t\t\t\"More details\": i18n.getMessage(\"More details\"),\n\t\t\t\"Select span color\": i18n.getMessage(\"Select span color\"),\n\t\t\t\"Edit span style name\": i18n.getMessage(\"Edit span style name\"),\n\t\t\t\"Delete span style\": i18n.getMessage(\"Delete span style\"),\n\t\t\t\"Cancel\": i18n.getMessage(\"Cancel\"),\n\t\t\t\"Delete\": i18n.getMessage(\"Delete\"),\n\t\t\t\"Close\": i18n.getMessage(\"Close\")\n\t\t};\n\t}])\n\t.controller(\"DeleteStyleCtrl\", [\"$scope\", \"$uibModalInstance\", \"i18n\", \"styleService\", \"dataService\", \"socNotification\", \"STYLE\", function($scope, $uibModalInstance, i18n, styleService, dataService, socNotification, STYLE) {\n\t\tvar deleteStyleCtrl = this;\n\n\t\t$scope.cancel = function() {\n\t\t\t$uibModalInstance.dismiss(\"cancel\");\n\t\t};\n\n\t\t$scope.delete = function() {\n\t\t\tvar style = $scope.socStyle;\n\t\t\tstyleService.deleteStyle(style, dataService.allRecords).then(function(result) {\n\t\t\t\tif (result) {\n\t\t\t\t\tdataService.trackEvent(STYLE.TRACKING_KEY.DELETE);\n\t\t\t\t\tresult.style = style;\n\t\t\t\t\t$scope.$emit(\"sn.aside.change_soc_side.style_deleted\", result);\n\t\t\t\t}\n\t\t\t\t$uibModalInstance.close(result);\n\t\t\t}).catch(function(response) {\n\t\t\t\tsocNotification.show(\"error\", response.data.error.message);\n\t\t\t\t$uibModalInstance.dismiss(\"cancel\");\n\t\t\t});\n\t\t};\n\n\t\t$scope.deleteStyleMsg = i18n.format(\"Do you want to delete \\\"{0}\\\"? After deleting this style, any applicable spans will revert to a default span color\", $scope.socStyle.name.display_value);\n\t}])\n\t.directive(\"socAsideStyleDef\", [\"getTemplateUrl\", \"styleService\", \"$uibModal\", \"dataService\", \"i18n\", \"STYLE\", \"socNotification\", function(getTemplateUrl, styleService, $uibModal, dataService, i18n, STYLE, socNotification) {\n\t\t\"use strict\";\n\t\treturn {\n\t\t\trestrict: \"E\",\n\t\t\ttemplateUrl: getTemplateUrl(\"sn_chg_soc_aside_style_def.xml\"),\n\t\t\tcontroller: function($rootScope, $scope) {\n\t\t\t\tvar localDataService = dataService;\n\t\t\t\tvar styleRecord = styleService.selectedStyle;\n\n\t\t\t\t$scope.socStyle = angular.copy(styleRecord);\n\n\t\t\t\t$scope.$watch(\"socStyle.event_color.value\", function(newValue, oldValue) {\n\t\t\t\t\tif (newValue === oldValue)\n\t\t\t\t\t\treturn;\n\t\t\t\t\tstyleService.updateStyleInSheet($scope.socStyle);\n\t\t\t\t});\n\n\t\t\t\t$scope.getFilterBtnLabel = function() {\n\t\t\t\t\tif ($scope.socStyle.condition.value === \"\")\n\t\t\t\t\t\treturn $scope.messages[\"Add filter\"];\n\t\t\t\t\treturn $scope.messages[\"Edit filter\"];\n\t\t\t\t};\n\n\t\t\t\t$scope.saveEnabled = function() {\n\t\t\t\t\treturn $scope.socStyle.__security.canWrite && isComplete();\n\t\t\t\t};\n\n\t\t\t\t$scope.closeStyleSide = function($event) {\n\t\t\t\t\t$event.stopPropagation();\n\t\t\t\t\tif (hasChanged()) {\n\t\t\t\t\t\topenConfirmModal(function(result) {\n\t\t\t\t\t\t\tif (result === \"discard\") {\n\t\t\t\t\t\t\t\t$rootScope.$broadcast(\"sn.aside.change_soc_side.close\");\n\t\t\t\t\t\t\t\tstyleService.updateStyleInSheet(styleRecord);\n\t\t\t\t\t\t\t} else if (result === \"save\")\n\t\t\t\t\t\t\t\t$scope.updateStyle($event);\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tstyleService.updateStyleInSheet(styleRecord);\n\t\t\t\t\t$rootScope.$broadcast(\"sn.aside.change_soc_side.close\");\n\t\t\t\t};\n\n\t\t\t\t$scope.historyBack = function($event) {\n\t\t\t\t\t$event.stopPropagation();\n\t\t\t\t\tif (hasChanged()) {\n\t\t\t\t\t\topenConfirmModal(function(result) {\n\t\t\t\t\t\t\tif (result === \"discard\") {\n\t\t\t\t\t\t\t\tstyleService.updateStyleInSheet(styleRecord);\n\t\t\t\t\t\t\t\t$rootScope.$broadcast(\"sn.aside.change_soc_side.historyBack\");\n\t\t\t\t\t\t\t} else if (result === \"save\")\n\t\t\t\t\t\t\t\t$scope.updateStyle($event);\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tstyleService.updateStyleInSheet(styleRecord);\n\t\t\t\t\t$rootScope.$broadcast(\"sn.aside.change_soc_side.historyBack\");\n\t\t\t\t};\n\n\t\t\t\t$scope.openFilterControl = function($event) {\n\t\t\t\t\t$event.stopPropagation();\n\t\t\t\t\t$uibModal.open({\n\t\t\t\t\t\tanimation: true,\n\t\t\t\t\t\ttemplateUrl: getTemplateUrl(\"sn_chg_soc_snSocConditionBuilderTemplate.xml\"),\n\t\t\t\t\t\tcontroller: \"FilterStyleCtrl\",\n\t\t\t\t\t\tscope: $scope,\n\t\t\t\t\t\tsize: \"lg\"\n\t\t\t\t\t}).result.then(function(condition) {\n\t\t\t\t\t\t$scope.socStyle.condition.display_value = condition.display_value;\n\t\t\t\t\t\t$scope.socStyle.condition.value = condition.value;\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\t$scope.updateStyle = function($event) {\n\t\t\t\t\t// Changing schedule style only proceed if color has changed\n\t\t\t\t\tif (styleRecord.__type === STYLE.TYPE.SCHEDULE && styleRecord.event_color.value === $scope.socStyle.event_color.value)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t// Changing style rule only proceed if name, color or condition have changed\n\t\t\t\t\tif (styleRecord.__type !== STYLE.TYPE.SCHEDULE && !hasChanged())\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t// Update the record. Name and color can be changed locally\n\t\t\t\t\tif (styleRecord.__type === STYLE.TYPE.SCHEDULE || styleRecord.condition.value === $scope.socStyle.condition.value) {\n\t\t\t\t\t\tstyleService.updateStyleBasic($scope.socStyle).then(function(result) {\n\t\t\t\t\t\t\tdataService.trackEvent(STYLE.TRACKING_KEY.UPDATE);\n\t\t\t\t\t\t\tupdateLocalStyle($scope.socStyle);\n\t\t\t\t\t\t\t$scope.historyBack($event);\n\t\t\t\t\t\t}).catch(function(response) {\n\t\t\t\t\t\t\tsocNotification.show(\"error\", response.data.error.message);\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Update the record and ensure records are updated as we are changing condition\n\t\t\t\t\tstyleService.updateStyleAdvanced($scope.socStyle, localDataService.allRecords).then(function(result) {\n\t\t\t\t\t\tif (typeof result === \"object\") {\n\t\t\t\t\t\t\tdataService.trackEvent(STYLE.TRACKING_KEY.CREATE);\n\t\t\t\t\t\t\t$scope.$emit(\"sn.aside.change_soc_side.style_updated\", result);\n\t\t\t\t\t\t\tupdateLocalStyle($scope.socStyle);\n\t\t\t\t\t\t\t// Only add the style if it a new record\n\t\t\t\t\t\t\tif ($scope.socStyle.sys_id.value === \"-1\" && result.style)\n\t\t\t\t\t\t\t\tstyleService.addStyle(result.style);\n\t\t\t\t\t\t\t$scope.historyBack($event);\n\t\t\t\t\t\t}\n\t\t\t\t\t}).catch(function(response) {\n\t\t\t\t\t\tsocNotification.show(\"error\", response.data.error.message);\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\t$scope.deleteStyle = function($event) {\n\t\t\t\t\t$event.stopPropagation();\n\t\t\t\t\t$uibModal.open({\n\t\t\t\t\t\tanimation: true,\n\t\t\t\t\t\ttemplateUrl: getTemplateUrl(\"sn_chg_soc_delete_style_def.xml\"),\n\t\t\t\t\t\tcontroller: \"DeleteStyleCtrl\",\n\t\t\t\t\t\tscope: $scope,\n\t\t\t\t\t\tsize: \"sm\"\n\t\t\t\t\t}).result.then(function(result) {\n\t\t\t\t\t\t$scope.$emit(\"sn.aside.change_soc_side.style_updated\", result);\n\t\t\t\t\t\tstyleService.removeStyle(result.style);\n\t\t\t\t\t\t$scope.historyBack($event);\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\t$scope.messages = {\n\t\t\t\t\t\"Delete span style\": i18n.getMessage(\"Delete span style\"),\n\t\t\t\t\t\"Cancel\": i18n.getMessage(\"Cancel\"),\n\t\t\t\t\t\"Save\": i18n.getMessage(\"Save\"),\n\t\t\t\t\t\"Delete\": i18n.getMessage(\"Delete\"),\n\t\t\t\t\t\"Back to span styles\": i18n.getMessage(\"Back to span styles\"),\n\t\t\t\t\t\"Select span color\": i18n.getMessage(\"Select span color\"),\n\t\t\t\t\t\"Span Style\": i18n.getMessage(\"Span Style\"),\n\t\t\t\t\t\"Close span style panel\": i18n.getMessage(\"Close span style panel\"),\n\t\t\t\t\t\"The Basics\": i18n.getMessage(\"The Basics\"),\n\t\t\t\t\t\"Name\": i18n.getMessage(\"Name\"),\n\t\t\t\t\t\"Span color\": i18n.getMessage(\"Span color\"),\n\t\t\t\t\t\"Applied filter\": i18n.getMessage(\"Applied filter\"),\n\t\t\t\t\t\"Add filter\": i18n.getMessage(\"Add filter\"),\n\t\t\t\t\t\"Edit filter\": i18n.getMessage(\"Edit filter\"),\n\t\t\t\t\t// Used by filter template\n\t\t\t\t\t\"Title\": i18n.getMessage(\"Style rule filter\"),\n\t\t\t\t\t\"Close\": i18n.getMessage(\"Close\"),\n\t\t\t\t\t\"Submit\": i18n.getMessage(\"Save\"),\n\t\t\t\t};\n\n\t\t\t\tfunction isComplete() {\n\t\t\t\t\tif (styleRecord.__type === STYLE.TYPE.SCHEDULE)\n\t\t\t\t\t\treturn $scope.socStyle.event_color.value;\n\t\t\t\t\treturn $scope.socStyle.name.display_value && $scope.socStyle.event_color.value && $scope.socStyle.condition.value;\n\t\t\t\t}\n\n\t\t\t\tfunction hasChanged() {\n\t\t\t\t\treturn styleRecord.name.display_value !== $scope.socStyle.name.display_value\n\t\t\t\t\t\t|| styleRecord.event_color.value !== $scope.socStyle.event_color.value\n\t\t\t\t\t\t|| styleRecord.condition.value !== $scope.socStyle.condition.value;\n\t\t\t\t}\n\n\t\t\t\tfunction updateLocalStyle(style) {\n\t\t\t\t\tstyleRecord.event_color.value = style.event_color.value;\n\t\t\t\t\tif (styleRecord.__type !== STYLE.TYPE.SCHEDULE) {\n\t\t\t\t\t\tstyleRecord.name.display_value = style.name.display_value;\n\t\t\t\t\t\tstyleRecord.condition.display_value = style.condition.display_value;\n\t\t\t\t\t\tstyleRecord.condition.value = style.condition.value;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfunction openConfirmModal(onClose, onDismiss) {\n\t\t\t\t\t$uibModal.open({\n\t\t\t\t\t\tanimation: true,\n\t\t\t\t\t\ttemplateUrl: getTemplateUrl(\"sn_chg_soc_nav_style_def.xml\"),\n\t\t\t\t\t\tcontroller: \"ConfirmNavCtrl\",\n\t\t\t\t\t\tscope: $scope,\n\t\t\t\t\t\tsize: \"sm\"\n\t\t\t\t\t}).result.then(onClose, onDismiss);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}])\n\t.controller(\"FilterStyleCtrl\", [\"$scope\", \"$uibModalInstance\", \"styleService\", \"socNotification\", \"i18n\", function($scope, $uibModalInstance, styleService, socNotification, i18n) {\n\t\tvar filterStyleCtrl = this;\n\n\t\t$scope.showSubmit = true;\n\t\t$scope.table = \"change_request\";\n\t\t$scope.filterConfig = {\n\t\t\tdotWalking\t: false,\n\t\t\ttestFilter  : false,\n\t\t\tcloseFilter : false,\n\t\t\trunFilter   : false,\n\t\t\tsaveFilter  : false,\n\t\t\tloadFilter  : false,\n\t\t\tsortFilter  : false,\n\t\t\tclearFilter : false,\n\t\t\toutputType  : \"encoded_query\",\n\t\t\tencodedQuery: $scope.socStyle.condition.value\n\t\t};\n\n\t\t$scope.condition = $scope.socStyle.condition.value;\n\n\t\t$scope.$on(\"snfilter:update_query\", function(currentScope, queryString) {\n\t\t\t$scope.condition = queryString.replace(\"^ORDERBYundefined\", \"\");\n\t\t});\n\n\t\t$scope.enableSubmit = function() {\n\t\t\treturn $scope.condition !== \"\" && !$scope.condition.startsWith(\"^ORDERBY\");\n\t\t};\n\n\t\t$scope.cancel = function() {\n\t\t\t$uibModalInstance.dismiss(\"cancel\");\n\t\t};\n\n\t\t$scope.submit = function() {\n\t\t\tstyleService.getReadableCondition({\n\t\t\t\t\"table\": $scope.socStyle.sys_class_name.value,\n\t\t\t\t\"field\": \"condition\",\n\t\t\t\t\"encoded_query\": $scope.condition\n\t\t\t}).then(function(result) {\n\t\t\t\tif (result)\n\t\t\t\t\t$uibModalInstance.close({\n\t\t\t\t\t\tdisplay_value: result,\n\t\t\t\t\t\tvalue: $scope.condition\n\t\t\t\t\t});\n\t\t\t}).catch(function(response) {\n\t\t\t\tsocNotification.show(\"error\", response.data.error.message, 0, null, \".soc-condition-builder-modal-message\");\n\t\t\t});\n\t\t};\n\t}])\n\t.controller(\"ConfirmNavCtrl\", [\"$scope\", \"$uibModalInstance\", \"i18n\", function($scope, $uibModalInstance, i18n) {\n\t\tvar confirmNavCtrl = this;\n\n\t\t$scope.dismiss = function() {\n\t\t\t$uibModalInstance.dismiss();\n\t\t};\n\n\t\t$scope.save = function() {\n\t\t\t$uibModalInstance.close(\"save\");\n\t\t};\n\n\t\t$scope.discard = function() {\n\t\t\t$uibModalInstance.close(\"discard\");\n\t\t};\n\n\t\t$scope.bodyMsg = i18n.format(\"Do you want to save changes to '{0}' before leaving this Span Style rule?\", $scope.socStyle.name.display_value);\n\n\t\t$scope.messages = {\n\t\t\t\"Discard\": i18n.getMessage(\"Discard\"),\n\t\t\t\"Save\": i18n.getMessage(\"Save\"),\n\t\t\t\"Save changes\": i18n.getMessage(\"Save changes\")\n\t\t};\n\t}]);","sys_class_name":"sys_ui_script","sys_id":"11cc7296c3841300b6dcdfdc64d3ae1b","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"ui_type":"0","sys_update_name":"sys_ui_script_11cc7296c3841300b6dcdfdc64d3ae1b","sys_updated_by":"admin","sys_created_on":"2018-02-05 11:58:42","name":"sn_chg_soc.style","sys_name":"sn_chg_soc.style","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"475","active":"true","description":"SMS enrollment UI script","use_scoped_format":"false","global":"false","sys_updated_on":"2023-03-23 05:23:07","sys_tags":"","script_name":"","script":"// Get the user ID\nfunction getUserID() {\n\tvar user_id =  gel(\"userId\").value;\n\treturn user_id;\n}\n\n// call back for container on load\nfunction sms_on_load(formId) {\n\tvar currForm = document.getElementById(formId);\n\tvar verificationId = currForm.elements['verification_id'].value;\n\tvar useNotify = currForm.elements['use_notify'].value;\n\n\tif (useNotify == 'true') {\n\t\tgetCountryCodes(currForm);\n\t}\n\telse {\n\t\tgetProviders(currForm);\n\t}\n\tgetDevices(currForm);\n}\n\n// call back for container on submit\nfunction sms_on_submit(formId) {\n\tvar currForm = document.getElementById(formId);\t\n\tvar mandatory = currForm.elements['mandatory'].value == 'true';\n\t\n\tcurrForm.elements['can_submit'].value = 'true';\n\tvar valid = verifyAtleastOneDeviceIsSubscribed(null, currForm);\t\n\tif (!valid) {\n\t\t// If form is invalid and mandatory, show message and select the tab to draw the user's attention.\n\t\tif (mandatory) {\n\t\t\tvar tabId = 'tablabel' + currForm.elements['tab_index'].value;\n\t\t    var tab = gel(tabId);\n\t\t    tab.click();\n\t\t    displayErrorMessage(getMessage('You must authorize at least one device'));\n\t\t    return false;\n\t\t}\n\t\t// if not mandatory we dont want the form submitted and enrollment inserted\n\t\telse {\n\t\t\tcurrForm.elements['can_submit'].value = 'false';\n\t\t}\n\t}\n\t\n\treturn true;\n}\n\n// get all service providers ajax call\nfunction getProviders(currentForm) {\n\tvar ga = new GlideAjax('PwdAjaxEnrollSMS');\n\tga.addParam('sysparm_name', 'getProviders');\n\tga.getXML(handleProviderResponse, null, currentForm);\n}\n\n// populate service provider dropdown options based on what's returned\nfunction handleProviderResponse(response, currentForm) {\n\tvar verificationId = currentForm.elements['verification_id'].value;\n\tvar providers = response.responseXML.getElementsByTagName(\"provider\");\n\tfor (var i = 0; i != providers.length; i++) {\n\t\tvar provider = providers[i];\n\t\tvar option = document.createElement(\"option\");\n\t\t\n\t\tif (Prototype.Browser.IE) {\n\t\t\toption.innerText = provider.getAttribute(\"name\");\n\t\t}\n\t\telse {\n\t\t\toption.text = provider.getAttribute(\"name\");\n\t\t}\n\t\toption.value = provider.getAttribute(\"sys_id\");\n\t\tvar select = currentForm.elements[\"sys_select.service_provider_\" + verificationId];\n\t\tselect.appendChild(option);\n\t}\n\t/*\n\tif (providers.length == 0) {\n\t\tvar msg = getMessage('There should be at least one active service provider');\n\t\tdisplayMessage(msg, currentForm);\n\t}\n\t*/\n}\n\n// get all country codes ajax call\nfunction getCountryCodes(currentForm) {\n\tvar ga = new GlideAjax('PwdAjaxEnrollSMS');\n\tga.addParam('sysparm_name', 'getCountryCodes');\n\tga.getXML(handleCountryCodeResponse, null, currentForm);\n}\n\n// populate country code dropdown options based on what's returned\nfunction handleCountryCodeResponse(response, currentForm) {\n\tvar verificationId = currentForm.elements['verification_id'].value;\n\tvar countryCodes = response.responseXML.getElementsByTagName(\"country\");\n\t\n\tvar ul = $j(\"#sys_ul_country_\"+verificationId);\n\t\n\tfor (var i = 0; i != countryCodes.length; i++) {\n\t\tvar countryCode = countryCodes[i];\n\t\tvar name = countryCode.getAttribute('name');\n\t\tvar code = countryCode.getAttribute('code');\n\t\tvar li = $j(\"<li></li>\")\n\t\t            .addClass(\"countrycode-dropdown-li\")\n\t\t            .on(\"click\", {'name': name, 'code': code, 'verificationId': verificationId}, updateCountry)\t\n\t\t\t\t\t.append($j(\"<span></span>\").text(name).css(\"text-align\", \"left\"))\n\t\t\t\t\t.append($j(\"<span></span>\").text(code).css(\"float\", \"right\"));\n\t\tul.append(li);\n\t}\n}\n\n// Get the list of devices for the user\n// Subscription info is also received and ui is updated accordingly.\nfunction getDevices(currentForm) {\n\t// clean up first\n\tvar verificationId = currentForm.elements['verification_id'].value;\n\tclearAllDevices('sms_devices_' + verificationId);\n\tvar ga = new GlideAjax('PwdAjaxEnrollSMS');\n\tga.addParam('sysparm_name', 'getDevices');\n\tga.addParam('sysparm_user_id', getUserID());\n\tga.getXML(handleGetDevicesResponse, null, currentForm);\n}\n\n// remove all generated device details\nfunction clearAllDevices(element) {\n\tvar myNode = document.getElementById(element);\n\twhile (myNode.firstChild) {\n\t\tmyNode.removeChild(myNode.firstChild);\n\t}\n}\n\nfunction handleGetDevicesResponse(response, currentForm) {\n\tvar res =  response.responseXML.getElementsByTagName(\"response\");\n\tvar count = handleDeviceResponse(response, currentForm);\n\t/*\n\tif (count == 0) {\n\t\tdisplayHeader(getMessage('There is no device registered for this user'), currentForm);\n\t} else {\n\t\tdisplayHeader(getMessage('Available Devices'), currentForm);\n\t}\n\t*/\n}\n\n// Get the list of devices and add to the device list\nfunction handleDeviceResponse(response, currentForm) {\n\tvar devices = response.responseXML.getElementsByTagName(\"device\");\n\tif (devices.length > 0) {\n\t\t// If the table already exists, dont add again\n\t\tvar verificationId = currentForm.elements['verification_id'].value;\n\t\tvar table = document.getElementById('sms_device_table_' + verificationId);\n\t\tif (table == null) {\n\t\t\ttable = addDeviceHeaderRow(currentForm);\n\t\t}\n\t\tvar body = document.createElement('tbody');\n\t\ttable.appendChild(body);\n\t\tfor (var i = 0; i != devices.length; i++) {\n\t\t\taddDeviceDetailRow(devices[i], currentForm, body);\n\t\t}\n\t}\n\treturn devices.length;\n}\n\n// add device detail row - makes the checkbox, device name and the device verification fields\nfunction addDeviceHeaderRow(currentForm) {\n\tvar useNotify = currentForm.elements['use_notify'].value;\n\tvar verificationId = currentForm.elements['verification_id'].value;\n\tvar divElem = document.getElementById('sms_devices_' + verificationId);\n\t\n\t// Create a table\n\tvar tableRow = document.createElement('table');\n\ttableRow.id = 'sms_device_table_' + verificationId;\n\tvar head = document.createElement('thead');\n\ttableRow.appendChild(head);\n\t\n\t// Create a table header\n\tvar tableHeaderRow = document.createElement('tr');\n\ttableHeaderRow.id = 'sms_device_table_header_' + verificationId;\n\thead.appendChild(tableHeaderRow);\n\t\n\t// Create the table header th tags\n\t// Column: Authorized\n\tvar thCellUsed = document.createElement('th');\n\tthCellUsed.id = 'sms_device_table_th_used_' + verificationId;\n\tsetText(thCellUsed, getMessage('Authorized'));\n\ttableHeaderRow.appendChild(thCellUsed);\n\t\n\t// Column: Empty title\n\tvar thCellDelete = document.createElement('th');\n\tthCellDelete.id = 'sms_device_table_th_delete_' + verificationId;\n\tsetText(thCellDelete, '');\n\ttableHeaderRow.appendChild(thCellDelete);\n\t\n\t// Column: Name\n\tvar thCellName = document.createElement('th');\n\tthCellName.id = 'sms_device_table_th_name_' + verificationId;\n\tsetText(thCellName, getMessage('Name'));\n\tthCellName.align='left';\n\ttableHeaderRow.appendChild(thCellName);\n\t\n\t// Column: Country\n\tif (useNotify == 'true') {\n\t\tvar thCellCountryCode = document.createElement('th');\n\t    thCellCountryCode.id = 'sms_device_table_th_country_' + verificationId;\n \t    setText(thCellCountryCode, getMessage('Country'));\n\t    thCellCountryCode.align = 'left';\n  \t    tableHeaderRow.appendChild(thCellCountryCode);\n\t}\n\t\n\t// Column: Number\n\tvar thCellNumber = document.createElement('th');\n\tthCellNumber.id = 'sms_device_table_th_number_' + verificationId;\n\tsetText(thCellNumber, getMessage('Number'));\n\tthCellNumber.align = 'left';\n\ttableHeaderRow.appendChild(thCellNumber);\n\t\n\t// Column: provider\n\tif (useNotify == 'false') { \n\t\tvar thCellProvider = document.createElement('th');\n\t    thCellProvider.id = 'sms_device_table_th_provider_' + verificationId;\n \t    setText(thCellProvider, getMessage('Provider'));\n\t    thCellProvider.align = 'left';\n  \t    tableHeaderRow.appendChild(thCellProvider);\n\t}\n\t\n\t// Column: Verified\n\tvar thCellVerified = document.createElement('th');\n\tthCellVerified.id = 'sms_device_table_th_verified_' + verificationId;\n\tsetText(thCellVerified, getMessage('Status'));\n\ttableHeaderRow.appendChild(thCellVerified);\n\t\n\tdivElem.appendChild(tableRow);\n\treturn tableRow;\n}\n\n// add device detail row - makes the checkbox, device name and the device verification fields\nfunction addDeviceDetailRow(device, currentForm, body) {\n\tvar deviceId = device.getAttribute(\"sys_id\");\n\tvar verificationId = currentForm.elements['verification_id'].value;\n\tvar devicesElem = document.getElementById('sms_device_table_' + verificationId);\n\tvar deviceVerified = device.getAttribute(\"isVerified\") === 'true';\n\tvar isRTL = (document.dir == \"rtl\");\n\t\n\t// Create a table row\n\tvar deviceRow = document.createElement('tr');\n\tbody.appendChild(deviceRow);\n\t\n\t// Create a checkbox cell\n\tvar checkboxCell = document.createElement('td');\n\tcheckboxCell.align = 'center';\n\tdeviceRow.appendChild(checkboxCell);\n\t\n    var cbSpan = document.createElement('span');\n\tcbSpan.className =\"input-group-checkbox\"\t\n\tcheckboxCell.appendChild(cbSpan);\n\t\n\t// Create the checkbox\n\tvar checkbox = document.createElement('input');\n\tcheckbox.className = 'checkbox device'; // \"device\" is used by the tests\n\tcheckbox.type = 'checkbox';\n\t// Displayed to user in the message when selecting/unselecting a device\n\tcheckbox.name = device.getAttribute(\"name\") + ' (' + device.getAttribute(\"phone\") + ')';\n\tcheckbox.id = 'sms_device_checkbox_' + deviceId;\n\tcheckbox.value = deviceId; // The value is deviceId so we can use it later in updateSubscriptionToDevice\n\tcheckbox.onclick = function() { updateSubscriptionToDevice(this); };\n\tcheckbox.disabled = !deviceVerified;\n\tcheckbox.checked = device.getAttribute(\"isSubscribed\").toLowerCase() === 'true' && deviceVerified;\n\tupdateCheckboxAriaLabel(checkbox, device.getAttribute(\"name\"));\n\t\n\tcbSpan.appendChild(checkbox);\n\t\n\tvar checkboxLabel = document.createElement('label');\n\tcheckboxLabel.className = \"checkbox-label\";\n\tcheckboxLabel.setAttribute('for', checkbox.id);\t\n\tcbSpan.appendChild(checkboxLabel);\n\t\n\t// Delete device image\n\tvar deleteDeviceCell = document.createElement('td')\n\tdeleteDeviceCell.align = 'center';\n\n\tvar deleteDeviceImg = document.createElement(\"i\");\n\tdeleteDeviceImg.id = 'sms_device_delete_link_' + deviceId;\n\tdeleteDeviceImg.className = \"icon-delete pwd-icon-small pwd-icon-error\";\n\tdeleteDeviceImg.tabIndex = \"0\";\n\tdeleteDeviceImg.onclick = function() { deleteDevice(this, currentForm); };\n\tdeleteDeviceImg.setAttribute(\"aria-label\", getMessage(\"Delete the device \" + device.getAttribute('name')));\n\tdeleteDeviceCell.appendChild(deleteDeviceImg);\n\tdeviceRow.appendChild(deleteDeviceCell);\n\t\n\t// Device label cell\n\tvar deviceLabelCell = document.createElement('td');\n\tdeviceLabelCell.className = 'pwd-enroll-sms-name-cell';\n\tdeviceRow.appendChild(deviceLabelCell);\n\tif (isRTL)\n\t\tdeviceLabelCell.style=\"text-align: right\";\n\t\n\t// Device label\n\tvar deviceLabel = document.createElement(\"span\");\n\tdeviceLabel.id = 'sms_device_name_' + deviceId;\n\tsetText(deviceLabel, device.getAttribute(\"name\"));\n\tdeviceLabelCell.appendChild(deviceLabel);\n\t\n\t// Device country code\n\tif (currentForm.elements['use_notify'].value == 'true') {\n\t\tvar deviceCountryCodeCell = document.createElement('td');\n\t    deviceCountryCodeCell.className = 'pwd-enroll-sms-country-code-cell';\n\t    deviceRow.appendChild(deviceCountryCodeCell);\n\t    var deviceCountryCode = document.createElement(\"span\");\n\t    deviceCountryCode.id = 'sms_device_country_' + deviceId;\n\t    setText(deviceCountryCode, device.getAttribute(\"countryName\") + ' (' + device.getAttribute(\"countryCode\") + ')');\n\t    deviceCountryCodeCell.appendChild(deviceCountryCode);\n\t    if (isRTL)\n\t    \tdeviceCountryCodeCell.style=\"text-align: right\";\n\t}\n\t\n\t// Device phone number\n\tvar devicePhoneLabelCell = document.createElement('td');\n\tdevicePhoneLabelCell.className = 'pwd-enroll-sms-phone-cell';\n\tdeviceRow.appendChild(devicePhoneLabelCell);\n\tvar devicePhoneLabel = document.createElement(\"span\");\n\tdevicePhoneLabel.id = 'sms_device_number_' + deviceId;\n\tsetText(devicePhoneLabel, device.getAttribute(\"phone\"));\n\tdevicePhoneLabelCell.appendChild(devicePhoneLabel);\n\tif (isRTL)\n\t\tdevicePhoneLabelCell.style=\"text-align: right\";\n\t\n\t\n\t// Device provider\n\tif (currentForm.elements['use_notify'].value == 'false') {\n\t\tvar deviceProviderCell = document.createElement('td');\n\t    deviceProviderCell.className = 'pwd-enroll-sms-provider-cell';\n\t    deviceRow.appendChild(deviceProviderCell);\n\t    var deviceProvider = document.createElement(\"span\");\n\t    deviceProvider.id = 'sms_device_provider_' + deviceId;\n\t    setText(deviceProvider, device.getAttribute(\"provider\"));\n\t    deviceProviderCell.appendChild(deviceProvider);\n\t    if (isRTL)\n\t\t\tdeviceProviderCell.style=\"text-align: right\";\n\t}\n\t\n\n    var verifyButtonCell = document.createElement('td');\n    deviceRow.appendChild(verifyButtonCell);\n\t\n\t// if device is not verified, add the Verify button, code message, code textbox and ok button\n\t// Verify button cell\n    if (deviceVerified) {\n\t\tvar verifyButton = document.createElement(\"button\");\n\t\tverifyButton.id = 'sms_device_verify_button_' + deviceId;\n\t\tverifyButton.style.whiteSpace = 'nowrap';\n\t\tverifyButton.style.width = \"auto\";\n\t\tverifyButton.className = 'btn btn-primary btn-pwd-submit';\n\t\tverifyButton.disabled = true;\n\t\tverifyButton.innerHTML = getMessage('Verified');\n\t\tverifyButtonCell.appendChild(verifyButton);\n\t\tverifyButtonCell.setAttribute(\"aria-label\", getMessage('Verified'));\n\t}\n\t\n\telse {\n\t\t// Verify button\n\t\tvar resetButton = document.createElement(\"button\");\n\t\tverifyButtonCell.appendChild(resetButton);\n\t\tresetButton.setAttribute('data-target', '#verify_device_dlg');\n\t\tresetButton.setAttribute('data-toggle', 'modal');\n\t\tresetButton.className = \"btn btn-primary btn-pwd-submit\";\n\t\tresetButton.id = \"sms_device_verify_button_\" + deviceId;\n\t\tresetButton.style.whiteSpace = \"nowrap\";\n\t\tresetButton.style.width = \"auto\";\n\t\tresetButton.innerHTML = getMessage('Verify');\n\t\tresetButton.onclick = function() {\n\t\t\tinitVerifyDeviceDialog(this);\n\t\t\treturn false;\n\t\t};\n\t\tresetButton.setAttribute(\"aria-label\", getMessage('Verify device ' + device.getAttribute('name')));\n\t}\n}\n\nfunction getPhoneNumber(elem) {\n\tvar currentForm = elem.form;\n\tvar verId = currentForm.elements['verification_id'].value;\n\tvar phoneElem = currentForm.elements['sysparm_phone_number_' + verId];\n\treturn phoneElem.value.trim();\n}\n\nfunction getDeviceIdUsingPhoneNumber(verId, phoneNo) {\n\tvar cellElems = $j('#sms_device_table_' + verId + ' .pwd-enroll-sms-phone-cell');\n\tfor (var i = 0; i < cellElems.length; i++) {\n\t\tif($j(cellElems[i]).text() == phoneNo) {\n\t\t\tvar spanId = $j(cellElems[i]).find('span').attr('id');\n\t\t\treturn spanId.replace('sms_device_number_', '');\n\t\t}\n\t}\n\treturn \"\";\n}\n\n// Add a new device and subscription\nfunction  addNewDevice(elem) {\n\tvar currentForm = elem.form;\n\tvar useNotify = currentForm.elements['use_notify'].value;\n\tvar verId = currentForm.elements['verification_id'].value;\n\tvar gMsg = new GwtMessage();\n\t\n\t// device name\n\tvar name = getFieldValue(currentForm, 'sysparm_device_name_' + verId, \n\t\t\t'name_form_group_' + verId, 'retype_device_name_' + verId, gMsg.getMessage(\"You must specify a name to associate with your device\"));\n\tif (name == \"\")\n\t\treturn false;\n\t\n\t// country code\n\tvar countryName = '';\n\tvar countryCode = '';\n\tif (useNotify == 'true') {\n\t\tcountryCode = getFieldValue(currentForm, 'country_' + verId,\n\t\t\t\t\t'phone_form_group_' + verId, 'select_country_code_again_' + verId, gMsg.getMessage(\"You must specify a country code\"));\n\t    countryName = currentForm.elements['country_'+verId].name.trim();\n\t\tif (countryCode == \"\") {\n\t\t\t$j(\"#phone_form_group_\" + verId).removeClass(\"show-overflow\");\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\t// phone number\n\tvar phoneNumber = getFieldValue(currentForm, 'sysparm_phone_number_' + verId,\n\t\t\t\t'phone_form_group_' + verId, 'retype_phone_number_' + verId, gMsg.getMessage(\"You must specify a phone number\"));\n\tif (phoneNumber == \"\")\n\t\treturn false;\t\n\tvar phoneBare = String(phoneNumber);\n\tphoneBare = phoneBare.replace(/\\D/g,''); // strip non-digits\n\tvar validLength = /^[0-9]{6,14}$/.test(phoneBare); // 6 - 14 digits\n\t//Must end with a digit, can begin with a digit or (, and may contain (, ), digit, - or space\n\tvar validPhone = /^[\\d|\\(][\\d|\\s|\\(|\\)|-]*[\\d]$/.test(phoneNumber);\n\t\n\tif (!validPhone || !validLength ) {\n\t\tvar formGroupId = 'phone_form_group_' + verId;\n\t\tvar helpBlockId = 'retype_phone_number_' + verId;\n\t\tdisplayFieldError(helpBlockId, getMessage(\"Invalid phone number\"), formGroupId);\n\t\treturn false;\n\t}\n\t\n\t// get provider\t\n\tvar provider = '';\n\tif (useNotify != 'true') {\n\t\tprovider = getFieldValue(currentForm, 'service_provider_' + verId,\n\t\t\t\t'provider_form_group_' + verId, 'select_service_provider_again_' + verId, gMsg.getMessage(\"You must specify a provider\"));\n\t\tif (provider == \"\")\n\t\t\treturn false;\n\t}\n\t/*\n\tif (provider == null || provider == 0) {\n\t\tvar formGroupId = 'provider_form_group_' + verificationId;\n\t\tvar divId = 'select_service_provider_again_' + verificationId;\n\t\tdisplayFieldError(divId, \"Select provider\", formGroupId);\n\t\tfoundError = true;\n\t}\n\t*/\n\n\tvar ga = new GlideAjax('PwdAjaxEnrollSMS');\n\tga.addParam('sysparm_name', 'addDevice');\n\tga.addParam('sysparm_user_id', getUserID());\n\tga.addParam('sysparm_phone_number', phoneNumber);\n\tga.addParam('sysparm_device_name', name);\n\tif (useNotify == 'true') {\n\t\tga.addParam('sysparm_country_name', countryName);\n\t\tga.addParam('sysparm_country_code', countryCode);\n\t}\n\telse {\n\t\tga.addParam('sysparm_service_provider', provider);\n\t}\n\tga.getXML(handleAddDeviceResponse, null, currentForm);\n\t\n\treturn true;\n}\n\nfunction getFieldValue(currentForm, fieldId, formGroupId, helpBlockId, message) {\n\tvar ele = currentForm.elements[fieldId];\n\tele.value = ele.value.trim();\n\tif (ele.value == \"\") {\n\t\tdisplayFieldError(helpBlockId, message, formGroupId);\n\t}\n\treturn ele.value;\n}\n\n\nfunction handleAddDeviceResponse(response, currentForm) {\n\tvar verificationId = currentForm.elements['verification_id'].value;\n\tvar useNotify = currentForm.elements['use_notify'].value;\n\t\n\tvar res =  response.responseXML.getElementsByTagName(\"response\");\n\tvar status = res[0].getAttribute(\"status\");\n\tvar message = res[0].getAttribute(\"message\");\n\tvar value = res[0].getAttribute(\"value\");\n\t\n\tclearAllDevices('sms_devices_' + verificationId);\n\thandleDeviceResponse(response, currentForm);\n\t\n\t// if added clear up the input field. It's already added.\n\tif (status == 'success') {\n\t\tcurrentForm.elements['sysparm_phone_number_' + verificationId].value = '';\n\t\tcurrentForm.elements['sysparm_device_name_' + verificationId].value = '';\n\t\tif(useNotify == 'true'){\n\t\t\t$j(\"#country_\" + verificationId).val(\"\");\n\t\t\ttoggleAllListItems();\n\t\t}\n\t\telse\n            currentForm.elements['sys_select.service_provider_' + verificationId].selectedIndex = 0;\n\t\t// displayHeader(getMessage('Available Devices'), currentForm);\n\t}\n\t\n\t// the device info for newly added phones\n\t// displayMessage(message, currentForm);\n\tg_form.clearMessages();\n\tg_form.addInfoMessage(message);\n}\n\n// Update subscription of a device, represented by the checkbox.\nfunction updateSubscriptionToDevice(box) {\n\tupdateCheckboxAriaLabel(box, box.name);\n\tvar currentForm = box.form;\n\t\n\t// if (!verifyAtleastOneDeviceIsSubscribed(box, box.form))\n\t//\treturn;\n\tvar ga = new GlideAjax('PwdAjaxEnrollSMS');\n\tga.addParam('sysparm_name', 'updateDeviceSubscription');\n\tga.addParam('sysparm_user_id', getUserID());\n\tga.addParam('sysparm_device_id', box.value);\n\tga.addParam('sysparm_device_name', box.name);\n\tga.addParam('sysparm_subscribed', box.checked);\n\tif(currentForm.elements['verification_id'])\n\t\tga.addParam('sysparm_verification_id', currentForm.elements['verification_id'].value);\n\t\t\n\tga.getXML(handleUpdateDeviceSubscriptionResponse, null, box.form);\n}\n\nfunction updateCheckboxAriaLabel(checkbox, deviceName) {\n\tvar checkboxMsg = checkbox.checked? getMessage(\"Unselect the device \" + deviceName) : getMessage(\"Select the device \" + deviceName);\n\tcheckbox.setAttribute(\"aria-label\", checkboxMsg);\n}\n\nfunction handleUpdateDeviceSubscriptionResponse(response, currentForm) {\n\thandleResponseAndShowMessage(response, currentForm);\n\thandleIfNoDeviceSubscribed(response, currentForm);\n}\n\n// Verify if there is at least one device selected\n// If not, give a message. Do not allow the last one to be unselected.\n// Returns if atleast one device is selected or not\nfunction verifyAtleastOneDeviceIsSubscribed(box, currentForm) {\n\tvar verificationId = currentForm.elements['verification_id'].value;\n\tvar divElem = document.getElementById('sms_devices_' + verificationId);\n\tvar checkboxElems = divElem.getElementsByTagName('input');\n\tvar foundCheckedDevice = false;\n\t\n\t// if at least one is checked, we are good.\n\tfor (var i = 0; i != checkboxElems.length; i++) {\n\t\tif (checkboxElems[i].type != 'checkbox') {\n\t\t\tcontinue;\n\t\t}\n\t\tif (checkboxElems[i].checked) {\n\t\t\tfoundCheckedDevice = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (foundCheckedDevice) {\n\t\t// displayMessage(\"\", currentForm);\n\t\treturn true;\n\t} else {\n\t\t// displayMessage(getMessage('You must subscribe to at least one device'), currentForm);\n\t\tif (box != null)\n\t\t\tbox.checked = true;\n\t\treturn false;\n\t}\n}\n\nfunction deleteDevice(deleteItem, currentForm) {\n\tvar itemId = deleteItem.id;\n\t// Extract deviceId from the buttonId. ButtonId is sms_device_verify_button_ + deviceId\n\tvar deviceId = itemId.replace('sms_device_delete_link_', '');\n\tvar verificationId = currentForm.elements['verification_id'].value;\n\tvar box  = currentForm.elements['sms_device_checkbox_' + deviceId];\n\tvar deviceName = document.getElementById('sms_device_name_' + deviceId).innerHTML;\n\t\n\t/*\n\t// make sure we are not deleting the last checked device.\n\tvar enrolled = box.checked;\n\tbox.checked = false;\n\tif (enrolled && !verifyAtleastOneDeviceIsSubscribed(box, currentForm)) {\n\t\tbox.checked = enrolled;\n\t\treturn;\n\t}\n\t*/\n\t\n\tvar dd = new GlideModal(\"glide_confirm_basic\");\n\tdd.setTitle(new GwtMessage().getMessage('Confirm deletion for device: {0}', deviceName));\n\tdd.setPreference('onPromptComplete', function() {\n\t\t// clean up first\n\t\tclearAllDevices('sms_devices_' + verificationId);\n\t\t// get the result back\n\t\tvar ga = new GlideAjax('PwdAjaxEnrollSMS');\n\t\tga.addParam('sysparm_name', 'deleteDevice');\n\t\tga.addParam('sysparm_device_id', deviceId);\n\t\tga.addParam('sysparm_user_id', getUserID());\n\t\tga.addParam('sysparm_verification_id', verificationId);\n\t\tga.getXML(handleDeleteDeviceResponse, null, currentForm);\n\t\t\n\t});\n\tdd.setPreference('onPromptCancel', function() {});\n\tdd.render();\n\t\n}\n\nfunction handleDeleteDeviceResponse(response, currentForm) {\n\thandleResponseAndShowMessage(response, currentForm);\n\thandleDeviceResponse(response, currentForm);\n\thandleIfNoDeviceSubscribed(response, currentForm);\n}\n\n\nfunction resendEnrollmentCode(elem) {\n\tvar currentForm = elem.form;\n\tvar verificationId = currentForm.elements['verification_id'].value;\n\tvar deviceId = gel('verify_dialog_device_id_' + verificationId).value;\n\tsendEnrollmentCodeToDevice(currentForm, verificationId, deviceId);\n}\n\nfunction initVerifyDeviceDialog(elem) {\n\tvar currentForm = elem.form;\n\tvar useNotify = currentForm.elements['use_notify'].value;\n\tvar verificationId = currentForm.elements['verification_id'].value;\n\tvar buttonId = elem.id;\n\t// Extract deviceId from the buttonId. ButtonId is sms_device_verify_button_ + deviceId\n\tvar deviceId = buttonId.replace('sms_device_verify_button_', '');\n\n\tvar name     = $j('#sms_device_name_' + deviceId).text();     // Use jquery to better handle both chrome and Firefox\n\tvar phone    = $j('#sms_device_number_' + deviceId).text();   // Use jquery to better handle both chrome and Firefox\n\t\n\tcurrentForm.elements['verify_dialog_device_id_' + verificationId].value = deviceId;\n\tcurrentForm.elements['verify_dialog_device_name_' + verificationId].value = name;\n\tcurrentForm.elements['verify_dialog_device_number_' + verificationId].value = phone;\n\t\n\tif (useNotify == 'true') {\n\t\tvar countryCode = $j('#sms_device_country_' + deviceId).text();\n\t\t// the countryCode is actually like 'United State (+1)', here we only need to get the country code\n\t\tcountryCode = countryCode.match(/\\+\\d+/i);\n\t\tcurrentForm.elements['verify_dialog_device_country_' + verificationId].value = countryCode;\n\t}\n\telse {\n\t\tvar provider = $j('#sms_device_provider_' + deviceId).text();\n\t\tcurrentForm.elements['verify_dialog_device_provider_' + verificationId].value = provider;\n\t}\n\t\n\tcurrentForm.elements['verify_dialog_sms_code_' + verificationId].value = '';\n\n\tsendEnrollmentCodeToDevice(currentForm, verificationId, deviceId);\n}\n\n\n// Send a code to the device for verifying it\nfunction sendEnrollmentCodeToDevice(currentForm, verificationId, deviceId) {\n\tgel('verify_dialog_error_msg_' + verificationId).innerHTML = '';\n\n\tvar ga = new GlideAjax('PwdAjaxSMSProcessor');\n\tga.addParam('sysparm_name', 'generateEnrollmentCode');\n\tga.addParam('sysparm_verification_id', verificationId);\n\tga.addParam('sysparm_device_id', deviceId);\n\tga.getXML(handledEnrollmentCodeResponse, null, currentForm);\n}\n\n// after the enrollment code is sent to the device, show success msg\nfunction handledEnrollmentCodeResponse(response, currentForm) {\n\tvar verificationId = currentForm.elements['verification_id'].value;\n\t\n\tvar res =  response.responseXML.getElementsByTagName(\"response\");\n\tvar message = res[0].getAttribute(\"message\");\n\tvar status = res[0].getAttribute(\"status\");\n\tvar deviceId = res[0].getAttribute(\"value\");\n\n\tif (message) {\n\t\tgel('verify_dialog_error_msg_' + verificationId).classList.add(\"icon-alert\");\n\t\tgel('verify_dialog_error_msg_' + verificationId).innerHTML = \" \" + message;\n\t}\n}\n\n// Verify if the code entered matches the code sent to verify the device\nfunction verifyDeviceWithEnrollmentCode(elem) {\n\tvar currentForm = elem.form;\n\tvar verificationId = currentForm.elements['verification_id'].value;\n\tvar useNotify = currentForm.elements['use_notify'].value;\n\t\n\tvar deviceId = currentForm.elements['verify_dialog_device_id_' + verificationId].value;\n\n\tvar ga = new GlideAjax('PwdAjaxSMSProcessor');\n\tga.addParam('sysparm_name', 'verifyEnrollmentCode');\n\t\n\tvar code = currentForm.elements['verify_dialog_sms_code_' + verificationId].value.trim();\n\tcurrentForm.elements['verify_dialog_sms_code_' + verificationId].value = code;\n\t\n\tif (code == \"\") {\n\t\tdisplayFieldError('verify_dialog_error_msg_' + verificationId, \n\t\t\t\t\t\t new GwtMessage().getMessage('Code can not be empty'),\n\t\t\t\t\t\t 'verify_dialog_sms_code_form_group_' + verificationId);\n\t\treturn false;\n\t}\n\t\n\tga.addParam('sysparm_device_id', deviceId);\n\tga.addParam('sysparm_verification_id', verificationId);\n\tga.addParam('sysparm_sms_code', code);\n\tga.addParam('sysparm_user_id', getUserID());\n\t\n\tga.getXML(handledEnrollmentVerifyResponse, null, currentForm);\n\t\n\treturn true;\n}\n\n// after the enrollment code is verified, update UI to remove verification related fields\nfunction handledEnrollmentVerifyResponse(response, currentForm) {\n\thandleResponseAndShowMessage(response, currentForm);\n\n\tvar res =  response.responseXML.getElementsByTagName(\"response\");\n\tvar status = res[0].getAttribute(\"status\");\n\tif (status == 'fail') {\n\t\treturn;\n\t}\n\t\n\tvar deviceId = res[0].getAttribute(\"value\");\n\t// Update the device verification status, enable the checkbox and also select it\n\tcurrentForm.elements['sms_device_checkbox_' + deviceId].disabled = false;\n\tcurrentForm.elements['sms_device_checkbox_' + deviceId].checked = true;\n\t\n\tcurrentForm.elements['sms_device_verify_button_' + deviceId].innerHTML = getMessage('Verified');  // I18N_OK 08-04-16\n\tcurrentForm.elements['sms_device_verify_button_' + deviceId].disabled = true;\n\t\n\tgetDevices(currentForm);\n}\n\nfunction handleResponseAndShowMessage(response, currentForm) {\n\tvar res = response.responseXML.getElementsByTagName(\"response\");\n\tvar message = res[0].getAttribute(\"message\");\n\tvar status = res[0].getAttribute(\"status\");\n\n\tg_form.clearMessages();\n\tif (status == 'success') {\n  \tg_form.addInfoMessage(message);\n\t} else {\n  \tg_form.addErrorMessage(message);\n\t}\n}\n\nfunction handleIfNoDeviceSubscribed(response, currentForm) {\n\tvar status = response.responseXML.getElementsByTagName(\"response\")[0].getAttribute(\"status\");\n\tif (status == \"success\" && !verifyAtleastOneDeviceIsSubscribed(null, currentForm))\n\t\tg_form.addErrorMessage(getMessage(\"You must authorize at least one device\"));\n}\n\nfunction setText(elem, txt){\n\tvar node = document.createTextNode(txt);\n\telem.appendChild(node);\n}\n\n\nfunction openAddDeviceDialog(elem) {\n\tclearDeviceForm(elem);\n}\n\nfunction clearDeviceForm(elem) {\n\tvar currentForm = elem.form;\n\tvar verificationId = currentForm.elements['verification_id'].value;\n\tvar useNotify = currentForm.elements['use_notify'].value;\n\t\n\tvar fieldId = 'sysparm_device_name_' + verificationId;\n\tvar formGroupId = 'name_form_group_' + verificationId;\n\tvar errorId = 'retype_device_name_' + verificationId;\n\tcurrentForm.elements[fieldId].value = '';\n\tclearFieldError(errorId, formGroupId);\n\t\t\n\tfieldId = 'sysparm_phone_number_' + verificationId;\n\tformGroupId = 'phone_form_group_' + verificationId;\n\terrorId = 'retype_phone_number_' + verificationId;\n\tcurrentForm.elements[fieldId].value = '';\n\tclearFieldError(errorId, formGroupId);\n\t\n\tif (useNotify == 'false') {\n\t\tfieldId = 'sys_select.service_provider_' + verificationId;\n\t\tcurrentForm.elements[fieldId].selectedIndex = 0;\n\t\tcurrentForm.elements[fieldId].onchange();  // Manually changing the selectedIndex programatically does not trigger onChange event\n\t    formGroupId = 'provider_form_group_' + verificationId;\n\t    errorId = 'select_service_provider_again_' + verificationId;\n\t\tclearFieldError(errorId, formGroupId);\n\t}\n\telse {\n\t\t$j(\"#country_\" + verificationId).val(\"\");\n\t\ttoggleAllListItems();\n\t}\n}\n\nfunction displayFieldError(fieldId, message, formGroupId) {\n\tvar fieldElem = document.getElementById(fieldId);\n\tif (fieldElem != undefined) {\n\t\tfieldElem.classList.add(\"icon-alert\");\n\t\tfieldElem.innerHTML = message;\n\n        $j(\"[aria-describedby='\" + fieldId + \"']\").attr('aria-invalid', 'true');\n\t}\n\t$j('#' + formGroupId).addClass(\"has-error\");\n}\n\nfunction clearFieldError(fieldId, formGroupId) {\n\tvar fieldElem = document.getElementById(fieldId);\n\tif (fieldElem != undefined) {\n\t\tfieldElem.classList.remove(\"icon-alert\");\n\t\tfieldElem.innerHTML = '';\n\n        $j(\"[aria-describedby='\" + fieldId + \"']\").attr('aria-invalid', 'false');\n\t}\n\t$j('#' + formGroupId).removeClass(\"has-error\");\n}\n\nfunction updateCountry(event) {\n\tvar verificationId = event.data.verificationId;\n\tvar inputId = \"country_\" + verificationId;\n\tvar code = event.data.code;\n\tvar name = event.data.name;\n\t\n\tvar input = $j('#' + inputId);\n\tinput.attr(\"name\", name);\n\tinput.val(code);\n\t\n\t$j(\"#sysparm_phone_number_\"+verificationId).focus();\n}\n\nfunction selectListItem(event, ele, verificationId) {\n\tvar keycode = event.which;\n\t// Up and Down arrow key\n\tif (keycode == 38 || keycode == 40)\n\t\tnavigateList(event, verificationId);\n\t// Enter key\n\telse if (keycode == 13) {\n\t\t// prevent submitting form\n\t\tevent.preventDefault();\n\t\t$j(\".countrycode-selected\").click();\n\t}\n\t// Tab or Escape key, hide dropdown\n\telse if (keycode == 9 || keycode == 27) {\n\t\t$j('span.dropdown').removeClass('open');\n\t\tif(!$j(ele).attr(\"name\")) {\n\t\t\t$j(ele).val(\"\");\n\t\t}\n\t}\n}\n\nfunction filterOut(event, ele, verificationId){\n\t// Up, Down, Enter and Tab key\n\tvar keycode = event.which;\n\tif (keycode == 38 || keycode == 40 || keycode == 13 || keycode == 9)\n\t\treturn;\n\t\n\tvar searchText = $j(ele).val().toUpperCase();\n\tvar showItems = [];\n\tvar hideItems = [];\n\tvar listItems = $j('#sys_ul_country_'+ verificationId).children();\n\tlistItems.each(function(){\n\t\tvar countryName = $j(this).text().toUpperCase();\n\t\tvar showCurrentLi = countryName.indexOf(searchText) !== -1;\n\t\tif (showCurrentLi){\n\t\t\tshowItems.push($j(this));\n\t\t}\n\t\telse{\n\t\t\thideItems.push($j(this));\n\t\t}\n\t});\n\tfor (var i = 0; i < showItems.length; i++) {\n\t\tshowItems[i].toggle(true);\n\t}\n\tfor (var i = 0; i < hideItems.length; i++) {\n\t\thideItems[i].toggle(false);\n\t}\n\t\n\tnavigateToFirst(verificationId);\n}\n\nfunction navigateList(event, verificationId) {\n\t// prevent cursor moving between text in the input\n\tevent.preventDefault();\n\tvar ul = $j(\"#sys_ul_country_\" + verificationId);\n\tvar selected = $j(\".countrycode-selected\");\n\tif (event.which == 38) { //up\n\t\tvar prev = selected.prevAll(\":visible:first\");\n\t\tif (prev.length != 0) {\n\t\t\tprev.addClass(\"countrycode-selected\");\n\t\t\tselected.removeClass(\"countrycode-selected\");\n\t\t\tscrollToItem(ul, prev);\n\t\t}\n\t}\n\tif (event.which == 40) { //down\n\t\tvar next = selected.nextAll(\":visible:first\");\n\t\tif (next.length != 0) {\n\t\t\tnext.addClass(\"countrycode-selected\");\n\t\t\tselected.removeClass(\"countrycode-selected\");\n\t\t\tscrollToItem(ul, next);\n\t\t}\n\t}\n}\n\nfunction scrollToItem(ul, item) {\n\tvar firstItem = ul.children(\":visible:first\");\n\tif (firstItem.length != 0) {\n\t\tvar firstItemTop = firstItem.offset().top;\n\t    ul.scrollTop(item.offset().top - firstItemTop - item.height()*5);\n\t}\n}\n\nfunction navigateToFirst(verificationId) {\n\tvar ul = $j(\"#sys_ul_country_\" + verificationId);\n\tul.children().removeClass(\"countrycode-selected\");\t\n\tvar firstItem = ul.children(\":visible:first\");\n\tif (firstItem.length !=  0) {\n\t\tfirstItem.addClass(\"countrycode-selected\");\n\t    scrollToItem(ul, firstItem);\n\t}\n}\n\nfunction toggleAllListItems(){\n\t$j('ul > li').each(function(){\n\t\t$j(this).toggle(true);\n\t});\n}\n\nfunction openDropdown(ele, verificationId){\n\t$j(\"#phone_form_group_\"+verificationId).addClass(\"show-overflow\");\n\t clearFieldError('select_country_code_again_' + verificationId, \n\t\t\t\t\t'phone_form_group_' + verificationId);\n\t$j(ele).attr(\"name\", \"\");\n    $j(ele).val(\"\");\n\t$j('span.dropdown').addClass('open');\n\ttoggleAllListItems();\n\tnavigateToFirst(verificationId);\n}\n\nfunction hideDropdown(event, verificationId){\n\tvar inputEle = $j(\"#country_\" + verificationId);\n\tif(!inputEle.is(event.target) && $j(\"span.dropdown\").hasClass('open')){\n\t\t$j(\"span.dropdown\").removeClass('open');\n\t\t// avoid user just typing in country code\n\t\tif(!inputEle.attr(\"name\")) {\n\t\t\tinputEle.val(\"\");\n\t\t}\n\t}\n}","sys_class_name":"sys_ui_script","sys_id":"14680a34d7232100b9bc43d60e61035d","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/421beb3304352210559073c06a02f7ef","value":"421beb3304352210559073c06a02f7ef"},"ui_type":"0","sys_update_name":"sys_ui_script_14680a34d7232100b9bc43d60e61035d","sys_updated_by":"admin","sys_created_on":"2014-10-01 18:37:59","name":"$pwd_enroll_sms_ui","sys_name":"$pwd_enroll_sms_ui","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":"read"},{"ignore_in_now_experience":"false","sys_mod_count":"23","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2023-02-28 08:20:48","sys_tags":"","script_name":"","script":"function showMiningTracker() {\n    var gaProminUtil = new GlideAjax('global.ProminUtilsAJAX');\n    gaProminUtil.addParam('sysparm_name', 'getExecutionIdByProjectDef');\n    gaProminUtil.addParam('sysparm_projectDefId', g_form.getUniqueValue());\n    gaProminUtil.getXML(getActiveTrackerResponse);\n\n    function getActiveTrackerResponse(response) {\n        var trackerDetails = response.responseXML.documentElement.getAttribute(\"answer\");\n        if (trackerDetails) {\n            trackerDetails = JSON.parse(trackerDetails);\n            if (trackerDetails.executionId) {\n                var map = getMessages([\"Progress\", \"Close & Refresh\", \"View in Workspace\", \"Process Mining\", \"Cancel\", \"Notify Me\", \"Are you sure you want to cancel the mining?\"]);\n                var dd = new GlideModal(\"hierarchical_progress_viewer\", true, \"40em\", \"10em\");\n                dd.setTitle(map[\"Progress\"]);\n                dd.setPreference(\"sysparm_renderer_execution_id\", trackerDetails.executionId);\n                dd.setPreference(\"sysparm_renderer_progress_title\", map[\"Process Mining\"]);\n                dd.setPreference(\"sysparm_button_show_graph\", map[\"View in Workspace\"]);\n                dd.setPreference(\"sysparm_button_close\", map[\"Close & Refresh\"]);\n                dd.on(\"executionComplete\", function(trackerObj) {\n\n                    var showGraph = $(\"sysparm_button_show_graph\");\n                    if (showGraph) {\n                        if (trackerObj.state == 2) {\n                            showGraph.onclick = function() {\n                                var workBenchUrl = '/now/experience/promin/process-details/' + trackerDetails.versionId;\n                                g_navigation.open(workBenchUrl, \"_blank\");\n                                dd.destroy();\n                                g_navigation.reloadWindow();\n                            };\n                        } else {\n                            showGraph.style = 'display:none';\n                        }\n                    }\n                    var closeBtn = $(\"sysparm_button_close\");\n                    if (closeBtn) {\n                        closeBtn.onclick = function() {\n                            dd.destroy();\n                            g_navigation.reloadWindow();\n                        };\n                    }\n                });\n                dd.on(\"renderStatus\", function(trackerObj) {\n                    var cancelBtn = $(\"sysparm_button_cancel\");\n                    if (cancelBtn)\n                        return;\n\n                    var notifyBtn = $(\"sysparm_button_notify\");\n                    var buttonsPanel = $(\"buttonsPanel\");\n                    if (!buttonsPanel)\n                        return;\n                    var table = new Element(\"table\", {\n                        cellpadding: 0,\n                        cellspacing: 0,\n                        width: \"100%\"\n                    });\n                    var buttonsCell = table.appendChild(new Element(\"tr\")).appendChild(new Element(\"td\"));\n                    buttonsCell.align = \"right\";\n                    buttonsPanel.appendChild(table);\n                    cancelBtn = new Element(\"button\");\n                    cancelBtn.id = \"sysparm_button_cancel\";\n                    cancelBtn.type = \"button\";\n                    cancelBtn.className += 'btn btn-danger';\n                    cancelBtn.style.marginLeft = \"5px\";\n                    cancelBtn.innerHTML = map[\"Cancel\"];\n                    if (!g_user.hasRole(\"sn_process_optimization_analyst\")) {\n                        cancelBtn.disabled = true;\n                    }\n                    cancelBtn.onclick = function() {\n                        if (confirm(map[\"Are you sure you want to cancel the mining?\"]) == true) {\n                            cancelMiningProcess(trackerDetails.versionId);\n                            dd.destroy();\n                            if (g_form.getValue('state') == 'AVAILABLE') {\n                                g_navigation.reloadWindow();\n                            }\n                        }\n                    };\n                    buttonsCell.appendChild(cancelBtn);\n\n                    if (g_form.getValue('watch_list').toString().indexOf(g_user.userID) < 0) {\n                        notifyBtn = new Element(\"button\");\n                        notifyBtn.id = \"sysparm_button_notify\";\n                        notifyBtn.type = \"button\";\n                        notifyBtn.innerHTML = map[\"Notify Me\"];\n                        notifyBtn.className += 'btn btn-default';\n                        notifyBtn.style.marginLeft = \"5px\";\n                        notifyBtn.onclick = function() {\n                            addUserToWatchList(function() {\n                                notifyBtn.disabled = true;\n                                alert(\"You'll receive an email notifying you of the final extraction status.\");\n                            });\n                        };\n                        buttonsCell.appendChild(notifyBtn);\n                    }\n                    var iconCross = $(\"hierarchical_progress_viewer_closemodal\");\n                    iconCross.style.display = \"inline\"; //show close icon\n                });\n                dd.render();\n            }\n        }\n    }\n}\n\nfunction cancelMiningProcess(versionId) {\n    var gaCancelMining = new GlideAjax('global.ProminUtilsAJAX');\n    gaCancelMining.addParam('sysparm_name', 'cancelMining');\n    gaCancelMining.addParam('sysparm_versionId', versionId);\n    gaCancelMining.getXML();\n}\n\nfunction addUserToWatchList(callbackFn) {\n    var gaNotify = new GlideAjax('global.ProminUtilsAJAX');\n    gaNotify.addParam('sysparm_name', 'addUserToWatchList');\n    gaNotify.addParam('sysparm_projectDefId', g_form.getUniqueValue());\n    gaNotify.getXML(confirmUserAddParse);\n\n    function confirmUserAddParse(response) {\n        var answer = response.responseXML.documentElement.getAttribute(\"answer\");\n        if (answer == \"true\") {\n            callbackFn();\n        } else\n            alert(\"Cannot add you to the watch list\");\n    }\n}","sys_class_name":"sys_ui_script","sys_id":"1667781d53912110c8f0ddeeff7b12b3","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/aa76333f04b52210559073c06a02f764","value":"aa76333f04b52210559073c06a02f764"},"ui_type":"0","sys_update_name":"sys_ui_script_1667781d53912110c8f0ddeeff7b12b3","sys_updated_by":"admin","sys_created_on":"2023-02-27 16:39:53","name":"PO_Show_Mining_Tracker","sys_name":"PO_Show_Mining_Tracker","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"230","active":"true","description":"Service meetingAgenda.  Manages the agenda for a meeting in CAB Workbench.","use_scoped_format":"false","global":"false","sys_updated_on":"2024-10-23 14:10:18","sys_tags":"","script_name":"agenda.meetingAgenda","script":"angular.module(\"sn.change_management.cab.agenda\")\n\t.service(\"meetingAgenda\", ['CAB', 'modelUtil', 'initialLoad', '$http', '$q', 'amb', 'filterFilter', '$timeout', '$rootScope', 'cabWatcher', 'runtimeState', function(CAB, modelUtil, initialLoad, $http, $q, amb, filterFilter, $timeout, $rootScope, cabWatcher, runtimeState) {\n\t\t\n\t\tvar meetingAgenda = this;\n\t\t\n\t\tvar mAd = []; // All requested agenda items\n\t\tvar agendaItemIdx = {}; //agendaItem sysId: agendaItem\n\t\t// Structure: {agendaItemSysId: agendaItemObject, ...}\n\t\t\n\t\tvar taskIdx = {};\n\t\t// Structure: {taskSysId: {task: taskObj, agendaItems: [agendaItemObj]}, ...}\n\t\t\n\t\tvar nriState = [];  // Status of agenda items which have not been requested\n\t\tvar nriStateIdx = {}; // index for above\n\t\t\n\t\tvar mId = null; // Meeting Id\n\t\tvar mIdReq = null; // Requested meeting Id. Prevents double requests if the REST takes a while.\n\t\tvar defReq = null; // If we have a request in progress\n\t\t\n\t\tvar taskForms = null;\n\t\t\n\t\tvar rwMod = {\"cab_agenda_item\": {}, \"task\": {}};\n\t\t\n\t\t//.filter functions for non-requested item states\n\t\tvar nriFilters = {\n\t\t\t\"all\": function(nriElem) {\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\t\"pending\": function(nriElem) {\n\t\t\t\treturn nriElem.state === CAB.PENDING;\n\t\t\t},\n\t\t\t\"complete\": function (nriElem) {\n\t\t\t\treturn nriElem.state === CAB.COMPLETE || nriElem.state === CAB.NO_DECISION;\n\t\t\t},\n\t\t\t\"mine\": function(nriElem) {\n\t\t\t\tif (nriElem.sysClassName === \"change_request\") {\n\t\t\t\t\tif (nriElem.assignment.requested_by === this.userId ||\n\t\t\t\t\t\tnriElem.assignment.assigned_to === this.userId ||\n\t\t\t\t\t\tnriElem.assignment.cab_delegate === this.userId)\n\t\t\t\t\t\treturn true;\n\t\t\t\t} else if (nriElem.assignment.assigned_to === this.userId ||\n\t\t\t\t\t\t\tnriElem.assignment.opened_by === this.userId) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"approved\": function(nriElem) {\n\t\t\t\tvar state = nriElem.state;\n\t\t\t\tvar decision = nriElem.decision;\n\t\t\t\treturn (state === CAB.COMPLETE || state === CAB.NO_DECISION) &&\n\t\t\t\t\t(decision === CAB.APPROVED || decision === CAB.PREAPPROVED);\n\t\t\t}\n\t\t};\n\t\t\n\t\t//.filter functions for agenda items\n\t\tvar agendaItemFilters = {\n\t\t\t\"all\": function(agendaItem) {\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\t\"pending\": function(agendaItem) {\n\t\t\t\treturn agendaItem.state.value === CAB.PENDING;\n\t\t\t},\n\t\t\t\"complete\": function(agendaItem) {\n\t\t\t\treturn agendaItem.state.value === CAB.COMPLETE || agendaItem.state.value === CAB.NO_DECISION;\n\t\t\t},\n\t\t\t\"mine\": function(agendaItem) {\n\t\t\t\tif (!agendaItem.task || !agendaItem.task.record)\n\t\t\t\t\treturn false;\n\n\t\t\t\tvar task = agendaItem.task.record;\n\t\t\t\t\n\t\t\t\tif(task.sys_class_name.value === \"change_request\"){\n\t\t\t\t\tif (!task.requested_by && !task.assigned_to && !task.cab_delegate)\n\t\t\t\t\t\treturn false;\n\n\t\t\t\t\tif (task.requested_by.value === this.userId ||\n\t\t\t\t\t\ttask.assigned_to.value === this.userId ||\n\t\t\t\t\t\ttask.cab_delegate.value === this.userId)\n\t\t\t\t\t\treturn  true;\n\t\t\t\t} else {\n\t\t\t\t\tif (!task.opened_by && !task.assigned_to)\n\t\t\t\t\t\treturn false;\n\n\t\t\t\t\tif (task.opened_by.value === this.userId ||\n\t\t\t\t\t\ttask.assigned_to.value === this.userId) \n\t\t\t\t\t\treturn  true;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t},\n\t\t\t\"approved\": function(agendaItem) {\n\t\t\t\tvar state = agendaItem.state.value;\n\t\t\t\tvar decision = agendaItem.decision.value;\n\t\t\t\treturn (state === CAB.COMPLETE || state === CAB.NO_DECISION) &&\n\t\t\t\t\t(decision === CAB.APPROVED || decision === CAB.PREAPPROVED);\n\t\t\t},\n\t\t};\n\t\t\n\t\t//.map functions for nri or agenda items.\n\t\tvar mapFunc = {\n\t\t\t\"sysId\": function(item) {\n\t\t\t\tif (typeof item.sysId === \"string\")\n\t\t\t\t\treturn item.sysId;\n\t\t\t\t\n\t\t\t\tif(item.sys_id.value)\n\t\t\t\t\treturn item.sys_id.value;\n\t\t\t}\n\t\t};\n\t\t\n\t\tvar g_form = null;\n\t\t$rootScope.$on('spModel.gForm.initialized', function(e, gFormInstance) {\n\t\t\tg_form = gFormInstance;\n\t\t});\n\t\t\n\t\tfunction randomIntBetween(min, max) {\n\t\t\tmin = Math.ceil(min);\n\t\t\tmax = Math.floor(max);\n\t\t\treturn Math.floor(Math.random() * (max - min + 1)) + min;\n\t\t}\n\t\t\n\t\tfunction clearAgenda() {\n\t\t\tmAd.length = 0; // Clears the array\n\t\t}\n\t\t\n\t\tfunction clearNRIState() {\n\t\t\tnriState.length = 0;\n\t\t\tnriStateIdx = {};\n\t\t}\n\t\t\n\t\tfunction buildNRIState(nri) {\n\t\t\tvar nidx = {};\n\t\t\t\n\t\t\tnri.forEach(function(element, idx) {\n\t\t\t\tnidx[element.sysId] = {\"idx\": idx, \"state\": element};\n\t\t\t});\n\t\t\tnriState = nri;\n\t\t\tnriStateIdx = nidx;\n\t\t}\n\t\t\n\t\t/**\n\t\t * Only remove from the non-requested items state\n\t\t */\n\t\tfunction removeNRIState(agendaItemSysIds) {\n\t\t\tagendaItemSysIds = Array.isArray(agendaItemSysIds) ? agendaItemSysIds : [agendaItemSysIds];\n\t\t\t\n\t\t\tvar ns = [];\n\t\t\tnriState.forEach(function(state) {\n\t\t\t\tif (agendaItemSysIds.indexOf(state.sysId) === -1) {\n\t\t\t\t\tns.push(state);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\tbuildNRIState(ns);\n\t\t}\n\t\t\n\t\t/**\n\t\t * Keep the underlying tasks fresh.\n\t\t */\n\t\tfunction subscribeTaskWatcher() {\n\t\t\tcabWatcher.watch(mId)\n\t\t\t.subscribe(function (message) {\n\t\t\t\t// Ignore updates on CAB tables, only interested in tasks\n\t\t\t\tif ([CAB.AGENDA_ITEM, CAB.DEFINITION, CAB.MEETING, CAB.ATTENDEE,CAB.RUNTIME_STATE, \"sysapproval_approver\"]\n\t\t\t\t\t.indexOf(message.data.table_name) !== -1)\n\t\t\t\t\treturn;\n\t\t\t\t\n\t\t\t\trwMod.task = message;\n\n\t\t\t\tvar operation = message.data.operation;\n\t\t\t\tvar idxElem = taskIdx[message.data.sys_id];\n\t\t\t\t\t\n\t\t\t\tif (!idxElem) //Ignore update if we don't have it.\n\t\t\t\t\treturn;\n\n\t\t\t\t// Deleting task records from the agenda items\n\t\t\t\tif (operation === \"delete\") {\n\t\t\t\t\t$rootScope.$applyAsync(function(scope) {\n\t\t\t\t\t\tidxElem.agendaItems.forEach(function(agendaItem) {\n\t\t\t\t\t\t\tagendaItem.task = {\n\t\t\t\t\t\t\t\t\"value\": \"\",\n\t\t\t\t\t\t\t\t\"display_value\": \"\",\n\t\t\t\t\t\t\t\t\"record\": null,\n\t\t\t\t\t\t\t\t\"_form\": null\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tdelete taskIdx[message.data.sys_id];\n\t\t\t\t\t});\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// For anything else, update the existing task\n\t\t\t\t$rootScope.$applyAsync(function(scope) {\n\t\t\t\t\tmodelUtil.patchObject(idxElem.task.record, message.data.record);\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t//Use the runtimeState to get the current agenda item being viewed\n\n\t\t\t\t// Get the agenda item which is currently being viewed\n\t\t\t\tvar viewAgendaItemId = runtimeState.getViewAgendaItem();\n\t\t\t\t\n\t\t\t\t$rootScope.$applyAsync(function(scope) {\n\t\t\t\t\tidxElem.agendaItems.forEach(function(agendaItem) {\n\t\t\t\t\t\tif (agendaItem.sys_id.value === viewAgendaItemId)\n\t\t\t\t\t\t\t\trefreshFormDetailInView(agendaItem);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Refresh the form data so we don't lose the cab tabs\n\t\t\t\t\t\tagendaItem.task._form = populateFormData(agendaItem, true);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\t\n\t\t/**\n\t\t * Rebuilds the task and agenda item indexes\n\t\t */\n\t\tfunction rebuildIndexes() {\n\t\t\tvar tx = {};\n\t\t\tvar aix = {};\n\t\t\tmAd.forEach(function(agendaItem) {\n\t\t\t\taix[agendaItem.sys_id.value] = agendaItem;\n\t\t\t\t\n\t\t\t\tif (tx[agendaItem.task.value]) {\n\t\t\t\t\tagendaItem.task = tx[agendaItem.task.value].task; //Dedupe the task objects\n\t\t\t\t\ttx[agendaItem.task.value].agendaItems.push(agendaItem);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ttx[agendaItem.task.value] = {\n\t\t\t\t\t\"task\": agendaItem.task,\n\t\t\t\t\t\"agendaItems\": [agendaItem]\n\t\t\t\t};\n\t\t\t});\n\t\t\tagendaItemIdx = aix;\n\t\t\ttaskIdx = tx;\n\t\t}\n\t\t\n\t\tfunction clearIndexes() {\n\t\t\tagendaItemIdx = {};\n\t\t\ttaskIdx = {};\n\t\t}\n\t\t\n\t\t/**\n\t\t * Adds an agenda item to the index\n\t\t */\n\t\tfunction indexItem(item) {\n\t\t\t// Already indexed.\n\t\t\tif (agendaItemIdx[item.sys_id.value])\n\t\t\t\treturn;\n\t\t\t\n\t\t\tagendaItemIdx[item.sys_id.value] = item;\n\t\t\t\n\t\t\tvar idxElem = taskIdx[item.task.value];\n\t\t\tif (!idxElem) {\n\t\t\t\ttaskIdx[item.task.value] = {\n\t\t\t\t\t\"task\": item.task,\n\t\t\t\t\t\"agendaItems\": [item]\n\t\t\t\t};\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\titem.task = idxElem.task;\n\t\t\tidxElem.agendaItems.push(item);\n\t\t}\n\t\t\n\t\t/**\n\t\t * Removes an item from the index\n\t\t */\n\t\tfunction removeIndex(item) {\n\t\t\tdelete(agendaItemIdx[item.sys_id.value]);\n\n\t\t\tvar idxElem = taskIdx[item.task.value];\n\t\t\tif (!idxElem)\n\t\t\t\treturn;\n\t\t\t\n\t\t\tidxElem.agendaItems.some(function(agendaItem, idx, agendaItems) {\n\t\t\t\tif (item.sys_id.value === agendaItem.sys_id.value) {\n\t\t\t\t\tagendaItems.splice(idx, 1);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\t// Remove index element if there are no agendaItems left\n\t\t\tif (idxElem.agendaItems.length === 0)\n\t\t\t\tdelete taskIdx[item.task.value];\n\t\t}\n\n\t\t/**\n\t\t * Sort the agenda items array by the order value\n\t\t */\n\t\tfunction sortAgendaItems() {\n\t\t\tmAd.sort(function(a,b) {\n\t\t\t\treturn a.order.value - b.order.value;\n\t\t\t});\n\t\t}\n\n\t\tfunction populateFormData(agendaItem, refreshForm) {\n\t\t\tif (!refreshForm && (!agendaItem.task || !agendaItem.task.record || !agendaItem.task.record.sys_class_name || !agendaItem.task.record.sys_class_name.value))\n\t\t\t\treturn;\n\n\t\t\tvar generatedForm = refreshForm ? agendaItem.task._form : JSON.parse(JSON.stringify(taskForms[agendaItem.task.record.sys_class_name.value]));\n\t\t\tfor (var fld in agendaItem.task.record) {\n\t\t\t\tif (generatedForm._fields.hasOwnProperty(fld)) {\n\t\t\t\t\tvar fldValues = agendaItem.task.record[fld];\n\t\t\t\t\t//Check if the field is a dependent field\n\t\t\t\t\tif (generatedForm._fields[fld].hasOwnProperty(\"dependentField\")) {\n\t\t\t\t\t\tvar dep = generatedForm._fields[fld].dependentField;\n\t\t\t\t\t\t//Validate that the dependent field is valid, in the case that it is a combined field\n\t\t\t\t\t\t//like comments_and_work_notes\n\t\t\t\t\t\tif (agendaItem.task.record[dep]) {\n\t\t\t\t\t\t\tgeneratedForm._fields[fld].ed.dependent_value = agendaItem.task.record[dep].value;\n\t\t\t\t\t\t\tgeneratedForm._fields[fld].dependentValue = agendaItem.task.record[dep].value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tgeneratedForm._fields[fld].displayValue = fldValues.display_value;\n\t\t\t\t\tgeneratedForm._fields[fld].value = (generatedForm._fields[fld].type === \"glide_date_time\") ? fldValues.display_value : fldValues.value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tgeneratedForm.sys_id = agendaItem.task.value;\n\t\t\tgeneratedForm._attachmentGUID = agendaItem.task.value;\n\t\t\tgeneratedForm.displayValue = agendaItem.task.display_value;\n\t\t\tgeneratedForm.title = agendaItem.task.record.short_description.display_value;\n\t\t\tgeneratedForm.short_description = agendaItem.task.record.short_description.display_value;\n\n\t\t\treturn generatedForm;\n\t\t}\n\n\t\tfunction refreshFormDetailInView(agendaItem) {\n\t\t\tObject.keys(agendaItem.task._form._fields).forEach(function(fieldName) {\n\t\t\t\tif (!agendaItem.task.record[fieldName])\n\t\t\t\t\treturn;\n\t\t\t\tif (agendaItem.task._form._fields[fieldName].type === \"glide_date_time\")\n\t\t\t\t\tg_form.$private.fieldState.applyTemplateValue(fieldName, agendaItem.task.record[fieldName].display_value, agendaItem.task.record[fieldName].display_value);\n\t\t\t\telse {\n\t\t\t\t\tif (agendaItem.task._form._fields[fieldName].type === \"choice\" && agendaItem.task._form._fields[fieldName].value && agendaItem.task._form._fields[fieldName].choices) {\n\t\t\t\t\t\tvar choiceFound = agendaItem.task._form._fields[fieldName].choices.some(function(element) {\n\t\t\t\t\t\t\treturn element.value == agendaItem.task.record[fieldName].value;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (!choiceFound) {\n\t\t\t\t\t\t\tagendaItem.task._form._fields[fieldName].choices.push({\n\t\t\t\t\t\t\t\tlabel: agendaItem.task.record[fieldName].display_value,\n\t\t\t\t\t\t\t\tvalue: agendaItem.task.record[fieldName].value\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tg_form.$private.fieldState.applyTemplateValue(fieldName, agendaItem.task.record[fieldName].value, agendaItem.task.record[fieldName].display_value);\n\t\t\t\t}\n\t\t\t});\n\t\t\tg_form.$private.userState.clearModifiedFields();\n\t\t\tg_form.$private.events.stateChange(\"unmodified\");\n\t\t}\n\n\t\t// Adds an agenda item model or array of models to the agenda\n\t\tfunction addAgendaItem(toAdd) {\n\t\t\tif (!toAdd)\n\t\t\t\treturn;\n\n\t\t\tvar agendaItems = Array.isArray(toAdd) ? toAdd : [toAdd];\n\n\t\t\tvar responseItemIds = [];\n\t\t\tagendaItems.forEach(function(agendaItem) {\n\t\t\t\tresponseItemIds.push(agendaItem.sys_id.value);\n\t\t\t\t// If we already have the agenda item\n\t\t\t\tif (agendaItemIdx[agendaItem.sys_id.value])\n\t\t\t\t\treturn;\n\t\t\t\t\n\t\t\t\tmodelUtil.addValueMSToAll(agendaItem);\n\t\t\t\tmodelUtil.glideListToArray(agendaItem.notification_recipients);\n\t\t\t\t\n\t\t\t\tvar unknownTask = !taskIdx[agendaItem.task.value];\n\t\t\t\tif (unknownTask)\n\t\t\t\t\tmodelUtil.addValueMSToAll(agendaItem.task.record);\n\n\t\t\t\t//Populate the _form section with record data\n\t\t\t\tagendaItem.task._form = populateFormData(agendaItem);\n\n\t\t\t\tmAd.push(agendaItem);\n\t\t\t\tindexItem(agendaItem);\n\t\t\t});\n\t\t\t\n\t\t\t//Remove the response items from the non-requested item state\n\t\t\tremoveNRIState(responseItemIds);\n\n\t\t\tsortAgendaItems();\n\t\t}\n\t\t\n\t\tfunction subscribeAgendaWatcher() {\n\t\t\tcabWatcher.watch(mId)\n\t\t\t.subscribe(function(message) {\n\t\t\t\tif (message.data.table_name !== CAB.AGENDA_ITEM)\n\t\t\t\t\treturn;\n\t\t\t\t\n\t\t\t\trwMod.cab_agenda_item = message;\n\t\t\t\t\n\t\t\t\t$rootScope.$applyAsync(function(scope) {\n\t\t\t\t\tvar operation = message.data.operation;\n\t\t\t\t\tvar sysId = message.data.sys_id;\n\t\t\t\t\n\t\t\t\t\tif (operation === \"delete\") {\n\t\t\t\t\t\tif (agendaItemIdx[sysId]) {\t\t\t\t\t\n\t\t\t\t\t\t\tmAd.some(function(agendaItem, idx) {\n\t\t\t\t\t\t\t\tif (agendaItem.sys_id.value === sysId) {\n\t\t\t\t\t\t\t\t\t// Update the indexes.\n\t\t\t\t\t\t\t\t\tvar removedItem = mAd.splice(idx, 1)[0];\n\t\t\t\t\t\t\t\t\tremoveIndex(removedItem);\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else\n\t\t\t\t\t\t\tremoveNRIState(sysId);\n\t\t\t\t\t\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\tif (operation === \"insert\") {\n\t\t\t\t\t\t// Push sys_ids onto an array and add a timeout in-case of list updates in the UI.\n\t\t\t\t\t\t$http.get(CAB.SERVICE.AGENDA_ITEM + sysId).then(function(response) {\n\t\t\t\t\t\t\taddAgendaItem(response.data.result);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmodelUtil.failNicely);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t//Check if we already have the item\n\t\t\t\t\tvar agendaItem = agendaItemIdx[sysId];\n\t\t\t\t\tvar changedFields = message.data.changes;\n\t\t\t\t\n\t\t\t\t\t// If we have the item, modify it\n\t\t\t\t\tif (agendaItem) {\n\t\t\t\t\t\tvar taskChange = changedFields.indexOf(\"task\") !== -1;\n\t\t\t\t\t\tif (taskChange)\n\t\t\t\t\t\t\tremoveIndex(agendaItem);\n\n\t\t\t\t\t\tmodelUtil.patchObject(agendaItem, message.data.record);\n\t\t\t\t\t\tmodelUtil.addValueMSToAll(agendaItem);\n\t\t\t\t\n\t\t\t\t\t\tif (changedFields.indexOf(\"notification_recipients\") != -1)\n\t\t\t\t\t\t\tmodelUtil.glideListToArray(agendaItem.notification_recipients);\n\t\t\t\t\t\n\t\t\t\t\t\tif (taskChange)\n\t\t\t\t\t\t\tindexItem(agendaItem);\n\t\t\t\t\t\n\t\t\t\t\t\t// If there was a change to the ordering, sort the agenda\t\n\t\t\t\t\t\tif (changedFields.indexOf(\"order\") !== -1)\n\t\t\t\t\t\t\tsortAgendaItems();\n\t\t\t\t\t\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t// Update the nriState for items we don't have\n\t\t\t\t\tvar nriState = nriStateIdx[sysId];\n\t\t\t\t\tif (nriState &&\n\t\t\t\t\t\t(changedFields.indexOf(\"order\") !== -1 ||\n\t\t\t\t\t\t changedFields.indexOf(\"assigned_to\") !== -1 ||\n\t\t\t\t\t\t changedFields.indexOf(\"requested_by\" !== -1) ||\n\t\t\t\t\t\t changedFields.indexOf(\"cab_delegate\" !== -1) ||\n\t\t\t\t\t\t changedFields.indexOf(\"state\") !== -1 ||\n\t\t\t\t\t\t changedFields.indexOf(\"decision\") !== -1)\n\t\t\t\t\t){\n\t\t\t\t\t\tvar recDelta = message.data.record;\n\t\t\t\t\t\tif (recDelta.order) {\n\t\t\t\t\t\t\tnriState.order = parseInt(recDelta.order.value);\t\n\t\t\t\t\t\n\t\t\t\t\t\t\t//Sort and rebuild index there is an order change\n\t\t\t\t\t\t\tnriState.sort(function(a,b) {\n\t\t\t\t\t\t\t\treturn a.order - b.order;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tbuildNRIState(nriState);\n\t\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t\t[\"state\",\"decision\"].forEach(function(fieldName) {\n\t\t\t\t\t\t\tif (recDelta[fieldName])\n\t\t\t\t\t\t\t\tnriState[fieldName] = recDelta[fieldName].value;\n\t\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\t\t[\"assigned_to\", \"requested_by\", \"cab_delegate\"].forEach(function(fieldName){\n\t\t\t\t\t\t\tif (recDelta[fieldName])\n\t\t\t\t\t\t\t\tnriState.assignment[fieldName] = recDelta[fieldName].value;\n\t\t\t\t\t\t});\n\n\t\t\t\t\t}\n\t\t\t\t\t// In all other cases, ignore the change\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\t// API\n\t\t/**\n\t\t * Common agenda item .map filters\n\t\t */\n\t\tmeetingAgenda.agendaItemFilters = agendaItemFilters;\n\t\t\n\t\t/**\n\t\t * Returns the specific agenda item from the current agenda\n\t\t * specified by agendaItemId\n\t\t */\n\t\tmeetingAgenda.getAgendaItem = function(agendaItemId) {\n\t\t\tif (agendaItemIdx[agendaItemId])\n\t\t\t\treturn $q.resolve(agendaItemIdx[agendaItemId]);\n\t\t\t\n\t\t\t// Return the promise from the http request.\n\t\t\treturn $http.get(CAB.SERVICE.AGENDA_ITEM + agendaItemId).then(function(response) {\n\t\t\t\taddAgendaItem(response.data.result);\n\t\t\t\treturn agendaItemIdx[agendaItemId];\n\t\t\t});\n\t\t};\n\n\t\t/**\n\t\t * Checks if there are earlier non-requested items in the agenda\n\t\t * filter: the filter to use\n\t\t * userId: the User's sys_id\n\t\t * limit: The number of items to check for gaps/earlier entries\n\t\t */\n\t\tmeetingAgenda.hasEarlier = function(filter, userId, limit) {\n\t\t\tlimit = !limit || limit < 1 ? mAd.length + nriState.length : limit; \n\t\t\tfilter = CAB.VALID_FILTERS.indexOf(filter) !== -1 ? filter : CAB.ALL;\n\t\t\t\n\t\t\tvar nrItemStates = nriState.filter(nriFilters[filter], { \"userId\": userId });\n\t\t\tif (nrItemStates.length === 0)\n\t\t\t\treturn false;\n\t\t\t\n\t\t\tvar reqItems = mAd.filter(agendaItemFilters[filter], { \"userId\":  userId });\n\t\t\tif (reqItems.length === 0)\n\t\t\t\treturn true;\n\t\t\t\n\t\t\tvar hasEarlier = false;\n\t\t\tvar nrItemState = nrItemStates[0];\n\t\t\tfor (var limitCount = 0; limitCount < limit && limitCount < reqItems.length; limitCount++) {\n\t\t\t\tvar agendaItem = reqItems[limitCount];\n\t\t\t\t\n\t\t\t\tvar nriOrder = isNaN(nrItemState.order) ? 0 : nrItemState.order;\n\t\t\t\tif (nriOrder < parseInt(agendaItem.order.value))\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t\t\n\t\t\treturn false;\n\t\t};\n\t\t\n\t\t/**\n\t\t * Counts the number of agenda items loaded for the given filter\n\t\t */\n\t\tmeetingAgenda.countLoadedItems = function(filter, userId) {\n\t\t\tfilter = CAB.VALID_FILTERS.indexOf(filter) !== -1 ? filter : CAB.ALL;\n\t\t\tvar filterEnv = {\"userId\": userId};\n\t\t\treturn mAd.filter(agendaItemFilters[filter], filterEnv).length;\n\t\t};\n\t\t\n\t\t/**\n\t\t * Checks the nriState for unrequested items of the given filter\n\t\t */\n\t\tmeetingAgenda.hasMoreToRequest = function(filter, userId) {\n\t\t\tfilter = CAB.VALID_FILTERS.indexOf(filter) !== -1 ? filter : CAB.ALL;\n\t\t\tvar filterEnv = {\"userId\": userId};\n\t\t\treturn nriState.filter(nriFilters[filter], filterEnv).length > 0;\n\t\t};\n\n\t\t/**\n\t\t * Requests more of the given filter if there are unrequested items\n\t\t */\n\t\tmeetingAgenda.requestMore = function(filter, userId) {\n\t\t\tfilter = CAB.VALID_FILTERS.indexOf(filter) !== -1 ? filter : CAB.ALL;\n\t\t\t\n\t\t\t// .map makes simple code but probably not that efficient\n\t\t\tvar requestItems = nriState\n\t\t\t\t\t\t\t\t.filter(nriFilters[filter], {\"userId\": userId})\n\t\t\t\t\t\t\t\t.map(mapFunc.sysId);\n\t\t\t\n\t\t\tif (requestItems.length === 0)\n\t\t\t\treturn $q.reject(\"No more agenda items for filter: \" + filter);\n\t\t\t\n\t\t\tvar reqSize = randomIntBetween(CAB.AGENDA.REQUEST_LIMIT - CAB.AGENDA.REQUEST_SKEW, CAB.AGENDA.REQUEST_LIMIT);\n\t\t\t\n\t\t\t// Limit to the skewed request size\n\t\t\tif (requestItems.length > reqSize)\n\t\t\t\trequestItems = requestItems.splice(0, reqSize);\n\t\t\t\n\t\t\treturn $http.post(CAB.SERVICE.AGENDA_ITEM.slice(0, -1),{\n\t\t\t\t\"agendaItemIds\": requestItems\n\t\t\t})\n\t\t\t.then(function(response) {\n\t\t\t\taddAgendaItem(response.data.result);\n\t\t\t});\n\t\t};\n\t\n\t\t/**\n\t\t * Checks if there are any more pending agenda items\n\t\t */\n\t\tmeetingAgenda.hasMorePending = function() {\n\t\t\tvar hasMorePending = false;\n\t\t\tmAd.some(function(agendaItem) {\n\t\t\t\tif (agendaItem.state.value === CAB.PENDING) {\n\t\t\t\t\thasMorePending = true;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\tif (hasMorePending)\n\t\t\t\treturn hasMorePending;\n\n\t\t\tnriState.some(function(stateItem) {\n\t\t\t\tif (stateItem.state === CAB.PENDING) {\n\t\t\t\t\thasMorePending = true;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\treturn hasMorePending;\n\t\t};\n\t\t\n\t\t/**\n\t\t * Returns the next pending the agenda item if there is one\n\t\t * Returns a promise now as we may have to request the next item is we don't have one.\n\t\t */\n\t\tmeetingAgenda.getNextPendingAgendaItem = function() {\n\t\t\tfunction requestAgendaItem(agendaItemId) {\n\t\t\t\treturn $http.get(CAB.SERVICE.AGENDA_ITEM + agendaItemId).then(function(response) {\n\t\t\t\t\taddAgendaItem(response.data.result);\n\t\t\t\t\treturn agendaItemIdx[agendaItemId];\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tvar raiPend = null;\n\t\t\tmAd.some(function(agendaItem) {\n\t\t\t\tif (agendaItem.state.value === CAB.PENDING) {\n\t\t\t\t\traiPend = agendaItem;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\tvar nraiPend = null;\n\t\t\tnriState.some(function(stateItem) {\n\t\t\t\tif (stateItem.state === CAB.PENDING) {\n\t\t\t\t\tnraiPend = stateItem;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\tif (!raiPend && !nraiPend)\n\t\t\t\treturn $q.reject(\"No next pending agenda item\");\n\t\t\t\n\t\t\tif (raiPend && !nraiPend)\n\t\t\t\treturn $q.resolve(raiPend);\n\t\t\t\n\t\t\tif (!raiPend && nraiPend)\n\t\t\t\treturn requestAgendaItem(nraiPend.sysId);\n\t\t\t\n\t\t\tvar raiPendOrder = isNaN(parseInt(raiPend.order.value)) ? 0 : parseInt(raiPend.order.value);\n\t\t\tvar nraiPendOrder = isNaN(parseInt(nraiPend.order)) ? 0 : parseInt(nraiPend.order);\n\t\t\tif (raiPendOrder > nraiPendOrder)\n\t\t\t\treturn requestAgendaItem(nraiPend.sysId);\n\n\t\t\t// default resolve to the agenda item we have\n\t\t\treturn $q.resolve(raiPend);\n\t\t};\n\t\t\t\t\n\t\t/**\n\t\t * Promote the selected agenda item to top of the pending list\n\t\t */\n\t\tmeetingAgenda.promoteItem = function(agendaItem) {\n\t\t\tif (!agendaItem)\n\t\t\t\treturn $q.reject(\"No agenda item provided to promoteItem\");\n\n\t\t\treturn $http.post(\"/api/sn_change_cab/cab/agenda/item/\" + agendaItem.sys_id.value + \"/promote\").then(null, modelUtil.failNicely);\n\t\t};\n\n\t\t/**\n\t\t * Move an agenda item to the pending list. This action is valid only for agenda items which state is no_decision\n\t\t */\n\t\tmeetingAgenda.moveItemToPending = function(agendaItem) {\n\t\t\tif (!agendaItem)\n\t\t\t\treturn $q.reject(\"No agenda item provided to moveItemToPending\");\n\t\t\t\n\t\t\treturn $http.post(\"/api/sn_change_cab/cab/agenda/item/\" + agendaItem.sys_id.value + \"/pending\").then(null, modelUtil.failNicely);\n\t\t};\n\n\t\t// LIFECYCLE --------------\n\t\tmeetingAgenda.cleanup = function() {\n\t\t\t// cleanup code.\n\t\t\tmId = null;\n\t\t\tmIdReq = null;\n\t\t\tdefReq = null;\n\t\t\tclearIndexes();\n\t\t\tclearAgenda();\n\t\t\tclearNRIState();\n\t\t};\n\n\t\t/**\n\t\t * Initialises the meeting agenda\n\t\t */\n\t\tfunction init(meetingSysId) {\n\t\t\tif (!meetingSysId || !modelUtil.isValidSysID(meetingSysId))\n\t\t\t\treturn $q.reject(\"Invalid meetingId\");\n\n\t\t\tmIdReq = meetingSysId;\n\t\t\tvar deferred = defReq || $q.defer(); //Check for placeholder\n\t\t\tdefReq = deferred;\n\t\t\t\n\t\t\tinitialLoad.agenda(meetingSysId)\n\t\t\t.then(function(response) {\n\t\t\t\tmId = mIdReq;\n\t\t\t\tmIdReq = null;\n\t\t\t\tdefReq = null;\n\t\t\t\ttaskForms = response.data.result.taskForms;\n\t\t\t\tbuildNRIState(response.data.result.nriState);\n\t\t\t\taddAgendaItem(response.data.result.agenda);\n\t\t\t\tsubscribeAgendaWatcher();\n\t\t\t\tsubscribeTaskWatcher();\n\t\t\t\tdeferred.resolve(mAd);\n\t\t\t}, function(response) {\n\t\t\t\tmodelUtil.failNicely(response);\n\t\t\t\tmIdReq = null;\n\t\t\t\tdefReq = null;\n\t\t\t\tdeferred.reject(response);\n\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t}\n\n\t\t/**\n\t\t * Gets the agenda for the meeting meetingSysId\n\t\t */\n\t\tmeetingAgenda.get = function(meetingSysId) {\n\t\t\t// If there's nothing to go on, wait until there is\n\t\t\tif (!meetingSysId && !mId && !defReq) {\n\t\t\t\t// Create the placeholder deferred request.\n\t\t\t\tdefReq = $q.defer();\n\t\t\t\treturn defReq.promise;\n\t\t\t}\n\n\t\t\t// If we don't have a meeting sysId but we're waiting for one\n\t\t\tif (!meetingSysId && !mIdReq && defReq)\n\t\t\t\treturn defReq.promise;\n\t\t\t\n\t\t\t// If meeting info has been requested\n\t\t\tif ((!meetingSysId || meetingSysId === mIdReq) && defReq)\n\t\t\t\treturn defReq.promise;\n\t\t\t\n\t\t\t// If we already have a meeting\n\t\t\tif ((meetingSysId === mId) || (!meetingSysId && mId))\n\t\t\t\treturn $q.resolve(mAd);\n\t\t\t\n\t\t\t// Init if we have a meeting id\n\t\t\tif (meetingSysId)\n\t\t\t\treturn init(meetingSysId);\n\t\t\t\n\t\t\t//Default reject\n\t\t\treturn $q.reject();\n\t\t};\n\t\t\n\t\tmeetingAgenda.getRWMod = function() {\n\t\t\treturn rwMod;\n\t\t};\n\t}]);","sys_class_name":"sys_ui_script","sys_id":"17141d93d752220034d145bcce6103d2","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"ui_type":"0","sys_update_name":"sys_ui_script_17141d93d752220034d145bcce6103d2","sys_updated_by":"admin","sys_created_on":"2016-10-11 14:41:24","name":"sn_change_cab.agenda.meetingAgenda","sys_name":"sn_change_cab.agenda.meetingAgenda","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"3","active":"true","description":"Service dataUtil.","use_scoped_format":"false","global":"false","sys_updated_on":"2022-09-27 13:44:48","sys_tags":"","script_name":"","script":"(function () {\n\t'use strict';\n\n\tvar monthNames = [\n\t\t\"Jan\", \"Feb\", \"Mar\",\n\t\t\"Apr\", \"May\", \"Jun\", \"Jul\",\n\t\t\"Aug\", \"Sep\", \"Oct\",\n\t\t\"Nov\", \"Dec\"\n    ];\n\n\tfunction getBrowserTzOffsetInMs(targetTimeInMs) {\n\t\tvar offset = new Date(targetTimeInMs).getTimezoneOffset();\n\t\treturn -offset * 60 * 1000;\n\t}\n\n\tfunction getZeroPadded(d) {\n\t\tif (d < 10)\n\t\t\treturn '0' + d;\n\t\treturn '' + d;\n\t}\n\n\tangular.module('sn.itsm.vcab.common')\n\t.provider('dataUtil', function () {\n\t\t// Default implementation gets it from global variables\n\t\t// but we can use angular config block to configure and\n\t\t// set our own offsets.\n\t\tvar tzOffset = window.g_tz_offset;\n\t\tvar firstDayOfWeek = window.g_first_day_of_week;\n\t\tvar dateTimeFormat = 'YYYY-MM-DD hh:mm:ss';\n\t\tvar timeFormat = '%h:%i';\n\t\tfunction getUserTzOffsetInMs(targetTimeInMs) {\n\t\t\tif (typeof tzOffset === 'undefined') {\n\t\t\t\t$log.warn('tzOffset not found falling back to browser timezone');\n\t\t\t\treturn getBrowserTzOffsetInMs(targetTimeInMs);\n\t\t\t}\n\t\t\treturn tzOffset;\n\t\t}\n\n\t\tfunction getBrowserTzDiffWithUserTzInMs(targetTimeInMs) {\n\t\t\treturn getBrowserTzOffsetInMs(targetTimeInMs) - getUserTzOffsetInMs(targetTimeInMs);\n\t\t}\n\n\t\tthis.setUserTzOffsetInMs = function (offset) {\n\t\t\ttzOffset = offset;\n\t\t};\n\t\tthis.setFirstDayOfWeek = function (fdw) {\n\t\t\tfirstDayOfWeek = fdw;\n\t\t};\n\n\t\tthis.$get = ['$log', 'i18n', 'calendarUtils', function ($log, i18n, calendarUtils) {\n\t\t\treturn {\n\n\t\t\t\tsetDateTimeFormat: function(newFormat) {\n\t\t\t\t\tdateTimeFormat = newFormat;\n\t\t\t\t},\n\n\t\t\t\tsetTimeFormat: function(newFormat) {\n\t\t\t\t\ttimeFormat = newFormat;\n\t\t\t\t},\n\n\t\t\t\tgetValue: function (o) {\n\t\t\t\t\tif (typeof o === 'object') {\n\t\t\t\t\t\tif ('value' in o)\n\t\t\t\t\t\t\treturn o.value;\n\t\t\t\t\t}\n\t\t\t\t\treturn o;\n\t\t\t\t},\n\t\t\t\tdateNowAsPerUserProfile: function () {\n\t\t\t\t\tvar n = Date.now();\n\t\t\t\t\treturn n - getBrowserTzDiffWithUserTzInMs(n);\n\t\t\t\t},\n\t\t\t\tcurrentDateAsPerUserProfile: function () {\n\t\t\t\t\tvar n = Date.now();\n\t\t\t\t\treturn new Date(n - getBrowserTzDiffWithUserTzInMs(n));\n\t\t\t\t},\n\t\t\t\t_adjustDueToDST: function(val) {\n\t\t\t\t\tvar mVal = moment.tz(val, dateTimeFormat, g_tz);\n\t\t\t\t\tif (mVal.isDST() && !moment().tz(g_tz).isDST())\n\t\t\t\t\t\treturn mVal.add(1, \"hours\").format(dateTimeFormat);\n\t\t\t\t\tif (!mVal.isDST() && moment().tz(g_tz).isDST())\n\t\t\t\t\t\treturn mVal.subtract(1, \"hours\").format(dateTimeFormat);\n\t\t\t\t\treturn val;\n\t\t\t\t},\n\t\t\t\twsToJsDate: function (d) {\n\t\t\t\t\tif (!d)\n\t\t\t\t\t\treturn null;\n\t\t\t\t\tif (d instanceof Date) // Already converted\n\t\t\t\t\t\treturn d;\n\t\t\t\t\tvar val = this.getValue(d);\n\t\t\t\t\tif (!val)\n\t\t\t\t\t\treturn null;\n\t\t\t\t\tvar m = /^([0-9]{4})-([0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2})$/.exec(val);\n\t\t\t\t\tif (!m) {\n\t\t\t\t\t\t$log.error('Unexpected. Date value format returned by REST is unrecognizable');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// We need to adjust the time if either date (today's and currently being processed) falls in DST\n\t\t\t\t\tval = this._adjustDueToDST(val);\n\t\t\t\t\t// We use value since it is guaranteed to return date time in internal format and 99% times it will be in UTC.\n\t\t\t\t\t// For the 1% need to file PRB against Table API to use getUTCValue() instead of getValue() for date fields.\n\t\t\t\t\t//.................................Y..............M.................D............H...............m...............s\n\t\t\t\t\tvar parsedDateMs = Date.UTC(parseInt(m[1]), parseInt(m[2]) - 1, parseInt(m[3]), parseInt(m[4]), parseInt(m[5]), parseInt(m[6]));\n\t\t\t\t\tvar actualDate = moment(parsedDateMs).tz(g_tz).format(dateTimeFormat);\n\t\t\t\t\treturn moment.tz(actualDate, dateTimeFormat, moment.tz.guess()).toDate();\n\t\t\t\t},\n\t\t\t\tjsToWsDate: function (d, factorGetRelatedWindows) {\n\t\t\t\t\tif (d) {\n\t\t\t\t\t\tvar dOffsetBefore = d.getTimezoneOffset();\n\t\t\t\t\t\tvar dtime =  d.getTime();\n\t\t\t\t\t\t// Do not manipulate provided date when getting date for getRelatedWindows request\n\t\t\t\t\t\tif (!factorGetRelatedWindows)\n\t\t\t\t\t\t\td = new Date(dtime - getUserTzOffsetInMs(dtime));\n\t\t\t\t\t\tvar dOffsetAfter = d.getTimezoneOffset();\n\t\t\t\t\t\t// Factor shift in DST when getting related windows\n\t\t\t\t\t\tif (factorGetRelatedWindows && (dOffsetBefore !== dOffsetAfter)) {\n\t\t\t\t\t\t\tvar offsetDiff = dOffsetBefore - dOffsetAfter;\n\t\t\t\t\t\t\td = new Date(d.getTime() - (offsetDiff * 60000));\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn d.getFullYear() + '-' + getZeroPadded(d.getMonth() + 1) + '-' + getZeroPadded(d.getDate())\n\t\t\t\t\t\t\t+ ' ' + getZeroPadded(d.getHours()) + ':' + getZeroPadded(d.getMinutes()) + ':' + getZeroPadded(d.getSeconds());\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tjsToM: function (d, timezone) {\n\t\t\t\t\t// Convert js Date object to momentJs object\n\t\t\t\t\tif (!d)\n\t\t\t\t\t\treturn null;\n\t\t\t\t\tif (d._isAMomentObject)\n\t\t\t\t\t\treturn d;\n\t\t\t\t\tif (typeof d === \"object\") {\n\t\t\t\t\t\td = d.getFullYear() + '-' + getZeroPadded(d.getMonth() + 1) + '-' + getZeroPadded(d.getDate()) + ' ' + getZeroPadded(d.getHours()) + ':' + getZeroPadded(d.getMinutes()) + ':' + getZeroPadded(d.getSeconds());\n\t\t\t\t\t\treturn moment.tz(d, \"YYYY-MM-DD HH:mm:ss\", timezone);\n\t\t\t\t\t}\n\t\t\t\t\treturn moment.tz(d, dateTimeFormat, timezone);\n\t\t\t\t},\n\t\t\t\tstrToNum: function (s, defaultVal) {\n\t\t\t\t\tif (!defaultVal)\n\t\t\t\t\t\tdefaultVal = 0;\n\t\t\t\t\treturn s ? s * 1 : defaultVal;\n\t\t\t\t},\n\t\t\t\tdateToFriendlyText: function (date) {\n\t\t\t\t\tif (date) {\n\t\t\t\t\t\tvar d = date.getDate();\n\t\t\t\t\t\tvar m = monthNames[date.getMonth()];\n\t\t\t\t\t\tvar h = getZeroPadded(date.getHours());\n\t\t\t\t\t\tvar min = getZeroPadded(date.getMinutes());\n\t\t\t\t\t\treturn i18n.getMessage(m) + \" \" + d + \" \" + calendarUtils.getScheduler().date.date_to_str(timeFormat)(date);\n\t\t\t\t\t}\n\t\t\t\t\treturn i18n.getMessage('Unbounded');\n\t\t\t\t},\n\t\t\t\tdateRangeToFriendlyText: function (startDate, endDate) {\n\t\t\t\t\tvar sUnbounded = !startDate;\n\t\t\t\t\tif (!sUnbounded) {\n\t\t\t\t\t\tvar sD = startDate.getDate();\n\t\t\t\t\t\tvar sM = monthNames[startDate.getMonth()];\n\t\t\t\t\t\tvar sH = getZeroPadded(startDate.getHours());\n\t\t\t\t\t\tvar sMin = getZeroPadded(startDate.getMinutes());\n\t\t\t\t\t}\n\n\t\t\t\t\tvar eUnbounded = !endDate;\n\t\t\t\t\tif (!eUnbounded) {\n\t\t\t\t\t\tvar eD = endDate.getDate();\n\t\t\t\t\t\tvar eM = monthNames[endDate.getMonth()];\n\t\t\t\t\t\tvar eH = getZeroPadded(endDate.getHours());\n\t\t\t\t\t\tvar eMin = getZeroPadded(endDate.getMinutes());\n\t\t\t\t\t}\n\n\t\t\t\t\tvar msg = i18n.getMessage(\"{0} to {1}\");\n\t\t\t\t\tvar a;\n\t\t\t\t\tvar b;\n\t\t\t\t\tif (!sUnbounded)\n\t\t\t\t\t\ta = i18n.getMessage(sM) + \" \" + sD + \" \" + calendarUtils.getScheduler().date.date_to_str(timeFormat)(startDate);\n\t\t\t\t\telse\n\t\t\t\t\t\ta = i18n.getMessage('Unbounded');\n\n\t\t\t\t\tif (!eUnbounded) {\n\t\t\t\t\t\tif (sUnbounded || sM !== eM || sD !== eD)\n\t\t\t\t\t\t\tb = i18n.getMessage(eM) + \" \" + eD + \" \" + calendarUtils.getScheduler().date.date_to_str(timeFormat)(endDate);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tb = calendarUtils.getScheduler().date.date_to_str(timeFormat)(endDate);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (sUnbounded) // When both unbounded then send a single 'Unbounded' msg.\n\t\t\t\t\t\t\treturn a;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tb = i18n.getMessage('Unbounded');\n\t\t\t\t\t}\n\t\t\t\t\treturn i18n.format(msg, [a, b]);\n\t\t\t\t},\n\t\t\t\tgetFirstDayOfWeek: function () {\n\t\t\t\t\tif (typeof firstDayOfWeek === 'undefined') {\n\t\t\t\t\t\t$log.warn('firstDayOfWeek not found falling back to 1');\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t}\n\t\t\t\t\treturn firstDayOfWeek;\n\t\t\t\t},\n\t\t\t\tmergeSortedArrays: function (a, b, comparator) {\n\t\t\t\t\tvar c = [];\n\t\t\t\t\tvar ca = 0;\n\t\t\t\t\tvar cb = 0;\n\t\t\t\t\tvar va;\n\t\t\t\t\tvar vb;\n\t\t\t\t\tvar aNotEmpty;\n\t\t\t\t\tvar bNotEmpty;\n\t\t\t\t\twhile (ca < a.length || cb < b.length) {\n\t\t\t\t\t\taNotEmpty = ca < a.length;\n\t\t\t\t\t\tbNotEmpty = cb < b.length;\n\t\t\t\t\t\tvar finalVal;\n\t\t\t\t\t\tif (aNotEmpty) {\n\t\t\t\t\t\t\tva = a[ca];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (bNotEmpty) {\n\t\t\t\t\t\t\tvb = b[cb];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (aNotEmpty && bNotEmpty) {\n\t\t\t\t\t\t\tif (comparator(va, vb) <= 0) {\n\t\t\t\t\t\t\t\tc.push(va);\n\t\t\t\t\t\t\t\tca++;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tc.push(vb);\n\t\t\t\t\t\t\t\tcb++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (aNotEmpty) {\n\t\t\t\t\t\t\tc.push(va);\n\t\t\t\t\t\t\tca++;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tc.push(vb);\n\t\t\t\t\t\t\tcb++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn c;\n\t\t\t\t}\n\t\t\t};\n\t\t}];\n\t})\n\t.filter('dateToFriendlyText', function (dataUtil, $log) {\n\t\treturn function (input) {\n\t\t\tif (!(input instanceof Date)) {\n\t\t\t\t$log.warn('dateToFriendlyText filter: Did not get date object as expected');\n\t\t\t\tinput = new Date(input);\n\t\t\t}\n\t\t\treturn dataUtil.dateToFriendlyText(input);\n\t\t};\n\t})\n\t.filter('dateRangeToFriendlyText', function (dataUtil, $log) {\n\t\treturn function (start, end) {\n\t\t\tif (!(start instanceof Date)) {\n\t\t\t\t$log.warn('dateRangeToFriendlyText filter: Did not get start date object as expected');\n\t\t\t\tstart = new Date(start);\n\t\t\t}\n\t\t\tif (!(end instanceof Date)) {\n\t\t\t\t$log.warn('dateRangeToFriendlyText filter: Did not get end date object as expected');\n\t\t\t\tend = new Date(end);\n\t\t\t}\n\t\t\treturn dataUtil.dateRangeToFriendlyText(start, end);\n\t\t};\n\t});\n\n} ());","sys_class_name":"sys_ui_script","sys_id":"172c8cec53ce1110a6f8ddeeff7b1252","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/3b83a3f304312210559073c06a02f788","value":"3b83a3f304312210559073c06a02f788"},"ui_type":"0","sys_update_name":"sys_ui_script_172c8cec53ce1110a6f8ddeeff7b1252","sys_updated_by":"admin","sys_created_on":"2022-09-16 16:09:57","name":"clone_calendar_vcom.dataUtil","sys_name":"clone_calendar_vcom.dataUtil","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"25","active":"true","description":"Modifies checkConditionQueryCount to include domain if domain separation is activated","use_scoped_format":"false","global":"false","sys_updated_on":"2025-06-05 05:18:18","sys_tags":"","script_name":"","script":"(function(){\n\taddLoadEvent(function() {\n\t\tvar getDomainQuery = function(id) {\n\t\t\tvar domain = g_scratchpad._loadMetricDomain;\n\t\t\tvar query = getFilter(id);\n\t\t\t// If there is a domain\n\t\t\tif (domain != null && domain != 'null') {\n\t\t\t\tvar q;\n\t\t\t\t// Use a special query if the domain is global or empty\n\t\t\t\tif (domain.strip() == '' || (domain.indexOf('global') >= 0))\n\t\t\t\t\tq = 'sys_domain=global^ORsys_domainISEMPTY';\n\t\t\t\telse\n\t\t\t\t\tq = 'sys_domain=' + domain;\n\t\t\t\t\n\t\t\t\t// Strip the query of the END marker\n\t\t\t\tif (query.endsWith('^EQ'))\n\t\t\t\t\tquery = query.substr(0, query.length - 3);\n\t\t\t\t\n\t\t\t\t// If the query is not empty, add an AND\n\t\t\t\tif (query.strip().length > 0) \n\t\t\t\t\tquery += '^';\n\t\t\t\t\n\t\t\t\t// Add the domain portion and an END marker to the query\n\t\t\t\tquery += q + '^EQ';\n\t\t\t}\n\t\t\treturn query;\n\t\t};\n\t\t\n\t\twindow.openConditionQueryResults = function(element) {\n\t\t\tvar id = element.getAttribute('data-ref');\n    \t\tvar depName = element.getAttribute('data-dependent');\n    \t\tvar depTable = getDependentTableName(element);\n\t\t\t\n\t\t\tvar redirect = function(query) {\n\t\t\t\tvar table = resolveDependentValue(id, depName, depTable);\n\t\t\t\tvar url = table + \"_list.do?sysparm_query=\" + query;\n\t\t\t\twindow.open(url, \"_blank\");\n\t\t\t};\n\t\t\t\n\t\t\t// For other conditions (e.g. filter condition), \n\t\t\t// use the regular query count\n\t\t\tif (id != 'asmt_metric_type.condition') {\n\t\t\t\tredirect(getFilter(id));\n\t\t\t}\n\t\t\t// For the condition count, check that domain matches\n\t\t\telse {\n\t\t\t\tredirect(getDomainQuery(id));\n\t\t\t}\n\t\t};\n\t\t\n\t\twindow.checkConditionQueryCount = function(element) {\n\t\t\tvar id = element.getAttribute('data-ref');\n            var depName = element.getAttribute('data-dependent');\n            var depTable = getDependentTableName(element);\n\t\t\t\n\t\t\tif (!depTable) {\n\t\t\t\t$('condition_widget.' + id).hide();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tvar getCount = function(query) {\n\t\t\t\tvar table = resolveDependentValue(id, depName, depTable);\n\t\t\t\tvar ga = new GlideAjax('ConditionsQueryAjax');\n\t\t\t\tga.addParam('sysparm_name', 'getConditionQueryCount');\n\t\t\t\tga.addParam('sysparm_table', table);\n\t\t\t\t// Use (possibly modified) query to get count\n\t\t\t\tga.addParam('sysparm_encoded_query', query);\n\t\t\t\tga.getXML(populateConditionQueryCount, null, id);\n\t\t\t\t$('condition_widget.' + id).show();\n\t\t\t};\n\t\t\t\n\t\t\t// For other conditions (e.g. filter condition), \n\t\t\t// use the regular query count\n\t\t\tif (id != 'asmt_metric_type.condition') {\n\t\t\t\tgetCount(getFilter(id));\n\t\t\t}\n\t\t\t// For the condition count, check that domain matches\n\t\t\telse {\n\t\t\t\tgetCount(getDomainQuery(id));\n\t\t\t}\n\t\t}\n\t});\n})();","sys_class_name":"sys_ui_script","sys_id":"18186831df030100cd7da5f59bf263c5","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/3da7677f04b12210559073c06a02f701","value":"3da7677f04b12210559073c06a02f701"},"ui_type":"0","sys_update_name":"sys_ui_script_18186831df030100cd7da5f59bf263c5","sys_updated_by":"system","sys_created_on":"2013-08-08 01:25:44","name":"AssessmentConditionQueryCount","sys_name":"AssessmentConditionQueryCount","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"13","active":"true","description":"Combined UI Script containing all the elements of AI Search Assist","use_scoped_format":"false","global":"false","sys_updated_on":"2023-02-09 11:16:22","sys_tags":"","script_name":"","script":"angular.module(\"sn.app_common.aisa\", [\"sn.app_common.aisa.utils\", \"sn.app_common.aisa.search\", \"sn.app_common.aisa.action\"]);\n\nangular.module(\"sn.app_common.aisa.feedback\", [\"sn.app_common\"]);\nangular.module(\"sn.app_common.aisa.feedback\").service(\"aisaFeedback\", [\"$rootScope\", \"snAnalytics\", \"i18n\", function($rootScope, snAnalytics, i18n) {\n\tvar aisaFeedback = this;\n\n\taisaFeedback.SEARCH_EVENT = 'SEARCH_EVENT';\n\taisaFeedback.SEARCH_RESULT_EVENT = 'SEARCH_RESULT_EVENT';\n\taisaFeedback.SEARCH_RESULT_EVENT_CLICK = 'CLICK';\n\taisaFeedback.NAV_NEXT = 'Next';\n\taisaFeedback.NAV_PREV = 'Previous';\n\taisaFeedback.DOMAIN = 'Domain';\n\t\n\tvar cleanTitle = function(title) {\n\t\treturn title.replace( /(<([^>]+)>)/ig, '');\n\t};\n\n\taisaFeedback.getCommonEventData = function(searchTerm, rpConfig) {\n\t\tvar commonData = {\n\t\t\t'searchContextConfigId': rpConfig.searchApp,\n\t\t\t'queryTerm': searchTerm\n\t\t};\n\t\treturn commonData;\n\t};\n\n\taisaFeedback.searchEvent = function(searchTerm, rpConfig, rawSearchResults, session) {\n\t\tvar GlideSignals = $rootScope.GlideSignals;\n\t\tvar feedbackData = aisaFeedback.getCommonEventData(searchTerm, rpConfig);\n\t\tvar searchResults = [];\n\t\tvar searchResultsPerSourceObj = {};\n\t\tvar searchResultsPerSource = [];\n\t\trawSearchResults.forEach(function(searchResult) {\n\t\t\tsearchResults.push({\n\t\t\t\t'tableName': searchResult.table,\n\t\t\t\t'recordId': searchResult.sysId,\n\t\t\t\t'resultType': \"REGULAR\"\n\t\t\t});\n\t\t\tif (!searchResultsPerSourceObj[searchResult.table])\n\t\t\t\tsearchResultsPerSourceObj[searchResult.table] = {\n\t\t\t\t\t'sourceId': searchResult.table,\n\t\t\t\t\t'numberOfResults': 0\n\t\t\t\t};\n\t\t\tsearchResultsPerSourceObj[searchResult.table].numberOfResults += 1;\n\t\t});\n\t\tfor (var table in searchResultsPerSourceObj)\n\t\t\tsearchResultsPerSource.push(searchResultsPerSourceObj[table]);\n\n\t\tfeedbackData.userId = session.userId;\n\t\tfeedbackData.language = session.language;\n\t\tfeedbackData.searchResults = searchResults;\n\t\tfeedbackData.searchResultsPerSource = searchResultsPerSource;\n\t\tGlideSignals.trackEvent(aisaFeedback.SEARCH_EVENT, GlideSignals.priority.INFO, feedbackData);\n\t};\n\n\taisaFeedback.searchResultEvent = function(searchTerm, rpConfig, result, signalType, signalValue) {\n\t\tvar GlideSignals = $rootScope.GlideSignals;\n\t\tvar feedbackData = aisaFeedback.getCommonEventData(searchTerm, rpConfig);\n\t\tfeedbackData.resultSysId = result.sysId;\n\t\tfeedbackData.labelDescription = cleanTitle(result.title);\n\t\tfeedbackData.sourceTable = result.table;\n\t\tfeedbackData.aisDocId = result.table + '_' + result.sysId;\n\t\tfeedbackData.signalType = signalType;\n\t\tfeedbackData.signalValue = signalValue;\n\t\tGlideSignals.trackEvent(aisaFeedback.SEARCH_RESULT_EVENT, GlideSignals.priority.INFO, feedbackData);\n\t};\n\t\n\taisaFeedback.sendSearchAppSeeEvent = function(searchTerm, rpSysId, responseTime, domain) {\n\t\tvar payload = {\n\t\t\tSearchTerm: searchTerm,\n\t\t\tResponseTime: responseTime,\n\t\t\tRecordProducer: rpSysId\n\t\t};\n\t\tif (domain)\n\t\t\tpayload[aisaFeedback.DOMAIN] = domain;\n\t\t\n\t\taisaFeedback.sendAppSeeEvent({\n\t\t\tname: 'Search Start AI Search Assist',\n\t\t\tdata: payload\n\t\t});\n\t};\n\t\n\taisaFeedback.sendSearchCompleteAppSeeEvent = function(resultRecord, rpSysId, link, actionId, domain, position) {\n\t\tvar payload = {\n\t\t\tActionID: actionId,\n\t\t\tDataSourceName: resultRecord.table,\n\t\t\tDocumentID: resultRecord.sysId,\n\t\t\tDocumentTitle: cleanTitle(resultRecord.title),\n\t\t\tLink: link,\n\t\t\tRecordProducer: rpSysId\n\t\t};\n\t\tif (domain)\n\t\t\tpayload[aisaFeedback.DOMAIN] = domain;\n\t\tif (position)\n\t\t\tpayload['ClickPosition'] = position;\n\t\t\n\t\taisaFeedback.sendAppSeeEvent({\n\t\t\tname: 'Search Complete AI Search Assist',\n\t\t\tdata: payload\n\t\t});\n\t};\n\t\n\taisaFeedback.sendResultClickAppSeeEvent = function(resultRecord, rpSysId, position, domain) {\n\t\tvar payload = {\n\t\t\tClickPosition: position,\n\t\t\tDataSourceName: resultRecord.table,\n\t\t\tDocumentID: resultRecord.sysId,\n\t\t\tDocumentTitle: cleanTitle(resultRecord.title),\n\t\t\tRecordProducer: rpSysId\n\t\t};\n\t\tif (domain)\n\t\t\tpayload[aisaFeedback.DOMAIN] = domain;\n\t\t\n\t\taisaFeedback.sendAppSeeEvent({\n\t\t\tname: 'Search Result Click AI Search Assist',\n\t\t\tdata: payload\n\t\t});\n\t};\n\t\n\taisaFeedback.sendNavClickAppSeeEvent = function(navDirection, rpSysId, domain) {\n\t\tvar payload = {\n\t\t\tNavigationDirection: navDirection,\n\t\t\tRecordProducer: rpSysId\n\t\t};\n\t\tif (domain)\n\t\t\tpayload[aisaFeedback.DOMAIN] = domain;\n\t\t\n\t\taisaFeedback.sendAppSeeEvent({\n\t\t\tname: 'Search Result Navigation Click AI Search Assist',\n\t\t\tdata: payload\n\t\t});\n\t};\n\t\t\n\taisaFeedback.sendActionClickAppSeeEvent = function(resultRecord, rpSysId, actionInfo, domain, position) {\n\t\tvar payload = {\n\t\t\tActionID: actionInfo.actionId,\n\t\t\tDataSourceName: resultRecord.table,\n\t\t\tDocumentID: resultRecord.sysId,\n\t\t\tDocumentTitle: cleanTitle(resultRecord.title),\n\t\t\tRecordProducer: rpSysId\n\t\t};\n\t\t\n\t\tif (actionInfo.value)\n\t\t\tpayload['ActionValue'] = actionInfo.value;\n\t\tif (domain)\n\t\t\tpayload[aisaFeedback.DOMAIN] = domain;\n\t\tif (position)\n\t\t\tpayload['ClickPosition'] = position;\n\t\t\n\t\taisaFeedback.sendAppSeeEvent({\n\t\t\tname: 'Search Result Action Click AI Search Assist',\n\t\t\tdata: payload\n\t\t});\n\t};\n\t\n\taisaFeedback.sendRPSubmitAppSeeEvent = function(searchTerm, rpSysId, domain) {\n\t\tvar payload = {\n\t\t\tSearchTerm: searchTerm,\n\t\t\tRecordProducerSysID: rpSysId,\n\t\t};\n\t\t\n\t\tif (domain)\n\t\t\tpayload[aisaFeedback.DOMAIN] = domain;\n\t\t\n\t\taisaFeedback.sendAppSeeEvent({\n\t\t\tname: 'Record Producer Submit AI Search Assist',\n\t\t\tdata: payload\n\t\t});\n\t};\n\t\n\taisaFeedback.sendAppSeeEvent = function(payload) {\n\t\tsnAnalytics.addEvent(payload);\n\t};\n}]);\n\nangular.module(\"sn.app_common.aisa.search\", [\"sn.app_common\"]);\nangular.module(\"sn.app_common.aisa.search\").service(\"aisaSearch\", [\"$http\", \"$q\", \"$log\", function($http, $q, $log) {\n\tvar aisaSearch = this;\n\n\tthis.AISA_SEARCH_ENDPOINT = \"/api/now/aisa/search\";\n\n\t// Definition of the client side SearchRequest\n\tvar SearchRequest = function(requestData) {\n\t\tvar searchRequest = {\n\t\t\tmethod: 'POST',\n\t\t\turl: aisaSearch.AISA_SEARCH_ENDPOINT,\n\t\t\theaders: {\n\t\t\t\t'Content-Type': \"application/json; charset=UTF-8\"\n\t\t\t},\n\t\t\tdata: {\n\t\t\t\t\t\"searchContextConfigId\":requestData.searchApp,\n\t\t\t\t\t\"requestedFields\": requestData.requestedFields,\n\t\t\t\t\t\"searchTerm\": requestData.searchTerm,\n\t\t\t\t\t\"rpSysId\": requestData.rpSysId\n\t\t\t}\n\t\t};\n\t\t// Deep copy of request.  Stops dot walking inadvertantly modifying different requests.\n\t\tangular.copy(searchRequest, this);\n\n\t\tthis.submit = function() {\n\t\t\treturn aisaSearch.submit(this);\n\t\t};\n\t};\n\n\t// Definition of the client side SearchResponse\n\tvar SearchResponse = function(responseData) {\n\t\tvar searchAPIResponse = {};\n\t\ttry {\n\t\t\tsearchAPIResponse = responseData.data.result;\n\t\t\tsearchAPIResponse.status = responseData.status;\n\t\t} catch (e) {\n\t\t\tsearchAPIResponse = {\n\t\t\t\tstatus: 500,\n\t\t\t\terror: \"Server Internal Error\"\n\t\t\t};\n\t\t} finally {\n\t\t\tangular.copy(searchAPIResponse, this);\n\t\t}\n\t};\n\n\taisaSearch.newSearchRequest = function(requestData) {\n\t\treturn new SearchRequest(requestData);\n\t};\n\n\taisaSearch.submit = function(searchRequest) {\n\t\tvar deferred = $q.defer();\n\t\t$http(searchRequest).then(\n\t\t\tfunction(response) {\n\t\t\t\tdeferred.resolve(new SearchResponse(response));\n\t\t\t},\n\t\t\tfunction(response) {\n\t\t\t\tdeferred.reject(response);\n\t\t\t}\n\t\t);\n\t\treturn deferred.promise;\n\t};\n}]);\n\nangular.module(\"sn.app_common.aisa.action\", [\"sn.app_common\", \"sn.app_common.aisa.utils\"]);\nangular.module(\"sn.app_common.aisa.action\").service(\"aisaAction\", [\"$http\", \"$window\", \"$location\", \"$log\", \"aisaUtils\", \"aisaActionModalHelper\", \"aisaFeedback\", \"i18n\", function($http, $window, $location, $log, aisaUtils, aisaActionModalHelper, aisaFeedback, i18n) {\n\tvar aisaAction = this;\n\n\taisaAction.ACTION_ENDPOINT_BASE = '/api/now/aisa_action';\n\taisaAction.ACTION_TYPE = {\n\t\t'OPEN_LINK_NEW_TAB': 'OPEN_LINK_NEW_TAB',\n\t\t'OPEN_LINK_CURRENT_TAB': 'OPEN_LINK_CURRENT_TAB',\n\t\t'OPEN_MODAL': 'OPEN_MODAL',\n\t\t'REDIRECT': 'REDIRECT',\n\t\t'SEARCH_RESULT_EVENT_SIGNAL': 'SEARCH_RESULT_EVENT_SIGNAL',\n\t};\n\taisaAction.ACTIONS = {\n\t\t'SOLVES_ISSUE': 'Solves my issue'\n\t};\n\t\n\taisaAction.execAction = function(action, resultRecord, commonFeedbackData, isModalSubmit, modalData, domain, rpSysId, position) {\n\t\tvar table = resultRecord.table;\n\t\tvar sysId = resultRecord.sysId;\n\n\t\tvar className = aisaUtils.getResultField(resultRecord, \"sys_class_name\").value;\n\t\tif (!className)\n\t\t\tclassName = table;\n\n\t\tvar restPath = action.restPath;\n\t\tif (!restPath.startsWith('/'))\n\t\t\trestPath = '/' + restPath;\n\n\t\tvar actionRequest = {\n\t\t\tmethod: 'POST',\n\t\t\turl: aisaAction.ACTION_ENDPOINT_BASE + restPath,\n\t\t\theaders: {\n\t\t\t\t'Content-Type': \"application/json; charset=UTF-8\"\n\t\t\t},\n\t\t\tdata: {\n\t\t\t\ttable: table,\n\t\t\t\tsysId: sysId,\n\t\t\t\tclassName: className,\n\t\t\t\tcommonFeedbackData: commonFeedbackData,\n\t\t\t\tisModalSubmit: isModalSubmit,\n\t\t\t\tmodalData: modalData\n\t\t\t}\n\t\t};\n\n\t\t$http(actionRequest).then(\n\t\t\tfunction(response) {\n\t\t\t\tvar result = response.data.result;\n\t\t\t\tvar actionType = result.actionType;\n\t\t\t\tvar forceRedirect = result.forceRedirect;\n\t\t\t\n\t\t\t\tif (aisaAction.ACTION_TYPE.OPEN_LINK_NEW_TAB === actionType) {\n\t\t\t\t\taisaFeedback.sendSearchCompleteAppSeeEvent(resultRecord, rpSysId, result.linkValue, action.actionId, domain, position);\n\t\t\t\t\t$window.open(result.linkValue, '_blank');\n\t\t\t\t} else if (aisaAction.ACTION_TYPE.OPEN_LINK_CURRENT_TAB === actionType) {\n\t\t\t\t\taisaFeedback.sendSearchCompleteAppSeeEvent(resultRecord, rpSysId, result.linkValue, action.actionId, domain, position);\n\t\t\t\t\tif (forceRedirect) {\n\t\t\t\t\t\tg_dirty_form_warning_enabled = false;\n\t\t\t\t\t\t// using open will do a refresh to reset g_dirty_form_warning_enabled\n\t\t\t\t\t\t$window.open(result.linkValue, '_self');\n\t\t\t\t\t} else\n\t\t\t\t\t\t$location.search(result.linkValue);\n\t\t\t\t} else if (aisaAction.ACTION_TYPE.OPEN_MODAL === actionType) {\n\t\t\t\t\tvar actionModal = {};\n\t\t\t\t\tactionModal.result = resultRecord;\n\t\t\t\t\tactionModal.action = action;\n\t\t\t\t\tactionModal.title = result.modalTitle || action.actionLabel;\n\t\t\t\t\tactionModal.bodyTemplate = result.modalBodyTemplate;\n\t\t\t\t\tactionModal.submitText = result.modalSubmitText || i18n.getMessage('Submit');\n\t\t\t\t\tactionModal.cancelText = result.modalCancelText || i18n.getMessage('Cancel');\n\t\t\t\t\t// modalData is for custom usage of modal\n\t\t\t\t\tactionModal.modalData = result.modalData;\n\t\t\t\t\tactionModal.modalSubmit = function() {\n\t\t\t\t\t\taisaAction.execAction(this.action, this.result, commonFeedbackData, true, this.modalData, domain, rpSysId, position);\n\t\t\t\t\t};\n\t\t\t\t\taisaActionModalHelper.showActionModal(actionModal);\n\t\t\t\t} else if (aisaAction.ACTION_TYPE.SEARCH_RESULT_EVENT_SIGNAL === actionType) {\n\t\t\t\t\tvar searchTerm = commonFeedbackData.queryTerm;\n\t\t\t\t\tvar rpConfig = {searchApp: commonFeedbackData.searchContextConfigId};\n\t\t\t\t\tvar signalType = result.signalType;\n\t\t\t\t\tvar signalValue = result.signalValue;\n\t\t\t\t\taisaFeedback.searchResultEvent(searchTerm, rpConfig, resultRecord, signalType, signalValue);\n\t\t\t\t\taisaFeedback.sendActionClickAppSeeEvent(resultRecord, rpSysId, {\n\t\t\t\t\t\tactionId: action.actionId,\n\t\t\t\t\t\tactionValue: signalValue\n\t\t\t\t\t}, domain, position);\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunction(response) {\n\t\t\t\t\n\t\t\t}\n\t\t);\n\t};\n}]);\n\nangular.module(\"sn.app_common.aisa.action\").factory('aisaActionModalHelper', [\"$uibModal\", \"aisaUtils\", function ($uibModal, aisaUtils) {\n\t\"use strict\";\n\treturn {\n\t\tshowActionModal: function (actionModal) {\n\t\t\tvar modalInstance = $uibModal.open({\n\t\t\t\ttemplateUrl: 'aisa-action-modal',\n\t\t\t\tcontroller: ['$scope', '$uibModalInstance', function ($scope, $uibModalInstance) {\n\t\t\t\t\t$scope.actionModal = actionModal;\n\t\t\t\t\t$scope.aisaUtils = aisaUtils;\n\t\t\t\t\t$scope.ok = function() {\n\t\t\t\t\t\t$uibModalInstance.dismiss();\n\t\t\t\t\t\tactionModal.modalSubmit();\n\t\t\t\t\t};\n\t\t\t\t\t$scope.cancel = function() {\n\t\t\t\t\t\t$uibModalInstance.dismiss();\n\t\t\t\t\t};\n\t\t\t\t}],\n\t\t\t\tsize: 'md'\n\t\t\t});\n\t\t\treturn modalInstance;\n\t\t}\n\t};\n}]);\n\nangular.module(\"sn.app_common.aisa.utils\", [\"sn.app_common\"]);\nangular.module(\"sn.app_common.aisa.utils\").service(\"aisaUtils\", [\"$log\", function($log) {\n\tvar aisaUtils = this;\n\n\taisaUtils.buildCatalogKBFacetFilters = function(catalogDisplayValues, kbDisplayValues) {\n\t\tvar catalogValues = [];\n\t\tvar knowledgeBaseValues = [];\n\t\tcatalogDisplayValues.forEach(function(e1) {\n\t\t\tif (e1)\n\t\t\t\tcatalogValues.push(e1);\n\t\t});\n\t\t\n\t\tkbDisplayValues.forEach(function(e2) {\n\t\t\tif (e2)\n\t\t\t\tknowledgeBaseValues.push(e2);\n\t\t});\n\t\treturn [\"_sc_cat_item.sc_catalogs_s:FACET(\" + catalogValues + \")\", \"_kb_knowledge.kb_knowledge_base_s:FACET(\" + knowledgeBaseValues + \")\"];\n\t};\n\n\taisaUtils.getResultField = function(result, fieldName) {\n\t\tvar field = {value: '', displayValue: ''};\n\t\tif (!result)\n\t\t\treturn field;\n\n\t\tresult.columns.forEach(function(column) {\n\t\t\tif (column.fieldName === fieldName)\n\t\t\t\tfield = column;\n\t\t});\n\t\treturn field;\n\t};\n\n}]);","sys_class_name":"sys_ui_script","sys_id":"1a6d9e1cf0411110f877815a87bf8d54","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/e4dd6b3304752210559073c06a02f70c","value":"e4dd6b3304752210559073c06a02f70c"},"ui_type":"0","sys_update_name":"sys_ui_script_1a6d9e1cf0411110f877815a87bf8d54","sys_updated_by":"admin","sys_created_on":"2022-07-28 15:06:30","name":"app_com.aisa","sys_name":"app_com.aisa","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"2","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2018-09-15 20:01:49","sys_tags":"","script_name":"","script":"var app = angular.module(\"sn.change_request.form.next_available_time\", [\n\t\t'sn.common',\n\t\t'ui.bootstrap',\n\t\t'ui.bootstrap.popover',\n\t\t'sn.change_request.next_available_time',\n\t\t'sn.itsm.common.accessibility'\n\t])\n\t.config(function($locationProvider) {\n\t\t$locationProvider.html5Mode({\n\t\t\tenabled: true,\n\t\t\trequireBase: false\n\t\t});\n\t});","sys_class_name":"sys_ui_script","sys_id":"1a6fb1b173a023008ef62d2b04f6a7b6","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/d00ba33304352210559073c06a02f77e","value":"d00ba33304352210559073c06a02f77e"},"ui_type":"0","sys_update_name":"sys_ui_script_1a6fb1b173a023008ef62d2b04f6a7b6","sys_updated_by":"admin","sys_created_on":"2018-09-15 10:55:14","name":"change_form.nextAvailableTime","sys_name":"change_form.nextAvailableTime","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"74","active":"true","description":"Used by various widgets on the welcome bar such as the domain picker, the encryption context picker, etc.","use_scoped_format":"false","global":"false","sys_updated_on":"2025-06-05 05:18:18","sys_tags":"","script_name":"","script":"var WelcomeWidgetSelectControl = Class.create();\n\nWelcomeWidgetSelectControl.prototype = {\n\n    /**\n     * Pass in the id of the span \n     * The select list must be in <id>_select\n     */    \n    initialize: function(span_name, roles, fillFunction, changeFunction) {\n\tthis.span = gel(span_name);\n\tthis.select = gel(span_name + \"_select\");\n        this.fRoles = new Object();\n        var ra = roles.split(\",\");\n        for (var i = 0; i < ra.length; i++) {\n            var r = ra[i];\n            this.fRoles[r] = true;\n        }\n        this.fillFunction = fillFunction;\n        this.changeFunction = changeFunction;\n        this.onlyIfChoices = false;\n        this.reloadOnChange = true;\n\t\tthis.fillWidget();\n    \n        hideObject(this.span);\n\n        CustomEvent.observe('user.login', this.updateWidgetForLogin.bind(this));\n        CustomEvent.observe('user.logout', this.updateWidgetForLogout.bind(this));\n    },\n\n    /**\n     * Logout handler\n     */\n    updateWidgetForLogout: function(user) {\n        hideObject(this.span);\n    },\n\n    /**\n     * Login handler\n     */\n    updateWidgetForLogin: function(user) {\n        var roles = user.getRoles();\n\n        // If logged out, hide the widget\n        if (roles.length == 0) {\n            hideObject(this.span);\n            return;\n        }\n        \n        var hide = true;\n        for (var i = 0; i < roles.length; i++) {\n            var crole = roles[i];\n            if (crole == 'admin' || this.fRoles[crole]) {\n                hide = false;\n                break;\n            }\n        }\n  \n        if (hide) {\n            hideObject(this.span);\n            return;\n        }\n    \n        // Show the picker and get the current setting\n        if (this.onlyIfChoices == false) {\n           showObjectInline(this.span);\n           showObjectInline(gel(\"select_toggle\"));\n        }\n\n        this.fillWidget();\n    },\n\n    /**\n     * Fill the select box with the available domains\n     */\n    fillWidget: function() {\n        var ga = new GlideAjax('UIPage');\n        ga.addParam('sysparm_name','fillWidget');\n        ga.addParam('sysparm_function_select',this.fillFunction);\n        ga.getXML(this.fillWidgetResponse.bind(this));\n    },\n\n    fillWidgetResponse: function(response) {\n        var opt;\n        var xml = response.responseXML;\n        var e = xml.getElementsByTagName(\"choice_list_set\")[0];\n        var currentChoice = null;\n        if (e) {\n           currentChoice = e.getAttribute(\"currentDomainId\"); // domain uses this attribute\n           if (currentChoice == null)\n              currentChoice = e.getAttribute(\"currentChoice\"); // rest of the world uses this attribute for the current choice\n        }\n\n        // Remove any existing options\n        for (var i = this.select.length - 1; i > -1; i--)\n            this.select.remove(i);\n\n        var items = xml.getElementsByTagName(\"choice\");\n        if (this.onlyIfChoices && items.length < 2) {\n            hideObject(this.span);\n            return;\n        }\n\n        if (items.length == 0)\n            return;\n    \n        // loop through item elements, and add each domain\n        found = false;\n        \n        // Do we have max characters set?\n        if (GlideManager.get().hasProperty('glide.ui.nav.stripe.select.maxchars'))\n          var maxChars = parseInt(GlideManager.get().getProperty('glide.ui.nav.stripe.select.maxchars'), 10);\n\n        for (var i = 0; i < items.length; i++) {\n            var item = items[i];\n            var selected = (item.getAttribute(\"value\") == currentChoice);\n            var orig = item.getAttribute('label');\n            var label = maxChars && orig.length > maxChars ? orig.substring(0, maxChars) + ' ...' : orig;\n\n            opt = addOption(this.select, item.getAttribute('value'), label, selected, orig);\n            opt.setAttribute('data-label', orig);\n            if (selected)\n                found = true;\n        }\n\n        if (!found && currentChoice != null && currentChoice != '') {\n            // Add the current domain at the top of the list since it does not exist\n            opt = addOptionAt(this.select, currentChoice, currentChoice, 0);\n            opt.setAttribute('data-label', currentChoice);\n            this.select.selectedIndex = 0;\n        }\n\n        if (this.onlyIfChoices)\n           showObjectInline(this.span);\n    },\n\n    changeChoice: function() {\n        var o = this.select.options[this.select.selectedIndex];\n        var ga = new GlideAjax('UIPage');\n        ga.addParam('sysparm_name','changeChoice');\n        ga.addParam('sysparm_function_select',this.changeFunction);\n        ga.addParam('sysparm_value',o.value);\n        ga.getXML(this.changeChoiceResponse.bind(this));\n    },\n\n    changeChoiceResponse: function(response) {\n        // refresh the gsft_main page in case the choice selected changes the data displayed\n        if (!this.reloadOnChange)\n           return;\n\n        var win = getMainWindow();\n        reloadWindow(win);\n        refreshNav();\n    },\n\n    // true means only show the widget if there are 2 or more choices\n    showOnlyIfChoices: function(onlyIfChoices) {\n        this.onlyIfChoices = onlyIfChoices;   \n    },\n\n    // reload main iframe when a different choice is selected\n    reloadOnChoiceChange: function(reloadOnChange) {\n        this.reloadOnChange = reloadOnChange;  \n    }\n};","sys_class_name":"sys_ui_script","sys_id":"1b82683dc0a8016500366db703680a21","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/72532b7304312210559073c06a02f7c6","value":"72532b7304312210559073c06a02f7c6"},"ui_type":"0","sys_update_name":"sys_ui_script_1b82683dc0a8016500366db703680a21","sys_updated_by":"system","sys_created_on":"2007-06-11 15:58:57","name":"WelcomeWidgetSelectControl","sys_name":"WelcomeWidgetSelectControl","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"glide.maint","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"0","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2017-12-14 14:49:48","sys_tags":"","script_name":"landing_page_header","script":"var app = angular.module(\"sn.chg_soc.landing\");\napp.directive(\"snLandingPageHeader\", function(getTemplateUrl, i18n) {\n    \"use strict\";\n    return {\n      replace: true,\n      restrict: \"E\",\n      templateUrl: getTemplateUrl(\"sn_chg_soc_landing_header.xml\"),\n      link: function($scope) {\n        $scope.filter = {\n          \"placeholderText\": i18n.getMessage(\"Search by name or owner\"),\n          \"filterConditions\": [\"name.display_value\",\"owner.display_value\"]\n        };\n      }\n    };\n});\n","sys_class_name":"sys_ui_script","sys_id":"1df726d557830300afc34786cc94f95a","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"ui_type":"","sys_update_name":"sys_ui_script_1df726d557830300afc34786cc94f95a","sys_updated_by":"admin","sys_created_on":"2017-12-14 14:49:48","name":"sn_chg_soc.landing_page_header","sys_name":"sn_chg_soc.landing_page_header","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"30","active":"true","description":"Common utility used for perform common validations on ast_contract record data","use_scoped_format":"false","global":"false","sys_updated_on":"2022-05-17 17:22:05","sys_tags":"","script_name":"","script":"function AstContractClientSideWSAPI() {\n    function onChangeCalculateTaxAmount(applicableTaxField, paymentAmountField, taxRateField, taxCostField, totalCostField, gFormObject) {\n\n        function ajaxResponse(serverResponse) {\n            var result = serverResponse.responseXML.getElementsByTagName('result');\n            gFormObject.setValue(taxCostField, result[0].getAttribute('currency') + ';' + result[0].getAttribute('taxCost'));\n            gFormObject.setValue(totalCostField, result[0].getAttribute('currency') + ';' + result[0].getAttribute('amount'));\n        }\n\n        if (!applicableTaxField || !paymentAmountField || !taxRateField || !taxCostField || !totalCostField) {\n            gFormObject.addErrorMessage('Please pass the field names for applicable taxes, payment amount, tax rate, tax cost and total cost');\n        }\n\n        var ga = new GlideAjax('ExpenseManagementUtilsAJAX');\n        ga.addParam('sysparm_name', 'getTaxAmount');\n        ga.addParam('sysparm_salesTax', gFormObject.getValue(applicableTaxField) === 'sales' ? 'true' : 'false');\n        ga.addParam('sysparm_compoundAmount', gFormObject.getValue(paymentAmountField));\n        ga.addParam('sysparm_taxRate', gFormObject.getDecimalValue(taxRateField));\n        ga.getXML(ajaxResponse);\n    }\n\n    function calculateRenewalEndDateUsingOptions(renewal_options_field, start_date_field, end_date_field, gFormObject) {\n        var ga = new GlideAjax('ContractManagementUtilsAJAX');\n        ga.addParam('sysparm_name', 'calculateRenewalEndDatesUsingOptions');\n        ga.addParam('sysparm_start_date', gFormObject.getValue(start_date_field));\n        ga.addParam('sysparm_start_date_label', gFormObject.getLabelOf(start_date_field));\n\t\tga.addParam('sysparm_end_date', gFormObject.getValue(end_date_field));\n        ga.addParam('sysparm_end_date_label', gFormObject.getLabelOf(end_date_field));\n        ga.addParam('sysparm_renewal_options', gFormObject.getValue(renewal_options_field));\n        ga.getXML(function(serverResponse) {\n\t\t\tvar output = serverResponse.responseXML.documentElement.getAttribute('answer');\t\n            outputDetails = JSON.parse(output);\n\n            if (outputDetails && outputDetails.errorMessage) {\n                gFormObject.addErrorMessage(outputDetails.errorMessage);\n                gFormObject.clearValue(start_date_field);\n            } else {\n                var endDate = outputDetails.endDate;\n\t\t\t\tgFormObject.setValue(end_date_field, endDate);\n            }\n        });\n    }\n\n    function validateStartDateEndDate(startDateField, endDateField, gFormObject) {\n        var ga = new GlideAjax('ContractManagementUtilsAJAX');\n        ga.addParam('sysparm_name', 'validateStartEndDates');\n        ga.addParam('sysparm_start_date', gFormObject.getValue(startDateField));\n        ga.addParam('sysparm_start_date_label', gFormObject.getLabelOf(startDateField));\n        ga.addParam('sysparm_end_date', gFormObject.getValue(endDateField));\n        ga.addParam('sysparm_end_date_label', gFormObject.getLabelOf(endDateField));\n        ga.getXML(function(serverResponse) {\n            var validationError = serverResponse.responseXML.documentElement.getAttribute('answer');\n            if (validationError && validationError != '') {\n                gFormObject.addErrorMessage(validationError);\n\t\t\t\tif (validationError.includes(gFormObject.getLabelOf(endDateField))) {\n\t\t\t\t\tgFormObject.clearValue(endDateField);\n\t\t\t\t} else {\n\t\t\t\t\tgFormObject.clearValue(startDateField);\n\t\t\t\t}\n            }\n        });\n\n    }\n\n    return {\n        onChangeCalculateTaxAmount: onChangeCalculateTaxAmount,\n        calculateRenewalEndDateUsingOptions: calculateRenewalEndDateUsingOptions,\n        validateStartDateEndDate: validateStartDateEndDate,\n        type: 'AstContractClientSideWSAPI'\n    };\n\n}","sys_class_name":"sys_ui_script","sys_id":"1e558dfe53120110001cddeeff7b123e","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1a3927f704f12210559073c06a02f7be","value":"1a3927f704f12210559073c06a02f7be"},"ui_type":"10","sys_update_name":"sys_ui_script_1e558dfe53120110001cddeeff7b123e","sys_updated_by":"admin","sys_created_on":"2022-03-21 10:15:28","name":"AstContractClientSideWSAPI","sys_name":"AstContractClientSideWSAPI","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"18","active":"true","description":"The included sample client javascript for UI macro - pwd_enroll_sample_ui ","use_scoped_format":"false","global":"false","sys_updated_on":"2015-12-05 03:43:22","sys_tags":"","script_name":"","script":"function mysample_on_load (formId){\n    //empty for now\n}\n/**\n* Javascript that will be called before the submit.\n*/\nfunction mysample_on_submit (formId){\n    \n    var currForm = document.getElementById(formId);\n    var elm = currForm.elements['sample_input'];\n    var val = elm.value;\n    if (val == '')\n    {\n\t\tif (currForm.elements['mandatory'].value == \"true\") {\n\t\t\tdisplayErrorMessage(getMessage(\"Sample Input can't be empty\"));\n\t\t\telm.focus();\n\t\t\treturn false;\n\t\t}\n\t\t// Don't submit optional enrollment when response is empty\n\t\telse\n\t\t\tcurrForm.elements['can_submit'].value = 'false';\n    }\n    return true;\n}","sys_class_name":"sys_ui_script","sys_id":"1ebb25939f30010054005f29468ba390","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/421beb3304352210559073c06a02f7ef","value":"421beb3304352210559073c06a02f7ef"},"ui_type":"","sys_update_name":"sys_ui_script_1ebb25939f30010054005f29468ba390","sys_updated_by":"admin","sys_created_on":"2013-04-23 01:42:56","name":"pwd_enroll_sample_ui","sys_name":"pwd_enroll_sample_ui","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"2","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2023-03-20 12:38:30","sys_tags":"","script_name":"landing_notifications","script":"var app = angular.module(\"sn.chg_model_ui.landing\");\napp.directive(\"snLandingPinnedNotification\", function($window, urlTools) {\n    \"use strict\";\n    return {\n      replace : true,\n      restrict : \"E\",\n      templateUrl : urlTools.getPartialURL(\"sn_chg_model_ui_cmu_landing_pinned_notification.xml\", \"v=\" + $window.NOW.macro_flush_stamp)\n    };\n});\n\t","sys_class_name":"sys_ui_script","sys_id":"20b4c2fc53d350100999ddeeff7b12e1","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/bb9f15345332101034d1ddeeff7b12c8","value":"bb9f15345332101034d1ddeeff7b12c8"},"ui_type":"0","sys_update_name":"sys_ui_script_20b4c2fc53d350100999ddeeff7b12e1","sys_updated_by":"admin","sys_created_on":"2020-09-14 14:08:52","name":"sn_chg_model_ui.landing_notifications","sys_name":"sn_chg_model_ui.landing_notifications","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/bb9f15345332101034d1ddeeff7b12c8","value":"bb9f15345332101034d1ddeeff7b12c8"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"19","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2024-10-22 18:07:53","sys_tags":"","script_name":"","script":"var g_first_day_of_week = parseInt(gs.getProperty('glide.ui.date_format.first_day_of_week', 1));\nfunction formatDate(date, format) {\n    var MONTH_NAMES = new Array('January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December', 'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec');\n    var DAY_NAMES = new Array('Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat');\n    if (format.indexOf(\"z\") > 0)\n        return formatDateServer(date, format);\n\n    format = format + \"\";\n    var result = \"\";\n    var i_format = 0;\n    var c = \"\";\n    var token = \"\";\n    var y = date.getFullYear() + \"\";\n    var M = date.getMonth() + 1;\n    var d = date.getDate();\n    var E = date.getDay();\n    var H = date.getHours();\n    var m = date.getMinutes();\n    var s = date.getSeconds();\n    var yyyy, yy, MMM, MM, dd, hh, h, mm, ss, ampm, HH, H, KK, K, kk, k;\n    var value = new Object();\n\n    value[\"M\"] = M;\n    value[\"MM\"] = LZ(M);\n    value[\"MMM\"] = MONTH_NAMES[M + 11];\n    value[\"NNN\"] = MONTH_NAMES[M + 11];\n    value[\"MMMM\"] = MONTH_NAMES[M - 1];\n    value[\"d\"] = d;\n    value[\"dd\"] = LZ(d);\n    value[\"DD\"] = LZ(d);\n    value[\"E\"] = DAY_NAMES[E + 7];\n    value[\"EE\"] = DAY_NAMES[E];\n    value[\"H\"] = H;\n    value[\"HH\"] = LZ(H);\n\n    if (format.indexOf('w') != -1) {\n        var wk = getWeek(date);\n        if (wk >= 52 && M == 1) {\n            y = date.getFullYear();\n            y--;\n            y = y + \"\";\n        }\n        if (wk == 1 && M == 12) {\n            y = date.getFullYear();\n            y++;\n            y = y + \"\";\n        }\n        value[\"w\"] = wk;\n        value[\"ww\"] = LZ(wk);\n    }\n    var dayOfWeek = (7 + (E + 1) - (g_first_day_of_week - 1)) % 7;\n    if (dayOfWeek == 0)\n        dayOfWeek = 7;\n\n    value[\"D\"] = dayOfWeek;\n\n    if (y.length < 4) {\n        y = \"\" + (y - 0 + 1900);\n    }\n    value[\"y\"] = \"\" + y;\n    value[\"Y\"] = \"\" + y;\n    value[\"yyyy\"] = y;\n    value[\"YYYY\"] = y;\n    value[\"yy\"] = y.substring(2, 4);\n    value[\"YY\"] = y.substring(2, 4);\n\n\n    if (H == 0) {\n        value[\"h\"] = 12;\n    } else if (H > 12) {\n        value[\"h\"] = H - 12;\n    } else {\n        value[\"h\"] = H;\n    }\n    value[\"hh\"] = LZ(value[\"h\"]);\n\n    if (H > 11) {\n        value[\"K\"] = H - 12;\n    } else {\n\n        value[\"K\"] = H;\n    }\n    value[\"k\"] = H + 1;\n    value[\"KK\"] = LZ(value[\"K\"]);\n    value[\"kk\"] = LZ(value[\"k\"]);\n\n    if (H > 11) {\n        value[\"a\"] = \"PM\";\n    } else {\n        value[\"a\"] = \"AM\";\n    }\n    value[\"m\"] = m;\n    value[\"mm\"] = LZ(m);\n    value[\"s\"] = s;\n    value[\"S\"] = s;\n    value[\"ss\"] = LZ(s);\n    value[\"SS\"] = LZ(s);\n\n    while (i_format < format.length) {\n        c = format.charAt(i_format);\n        token = \"\";\n        while ((format.charAt(i_format) == c) && (i_format < format.length)) {\n            token += format.charAt(i_format++);\n        }\n        if (value[token] != null) {\n            result = result + value[token];\n        } else {\n            result = result + token;\n        }\n    }\n    return result;\n}\n\nfunction getDateFromFormat(val, format) {\n    var MONTH_NAMES = new Array('January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December', 'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec');\n    var DAY_NAMES = new Array('Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat');\n    val = val + \"\";\n    format = format + \"\";\n    var i_val = 0;\n    var i_format = 0;\n    var c = \"\";\n    var token = \"\";\n    var token2 = \"\";\n    var x, y;\n    var now = new Date();\n    var year = now.getYear();\n    var month = now.getMonth() + 1;\n    var date = 0;\n    var hh = now.getHours();\n    var mm = now.getMinutes();\n    var ss = now.getSeconds();\n    var ampm = \"\";\n    var week = false;\n    while (i_format < format.length) {\n        c = format.charAt(i_format);\n        token = \"\";\n        while ((format.charAt(i_format) == c) && (i_format < format.length)) {\n            token += format.charAt(i_format++);\n        }\n        if (token == \"yyyy\" || token == \"yy\" || token == \"y\" || token == \"YYYY\" || token == \"YY\" || token == \"Y\") {\n            if (token == \"yyyy\" || token == \"YYYY\") {\n                x = 4;\n                y = 4;\n            }\n            if (token == \"yy\" || token == \"YY\") {\n                x = 2;\n                y = 2;\n            }\n            if (token == \"y\" || token == \"Y\") {\n                x = 2;\n                y = 4;\n            }\n            year = _getInt(val, i_val, x, y);\n            if (year == null) {\n                return 0;\n            }\n            i_val += year.length;\n            if (year.length == 2) {\n                if (year > 70) {\n                    year = 1900 + (year - 0);\n                } else {\n                    year = 2000 + (year - 0);\n                }\n            }\n        } else if (token == \"MMM\" || token == \"NNN\") {\n            month = 0;\n            for (var i = 0; i < MONTH_NAMES.length; i++) {\n                var month_name = MONTH_NAMES[i];\n                if (val.substring(i_val, i_val + month_name.length).toLowerCase() == month_name.toLowerCase()) {\n                    if (token == \"MMM\" || (token == \"NNN\" && i > 11)) {\n                        month = i + 1;\n                        if (month > 12) {\n                            month -= 12;\n                        }\n                        i_val += month_name.length;\n                        break;\n                    }\n                }\n            }\n            if ((month < 1) || (month > 12)) {\n                return 0;\n            }\n        } else if (token == \"EE\" || token == \"E\") {\n            for (var i = 0; i < DAY_NAMES.length; i++) {\n                var day_name = DAY_NAMES[i];\n                if (val.substring(i_val, i_val + day_name.length).toLowerCase() == day_name.toLowerCase()) {\n                    if (week) {\n                        if (i == 0 || i == 7)\n                            date += 6;\n                        else if (i == 2 || i == 9)\n                            date += 1;\n                        else if (i == 3 || i == 10)\n                            date += 2;\n                        else if (i == 4 || i == 11)\n                            date += 3;\n                        else if (i == 5 || i == 12)\n                            date += 4;\n                        else if (i == 6 || i == 13)\n                            date += 5;\n                    }\n                    i_val += day_name.length;\n                    break;\n                }\n            }\n        } else if (token == \"MM\" || token == \"M\") {\n            month = _getInt(val, i_val, token.length, 2);\n            if (month == null || (month < 1) || (month > 12)) {\n                return 0;\n            }\n            i_val += month.length;\n        } else if (token == \"dd\" || token == \"d\" || token == \"DD\") {\n            date = _getInt(val, i_val, token.length, 2);\n            if (date == null || (date < 1) || (date > 31)) {\n                return 0;\n            }\n            i_val += date.length;\n        } else if (token == \"hh\" || token == \"h\") {\n            hh = _getInt(val, i_val, token.length, 2);\n            if (hh == null || (hh < 1) || (hh > 12)) {\n                return 0;\n            }\n            i_val += hh.length;\n        } else if (token == \"HH\" || token == \"H\") {\n            hh = _getInt(val, i_val, token.length, 2);\n            if (hh == null || (hh < 0) || (hh > 23)) {\n                return 0;\n            }\n            i_val += hh.length;\n        } else if (token == \"KK\" || token == \"K\") {\n            hh = _getInt(val, i_val, token.length, 2);\n            if (hh == null || (hh < 0) || (hh > 11)) {\n                return 0;\n            }\n            i_val += hh.length;\n        } else if (token == \"kk\" || token == \"k\") {\n            hh = _getInt(val, i_val, token.length, 2);\n            if (hh == null || (hh < 1) || (hh > 24)) {\n                return 0;\n            }\n            i_val += hh.length;\n            hh--;\n        } else if (token == \"mm\" || token == \"m\") {\n            mm = _getInt(val, i_val, token.length, 2);\n            if (mm == null || (mm < 0) || (mm > 59)) {\n                return 0;\n            }\n            i_val += mm.length;\n        } else if (token == \"ss\" || token == \"s\" || token == \"SS\" || token == \"S\") {\n            ss = _getInt(val, i_val, token.length, 2);\n            if (ss == null || (ss < 0) || (ss > 59)) {\n                return 0;\n            }\n            i_val += ss.length;\n        } else if (token == \"a\") {\n            if (val.substring(i_val, i_val + 2).toLowerCase() == \"am\") {\n                ampm = \"AM\";\n            } else if (val.substring(i_val, i_val + 2).toLowerCase() == \"pm\") {\n                ampm = \"PM\";\n            } else {\n                return 0;\n            }\n            i_val += 2;\n        } else if (token == \"w\" || token == \"ww\") {\n            var weekNum = _getInt(val, i_val, token.length, 2);\n            week = true;\n            if (weekNum != null) {\n                var temp = new Date(year, 0, 1, 0, 0, 0);\n                setWeek(temp, parseInt(weekNum, 10));\n                year = temp.getFullYear();\n                month = temp.getMonth() + 1;\n                date = temp.getDate();\n            }\n            weekNum += \"\";\n            i_val += weekNum.length;\n        } else if (token == \"D\") {\n            if (week) {\n                var day = _getInt(val, i_val, token.length, 1);\n                if ((day == null) || (day <= 0) || (day > 7))\n                    return 0;\n                var temp = new Date(year, month - 1, date, hh, mm, ss);\n                var dayOfWeek = temp.getDay();\n\n                day = parseInt(day, 10);\n                day = (day + g_first_day_of_week - 1) % 7;\n                if (day == 0)\n                    day = 7;\n                day--;\n\n                if (day < dayOfWeek)\n                    day = 7 - (dayOfWeek - day);\n                else\n                    day -= dayOfWeek;\n                if (day > 0) {\n                    temp.setDate(temp.getDate() + day);\n\n                    year = temp.getFullYear();\n                    month = temp.getMonth() + 1;\n                    date = temp.getDate();\n                }\n                i_val++;\n            }\n        } else if (token == \"z\")\n            i_val += 3;\n        else {\n            if (val.substring(i_val, i_val + token.length) != token) {\n                return 0;\n            } else {\n                i_val += token.length;\n            }\n        }\n    }\n\n    if (format.indexOf('z') == -1 && i_val != val.length) {\n        return 0;\n    } else if (val.length < i_val || val.length > i_val + 2) {\n        return 0;\n    }\n    if (month == 2) {\n        if (((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0)) {\n            if (date > 29) {\n                return 0;\n            }\n        } else {\n            if (date > 28) {\n                return 0;\n            }\n        }\n    }\n    if ((month == 4) || (month == 6) || (month == 9) || (month == 11)) {\n        if (date > 30) {\n            return 0;\n        }\n    }\n    if (hh < 12 && ampm == \"PM\") {\n        hh = hh - 0 + 12;\n    } else if (hh > 11 && ampm == \"AM\") {\n        hh -= 12;\n    }\n    var newdate = new Date(year, month - 1, date, hh, mm, ss);\n    return newdate.getTime();\n}\n\nfunction _getInt(str, i, minlength, maxlength) {\n    for (var x = maxlength; x >= minlength; x--) {\n        var token = str.substring(i, i + x);\n        var intPart = _getInteger(token);\n        if (intPart != \"\")\n            return intPart;\n    }\n    return null;\n}\n\nfunction _getInteger(val) {\n    var digits = \"1234567890\";\n    for (var i = 0; i < val.length; i++) {\n        if (digits.indexOf(val.charAt(i)) == -1)\n            return val.substring(0, i);\n    }\n    return val;\n}\n\nfunction LZ(x) {\n    return (x < 0 || x > 9 ? \"\" : \"0\") + x;\n}\n\n// Function with Glide Ajax. This has to be defined in properties list after Glide Ajax.\nfunction formatDateServer(date, format) {\n    var AjaxProxy = csGlobals['GlideAjax'];\n    var ga = new AjaxProxy(\"DateTimeUtils\");\n    ga.addParam(\"sysparm_name\", \"formatCalendarDate\");\n    var browserOffset = date.getTimezoneOffset() * 60000;\n    var g_tz_offset = 19800000;\n    var utcTime = date.getTime() - browserOffset;\n    var userDateTime = utcTime - g_tz_offset;\n    ga.addParam(\"sysparm_value\", userDateTime);\n\treturn ga.getXMLAnswer(function(response) {\n\t\tgs.info(\"Glide ajax Response:\"+response);\n\t});\n}\n\nfunction getWeek(date) {\n    var newYear = new Date(date.getFullYear(), 0, 1);\n    var day = newYear.getDay() - (g_first_day_of_week - 1);\n    day = (day >= 0 ? day : day + 7);\n    var dayNum = Math.floor((date.getTime() - newYear.getTime() - (date.getTimezoneOffset() - newYear.getTimezoneOffset()) * 60000) / 86400000) + 1;\n    var weekNum;\n    if (day < 4) {\n        weekNum = Math.floor((dayNum + day - 1) / 7) + 1;\n        if (weekNum > 52)\n            weekNum = _checkNextYear(date);\n\n        return weekNum;\n    }\n    weekNum = Math.floor((dayNum + day - 1) / 7);\n    if (weekNum < 1)\n        weekNum = _lastWeekOfYear(date);\n    else if (weekNum > 52)\n        weekNum = _checkNextYear(date);\n    return weekNum;\n}\n\nfunction _checkNextYear(date) {\n    var nYear = new Date(date.getFullYear() + 1, 0, 1);\n    var nDay = nYear.getDay() - (g_first_day_of_week - 1);\n    nDay = nDay >= 0 ? nDay : nDay + 7;\n    return nDay < 4 ? 1 : 53;\n}\n\nfunction _lastWeekOfYear(date) {\n    var newYear = new Date(date.getFullYear() - 1, 0, 1);\n    var endOfYear = new Date(date.getFullYear() - 1, 11, 31);\n    var day = newYear.getDay() - (g_first_day_of_week - 1);\n    var dayNum = Math.floor((endOfYear.getTime() - newYear.getTime() - (endOfYear.getTimezoneOffset() - newYear.getTimezoneOffset()) * 60000) / 86400000) + 1;\n    return day < 4 ? Math.floor((dayNum + day - 1) / 7) + 1 : Math.floor((dayNum + day - 1) / 7);\n}\n\n\nfunction setWeek(date, weekNum) {\n    weekNum--;\n    var startOfYear = new Date(date.getFullYear(), 0, 1);\n    var day = startOfYear.getDay() - (g_first_day_of_week - 1);\n    if (day > 0 && day < 4) {\n        date.setFullYear(startOfYear.getFullYear() - 1);\n        date.setDate(31 - day + 1);\n        date.setMonth(11);\n    } else if (day > 3)\n        date.setDate(startOfYear.getDate() + (7 - day));\n    date.setDate(date.getDate() + (7 * weekNum));\n}\n\ncsGlobals['formatDate'] = formatDate;\ncsGlobals['getDateFromFormat'] = getDateFromFormat;","sys_class_name":"sys_ui_script","sys_id":"22e4a73ba39e0210ccbd6bcf26fcda57","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/4c8e6ff304752210559073c06a02f7c4","value":"4c8e6ff304752210559073c06a02f7c4"},"ui_type":"10","sys_update_name":"sys_ui_script_22e4a73ba39e0210ccbd6bcf26fcda57","sys_updated_by":"admin","sys_created_on":"2024-05-28 09:06:42","name":"global.DateTimeProxy","sys_name":"global.DateTimeProxy","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"3","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2024-02-19 13:07:33","sys_tags":"","script_name":"","script":"function getMessages(messages) {\n    var result = {};\n    if (messages) {\n        messages.forEach(function(message) {\n            result[message] = gs.getMessage(message);\n        });\n    }\n    return result;\n}\n\ncsGlobals['getMessages'] = getMessages;","sys_class_name":"sys_ui_script","sys_id":"274da548eb2002102b57e5306952281c","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/4c8e6ff304752210559073c06a02f7c4","value":"4c8e6ff304752210559073c06a02f7c4"},"ui_type":"10","sys_update_name":"sys_ui_script_274da548eb2002102b57e5306952281c","sys_updated_by":"admin","sys_created_on":"2024-02-19 08:56:38","name":"global.GetMessagesProxy","sys_name":"global.GetMessagesProxy","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"179","active":"true","description":"Directive snCabChangeCalendar.  Displays the change calendar for a given change.","use_scoped_format":"false","global":"false","sys_updated_on":"2024-09-23 16:08:52","sys_tags":"","script_name":"","script":"angular.module('sn.itsm.vcab.calendar', ['sn.common', 'sn.calendar', 'sn.itsm.vcab.common', 'ui.bootstrap', 'ui.bootstrap.popover']);\n(function($) {\n\t'use strict';\n\tvar MOMENT_INTERNAL_DATE_TIME_FORMAT = \"YYYY-MM-DD HH:mm:ss\";\n\tvar ALL_FILTER = 'all';\n\tvar NONE_FILTER = 'none';\n\tvar ENTER = 13,\n\t\tSPACE = 32,\n\t\tESC = 27,\n\t\tF7 = 118,\n\t\tLEFT = 37,\n\t\tRIGHT = 39,\n\t\tTAB = 9,\n\t\tE = 69;\n\n\tfunction escapeHTML(html) {\n\t\tif (!html)\n\t\t\treturn '';\n\n\t\treturn String(html).replace(/[&<>\"'`=\\/]/g,\n\t\t\tfunction htmlCodes(char) {\n\t\t\t\treturn {\n\t\t\t\t\t'&': '&amp;',\n\t\t\t\t\t'<': '&lt;',\n\t\t\t\t\t'>': '&gt;',\n\t\t\t\t\t'\"': '&quot;',\n\t\t\t\t\t\"'\": '&#39;',\n\t\t\t\t\t'/': '&#x2F;',\n\t\t\t\t\t'`': '&#x60;',\n\t\t\t\t\t'=': '&#x3D;'\n\t\t\t\t}[char];\n\t\t\t});\n\t}\n\n\t// Used to serialize filter options for user preference.\n\t// Compared to JSON.stringify this creates more readable text.\n\tfunction serializeObj(o) {\n\t\tvar s = '';\n\t\tvar keys = Object.keys(o);\n\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\tvar k = keys[i];\n\t\t\tif (typeof o[k] === 'undefined' || k === ALL_FILTER || k === NONE_FILTER)\n\t\t\t\tcontinue;\n\t\t\tif (i > 0)\n\t\t\t\ts += ',';\n\t\t\ts += k + '=' + o[k];\n\t\t}\n\t\treturn s;\n\t}\n\n\tfunction deserializeObj(s) {\n\t\tvar o = {};\n\t\tif (s) {\n\t\t\tvar d = s.split(',');\n\t\t\tfor (var i = 0; i < d.length; i++) {\n\t\t\t\tvar p = d[i].split('=');\n\t\t\t\tif (p[0] === ALL_FILTER || p[0] === NONE_FILTER)\n\t\t\t\t\tcontinue;\n\t\t\t\to[p[0]] = p[1] === 'true';\n\t\t\t}\n\t\t}\n\t\treturn o;\n\t}\n\n\tfunction getPhantomKey(d) {\n\t\treturn d.getDate() + '~' + d.getMonth();\n\t}\n\n\tvar UIDC = 1;\n\n\tfunction uid() {\n\t\treturn UIDC++ + '';\n\t}\n\n\tangular.module('sn.itsm.vcab.calendar')\n\t\t.directive('snCabChangeCalendar', function(getTemplateUrl, CalendarView, vcabDataSource, dataUtil, $timeout, TimelineView, i18n, calendarUtils, calendarAccessibilityUtils,\n\t\t\t$compile, userPreferences, $q, go, cancellablePromise, $rootScope, isAccessibilityEnabled, CAB, $sanitize, $window, calendarNotificationService) {\n\t\t\treturn {\n\t\t\t\trestrict: 'E',\n\t\t\t\ttemplateUrl: getTemplateUrl('vcab_sn_vcab_calendar.xml'),\n\t\t\t\tscope: {\n\t\t\t\t\tchange: '=',\n\t\t\t\t\tonWarn: '&',\n\t\t\t\t\tisUpdatable: '@', // true/false - Default false\n\t\t\t\t\tisConfigAvailable: '@', // true/false - Default false\n\t\t\t\t\tconfigOptions: '=?',\n\t\t\t\t\tdayViewOptions: '=?',\n\t\t\t\t\tweekViewOptions: '=?',\n\t\t\t\t\tconfigDescription: '@',\n\t\t\t\t\tautoSaveAndFetchOptionsAsUserPref: '@', // true/false - Default false\n\t\t\t\t\ttimeformat: '<',\n\t\t\t\t\tdateTimeFormat: '<',\n\t\t\t\t\tfieldPermission: '=',\n\t\t\t\t\tkeyNav: '@'\n\t\t\t\t},\n\t\t\t\tlink: function($scope, el, attrs) {\n\t\t\t\t\tdataUtil.setDateTimeFormat($scope.dateTimeFormat);\n\t\t\t\t\tdataUtil.setTimeFormat($scope.timeformat);\n\t\t\t\t\tvar TIMEZONE = $window.g_tz;\n\t\t\t\t\tvar BLACKOUT_SECTION = 10,\n\t\t\t\t\t\tMAINT_SECTION = 20,\n\t\t\t\t\t\tCURR_CHANGE_SECTION = 30,\n\t\t\t\t\t\tRELATED_CHANGE_SECTION = 40;\n\t\t\t\t\tvar BLACKOUT_TYPE = 1,\n\t\t\t\t\t\tMAINT_TYPE = 2,\n\t\t\t\t\t\tBOTH_TYPE = 3;\n\t\t\t\t\tvar HAS_SPACE = 1,\n\t\t\t\t\t\tNO_SPACE = 0,\n\t\t\t\t\t\tNO_SPACE_FOR_ANYTHING = -1;\n\t\t\t\t\tvar LBL_MAINTENANCE_SCHEDULE = i18n.getMessage('Maintenance Window');\n\t\t\t\t\tvar LBL_BLACKOUT_SCHEDULE = i18n.getMessage('Blackout Schedule');\n\t\t\t\t\tvar LBL_MAINTENANCE_SCHEDULES = i18n.getMessage('Maintenance Windows');\n\t\t\t\t\tvar LBL_BLACKOUT_SCHEDULES = i18n.getMessage('Blackout Schedules');\n\t\t\t\t\tvar LBL_BOTH_SCHEDULES = i18n.getMessage('Blackout and Maint Schedules');\n\t\t\t\t\tvar LBL_MULTIPLE_MAINTENANCE_SCHEDULES = i18n.getMessage('Multiple Maintenance Windows');\n\t\t\t\t\tvar LBL_MULTIPLE_BLACKOUT_SCHEDULES = i18n.getMessage('Multiple Blackout Schedules');\n\t\t\t\t\t$scope.SETTINGS_TAB = 1;\n\t\t\t\t\t$scope.CONFIG_TAB = 2;\n\t\t\t\t\t$scope.CalendarView = CalendarView;\n\t\t\t\t\tvar focusTimer, focusIDAfterUpdate;\n\t\t\t\t\t$scope.changeFilterOpen = false;\n\t\t\t\t\tvar CHANGE_FILTER_BUTTON = 'change_filter';\n\t\t\t\t\tvar CHANGE_FILTER_POPOVER = 'cab_change_filter_popover';\n\t\t\t\t\tvar PARENT_EVENT_ID = \"parent_event_id\";\n\t\t\t\t\tvar filterPopoverTimer;\n\n\t\t\t\t\tfunction setFocus(id, timeoutValue) {\n\t\t\t\t\t\tif (!id)\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\ttimeoutValue = timeoutValue || 100;\n\t\t\t\t\t\tif (focusTimer)\n\t\t\t\t\t\t\t$timeout.cancel(focusTimer);\n\t\t\t\t\t\tfocusTimer = $timeout(function() {\n\t\t\t\t\t\t\tfocusTimer = undefined;\n\t\t\t\t\t\t\tvar parentEl = $('div[' + PARENT_EVENT_ID + '=\"' + id + '\"]:not(.event_details), td[' + PARENT_EVENT_ID + ' = \"' + id + '\"]');\n\t\t\t\t\t\t\tparentEl.focus();\n\t\t\t\t\t\t}, timeoutValue, false);\n\t\t\t\t\t}\n\n\t\t\t\t\t$(el).on('keydown', '#dhx_minical_icon', function($event) {\n\t\t\t\t\t\tif ($event.which != TAB)\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\tvar finalTarget;\n\t\t\t\t\t\tvar $this = $(this);\n\t\t\t\t\t\tif ($event.shiftKey) {\n\t\t\t\t\t\t\t$event.stopPropagation();\n\t\t\t\t\t\t\t$event.preventDefault();\n\t\t\t\t\t\t\t$rootScope.$broadcast(CAB.FOCUS_TO_CHANGE_TAB);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!finalTarget)\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t$event.preventDefault();\n\t\t\t\t\t\t$timeout(function() {\n\t\t\t\t\t\t\tfinalTarget.focus();\n\t\t\t\t\t\t}, 10, false);\n\t\t\t\t\t});\n\n\t\t\t\t\t$(el).on('click', '#' + CHANGE_FILTER_BUTTON, function($event) {\n\n\t\t\t\t\t\tif (filterPopoverTimer)\n\t\t\t\t\t\t\t$timeout.cancel(filterPopoverTimer);\n\t\t\t\t\t\t$timeout(function() {\n\t\t\t\t\t\t\tif (!$scope.changeFilterOpen)\n\t\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t\tfilterPopoverTimer = undefined;\n\t\t\t\t\t\t\t$(\"#\" + CHANGE_FILTER_POPOVER).focus();\n\t\t\t\t\t\t}, 100, false);\n\t\t\t\t\t});\n\n\t\t\t\t\tfunction getCommonCalCtrl() {\n\t\t\t\t\t\treturn angular.element('.common-cal', el).controller('snDhtmlxScheduler');\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction hasEnoughSpaceToShowEventText(start, end) {\n\t\t\t\t\t\tvar ctrl = getCommonCalCtrl();\n\t\t\t\t\t\tif (ctrl) {\n\t\t\t\t\t\t\tvar width = ctrl.getEstimatedEventWidthInPx(start, end);\n\t\t\t\t\t\t\treturn width > 70 ? HAS_SPACE : (width >= 34 ? NO_SPACE : NO_SPACE_FOR_ANYTHING);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn NO_SPACE;\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction getChangeLabel(change) {\n\t\t\t\t\t\tvar v = escapeHTML(change.short_description.display_value);\n\n\t\t\t\t\t\treturn '<span tabindex=\"0\" class=\"inline-block\"><small>' + $sanitize(change.number.display_value) +\n\t\t\t\t\t\t\t'</small><p><strong><sn-cab-line-clamp max-lines=\"2\" text=\"' + $sanitize(v) + '\">' +\n\t\t\t\t\t\t\t'</sn-cab-line-clamp></strong></p></span>';\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction getWindowLabel(windowDisplayValue) {\n\t\t\t\t\t\treturn \"<span class='cab_window_label' tabindex = '0'>\" + $sanitize(windowDisplayValue) + \"</span>\";\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction getWindowEventText(id, data, start, end, sectionId) {\n\t\t\t\t\t\tvar t = \"<div class='event_details' event_id='\" + id + \"'>\";\n\t\t\t\t\t\tif ($scope.viewMode === CalendarView.MONTH) {\n\t\t\t\t\t\t\tt += '<strong>' + $sanitize(data.title) + '</strong>';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar spc = hasEnoughSpaceToShowEventText(start, end);\n\t\t\t\t\t\t\tvar c = 'badge';\n\t\t\t\t\t\t\tif (angular.isArray(data)) {\n\t\t\t\t\t\t\t\tif (spc === NO_SPACE_FOR_ANYTHING)\n\t\t\t\t\t\t\t\t\tc += ' size_zero_event';\n\t\t\t\t\t\t\t\telse if (spc === NO_SPACE)\n\t\t\t\t\t\t\t\t\tc += ' no_text_event';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (spc === HAS_SPACE) {\n\t\t\t\t\t\t\t\tvar f = $scope.viewMode === CalendarView.DAY ? $scope.filters.dayView : $scope.filters.weekView;\n\t\t\t\t\t\t\t\tif (f.dateTime) {\n\t\t\t\t\t\t\t\t\tt += \"<span class='date_range'>\" +\n\t\t\t\t\t\t\t\t\t\tdataUtil.dateRangeToFriendlyText(start, end) +\n\t\t\t\t\t\t\t\t\t\t\"</span>\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (sectionId === BLACKOUT_SECTION)\n\t\t\t\t\t\t\t\t\tt += \"<p>\" + LBL_BLACKOUT_SCHEDULE;\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\tt += \"<p>\" + LBL_MAINTENANCE_SCHEDULE;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (angular.isArray(data)) {\n\t\t\t\t\t\t\t\tt += \" <span class='\" + c + \"' uib-popover-template='\\\"cab_multi_window_popover.html\\\"'\" +\n\t\t\t\t\t\t\t\t\t\" popover-append-to-body='true' popover-placement='right auto' popover-trigger='none' popover-is-open='isBadgePopupOpen'\" +\n\t\t\t\t\t\t\t\t\t\" popover-class='cab_change_calendar_popover' popover-animation='false'\" +\n\t\t\t\t\t\t\t\t\t\" ng-mouseenter='openBadgePopup()' ng-mouseleave='closeBadgePopup()'>\" + data.length + \"</span> \";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (spc === HAS_SPACE) {\n\t\t\t\t\t\t\t\tt += \"</p>\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tt += \"</div>\";\n\t\t\t\t\t\treturn t;\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction getChangeEventText(id, change, start, end) {\n\t\t\t\t\t\tvar t = \"<div class='event_details' event_id='\" + id + \"' id = \" + id + '_content';\n\t\t\t\t\t\tvar hasEnoughSpace = false;\n\n\t\t\t\t\t\tif ($scope.viewMode === CalendarView.MONTH) {\n\t\t\t\t\t\t\tt += '> <strong>' + $sanitize(change.number.display_value) + '</strong>';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\thasEnoughSpace = hasEnoughSpaceToShowEventText(start, end) === HAS_SPACE;\n\t\t\t\t\t\t\tif (!hasEnoughSpace)\n\t\t\t\t\t\t\t\tt += \" aria-label = '\" + $sanitize(change.number.display_value) + \"' \";\n\t\t\t\t\t\t\tt += \">\";\n\t\t\t\t\t\t\tif (hasEnoughSpace) {\n\t\t\t\t\t\t\t\tvar f = $scope.viewMode === CalendarView.DAY ? $scope.filters.dayView : $scope.filters.weekView;\n\t\t\t\t\t\t\t\tif (f.dateTime) {\n\t\t\t\t\t\t\t\t\tt += \"<span class='date_range'>\" +\n\t\t\t\t\t\t\t\t\t\tdataUtil.dateRangeToFriendlyText(start || change.start_date, end || change.end_date) +\n\t\t\t\t\t\t\t\t\t\t\"</span>\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (f.number || (f.shortDescription && change.short_description.display_value))\n\t\t\t\t\t\t\t\t\tt += \"<p>\";\n\t\t\t\t\t\t\t\tif (f.number)\n\t\t\t\t\t\t\t\t\tt += \"<strong>\" + $sanitize(change.number.display_value) + \"</strong> \";\n\t\t\t\t\t\t\t\tif (f.shortDescription && change.short_description.display_value)\n\t\t\t\t\t\t\t\t\tt += $sanitize(escapeHTML(change.short_description.display_value));\n\t\t\t\t\t\t\t\tif (f.number || (f.shortDescription && change.short_description.display_value))\n\t\t\t\t\t\t\t\t\tt += \"</p>\";\n\t\t\t\t\t\t\t\tif ($scope.viewMode === CalendarView.DAY) {\n\t\t\t\t\t\t\t\t\tif ((f.assignee && change.assigned_to.display_value) || (f.group && change.assignment_group.display_value))\n\t\t\t\t\t\t\t\t\t\tt += \"<p>\";\n\t\t\t\t\t\t\t\t\tif (f.assignee && change.assigned_to.display_value)\n\t\t\t\t\t\t\t\t\t\tt += $sanitize(change.assigned_to.display_value);\n\t\t\t\t\t\t\t\t\tif (f.group && change.assignment_group.display_value) {\n\t\t\t\t\t\t\t\t\t\tif (f.assignee && change.assigned_to.display_value)\n\t\t\t\t\t\t\t\t\t\t\tt += '&nbsp;&nbsp;&nbsp;';\n\t\t\t\t\t\t\t\t\t\tt += $sanitize(change.assignment_group.display_value);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif ((f.assignee && change.assigned_to.display_value) || (f.group && change.assignment_group.display_value))\n\t\t\t\t\t\t\t\t\t\tt += \"</p>\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tt += \"</div>\";\n\t\t\t\t\t\treturn t;\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction getNoNullStartDate(d) {\n\t\t\t\t\t\tif (d)\n\t\t\t\t\t\t\treturn d;\n\t\t\t\t\t\treturn new Date(0);\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction getNoNullEndDate(d) {\n\t\t\t\t\t\tif (d)\n\t\t\t\t\t\t\treturn d;\n\t\t\t\t\t\t// If the event spans many many years like a 1000yrs then for some reason clicking that\n\t\t\t\t\t\t// dhtmlx hangs the browser for a really long time. The time taken to respond to click is directly\n\t\t\t\t\t\t// proportional to length of event span. So, below we generate a time which hopefully\n\t\t\t\t\t\t// long enough that user won't see the end of it and not that long to cause considerable slow down.\n\t\t\t\t\t\treturn new Date(Date.now() + 100 * 365 * 24 * 60 * 60 * 1000); // Sometime way way into future, 100yrs from now\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction changeToEvent(change, sectionId) {\n\t\t\t\t\t\tvar s = change.start_date = dataUtil.wsToJsDate(change.start_date);\n\t\t\t\t\t\tvar e = change.end_date = dataUtil.wsToJsDate(change.end_date);\n\t\t\t\t\t\tvar id = change.sys_id.value;\n\t\t\t\t\t\tvar ns = getNoNullStartDate(s);\n\t\t\t\t\t\tvar ne = getNoNullEndDate(e);\n\t\t\t\t\t\te = {\n\t\t\t\t\t\t\tid: id,\n\t\t\t\t\t\t\tstart_date: ns,\n\t\t\t\t\t\t\tend_date: ne,\n\t\t\t\t\t\t\ttext: getChangeEventText(id, change, ns, ne),\n\t\t\t\t\t\t\tchange: change,\n\t\t\t\t\t\t\ttimeline_section: sectionId\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn e;\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction scheduleToEvents(schedule, sectionId) {\n\t\t\t\t\t\tvar events = [];\n\t\t\t\t\t\tvar momentDefaultTimeZone = moment.defaultZone ? moment.defaultZone.name : null;\n\t\t\t\t\t\tmoment.tz.setDefault();\n\t\t\t\t\t\tschedule.date_ranges.forEach(function(d, index) {\n\t\t\t\t\t\t\tvar id = schedule.sys_id;\n\t\t\t\t\t\t\tif (schedule.date_ranges.length > 1)\n\t\t\t\t\t\t\t\tid += \"-\" + (index + 1);\n\t\t\t\t\t\t\tvar s = d.start = moment(d.startDisplay, MOMENT_INTERNAL_DATE_TIME_FORMAT).toDate();\n\t\t\t\t\t\t\tvar e = d.end = moment(d.endDisplay, MOMENT_INTERNAL_DATE_TIME_FORMAT).toDate();\n\t\t\t\t\t\t\tvar ev = {\n\t\t\t\t\t\t\t\tid: id,\n\t\t\t\t\t\t\t\tstart_date: getNoNullStartDate(s),\n\t\t\t\t\t\t\t\tend_date: getNoNullEndDate(e),\n\t\t\t\t\t\t\t\ttext: getWindowEventText(id, schedule, s, e, sectionId),\n\t\t\t\t\t\t\t\tschedule: schedule,\n\t\t\t\t\t\t\t\tdate_range: d,\n\t\t\t\t\t\t\t\ttimeline_section: sectionId\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tevents.push(ev);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tmoment.tz.setDefault(momentDefaultTimeZone);\n\t\t\t\t\t\treturn events;\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction updateEvent(eid) {\n\t\t\t\t\t\tvar ctrl = getCommonCalCtrl();\n\t\t\t\t\t\tif (ctrl) {\n\t\t\t\t\t\t\tctrl.updateEvent(eid, !isRelatedSectionOpen);\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction updateEventText(e) {\n\t\t\t\t\t\te.text = getChangeEventText(e.id, e.change, e.start_date, e.end_date);\n\t\t\t\t\t\tupdateEvent(e.id);\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction refreshEventsText(notify) {\n\t\t\t\t\t\tvar eventUpdated = false;\n\t\t\t\t\t\tif ($scope.events) {\n\t\t\t\t\t\t\t$scope.events.forEach(function(e) {\n\t\t\t\t\t\t\t\tif (e.change) {\n\t\t\t\t\t\t\t\t\te.text = getChangeEventText(e.id, e.change, e.start_date, e.end_date);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tvar data = e.is_multievent ? e.events : e.schedule;\n\t\t\t\t\t\t\t\t\te.text = getWindowEventText(e.id, data, e.start_date, e.end_date, e.timeline_section);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (notify)\n\t\t\t\t\t\t\t\t\teventUpdated = updateEvent(e.id);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif (eventUpdated)\n\t\t\t\t\t\t\t\taddPopoversToEventsIfNeeded();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction getEventFromId(id) {\n\t\t\t\t\t\tif ($scope.events) {\n\t\t\t\t\t\t\tfor (var i = 0; i < $scope.events.length; i++)\n\t\t\t\t\t\t\t\tif ($scope.events[i].id === id) {\n\t\t\t\t\t\t\t\t\treturn $scope.events[i];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ($scope.phantomEvents) {\n\t\t\t\t\t\t\tfor (var k in $scope.phantomEvents) {\n\t\t\t\t\t\t\t\tif ($scope.phantomEvents[k].id === id) {\n\t\t\t\t\t\t\t\t\treturn $scope.phantomEvents[k];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction compileTimelineLabels() {\n\t\t\t\t\t\t$timeout(function() {\n\t\t\t\t\t\t\t$('.dhx_scell_name', el).each(function() {\n\t\t\t\t\t\t\t\tvar needsCompilation = !$(this).hasClass('ng-scope');\n\t\t\t\t\t\t\t\tif (needsCompilation) {\n\t\t\t\t\t\t\t\t\t$compile(this)($scope);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}, 100);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar isDatePickerOpen = false;\n\t\t\t\t\t$scope.$on(\"dp.show\", function() {\n\t\t\t\t\t\tisDatePickerOpen = true;\n\t\t\t\t\t\t$timeout(function() {\n\t\t\t\t\t\t\t$(\".bootstrap-datetimepicker-widget.picker-open .prev:visible\").focus();\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t\t$scope.$on(\"dp.hide\", function() {\n\t\t\t\t\t\t$timeout(function() {\n\t\t\t\t\t\t\tisDatePickerOpen = false;\n\t\t\t\t\t\t\t$(\"body > div.bootstrap-datetimepicker-widget\").find(\"button\").attr(\"aria-expanded\", \"false\");\n\t\t\t\t\t\t}, 10, false);\n\t\t\t\t\t});\n\t\t\t\t\t$(document).on('keydown.' + CHANGE_FILTER_POPOVER, '#' + CHANGE_FILTER_POPOVER, function($event) {\n\t\t\t\t\t\tfunction selectTab(el, ev) {\n\t\t\t\t\t\t\tel.click();\n\t\t\t\t\t\t\tel.focus();\n\t\t\t\t\t\t\tev.stopPropagation();\n\t\t\t\t\t\t\tev.preventDefault();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ($event.keyCode == TAB) {\n\t\t\t\t\t\t\tvar $tab = $(\"#cab_change_filter_popover .icon.active\");\n\t\t\t\t\t\t\tif ($event.target.id === \"cab_change_filter_popover\") {\n\t\t\t\t\t\t\t\tselectTab($tab, $event);\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar toggleInputs = $(\"#cab_change_filter_popover input\");\n\t\t\t\t\t\t\tif (toggleInputs.length === 0)\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\tif ((!$event.shiftKey && toggleInputs[toggleInputs.length - 1].isEqualNode($event.target)) || ($event.shiftKey && toggleInputs[0].isEqualNode($event.target))) {\n\t\t\t\t\t\t\t\tselectTab($tab[0], $event);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ($event.shiftKey && $tab[0].isEqualNode($event.target)) {\n\t\t\t\t\t\t\t\ttoggleInputs[toggleInputs.length - 1].focus();\n\t\t\t\t\t\t\t\t$event.stopPropagation();\n\t\t\t\t\t\t\t\t$event.preventDefault();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ($event.keyCode == LEFT || $event.keyCode == RIGHT) {\n\t\t\t\t\t\t\tvar targetIndex = 0;\n\t\t\t\t\t\t\tvar dataIndex = $event.target.getAttribute('data-index');\n\t\t\t\t\t\t\tif (!dataIndex)\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\tvar index = parseInt(dataIndex);\n\t\t\t\t\t\t\tvar count = $('#cab_change_filter_popover .icon').length - 1;\n\t\t\t\t\t\t\ttargetIndex = ($event.keyCode == LEFT) ? index - 1 : index + 1;\n\n\t\t\t\t\t\t\tif (targetIndex < 0)\n\t\t\t\t\t\t\t\ttargetIndex = count;\n\t\t\t\t\t\t\telse if (targetIndex > count)\n\t\t\t\t\t\t\t\ttargetIndex = 0;\n\t\t\t\t\t\t\tvar selector = '#cab_change_filter_popover div[data-index=\"' + targetIndex + '\"].icon';\n\t\t\t\t\t\t\tvar $target = $(selector);\n\t\t\t\t\t\t\tselectTab($target, $event);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\t// Attach listeners to document since the popovers are directly appended to body\n\t\t\t\t\t$(document).on('keydown.cab_change_popover', function($event) {\n\t\t\t\t\t\tif ($event.keyCode == ESC) {\n\t\t\t\t\t\t\tif ($scope.changeFilterOpen) {\n\t\t\t\t\t\t\t\t$scope.$apply(function() {\n\t\t\t\t\t\t\t\t\t$scope.changeFilterOpen = false;\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t$timeout(function() {\n\t\t\t\t\t\t\t\t\t$('#' + CHANGE_FILTER_BUTTON).focus();\n\t\t\t\t\t\t\t\t}, 100, false);\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// if datetimepicker is open, close it.\n\t\t\t\t\t\t\tif (isDatePickerOpen)\n\t\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t\tvar $el = $($event.target).closest('div[' + PARENT_EVENT_ID + ']');\n\t\t\t\t\t\t\tvar id = $el.attr(PARENT_EVENT_ID);\n\t\t\t\t\t\t\t$scope.$apply(function() {\n\t\t\t\t\t\t\t\t$scope.closeChangePopups();\n\t\t\t\t\t\t\t\tsetFocus(id, 500); // because we are recreating the scopes , 500 has given\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\t$(el).on('keydown.cab_change_popover', 'td.cab_event .dhx_month_head > a', function($event) {\n\t\t\t\t\t\tif ($event.keyCode == F7) {\n\t\t\t\t\t\t\t$($event.target)\n\t\t\t\t\t\t\t\t.parents('td.cab_event')\n\t\t\t\t\t\t\t\t.trigger($.Event('keypress', {\n\t\t\t\t\t\t\t\t\tkeyCode: ENTER\n\t\t\t\t\t\t\t\t}));\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tvar eventScopes = {};\n\t\t\t\t\tvar eventDuplicateCounts = {};\n\t\t\t\t\t// This not only adds popovers but compiles the full event dom,\n\t\t\t\t\t// so popover badges inside the event bars too are activated by this code.\n\t\t\t\t\tfunction addPopoversToEventsIfNeeded() {\n\t\t\t\t\t\tvar defer = $q.defer();\n\t\t\t\t\t\t$scope.closeChangePopups();\n\t\t\t\t\t\t$timeout(function() {\n\t\t\t\t\t\t\tvar sameEventCounts = {};\n\t\t\t\t\t\t\t$('.cab_event', el).each(function() { // Querying all event doms\n\t\t\t\t\t\t\t\tvar $this = $(this);\n\t\t\t\t\t\t\t\tvar needsCompilation = !$this.attr('uib-popover-template');\n\t\t\t\t\t\t\t\tvar eid = $('.event_details', this).attr('event_id');\n\t\t\t\t\t\t\t\tif (!sameEventCounts[eid])\n\t\t\t\t\t\t\t\t\tsameEventCounts[eid] = 1;\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\tsameEventCounts[eid]++;\n\t\t\t\t\t\t\t\tvar scopeKey = eid + ':' + sameEventCounts[eid]; // In non-timeline views there could be multiple instances of same event.\n\t\t\t\t\t\t\t\tvar scope = eventScopes[scopeKey];\n\t\t\t\t\t\t\t\tvar createNewScope = false;\n\t\t\t\t\t\t\t\tif (!scope) {\n\t\t\t\t\t\t\t\t\tcreateNewScope = true;\n\t\t\t\t\t\t\t\t} else if (needsCompilation) {\n\t\t\t\t\t\t\t\t\t// We are about to recompile so we will destroy current scope\n\t\t\t\t\t\t\t\t\t// so that old popovers having watch on this scope are destroyed.\n\t\t\t\t\t\t\t\t\tscope.$destroy();\n\t\t\t\t\t\t\t\t\tcreateNewScope = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (createNewScope) {\n\t\t\t\t\t\t\t\t\tscope = $scope.$new(true);\n\t\t\t\t\t\t\t\t\t(function() {\n\t\t\t\t\t\t\t\t\t\tvar id = uid();\n\t\t\t\t\t\t\t\t\t\tscope.getPopupId = function() {\n\t\t\t\t\t\t\t\t\t\t\treturn 'cab_calendar_popup_' + id;\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t}());\n\t\t\t\t\t\t\t\t\tscope.isBadgePopupOpen = false;\n\t\t\t\t\t\t\t\t\tscope.isPopupOpen = false;\n\t\t\t\t\t\t\t\t\teventScopes[scopeKey] = scope;\n\t\t\t\t\t\t\t\t\teventDuplicateCounts[eid] = sameEventCounts[eid];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tvar isChange;\n\t\t\t\t\t\t\t\tvar isCurrChange;\n\t\t\t\t\t\t\t\tvar isMultiEvent;\n\t\t\t\t\t\t\t\tvar isPhantomEvent;\n\t\t\t\t\t\t\t\tvar isSingleEventPhantom;\n\t\t\t\t\t\t\t\t// Syncing up scope.eventData with actual event data.\n\t\t\t\t\t\t\t\tscope.eventData = getEventFromId(eid);\n\t\t\t\t\t\t\t\tif (scope.eventData) {\n\t\t\t\t\t\t\t\t\tisChange = !!scope.eventData.change;\n\t\t\t\t\t\t\t\t\tisCurrChange = isChange && scope.eventData.timeline_section === CURR_CHANGE_SECTION;\n\t\t\t\t\t\t\t\t\tisMultiEvent = scope.eventData.is_multievent;\n\t\t\t\t\t\t\t\t\tisPhantomEvent = scope.eventData.is_phantom;\n\t\t\t\t\t\t\t\t\tisSingleEventPhantom = isPhantomEvent && scope.eventData.events.length === 1;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (isMultiEvent) {\n\t\t\t\t\t\t\t\t\tif (scope.eventData.timeline_section === BLACKOUT_SECTION)\n\t\t\t\t\t\t\t\t\t\tscope.schedulesTitle = LBL_BLACKOUT_SCHEDULES;\n\t\t\t\t\t\t\t\t\telse if (scope.eventData.timeline_section === MAINT_SECTION)\n\t\t\t\t\t\t\t\t\t\tscope.schedulesTitle = LBL_MAINTENANCE_SCHEDULES;\n\t\t\t\t\t\t\t\t\tif (createNewScope) {\n\t\t\t\t\t\t\t\t\t\tscope.openBadgePopup = function() {\n\t\t\t\t\t\t\t\t\t\t\tif (!scope.isPopupOpen)\n\t\t\t\t\t\t\t\t\t\t\t\tscope.isBadgePopupOpen = true;\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\tscope.closeBadgePopup = function() {\n\t\t\t\t\t\t\t\t\t\t\tscope.isBadgePopupOpen = false;\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\tscope.$watch('isPopupOpen', function(open) {\n\t\t\t\t\t\t\t\t\t\t\tif (open) {\n\t\t\t\t\t\t\t\t\t\t\t\tscope.closeBadgePopup();\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (isPhantomEvent) {\n\t\t\t\t\t\t\t\t\tif (scope.eventData.type === BLACKOUT_TYPE)\n\t\t\t\t\t\t\t\t\t\tscope.schedulesTitle = LBL_BLACKOUT_SCHEDULES;\n\t\t\t\t\t\t\t\t\telse if (scope.eventData.type === MAINT_TYPE)\n\t\t\t\t\t\t\t\t\t\tscope.schedulesTitle = LBL_MAINTENANCE_SCHEDULES;\n\t\t\t\t\t\t\t\t\telse if (scope.eventData.type === BOTH_TYPE)\n\t\t\t\t\t\t\t\t\t\tscope.schedulesTitle = LBL_BOTH_SCHEDULES;\n\t\t\t\t\t\t\t\t\tif (isSingleEventPhantom) {\n\t\t\t\t\t\t\t\t\t\tscope.eventData = scope.eventData.events[0];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (createNewScope) {\n\t\t\t\t\t\t\t\t\tif (isChange) {\n\t\t\t\t\t\t\t\t\t\tscope.canShowAssignedTo = function() {\n\t\t\t\t\t\t\t\t\t\t\tif ($scope.viewMode === CalendarView.DAY)\n\t\t\t\t\t\t\t\t\t\t\t\treturn $scope.filters.dayView.assignee;\n\t\t\t\t\t\t\t\t\t\t\telse if ($scope.viewMode === CalendarView.WEEK)\n\t\t\t\t\t\t\t\t\t\t\t\treturn $scope.filters.weekView.assignee;\n\t\t\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\tscope.canShowGroup = function() {\n\t\t\t\t\t\t\t\t\t\t\tif ($scope.viewMode === CalendarView.DAY)\n\t\t\t\t\t\t\t\t\t\t\t\treturn $scope.filters.dayView.group;\n\t\t\t\t\t\t\t\t\t\t\telse if ($scope.viewMode === CalendarView.WEEK)\n\t\t\t\t\t\t\t\t\t\t\t\treturn $scope.filters.weekView.group;\n\t\t\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\tscope.canShowShortDescription = function() {\n\t\t\t\t\t\t\t\t\t\t\tif ($scope.viewMode === CalendarView.DAY)\n\t\t\t\t\t\t\t\t\t\t\t\treturn $scope.filters.dayView.shortDescription;\n\t\t\t\t\t\t\t\t\t\t\telse if ($scope.viewMode === CalendarView.WEEK)\n\t\t\t\t\t\t\t\t\t\t\t\treturn $scope.filters.weekView.shortDescription;\n\t\t\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\tscope.canShowDateTime = function() {\n\t\t\t\t\t\t\t\t\t\t\tif ($scope.viewMode === CalendarView.DAY)\n\t\t\t\t\t\t\t\t\t\t\t\treturn $scope.filters.dayView.dateTime;\n\t\t\t\t\t\t\t\t\t\t\telse if ($scope.viewMode === CalendarView.WEEK)\n\t\t\t\t\t\t\t\t\t\t\t\treturn $scope.filters.weekView.dateTime;\n\t\t\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tscope.openScheduleForm = function(sysId) {\n\t\t\t\t\t\t\t\t\t\t\tscope.isPopupOpen = false;\n\t\t\t\t\t\t\t\t\t\t\tvar eventId = sysId;\n\t\t\t\t\t\t\t\t\t\t\tgo.toFormModal('cmn_schedule', sysId, {\n\t\t\t\t\t\t\t\t\t\t\t\ttitle: i18n.getMessage('Schedule Form'),\n\t\t\t\t\t\t\t\t\t\t\t\tendOfDialog: i18n.getMessage('End of dialog')\n\t\t\t\t\t\t\t\t\t\t\t}).closed.then(function(result) {\n\t\t\t\t\t\t\t\t\t\t\t\tangular.element(\"[event_id=\" + eventId + \"]\").focus();\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tscope.tabindex = (g_accessibility === \"true\") ? \"0\" : \"-1\";\n\t\t\t\t\t\t\t\t\tscope.enableField = function(fieldName) {\n\t\t\t\t\t\t\t\t\t\treturn scope.canRead(fieldName) && scope.canWrite(fieldName);\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\tscope.canRead = function(fieldName) {\n\t\t\t\t\t\t\t\t\t\t// If the field exists in $scope.change object, we can read it\n\t\t\t\t\t\t\t\t\t\treturn typeof $scope.fieldPermission === \"undefined\" ? $scope.change[fieldName] : $scope.fieldPermission[fieldName].canRead;\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\tscope.canWrite = function(fieldName) {\n\t\t\t\t\t\t\t\t\t\treturn typeof $scope.fieldPermission === \"undefined\" ? $scope.change[fieldName] && $scope.change[fieldName]._canWrite : $scope.fieldPermission[fieldName].canWrite;\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\tscope.canSave = function() {\n\t\t\t\t\t\t\t\t\t\tvar mS = moment.tz(scope.dates.start, scope.dateTimeFormat, g_tz);\n\t\t\t\t\t\t\t\t\t\tvar mE = moment.tz(scope.dates.end, scope.dateTimeFormat, g_tz);\n\t\t\t\t\t\t\t\t\t\treturn mS.isSameOrBefore(mE);\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\tscope.onUpdateClick = function() {\n\t\t\t\t\t\t\t\t\t\tfocusIDAfterUpdate = scope.parentEventId;\n\t\t\t\t\t\t\t\t\t\tscope.update();\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\tscope.onCloseClick = function() {\n\t\t\t\t\t\t\t\t\t\tscope.close();\n\t\t\t\t\t\t\t\t\t\tsetFocus(scope.parentEventId, 100);\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\tscope.close = function() {\n\t\t\t\t\t\t\t\t\t\tscope.isPopupOpen = false;\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\tchangePopupClosers[scopeKey] = scope.close;\n\n\t\t\t\t\t\t\t\t\t// Adding methods for accessibility\n\t\t\t\t\t\t\t\t\tscope.onEventClick = function($event) {\n\t\t\t\t\t\t\t\t\t\t$timeout(function() {\n\t\t\t\t\t\t\t\t\t\t\tscope.openPopup($event);\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\tscope.openPopup = function($event) {\n\t\t\t\t\t\t\t\t\t\tif ($event.keyCode === ENTER || $event.keyCode === SPACE || $event.type === \"click\") {\n\t\t\t\t\t\t\t\t\t\t\t$scope.closeChangePopups();\n\t\t\t\t\t\t\t\t\t\t\t$event.preventDefault();\n\t\t\t\t\t\t\t\t\t\t\t$event.stopPropagation();\n\t\t\t\t\t\t\t\t\t\t\t$scope.changeFilterOpen = false;\n\t\t\t\t\t\t\t\t\t\t\t$timeout(function() {\n\t\t\t\t\t\t\t\t\t\t\t\tscope.isPopupOpen = true;\n\t\t\t\t\t\t\t\t\t\t\t\tangular.element('#' + scope.getPopupId()).focus();\n\t\t\t\t\t\t\t\t\t\t\t}, 100);\n\t\t\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\tscope.$watch('isPopupOpen', function(newValue, oldValue) {\n\t\t\t\t\t\t\t\t\t\tif ($scope.keyNav === 'false')\n\t\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t\tif (!scope.isPopupOpen) {\n\t\t\t\t\t\t\t\t\t\t\t$scope.config.keyNav = true;\n\t\t\t\t\t\t\t\t\t\t\t$(\".sp-scroll\").off(\"scroll\");\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t$timeout(function() {\n\t\t\t\t\t\t\t\t\t\t\t\t// By this time isPopupOpen is false watch would have been fired for other previously opened popups.\n\t\t\t\t\t\t\t\t\t\t\t\t$scope.config.keyNav = false; // Disable left-right arrow keys to change dates when popup is open\n\t\t\t\t\t\t\t\t\t\t\t}, 10);\n\t\t\t\t\t\t\t\t\t\t\t// Listen to the scroll event to force adjusting popover\n\t\t\t\t\t\t\t\t\t\t\t$(\".sp-scroll\").on(\"scroll\", function() {\n\t\t\t\t\t\t\t\t\t\t\t\tscope.$digest();\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tvar isEditableChange = isCurrChange && $scope.isUpdatable === 'true';\n\t\t\t\t\t\t\t\tif (isEditableChange && createNewScope) {\n\t\t\t\t\t\t\t\t\t// Added methods to editable change popup's scope\n\t\t\t\t\t\t\t\t\tscope.update = function() {\n\t\t\t\t\t\t\t\t\t\tvar systemDateTimeFormat = \"YYYY-MM-DD HH:mm:ss\";\n\t\t\t\t\t\t\t\t\t\tscope.updating = true;\n\t\t\t\t\t\t\t\t\t\t// scope.dates.start and scope.dates.end should be momentJS object in the user's timezone, we need them in UTC\n\t\t\t\t\t\t\t\t\t\tvcabDataSource.change.update({\n\t\t\t\t\t\t\t\t\t\t\tsys_id: scope.eventData.change.sys_id.value,\n\t\t\t\t\t\t\t\t\t\t\tstart_date: dataUtil.jsToM(scope.dates.start, TIMEZONE).utc().format(systemDateTimeFormat),\n\t\t\t\t\t\t\t\t\t\t\tend_date: dataUtil.jsToM(scope.dates.end, TIMEZONE).utc().format(systemDateTimeFormat)\n\t\t\t\t\t\t\t\t\t\t}).then(function(result) {\n\t\t\t\t\t\t\t\t\t\t\tscope.updating = false;\n\t\t\t\t\t\t\t\t\t\t\tscope.close();\n\t\t\t\t\t\t\t\t\t\t\tif (isCurrChange) {\n\t\t\t\t\t\t\t\t\t\t\t\tcalendarNotificationService.show(i18n.getMessage(\"Record updated successfully\"), \"success\");\n\t\t\t\t\t\t\t\t\t\t\t\t$scope.change = result.data;\n\t\t\t\t\t\t\t\t\t\t\t\tscope.changeWillUpdate = true;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t// TODO If other changes need updating, we need to use updateEvent along with calls to refreshEventsText() and addPopoversToEventsIfNeeded().\n\t\t\t\t\t\t\t\t\t\t}, function() {\n\t\t\t\t\t\t\t\t\t\t\tcalendarNotificationService.show(i18n.getMessage(\"Invalid update\"), \"error\");\n\t\t\t\t\t\t\t\t\t\t\tscope.updating = false;\n\t\t\t\t\t\t\t\t\t\t\tscope.close();\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\tscope.$watch('isPopupOpen', function(open) {\n\t\t\t\t\t\t\t\t\t\tif (open) {\n\t\t\t\t\t\t\t\t\t\t\t$scope.closeChangePopups(scopeKey); // Close other editable popups, if any.\n\n\t\t\t\t\t\t\t\t\t\t\tif (scope.unsavedDates) {\n\t\t\t\t\t\t\t\t\t\t\t\t// At this point, scope.unsavedDates.start and scope.unsavedDates.end should be momentJs objects in the user's timezone\n\t\t\t\t\t\t\t\t\t\t\t\tscope.dates = scope.unsavedDates;\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t// We are reading dates from change and not the event since event could have pseudo dates if change is unbounded.\n\t\t\t\t\t\t\t\t\t\t\t\t// Also another reason is dummy events. See comments in config.templates.event_class for details.\n\t\t\t\t\t\t\t\t\t\t\t\tscope.dates = {\n\t\t\t\t\t\t\t\t\t\t\t\t\tstart: dataUtil.jsToM(scope.eventData.change.start_date, TIMEZONE),\n\t\t\t\t\t\t\t\t\t\t\t\t\tend: dataUtil.jsToM(scope.eventData.change.end_date, TIMEZONE)\n\t\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tif (scope.unsavedDates) {\n\t\t\t\t\t\t\t\t\t\t\t\t// Unsaved dates were provided then that means event data already has the updated date.\n\t\t\t\t\t\t\t\t\t\t\t\t// We will now check if change data was saved into backend, if not then we need to restore event dates.\n\t\t\t\t\t\t\t\t\t\t\t\tscope.unsavedDates = undefined;\n\t\t\t\t\t\t\t\t\t\t\t\tif (!scope.changeWillUpdate) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tangular.extend(scope.eventData, changeToEvent(scope.eventData.change, scope.eventData.timeline_section));\n\t\t\t\t\t\t\t\t\t\t\t\t\tupdateEvent(scope.eventData.id);\n\t\t\t\t\t\t\t\t\t\t\t\t\taddPopoversToEventsIfNeeded();\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (needsCompilation) {\n\t\t\t\t\t\t\t\t\tif (scope.eventData) {\n\t\t\t\t\t\t\t\t\t\tif (isChange) {\n\t\t\t\t\t\t\t\t\t\t\tif (isEditableChange)\n\t\t\t\t\t\t\t\t\t\t\t\t$this.attr('uib-popover-template', '\"cab_editable_change_event_popover.html\"');\n\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t\t$this.attr('uib-popover-template', '\"cab_readonly_change_event_popover.html\"');\n\t\t\t\t\t\t\t\t\t\t} else if (isMultiEvent || (isPhantomEvent && !isSingleEventPhantom))\n\t\t\t\t\t\t\t\t\t\t\t$this.attr('uib-popover-template', '\"cab_multi_window_event_popover.html\"');\n\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t$this.attr('uib-popover-template', '\"cab_window_event_popover.html\"');\n\n\t\t\t\t\t\t\t\t\t\tif ($scope.viewMode !== CalendarView.DAY) {\n\t\t\t\t\t\t\t\t\t\t\tvar startDate;\n\t\t\t\t\t\t\t\t\t\t\tif (scope.eventData.events)\n\t\t\t\t\t\t\t\t\t\t\t\tstartDate = scope.eventData.events[0].end_date;\n\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t\tstartDate = scope.eventData.start_date;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t$this.attr('popover-class', 'cab_change_calendar_popover');\n\t\t\t\t\t\t\t\t\t\t$this.attr('popover-placement', 'auto bottom');\n\t\t\t\t\t\t\t\t\t\t$this.attr('popover-append-to-body', 'true');\n\t\t\t\t\t\t\t\t\t\t$this.attr('popover-is-open', 'isPopupOpen');\n\t\t\t\t\t\t\t\t\t\t$this.attr('popover-trigger', \"click outsideClick\");\n\t\t\t\t\t\t\t\t\t\t$this.attr('popover-animation', 'false');\n\t\t\t\t\t\t\t\t\t\t$this.attr('ng-keydown', 'openPopup($event)');\n\t\t\t\t\t\t\t\t\t\t$this.attr('ng-click', 'onEventClick($event)');\n\t\t\t\t\t\t\t\t\t\t$this.attr('tabindex', '-1');\n\t\t\t\t\t\t\t\t\t\tif (isChange)\n\t\t\t\t\t\t\t\t\t\t\t$this.attr('aria-labelledby', scope.eventData.id + \"_content\");\n\t\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\t\tif ($scope.viewMode == CalendarView.DAY) {\n\t\t\t\t\t\t\t\t\t\t\t\tif (scope.eventData.timeline_section == BLACKOUT_SECTION)\n\t\t\t\t\t\t\t\t\t\t\t\t\t$this.attr(\"aria-label\", LBL_BLACKOUT_SCHEDULE);\n\t\t\t\t\t\t\t\t\t\t\t\telse if (scope.eventData.timeline_section == MAINT_SECTION)\n\t\t\t\t\t\t\t\t\t\t\t\t\t$this.attr(\"aria-label\", LBL_MAINTENANCE_SCHEDULE);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tscope.parentEventId = scopeKey;\n\t\t\t\t\t\t\t\t\t\tscope.dateTimeFormat = $scope.dateTimeFormat;\n\t\t\t\t\t\t\t\t\t\t$this.attr(PARENT_EVENT_ID, scopeKey);\n\t\t\t\t\t\t\t\t\t\t// We do this from here instead of CSS so that if enhancement fails users do not see the hand icon.\n\t\t\t\t\t\t\t\t\t\t$this.css('cursor', 'pointer');\n\t\t\t\t\t\t\t\t\t\t$compile(this)(scope);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tgarbageCollectOldEventScopes();\n\t\t\t\t\t\t\tdefer.resolve();\n\t\t\t\t\t\t}, 100);\n\t\t\t\t\t\treturn defer.promise;\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction garbageCollectOldEventScopes() {\n\t\t\t\t\t\tfor (var scopeKey in eventScopes) {\n\t\t\t\t\t\t\tvar s = eventScopes[scopeKey];\n\t\t\t\t\t\t\tvar id = scopeKey.split(':')[0];\n\t\t\t\t\t\t\tvar count = parseInt(scopeKey.split(':')[1]);\n\t\t\t\t\t\t\tvar maxCount = eventDuplicateCounts[id] || 0;\n\t\t\t\t\t\t\tvar e = getEventFromId(id);\n\t\t\t\t\t\t\tvar destroy = false;\n\t\t\t\t\t\t\tif (s && !e) {\n\t\t\t\t\t\t\t\tdestroy = true;\n\t\t\t\t\t\t\t\teventDuplicateCounts[id] = 0;\n\t\t\t\t\t\t\t} else if (s && e && count > maxCount) {\n\t\t\t\t\t\t\t\t// Garbage collecting duplicate scopes of current event\n\t\t\t\t\t\t\t\t// but when there is no longer need for these many duplicates.\n\t\t\t\t\t\t\t\tdestroy = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (destroy) {\n\t\t\t\t\t\t\t\ts.$destroy();\n\t\t\t\t\t\t\t\teventScopes[scopeKey] = undefined;\n\t\t\t\t\t\t\t\tif (changePopupClosers[scopeKey])\n\t\t\t\t\t\t\t\t\tchangePopupClosers[scopeKey] = undefined;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction getFirstScope(ev) {\n\t\t\t\t\t\treturn eventScopes[ev.id + ':1'];\n\t\t\t\t\t}\n\t\t\t\t\tvar isRelatedSectionOpen = true;\n\n\t\t\t\t\tfunction setVerticalUnits(currChangeLabel, showBlackoutSection, showMaintSection, showRelatedSection) {\n\t\t\t\t\t\tvar sections = [];\n\t\t\t\t\t\tif (showBlackoutSection)\n\t\t\t\t\t\t\tsections.push({\n\t\t\t\t\t\t\t\tkey: BLACKOUT_SECTION,\n\t\t\t\t\t\t\t\tlabel: getWindowLabel(LBL_BLACKOUT_SCHEDULE)\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\tif (showMaintSection)\n\t\t\t\t\t\t\tsections.push({\n\t\t\t\t\t\t\t\tkey: MAINT_SECTION,\n\t\t\t\t\t\t\t\tlabel: getWindowLabel(LBL_MAINTENANCE_SCHEDULE)\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\tsections.push({\n\t\t\t\t\t\t\tkey: CURR_CHANGE_SECTION,\n\t\t\t\t\t\t\tlabel: currChangeLabel\n\t\t\t\t\t\t}); // Current Change\n\t\t\t\t\t\tif (showRelatedSection)\n\t\t\t\t\t\t\tsections.push({\n\t\t\t\t\t\t\t\tkey: RELATED_CHANGE_SECTION,\n\t\t\t\t\t\t\t\tlabel: i18n.getMessage('Related Changes'),\n\t\t\t\t\t\t\t\topen: isRelatedSectionOpen,\n\t\t\t\t\t\t\t\tchildren: $scope.relatedChangeLabels\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t$scope.config.timeline.verticalUnits = sections;\n\t\t\t\t\t\tcompileTimelineLabels();\n\t\t\t\t\t}\n\n\t\t\t\t\t$scope.events = [];\n\t\t\t\t\t$scope.phantomEvents = {}; // Stores date to phantom event map. Phantom events are not actually sent to dhtmlx as events.\n\t\t\t\t\t$scope.relatedChangeLabels = [];\n\t\t\t\t\t$scope.ready = false; // When this directive is rendered, it might be within ng-hide. Initing scheduler code then will render it collapsed.\n\t\t\t\t\t$scope.verticalUnits = null;\n\t\t\t\t\tif (!$scope.configDescription)\n\t\t\t\t\t\t$scope.configDescription = i18n.getMessage('Set filters to choose how related Changes are discovered.');\n\n\t\t\t\t\t$scope.config = {\n\t\t\t\t\t\tdate: dataUtil.currentDateAsPerUserProfile(),\n\t\t\t\t\t\tallowCreate: false,\n\t\t\t\t\t\tallowResize: $scope.isUpdatable === 'true',\n\t\t\t\t\t\tallowMoving: $scope.isUpdatable === 'true',\n\t\t\t\t\t\tweekStartDay: calendarUtils.getNormalizedWeekStartDay(dataUtil.getFirstDayOfWeek()),\n\t\t\t\t\t\tviewTimeFormat: $scope.timeformat,\n\t\t\t\t\t\tnativeEventNavigation: false,\n\t\t\t\t\t\ttimeline: {\n\t\t\t\t\t\t\tdisplayButtonInUI: false,\n\t\t\t\t\t\t\tenabled: true, // It is needed here since $scope.onViewChange is not invoked until there is a change in view.\n\t\t\t\t\t\t\tsupport: true,\n\t\t\t\t\t\t\tproperty: {\n\t\t\t\t\t\t\t\tvalue: 'timeline_section'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\trenderType: TimelineView.TREE,\n\t\t\t\t\t\t\tsection_autoheight: false,\n\t\t\t\t\t\t\tdy: 68, // This value is used in CSS too.\n\t\t\t\t\t\t\tdx: 215,\n\t\t\t\t\t\t\tevent_dy: 'full',\n\t\t\t\t\t\t\tfolder_dy: 23\n\t\t\t\t\t\t},\n\t\t\t\t\t\txy: {\n\t\t\t\t\t\t\tscale_height: 36,\n\t\t\t\t\t\t\tday_scale_height: 30\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttemplates: {\n\t\t\t\t\t\t\tweek_scale_date: function(date, mode, schedulerInstance, jumptoAttr) {\n\t\t\t\t\t\t\t\t// For some reason I am getting real mode as 2nd arg, whereas the documentation does not say that.\n\t\t\t\t\t\t\t\treturn \"<a href='#' \" + jumptoAttr + \">\" + schedulerInstance.date.date_to_str(\"%j %D\")(date) + \"</a>\";\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tevent_class: function(start, end, ev) {\n\t\t\t\t\t\t\t\tvar c;\n\t\t\t\t\t\t\t\tif (ev.timeline_section === BLACKOUT_SECTION)\n\t\t\t\t\t\t\t\t\tc = \"cab_blackout_event cab_window_event\";\n\t\t\t\t\t\t\t\telse if (ev.timeline_section === MAINT_SECTION)\n\t\t\t\t\t\t\t\t\tc = \"cab_maint_event cab_window_event\";\n\t\t\t\t\t\t\t\telse if (ev.timeline_section === CURR_CHANGE_SECTION)\n\t\t\t\t\t\t\t\t\tc = \"cab_current_change_event cab_change_event\";\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\tc = \"cab_related_change_event cab_change_event\";\n\t\t\t\t\t\t\t\tc += \" cab_event\";\n\t\t\t\t\t\t\t\tif (viewStartDate && ev.start_date.getTime() < viewStartDate.getTime()) {\n\t\t\t\t\t\t\t\t\tc += \" cab_event_extends_left\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (viewEndDate && ev.end_date.getTime() > viewEndDate.getTime()) {\n\t\t\t\t\t\t\t\t\tc += \" cab_event_extends_right\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (ev.is_multievent)\n\t\t\t\t\t\t\t\t\tc += \" cab_multievent\";\n\t\t\t\t\t\t\t\tif (ev.change) {\n\t\t\t\t\t\t\t\t\tif (!ev.hasOwnProperty('change')) {\n\t\t\t\t\t\t\t\t\t\t// Means this is a dummy copy. This is done in basic views where same event spans multiple rows.\n\t\t\t\t\t\t\t\t\t\t// The dummy copy's prototype is set to actual event object. However, it overrides start_date & end_date.\n\t\t\t\t\t\t\t\t\t\t// The end_date is the actual end date but start date is always the change data's start date.\n\t\t\t\t\t\t\t\t\t\t// The last span has reference to original event object.\n\t\t\t\t\t\t\t\t\t\tc += \" cab_event_extends_right\";\n\t\t\t\t\t\t\t\t\t\tif (!ev._first_chunk)\n\t\t\t\t\t\t\t\t\t\t\tc += \" cab_event_extends_left\";\n\t\t\t\t\t\t\t\t\t\tObject.getPrototypeOf(ev)._hasDummyCopy = true;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t// Relies on that fact that if there are dummy events then they are rendered before,\n\t\t\t\t\t\t\t\t\t\t// and the actual event is last span.\n\t\t\t\t\t\t\t\t\t\tif (ev._hasDummyCopy)\n\t\t\t\t\t\t\t\t\t\t\tc += \" cab_event_extends_left\";\n\t\t\t\t\t\t\t\t\t\tev._hasDummyCopy = false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn c;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmonth_date_class: function(date) {\n\t\t\t\t\t\t\t\t// This might get called before fetchWindow finishes. In that case this will be\n\t\t\t\t\t\t\t\t// working on incorrect phantom data. However, when fetchWindow finishes that triggers\n\t\t\t\t\t\t\t\t// buildEventArr() which further recreates the events array causing its watch to fire\n\t\t\t\t\t\t\t\t// in common calendar; which then renders the scheduler, case this method to be invoked\n\t\t\t\t\t\t\t\t// again.\n\t\t\t\t\t\t\t\tvar key = getPhantomKey(date);\n\t\t\t\t\t\t\t\tvar ev = $scope.phantomEvents[key];\n\t\t\t\t\t\t\t\tif (ev) {\n\t\t\t\t\t\t\t\t\tvar c;\n\t\t\t\t\t\t\t\t\tif (ev.type === BLACKOUT_TYPE)\n\t\t\t\t\t\t\t\t\t\tc = \"cab_blackout_event cab_window_event\";\n\t\t\t\t\t\t\t\t\telse if (ev.type === MAINT_TYPE)\n\t\t\t\t\t\t\t\t\t\tc = \"cab_maint_event cab_window_event\";\n\t\t\t\t\t\t\t\t\telse if (ev.type === BOTH_TYPE)\n\t\t\t\t\t\t\t\t\t\tc = \"cab_blackout_event cab_maint_event cab_window_event\";\n\t\t\t\t\t\t\t\t\tc += \" cab_event\";\n\t\t\t\t\t\t\t\t\treturn c;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn '';\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmonth_day: function(date, schedulerInstance, jumptoAttr, tabindex, ariaDayName) {\n\t\t\t\t\t\t\t\tvar dateToStr_func = schedulerInstance.date.date_to_str(schedulerInstance.config.month_day);\n\t\t\t\t\t\t\t\tvar d = dateToStr_func(date);\n\t\t\t\t\t\t\t\tvar key = getPhantomKey(date);\n\t\t\t\t\t\t\t\tvar ev = $scope.phantomEvents[key];\n\t\t\t\t\t\t\t\tvar html = \"<a  tabindex='-1' \";\n\t\t\t\t\t\t\t\tvar ariaAttr = \" role='link' aria-label='\" + ariaDayName + \". \";\n\t\t\t\t\t\t\t\tif (ev) {\n\t\t\t\t\t\t\t\t\tif (ev.type === BLACKOUT_TYPE)\n\t\t\t\t\t\t\t\t\t\tariaAttr = ariaAttr + i18n.getMessage('This day has blackout window scheduled. Press F7 for popup with more details.');\n\t\t\t\t\t\t\t\t\telse if (ev.type === MAINT_TYPE)\n\t\t\t\t\t\t\t\t\t\tariaAttr = ariaAttr + i18n.getMessage('This day has maintenance window scheduled. Press F7 for popup with more details.');\n\t\t\t\t\t\t\t\t\telse if (ev.type === BOTH_TYPE)\n\t\t\t\t\t\t\t\t\t\tariaAttr = ariaAttr + i18n.getMessage('This day has both blackout and maintenance windows scheduled. Press F7 for popup with more details.');\n\t\t\t\t\t\t\t\t} else\n\t\t\t\t\t\t\t\t\tariaAttr = ariaAttr + i18n.getMessage('This day has no blackout or maintenance windows scheduled.');\n\t\t\t\t\t\t\t\tariaAttr = ariaAttr + \"' \";\n\t\t\t\t\t\t\t\tif (ev)\n\t\t\t\t\t\t\t\t\treturn html + \"class='event_details month_date' event_id='\" + ev.id + \"' \" +\n\t\t\t\t\t\t\t\t\t\tjumptoAttr + ariaAttr + \" href='#'>\" + d + \"</a>\";\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\treturn html + \"class='month_date' \" + jumptoAttr + ariaAttr + \" href='#'>\" + d + \"</a>\";\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tevent_bar_date: function(start, end, ev) {\n\t\t\t\t\t\t\t\treturn ''; // Used to remove dates from single day month views.\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttooltip_text: function(start, end, ev) {\n\t\t\t\t\t\t\t\tvar t = dataUtil.dateRangeToFriendlyText(start, end);\n\t\t\t\t\t\t\t\tif (ev.schedule) {\n\t\t\t\t\t\t\t\t\tif (ev.timeline_section === BLACKOUT_SECTION)\n\t\t\t\t\t\t\t\t\t\tt += \"<p>\" + LBL_BLACKOUT_SCHEDULE + \"</p>\";\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\tt += \"<p>\" + LBL_MAINTENANCE_SCHEDULE + \"</p>\";\n\t\t\t\t\t\t\t\t} else if (ev.is_multievent) {\n\t\t\t\t\t\t\t\t\tif (ev.timeline_section === BLACKOUT_SECTION)\n\t\t\t\t\t\t\t\t\t\tt += \"<p>\" + LBL_MULTIPLE_BLACKOUT_SCHEDULES + \"</p>\";\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\tt += \"<p>\" + LBL_MULTIPLE_MAINTENANCE_SCHEDULES + \"</p>\";\n\t\t\t\t\t\t\t\t} else if (ev.change)\n\t\t\t\t\t\t\t\t\tt += \"<p>\" + $sanitize(ev.change.short_description.display_value) + \"</p>\";\n\t\t\t\t\t\t\t\treturn t;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmode: CalendarView.DAY,\n\t\t\t\t\t\treadOnly: false\n\t\t\t\t\t};\n\n\t\t\t\t\tfunction isReady() {\n\t\t\t\t\t\tif (el.height() === 0) { // Means it is not yet visible\n\t\t\t\t\t\t\t$timeout(isReady, 300);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$scope.ready = true;\n\t\t\t\t\t}\n\t\t\t\t\tisReady();\n\n\t\t\t\t\tvar loadingCallsCounter = 0;\n\t\t\t\t\t$scope.enableLoading = function() {\n\t\t\t\t\t\t$scope.isLoading = true;\n\t\t\t\t\t\tloadingCallsCounter++;\n\t\t\t\t\t};\n\t\t\t\t\t$scope.disableLoading = function() {\n\t\t\t\t\t\tif (loadingCallsCounter === 0)\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\tloadingCallsCounter--;\n\t\t\t\t\t\tif (loadingCallsCounter === 0)\n\t\t\t\t\t\t\t$scope.isLoading = false;\n\t\t\t\t\t};\n\n\t\t\t\t\tsetVerticalUnits(i18n.getMessage('No change selected'));\n\n\t\t\t\t\t$scope.viewMode = $scope.config.mode;\n\t\t\t\t\t$scope.onViewChange = function(newView) {\n\t\t\t\t\t\tvar oldView = $scope.viewMode;\n\t\t\t\t\t\t$scope.viewMode = newView;\n\t\t\t\t\t\t$scope.closeChangePopups();\n\t\t\t\t\t\tif (newView === CalendarView.DAY || newView === CalendarView.WEEK) {\n\t\t\t\t\t\t\t$scope.config.timeline.enabled = true;\n\t\t\t\t\t\t\tif (oldView === CalendarView.MONTH)\n\t\t\t\t\t\t\t\tbuildEventArr();\n\t\t\t\t\t\t\tfetchRelatedChanges();\n\t\t\t\t\t\t} else if (newView === CalendarView.MONTH) {\n\t\t\t\t\t\t\t$scope.config.timeline.enabled = false;\n\t\t\t\t\t\t\tbuildEventArr(); // Need to do so that phantom events can be built\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$timeout(function() {\n\t\t\t\t\t\t\t$('.dhx_cal_data .cab_window_event').attr(\"tabindex\", \"-1\");\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\t\t\t\t\t$scope.onSchedulerResize = function($scheduler) {\n\t\t\t\t\t\t$scope.onViewChange($scope.viewMode);\n\t\t\t\t\t};\n\t\t\t\t\t$scope.onAfterViewChange = function() {\n\t\t\t\t\t\tif ($scope.viewMode === CalendarView.DAY || $scope.viewMode === CalendarView.WEEK)\n\t\t\t\t\t\t\tcompileTimelineLabels();\n\t\t\t\t\t\trefreshEventsText(true);\n\t\t\t\t\t\taddPopoversToEventsIfNeeded();\n\t\t\t\t\t};\n\t\t\t\t\tvar viewStartDate;\n\t\t\t\t\tvar viewEndDate;\n\t\t\t\t\t$scope.onDateRangeChange = function(start, end) {\n\t\t\t\t\t\tviewStartDate = start;\n\t\t\t\t\t\tviewEndDate = end;\n\t\t\t\t\t\t$scope.closeChangePopups();\n\t\t\t\t\t\tif ($scope.viewMode !== CalendarView.MONTH)\n\t\t\t\t\t\t\tbuildEventArrIfNotAlreadyBuilt();\n\t\t\t\t\t\tbuildMarkedSpans();\n\t\t\t\t\t\taddPopoversToEventsIfNeeded();\n\t\t\t\t\t};\n\t\t\t\t\t$scope.onFolderToggle = function(isOpen) {\n\t\t\t\t\t\t// Toggling folder collapse re-renders the section labels and events,\n\t\t\t\t\t\t// hence we need to re-sprinkle magic dust.\n\t\t\t\t\t\tcompileTimelineLabels();\n\t\t\t\t\t\taddPopoversToEventsIfNeeded();\n\t\t\t\t\t\tisRelatedSectionOpen = isOpen;\n\t\t\t\t\t};\n\t\t\t\t\t$scope.onBeforeTooltip = function(ev) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t};\n\t\t\t\t\t$scope.onBeforeDrag = function(ev) {\n\t\t\t\t\t\tif (ev.change) {\n\t\t\t\t\t\t\t$scope.closeChangePopups(); // Close all the existing pop-ups when dragging is started\n\t\t\t\t\t\t\treturn $scope.viewMode === CalendarView.DAY && ev.timeline_section === CURR_CHANGE_SECTION;\n\t\t\t\t\t\t} else\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t};\n\t\t\t\t\tvar isLastDragCancelled;\n\t\t\t\t\t$scope.onBeforeEventChanged = function(ev, originalEv) {\n\t\t\t\t\t\tvar scope = getFirstScope(ev);\n\t\t\t\t\t\tif (!scope || !scope.canWrite(\"start_date\") || !scope.canWrite(\"end_date\"))\n\t\t\t\t\t\t\treturn false;\n\n\t\t\t\t\t\tisLastDragCancelled = true;\n\t\t\t\t\t\tif (ev.timeline_section !== originalEv.timeline_section) // Disallow section change. Currently there does not seem to be a better way.\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\tvar ctrl = getCommonCalCtrl();\n\t\t\t\t\t\tif (ctrl) {\n\t\t\t\t\t\t\tvar extraGapInMs = 10 / ctrl.getEstimatedPxPerMs(); // 10px gap in ms\n\t\t\t\t\t\t\tif (ev.end_date.getTime() < (viewStartDate.getTime() + extraGapInMs)) // If span is out of view then popup can't be displayed\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\tif (ev.start_date.getTime() > (viewEndDate.getTime() - extraGapInMs))\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tisLastDragCancelled = false;\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t};\n\t\t\t\t\t$scope.onDragEnd = function(ev) {\n\t\t\t\t\t\t$scope.changeFilterOpen = false;\n\t\t\t\t\t\tvar scope = getFirstScope(ev);\n\t\t\t\t\t\tif (scope.isPopupOpen)\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\tupdateEventText(ev);\n\n\t\t\t\t\t\tvar showPopup = !isLastDragCancelled;\n\t\t\t\t\t\tcompileTimelineLabels();\n\t\t\t\t\t\taddPopoversToEventsIfNeeded().then(function() {\n\t\t\t\t\t\t\tif (showPopup) {\n\t\t\t\t\t\t\t\tscope = getFirstScope(ev);\n\t\t\t\t\t\t\t\tif (scope) {\n\t\t\t\t\t\t\t\t\t// We use date from event and not Change since on drag only event's dates change, and Change data needs to be synced with it.\n\t\t\t\t\t\t\t\t\t// Unless the user has no rights to update the values, so resetting them to original ones.\n\t\t\t\t\t\t\t\t\tvar mStartDate = scope.canWrite(\"start_date\") ? dataUtil.jsToM(ev.start_date, TIMEZONE) : getMomentFromDisplayValue($scope.change.start_date);\n\t\t\t\t\t\t\t\t\tvar mEndDate = scope.canWrite(\"end_date\") ? dataUtil.jsToM(ev.end_date, TIMEZONE) : getMomentFromDisplayValue($scope.change.end_date);\n\t\t\t\t\t\t\t\t\tscope.unsavedDates = {\n\t\t\t\t\t\t\t\t\t\tstart: mStartDate,\n\t\t\t\t\t\t\t\t\t\tend: mEndDate\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\tscope.isPopupOpen = true;\n\t\t\t\t\t\t\t\t\t$timeout(function() {\n\t\t\t\t\t\t\t\t\t\tangular.element('#' + scope.getPopupId()).focus();\n\t\t\t\t\t\t\t\t\t}, 100, false);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tfunction getMomentFromDisplayValue(field) {\n\t\t\t\t\t\t\tif (field && field.display_value)\n\t\t\t\t\t\t\t\treturn moment.tz(field.display_value, $scope.dateTimeFormat, TIMEZONE);\n\t\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t$scope.$watch('events', function() {\n\t\t\t\t\t\tbuildMarkedSpans();\n\t\t\t\t\t\tcompileTimelineLabels();\n\t\t\t\t\t\taddPopoversToEventsIfNeeded().then(function() {\n\t\t\t\t\t\t\tsetFocus(focusIDAfterUpdate, 500);\n\t\t\t\t\t\t\tfocusIDAfterUpdate = undefined;\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t\tvar changePopupClosers = {};\n\t\t\t\t\t$scope.closeChangePopups = function(exceptWithScopeKey) {\n\t\t\t\t\t\tfor (var k in changePopupClosers) {\n\t\t\t\t\t\t\tif (k === exceptWithScopeKey)\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\tif (changePopupClosers[k])\n\t\t\t\t\t\t\t\tchangePopupClosers[k]();\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tvar currentChangeEvent;\n\t\t\t\t\tvar currentChangeLabel;\n\t\t\t\t\t$scope.enableLoading();\n\t\t\t\t\t$scope.$watch('change', function(currentChange) {\n\t\t\t\t\t\tif (currentChange) {\n\t\t\t\t\t\t\t// When we update change we reassign it to $scope.change so it is updated, but\n\t\t\t\t\t\t\t// cloning helps prevent any possible infinite loop if we ever decide to deep watch this object.\n\t\t\t\t\t\t\tcurrentChange = angular.extend({}, currentChange);\n\t\t\t\t\t\t\tcurrentChangeEvent = changeToEvent(currentChange, CURR_CHANGE_SECTION);\n\t\t\t\t\t\t\tcurrentChangeLabel = getChangeLabel(currentChange);\n\t\t\t\t\t\t\t$scope.disableLoading();\n\n\t\t\t\t\t\t\tsetVerticalUnits(currentChangeLabel, true, true); // TODO turn off windows section if that is turned off using properties\n\n\t\t\t\t\t\t\tif (currentChange.start_date)\n\t\t\t\t\t\t\t\t$scope.config.date = new Date(currentChange.start_date.getTime()); // changeToEvent has already converted WS date to JS Date.\n\n\t\t\t\t\t\t\t$scope.events = [currentChangeEvent];\n\n\t\t\t\t\t\t\t// We need to make sure we reset startDate/endDate because the selected change has been changed\n\t\t\t\t\t\t\tif (currentChange.start_date && currentChange.end_date) {\n\t\t\t\t\t\t\t\tstartDate = calendarUtils.getStartOfPreviousDay(new Date(currentChange.start_date.getTime()));\n\t\t\t\t\t\t\t\tendDate = calendarUtils.getStartOfNextDay(new Date(currentChange.end_date.getTime()));\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t$scope.fetchEvents(startDate, endDate);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsetVerticalUnits(i18n.getMessage('No change selected'));\n\t\t\t\t\t\t\t$scope.events = [];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$scope.ready = false;\n\t\t\t\t\t\tisReady();\n\t\t\t\t\t});\n\n\t\t\t\t\tfunction mergeOverlappingWindowEvents(events) {\n\t\t\t\t\t\tvar rangeBuckets = [];\n\t\t\t\t\t\tfor (var i = 0; i < events.length; i++) {\n\t\t\t\t\t\t\tvar e = events[i];\n\n\t\t\t\t\t\t\t// If the current event start/end is not within my current view start/end then it should not be factored\n\t\t\t\t\t\t\tif (viewStartDate && viewEndDate && !calendarUtils.testRangesIntersect(e.start_date, e.end_date, viewStartDate, viewEndDate))\n\t\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t\t\t// If the current event starts/ends at the end/start of the visible range then it should not be factored\n\t\t\t\t\t\t\t// This check is performed because calendarUtils.testRangesIntersect will consider an event that starts/ends at the same time as viewEndDate/viewStartDate as being inside the range\n\t\t\t\t\t\t\tif (viewStartDate && viewEndDate && (e.start_date.getTime() === viewEndDate.getTime() || e.end_date.getTime() === viewStartDate.getTime()))\n\t\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t\t\tvar eligibleBuckets = [];\n\t\t\t\t\t\t\tfor (var j = 0; j < rangeBuckets.length; j++) {\n\t\t\t\t\t\t\t\tvar b = rangeBuckets[j];\n\t\t\t\t\t\t\t\tif (calendarUtils.testRangesIntersect(e.start_date, e.end_date, b.start, b.end))\n\t\t\t\t\t\t\t\t\teligibleBuckets.push(j);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar targetB = {\n\t\t\t\t\t\t\t\tevents: [e],\n\t\t\t\t\t\t\t\tstart: e.start_date,\n\t\t\t\t\t\t\t\tend: e.end_date\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\trangeBuckets.push(targetB);\n\t\t\t\t\t\t\t// Merging all eligible buckets as one single bucket.\n\t\t\t\t\t\t\t// All events in eligible buckets will be emptied into\n\t\t\t\t\t\t\t// bucket targetB and then those buckets will be deleted.\n\t\t\t\t\t\t\tfor (j = eligibleBuckets.length - 1; j >= 0; j--) {\n\t\t\t\t\t\t\t\tvar currB = rangeBuckets[eligibleBuckets[j]];\n\t\t\t\t\t\t\t\tif (targetB.start.getTime() > currB.start.getTime())\n\t\t\t\t\t\t\t\t\ttargetB.start = currB.start;\n\t\t\t\t\t\t\t\tif (targetB.end.getTime() < currB.end.getTime())\n\t\t\t\t\t\t\t\t\ttargetB.end = currB.end;\n\n\t\t\t\t\t\t\t\ttargetB.events = dataUtil.mergeSortedArrays(targetB.events, currB.events, function(e1, e2) {\n\t\t\t\t\t\t\t\t\treturn e1.start_date.getTime() - e2.start_date.getTime();\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t// Since values in eligibleBuckets always progressively increases\n\t\t\t\t\t\t\t\t// hence when iterating in reverse we can safely delete the merged buckets.\n\t\t\t\t\t\t\t\trangeBuckets.splice(eligibleBuckets[j], 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn rangeBuckets.map(function(b) {\n\t\t\t\t\t\t\tif (b.events.length > 1) {\n\t\t\t\t\t\t\t\tvar leaderEvent = b.events[0];\n\t\t\t\t\t\t\t\tvar id = b.events.map(function(e) {\n\t\t\t\t\t\t\t\t\treturn e.id;\n\t\t\t\t\t\t\t\t}).join(',');\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\tid: id,\n\t\t\t\t\t\t\t\t\tstart_date: b.start,\n\t\t\t\t\t\t\t\t\tend_date: b.end,\n\t\t\t\t\t\t\t\t\ttext: getWindowEventText(id, b.events, b.start, b.end, leaderEvent.timeline_section),\n\t\t\t\t\t\t\t\t\tis_multievent: true,\n\t\t\t\t\t\t\t\t\tevents: b.events,\n\t\t\t\t\t\t\t\t\ttimeline_section: leaderEvent.timeline_section\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn b.events[0];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction buildPhantomEventMap() {\n\t\t\t\t\t\t$scope.phantomEvents = {};\n\t\t\t\t\t\tvar events = [];\n\t\t\t\t\t\tif ($scope.blackoutSchedules && $scope.blackoutSchedules.length)\n\t\t\t\t\t\t\tevents = events.concat($scope.blackoutSchedules);\n\t\t\t\t\t\tif ($scope.maintenanceSchedules && $scope.maintenanceSchedules.length)\n\t\t\t\t\t\t\tevents = events.concat($scope.maintenanceSchedules);\n\t\t\t\t\t\tevents.forEach(function(e) {\n\t\t\t\t\t\t\tcalendarUtils.getAllDaysInDateRange(e.start_date, e.end_date).forEach(function(d) {\n\t\t\t\t\t\t\t\tvar key = getPhantomKey(d);\n\t\t\t\t\t\t\t\tvar pe = $scope.phantomEvents[key];\n\t\t\t\t\t\t\t\tif (!pe) {\n\t\t\t\t\t\t\t\t\tpe = {\n\t\t\t\t\t\t\t\t\t\tid: uid(),\n\t\t\t\t\t\t\t\t\t\tdate: new Date(d.getFullYear(), d.getMonth(), d.getDate()),\n\t\t\t\t\t\t\t\t\t\tis_phantom: true,\n\t\t\t\t\t\t\t\t\t\ttype: undefined,\n\t\t\t\t\t\t\t\t\t\tevents: []\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t$scope.phantomEvents[key] = pe;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (e.timeline_section === BLACKOUT_SECTION) {\n\t\t\t\t\t\t\t\t\tif (!pe.type)\n\t\t\t\t\t\t\t\t\t\tpe.type = BLACKOUT_TYPE;\n\t\t\t\t\t\t\t\t\telse if (pe.type === MAINT_TYPE)\n\t\t\t\t\t\t\t\t\t\tpe.type = BOTH_TYPE;\n\t\t\t\t\t\t\t\t} else if (e.timeline_section === MAINT_SECTION) {\n\t\t\t\t\t\t\t\t\tif (!pe.type)\n\t\t\t\t\t\t\t\t\t\tpe.type = MAINT_TYPE;\n\t\t\t\t\t\t\t\t\telse if (pe.type === BLACKOUT_TYPE)\n\t\t\t\t\t\t\t\t\t\tpe.type = BOTH_TYPE;\n\t\t\t\t\t\t\t\t} else\n\t\t\t\t\t\t\t\t\tthrow 'Programming error! Only schedule type events are expected here.';\n\t\t\t\t\t\t\t\tpe.events.push(e);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction getCurrentEventBuildMarker() {\n\t\t\t\t\t\tif (viewStartDate)\n\t\t\t\t\t\t\treturn viewStartDate.getTime() + $scope.viewMode;\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction buildEventArrIfNotAlreadyBuilt() {\n\t\t\t\t\t\tif (eventBuildMarker === getCurrentEventBuildMarker())\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\tbuildEventArr();\n\t\t\t\t\t}\n\t\t\t\t\tvar eventBuildMarker;\n\n\t\t\t\t\tfunction buildEventArr() {\n\t\t\t\t\t\tif (currentChangeEvent) {\n\t\t\t\t\t\t\t$scope.events = [currentChangeEvent];\n\t\t\t\t\t\t\tif ($scope.viewMode !== CalendarView.MONTH) {\n\t\t\t\t\t\t\t\t$scope.relatedChangeLabels = [];\n\t\t\t\t\t\t\t\tvar evs;\n\t\t\t\t\t\t\t\tif ($scope.blackoutSchedules && $scope.blackoutSchedules.length) {\n\t\t\t\t\t\t\t\t\tevs = $scope.blackoutSchedules;\n\t\t\t\t\t\t\t\t\tevs = mergeOverlappingWindowEvents(evs);\n\t\t\t\t\t\t\t\t\t$scope.events = $scope.events.concat(evs);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif ($scope.maintenanceSchedules && $scope.maintenanceSchedules.length) {\n\t\t\t\t\t\t\t\t\tevs = $scope.maintenanceSchedules;\n\t\t\t\t\t\t\t\t\tevs = mergeOverlappingWindowEvents(evs);\n\t\t\t\t\t\t\t\t\t$scope.events = $scope.events.concat(evs);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif ($scope.relatedChanges && $scope.relatedChanges.length) {\n\t\t\t\t\t\t\t\t\tevs = $scope.relatedChanges.filter(function(e) {\n\t\t\t\t\t\t\t\t\t\tif (!viewStartDate)\n\t\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t\tif (e.end_date.getTime() > viewStartDate.getTime() && e.start_date.getTime() < viewEndDate.getTime()) {\n\t\t\t\t\t\t\t\t\t\t\t$scope.relatedChangeLabels.push({\n\t\t\t\t\t\t\t\t\t\t\t\tkey: e.timeline_section,\n\t\t\t\t\t\t\t\t\t\t\t\tlabel: getChangeLabel(e.change)\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tsetVerticalUnits(currentChangeLabel, true, true, evs.length > 0);\n\t\t\t\t\t\t\t\t\t$scope.events = $scope.events.concat(evs);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsetVerticalUnits(currentChangeLabel, true, true, false);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tbuildPhantomEventMap();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$scope.blackoutSchedules = [];\n\t\t\t\t\t\t\t$scope.maintenanceSchedules = [];\n\t\t\t\t\t\t\t$scope.relatedChanges = [];\n\t\t\t\t\t\t\t$scope.relatedChangeLabels = [];\n\t\t\t\t\t\t\tsetVerticalUnits(currentChangeLabel, true, true, false);\n\t\t\t\t\t\t\t$scope.events = [];\n\t\t\t\t\t\t}\n\t\t\t\t\t\teventBuildMarker = getCurrentEventBuildMarker();\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction buildMarkedSpans() {\n\t\t\t\t\t\tif (currentChangeEvent) {\n\t\t\t\t\t\t\tvar c = 'current_change_span_mark';\n\t\t\t\t\t\t\tif (viewStartDate && currentChangeEvent.start_date.getTime() < viewStartDate.getTime())\n\t\t\t\t\t\t\t\tc += ' left_extends_beyond';\n\t\t\t\t\t\t\tif (viewEndDate && currentChangeEvent.end_date.getTime() > viewEndDate.getTime())\n\t\t\t\t\t\t\t\tc += ' right_extends_beyond';\n\t\t\t\t\t\t\t$scope.markedSpans = [{\n\t\t\t\t\t\t\t\tstart_date: currentChangeEvent.start_date,\n\t\t\t\t\t\t\t\tend_date: currentChangeEvent.end_date,\n\t\t\t\t\t\t\t\ttype: 'current_change_marker',\n\t\t\t\t\t\t\t\tcss: c\n\t\t\t\t\t\t\t}];\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$scope.markedSpans = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tvar startDate;\n\t\t\t\t\tvar endDate;\n\t\t\t\t\t$scope.fetchEvents = function(start, end) {\n\t\t\t\t\t\t// Recording current date ranges\n\t\t\t\t\t\tstartDate = start;\n\t\t\t\t\t\tendDate = end;\n\n\t\t\t\t\t\tfetchWindows();\n\t\t\t\t\t\tif ($scope.viewMode !== CalendarView.MONTH)\n\t\t\t\t\t\t\tfetchRelatedChanges();\n\t\t\t\t\t};\n\n\t\t\t\t\tvar windowFetchPromise;\n\n\t\t\t\t\tfunction fetchWindows() {\n\t\t\t\t\t\tif (windowFetchPromise) {\n\t\t\t\t\t\t\twindowFetchPromise.cancel();\n\t\t\t\t\t\t\t$scope.disableLoading();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!currentChangeEvent) { // Change info not available, deferring fetch until it is available.\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!startDate) { // Ignore since date range is not known yet.\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$scope.enableLoading();\n\t\t\t\t\t\twindowFetchPromise = cancellablePromise(vcabDataSource.change.getRelatedWindows(currentChangeEvent.id, startDate, endDate));\n\t\t\t\t\t\twindowFetchPromise.then(function(data) {\n\t\t\t\t\t\t\t$scope.blackoutSchedules = [];\n\t\t\t\t\t\t\t$scope.maintenanceSchedules = [];\n\t\t\t\t\t\t\tdata.maintenance.forEach(function(m) {\n\t\t\t\t\t\t\t\t$scope.maintenanceSchedules = $scope.maintenanceSchedules.concat(scheduleToEvents(m, MAINT_SECTION));\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tdata.blackout.forEach(function(b) {\n\t\t\t\t\t\t\t\t$scope.blackoutSchedules = $scope.blackoutSchedules.concat(scheduleToEvents(b, BLACKOUT_SECTION));\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif (data.warn_invalid_conflict_checker)\n\t\t\t\t\t\t\t\t$scope.onWarn({\n\t\t\t\t\t\t\t\t\t$msg: i18n.getMessage('The ChangeCheckConflicts script include has been modifed and does not contain the required API. Cannot collect maintenance and blackout schedules. Please contact system administrator.')\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tbuildEventArr();\n\t\t\t\t\t\t\t$scope.disableLoading();\n\t\t\t\t\t\t}, function() {\n\t\t\t\t\t\t\t$scope.blackoutSchedules = [];\n\t\t\t\t\t\t\t$scope.maintenanceSchedules = [];\n\t\t\t\t\t\t\tbuildEventArr();\n\t\t\t\t\t\t\t$scope.disableLoading();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tvar relatedChangeFetchPromise;\n\n\t\t\t\t\tfunction fetchRelatedChanges() {\n\t\t\t\t\t\tif (relatedChangeFetchPromise) {\n\t\t\t\t\t\t\trelatedChangeFetchPromise.cancel();\n\t\t\t\t\t\t\t$scope.disableLoading();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!currentChangeEvent) { // Change info not available, deferring fetch until it is available.\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!startDate) { // Ignore since date range is not known yet. We don't need exact view dates\n\t\t\t\t\t\t\t// since in buildEventArr we filter the ones out of view.\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ($scope.filters.config.assignee || $scope.filters.config.group || $scope.filters.config.ci) {\n\t\t\t\t\t\t\t$scope.enableLoading();\n\t\t\t\t\t\t\trelatedChangeFetchPromise = cancellablePromise(vcabDataSource.change.getRelatedChanges($scope.change.sys_id.value,\n\t\t\t\t\t\t\t\tstartDate, endDate, $scope.filters.config.assignee, $scope.filters.config.group, $scope.filters.config.ci));\n\t\t\t\t\t\t\trelatedChangeFetchPromise.then(function(changes) {\n\t\t\t\t\t\t\t\tvar sectionId = RELATED_CHANGE_SECTION;\n\t\t\t\t\t\t\t\t$scope.relatedChanges = changes.map(function(change) {\n\t\t\t\t\t\t\t\t\tsectionId += 10;\n\t\t\t\t\t\t\t\t\treturn changeToEvent(change, sectionId);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tbuildEventArr();\n\t\t\t\t\t\t\t\t$scope.disableLoading();\n\t\t\t\t\t\t\t}, function() {\n\t\t\t\t\t\t\t\t$scope.relatedChanges = [];\n\t\t\t\t\t\t\t\tbuildEventArr();\n\t\t\t\t\t\t\t\t$scope.disableLoading();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$scope.relatedChanges = [];\n\t\t\t\t\t\t\tbuildEventArr();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Handling filters\n\t\t\t\t\tfunction setAllAndNone(c) {\n\t\t\t\t\t\tvar score = 0;\n\t\t\t\t\t\tvar total = 0;\n\t\t\t\t\t\tfor (var k in c) {\n\t\t\t\t\t\t\tif (k === ALL_FILTER || k === NONE_FILTER)\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\ttotal++;\n\t\t\t\t\t\t\tif (c[k])\n\t\t\t\t\t\t\t\tscore++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (total === 0)\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\tc.all = false;\n\t\t\t\t\t\tc.none = false;\n\t\t\t\t\t\tif (score === total)\n\t\t\t\t\t\t\tc.all = true;\n\t\t\t\t\t\tif (score === 0)\n\t\t\t\t\t\t\tc.none = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (!$scope.configOptions)\n\t\t\t\t\t\t$scope.configOptions = {};\n\t\t\t\t\tif (!$scope.dayViewOptions)\n\t\t\t\t\t\t$scope.dayViewOptions = {};\n\t\t\t\t\tif (!$scope.weekViewOptions)\n\t\t\t\t\t\t$scope.weekViewOptions = {};\n\t\t\t\t\t$scope.filters = {\n\t\t\t\t\t\tconfig: $scope.configOptions,\n\t\t\t\t\t\tdayView: $scope.dayViewOptions,\n\t\t\t\t\t\tweekView: $scope.weekViewOptions,\n\t\t\t\t\t\ttabSelection: $scope.SETTINGS_TAB\n\t\t\t\t\t};\n\t\t\t\t\tif ($scope.autoSaveAndFetchOptionsAsUserPref === 'true') {\n\t\t\t\t\t\tvar q = $q.all(\n\t\t\t\t\t\t\t[userPreferences.getPreference('cab_workbench.day_view_options'),\n\t\t\t\t\t\t\t\tuserPreferences.getPreference('cab_workbench.week_view_options'),\n\t\t\t\t\t\t\t\tuserPreferences.getPreference('cab_workbench.config_options')\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq.then(function(r) {\n\t\t\t\t\t\t\t$scope.dayViewOptions = {\n\t\t\t\t\t\t\t\tdateTime: true,\n\t\t\t\t\t\t\t\tnumber: true,\n\t\t\t\t\t\t\t\tshortDescription: true,\n\t\t\t\t\t\t\t\tassignee: true,\n\t\t\t\t\t\t\t\tgroup: true\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t$scope.filters.dayView = angular.extend($scope.dayViewOptions, deserializeObj(r[0]));\n\n\t\t\t\t\t\t\t$scope.weekViewOptions = {\n\t\t\t\t\t\t\t\tdateTime: true,\n\t\t\t\t\t\t\t\tnumber: true,\n\t\t\t\t\t\t\t\tshortDescription: true\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t$scope.filters.weekView = angular.extend($scope.weekViewOptions, deserializeObj(r[1]));\n\n\t\t\t\t\t\t\t$scope.configOptions = {\n\t\t\t\t\t\t\t\tassignee: false,\n\t\t\t\t\t\t\t\tgroup: false,\n\t\t\t\t\t\t\t\tci: true\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t$scope.filters.config = angular.extend($scope.configOptions, deserializeObj(r[2]));\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$scope.filters.config.ci = true;\n\t\t\t\t\t\t$scope.filters.dayView.all = true;\n\t\t\t\t\t\t$scope.filters.weekView.all = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Config filters\n\t\t\t\t\t$scope.$watch('filters.config.all', function(all) {\n\t\t\t\t\t\tif (all) {\n\t\t\t\t\t\t\t$scope.filters.config.none = false;\n\t\t\t\t\t\t\t$scope.filters.config.assignee = true;\n\t\t\t\t\t\t\t$scope.filters.config.group = true;\n\t\t\t\t\t\t\t$scope.filters.config.ci = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\t$scope.$watch('filters.config.none', function(none) {\n\t\t\t\t\t\tif (none) {\n\t\t\t\t\t\t\t$scope.filters.config.all = false;\n\t\t\t\t\t\t\t$scope.filters.config.assignee = false;\n\t\t\t\t\t\t\t$scope.filters.config.group = false;\n\t\t\t\t\t\t\t$scope.filters.config.ci = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\t$scope.$watchGroup(['filters.config.assignee', 'filters.config.group', 'filters.config.ci'], function() {\n\t\t\t\t\t\tsetAllAndNone($scope.filters.config);\n\t\t\t\t\t\tfetchRelatedChanges();\n\t\t\t\t\t});\n\t\t\t\t\t$scope.saveConfigOptions = function() {\n\t\t\t\t\t\tif ($scope.autoSaveAndFetchOptionsAsUserPref === 'true') {\n\t\t\t\t\t\t\t$timeout(function() {\n\t\t\t\t\t\t\t\tvar s = serializeObj($scope.configOptions);\n\t\t\t\t\t\t\t\tif (s)\n\t\t\t\t\t\t\t\t\tuserPreferences.setPreference('cab_workbench.config_options', s);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\t// Day view filters\n\t\t\t\t\t$scope.$watch('filters.dayView.all', function(all) {\n\t\t\t\t\t\tif (all) {\n\t\t\t\t\t\t\t$scope.filters.dayView.none = false;\n\t\t\t\t\t\t\t$scope.filters.dayView.dateTime = true;\n\t\t\t\t\t\t\t$scope.filters.dayView.number = true;\n\t\t\t\t\t\t\t$scope.filters.dayView.shortDescription = true;\n\t\t\t\t\t\t\t$scope.filters.dayView.assignee = true;\n\t\t\t\t\t\t\t$scope.filters.dayView.group = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\t$scope.$watch('filters.dayView.none', function(none) {\n\t\t\t\t\t\tif (none) {\n\t\t\t\t\t\t\t$scope.filters.dayView.all = false;\n\t\t\t\t\t\t\t$scope.filters.dayView.dateTime = false;\n\t\t\t\t\t\t\t$scope.filters.dayView.number = false;\n\t\t\t\t\t\t\t$scope.filters.dayView.shortDescription = false;\n\t\t\t\t\t\t\t$scope.filters.dayView.assignee = false;\n\t\t\t\t\t\t\t$scope.filters.dayView.group = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\t$scope.$watchGroup(['filters.dayView.dateTime',\n\t\t\t\t\t\t'filters.dayView.number',\n\t\t\t\t\t\t'filters.dayView.shortDescription',\n\t\t\t\t\t\t'filters.dayView.assignee',\n\t\t\t\t\t\t'filters.dayView.group'\n\t\t\t\t\t], function() {\n\t\t\t\t\t\tsetAllAndNone($scope.filters.dayView);\n\t\t\t\t\t\trefreshEventsText(true);\n\t\t\t\t\t});\n\t\t\t\t\t$scope.saveDayViewOptions = function() {\n\t\t\t\t\t\tif ($scope.autoSaveAndFetchOptionsAsUserPref === 'true') {\n\t\t\t\t\t\t\t$timeout(function() {\n\t\t\t\t\t\t\t\tvar s = serializeObj($scope.dayViewOptions);\n\t\t\t\t\t\t\t\tif (s)\n\t\t\t\t\t\t\t\t\tuserPreferences.setPreference('cab_workbench.day_view_options', s);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\t// Week view filters\n\t\t\t\t\t$scope.$watch('filters.weekView.all', function(all) {\n\t\t\t\t\t\tif (all) {\n\t\t\t\t\t\t\t$scope.filters.weekView.none = false;\n\t\t\t\t\t\t\t$scope.filters.weekView.dateTime = true;\n\t\t\t\t\t\t\t$scope.filters.weekView.number = true;\n\t\t\t\t\t\t\t$scope.filters.weekView.shortDescription = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\t$scope.$watch('filters.weekView.none', function(none) {\n\t\t\t\t\t\tif (none) {\n\t\t\t\t\t\t\t$scope.filters.weekView.all = false;\n\t\t\t\t\t\t\t$scope.filters.weekView.dateTime = false;\n\t\t\t\t\t\t\t$scope.filters.weekView.number = false;\n\t\t\t\t\t\t\t$scope.filters.weekView.shortDescription = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\t$scope.$watchGroup(['filters.weekView.dateTime',\n\t\t\t\t\t\t'filters.weekView.number',\n\t\t\t\t\t\t'filters.weekView.shortDescription'\n\t\t\t\t\t], function() {\n\t\t\t\t\t\tsetAllAndNone($scope.filters.weekView);\n\t\t\t\t\t\trefreshEventsText(true);\n\t\t\t\t\t});\n\t\t\t\t\t$scope.saveWeekViewOptions = function() {\n\t\t\t\t\t\tif ($scope.autoSaveAndFetchOptionsAsUserPref === 'true') {\n\t\t\t\t\t\t\t$timeout(function() {\n\t\t\t\t\t\t\t\tvar s = serializeObj($scope.weekViewOptions);\n\t\t\t\t\t\t\t\tif (s)\n\t\t\t\t\t\t\t\t\tuserPreferences.setPreference('cab_workbench.week_view_options', s);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\t$scope.$watch('keyNav', function() {\n\t\t\t\t\t\tif ($scope.keyNav === 'false')\n\t\t\t\t\t\t\t$scope.config.keyNav = false;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\t$scope.config.keyNav = true;\n\t\t\t\t\t});\n\n\t\t\t\t\t$scope.$on('$destroy', function() {\n\t\t\t\t\t\t$scope.events = [];\n\t\t\t\t\t\t$(document).off('.cab_change_popover');\n\t\t\t\t\t\t$(document).off('.' + CHANGE_FILTER_POPOVER);\n\t\t\t\t\t\tgarbageCollectOldEventScopes();\n\t\t\t\t\t});\n\n\t\t\t\t\tfunction sortComprator(event1, event2) {\n\t\t\t\t\t\tvar dateStr1 = $(event1).find('a').attr('jump_to');\n\t\t\t\t\t\tvar dateStr2 = $(event2).find('a').attr('jump_to');\n\t\t\t\t\t\tvar date1 = dateStr1 ? moment(dateStr1, \"DD-MM-YYYY hh:mm\") : moment(getCommonCalCtrl().getEvent($(event1).attr('event_id')).start_date);\n\t\t\t\t\t\tvar date2 = dateStr2 ? moment(dateStr2, \"DD-MM-YYYY hh:mm\") : moment(getCommonCalCtrl().getEvent($(event2).attr('event_id')).start_date);\n\t\t\t\t\t\treturn date1.isAfter(date2) ? 1 : -1;\n\t\t\t\t\t}\n\t\t\t\t\tcalendarAccessibilityUtils.addShortcut('events', '.cab_event', E, undefined, undefined, sortComprator);\n\t\t\t\t\tel.on('keydown', '.cab_event', function(event) {\n\t\t\t\t\t\tif (event.which == ENTER)\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t});\n}(jQuery));","sys_class_name":"sys_ui_script","sys_id":"279071560b2332005775aabcb4673a50","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/3eb7af7f04b12210559073c06a02f7fb","value":"3eb7af7f04b12210559073c06a02f7fb"},"ui_type":"0","sys_update_name":"sys_ui_script_279071560b2332005775aabcb4673a50","sys_updated_by":"admin","sys_created_on":"2017-06-26 13:41:34","name":"change_calendar.vcal.snChangeCabCalendar","sys_name":"change_calendar.vcal.snChangeCabCalendar","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"0","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2020-09-14 14:04:26","sys_tags":"","script_name":"chgModelService","script":"var app = angular.module(\"sn.chg_model_ui.landing\");\napp.constant(\"ChgModelConstants\", {\n\t\"CHG_MODELS\" : \"/api/sn_chg_model_ui/landing/chgmodels\",\n\t\"USER_PREFERENCE_PINNED\" : \"sn_chg_model_ui.landing_page.pinned_change_models\",\n\t\"KEYS\" : {\n\t\t\"TABKEY\"          : 9,\n\t\t\"ENTER\"           : 13,\n\t\t\"ESCAPE\"          : 27\n\t}\n});\napp.service(\"chgModelService\", [ \"$window\", \"$http\", \"$q\", \"modelUtil\", \"userPreferences\", \"ChgModelConstants\",\nfunction($window, $http, $q, modelUtil, userPreferences, ChgModelConstants) {\n\tvar chgModelService = this;\n\tchgModelService.changeModels = {};\n\n\tchgModelService.initialHit = function(filter, orderby, limit, textSearch) {\n\t\tvar offset = -1;\n\t\tchgModelService.changeModels = {};\n\t\treturn chgModelService.getChangeModels(filter, orderby, offset, limit, textSearch);\n\t};\n\n\tchgModelService.getChangeModels = function(filter, orderBy, offset, limit, textSearch) {\n\t\tvar deferred = $q.defer();\n\t\ttextSearch = (!textSearch) ? \"\" : textSearch.trim();\n\t\tvar url = ChgModelConstants.CHG_MODELS + \"?sysparm_ck=\" + $window.g_ck + \"&offset=\" + offset + \"&chg_model_limit=\" + limit + \"&filter=\" + filter + \"&orderby=\" + orderBy + \"&text_search=\" + textSearch;\n\t\t$http.get(url).then(function(response) {\n\t\t\tupdateDataModel(response.data.result, filter);\n\t\t\tdeferred.resolve(response.data.result);\n\t\t}, function(response) {\n\t\t\tmodelUtil.failNicely(response);\n\t\t\tdeferred.reject(response);\n\t\t});\n\t\treturn deferred.promise;\n\t};\n\n\tchgModelService.setScheduleLimit = function(newLimit, filter) {\n\t\tchgModelService.changeModels[filter].limit = parseInt(newLimit);\n\t\tif (!chgModelService.changeModels[filter].limit || isNaN(chgModelService.changeModels[filter].limit) || chgModelService.changeModels[filter].limit > chgModelService.changeModels[filter].maxLimit)\n\t\t\tchgModelService.changeModels[filter].limit = chgModelService.changeModels[filter].maxLimit;\n\t};\n\n\tchgModelService.showSplashMsg = function(filter) {\n\t\tif (!chgModelService.changeModels.hasOwnProperty(\"__struct\"))\n\t\t\treturn false;\n\t\treturn chgModelService.changeModels.__struct[filter].sysIds.length === 0;\n\t};\n\n\t// modifies the array, does not copy\n\tfunction togglePinned(pinnedArray, sysId) {\n\t\tif (!pinnedArray || !Array.isArray(pinnedArray) || !sysId)\n\t\t\treturn pinnedArray;\n\n\t\t// remove empty strings WITHOUT a copy of array i.e. do NOT pinnedArray.filter(pinnedSysId => pinnedSysId);\n\t\tvar len = pinnedArray.length;\n\t\tfor(var i = 0; i < len; i++ )\n\t\t\tpinnedArray[i] && pinnedArray.push(pinnedArray[i]);\n\n\t\tpinnedArray.splice(0 , len);\n\n\t\tvar index = pinnedArray.indexOf(sysId);\n\t\tif (index !== -1)\n\t\t\tpinnedArray.splice(index, 1);\n\t\telse\n\t\t\tpinnedArray.push(sysId);\n\n\t\treturn pinnedArray;\n\t}\n\n\tchgModelService.togglePinned = function(sysId) {\n\t\ttogglePinned(chgModelService.changeModels.__struct['pinned'].sysIds, sysId);\n\n\t\tif (typeof $window.NOW.chg_model_landing.pinned_change_models !== 'string')\n\t\t\t$window.NOW.chg_model_landing.pinned_change_models = '';\n\n\t\tvar newUserPrefPinnedChgModels = togglePinned($window.NOW.chg_model_landing.pinned_change_models.split(','), sysId).join(',');\n\t\tif (newUserPrefPinnedChgModels !== $window.NOW.chg_model_landing.pinned_change_models) {\n\t\t\t$window.NOW.chg_model_landing.pinned_change_models = newUserPrefPinnedChgModels;\n\t\t\tuserPreferences.setPreference(ChgModelConstants.USER_PREFERENCE_PINNED, $window.NOW.chg_model_landing.pinned_change_models);\n\t\t}\n\t};\n\n\tfunction updateDataModel(result, filter) {\n\t\tvar limit = 0;\n\t\tif (!chgModelService.changeModels.chg_model) {\n\t\t\tchgModelService.changeModels = result;\n\t\t\tlimit = chgModelService.changeModels.__struct[filter].sysIds.length;\n\t\t} else {\n\t\t\tchgModelService.changeModels.__struct[filter].__more = result.__more;\n\t\t\tresult.chg_model.forEach(function(chgModel) {\n\t\t\t\tvar chgModelId = chgModel.sys_id.value;\n\t\t\t\tchgModelService.changeModels.chg_model[chgModelId] = chgModel;\n\t\t\t\tif (chgModelService.changeModels.__struct[filter].sysIds.indexOf(chgModelId) === -1)\n\t\t\t\t\tchgModelService.changeModels.__struct[filter].sysIds.push(chgModelId);\n\t\t\t\tif (filter !== 'all' && chgModelService.changeModels.__struct['all'].sysIds.indexOf(chgModelId) === -1)\n\t\t\t\t\tchgModelService.changeModels.__struct['all'].sysIds.push(chgModelId);\n\t\t\t});\n\t\t}\n\t\tchgModelService.changeModels.__struct[filter].offset = chgModelService.changeModels.__struct[filter].offset + chgModelService.changeModels.__struct[filter].limit;\n\t}\n\n\tchgModelService.hasMoreChangeModels = function(filter) {\n\t\treturn chgModelService.changeModels.__struct[filter].__more;\n\t};\n\n\tchgModelService.hasReachedLimit = function(filter) {\n\t\treturn chgModelService.changeModels.__struct[filter].sysIds.length >= chgModelService.changeModels.__struct[filter].maxLimit;\n\t};\n\n\tfunction compareBy(a, b, field, prop) {\n\t\tif (!field || !prop || !a[field] || !a[field][prop] || !b[field] || !b[field][prop])\n\t\t\treturn 0;\n\n\t\tif (a[field][prop] < b[field][prop])\n\t\t\treturn -1;\n\n\t\tif (a[field][prop] > b[field][prop])\n\t\t\treturn 1;\n\n\t\treturn 0;\n\t}\n\n\tfunction compareByName(a, b) {\n\t\treturn compareBy(a, b, \"name\", \"display_value\");\n\t}\n\n\tfunction compareByDescription(a, b) {\n\t\treturn compareBy(a, b, \"description\", \"display_value\");\n\t}\n\n\tfunction sort(filter, sortBy) {\n\t\tvar arrToSort = [];\n\t\tchgModelService.changeModels.__struct[filter].sysIds.forEach(function(key) {\n\t\t\tarrToSort.push(chgModelService.changeModels.chg_model[key]);\n\t\t});\n\n\t\tif (sortBy === \"name\")\n\t\t\tarrToSort.sort(compareByName);\n\t\telse\n\t\t\tarrToSort.sort(compareByDescription);\n\n\t\tvar sysIds = [];\n\t\tarrToSort.forEach(function(obj) {\n\t\t\tsysIds.push(obj.sys_id.value);\n\t\t});\n\t\treturn sysIds;\n\t}\n\n\tchgModelService.sortArray = function(sortBy) {\n\t\tchgModelService.changeModels.__struct[\"pinned\"].sysIds = sort(\"pinned\", sortBy);\n\t\tchgModelService.changeModels.__struct[\"change_models\"].sysIds = sort(\"change_models\", sortBy);\n\t\tchgModelService.changeModels.__struct[\"preapproved\"].sysIds = sort(\"preapproved\", sortBy);\n\t\tchgModelService.changeModels.__struct[\"all\"].sysIds = sort(\"all\", sortBy);\n\t};\n}]);\n","sys_class_name":"sys_ui_script","sys_id":"27a3cabc53d350100999ddeeff7b1223","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/bb9f15345332101034d1ddeeff7b12c8","value":"bb9f15345332101034d1ddeeff7b12c8"},"ui_type":"0","sys_update_name":"sys_ui_script_27a3cabc53d350100999ddeeff7b1223","sys_updated_by":"admin","sys_created_on":"2020-09-14 14:04:26","name":"sn_chg_model_ui.chgModelService","sys_name":"sn_chg_model_ui.chgModelService","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/bb9f15345332101034d1ddeeff7b12c8","value":"bb9f15345332101034d1ddeeff7b12c8"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"102","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2022-11-29 04:11:52","sys_tags":"","script_name":"","script":"function goog_auth_on_load(formId) {\n\tvar currForm = document.getElementById(formId);\n\tvar verificationId = currForm.elements['verification_id'].value;\n\tvar userId = currForm.elements['user_id'].value;\t\n\tloadContent();\n}\n\nfunction goog_auth_on_submit(formId) {\n\tvar currForm = document.getElementById(formId);\t\n\tvar mandatory = currForm.elements['mandatory'].value == 'true';\n\t\n\tcurrForm.elements['can_submit'].value = 'true';\n\tvar valid = currForm.elements['goog_auth_valid'].value == 'true';\t\n\t\n\tif (!valid) {\n\t\t// If form is invalid and mandatory, show message and select the tab to draw the user's attention.\n\t\tif (mandatory) {\n\t\t\tvar tabId = 'tablabel' + currForm.elements['tab_index'].value;\n\t\t    var tab = gel(tabId);\n\t\t    tab.click();\n\t\t    displayErrorMessage(getMessage('You must authorize at least one device with Authenticator App'));\n\t\t    return false;\n\t\t}\n\t\t// if not mandatory we dont want the form submitted and enrollment inserted\n\t\telse {\n\t\t\tcurrForm.elements['can_submit'].value = 'false';\n\t\t}\n\t}\n\t\n\treturn true;\n}\n\nfunction loadContent(){\n\tvar ajax = new GlideAjax(\"PwdGoogleAuthenticator\");\n    ajax.addParam(\"sysparm_name\", \"loadContent\");\n\tajax.addParam(\"sysparm_userId\", getUserID());\n\tajax.getXML(this.processContent.bind(this));\n}\n\nfunction processContent(response){\n\tif (!securityCheck(response))\n\t\treturn false;\n\t\n\tvar isEnabledResponse = response.responseXML.getElementsByTagName(\"isEnabled\");\n    var isEnabled = isEnabledResponse[0].getAttribute(\"isEnabled\");\n\tvar result = response.responseXML.getElementsByTagName(\"result\");\n\t\n\tif (isEnabled == \"false\") \n\t\tshowEnableContent();\n\telse if(result && result.length > 0){\n\t\tvar validated = result[0].getAttribute(\"validated\");\n\t\tvar qrCodeURL = result[0].getAttribute(\"qrCodeURL\");\n\t\tvar qrCodeText = result[0].getAttribute(\"qrCodeText\");\n\t\tvar canDisable = result[0].getAttribute(\"canDisable\");\n\n\t\tif(validated == \"true\")\n\t\t\tshowSuccessContent();\n\t\telse {\n\t\t\tshowValidateContent();\n\t\t\tgel('imgCode').src = qrCodeURL;\n\t\t\tgel('lblCode').innerHTML = new GwtMessage().getMessage(\"Or type in: {0}\",qrCodeText);\n\t\t}\n\t}\t\n}\n\nfunction validateResponse(formId){\n\tvar userResponse = document.getElementById(\"txtResponse\").value.trim();\n\tif (userResponse.length != 6 || isNaN(userResponse))\n\t\tshowError();\n\t\n\tvar currForm = document.getElementById(formId);\n\tvar verificationId = currForm.elements['verification_id'].value;\n\t\n\tvar ajax = new GlideAjax(\"PwdGoogleAuthenticator\");\n    ajax.addParam(\"sysparm_name\", \"validateEnrollmentResponse\");\n\tajax.addParam(\"sysparm_response\", userResponse);\n\tajax.addParam(\"sysparm_userId\", getUserID());\n\tajax.getXML(this.processResponse.bind(this));\n}\n\nfunction processResponse(response){\n\tif (!securityCheck(response))\n\t\treturn false;\n\t\n\tvar result = response.responseXML.getElementsByTagName(\"result\");\n\tif (result && result.length > 0 ) {\n\t\tvar validated = result[0].getAttribute(\"validated\");\n\t\tif (validated == 'true')\n\t\t\tloadContent();\n\t\telse\n\t\t\tshowError();\n\t} else\n\t\tshowError();\n}\n\nfunction enableSetup() {\n\tvar ajax = new GlideAjax(\"PwdGoogleAuthenticator\");\n\tajax.addParam(\"sysparm_name\", \"enableGoogleAuth\");\n\tajax.addParam(\"sysparm_userId\", getUserID());\n\tajax.getXML(this.processContent.bind(this));\n}\n\nfunction disableSetup() {\n\tvar userId = getUserID();\n\tvar areYouSure = confirm(new GwtMessage().getMessage(\"Are you sure you want to disable Multi-factor Authentication?\"));\n\tif(areYouSure == true){\n\t\tg_form.clearMessages();\n\t\tg_form.addInfoMessage(\"The Multifactor Authentication property has been disabled for your user\");\n\t\t\n\t\tvar ajax = new GlideAjax(\"PwdGoogleAuthenticator\");\n\t\tajax.addParam(\"sysparm_name\", \"disableGoogleAuth\");\n\t\tajax.addParam(\"sysparm_userId\", userId);\n\t\tajax.getXML(this.processContent.bind(this));\n\t}\n}\n\nfunction resetCode() {\n\tvar areYouSure = confirm(new GwtMessage().getMessage(\"Are you sure you want to generate a new code?\"));\n\tif(areYouSure == true){\n\t\tvar userId = getUserID();\n\t\tvar ajax = new GlideAjax(\"PwdGoogleAuthenticator\");\n\t\tajax.addParam(\"sysparm_name\", \"resetMultifactorCode\");\n\t\tajax.addParam(\"sysparm_userId\", userId);\n\t\tajax.getXML(this.processContent.bind(this));\n\t}\n}\n\nfunction getUserID() {\n\tvar user_id =  gel(\"userId\").value;\n\treturn user_id;\n}\n\nfunction showError(){\n\tg_form.clearMessages();\n\tg_form.addErrorMessage(getMessage(\"The Authenticator App code that you entered is invalid. Try again.\"));\n\treturn false;\n}\n\nfunction securityCheck(response) {\n\tvar securityError = response.responseXML.documentElement.getAttribute(\"error\");\n\tif (securityError == \"unauthorized\") {\n\t\tg_form.clearMessages();\n\t    g_form.addErrorMessage(getMessage(\"You are not authorized to perform that action\"));\n\t    return false;\n\t} else\n\t\treturn true;\n}\n\nfunction showEnableContent() {\n\ttoggleContent(true, false, false, false);\n}\n\nfunction showValidateContent() {\n    gel(\"txtResponse\").value = \"\";\n\ttoggleContent(false, true, false, false);\n}\n\nfunction showSuccessContent() {\n\tvar successMsg = new GwtMessage().getMessage(\"Your device was paired successfully and you can use it to verify your identity while resetting your password.\");\n\tvar warningRstMsg = new GwtMessage().getMessage(\"In addition, you can use the device to implement multi-factor authentication with other applications. If you generate a new code and pair the device using the code, the current multi-factor authentication data is replaced.\");\n\t\n\ttoggleContent(false, false, true, true);\n\tg_form.addInfoMessage(successMsg + \"<br/><br/>\" + warningRstMsg);\n}\n\nfunction toggleContent(enableContent, validateContent, successContent, authValid) {\n\tg_form.clearMessages();\n\t$j(\"#tdEnable\").toggle(enableContent);\n\t$j(\".pwd-auth-validate\").toggle(validateContent);\n\t$j(\"#tdSuccess\").toggle(successContent);\n\tgel(\"goog_auth_valid\").value = authValid? \"true\":\"false\";\n}\n","sys_class_name":"sys_ui_script","sys_id":"285416c20b000300572a6f3ef6673a3a","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/421beb3304352210559073c06a02f7ef","value":"421beb3304352210559073c06a02f7ef"},"ui_type":"0","sys_update_name":"sys_ui_script_285416c20b000300572a6f3ef6673a3a","sys_updated_by":"admin","sys_created_on":"2017-07-20 18:20:53","name":"$pwd_enroll_google_auth_ui","sys_name":"$pwd_enroll_google_auth_ui","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"20","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2018-04-30 10:43:30","sys_tags":"","script_name":"accessibility","script":"angular.module(\"sn.chg_soc.accessibility\", [])\n\t.directive(\"focusHere\", [\"$timeout\", function ($timeout) {\n\t\treturn {\n\t\t\trestrict: \"A\",\n\t\t\tlink: function ($scope, $element, $attr) {\n\t\t\t\t$timeout(function(){\n\t\t\t\t\t$element[0].focus();\n\t\t\t\t}, 0);\n\t\t\t},\n\t\t\tcontroller: function ($scope) {\n\t\t\t\t$scope.$on(\"sn.aside.change_soc_side.open\", function() {\n\t\t\t\t\tvar firstTabbable = angular.element(\"[focus-here='']\");\n\t\t\t\t\tif (firstTabbable.length)\n\t\t\t\t\t\tfirstTabbable.focus();\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t}])\n\t.directive(\"trapTabFocus\", [\"SOC\", function (SOC) {\n\t\treturn {\n\t\t\trestrict: \"A\",\n\t\t\tlink: function ($scope, $element, $attr) {\n\t\t\t\t$element.on(\"keydown\", function(event) {\n\t\t\t\t\tif (event.keyCode === SOC.KEYS.TABKEY) {\n\t\t\t\t\t\tvar tabEls = $element.find(\":tabbable\");\n\t\t\t\t\t\tvar firstEl = tabEls.first();\n\t\t\t\t\t\tvar lastEl = tabEls.last();\n\t\t\t\t\t\t// tab and last element then focus on first element\n\t\t\t\t\t\tif (!event.shiftKey && event.target === lastEl[0]) {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tfirstEl.focus();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// shift+tab and first element then focus on last element\n\t\t\t\t\t\tif (event.shiftKey && event.target === firstEl[0]) {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tlastEl.focus();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t}]);","sys_class_name":"sys_ui_script","sys_id":"295a90ef732113008ef62d2b04f6a7a8","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"ui_type":"0","sys_update_name":"sys_ui_script_295a90ef732113008ef62d2b04f6a7a8","sys_updated_by":"admin","sys_created_on":"2018-04-24 10:52:59","name":"sn_chg_soc.accessibility","sys_name":"sn_chg_soc.accessibility","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"0","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2018-07-03 12:59:14","sys_tags":"","script_name":"tooltip_overflow","script":"angular.module(\"sn.chg_soc.tooltip_overflow\", [])\n\t.directive(\"showTooltipOnTextOverflow\", [function() {\n\t\treturn {\n\t\t\trestrict: \"A\",\n\t\t\tlink: function(scope, element, attrs) {\n\t\t\t\tvar elem = element[0];\n\t\t\t\tscope.$watch(\n\t\t\t\t\tfunction() {\n\t\t\t\t\t\treturn elem.scrollWidth;\n\t\t\t\t\t},\n\t\t\t\t\tfunction() {\n\t\t\t\t\t\tvar firstElem = element[0];\n\t\t\t\t\t\tif (firstElem.offsetWidth < firstElem.scrollWidth)\n\t\t\t\t\t\t\tattrs.tooltipEnable = \"true\";\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\t}]);","sys_class_name":"sys_ui_script","sys_id":"29869d46b78b130096c3e4f6ee11a9ff","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"ui_type":"0","sys_update_name":"sys_ui_script_29869d46b78b130096c3e4f6ee11a9ff","sys_updated_by":"admin","sys_created_on":"2018-07-03 12:59:14","name":"sn_chg_soc.tooltip_overflow","sys_name":"sn_chg_soc.tooltip_overflow","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"0","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2018-01-17 11:18:51","sys_tags":"","script_name":"landing_tabs","script":"var app = angular.module(\"sn.chg_soc.landing\");\napp.directive(\"snLandingTabs\", function(getTemplateUrl) {\n    \"use strict\";\n    return {\n      replace : true,\n      restrict : \"E\",\n      templateUrl : getTemplateUrl(\"sn_chg_soc_landing_tabs.xml\")\n    };\n});\n","sys_class_name":"sys_ui_script","sys_id":"29fdf0d457f30300afc34786cc94f9ad","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"ui_type":"","sys_update_name":"sys_ui_script_29fdf0d457f30300afc34786cc94f9ad","sys_updated_by":"admin","sys_created_on":"2018-01-17 11:18:51","name":"sn_chg_soc.landing_tabs","sys_name":"sn_chg_soc.landing_tabs","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"1","active":"true","description":"Directive agendaItem.  Simple template directive for an agenda item.","use_scoped_format":"false","global":"false","sys_updated_on":"2016-10-12 11:11:47","sys_tags":"","script_name":"agenda.agendaItem","script":"angular.module(\"sn.change_management.cab.agenda\")\n\t.directive(\"agendaItem\", function () {\n\t\treturn {\n\t\t\ttemplateUrl: \"cab_agenda_item\"\n\t\t};\n\t});","sys_class_name":"sys_ui_script","sys_id":"2a035993d752220034d145bcce61031c","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"ui_type":"","sys_update_name":"sys_ui_script_2a035993d752220034d145bcce61031c","sys_updated_by":"admin","sys_created_on":"2016-10-11 14:36:54","name":"sn_change_cab.agenda.agendaItem","sys_name":"sn_change_cab.agenda.agendaItem","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"47","active":"true","description":"Service runtimeState.  Manages the runtime state of the CAB Workbench.","use_scoped_format":"false","global":"false","sys_updated_on":"2021-04-30 13:53:37","sys_tags":"","script_name":"rt.runtimeState","script":"angular.module(\"sn.change_management.cab.runtime_state\")\n\t.service(\"runtimeState\", ['CAB', 'modelUtil', 'initialLoad', '$http', '$q', '$rootScope', 'cabWatcher', function(CAB, modelUtil, initialLoad, $http, $q, $rootScope, cabWatcher) {\t\t\t\n\t\tvar runtimeState = this;  // For convenience\n\t\tvar rSt = {'localState': {}}; // Runtime state\n\t\tvar mId = null; // Meeting Id\n\t\tvar mIdReq = null; // Requested meeting ID\n\t\tvar defReq = null; //Deferred request\n\t\t\n\t\t// The latest modification from Record Watcher\n\t\tvar rwMod = {\n\t\t\t\"cab_runtime_state\": null,\n\t\t\t\"cab_meeting\": null\n\t\t};\n\n\t\t// Builds the state from the REST service return\n\t\tfunction buildState(response) {\n\t\t\t\n\t\t\t// Clear the object without breaking references\n\t\t\tfor (var key in rSt)\n\t\t\t\tif (rSt.hasOwnProperty(key))\n\t\t\t\t\tdelete(rSt[key]);\n\t\t\t\n\t\t\trSt.localState = {};\n\t\t\t\n\t\t\tmodelUtil.patchObject(rSt, response.data.result);\n\t\t\t// Add MS values for all dates in the nested CAB Meeting record\n\t\t\tmodelUtil.addValueMSToAll(rSt.cab_meeting.record);\n\t\t\tmodelUtil.glideListToArray(rSt.cab_meeting.record.delegates);\n\t\t\t\n\t\t\trSt.localState.time_offset = Date.now() - rSt.request_time_ms;\n\t\t\t\n\t\t\tmId = rSt.cab_meeting.value;\n\t\t\t\n\t\t\tcabWatcher\n\t\t\t\t.watch(mId)\n\t\t\t\t.subscribe(function(message) {\n\t\t\t\t\tvar dataTable = message.data.table_name;\n\t\t\t\t\tif (dataTable === CAB.RUNTIME_STATE) {\n\t\t\t\t\t\t$rootScope.$applyAsync(function(scope) {\n\t\t\t\t\t\t\tmodelUtil.patchObject(rSt, message.data.record);\n\t\t\t\t\t\t\trwMod[CAB.RUNTIME_STATE] = message;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tif (dataTable === CAB.MEETING) {\n\t\t\t\t\t\t$rootScope.$applyAsync(function(scope) {\n\t\t\t\t\t\t\tif (!rSt.cab_meeting.record)\n\t\t\t\t\t\t\t\trSt.cab_meeting.record = {};\n\t\t\t\t\t\n\t\t\t\t\t\t\tmodelUtil.patchObject(rSt.cab_meeting.record, message.data.record);\n\t\t\t\t\t\t\tmodelUtil.glideListToArray(rSt.cab_meeting.record.delegates);\n\t\t\t\t\t\t\trwMod[CAB.MEETING] = message;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\t\t\n\t\t// API\n\t\t/**\n\t\t * Sets the current agenda item for the meeting. Patches the runtime\n\t\t * state if amb is not turned on\n\t\t */\n\t\truntimeState.nextAgendaItem = function(nextAgendaItemId) {\n\t\t\tif (nextAgendaItemId && !modelUtil.isValidSysID(nextAgendaItemId))\n\t\t\t\treturn $q.reject(\"Invalid Agenda Item Id\");\n\n\t\t\treturn $http.get(CAB.SERVICE.RUNTIME+ \"next_item/\" + mId + \"/\" + nextAgendaItemId)\n\t\t\t\t.then(null, modelUtil.failNicely);\n\t\t};\n\n\t\truntimeState.demoteCurrentNextAgendaItem = function(nextAgendaItemId) {\n\t\t\tif (nextAgendaItemId && !modelUtil.isValidSysID(nextAgendaItemId))\n\t\t\t\treturn $q.reject(\"Invalid Agenda Item Id\");\n\t\t\t\n\t\t\treturn $http.get(CAB.SERVICE.RUNTIME+ \"demote_current_item/\" + mId + \"/\" + nextAgendaItemId)\n\t\t\t\t.then(null, modelUtil.failNicely);\n\t\t};\n\n\t\truntimeState.noDecisionNextAgendaItem = function(nextAgendaItemId) {\n\t\t\tif (nextAgendaItemId && !modelUtil.isValidSysID(nextAgendaItemId))\n\t\t\t\treturn $q.reject(\"Invalid Agenda Item Id\");\n\n\t\t\treturn $http.get(CAB.SERVICE.RUNTIME+ \"nd_next_item/\" + mId + \"/\" + nextAgendaItemId)\n\t\t\t\t.then(null, modelUtil.failNicely);\n\t\t};\n\t\t\t\n\t\truntimeState.pauseCurrentAgendaItem = function() {\n\t\t\treturn $http.get(CAB.SERVICE.RUNTIME+ \"pause_current_item/\" + mId)\n\t\t\t\t.then(null, modelUtil.failNicely);\n\t\t};\n\t\t\n\t\truntimeState.resumeCurrentAgendaItem = function() {\n\t\t\treturn $http.get(CAB.SERVICE.RUNTIME+ \"resume_current_item/\" + mId)\n\t\t\t\t.then(null, modelUtil.failNicely);\n\t\t};\n\n\t\t/**\n\t\t * If the user is following the current agenda item\n\t\t */\n\t\truntimeState.isViewingCurrent = function() {\n\t\t\tif (rSt.localState && rSt.localState.viewing && rSt.current_agenda_item)\n\t\t\t\treturn rSt.localState.viewing == rSt.current_agenda_item.value;\n\t\t\treturn true;\n\t\t};\n\n\t\t/**\n\t\t * Starts the meeting and selects next pending agenda as current agenda\n\t\t */\n\t\truntimeState.startMeetingAndSelectNextAgenda = function() {\n\t\t\tif (!mId)\n\t\t\t\t$q.reject(\"No meeting Id\");\n\n\t\t\treturn runtimeState.startMeeting();\n\t\t};\n\n\t\t/**\n\t\t * Set the agenda item the user is following\n\t\t */\n\t\truntimeState.setViewAgendaItem = function(agendaItemId) {\n\t\t\t$rootScope.$applyAsync(function() {\n\t\t\t\trSt.localState.viewing = agendaItemId;\n\t\t\t});\n\t\t};\n\t\t\t\n\t\t/**\n\t\t * Returns the id if the agenda item being viewed\n\t\t */\n\t\truntimeState.getViewAgendaItem = function() {\n\t\t\tif (rSt.localState && rSt.localState.viewing)\n\t\t\t\treturn rSt.localState.viewing;\n\t\t\t\n\t\t\tif (rSt.current_agenda_item)\n\t\t\t\treturn rSt.current_agenda_item.value;\n\t\t};\n\t\t\t\n\t\t/**\n\t\t * Returns true if the given user is the cab manager\n\t\t */\n\t\truntimeState.isCABManager = function(userSysId) {\n\t\t\tif (rSt.host && rSt.host.value) \n\t\t\t\treturn rSt.host.value === userSysId;\n\n\t\t\tif (rSt.cab_meeting && rSt.cab_meeting.record)\n\t\t\t\treturn rSt.cab_meeting.record.manager.value === userSysId;\n\n\t\t\treturn false;\n\t\t};\n\t\t\n\t\truntimeState.isHost = function(userSysId) {\n\t\t\tif (rSt.host && rSt.host.value)\n\t\t\t\treturn rSt.host.value === userSysId;\n\n\t\t\treturn false;\n\t\t};\n\n\t\t/**\n\t\t * Return true if the given user id is a delegate.\n\t\t */\n\t\truntimeState.isCABManagerDelegate = function(userSysId) {\n\t\t\tif (!(rSt.cab_meeting && rSt.cab_meeting.record))\n\t\t\t\treturn false;\n\t\t\t\n\t\t\t// If they're the CAB Manager, the're always a delegate\n\t\t\tif (rSt.cab_meeting.record.manager.value == userSysId)\n\t\t\t\treturn true;\n\t\t\t\n\t\t\t// If they're one of the delegates, they're a delegate\n\t\t\tif (rSt.cab_meeting.record.delegates.value.indexOf(userSysId) > -1)\n\t\t\t\treturn true;\n\t\t\t\n\t\t\treturn false;\n\t\t};\n\t\t\n\t\t/**\n\t\t * Returns true if the given user is current notes editor\n\t\t */\n\t\truntimeState.isNotesEditor = function(userSysId) {\n\t\t\tif (rSt.notes_editor && rSt.notes_editor.value)\n\t\t\t\treturn rSt.notes_editor.value === userSysId;\n\n\t\t\treturn false;\n\t\t};\n\n\t\truntimeState.canEditNotes = function(userSysId){\n\t\t\treturn (runtimeState.isCABManager(userSysId) || runtimeState.isCABManagerDelegate(userSysId))\n\t\t\t\t\t&& rSt.notes_editor.value === userSysId;\n\t\t};\n\n\t\truntimeState.setNotesEditor = function(useId){\n\t\t\treturn $http.post(CAB.SERVICE.NOTES_EDITOR + mId, { notesEditor: useId });\n\t\t};\n\n\t\t/**\n\t\t * Starts the meeting if it's not already in progress\n\t\t */\n\t\truntimeState.startMeeting = function() {\n\t\t\tif (rSt.cab_meeting && rSt.cab_meeting.record && rSt.cab_meeting.record.state.value == CAB.PENDING)\n\t\t\t\treturn $http.get(CAB.SERVICE.RUNTIME+ \"start/\" + mId).then(null, modelUtil.failNicely);\n\t\t\t\n\t\t\treturn $q.reject();\n\t\t};\n\t\t\n\n\t\truntimeState.hostMeeting = function(newHostId){\n\t\t\tif (!(mId && rSt.cab_meeting)) //If the meeting is not set up don't allow host change\n\t\t\t\treturn $q.reject();\n\t\t\t\n\t\t\treturn $http.post(CAB.SERVICE.HOST_MEETING + mId, { newHost: newHostId }).then(null, modelUtil.failNicely);\n\t\t};\n\t\t\n\t\t/**\n\t\t * Ends the meeting if it's in progress\n\t\t */\n\t\truntimeState.endMeeting = function() {\n\t\t\tif (rSt.cab_meeting && rSt.cab_meeting.record && rSt.cab_meeting.record.state.value == CAB.IN_PROGRESS)\n\t\t\t\treturn $http.get(CAB.SERVICE.RUNTIME+ \"end/\" + mId).then(null, modelUtil.failNicely);\n\t\t\t\n\t\t\treturn $q.reject();\n\t\t};\n\t\t\n\t\t// LIFE CYCLE ----------\n\t\t/**\n\t\t * Cleanup the service.\n\t\t */\n\t\truntimeState.cleanup = function() {\n\t\t\tif (wChan)\n\t\t\t\twChan.unsubscribe();\n\t\t\t\n\t\t\tif (wMtgChan)\n\t\t\t\twMtgChan.unsubscribe();\n\t\t\t\n\t\t\tfor (var key in rSt)\n\t\t\t\tif (rSt.hasOwnProperty(key))\n\t\t\t\t\tdelete(rSt[key]);\n\t\t\t\t\n\t\t\trSt.localState = {};\n\t\t};\n\t\t\t\n\t\t/**\n\t\t * Initialise the meeting state. Leaves the meeting state in it's\n\t\t * original state if it fails.\n\t\t */\n\t\tfunction init(meetingSysId) {\n\t\t\tif (!meetingSysId || !modelUtil.isValidSysID(meetingSysId))\n\t\t\t\treturn $q.reject(\"Invalid meetingId\");\n\t\t\t\n\t\t\t// Request setup\n\t\t\tmIdReq = meetingSysId;  //requested meeting id\n\t\t\tvar deferred = defReq || $q.defer();  //Check for placeholder deferred request\n\t\t\tdefReq = deferred;\n\t\t\t\n\t\t\tinitialLoad.runtimeState(meetingSysId)\n\t\t\t.then(\n\t\t\t\tfunction(response){\n\t\t\t\t\tbuildState(response);\n\t\t\t\t\tmIdReq = null;\n\t\t\t\t\tdefReq = null;\n\t\t\t\t\tdeferred.resolve(rSt);\n\t\t\t\t}, \n\t\t\t\tfunction(response) {\n\t\t\t\t\tmodelUtil.failNicely(response);\n\t\t\t\t\tmIdReq = null;\n\t\t\t\t\tdefReq = null;\n\t\t\t\t\tdeferred.reject(response);\n\t\t\t\t}\n\t\t\t);\n\t\t\treturn deferred.promise;\n\t\t}\n\t\t\n\t\t/**\n\t\t * Refreshes the current meeting state using the REST service\n\t\t */\n\t\truntimeState.refresh = function() {\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(CAB.SERVICE.RUNTIME + this.mId)\n\t\t\t.then(\n\t\t\t\tfunction(response) {\n\t\t\t\t\tmodelUtil.patchObject(rSt, response.data.result);\n\t\t\t\t\tmodelUtil.addMSValueToAll(rSt.cab_meeting.record);\n\t\t\t\t\tdeferred.resolve(rSt);\n\t\t\t\t},\n\t\t\t\tfunction(response) {\n\t\t\t\t\tmodelUtil.failNicely(response);\n\t\t\t\t\tdeferred.reject(response);\n\t\t\t\t}\n\t\t\t);\n\t\t\treturn deferred.promise;\n\t\t};\n\t\t\n\t\t/**\n\t\t * Get the meeting state for the given sys id. Returns the current state\n\t\t * if the meetingId matches, initialises against the new id if not.\n\t\t */\n\t\truntimeState.get = function(meetingSysId) {\n\t\t\t// If there's nothing to go on, wait until there is\n\t\t\tif (!meetingSysId && !mId && !defReq) {\n\t\t\t\tdefReq = $q.defer();\n\t\t\t\treturn defReq.promise;\n\t\t\t}\n\n\t\t\t// If no meeting has been requested but we're waiting until we have a meeting id.\n\t\t\tif (!meetingSysId && !mIdReq && defReq)\n\t\t\t\treturn defReq.promise;\n\t\t\t\n\t\t\t// If meeting info has been requested\n\t\t\tif ((!meetingSysId || meetingSysId === mIdReq) && defReq)\n\t\t\t\treturn defReq.promise;\n\t\t\t\n\t\t\t// If we already have the meeting info\n\t\t\tif ((meetingSysId === mId) || (!meetingSysId && mId))\n\t\t\t\treturn $q.resolve(rSt);\n\t\t\t\n\t\t\t// Init if we have a meeting id\n\t\t\tif (meetingSysId)\n\t\t\t\treturn init(meetingSysId);\n\t\t\t\n\t\t\t// Default reject\n\t\t\treturn $q.reject();\n\t\t};\n\n\t\t/**\n\t\t * Returns the Record Watcher modifications object.\n\t\t * Record watcher responses are set against named values to determine when data from record watcher\n\t\t * was received.  Name of the trigger is usually the table name of the modified table.\n\t\t */\n\t\truntimeState.getRWMod = function() {\n\t\t\treturn rwMod;\n\t\t};\n\t\t\n\t}]);","sys_class_name":"sys_ui_script","sys_id":"2a0615d3d752220034d145bcce610320","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"ui_type":"0","sys_update_name":"sys_ui_script_2a0615d3d752220034d145bcce610320","sys_updated_by":"admin","sys_created_on":"2016-10-11 14:50:40","name":"sn_change_cab.rt.runtimeState","sys_name":"sn_change_cab.rt.runtimeState","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"17","active":"true","description":"Directive snCabLineClamp.","use_scoped_format":"false","global":"false","sys_updated_on":"2025-06-05 05:18:18","sys_tags":"","script_name":"","script":"(function ($) {\n\t'use strict';\n\tfunction removeLastWords(txt, count) {\n\t\tif (txt && count) {\n\t\t\ttxt = txt.replace(/[\\t\\n\\r\\s]+/g, ' ').trim();\n\t\t\tvar idx = txt.length;\n\t\t\tfor (var i = txt.length - 1; i >= 0; i--) {\n\t\t\t\tvar c = txt.charAt(i);\n\t\t\t\tif (c === ' ')\n\t\t\t\t\tcount--;\n\t\t\t\tif (count === 0) {\n\t\t\t\t\treturn txt.substring(0, i);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn txt;\n\t}\n\n\tangular.module('sn.itsm.vcab.common').directive('snCabLineClamp', function ($timeout) {\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\tscope: {\n\t\t\t\ttext: '@',\n\t\t\t\tmaxLines: '@'\n\t\t\t},\n\t\t\ttemplate: '<div>{{truncatedText}}</div>',\n\t\t\tlink: function (scope, element, attrs) {\n\t\t\t\tvar maxLines = parseInt(scope.maxLines || 1);\n\t\t\t\tvar isClamped = false;\n\t\t\t\tvar $el = $(element).children('div');\n\t\t\t\tvar isWidthSet = false;\n\t\t\t\tif($(element).closest('.snc-common-calendar').length == 0)\n\t\t\t\t\tisWidthSet = true;\n\t\t\t\tfunction tryText() {\n\t\t\t\t\tif(!isWidthSet) {\n\t\t\t\t\t\tvar $calHeader = $('.dhx_cal_header > div > div:first-child');\n\t\t\t\t\t\tif($calHeader.length > 0) {\n\t\t\t\t\t\t\tisWidthSet = true;\n\t\t\t\t\t\t\tvar marginRight = 10;\n\t\t\t\t\t\t\tvar left = $calHeader.position().left;\n\t\t\t\t\t\t\tvar maxWidth = left - element.position().left - marginRight;\n\t\t\t\t\t\t\t$el.closest('td').css({\n\t\t\t\t\t\t\t\t'width': (left + 1) + 'px'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t$el.closest('p').css({\n\t\t\t\t\t\t\t\t'width': maxWidth + 'px',\n\t\t\t\t\t\t\t\t'margin-right': marginRight + 'px'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$timeout(function () {\n\t\t\t\t\t\tif ($el.get(0).scrollHeight > (scope.maxAllowedHt + 5)) {\n\t\t\t\t\t\t\tscope.truncatedText = removeLastWords(scope.text, ++scope.counter) + ' …';\n\t\t\t\t\t\t\t$el.attr('title', scope.text);\n\t\t\t\t\t\t\ttryText();\n\t\t\t\t\t\t} else if (scope.counter === 0) {\n\t\t\t\t\t\t\tscope.truncatedText = scope.text;\n\t\t\t\t\t\t\t$el.removeAttr('title');\n\t\t\t\t\t\t}\n\t\t\t\t\t}, 1);\n\t\t\t\t}\n\t\t\t\tfunction clamp () {\n\t\t\t\t\tif (!isClamped) {\n\t\t\t\t\t\tscope.maxAllowedHt = parseInt($el.css('line-height')) * maxLines;\n\t\t\t\t\t\t$el.css({\n\t\t\t\t\t\t\t'max-height': scope.maxAllowedHt + 'px',\n\t\t\t\t\t\t});\n\t\t\t\t\t\tisClamped = true;\n\t\t\t\t\t}\n\t\t\t\t\tscope.counter = 0;\n\t\t\t\t\tscope.truncatedText = scope.text;\n\t\t\t\t\ttryText();\n\t\t\t\t}\n\t\t\t\tscope.$watch('text', clamp);\n\t\t\t}\n\t\t};\n\t});\n}(jQuery));","sys_class_name":"sys_ui_script","sys_id":"2affed160b2332005775aabcb4673a57","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/3eb7af7f04b12210559073c06a02f7fb","value":"3eb7af7f04b12210559073c06a02f7fb"},"ui_type":"0","sys_update_name":"sys_ui_script_2affed160b2332005775aabcb4673a57","sys_updated_by":"system","sys_created_on":"2017-06-26 13:39:54","name":"change_calendar_vcom.snCabLineClamp","sys_name":"change_calendar_vcom.snCabLineClamp","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"55","active":"true","description":"UI Script that holds the scripts used by the conflict ui macro","use_scoped_format":"false","global":"false","sys_updated_on":"2024-04-25 16:30:23","sys_tags":"","script_name":"","script":"function initializeConflictDetection() {\n\n\tvar trackerId = $('tracker_id').value;\n\tif (trackerId !== \"\") {\n\t\trunBackgroundPoll(trackerId);\n\t\tshowProgressButton(true);\n\t}\n\n\t// Ensure the warning message and check conflicts button are\n\t// correctly shown/hidden (Poll every 2 seconds in case User has\n\t// cleared one of the 3 mandatory conflict detection fields)\n\tsetInterval(updateWarningBoxAndConflictButton, 2000);\n\n\tsetTimeout(function() {\n\t\tif (!g_form.isNewRecord() && ($('tracker_id').value !== \"\")) {\n\t\t\tif (updateWarningBoxAndConflictButton()) {\n\t\t\t\tupdateConflictStatus(0);\n\t\t\t\trefreshConflicts();\n\t\t\t}\n\t\t}\n\t}, 1000);\n\n\t$(\"conflict_action_run\").observe(\"click\", function(event) {\n\t\tevent.stop();\n\n\t\t// If we have unfilled mandatory fields then do not progress\n\t\tif (!g_form.mandatoryCheck())\n\t\t\treturn;\n\n\t\tif (g_form.isNewRecord() || g_form.modified){\n\t\t\t// Add a hidden parameter to indicate that the run conflict detection should be run after the form has saved\n\t\t\tvar afterSaveURL = new GlideURL();\n\n\t\t\tif (g_form.isNewRecord())\n\t\t\t\tafterSaveURL.setFromString(g_form.getTableName() + '.do?sys_id=' + g_form.getUniqueValue());\n\t\t\telse\n\t\t\t\tafterSaveURL.setFromCurrent();\n\n\t\t\taddHidden(g_form.getFormElement(), 'sysparm_goto_url', afterSaveURL.getURL().replace(g_form.getTableName() + '.do','change_conflict_ui.do'));\n\t\t\tg_form.save();\n\t\t} else\n\t\trunConflictDetection();\n\t});\n\n\t//Add event listener for list v2 changes for Affected CI's\n\tCustomEventManager.observe('partial.page.reload', function (elem, e) {\n\t\tif (e && e.listID === g_form.getTableName() + '.task_ci.task')\n\t\t\t$('affected_item_count').value = e.totalRows;\n\t});\n\n\t//Add event listener for list v3 changes for Affected CI's\n\tCustomEventManager.observe('g_list.api.refresh', function (e) {\n\t\tif (e && e.listId === g_form.getTableName() + '.task_ci.task')\n\t\t\t$('affected_item_count').value = GlideList.get(g_form.getTableName() + '.task_ci.task').getRowCount();\n\t});\n\n\tvar runTrackerEl = $('run_tracker_ui');\n\tif (runTrackerEl && runTrackerEl.value == 'true')\n\t\trunConflictDetection();\n}\n\nfunction getSchedulingConflictMessage() {\n\tvar startDateReadOnly = g_form.isReadOnly(\"\", g_form.getControl(\"start_date\"));\n\tvar endDateReadOnly = g_form.isReadOnly(\"\", g_form.getControl(\"end_date\"));\n\n\tif (startDateReadOnly || endDateReadOnly)\n\t\treturn new GwtMessage().getMessage(\"Scheduling conflict detected. Review the Conflicts form section.\");\n\treturn new GwtMessage().getMessage(\"Scheduling conflict detected. Use the <a href='javascript:void(0);' onclick='openNextAvailableTime()'>Scheduling Assistant</a> to avoid conflicts.\");\n}\n\nfunction runConflictDetection() {\n\tvar cancelButtonId = 'cancelButton';\n\tvar backgroundlButtonId = 'runInBackgroundButton';\n\n\tvar dd = new GlideModal(\"simple_progress_viewer\", true, \"40em\", \"10.5em\");\n\tdd.setTitle(new GwtMessage().getMessage(\"Checking conflicts\"));\n\tdd.setPreference('sysparm_progress_name', \"Conflict Checker\");\n\tdd.setPreference(\"sysparm_renderer_expanded_levels\", \"0\");\n\tdd.setPreference(\"sysparm_renderer_hide_drill_down\", true);\n\n\tif ($('tracker_id').value == \"\") {\n\t\tdd.setPreference(\"sysparm_ajax_processor\", \"ChangeConflictAJAXProcessor\");\n\t\tdd.setPreference(\"sysparm_sysid\", g_form.getUniqueValue());\n\t} else\n\n\tdd.setPreference('sysparm_renderer_execution_id', $('tracker_id').value + \"\");\n\tdd.setPreference(\"sysparm_button_close\", new GwtMessage().getMessage(\"Close\"));\n\n\tdd.on(\"executionComplete\", function(trackerObj) {\n\t\treceiveMessage(trackerObj);\n\n\t\tif (trackerObj.state == 4){\n\t\t\tvar progressContainer = $(\"simple_progress_viewer\");\n\t\t\tif (progressContainer)\n\t\t\t\tprogressContainer.down(\"#container\").innerHTML = $(\"conflict_canceled_progress_status\").innerHTML;\n\t\t}\n\n\t\tvar closeBtn = $(\"sysparm_button_close\");\n\t\tif (closeBtn) {\n\t\t\tcloseBtn.onclick = function() {\n\t\t\t\tshowProgressButton(false);\n\t\t\t\tdd.destroy();\n\t\t\t};\n\t\t}\n\n\t\tvar cancelButton = $(cancelButtonId);\n\t\tif (cancelButton)\n\t\t\tcancelButton.hide();\n\n\t\tvar backgroundButton = $(backgroundlButtonId);\n\t\t\tif (backgroundButton)\n\t\t\t\tbackgroundButton.hide();\n\t});\n\n\tdd.on(\"beforeclose\", function() {\n\t\trunBackgroundPoll($('tracker_id').value);\n\t});\n\n\tdd.on(\"renderStatus\", function(trackerObj) {\n\t\t// Record the value of the tracker for future use\n\t\t$('tracker_id').value = trackerObj.sys_id;\n\n\t\t// Add the cancel button\n\t\tif (!dd.hasCancelButton){\n\t\t\t// Create a button that closes the dialog when it is clicked\n\t\t\t// (But continues to run conflict detection in the background)\n\t\t\tvar button = new Element('button', {'id': cancelButtonId, 'class': 'btn btn-default', 'style': 'margin: 0px 4px 0px 4px;'});\n\t\t\tbutton.update(new GwtMessage().getMessage(\"Cancel\"));\n\t\t\tbutton.observe(\"click\", function(event) {\n\t\t\t\tvar backgroundButton = $(backgroundlButtonId);\n\t\t\t\tif (backgroundButton)\n\t\t\t\t\tbackgroundButton.disable();\n\n\t\t\t\tcancelConflictDetection($('tracker_id').value);\n\t\t\t});\n\n\t\t\t// Add the button to the dialog and make a note of the fact that you added it\n\t\t\tvar buttonPanel = $('buttonsPanel');\n\t\t\tbuttonPanel.appendChild(button);\n\t\t\tdd.hasCancelButton = true;\n\t\t}\n\n\t\t// Add the Run in background button\n\t\tif (!dd.hasRunInBackgroundButton){\n\t\t\t// Create a button that closes the dialog when it is clicked\n\t\t\t// (But continues to run conflict detection in the background)\n\t\t\tvar button = new Element('button', {'id': backgroundlButtonId, 'class': 'btn btn-primary', 'style': 'margin: 0px 4px 0px 4px;'});\n\t\t\tbutton.update(new GwtMessage().getMessage(\"Run in Background\"));\n\t\t\tbutton.observe(\"click\", function(event) {\n\t\t\t\tvar cancelButton = $(cancelButtonId);\n\t\t\t\tif (cancelButton)\n\t\t\t\t\tcancelButton.disable();\n\n\t\t\t\trunBackgroundPoll($('tracker_id').value);\n\t\t\t\tdd.destroy();\n\t\t\t});\n\n\t\t\t// Add the button to the dialog and make a note of the fact that you added it\n\t\t\tvar buttonPanel = $('buttonsPanel');\n\t\t\tbuttonPanel.appendChild(button);\n\t\t\tdd.hasRunInBackgroundButton = true;\n\t\t}\n\t});\n\n\tshowProgressButton(true);\n\tdd.render();\n}\n\nfunction updateWarningBoxAndConflictButton() {\n\t// Get values of all fields to determine if conflict detection should be allowed or not\n\tvar cmdbCi = g_form.getValue('cmdb_ci');\n\tvar startDate = g_form.getValue('start_date');\n\tvar endDate = g_form.getValue('end_date');\n\tvar conflictMode = $('conflict_mode').value;\n\tvar affectedItemCount = $('affected_item_count').value;\n\n\t// Get references to the two gui widgets you intend to enable/disable\n\tvar warningBox = $('conflictDetectionStatus');\n\tvar checkConflictsButton = $('conflict_action_run');\n\n\t// Case1: Basic Mode + Configuration Item + Planned Start Date + Planned End Date\n\tif (conflictMode == 'basic' && cmdbCi != '' && startDate != '' && endDate != '') {\n\t\twarningBox.hide();\n\t\tcheckConflictsButton.enable();\n\t\treturn true;\n\t}\n\n\t// Case2: Advanced Mode + Configuration Item + Planned Start Date + Planned End Date\n\tif (conflictMode == 'advanced' && cmdbCi != '' && startDate != '' && endDate != '') {\n\t\twarningBox.hide();\n\t\tcheckConflictsButton.enable();\n\t\treturn true;\n\t}\n\n\t// Case3: Advanced Mode + Affected Items + Planned Start Date + Planned End Date\n\tif (conflictMode == 'advanced' && parseInt(affectedItemCount) != 0 && startDate != '' && endDate != '') {\n\t\twarningBox.hide();\n\t\tcheckConflictsButton.enable();\n\t\treturn true;\n\t}\n\n\t// Default: Do not allow User to run conflict detection\n\twarningBox.show();\n\tcheckConflictsButton.disable();\n\treturn false;\n}\n\nfunction showProgressButton(boolValue) {\n\tif (boolValue) {\n\t\t$(\"conflict_run_state\").value = \"executing\";\n\t\t$(\"conflict_action_run\").innerHTML = new GwtMessage().getMessage(\"View Progress\");\n\t} else {\n\t\t$(\"conflict_run_state\").value = \"ready\";\n\t\t$(\"conflict_action_run\").innerHTML = new GwtMessage().getMessage(\"Check Conflicts\");\n\t}\n}\n\nfunction runBackgroundPoll(sysId) {\n\tif (sysId != \"\") {\n\t\tvar ga = new GlideAjax('ChangeConflictAJAXProcessor');\n\t\tga.addParam('sysparm_name', 'getTrackerRecord');\n\t\tga.addParam('sysparm_tracker_id', sysId);\n\t\tga.getXMLAnswer(function (answer){\n\t\t\treceiveMessage(answer.evalJSON());\n\t\t});\n\t}\n}\n\nfunction cancelConflictDetection(sysId) {\n\tif (sysId != \"\") {\n\t\tvar ga = new GlideAjax('ChangeConflictAJAXProcessor');\n\t\tga.addParam('sysparm_name', 'cancel');\n\t\tga.addParam('sysparm_tracker_id', sysId);\n\t\tga.getXML();\n\t}\n}\n\nfunction everyTenPercent(percent, handler) {\n\tthis.data = this.data || [false, false, false, false, false, false, false, false, false, false, false];\n\tvar slot = ((Math.round(percent / 10) * 10) / 10);\n\tif (this.data[slot])\n\t\treturn;\n\tthis.data[slot] = true;\n\thandler();\n}\n\nfunction refreshConflicts() {\n\tvar conflictLists = GlideList2.getListsForTable(\"conflict\");\n\tvar impactedCIs = GlideList2.get(g_form.getTableName() + '.task_cmdb_ci_service.task');\n\tconflictLists.push(impactedCIs);\n\tfor (var i = 0; i < conflictLists.length; ++i)\n\t\tif (conflictLists[i]) //Check that the list is valid before trying to refresh\n\t\t\tconflictLists[i].refresh();\n}\n\nfunction receiveMessage(tracker) {\n\t/**\n\t* 0 - Pending\n\t* 1 - Running\n\t* 2 - Successful\n\t* 3 - Failed\n\t* 4 - Cancelled\n\t*/\n\tif (tracker.state == 0 || tracker.state == 1) {\n\t\teveryTenPercent(tracker.percent_complete, refreshConflicts);\n\t\t$(\"conflict_status\").update(new GwtMessage().getMessage(\"{0}% completed\", tracker.percent_complete));\n\t\tsetTimeout(function() {\n\t\t\tthis.runBackgroundPoll($(\"tracker_id\").value);\n\t\t}, 2000);\n\t} else {\n\t\t$(\"tracker_id\").value = \"\";\n\t\tshowProgressButton(false);\n\n\t\tswitch (tracker.state - 0){\n\t\t\tcase 2:\n\t\t\t\trefreshConflicts();\n\t\t\t\tupdateConflictLastRun(tracker.timestamp);\n\t\t\t\tupdateConflictStatus(tracker.state - 0);\n\t\t\t\t$(\"conflict_status\").update(new GwtMessage().getMessage(\"Completed\"));\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\t\tdeleteConflicts(tracker);\n\t\t\t\tbreak;\n\t\t}\n\n\t\tsetTimeout(function() {\n\t\t\t$(\"conflict_status\").update(\"\");\n\t\t}, 5000);\n\t}\n}\n\nfunction deleteConflicts(trackerObj){\n\tif (trackerObj.state == 3)\n\t\t$(\"conflict_status\").update(new GwtMessage().getMessage(\"Failed\"));\n\n\tif (trackerObj.state == 4)\n\t\t$(\"conflict_status\").update(new GwtMessage().getMessage(\"Canceled\"));\n\n\tvar ga = new GlideAjax('ChangeConflictAJAXProcessor');\n\tga.addParam('sysparm_name', 'deleteConflicts');\n\tga.addParam('sysparm_sys_id', g_form.getUniqueValue());\n\tga.addParam('sysparm_tracker_id', trackerObj.sys_id);\n\tga.getXMLAnswer(function(answer){\n\t\trefreshConflicts();\n\t\tif (answer + \"\" !== \"NEWER_TRACKER_FOUND\") {\n\t\t\tupdateConflictLastRun(\"\");\n\t\t\tg_form.setValue('conflict_status', 'Not Run');\n\t\t}\n\t});\n}\n\nfunction updateConflictLastRun(timestamp) {\n\t// update the field which gets displayed when time displayed in 'calendar' or 'both' modes\n\tvar conflictLastRunCalendar = $('sys_readonly.' + g_form.getTableName() + '.conflict_last_run');\n\tif (conflictLastRunCalendar)\n\t\tconflictLastRunCalendar.setValue(timestamp);\n\n\t// update the field which gets displayed when time displayed in 'timeAgo' mode\n\tvar conflictLastRunTimeAgo = $(g_form.getTableName() + '.conflict_last_run.timeago');\n\tif (conflictLastRunTimeAgo)\n\t\tconflictLastRunTimeAgo.update(new GwtMessage().getMessage(\"Just now\"));\n}\n\nfunction updateConflictStatus(trackerState) {\n\tvar conflictLastRun = $('sys_readonly.' + g_form.getTableName() + '.conflict_last_run');\n\tvar ga = new GlideAjax(\"ChangeConflictAJAXProcessor\");\n\tga.addParam('sysparm_name', 'getConflictData');\n\tga.addParam('sysparm_change_id', g_form.getUniqueValue());\n\tga.getXML(function(message) {\n\t\tvar conflictInfo = message.responseXML.documentElement.getAttribute(\"answer\").evalJSON();\n\n\t\t// Do not update the form if the tracker is not finished\n\t\tif (trackerState === 0 || trackerState === 1)\n\t\t\treturn;\n\n\t\tif (conflictInfo.conflictCount === 0) {\n\t\t\tif (conflictLastRun == '')\n\t\t\t\tg_form.setValue('conflict_status', 'Not Run');\n\t\t\telse {\n\t\t\t\tg_form.setValue('conflict_status', 'No Conflict');\n\t\t\t\tupdateConflictLastRun(conflictInfo.timestamp);\n\t\t\t}\n\t\t} else {\n\t\t\tg_form.setValue('conflict_status', 'Conflict');\n\t\t\tupdateConflictLastRun(conflictInfo.timestamp);\n\t\t}\n\t});\n}","sys_class_name":"sys_ui_script","sys_id":"2b9b8efac35132001488b731c1d3ae8b","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/d00ba33304352210559073c06a02f77e","value":"d00ba33304352210559073c06a02f77e"},"ui_type":"0","sys_update_name":"sys_ui_script_2b9b8efac35132001488b731c1d3ae8b","sys_updated_by":"admin","sys_created_on":"2017-03-08 08:34:49","name":"ChangeRequestConflictUtils","sys_name":"ChangeRequestConflictUtils","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"0","active":"true","description":"Service meetingUtil","use_scoped_format":"false","global":"false","sys_updated_on":"2016-10-14 13:17:08","sys_tags":"","script_name":"vcom.meetingUtil","script":"(function () {\n\t'use strict';\n\n\tvar instances = {};\n\n\t/*\n\t * Meant to be used by meeting dashboard widgets and directives.\n\t * It provides managed access to meeting related data.\n\t *\n\t * Usage: var mtg = new meetingUtil(meetingId);\n\t *\n\t * APIs:-\n\t *\n\t * registerCurrentChangeWatcher(callback) - The callback will be invoked with change\n\t * of the current agenda. The callback will be called whenever the current agenda changes.\n\t *\n\t * registerCurrentAgendaWatcher(callback) - The callback will be invoked with the current\n\t * agenda. The callback will be called whenever the current agenda changes.\n\t *\n\t * getAgendaCount(callback) - The callback will be invoked periodically with the total agenda\n\t * count, pending agenda count, and the count of agenda by which the meeting is running ahead\n\t * in schedule. If meeting is just on schedule then the count will be zero. If it is running\n\t * behind schedule, say, by 2 agenda items, then it will return -2.\n\t *\n\t * registerMeetingChangeWatcher(callback) - The callback will be called with meeting data object\n\t * whenever meeting data is updated. The meeting data object will always contain the updated data.\n\t */\n\tangular.module('sn.itsm.vcab.common')\n\t.factory('meetingUtil', function (vcabDataSource, amb, Tables, dataUtil, $q, $timeout, $log) {\n\t\tfunction ListenerCollection() {\n\t\t\tvar list = [];\n\t\t\tthis.add = function (cb) {\n\t\t\t\tlist.push(cb);\n\t\t\t};\n\t\t\tthis.remove = function (cb) {\n\t\t\t\tlist.some(function (f, idx) {\n\t\t\t\t\tif (f === cb) {\n\t\t\t\t\t\tlist.splice(idx, 1);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\t\t\tthis.notify = function () {\n\t\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\t\tlist.forEach(function (cb) {\n\t\t\t\t\tcb.apply(undefined, args);\n\t\t\t\t});\n\t\t\t};\n\t\t}\n\n\t\tfunction watch(table, filter, cb) {\n\t\t\tvar ch = amb.getChannelRW(table, filter);\n\t\t\tch.subscribe(cb);\n\t\t\tamb.connect();\n\t\t}\n\n\t\tfunction patchObjWithChanges(obj, msg) {// Where msg is the object returned by record watcher.\n\t\t\tif (msg.data.operation === 'update') {\n\t\t\t\tfor (var i = 0; i < msg.data.changes.length; i++) {\n\t\t\t\t\tvar attr = msg.data.changes[i];\n\t\t\t\t\tangular.extend(obj[attr], msg.data.record[attr]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$log.error('patchObjWithChanges: Unsupported operation ' + msg.data.operation);\n\t\t\t}\n\t\t}\n\n\t\tfunction MeetingUtil(meetingId) {\n\t\t\tif (instances[meetingId])\n\t\t\t\treturn instances[meetingId];\n\n\t\t\tvar currChangeWatchers = new ListenerCollection();\n\t\t\tvar currAgendaWatchers = new ListenerCollection();\n\t\t\tvar agendaCountWatchers = new ListenerCollection();\n\t\t\tvar meetingWatchers = new ListenerCollection();\n\n\t\t\tvar currentChange;\n\t\t\tvar currentAgenda;\n\n\t\t\tvar meetingData;\n\t\t\tvar meetingTotalDuration; // In ms\n\t\t\tvar runningCount;\n\t\t\tvar lastRunningCount;\n\t\t\tvar totalAgendaCount;\n\t\t\tvar totalPendingAgendaCount;\n\n\t\t\tfunction onNewMeetingData(meeting, msg) {\n\t\t\t\tmeeting.start.js = dataUtil.wsToJsDate(meeting.start);\n\t\t\t\tmeeting.end.js = dataUtil.wsToJsDate(meeting.end);\n\t\t\t\tmeetingTotalDuration = meeting.end.js.getTime() - meeting.start.js.getTime();\n\t\t\t\trefreshRunningStatus();\n\t\t\t\tmeetingWatchers.notify(angular.extend({}, meeting), msg);\n\t\t\t}\n\n\t\t\tvcabDataSource.meeting.get(meetingId).then(function (meeting) {\n\t\t\t\tmeetingData = meeting;\n\t\t\t\tonNewMeetingData(meetingData);\n\n\t\t\t\twatch(Tables.MEETING, 'sys_id=' + meetingId, function (msg) {\n\t\t\t\t\tif (recalTimer)\n\t\t\t\t\t\t$timeout.cancel(recalTimer);\n\t\t\t\t\tpatchObjWithChanges(meetingData, msg);\n\t\t\t\t\tonNewMeetingData(meetingData, msg);\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tvar recalTimer;\n\t\t\tfunction recalRunningStatus(forceNotify) {\n\t\t\t\tvar timePerAgenda = meetingTotalDuration / totalAgendaCount;\n\t\t\t\tvar elapsedTime = dataUtil.dateNowAsPerUserProfile() - meetingData.start.js.getTime();\n\t\t\t\tvar howManyShouldHaveBeenDone = Math.floor(elapsedTime / timePerAgenda);\n\t\t\t\tvar howManyActuallyDone = totalAgendaCount - totalPendingAgendaCount - 1; // Removing the in-progress one\n\t\t\t\trunningCount = howManyActuallyDone - howManyShouldHaveBeenDone;\n\t\t\t\tif (runningCount !== lastRunningCount || forceNotify)\n\t\t\t\t\tagendaCountWatchers.notify(totalAgendaCount, totalPendingAgendaCount, runningCount);\n\t\t\t\tlastRunningCount = runningCount;\n\n\t\t\t\trecalTimer = $timeout(recalRunningStatus, 1000);\n\t\t\t}\n\n\t\t\tfunction refreshRunningStatus() {\n\t\t\t\t$q.all([\n\t\t\t        vcabDataSource.agenda.count('cab_meeting=' + meetingId),\n\t\t\t        vcabDataSource.agenda.count('state=pending^cab_meeting=' + meetingId)\n\t\t        ]).then(function (res) {\n\t\t        \ttotalAgendaCount = res[0];\n\t\t        \ttotalPendingAgendaCount = res[1];\n\t\t        \trecalRunningStatus(true);\n\t\t        });\n\t\t\t}\n\n\t\t\tfunction getCurrentAgendaAndNotify() {\n\t\t\t\tvcabDataSource.agenda.query('state=in_progress^cab_meeting=' + meetingId).then(function (agendas) {\n\t\t\t\t\tif (agendas.length > 0) { // It is expected that only one agenda will be in in_progress\n\t\t\t\t\t\trefreshAgenda(undefined, agendas[0]);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction refreshChange (agendaId) {\n\t\t\t\tvcabDataSource.change.getByAgendaId(agendaId).then(function (change) {\n\t\t\t\t\tcurrentChange = change;\n\t\t\t\t\tcurrChangeWatchers.notify(change);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction refreshAgenda (agendaId, agenda) {\n\t\t\t\tfunction processAgenda(agenda) {\n\t\t\t\t\tcurrentAgenda = agenda;\n\t\t\t\t\tcurrAgendaWatchers.notify(agenda);\n\n\t\t\t\t\trefreshChange(agenda.sys_id.value);\n\t\t\t\t}\n\t\t\t\tif (agenda)\n\t\t\t\t\tprocessAgenda(agenda);\n\t\t\t\telse\n\t\t\t\t\tvcabDataSource.agenda.get(agendaId).then(processAgenda);\n\t\t\t}\n\n\t\t\tgetCurrentAgendaAndNotify();\n\t\t\twatch(Tables.AGENDA, 'state=in_progress^cab_meeting=' + meetingId, function (msg) {\n\t\t\t\tvar sysId = msg.data.sys_id;\n\t\t\t\tif (msg.data.changes.indexOf('state') > -1) { // If other fields change then we don't care.\n\t\t\t\t\trefreshAgenda(sysId);\n\t\t\t\t\trefreshRunningStatus();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.registerCurrentChangeWatcher = function (cb) {\n\t\t\t\tcurrChangeWatchers.add(cb);\n\t\t\t\tif (currentChange)\n\t\t\t\t\tcb(currentChange);\n\n\t\t\t\treturn function () {\n\t\t\t\t\tcurrChangeWatchers.remove(cb);\n\t\t\t\t};\n\t\t\t};\n\n\t\t\tthis.registerCurrentAgendaWatcher = function (cb) {\n\t\t\t\tcurrAgendaWatchers.add(cb);\n\t\t\t\tif (currentAgenda)\n\t\t\t\t\tcb(currentAgenda);\n\n\t\t\t\treturn function () {\n\t\t\t\t\tcurrAgendaWatchers.remove(cb);\n\t\t\t\t};\n\t\t\t};\n\n\t\t\tthis.getAgendaCount = function (cb) {\n\t\t\t\tagendaCountWatchers.add(cb);\n\t\t\t\tif (typeof runningCount !== 'undefined')\n\t\t\t\t\tcb(totalAgendaCount, totalPendingAgendaCount, runningCount);\n\n\t\t\t\treturn function () {\n\t\t\t\t\tagendaCountWatchers.remove(cb);\n\t\t\t\t};\n\t\t\t};\n\n\t\t\tthis.registerMeetingChangeWatcher = function (cb) {\n\t\t\t\tmeetingWatchers.add(cb);\n\t\t\t\tif (meetingData)\n\t\t\t\t\tcb(angular.extend({}, meetingData));\n\n\t\t\t\treturn function () {\n\t\t\t\t\tmeetingWatchers.remove(cb);\n\t\t\t\t};\n\t\t\t};\n\n\t\t\tinstances[meetingId] = this;\n\t\t}\n\t\treturn MeetingUtil;\n\t});\n\n} ());","sys_class_name":"sys_ui_script","sys_id":"2bad5c18d722220034d145bcce610343","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"ui_type":"","sys_update_name":"sys_ui_script_2bad5c18d722220034d145bcce610343","sys_updated_by":"admin","sys_created_on":"2016-10-14 13:17:08","name":"sn_change_cab.vcom.meetingUtil","sys_name":"sn_change_cab.vcom.meetingUtil","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"2","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2023-03-20 12:38:34","sys_tags":"","script_name":"landing_sort","script":"var app = angular.module(\"sn.chg_model_ui.landing\");\napp.directive(\"snLandingSort\", function($window, urlTools, i18n, chgModelService) {\n    \"use strict\";\n    return {\n      replace : true,\n      restrict : \"E\",\n      templateUrl : urlTools.getPartialURL(\"sn_chg_model_ui_cmu_landing_sort.xml\", \"v=\" + $window.NOW.macro_flush_stamp),\n      link: function($scope) {\n        $scope.sortOptions = [];\n        $scope.sortOptions.push({\"label\": i18n.getMessage((\"Name\")), \"value\": \"name\"});\n        $scope.sortOptions.push({\"label\": i18n.getMessage((\"Most used\")), \"value\": \"most_used\" });\n        $scope.selectedSort = \"name\";\n      },\n      controller: function($scope) {\n        $scope.messages = {\n          \"Sort By\": i18n.getMessage(\"Sort by\")\n        };\n        $scope.setFilter = function() {\n          chgModelService.sortArray($scope.selectedSort);\n        };\n      }\n    };\n});\n","sys_class_name":"sys_ui_script","sys_id":"2c5cb5f7530310100999ddeeff7b128e","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/bb9f15345332101034d1ddeeff7b12c8","value":"bb9f15345332101034d1ddeeff7b12c8"},"ui_type":"0","sys_update_name":"sys_ui_script_2c5cb5f7530310100999ddeeff7b128e","sys_updated_by":"admin","sys_created_on":"2020-09-11 10:58:21","name":"sn_chg_model_ui.landing_sort","sys_name":"sn_chg_model_ui.landing_sort","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/bb9f15345332101034d1ddeeff7b12c8","value":"bb9f15345332101034d1ddeeff7b12c8"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"0","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2018-02-16 16:53:30","sys_tags":"","script_name":"landing_splash_screens","script":"/* Module for splash screens */\nangular.module(\"sn.chg_soc.landing_splash_screens\", [])\n.directive(\"snSplashScreens\", function(getTemplateUrl) {\n\t\"use strict\";\n\treturn {\n\t\treplace: true,\n\t\trestrict: \"E\",\n\t\ttemplateUrl: getTemplateUrl(\"sn_chg_soc_landing_splash_screens.xml\")\n\t};\n});\n","sys_class_name":"sys_ui_script","sys_id":"2d5aac4ac3d4130035ae3f52c1d3ae57","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"ui_type":"","sys_update_name":"sys_ui_script_2d5aac4ac3d4130035ae3f52c1d3ae57","sys_updated_by":"admin","sys_created_on":"2018-02-16 16:53:30","name":"sn_chg_soc.landing_splash_screens","sys_name":"sn_chg_soc.landing_splash_screens","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"0","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2018-02-05 14:37:42","sys_tags":"","script_name":"landing_sort","script":"var app = angular.module(\"sn.chg_soc.landing\");\napp.directive(\"snLandingSort\", function(getTemplateUrl, i18n, ScheduleService) {\n    \"use strict\";\n    return {\n      replace : true,\n      restrict : \"E\",\n      templateUrl : getTemplateUrl(\"sn_chg_soc_landing_sort.xml\"),\n      link: function($scope) {\n        $scope.sortOptions = [];\n        $scope.sortOptions.push({\"label\" : i18n.getMessage((\"Schedule Name\")), \"value\" : \"name\" });\n        $scope.sortOptions.push({\"label\" : i18n.getMessage((\"Owner\")), \"value\" : \"owner\"});\n        $scope.selectedSort = \"name\";\n      },\n      controller: function($scope) {\n        $scope.messages = {\n          \"Sort By\" : i18n.getMessage(\"Sort by\")\n        };\n        $scope.setFilter = function() {\n          ScheduleService.sortArray($scope.selectedSort);\n        };\n      }\n    };\n});\n","sys_class_name":"sys_ui_script","sys_id":"30c1679a5700130035ae4786cc94f9c9","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"ui_type":"","sys_update_name":"sys_ui_script_30c1679a5700130035ae4786cc94f9c9","sys_updated_by":"admin","sys_created_on":"2018-02-05 14:37:42","name":"sn_chg_soc.landing_sort","sys_name":"sn_chg_soc.landing_sort","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"28","active":"true","description":"Validates a function has been declared in the specified field for the specified function and validates client scripts do not contain \"gs.\" or \"current.\".","use_scoped_format":"false","global":"true","sys_updated_on":"2025-06-05 05:18:18","sys_tags":"","script_name":"","script":"function validateFunctionDeclaration(fieldName, functionName) {\n    var code = g_form.getValue(fieldName);\n    if (code == \"\")\n       return true;\n\n    code = removeCommentsFromClientScript(code);\n\n    /* create regular expression to find the function declaration based on the type of client script */\n    var patternString = \"function(\\\\s+)\" + functionName + \"((\\\\s+)|\\\\(|\\\\[\\r\\n])\";\n    var validatePattern = new RegExp(patternString);\n    \n    if (!validatePattern.test(code)) {\n       var msg = new GwtMessage().getMessage('Missing function declaration for') + ' ' + functionName;\n       g_form.showErrorBox(fieldName, msg);\n       return false;\n    }\n\n    return true;\n}\n\nfunction validateNoServerObjectsInClientScript(fieldName) {\n    var code = g_form.getValue(fieldName);\n    if (code == \"\")\n       return true;\n\n    code = removeCommentsFromClientScript(code);\n    \n    // take out the double quote strings, we do not want to check them\n    var doubleQuotePattern = /\"[^\"\\r\\n]*\"/g;\n    code = code.replace(doubleQuotePattern,\"\"); \n\n    // take out the single quote strings, we do not want to check them either\n    var singleQuotePattern = /'[^'\\r\\n]*'/g;\n    code = code.replace(singleQuotePattern,\"\");\n\n    var rc = true;\n\n    var gsPattern = /(\\s|\\W)gs\\./;\n    if (gsPattern.test(code)) {\n       var msg = new GwtMessage().getMessage('The object \"gs\" should not be used in client scripts.');\n       g_form.showErrorBox(fieldName, msg);\n       rc = false;\n    }\n\n    var currentPattern = /(\\s|\\W)current\\./;\n    if (currentPattern.test(code)) {\n       var msg = new GwtMessage().getMessage('The object \"current\" should not be used in client scripts.');\n       g_form.showErrorBox(fieldName, msg);\n       rc = false;\n    }\n\n    return rc;    \n}\n\nfunction validateUIScriptIIFEPattern(fieldName, scopeName, scriptName) {\n\t//For scoped-application UI Scripts, the scripts must follow our IIFE pattern.\n\tvar code = g_form.getValue(fieldName);\n\tvar rc = true;\n\tif(\"global\" == scopeName)\n\t\treturn rc;\n\t\n\tcode = removeCommentsFromClientScript(code);\n\tcode = removeSpacesFromClientScript(code);\n\tcode = removeNewlinesFromClientScript(code);\n\t\n\tvar requiredStart =  \"var\"+scopeName+\"=\"+scopeName+\"||{};\"+scopeName+\".\"+scriptName+\"=(function(){\\\"usestrict\\\";\";\n\tvar requiredEnd = \"})();\";\n\t\n\tif(!code.startsWith(requiredStart)) {\n\t\tvar msg = new GwtMessage().getMessage(\"Missing closure assignment.\");\n\t\tg_form.showErrorBox(fieldName,msg);\n\t\trc = false;\n\t}\n\t\n\tif(!code.endsWith(requiredEnd)) {\n\t\tvar msg = new GwtMessage().getMessage(\"Missing immediately-invoked function declaration end.\");\n\t\tg_form.showErrorBox(fieldName,msg);\n\t\trc = false;\n\t}\n\n\treturn rc;\n}\n\nfunction validateNotCallingFunction (fieldName, functionName) {\n\tvar code = g_form.getValue(fieldName);\n\tvar rc = true;\n\tvar reg = new RegExp(functionName, \"g\");\n\tvar matches;\n\t\n\tcode = removeCommentsFromClientScript(code);\n\t\n\tif (code == '')\n\t\treturn rc;\n\t\n\tmatches = code.match(reg);\n\trc = (matches && (matches.length == 1));\n\t\n\tif(!rc) {\n\t\tvar msg = \"Do not explicitly call the \" + functionName + \" function in your business rule. It will be called automatically at execution time.\";\n\t\tmsg = new GwtMessage().getMessage(msg);\n\t\tg_form.showErrorBox(fieldName,msg);\n\t}\n\t\n\treturn rc;\n}\n\n/* remove any comments whether \"C\" style or double slash to end of line */\nfunction removeCommentsFromClientScript(code) {\n    var pattern1 = /\\/\\*(.|[\\r\\n])*?\\*\\//g;\n    code = code.replace(pattern1,\"\"); \n    var pattern2 = /\\/\\/.*/g;\n    code = code.replace(pattern2,\"\");\n    return code;\n}\n\nfunction removeSpacesFromClientScript(code) {\n\tvar pattern = /\\s*/g;\n\treturn code.replace(pattern,\"\");\n}\n\nfunction removeNewlinesFromClientScript(code) {\n\tvar pattern = /[\\r\\n]*/g;\n\treturn code.replace(pattern,\"\");\n}","sys_class_name":"sys_ui_script","sys_id":"315ac89d0a0004df3d01614fd0c60efc","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/72532b7304312210559073c06a02f7c6","value":"72532b7304312210559073c06a02f7c6"},"ui_type":"0","sys_update_name":"sys_ui_script_315ac89d0a0004df3d01614fd0c60efc","sys_updated_by":"system","sys_created_on":"2010-09-20 22:56:01","name":"Validate Client Script Functions","sys_name":"Validate Client Script Functions","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"glide.maint","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"0","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2017-12-13 16:43:58","sys_tags":"","script_name":"sn_soc_now.scheduleService","script":"var app = angular.module(\"sn.chg_soc.landing\");\napp.constant(\"SOC\", {\n\t\"CHG_DEFINITIONS\" : \"/api/sn_chg_soc/soc/chgdefinitions\",\n\t\"USER_PREFERENCE_PINNED\" : \"com.snc.soc.landing_page.pinned_schedules\",\n\t\"KEYS\" : {\n\t\t\"TABKEY\"          : 9,\n\t\t\"ENTER\"           : 13,\n\t\t\"ESCAPE\"          : 27\n\t}\n});\napp.service(\"ScheduleService\", [ \"$window\", \"$http\", \"$q\", \"modelUtil\", \"userPreferences\", \"SOC\",\nfunction($window, $http, $q, modelUtil, userPreferences, SOC) {\n\tvar scheduleService = this;\n\tscheduleService.schedules = {};\n\n\tscheduleService.initialHit = function(filter, orderby, limit, textSearch) {\n\t\tvar offset = -1;\n\t\tscheduleService.schedules = {};\n\t\treturn scheduleService.getSchedules(filter, orderby, offset, limit, textSearch);\n\t};\n\n\tscheduleService.getSchedules = function(filter, orderBy, offset, limit, textSearch) {\n\t\tvar deferred = $q.defer();\n\t\ttextSearch = (!textSearch) ? \"\" : textSearch.trim();\n\t\tvar url = SOC.CHG_DEFINITIONS + \"?sysparm_ck=\" + $window.g_ck + \"&offset=\" + offset + \"&schedule_limit=\" + limit + \"&filter=\" + filter + \"&orderby=\" + orderBy + \"&text_search=\" + textSearch;\n\t\t$http.get(url).then(function(response) {\n\t\t\tupdateDataModel(response.data.result, filter);\n\t\t\tdeferred.resolve(response.data.result);\n\t\t}, function(response) {\n\t\t\tmodelUtil.failNicely(response);\n\t\t\tdeferred.reject(response);\n\t\t});\n\t\treturn deferred.promise;\n\t};\n\n\tscheduleService.setScheduleLimit = function(newLimit, filter) {\n\t\tscheduleService.schedules[filter].limit = parseInt(newLimit);\n\t\tif (!scheduleService.schedules[filter].limit || isNaN(scheduleService.schedules[filter].limit) || scheduleService.schedules[filter].limit > scheduleService.schedules[filter].maxLimit)\n\t\t\tscheduleService.schedules[filter].limit = scheduleService.schedules[filter].maxLimit;\n\t};\n\n\tscheduleService.showSplashMsg = function(filter) {\n\t\tif (!scheduleService.schedules.hasOwnProperty(\"__struct\"))\n\t\t\treturn false;\n\t\treturn scheduleService.schedules.__struct[filter].sysIds.length === 0;\n\t};\n\n\t// modifies the array, does not copy\n\tfunction togglePinned(pinnedArray, sysId) {\n\t\tif (!pinnedArray || !Array.isArray(pinnedArray) || !sysId)\n\t\t\treturn pinnedArray;\n\n\t\t// remove empty strings WITHOUT a copy of array i.e. do NOT pinnedArray.filter(pinnedSysId => pinnedSysId);\n\t\tvar len = pinnedArray.length;\n\t\tfor(var i = 0; i < len; i++ )\n\t\t\tpinnedArray[i] && pinnedArray.push(pinnedArray[i]);\n\n\t\tpinnedArray.splice(0 , len);\n\n\t\tvar index = pinnedArray.indexOf(sysId);\n\t\tif (index !== -1)\n\t\t\tpinnedArray.splice(index, 1);\n\t\telse\n\t\t\tpinnedArray.push(sysId);\n\n\t\treturn pinnedArray;\n\t}\n\n\tscheduleService.togglePinned = function(sysId) {\n\t\ttogglePinned(scheduleService.schedules.__struct['pinned'].sysIds, sysId);\n\n\t\tif (typeof $window.NOW.soc_schedules.pinned_schedules !== 'string')\n\t\t\t$window.NOW.soc_schedules.pinned_schedules = '';\n\n\t\tvar newUserPrefPinnedSchedules = togglePinned($window.NOW.soc_schedules.pinned_schedules.split(','), sysId).join(',');\n\t\tif (newUserPrefPinnedSchedules !== $window.NOW.soc_schedules.pinned_schedules) {\n\t\t\t$window.NOW.soc_schedules.pinned_schedules = newUserPrefPinnedSchedules;\n\t\t\tuserPreferences.setPreference(SOC.USER_PREFERENCE_PINNED, $window.NOW.soc_schedules.pinned_schedules);\n\t\t}\n\t};\n\n\tfunction updateDataModel(result, filter) {\n\t\tvar limit = 0;\n\t\tif (!scheduleService.schedules.chg_soc_definition) {\n\t\t\tscheduleService.schedules = result;\n\t\t\tlimit = scheduleService.schedules.__struct[filter].sysIds.length;\n\t\t}\n\t\telse {\n\t\t\tscheduleService.schedules.__struct[filter].__more = result.__more;\n\t\t\tresult.chg_soc_definition.forEach(function(chgDef) {\n\t\t\t\tvar chgDefId = chgDef.sys_id.value;\n\t\t\t\tscheduleService.schedules.chg_soc_definition[chgDefId] = chgDef;\n\t\t\t\tif (scheduleService.schedules.__struct[filter].sysIds.indexOf(chgDefId) === -1)\n\t\t\t\t\tscheduleService.schedules.__struct[filter].sysIds.push(chgDefId);\n\t\t\t});\n\t\t}\n\t\tscheduleService.schedules.__struct[filter].offset = scheduleService.schedules.__struct[filter].offset + scheduleService.schedules.__struct[filter].limit;\n\t}\n\n\tscheduleService.hasMoreSchedules = function(filter) {\n\t\treturn scheduleService.schedules.__struct[filter].__more;\n\t};\n\n\tscheduleService.hasReachedLimit = function(filter) {\n\t\treturn scheduleService.schedules.__struct[filter].sysIds.length >= scheduleService.schedules.__struct[filter].maxLimit;\n\t};\n\n\tfunction compareByName(a, b) {\n\t\tif (a.name.display_value < b.name.display_value)\n\t\t\treturn -1;\n\t\tif (a.name.display_value > b.name.display_value)\n\t\t\treturn 1;\n\t\treturn 0;\n\t}\n\n\tfunction sort(filter, sortBy) {\n\t\tvar arrToSort = [];\n\t\tscheduleService.schedules.__struct[filter].sysIds.forEach(function(key) {\n\t\t\tarrToSort.push(scheduleService.schedules.chg_soc_definition[key]);\n\t\t});\n\n\t\tif (sortBy === \"name\")\n\t\t\tarrToSort.sort(compareByName);\n\t\telse\n\t\t\tarrToSort.sort(function(a, b) {\n\t\t\t\tif (a.owner.display_value < b.owner.display_value)\n\t\t\t\t\treturn -1;\n\t\t\t\tif (a.owner.display_value > b.owner.display_value)\n\t\t\t\t\treturn 1;\n\t\t\t\treturn compareByName(a, b);\n\t\t\t});\n\t\tvar sysIds = [];\n\t\tarrToSort.forEach(function(obj) {\n\t\t\tsysIds.push(obj.sys_id.value);\n\t\t});\n\t\treturn sysIds;\n\t}\n\n\tscheduleService.sortArray = function(sortBy) {\n\t\tscheduleService.schedules.__struct[\"all\"].sysIds = sort(\"all\", sortBy);\n\t\tscheduleService.schedules.__struct[\"own_belong\"].sysIds = sort(\"own_belong\", sortBy);\n\t\tscheduleService.schedules.__struct[\"pinned\"].sysIds = sort(\"pinned\", sortBy);\n\t};\n}]);\n","sys_class_name":"sys_ui_script","sys_id":"31c8fd4557c70300afc34786cc94f9b5","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"ui_type":"","sys_update_name":"sys_ui_script_31c8fd4557c70300afc34786cc94f9b5","sys_updated_by":"admin","sys_created_on":"2017-12-13 16:43:58","name":"sn_chg_soc.sn_soc_now.scheduleService","sys_name":"sn_chg_soc.sn_soc_now.scheduleService","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"14","active":"true","description":"Angular loadWait service.","use_scoped_format":"false","global":"false","sys_updated_on":"2021-02-15 10:40:27","sys_tags":"","script_name":"loadWait","script":"angular.module(\"sn.change_management.cab.loadWait\", ['ui.bootstrap.modal'])\n.service(\"loadWait\",[\"$log\", function($log) {\n\tvar loadWait = this;\n\t\n\tvar loadWaitReg = {};\n\tvar recordNotFound = false;\n\t\n\tloadWait.isWaiting = function() {\n\t\treturn Object.keys(loadWaitReg).length > 0;\n\t};\n\t\n\tloadWait.getWaits = function() {\n\t\treturn loadWaitReg;\n\t};\n\t\n\tloadWait.register = function(key) {\n\t\tloadWaitReg[key] = true;\n\t};\n\t\n\tloadWait.unregister = function(key) {\n\t\tdelete loadWaitReg[key];\n\t};\n\t\n\tloadWait.clear = function() {\n\t\tloadWaitReg = {};\n\t};\n\n\tloadWait.recordNotFound = function() {\n\t\treturn recordNotFound;\n\t};\n\n\tloadWait.setRecordNotFound = function(value) {\n\t\trecordNotFound = value;\n\t};\n\n}])\n.directive(\"cabLoading\", [\"loadWait\", \"$uibModal\", \"$log\", function(loadWait, $uibModal, $log) {\n\treturn {\n\t\t\"restrict\": \"A\",\n\t\t\"scope\" : {},\n\t\t\"link\": function(scope, element) {\n\t\t\tvar modal = null;\n\t\t\tscope.loadWait = loadWait;\n\t\t\tscope.$watch(scope.loadWait.isWaiting, function(newValue) {\n\t\t\t\tif (modal !== null && newValue === true)\n\t\t\t\t\treturn;\n\t\t\t\t\n\t\t\t\tif (newValue === true) {\n\t\t\t\t\tmodal = $uibModal.open({\n\t\t\t\t\t\t\"animation\": false,\n\t\t\t\t\t\t\"backdrop\": \"static\",\n\t\t\t\t\t\t\"controller\": [function() {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}],\n\t\t\t\t\t\t\"scope\": scope,\n\t\t\t\t\t\t\"templateUrl\": \"cab-loading-dialog\"\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (modal !== null) {\n\t\t\t\t\tmodal.close();\n\t\t\t\t\tmodal = null;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n}]);","sys_class_name":"sys_ui_script","sys_id":"35b126bbc760001034d1f8d07a976359","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"ui_type":"0","sys_update_name":"sys_ui_script_35b126bbc760001034d1f8d07a976359","sys_updated_by":"admin","sys_created_on":"2019-10-24 10:56:32","name":"sn_change_cab.loadWait","sys_name":"sn_change_cab.loadWait","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"41","active":"true","description":"/* \r\n  http://techallica.com/kilo-bytes-per-second-vs-kilo-bits-per-second-kbps-vs-kbps/\r\n  256 kbps            31.3 KBps\r\n  384 kbps            46.9 KBps\r\n  512 kbps            62.5 KBps\r\n  768 kbps            93.8 KBps\r\n  1 mbps ~ 1000kbps   122.1 KBps\r\n*/","use_scoped_format":"false","global":"false","sys_updated_on":"2025-06-05 05:18:18","sys_tags":"","script_name":"","script":"var ConnectionTest = Class.create();\r\n\r\n// companion script to ui_select_list macro\r\nConnectionTest.prototype = {\r\n        LARGE_IMG: { src: \"images/speed_test_large.gifx\", size: \"171648\" },\r\n\r\n\tinitialize: function() {\r\n\t    this.runs = 6;\r\n            this.attempts = 0;\r\n            this.results = [];\r\n\t},\r\n\r\n        setRuns: function(runs) {\r\n            this.runs = runs;\r\n        },\r\n\r\n        run: function() {\r\n            var image = this.LARGE_IMG;\r\n\r\n            for(var i = 0; i < this.runs; i++) {\r\n                var imgUrl = image.src + \"?r=\" + Math.random();\r\n                var testImage = new Image();\r\n                var startTime = (new Date()).getTime();\r\n                var imageSize = image.size;\r\n                testImage.onload = this.addRunResult.bind(this, startTime, imageSize);\r\n                testImage.src = imgUrl;\r\n                testImage.alt = \"Test Connection\";\r\n            }\r\n        },\r\n\r\n        addRunResult: function(startTime, size) {\r\n            var endTime = (new Date()).getTime();\r\n            var runTime = endTime - startTime;\r\n            this.results.push({ time: runTime, size: size });\r\n\r\n            this.attempts++;\r\n\r\n            if (this.attempts == this.runs)\r\n                this.complete();\r\n        },\r\n\r\n        setComplete: function(func) {\r\n            this.oncomplete = func.bind(this);\r\n        },\r\n\r\n        complete: function() {\r\n            if (this.oncomplete)\r\n                this.oncomplete();\r\n        },\r\n\r\n        getResults: function() {\r\n            return this.results;\r\n        },\r\n\r\n\ttype: \"ConnectionTest\"\r\n}","sys_class_name":"sys_ui_script","sys_id":"35f6131d0a0a0b6600a5cfb5997cd3f7","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/72532b7304312210559073c06a02f7c6","value":"72532b7304312210559073c06a02f7c6"},"ui_type":"0","sys_update_name":"sys_ui_script_35f6131d0a0a0b6600a5cfb5997cd3f7","sys_updated_by":"system","sys_created_on":"2008-05-29 18:34:56","name":"ConnectionTest","sys_name":"ConnectionTest","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"glide.maint","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"61","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2024-12-16 08:27:31","sys_tags":"","script_name":"","script":"function GlideAjaxProxy(scriptName) {\n\tvar _params_ = {};\n\tvar scriptGr;\n\tvar response;\n\tvar glideAjaxDocument;\n\n\tthis.addParam = function(name, value) {\n\t\t_params_[name] = value;\n\t};\n\n\tthis.getXML = function(callback) {\n\t\tglideAjaxDocument = new GlideAjaxDocument();\n\t\t_execAjax_();\n\t\tvar xmlReponse = {\n\t\t\t// TBD\n\t\t\tresponseXML: {\n\t\t\t\tdocumentElement: {\n\t\t\t\t\tgetAttribute: function() {\n\t\t\t\t\t\tif (response == null || response == undefined) {\n\t\t\t\t\t\t\treturn response;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn response.toString();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tgetElementsByTagName: function(name) {\n\t\t\t\t\treturn glideAjaxDocument.getDocumentItemsByName(name);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tcallback(xmlReponse);\n\t\treturn xmlReponse;\n\t};\n\tthis.getXMLAnswer = function(callback) {\n\t\tglideAjaxDocument = new GlideAjaxDocument();\n\t\t_execAjax_();\n\t\tif (response != null) {\n\t\t\tcallback(response);\n\t\t}\n\t\treturn response;\n\t};\n\n\tthis.getAnswer = function() {\n\t\treturn response;\n\t};\n\n\tthis.setScope = function(scope) {\n\t\tthis.addParam('sysparm_scope', scope);\n\t\treturn this;\n\t}\n\n\tfunction __validateAPI__(scriptName) {\n\t\tvar gr = new GlideRecord('sys_script_include');\n\t\tgr.addQuery('client_callable', true);\n\t\tgr.addQuery('api_name', scriptName);\n\t\tgr.query();\n\t\treturn gr.hasNext();\n\t}\n\n\tfunction __getScriptInstantiation__(name) {\n\t\treturn new Script()\n\t\t\t.append('var scriptInstance = new ' + name + '();')\n\t\t\t.append('scriptInstance.getParameter = function(name) { return _ctx[name]; }')\n\t\t\t.append('scriptInstance.newItem = function(name) { return ajaxDocument.createNewItem(name); }')\n\t\t\t.build();\n\t}\n\n\tfunction __getContextInjection__() {\n\t\treturn new Script()\n\t\t\t.append('var _ctx = ' + JSON.stringify(_params_) + ';')\n\t\t\t.build();\n\t}\n\n\tfunction __getScriptMethodCall__() {\n\t\treturn new Script()\n\t\t\t.append('var __response__ = scriptInstance[\"' + _params_['sysparm_name'] + '\"].call(scriptInstance);')\n\t\t\t.append('answer = __response__;')\n\t\t\t.build();\n\t}\n\n\tfunction resolveScriptNameHelper(scriptName) {\n\t\tvar scopeAndName = scriptName.split(\".\");\n\t\tvar scope, name;\n\t\tif (scopeAndName.length > 1) {\n\t\t\tscope = scopeAndName[0];\n\t\t\tname = scopeAndName[1];\n\t\t} else if (scopeAndName.length === 1) {\n\t\t\tscope = scriptRecordScopeName || 'global';\n\t\t\tname = scopeAndName[0];\n\t\t}\n\n\t\treturn scope + '.' + name;\n\t}\n\n\t/* Forms a wrapper script that can be executed in the Rhino environment */\n\tfunction _execAjax_() {\n\t\tvar currentResponse = null;\n\t\ttry {\n\t\t\tvar sb = new Script();\n\t\t\tvar resolvedScriptName = resolveScriptNameHelper(scriptName);\n\t\t\t// 1. validate the script include with the given 'scriptName'\n\t\t\tif (__validateAPI__(resolvedScriptName)) {\n\t\t\t\t// 2. Feed the params to the SI, so that they are accessible via 'this.getParameter()'\n\t\t\t\tsb.append(__getContextInjection__(resolvedScriptName));\n\t\t\t\t// 3. Instantiate the script include\n\t\t\t\tsb.append(__getScriptInstantiation__(resolvedScriptName));\n\t\t\t\t// 4. Call the Script Include method (sysparm_name)\n\t\t\t\tsb.append(__getScriptMethodCall__());\n\t\t\t\tvar se = new ScriptExecutor(sb.build(), glideAjaxDocument);\n\t\t\t\tcurrentResponse = se.execute();\n\t\t\t}\n\t\t} catch (e) {\n\n\t\t}\n\t\tresponse = currentResponse;\n\t}\n}\n\nfunction GlideAjaxDocument() {\n\tvar documentItems = [];\n\n\tthis.createNewItem = function(name) {\n\t\tif (!name)\n\t\t\tname = \"item\";\n\t\tvar documentItem = new DocumentItem(name);\n\t\tdocumentItems.push(documentItem);\n\t\treturn documentItem;\n\t};\n\n\tthis.getDocumentItemsByName = function(name) {\n\t\tif (!name)\n\t\t\tname = \"item\";\n\t\tvar resultItems = [];\n\t\tdocumentItems.forEach(function(item) {\n\t\t\tif (item.getName() == name)\n\t\t\t\tresultItems.push(item);\n\t\t});\n\t\treturn resultItems;\n\t};\n\n\tfunction DocumentItem(itemName) {\n\t\tvar name = itemName;\n\t\tvar attributes = {};\n\n\t\tthis.setAttribute = function(key, value) {\n\t\t\tattributes[key] = value;\n\t\t};\n\n\t\tthis.getName = function() {\n\t\t\treturn name;\n\t\t};\n\n\t\tthis.getAttribute = function(key) {\n\t\t\treturn attributes[key];\n\t\t};\n\t}\n}\n\nfunction Script() {\n\tvar scriptPartials = [];\n\tthis.append = function(partial) {\n\t\tif (partial) {\n\t\t\tscriptPartials.push(partial);\n\t\t}\n\t\treturn this;\n\t};\n\n\tthis.newLine = function() {\n\t\tscriptPartials.append('\\n');\n\t};\n\n\tthis.run = function() {\n\t\treturn new ScriptExecutor(this.build()).execute();\n\t};\n\n\tthis.build = function() {\n\t\treturn scriptPartials.join('\\n\\n');\n\t};\n}\n\nfunction ScriptExecutor(script, glideAjaxDocument) {\n\tscript = script || '';\n\tthis.execute = function() {\n\t\ttry {\n\t\t\t// Wrap in IIFE ?\n\t\t\treturn __eval__(script, glideAjaxDocument);\n\t\t} catch (e) {\n\t\t\treturn {\n\t\t\t\tstatus: 'failure',\n\t\t\t\terror: e.message\n\t\t\t};\n\t\t}\n\t};\n\n\tfunction __eval__(script, glideAjaxDocument) {\n\t\tvar scriptGr = new GlideRecord('sys_ux_client_script_include');\n\t\tif (scriptGr.get('8d8b046a9fd00210a86b86e29a0a1c5a')) {\n\t\t\tscriptGr.setValue('script', script);\n\t\t\tscriptGr.setValue('sys_scope', scriptRecordScope);\n\t\t\treturn g_va_proxy_script_evaluator.executeClientScript(scriptGr, {'ajaxDocument': glideAjaxDocument});\n\t\t}\n\t}\n}\n\n// Initialise GlideAjax\ncsGlobals['GlideAjax'] = GlideAjaxProxy;","sys_class_name":"sys_ui_script","sys_id":"36ccf65b9ff33110a86b86e29a0a1cb4","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/4c8e6ff304752210559073c06a02f7c4","value":"4c8e6ff304752210559073c06a02f7c4"},"ui_type":"10","sys_update_name":"sys_ui_script_36ccf65b9ff33110a86b86e29a0a1cb4","sys_updated_by":"admin","sys_created_on":"2024-01-23 10:18:55","name":"global.GlideAjaxProxy","sys_name":"global.GlideAjaxProxy","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"43","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2024-08-12 10:09:22","sys_tags":"","script_name":"","script":"var mfa_option_selected='';\nvar intervalID = '';\n\nfunction onEnterKeySubmit(event) {\n\tif (event.keyCode === 13) {\n\t\tevent.preventDefault();\n\t\t// Trigger the button element with a click\n\t\tgel(\"sysverb_validate_mfa_code\").click();\n\t}\n}\n/** This section is for Remember browser feature */\nfunction computeFingerprintHash() {\n\treturn new Promise(function (resolve, reject) {\n\t\tvar options = {\n\t\t\texcludeAdBlock: true\n\t\t};\n\t\ttry {\n\t\t\tFingerprint2.get(options, function (components) {\n\t\t\t\tvar values = components.map(function (component) { return component.value });\n\t\t\t\tvar result = Fingerprint2.x64hash128(values.join(''), 31);\n\t\t\t\tvar nonceVal = gel('sysparm_process_nonce').value;\n\t\t\t\tsignFingerprintUsingDeviceNonce(result, nonceVal);\n\t\t\t\tresolve(true);\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tjslog(\"Error while computing browser fingerprint hash. \" + error);\n\t\t\treject(error);\n\t\t}\n\t});\n}\n\nfunction signFingerprintUsingDeviceNonce(fingerprintHashValue, nonceResponse) {\n\ttry {\n\t\tgel('bfp').value = fingerprintHashValue;\n\t\tvar fingerprintHmac = CryptoJS.HmacSHA256(fingerprintHashValue.toString(), nonceResponse);\n\t\tgel('bfp_hash').value = fingerprintHmac;\n\t} catch (error) {\n\t\tjslog(\"error while signing browser fingerprint hash. \" + error);\n\t}\n}\n\n/** This section is for FIDO validation */\nfunction initiateRegistration(type, nickname) {\n\tvar ajax = new GlideAjax(\"WebAuthentication\");\n\tajax.addParam(\"sysparm_name\", \"initiateRegistration\");\n\tajax.addParam(\"sysparm_nickname\", nickname);\n\tajax.addParam(\"sysparm_type\", type);\n\tajax.getXML(registerAutheticator.bind(this));\n\treturn;\n}\n\nfunction validateRegistrationResponse(response) {\n\tvar ajax = new GlideAjax(\"WebAuthentication\");\n\tajax.addParam(\"sysparm_name\", \"validateRegistrationResponse\");\n\tajax.addParam(\"sysparm_response\", JSON.stringify(response));\n\tajax.getXML(this.finishRegistration.bind(this));\n\treturn;\n}\n\nfunction finishRegistration(response) {\n\t//gel('sys_action').value ='sysverb_validate_mfa_code';\n\tgel('sys_mfa_check_remembered_browser').value='false';\n\tgel('sys_web_authn_registration_successful').value='true';\n\tgel('sys_web_authn_registration_skipped').value='false';\n\tvar res = response.responseXML.documentElement.getAttribute('answer');\n\tif(res == 'true'){\n\t\tdocument.forms[0].submit();\n\t}\n\tjslog(\"Finish Registration during MFA flow - Completed successfully? \" + res);\n}\n\n/** This section is for email validation */\nfunction sendMFAOTP(factor, resend) {\n\tmultifactorSendOneTimePasswordMaxRetryReached();\n\tCountDownTimer(factor);\n\tgel('sys_mfa_factor_validate').value =\"EMAIL\";\n\tsendOneTimePasswordToEmail(factor, resend);\n\tgel('output_messages').style.display = 'block';\n}\n\nfunction sendOneTimePasswordToEmail(factor, resend) {\n\tvar ajax = new GlideAjax(\"GlideOneTimePasswordGenerator\");\n    ajax.addParam(\"sysparm_name\", \"generateOneTimePasswordForEmailInSetupFlow\");\n\tajax.addParam(\"sysparm_factor\", factor);\n\tajax.addParam(\"sysparm_resend\", resend);\n    ajax.getXML(processSendOneTimePasswordToEmailResponse.bind(this));\n\treturn;\n}\n\nfunction processSendOneTimePasswordToEmailResponse(response) {\n    var results = response.responseXML.getElementsByTagName(\"result\"); \n\tGlideUI.get().clearOutputMessages();\n    if(results && results.length >0) {\n        var msg = results[0].getAttribute(\"msg\");\t\n        GlideUI.get().addOutputMessage({msg: msg, type: \"info\", id: null});\n    } else {\n        var msg = response.responseXML.documentElement.getAttribute(\"error\");\n        GlideUI.get().addOutputMessage({msg: msg, type: \"error\", id: null});\n    }\n}\n\nfunction multifactorSendOneTimePasswordMaxRetryReached () {\n\tvar ajax = new GlideAjax(\"GlideOneTimePasswordGenerator\");\n\tajax.addParam(\"sysparm_name\", \"isMaxRetryReached\");\n\tajax.getXMLAnswer(function(answer){\n\t\tif (!!(answer))\n\t\t\thideResendCode();\n\t\t\treturn;\n\t});\n}\n\nfunction CountDownTimer(factor) {\n\tif( factor == \"mfa_SMS_div\"){\n\t\tvar countdown_id  = \"countdown_sms\";\n\t\tvar resend_id = \"resend_sms\"\n\t}\n\telse if( factor == \"mfa_EMAIL_div\"){\n\t\tvar countdown_id = \"countdown_email\";\n\t\tvar resend_id = \"resend_email\"\n\t}\n\tgel(resend_id).style.pointerEvents=\"none\";\n\tvar countDownDate = new Date().getTime() + 30 * 1000;\n\tintervalID = setInterval(function() {\n\tvar current_time = new Date().getTime();\n\tvar time_left = countDownDate - current_time;\n\tvar seconds = Math.floor((time_left % (1000 * 60)) / 1000);\n\tdocument.getElementById(countdown_id).innerText = new GwtMessage().getMessage(\"in {0} seconds\", seconds);\n\tgel(resend_id).style.color = \"#666666\"\n\tif (0 > time_left) {\n\t\tclearInterval(intervalID);\n\t\tdocument.getElementById(countdown_id).innerText = '';\n\t\t$j('a[id^=\"resend\"]').removeAttr(\"style\");\n\t\t}\n\t}, 1000);\n}\n\nfunction validateEmailOtp() {\n\tvar userResponse = document.getElementById(\"txtResponse_email\").value;\n\tif(userResponse.length != 6 || isNaN(userResponse)) {\n\t\tshowError();\n\t\treturn;\n\t}\n\tif(mfa_option_selected) {\n\t\tdocument.cookie = \"factor=\"+ mfa_option_selected.split(\"_\")[1] + \";max-age=5\";\n\t\tgel('sys_mfa_factor_validate').value = mfa_option_selected.split(\"_\")[1];\n\t}\n\t\n\tdocument.forms[0].submit();\n}\n\nif(document.querySelector('#factor_radio_group')){\n\tdocument.querySelector('#factor_radio_group').addEventListener(\"change\", function() {\n\t\tif (!document.querySelector('input[type=radio][name=mfa_factor]:checked')) {\n\t\t\tgel(\"continue\").disabled = true;\n\t\t} else {\n\t\t\tgel(\"continue\").disabled = false;\n\t\t}\n\t});\n}\n\nfunction radioChange() {\n\tif (!document.querySelector('input[type=radio][name=mfa_factor]:checked')) {\n\t\tgel(\"continue\").disabled = true;\n\t} else {\n\t\tgel(\"continue\").disabled = false;\n\t}\n}\n\nfunction getFactorCookie(){\n\tvar match = document.cookie.match(new RegExp('(^| )' + \"factor\" + '=([^;]+)'));\n\tif (match) return match[2];\n\treturn \"\";\n}\n\nfunction hideResendCode() {\n\tclearInterval(intervalID);\n\t$j('strong[id^=\"countdown\"]').hide();\n\t$j('a[id^=\"resend\"]').hide();\n}","sys_class_name":"sys_ui_script","sys_id":"3715b366772402104bb41646ba5a999e","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/d7152f3304712210559073c06a02f70f","value":"d7152f3304712210559073c06a02f70f"},"ui_type":"0","sys_update_name":"sys_ui_script_3715b366772402104bb41646ba5a999e","sys_updated_by":"admin","sys_created_on":"2024-02-27 13:14:50","name":"MFAUtils","sys_name":"MFAUtils","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":"read"},{"ignore_in_now_experience":"false","sys_mod_count":"6","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2023-12-07 17:14:59","sys_tags":"","script_name":"","script":"var StdChgTemplateFilter = Class.create(GlideTemplateFilter, {\n\n    initialize: function(name, query, fDiv, runnable, synchronous, showOperators, callback, originalQuery) {\n        noSort = true;\n        query = query || \"\";\n        noGroup = true;\n        noConditionals = true;\n        useTextareas = true;\n        filterExpanded = true;\n        GlideFilter.prototype.initialize.call(this, name, query, fDiv, runnable, synchronous, callback, originalQuery);\n        this.usedFields = {};\n        this.protectedFields = {};\n        this.fieldName = null;\n        this.isTemplate = true;\n        this.applyTemplateAcls = true;\n        //fields to ignore. this should be passed in as an option, or ideally localized to each individual element handler like 'isTemplateable()' currently\n        var fieldTypesToIgnore = [\n            'variable_conditions',\n            'conditions',\n            'password',\n            'password2',\n            'encrypted_small',\n            'encrypted_extra_large',\n            'template_value',\n            'user_image'\n        ];\n        this.addFieldTypesToIgnore(fieldTypesToIgnore);\n        this.ignoreVariables(['variables', 'questions', 'sys_tags']);\n        this.opsWanted = false;\n    },\n\n    type: 'StdChgTemplateFilter'\n});","sys_class_name":"sys_ui_script","sys_id":"389b8a9c53833110935addeeff7b1205","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/b80be33304352210559073c06a02f76b","value":"b80be33304352210559073c06a02f76b"},"ui_type":"0","sys_update_name":"sys_ui_script_389b8a9c53833110935addeeff7b1205","sys_updated_by":"admin","sys_created_on":"2023-12-07 16:17:02","name":"StdChgTemplateFilter","sys_name":"StdChgTemplateFilter","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"0","active":"true","description":"Service getController.","use_scoped_format":"false","global":"false","sys_updated_on":"2016-10-14 13:14:42","sys_tags":"","script_name":"vcom.getController","script":"(function () {\n\t'use strict';\n\n\tvar instances = {};\n\n\tangular.module('sn.itsm.vcab.common')\n\t.factory('getController', function () {\n\t\tvar f = function (id) {\n\t\t\treturn instances[id];\n\t\t};\n\t\tf.register = function (id, ctrl) {\n\t\t\tinstances[id] = ctrl;\n\t\t};\n\t\tf.deregister = function (id) {\n\t\t\tinstances[id] = undefined;\n\t\t};\n\t\treturn f;\n\t});\n\n} ());","sys_class_name":"sys_ui_script","sys_id":"391dd818d722220034d145bcce610325","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"ui_type":"","sys_update_name":"sys_ui_script_391dd818d722220034d145bcce610325","sys_updated_by":"admin","sys_created_on":"2016-10-14 13:14:42","name":"sn_change_cab.vcom.getController","sys_name":"sn_change_cab.vcom.getController","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"419","active":"true","description":"SMS enrollment UI script","use_scoped_format":"false","global":"false","sys_updated_on":"2018-11-19 22:09:56","sys_tags":"","script_name":"","script":"// Get the user ID\nfunction getUserID() {\n\tvar user_id =  gel(\"userId\").value;\n\treturn user_id;\n}\n\n// call back for container on load\nfunction sms_on_load(formId) {\n\tvar currForm = document.getElementById(formId);\n\tvar verificationId = currForm.elements['verification_id'].value;\n\tgetProviders(currForm);\n\tgetDevices(currForm);\n}\n\n// call back for container on submit\nfunction sms_on_submit(formId) {\n\tvar currForm = document.getElementById(formId);\t\n\tif (!verifyAtleastOneDeviceIsSubscribed(null, currForm)) {\n\t\tdisplayErrorMessage(getMessage('You must authorize at least one device'));\n\t\treturn false;\n\t}\n\treturn true;\n}\n\n// get all service providers ajax call\nfunction getProviders(currentForm) {\n\tvar ga = new GlideAjax('PwdAjaxEnrollSMS');\n\tga.addParam('sysparm_name', 'getProviders');\n\tga.getXML(handleProviderResponse, null, currentForm);\n}\n\n// populate service provider dropdown options based on what's returned\nfunction handleProviderResponse(response, currentForm) {\n\tvar verificationId = currentForm.elements['verification_id'].value;\n\tvar providers = response.responseXML.getElementsByTagName(\"provider\");\n\tfor (var i = 0; i != providers.length; i++) {\n\t\tvar provider = providers[i];\n\t\tvar option = document.createElement(\"option\");\n\t\t\n\t\tif (Prototype.Browser.IE) {\n\t\t\toption.innerText = provider.getAttribute(\"name\");\n\t\t}\n\t\telse {\n\t\t\toption.text = provider.getAttribute(\"name\");\n\t\t}\n\t\toption.value = provider.getAttribute(\"sys_id\");\t\t\n\t\tvar select = currentForm.elements[\"sys_select.service_provider_\" + verificationId];\n\t\tselect.appendChild(option);\n\t}\n\tif (providers.length == 0) {\n\t\tvar msg = getMessage('There should be at least one active service provider');\n\t\tdisplayMessage(msg, currentForm);\n\t}\n}\n\n// Get the list of devices for the user\n// Subscription info is also received and ui is updated accordingly.\nfunction getDevices(currentForm) {\n\t// clean up first\n\tvar verificationId = currentForm.elements['verification_id'].value;\n\tclearAllDevices('sms_devices_' + verificationId);\n\tvar ga = new GlideAjax('PwdAjaxEnrollSMS');\n\tga.addParam('sysparm_name', 'getDevices');\n\tga.addParam('sysparm_user_id', getUserID());\n\tga.getXML(handleGetDevicesResponse, null, currentForm);\n}\n\n// remove all generated device details\nfunction clearAllDevices(element) {\n\tvar myNode = document.getElementById(element);\n\twhile (myNode.firstChild) {\n\t\tmyNode.removeChild(myNode.firstChild);\n\t}\n}\n\nfunction handleGetDevicesResponse(response, currentForm) {\n\tvar res =  response.responseXML.getElementsByTagName(\"response\");\n\tvar count = handleDeviceResponse(response, currentForm);\n\tif (count == 0) {\n\t\tdisplayHeader(getMessage('There is no device registered for this user'), currentForm);\n\t} else {\n\t\tdisplayHeader(getMessage('Available Devices'), currentForm);\n\t}\n\t\n\t// if there is no device checked, put a note\n\tverifyAtleastOneDeviceIsSubscribed(null, currentForm);\n}\n\n// Get the list of devices and add to the device list\nfunction handleDeviceResponse(response, currentForm) {\n\tvar devices = response.responseXML.getElementsByTagName(\"device\");\n\tif (devices.length > 0) {\n\t\t// If the table already exists, dont add again\n\t\tvar verificationId = currentForm.elements['verification_id'].value;\n\t\tvar table = document.getElementById('sms_device_table_' + verificationId);\n\t\tif (table == null) {\n\t\t\ttable = addDeviceHeaderRow(currentForm);\n\t\t}\n\t\tvar body = document.createElement('tbody');\n\t\ttable.appendChild(body);\n\t\tfor (var i = 0; i != devices.length; i++) {\n\t\t\taddDeviceDetailRow(devices[i], currentForm, body);\n\t\t}\n\t}\n\treturn devices.length;\n}\n\n// add device detail row - makes the checkbox, device name and the device verification fields\nfunction addDeviceHeaderRow(currentForm) {\n\tvar verificationId = currentForm.elements['verification_id'].value;\n\tvar divElem = document.getElementById('sms_devices_' + verificationId);\n\t\n\t// Create a table\n\tvar tableRow = document.createElement('table');\n\ttableRow.id = 'sms_device_table_' + verificationId;\n\tvar head = document.createElement('thead');\n\ttableRow.appendChild(head);\n\t\n\t// Create a table header\n\tvar tableHeaderRow = document.createElement('tr');\n\ttableHeaderRow.id = 'sms_device_table_header_' + verificationId;\n\thead.appendChild(tableHeaderRow);\n\t\n\t// Create the table header th tags\n\t// Column: Enrolled\n\tvar thCellUsed = document.createElement('th');\n\tthCellUsed.id = 'sms_device_table_th_used_' + verificationId;\n\tsetText(thCellUsed, 'Enrolled');\n\ttableHeaderRow.appendChild(thCellUsed);\n\t\n\t// Column: Empty title\n\tvar thCellDelete = document.createElement('th');\n\tthCellDelete.id = 'sms_device_table_th_delete_' + verificationId;\n\tsetText(thCellDelete, '');\n\ttableHeaderRow.appendChild(thCellDelete);\n\t\n\t// Column: Name\n\tvar thCellName = document.createElement('th');\n\tthCellName.id = 'sms_device_table_th_name_' + verificationId;\n\tsetText(thCellName, 'Name');\n\tthCellName.align='left';\n\ttableHeaderRow.appendChild(thCellName);\n\t\n\t// Column: Number\n\tvar thCellNumber = document.createElement('th');\n\tthCellNumber.id = 'sms_device_table_th_number_' + verificationId;\n\tsetText(thCellNumber, 'Number');\n\tthCellNumber.align = 'left';\n\ttableHeaderRow.appendChild(thCellNumber);\n\t\n\t// column: Provider\n\tvar thCellProvider = document.createElement('th');\n\tthCellProvider.id = 'sms_device_table_th_provider_' + verificationId;\n\tsetText(thCellProvider, 'Provider');\n\tthCellProvider.align = 'left';\n\ttableHeaderRow.appendChild(thCellProvider);\n\t\n\t// Column: Verified\n\tvar thCellVerified = document.createElement('th');\n\tthCellVerified.id = 'sms_device_table_th_verified_' + verificationId;\n\tsetText(thCellVerified, 'Verified');\n\ttableHeaderRow.appendChild(thCellVerified);\n\t\n\tdivElem.appendChild(tableRow);\n\treturn tableRow;\n}\n\n// add device detail row - makes the checkbox, device name and the device verification fields\nfunction addDeviceDetailRow(device, currentForm, body) {\n\tvar deviceId = device.getAttribute(\"sys_id\");\n\tvar verificationId = currentForm.elements['verification_id'].value;\n\tvar devicesElem = document.getElementById('sms_device_table_' + verificationId);\n\tvar deviceVerified = device.getAttribute(\"isVerified\") === 'true';\n\t\n\t// Create a table row\n\tvar deviceRow = document.createElement('tr');\n\tbody.appendChild(deviceRow);\n\t\n\t// Create a checkbox cell\n\tvar checkboxCell = document.createElement('td');\n\tcheckboxCell.align = 'center';\n\tdeviceRow.appendChild(checkboxCell);\n\t// Create the checkbox\n\tvar checkbox = document.createElement('input');\n\tcheckbox.className = 'device'; // Used by the tests\n\tcheckbox.type = 'checkbox'; // Used to lookup checkboxes in verifyAtleastOneDeviceIsSubscribed\n\t// Displayed to user in the message when selecting/unselecting a device\n\tcheckbox.name = device.getAttribute(\"name\") + ' (' + device.getAttribute(\"phone\") + ')';\n\tcheckbox.id = 'sms_device_checkbox_' + deviceId;\n\tcheckbox.value = deviceId; // The value is deviceId so we can use it later in updateSubscriptionToDevice\n\tcheckbox.onclick = function() { updateSubscriptionToDevice(this); };\n\tcheckbox.disabled = !deviceVerified;\n\tcheckboxCell.appendChild(checkbox);\n\tcheckbox.checked = device.getAttribute(\"isSubscribed\").toLowerCase() === 'true' && deviceVerified;\n\t\n\t// Delete device image\n\tvar deleteDeviceCell = document.createElement('td')\n\tdeleteDeviceCell.align = 'center';\n\tvar a = document.createElement('a');\n\ta.title = \"Delete device\";\n\ta.style.visibility = 'visible';\n\ta.onclick = function() { deleteDevice(this, currentForm); };\n\ta.id = 'sms_device_delete_link_' + deviceId;\n\t\n\tvar deleteDeviceImg = document.createElement(\"img\");\n\tdeleteDeviceImg.id = 'sms_device_delete_img' + deviceId;\n\tdeleteDeviceImg.src = 'images/icons/error_12x12.jpg';\n\ta.appendChild(deleteDeviceImg);\n\tdeleteDeviceCell.appendChild(a);\n\tdeviceRow.appendChild(deleteDeviceCell);\n\t\n\t// Device label cell\n\tvar deviceLabelCell = document.createElement('td');\n\tdeviceLabelCell.align = 'left';\n\tdeviceRow.appendChild(deviceLabelCell);\n\t\n\t// Device label\n\tvar deviceLabel = document.createElement(\"label\");\n\tdeviceLabel.id = 'sms_device_name_' + deviceId;\n\tsetText(deviceLabel, device.getAttribute(\"name\"));\n\tdeviceLabelCell.appendChild(deviceLabel);\n\t\n\t// Device phone number label cell\n\tvar devicePhoneLabelCell = document.createElement('td');\n\tdevicePhoneLabelCell.align = 'left';\n\tdeviceRow.appendChild(devicePhoneLabelCell);\n\t// Device phone number label\n\tvar devicePhoneLabel = document.createElement(\"label\");\n\tdevicePhoneLabel.id = 'sms_device_number_' + deviceId;\n\tsetText(devicePhoneLabel, device.getAttribute(\"phone\"));\n\tdevicePhoneLabelCell.appendChild(devicePhoneLabel);\n\t\n\t// Device provider\n\tvar deviceProviderCell = document.createElement('td');\n\tdeviceProviderCell.align = 'left';\n\tdeviceRow.appendChild(deviceProviderCell);\n\tvar deviceProvider = document.createElement(\"label\");\n\tdeviceProvider.id = 'sms_device_provider_' + deviceId;\n\tsetText(deviceProvider, device.getAttribute(\"provider\"));\n\tdeviceProviderCell.appendChild(deviceProvider);\n\t\n\t// Verification status cell\n\tvar verStatusCell = document.createElement('td');\n\tverStatusCell.align = 'center';\n\tdeviceRow.appendChild(verStatusCell);\n\t// Verification status image\n\tvar verStatusImg = document.createElement(\"img\");\n\tverStatusImg.id = 'sms_device_ver_status_' + deviceId;\n\t// clear = yes green; critical = no red icon\n\tverStatusImg.src = deviceVerified ? 'images/icon_clear.gifx' : 'images/icon_critical.gifx';\n\tverStatusCell.appendChild(verStatusImg);\n\t\n\t// if device is not verified, add the Verify button, code message, code textbox and ok button\n\tif (!deviceVerified) {\n\t\t// Verify button cell\n\t\tvar verifyButtonCell = document.createElement('td');\n\t\tdeviceRow.appendChild(verifyButtonCell);\n\t\t// Verify button\n\t\tvar verifyButton = document.createElement(\"input\");\n\t\tverifyButton.type = 'button';\n\t\tverifyButton.id = 'sms_device_verify_button_' + deviceId;\n\t\tverifyButton.value = 'Verify';\n\t\tverifyButton.style.whiteSpace = 'nowrap';\n\t\tverifyButton.onclick = function() { sendEnrollmentCodeToDevice(this); };\n\t\tverifyButtonCell.appendChild(verifyButton);\n\t\t\n\t\t// Verification code message label cell\n\t\tvar verCodeMsgCell = document.createElement('td');\n\t\tdeviceRow.appendChild(verCodeMsgCell);\n\t\t// Verification code message label\n\t\tvar verCodeMsg = document.createElement(\"label\");\n\t\tverCodeMsg.id = 'sms_device_ver_code_msg_' + deviceId;\n\t\tsetText(verCodeMsg, 'Enter code');\n\t\tverCodeMsg.style.whiteSpace = 'nowrap';\n\t\tverCodeMsgCell.appendChild(verCodeMsg);\n\t\t\n\t\t// Verification code textbox cell\n\t\tvar verCodeTextboxCell = document.createElement('td');\n\t\tdeviceRow.appendChild(verCodeTextboxCell);\n\t\t// Verification code textbox\n\t\tvar verCodeTextbox = document.createElement(\"input\");\n\t\tverCodeTextbox.name = device.getAttribute(\"name\");\n\t\tverCodeTextbox.id = 'sms_device_ver_code_' + deviceId;\n\t\tverCodeTextbox.size = '10';\n\t\tverCodeTextboxCell.appendChild(verCodeTextbox);\n\t\tverCodeMsg['for'] = verCodeTextbox.id;\n\t\t\n\t\t// Ok button cell\n\t\tvar okButtonCell = document.createElement('td');\n\t\tdeviceRow.appendChild(okButtonCell);\n\t\t// Ok button\n\t\tvar okButton = document.createElement(\"input\");\n\t\tokButton.type = 'button';\n\t\tokButton.id = 'sms_device_ok_button_' + deviceId;\n\t\tokButton.value = 'Ok';\n\t\tokButton.onclick = function() { verifyDeviceWithEnrollmentCode(this); };\n\t\tokButtonCell.appendChild(okButton);\n\t}\n}\n\n// Add a new device and subscription\nfunction  addNewDevice(elem) {\n\tvar currentForm = elem.form;\n\tvar verificationId = currentForm.elements['verification_id'].value;\n\tvar phone = currentForm.elements['sysparm_phone_number_' + verificationId].value.trim();\n\tvar name = currentForm.elements['sysparm_device_name_' + verificationId].value.trim();\n\tvar provider = currentForm.elements['service_provider_' + verificationId].value.trim();\n\t\n\tif (name == \"\") {\n\t\tvar divId = 'retype_device_name_' + verificationId;\n\t\tdisplayFieldError(divId, getMessage(\"Invalid device name\"));\n\t\treturn;\n\t}\n\n\tvar phoneBare = String(phone);\n\tphoneBare = phoneBare.replace(/\\D/g,''); // strip non-digits\n\tvar validLength = /^[0-9]{6,14}$/.test(phoneBare); // 6 - 14 digits\n\t\n\t//Must end with a digit, can begin with + or a digit, and may contain digit, - or space\n\tvar validPhone = /^[\\d|\\+][\\d|\\s|-]*[\\d]$/.test(phone);\n\t\n\tif (phone == \"\" || !validPhone || !validLength ) {\n\t\tvar divId = 'retype_phone_number_' + verificationId;\n\t\tdisplayFieldError(divId, getMessage(\"Invalid phone number\"));\n\t\treturn;\n\t}\n\tif (provider == null || provider == 0) {\n\t\tvar divId = 'select_service_provider_again_' + verificationId;\n\t\tdisplayFieldError(divId, getMessage(\"Select provider\"));\n\t\treturn;\n\t}\n\t\n\tvar ga = new GlideAjax('PwdAjaxEnrollSMS');\n\tga.addParam('sysparm_name', 'addDevice');\n\tga.addParam('sysparm_user_id', getUserID());\n\tga.addParam('sysparm_phone_number', phone);\n\tga.addParam('sysparm_device_name', name);\n\tga.addParam('sysparm_service_provider', provider);\n\tga.getXML(handleAddDeviceResponse, null, currentForm);\n}\n\nfunction handleAddDeviceResponse(response, currentForm) {\n\tvar verificationId = currentForm.elements['verification_id'].value;\n\t\n\tvar res =  response.responseXML.getElementsByTagName(\"response\");\n\tvar status = res[0].getAttribute(\"status\");\n\tvar message = res[0].getAttribute(\"message\");\n\tvar value = res[0].getAttribute(\"value\");\n\t\n\tclearAllDevices('sms_devices_' + verificationId);\n\thandleDeviceResponse(response, currentForm);\n\t\n\t// if added clear up the input field. It's already added.\n\tif (status == 'success') {\n\t\tcurrentForm.elements['sysparm_phone_number_' + verificationId].value = '';\n\t\tcurrentForm.elements['sysparm_device_name_' + verificationId].value = '';\n\t\tdisplayHeader(getMessage('Available Devices'), currentForm);\n\t}\n\t\n\t// the device info for newly added phones\n\tdisplayMessage(message, currentForm);\n}\n\n// Update subscription of a device, represented by the checkbox.\nfunction updateSubscriptionToDevice(box) {\n\tif (!verifyAtleastOneDeviceIsSubscribed(box, box.form))\n\t\treturn;\n\tvar ga = new GlideAjax('PwdAjaxEnrollSMS');\n\tga.addParam('sysparm_name', 'updateDeviceSubscription');\n\tga.addParam('sysparm_user_id', getUserID());\n\tga.addParam('sysparm_device_id', box.value);\n\tga.addParam('sysparm_device_name', box.name);\n\tga.addParam('sysparm_subscribed', box.checked);\n\t\n\tga.getXML(handleUpdateDeviceSubscriptionResponse, null, box.form);\n}\n\nfunction handleUpdateDeviceSubscriptionResponse(response, currentForm) {\n\thandleResponseAndShowMessage(response, currentForm);\n}\n\n// Verify if there is at least one device selected\n// If not, give a message. Do not allow the last one to be unselected.\n// Returns if atleast one device is selected or not\nfunction verifyAtleastOneDeviceIsSubscribed(box, currentForm) {\n\tvar verificationId = currentForm.elements['verification_id'].value;\n\tvar divElem = document.getElementById('sms_devices_' + verificationId);\n\tvar checkboxElems = divElem.getElementsByTagName('input');\n\tvar foundCheckedDevice = false;\n\t\n\t// if at least one is checked, we are good.\n\tfor (var i = 0; i != checkboxElems.length; i++) {\n\t\tif (checkboxElems[i].type != 'checkbox') {\n\t\t\tcontinue;\n\t\t}\n\t\tif (checkboxElems[i].checked) {\n\t\t\tfoundCheckedDevice = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (foundCheckedDevice) {\n\t\tdisplayMessage(\"\", currentForm);\n\t\treturn true;\n\t} else {\n\t\tdisplayMessage(getMessage('You must authorize at least one device'), currentForm);\n\t\tif (box != null)\n\t\t\tbox.checked = true;\n\t\treturn false;\n\t}\n}\n\nfunction deleteDevice(deleteItem, currentForm) {\n\tvar itemId = deleteItem.id;\n\t// Extract deviceId from the buttonId. ButtonId is sms_device_verify_button_ + deviceId\n\tvar deviceId = itemId.replace('sms_device_delete_link_', '');\n\tvar verificationId = currentForm.elements['verification_id'].value;\n\tvar box  = currentForm.elements['sms_device_checkbox_' + deviceId];\n\tvar deviceName = document.getElementById('sms_device_name_' + deviceId).innerHTML;\n\t\n\t// make sure we are not deleting the last checked device.\n\tvar enrolled = box.checked;\n\tbox.checked = false;\n\tif (enrolled && !verifyAtleastOneDeviceIsSubscribed(box, currentForm)) {\n\t\tbox.checked = enrolled;\n\t\treturn;\n\t}\n\t\n\tvar dd = new GlideDialogWindow(\"glide_confirm_basic\");\n\tdd.setTitle(new GwtMessage().getMessage('Confirm deletion for device: {0}', deviceName));\n\tdd.setPreference('onPromptComplete', function() {\n\t\t// clean up first\n\t\tclearAllDevices('sms_devices_' + verificationId);\n\t\t// get the result back\n\t\tvar ga = new GlideAjax('PwdAjaxEnrollSMS');\n\t\tga.addParam('sysparm_name', 'deleteDevice');\n\t\tga.addParam('sysparm_device_id', deviceId);\n\t\tga.addParam('sysparm_user_id', getUserID());\n\t\tga.getXML(handleDeleteDeviceResponse, null, currentForm);\n\t\t\n\t});\n\tdd.setPreference('onPromptCancel', function() {});\n\tdd.setWidth(200);\n\tdd.render();\n\t\n}\n\nfunction handleDeleteDeviceResponse(response, currentForm) {\n\tvar res =  response.responseXML.getElementsByTagName(\"response\");\n\tvar message = res[0].getAttribute(\"message\");\n\tdisplayMessage(message, currentForm);\n\thandleDeviceResponse(response, currentForm);\n}\n// Send a code to the device for verifying it\nfunction sendEnrollmentCodeToDevice(verifyButton) {\n\tvar buttonId = verifyButton.id;\n\t// Extract deviceId from the buttonId. ButtonId is sms_device_verify_button_ + deviceId\n\tvar deviceId = buttonId.replace('sms_device_verify_button_', '');\n\tvar currentForm = verifyButton.form;\n\tvar verificationId = currentForm.elements['verification_id'].value;\n\t\n\tvar ga = new GlideAjax('PwdAjaxSMSProcessor');\n\tga.addParam('sysparm_name', 'generateEnrollmentCode');\n\tga.addParam('sysparm_verification_id', verificationId);\n\tga.addParam('sysparm_device_id', deviceId);\t\n\tga.getXML(handledEnrollmentCodeResponse, null, currentForm);\n}\n\n// after the enrollment code is sent to the device, show success msg\nfunction handledEnrollmentCodeResponse(response, currentForm) {\n\thandleResponseAndShowMessage(response, currentForm);\n\tvar res =  response.responseXML.getElementsByTagName(\"response\");\n\tvar status = res[0].getAttribute(\"status\");\n\tif (status == 'fail') {\n\t\treturn;\n\t}\n\tvar deviceId = res[0].getAttribute(\"value\");\n\tdocument.getElementById('sms_device_ver_status_' + deviceId).src = 'images/icon_warning.gifx';\n}\n\n// Verify if the code entered matches the code sent to verify the device\nfunction verifyDeviceWithEnrollmentCode(okButton) {\n\tvar buttonId = okButton.id;\n\t// Extract deviceId from the buttonId. ButtonId is sms_device_ok_button_ + deviceId\n\tvar deviceId = buttonId.replace('sms_device_ok_button_', '');\n\tvar currentForm = okButton.form;\n\tvar verificationId = currentForm.elements['verification_id'].value;\n\t\n\tvar ga = new GlideAjax('PwdAjaxSMSProcessor');\n\tga.addParam('sysparm_name', 'verifyEnrollmentCode');\n\tvar code = currentForm.elements['sms_device_ver_code_' + deviceId].value;\n\tga.addParam('sysparm_device_id', deviceId);\n\tga.addParam('sysparm_verification_id', verificationId);\n\tga.addParam('sysparm_sms_code', code);\n\tga.addParam('sysparm_user_id', getUserID());\n\t\n\tga.getXML(handledEnrollmentVerifyResponse, null, currentForm);\n}\n\n// after the enrollment code is verified, update UI to remove verification related fields\nfunction handledEnrollmentVerifyResponse(response, currentForm) {\n\thandleResponseAndShowMessage(response, currentForm);\n\tvar res =  response.responseXML.getElementsByTagName(\"response\");\n\tvar status = res[0].getAttribute(\"status\");\n\tif (status == 'fail') {\n\t\treturn;\n\t}\n\t\n\tvar deviceId = res[0].getAttribute(\"value\");\n\t// Remove the verification fields\n\tcurrentForm.elements['sms_device_verify_button_' + deviceId].style.display = \"none\";\n\tdocument.getElementById('sms_device_ver_code_msg_' + deviceId).style.display = \"none\";\n\tcurrentForm.elements['sms_device_ver_code_' + deviceId].style.display = \"none\";\n\tcurrentForm.elements['sms_device_ok_button_' + deviceId].style.display = \"none\";\n\t\n\t// Update the device verification status, enable the checkbox and also select it\n\t// select green yes icon\n\tdocument.getElementById('sms_device_ver_status_' + deviceId).src = 'images/icon_clear.gifx';\n\tcurrentForm.elements['sms_device_checkbox_' + deviceId].disabled = false;\n\tcurrentForm.elements['sms_device_checkbox_' + deviceId].checked = true;\n}\n\nfunction handleResponseAndShowMessage(response, currentForm) {\n\tvar res =  response.responseXML.getElementsByTagName(\"response\");\n\tvar message = res[0].getAttribute(\"message\");\n\tdisplayMessage(message, currentForm);\n}\n\n// Display the message to the user for an ajax action\nfunction displayMessage(msg, currentForm) {\n\tvar verificationId = currentForm.elements['verification_id'].value;\n\tvar divElem = document.getElementById('device_msg_' + verificationId);\n\tdisplayHelper(divElem, msg);\n}\n\nfunction displayHeader(msg, currentForm) {\n\tvar verificationId = currentForm.elements['verification_id'].value;\n\tvar divElem = document.getElementById('steps_header_' + verificationId);\n\tdisplayHelper(divElem, msg);\n}\n\nfunction displayHelper(elem, msg) {\n\tvar oldNode = elem.firstChild;\n\tvar newNode = document.createTextNode(msg);\n\tif (oldNode == null) {\n\t\telem.appendChild(newNode);\n\t}else {\n\t\telem.replaceChild(newNode, oldNode);\n\t}\n\t\n}\nfunction setText(elem, txt){\n\tvar node = document.createTextNode(txt);\n\telem.appendChild(node);\n}\n\nfunction errorImage() {\n\treturn '<img src=\"images/outputmsg_error.gifx\" alt=\"Error Message\" />';\n}\nfunction displayFieldError(fieldId, message) {\n\tvar fieldElem = document.getElementById(fieldId);\n\tif (fieldElem != undefined) {\n\t\tfieldElem.innerHTML = errorImage() + message;\n\t\tfieldElem.style.display = 'inline';\n\t}\n}\n\nfunction clearFieldError(fieldId) {\n\tvar fieldElem = document.getElementById(fieldId);\n\tif (fieldElem != undefined) {\n\t\tfieldElem.innerHTML = '';\n\t\tfieldElem.style.display = 'none';\n\t}\n}","sys_class_name":"sys_ui_script","sys_id":"3a2e8bedeb7001006a668c505206fe52","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/421beb3304352210559073c06a02f7ef","value":"421beb3304352210559073c06a02f7ef"},"ui_type":"0","sys_update_name":"sys_ui_script_3a2e8bedeb7001006a668c505206fe52","sys_updated_by":"admin","sys_created_on":"2013-04-17 22:24:36","name":"pwd_enroll_sms_ui","sys_name":"pwd_enroll_sms_ui","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":"read"},{"ignore_in_now_experience":"false","sys_mod_count":"7","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2024-09-23 13:32:35","sys_tags":"","script_name":"landing.app","script":"var app = angular.module(\"sn.chg_soc.landing\",\n    [\"sn.common\",\n    \"sn.common.glide\",\n    \"sn.app_common\",\n    \"ui.bootstrap\",\n    \"ngAnimate\",\n    \"sn.app_itsm.now.filter\",\n    \"sn.app_itsm.now.accessibility\",\n    \"sn.app_itsm.now.iscroll\",\n    \"sn.chg_soc.tooltip_overflow\",\n    \"sn.chg_soc.landing_wizard\",\n    \"sn.chg_soc.landing_splash_screens\",\n    \"sn.chg_soc.notification\"\n    ]);\napp.controller(\"ScheduleSoCController\", [\"$scope\", \"$window\", \"userPreferences\", \"getTemplateUrl\", \"i18n\", \"$timeout\", \"$filter\", \"snConnectService\", \"ScheduleService\", \"TextSearchService\", \"HighlightService\", \"SOC\",\nfunction ($scope, $window, userPreferences, getTemplateUrl, i18n, $timeout, $filter, snConnectService, ScheduleService, TextSearchService, HighlightService, SOC) {\n\n    var scheduleSoCCtrl = this;\n    var userPreferenceScheduleFilter = \"com.snc.soc.landing_page.schedule_filter\";\n    var debouceTimeout;\n\n    scheduleSoCCtrl.isRTL = angular.element(\"html\").hasClass(\"rtl\");\n    scheduleSoCCtrl.showSchedules = false;\n    scheduleSoCCtrl.textSearchReadOnly = true;\n    scheduleSoCCtrl.textSearch = \"\";\n    scheduleSoCCtrl.scheduleOffset = 0;\n    scheduleSoCCtrl.limitReached = false;\n    scheduleSoCCtrl.showSchedulePinnedMsg = false;\n    scheduleSoCCtrl.loading = true;\n    scheduleSoCCtrl.searching = false;\n    scheduleSoCCtrl.canCreateSchedule = ($window.NOW.soc_schedules.canCreate === \"true\");\n\n    scheduleSoCCtrl.filter = $window.NOW.soc_schedules.schedule_filter || \"pinned\";\n    scheduleSoCCtrl.userID = $window.NOW.user_id;\n    scheduleSoCCtrl.limit = parseInt($window.NOW.soc_schedules.schedule_limit || \"40\");\n    scheduleSoCCtrl.maxSchedules = parseInt($window.NOW.soc_schedules.max_schedules || \"300\");\n    scheduleSoCCtrl.notificationTimeout = parseInt($window.NOW.soc_schedules.notification_timeout || \"4000\");\n    scheduleSoCCtrl.isChatEnabled = ($window.NOW.soc_schedules.chat_enabled === \"true\");\n    scheduleSoCCtrl.isAccessibilityEnabled = ($window.NOW.soc_schedules.isAccessibilityEnabled === \"true\");\n    scheduleSoCCtrl.showPinnedNotification = ($window.NOW.soc_schedules.pinned_notification === \"true\");\n\n    $scope.$on(\"textSearch\", function(event, textSearch) {\n        scheduleSoCCtrl.textSearch = textSearch;\n        scheduleSoCCtrl.searching = true;\n        if (debouceTimeout)\n            $timeout.cancel(debouceTimeout);\n        debouceTimeout = $timeout(function() {\n            _reset();\n        }, 1000);\n    });\n\n    $scope.$watch(\"selectedSort\", function(newValue, oldValue) {\n        if (!newValue || !oldValue)\n            return;\n        _reset();\n    });\n\n    function _isFiltered() {\n        return scheduleSoCCtrl.textSearch.trim() !== \"\";\n    }\n\n    $scope.isLoading = function() {\n        return scheduleSoCCtrl.loading;\n    };\n\n    scheduleSoCCtrl.isSearching = function() {\n        return scheduleSoCCtrl.searching;\n    };\n\n\tscheduleSoCCtrl.pinMessage = function(schedule) {\n\t\tif (scheduleSoCCtrl.isPinned(schedule.sys_id.value))\n\t\t\treturn i18n.format(scheduleSoCCtrl.form.unpinSchedule, {name: schedule.name.display_value});\n\t\treturn i18n.format(scheduleSoCCtrl.form.pinSchedule, {name: schedule.name.display_value});\n\t};\n\n\tfunction _showPinnedNotification(schedule) {\n\t\tif (!schedule || !schedule.sys_id || !schedule.name || !scheduleSoCCtrl.showPinnedNotification)\n\t\t\treturn;\n\n\t\tvar msg = scheduleSoCCtrl.isPinned(schedule.sys_id.value) ? scheduleSoCCtrl.form.addTo : scheduleSoCCtrl.form.removeFrom;\n\n\t\tscheduleSoCCtrl.form.schedulePinnedMsg = i18n.format(msg, {\n\t\t\tname: schedule.name.display_value,\n\t\t\tyourPinned: scheduleSoCCtrl.form.pinned.title\n\t\t});\n\n\t\tscheduleSoCCtrl.showSchedulePinnedMsg = true;\n\n\t\t$timeout(function() {\n\t\t\tscheduleSoCCtrl.showSchedulePinnedMsg = false;\n\t\t}, scheduleSoCCtrl.notificationTimeout);\n\n\t}\n\n    function _splashScreenVisibility() {\n        scheduleSoCCtrl.showSplashMsg = ScheduleService.showSplashMsg(scheduleSoCCtrl.filter) && !_isFiltered();\n        scheduleSoCCtrl.textSearchReadOnly = scheduleSoCCtrl.showSplashMsg;\n        scheduleSoCCtrl.showSchedules = !scheduleSoCCtrl.showSplashMsg;\n    }\n\n    scheduleSoCCtrl.getTitle = function() {\n        return scheduleSoCCtrl.form[scheduleSoCCtrl.filter].title || \"\";\n    };\n    scheduleSoCCtrl.getDescription = function() {\n        return scheduleSoCCtrl.form[scheduleSoCCtrl.filter].description || \"\";\n    };\n    scheduleSoCCtrl.getInstruction = function() {\n        return scheduleSoCCtrl.form[scheduleSoCCtrl.filter].instruction || \"\";\n    };\n\n    scheduleSoCCtrl.getProfile = function(userSysId) {\n        if (!ScheduleService.schedules.hasOwnProperty(\"__struct\"))\n            return;\n        return ScheduleService.schedules.__profile[userSysId];\n    };\n\n    scheduleSoCCtrl.getSummary = function (scheduleObj) {\n        return scheduleObj.owner.display_value ? scheduleSoCCtrl.form.owner : scheduleSoCCtrl.form.groupOwner;\n    };\n\n    scheduleSoCCtrl.highlight = function (text, search) {\n        return HighlightService.highlight(text, search, \"soc-search-highlight\");\n    };\n\n    scheduleSoCCtrl.foundSchedules = function () {\n        var filteredSchedules = TextSearchService.getFilteredArray(scheduleSoCCtrl.getScheduleArray(), scheduleSoCCtrl.textSearch);\n        return scheduleSoCCtrl.initialLoad || (_isFiltered() && filteredSchedules && filteredSchedules.length > 0);\n    };\n\n    scheduleSoCCtrl.showNoResultsFound = function() {\n        if (!_isFiltered())\n            return false;\n        return !scheduleSoCCtrl.foundSchedules() && !scheduleSoCCtrl.isSearching() && !$scope.isLoading() && !scheduleSoCCtrl.showSplashMsg;\n    };\n\n    scheduleSoCCtrl.isPinned = function (sysId) {\n        if (!ScheduleService.schedules.hasOwnProperty(\"__struct\"))\n            return false;\n        return ScheduleService.schedules.__struct[\"pinned\"].sysIds.indexOf(sysId) !== -1;\n    };\n\n    scheduleSoCCtrl.isDisabled = function() {\n        if (!ScheduleService.schedules || !ScheduleService.schedules.__struct || $scope.isLoading())\n            return true;\n        return ScheduleService.schedules.__struct[scheduleSoCCtrl.filter].sysIds.length === 0 && !_isFiltered();\n    };\n\n    scheduleSoCCtrl.togglePinned = function ($event, schedule) {\n\t\t$event.stopPropagation();\n\t\t$event.preventDefault();\n\n        if (!schedule || !schedule.sys_id)\n            return;\n\n        ScheduleService.togglePinned(schedule.sys_id.value, scheduleSoCCtrl.isPinned(schedule.sys_id.value));\n        _showPinnedNotification(schedule);\n        _splashScreenVisibility();\n    };\n\n    scheduleSoCCtrl.immediateCheck = function () {\n        if (!ScheduleService.schedules.hasOwnProperty(\"__struct\"))\n            return false;\n        return ScheduleService.hasMoreSchedules(scheduleSoCCtrl.filter);\n    };\n\n    scheduleSoCCtrl.getOrderBy = function() {\n        if (!$scope.selectedSort)\n            return \"name\";\n        return $scope.selectedSort;\n    };\n\n    scheduleSoCCtrl.filterBy = function (filter) {\n        if (scheduleSoCCtrl.filter === filter)\n            return;\n\n        scheduleSoCCtrl.filter = filter;\n        $window.NOW.soc_schedules.schedule_filter = filter;\n        _splashScreenVisibility();\n        ScheduleService.hasReachedLimit(filter);\n        userPreferences.setPreference(userPreferenceScheduleFilter, filter);\n        if (ScheduleService.schedules.__struct[filter].sysIds.length <= ScheduleService.schedules.__struct[filter].maxLimit)\n            scheduleSoCCtrl.getSchedules(scheduleSoCCtrl.textSearch);\n    };\n\n    scheduleSoCCtrl.getScheduleArray = function() {\n        var arr =  [];\n        if (ScheduleService.schedules.hasOwnProperty(\"__struct\") && !scheduleSoCCtrl.searching)\n            ScheduleService.schedules.__struct[scheduleSoCCtrl.filter].sysIds.forEach(function(sysId) {\n                arr.push(ScheduleService.schedules.chg_soc_definition[sysId]);\n            });\n        return arr;\n    };\n\n    function _getLimit() {\n        if (!ScheduleService.schedules.__struct)\n            return scheduleSoCCtrl.limit;\n\t\tscheduleSoCCtrl.limit = ScheduleService.schedules.__struct[scheduleSoCCtrl.filter].limit; // Reset limit, just in case it's below minimum\n        if (ScheduleService.schedules.__struct[scheduleSoCCtrl.filter].maxLimit - ScheduleService.schedules.__struct[scheduleSoCCtrl.filter].offset > scheduleSoCCtrl.limit)\n            return scheduleSoCCtrl.limit;\n        return ScheduleService.schedules.__struct[scheduleSoCCtrl.filter].maxLimit - ScheduleService.schedules.__struct[scheduleSoCCtrl.filter].offset;\n    }\n\n    scheduleSoCCtrl.getSchedules = function () {\n        // Do not get more schedules if loading, limit reached, no more schedules or filtering is active\n        if ($scope.isLoading() || ScheduleService.hasReachedLimit(scheduleSoCCtrl.filter) || !ScheduleService.hasMoreSchedules(scheduleSoCCtrl.filter))\n            return;\n\n        // Do not get more schedules if limit is zero or negative number\n        if (ScheduleService.schedules.__struct[scheduleSoCCtrl.filter] && ScheduleService.schedules.__struct[scheduleSoCCtrl.filter].maxLimit < 1) {\n            if (scheduleSoCCtrl.initialLoad)\n                _splashScreenVisibility();\n            return;\n        }\n        _getSchedules();\n    };\n\n    function _getSchedules() {\n        var offset = ScheduleService.schedules.__struct[scheduleSoCCtrl.filter].offset;\n        scheduleSoCCtrl.loading = true;\n        ScheduleService.getSchedules(scheduleSoCCtrl.filter, scheduleSoCCtrl.getOrderBy(), offset, _getLimit(), scheduleSoCCtrl.textSearch.trim()).then(function (schedules) {\n            scheduleSoCCtrl.initialLoad = false;\n            _splashScreenVisibility();\n            scheduleSoCCtrl.loading = false;\n        })\n        .catch(function(response) {\n            if (response.status === 401)\n                $window.location.reload();\n        });\n    }\n\n    function _reset() {\n        scheduleSoCCtrl.loading = true;\n        ScheduleService.initialHit(scheduleSoCCtrl.filter, scheduleSoCCtrl.getOrderBy(), _getLimit(), scheduleSoCCtrl.textSearch.trim()).then(function (schedules) {\n            scheduleSoCCtrl.initialLoad = false;\n            _splashScreenVisibility();\n            scheduleSoCCtrl.loading = false;\n            scheduleSoCCtrl.searching = false;\n        })\n        .catch(function(response) {\n            if (response.status === 401)\n                $window.location.reload();\n        });\n    }\n\n    scheduleSoCCtrl.initialHit = function() {\n        scheduleSoCCtrl.loading = true;\n        ScheduleService.initialHit(scheduleSoCCtrl.filter, scheduleSoCCtrl.getOrderBy(), _getLimit()).then(function (schedules) {\n            scheduleSoCCtrl.initialLoad = false;\n            _splashScreenVisibility();\n            scheduleSoCCtrl.loading = false;\n        })\n        .catch(function(response) {\n            if (response.status === 401)\n                $window.location.reload();\n        });\n    };\n\n    scheduleSoCCtrl.init = function () {\n        scheduleSoCCtrl.initialLoad = true;\n        scheduleSoCCtrl.initialHit();\n    };\n\n    /****************************\n    * POPOVER RELATED FUNCTIONS *\n    ****************************/\n    scheduleSoCCtrl.userPopovers = {};\n\n    angular.element($window.document).keyup(function ($event) {\n        if ($event.keyCode === SOC.KEYS.ESCAPE) {\n            Object.keys(scheduleSoCCtrl.userPopovers).forEach(function (memberKey) {\n                scheduleSoCCtrl.userPopovers[memberKey].open = false;\n            });\n            $scope.$apply();\n        }\n    });\n\n    scheduleSoCCtrl.getPopoverTemplate = function (userSysId) {\n        var member = ScheduleService.schedules.__profile[userSysId];\n        $scope.profile = {};\n        $scope.profile.user = member;\n        $scope.profile.user.sys_id = member.userID;\n        $scope.profile.manager_name = member.manager_name;\n        return getTemplateUrl(\"sn_chg_soc_avatar.xml\");\n    };\n\n    scheduleSoCCtrl.closeMemberDialogs = function (scheduleSysId) {\n        scheduleSysId = scheduleSysId + \"\";\n        Object.keys(scheduleSoCCtrl.userPopovers).forEach(function (memberKey) {\n            if (!scheduleSysId || memberKey.indexOf(scheduleSysId) === -1)\n                scheduleSoCCtrl.userPopovers[memberKey].open = false;\n        });\n    };\n\n    $scope.$watch(\"scheduleSoCCtrl.userPopovers\", function(newValue, oldValue) {\n        if (!newValue || !newValue.hasOwnProperty(\"open\"))\n            return;\n        var popoverSysid;\n        angular.forEach(oldValue, function(value, key) {\n            if (value.open === true)\n                popoverSysid = key;\n        });\n        if (!popoverSysid)\n            return;\n        angular.element(\"#\" + popoverSysid + \" .user-avatar\").focus();\n    }, true);\n\n    scheduleSoCCtrl.togglePopover = function ($event, schedule) {\n        if ($event.type === \"keydown\" && ($event.keyCode !== SOC.KEYS.ESCAPE || $event.keyCode !== SOC.KEYS.ENTER))\n            return;\n        $event.stopPropagation();\n        if (!schedule.sys_id || schedule.owner.value === scheduleSoCCtrl.userID)\n            return;\n        if (scheduleSoCCtrl.userPopovers[schedule.sys_id.value])\n            scheduleSoCCtrl.userPopovers[schedule.sys_id.value].open = !scheduleSoCCtrl.userPopovers[schedule.sys_id.value].open;\n\n        // close all other dialogs\n        scheduleSoCCtrl.closeMemberDialogs(schedule.sys_id.value);\n    };\n\n\tscheduleSoCCtrl.popoverAriaLabel = function(schedule) {\n\t\tif (!schedule.owner.display_value)\n\t\t\treturn '';\n\t\treturn i18n.format(scheduleSoCCtrl.messages['Open popover'], {userName: schedule.owner.display_value});\n\t};\n\n    scheduleSoCCtrl.openPopover = function (schedule) {\n        if (!schedule.sys_id)\n            return;\n        if (!scheduleSoCCtrl.userPopovers[schedule.sys_id.value])\n            scheduleSoCCtrl.userPopovers[schedule.sys_id.value] = {\n                \"open\": false\n            };\n        return scheduleSoCCtrl.userPopovers[schedule.sys_id.value].open;\n    };\n\n    $scope.isChatEnabled = function (userProfile) {\n        return scheduleSoCCtrl.isChatEnabled && userProfile.userID !== scheduleSoCCtrl.userID;\n    };\n\n    $scope.getBackgroundStyle = function () {\n        if ($scope.profile && $scope.profile.user && $scope.profile.user.avatar && $scope.profile.user.avatar !== \"\")\n            return {\n                \"background-image\": \"url(\" + $scope.profile.user.avatar + \")\"\n            };\n        if ($scope.profile.user && $scope.profile.user.name)\n            return \"\"; // one-time watch (see angular doc)\n        return void(0);\n    };\n\n    $scope.openDirectMessageConversation = function (event) {\n        if (event.type === \"keydown\" && event.keyCode !== SOC.KEYS.ENTER)\n            return;\n\n        $timeout(function () {\n            if ($scope.profile.user.sys_id)\n                snConnectService.openWithProfile($scope.profile.user);\n        }, 0, false);\n\n        angular.element(\".popover\").each(function () {\n            angular.element(this).remove();\n        });\n    };\n\n    scheduleSoCCtrl.form = {};\n    scheduleSoCCtrl.messages = {\n        \"Loading...\": i18n.getMessage(\"Loading...\"),\n        \"Searching...\": i18n.getMessage(\"Searching...\"),\n        \"Limit Reached\": i18n.getMessage(\"You have reached the limit of visible Change Schedules in this view.\"),\n        \"No results found\": i18n.getMessage(\"No results found\"),\n        \"Open popover\": i18n.getMessage(\"Open popover {userName}\")\n    };\n    scheduleSoCCtrl.form.title = i18n.getMessage(\"Change Schedules\");\n    scheduleSoCCtrl.form.filterTitle = i18n.getMessage(\"Search by name or owner\");\n    scheduleSoCCtrl.form.pinSchedule = i18n.getMessage(\"Pin schedule {name}\");\n    scheduleSoCCtrl.form.unpinSchedule = i18n.getMessage(\"Unpin schedule {name}\");\n    scheduleSoCCtrl.form.pin = i18n.getMessage(\"Pin\");\n    scheduleSoCCtrl.form.icon = i18n.getMessage(\"icon\");\n    scheduleSoCCtrl.form.schedulePinnedMsg = \"\";\n    scheduleSoCCtrl.form.addTo = i18n.getMessage(\"'{name}' added to '{yourPinned}'\");\n    scheduleSoCCtrl.form.removeFrom = i18n.getMessage(\"'{name}' removed from '{yourPinned}'\");\n    scheduleSoCCtrl.form.close = i18n.getMessage(\"Close\");\n    scheduleSoCCtrl.form.sendDirectMsg = i18n.getMessage(\"Send a direct message\");\n    scheduleSoCCtrl.form.notAvailable = i18n.getMessage(\"Not Available\");\n    scheduleSoCCtrl.form.owner = i18n.getMessage(\"Owner\");\n    scheduleSoCCtrl.form.groupOwner = i18n.getMessage(\"Group owner\");\n    scheduleSoCCtrl.form.userNameLabel = i18n.getMessage(\"User name\");\n    scheduleSoCCtrl.form.userTitleLabel = i18n.getMessage(\"User title\");\n    scheduleSoCCtrl.form.contactNumberLabel = i18n.getMessage(\"User contact number\");\n    scheduleSoCCtrl.form.emailLabel = i18n.getMessage(\"User email\");\n    scheduleSoCCtrl.form.managerLabel = i18n.getMessage(\"Manager\");\n\n    scheduleSoCCtrl.form.pinned = {};\n    scheduleSoCCtrl.form[\"pinned\"].title = i18n.getMessage(\"Pinned Schedules\");\n    scheduleSoCCtrl.form[\"pinned\"].description = i18n.getMessage(\"You can pin a schedule from the All Schedules view to have quick access to it here.\");\n    scheduleSoCCtrl.form[\"pinned\"].instruction = i18n.format(i18n.getMessage(\"To pin a schedule, hover over the card and click on the '{pin}' icon.\"), {pin : scheduleSoCCtrl.form.pin});\n\n    scheduleSoCCtrl.form.own_belong = {};\n    scheduleSoCCtrl.form[\"own_belong\"].title = i18n.getMessage(\"Your Schedules\");\n    scheduleSoCCtrl.form[\"own_belong\"].description = i18n.getMessage(\"The schedules which appear in Your Schedules are schedules you own or are owned by a group you are a member of.\");\n\n    scheduleSoCCtrl.form.all = {};\n    scheduleSoCCtrl.form[\"all\"].title = i18n.getMessage(\"All Schedules\");\n    scheduleSoCCtrl.form[\"all\"].description = i18n.format(i18n.getMessage(\"{allSchedules} includes all schedules you have access right to view.\"), {allSchedules : scheduleSoCCtrl.form.all.title});\n\n    $scope.form = scheduleSoCCtrl.form;\n  }]);\n","sys_class_name":"sys_ui_script","sys_id":"3b8558fc57c30300afc34786cc94f94a","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"ui_type":"0","sys_update_name":"sys_ui_script_3b8558fc57c30300afc34786cc94f94a","sys_updated_by":"admin","sys_created_on":"2017-12-12 15:14:55","name":"sn_chg_soc.landing.app","sys_name":"sn_chg_soc.landing.app","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"70","active":"true","description":"The included javascript for pwd_enroll_questions_ui UI macro.","use_scoped_format":"false","global":"false","sys_updated_on":"2017-08-15 21:17:29","sys_tags":"","script_name":"","script":"/**\n * Onload function for pwd_enroll_question_ui macro.\n * @param currForm\n */\nfunction questions_and_answers_on_load(formId) {\n\tvar currForm = document.getElementById(formId);\n\t\n\tif(currForm == null)\n\t\treturn;\n\t\n\tvar mode = currForm.elements['mode'].value;\n\t\n\t// If mode is create, all the selects will have 'Select a question'\n\t// so disable the answer fields\n\tif (mode == 'create') {\n\t\tvar allSelectElements = getAllSelectElements(currForm);\n\t\tfor (var index = 0; index < allSelectElements.length; index++) {\n\t\t\tvar currForm = allSelectElements[index].form;\n\t\t\tvar answerElm = currForm.elements['answer_' + (index+1)];\n\t\t\tanswerElm.disabled = true;\n\t\t}\n\t\treturn;\n\t}\n\t\n\t// get the current verification Id.\n\tvar verificationId = currForm.elements['verification_id'].value;\n\t// Get the stored questions .\n\tvar storedQuestions = eval('getAllStoredQuestions_'+verificationId+'()');\n\tvar storedAnswers = eval('getAllStoredAnswers_'+verificationId+'()');\n\tvar allSelectElements = getAllSelectElements(currForm);\n\t\n\t// let's decide the size of the selects.\n\tvar selectSize = storedQuestions.length;\n\t\n\tif (allSelectElements.length > storedQuestions.length) {\n\t\t\n\t\t// if # of select elements is > what are stored,\n\t\t// the required # of questions has changed.\n\t\t\n\t\tdisplayEnrollAgainMessage();\n\t\t\n\t\t\n\t} else if (allSelectElements.length < storedQuestions.length) {\n\t\t\n\t\t// the size of questions got smaller for some reason.\n\t\tdisplayEnrollAgainMessage();\n\t\tselectSize = allSelectElements.length;\n\t}\n\t\n\tvar allQuestions = eval('getAllQuestions_'+verificationId+'()');\n\tvar allStoredAnswerSysIdElements = getAllStoredAnswerSysIdElementsFrom(currForm);\n\tvar storedAnswerSysIds = eval('getAllStoredAnswerSysIds_'+verificationId+'()');\n\t\n\tfor (var i = 0; i < selectSize; i++) {\n\t\t\n\t\tvar storedQuestion = storedQuestions[i];\n\t\t\n\t\t// Get the stored answer Id\n\t\tvar storedAnswersysId = storedAnswerSysIds[i];\n\t\t\n\t\t// assign the stored sys id to each element.\n\t\tvar sysIdElm = allStoredAnswerSysIdElements[i];\n\t\tsysIdElm.value = storedAnswersysId;\n\t\t\n\t\t//Let's find the stored question from the all questions.\n\t\tvar index = getIndex(allQuestions,storedQuestion);\n\t\t\n\t\t// should not happen. can't find the stored question.\n\t\tif (index == -1) continue;\n\t\t\t\n\t\t// Once found, let's set selected index.\n\t\tvar currElm = allSelectElements[i];\n\t\tcurrElm.options.selectedIndex = index+1;\n\t\t\n\t\t// update  the answer value.\n\t\tvar answer = storedAnswers[i];\n\t\tcurrForm.elements['answer_'+(i+1)].value=answer;\n\t\t\n\t};\n\t// Let's remove selected ones from the main question list.\n\tfor (var i = 0; i< allSelectElements.length; i++) {\n\t\tvar currElm = allSelectElements[i];\n\t\t_changeList(i,currElm,false);\n\t}\n\t\t\n\t// Update mandatory markers to be greyed out, since user is already enrolled. \n\tfor (var index = 1; index <= storedAnswers.length; ++index) {\n\t\tupdateMandatoryMarker(gel('question_' + index), 'question_form_group_' + index);\n\t\tupdateMandatoryMarker(gel('answer_' + index), 'answer_form_group_' + index);\n\t}\n\t\n\t// Load submit event handler.\n\t//setSubmitEventHanlder();\n}\n\nfunction displayEnrollAgainMessage(){\n\tdisplayErrorMessage(getMessage(\"The number of questions required for enrollment has changed. Enroll again.\"));\n}\n/**\n * Removes the selected ones from the main question list.\n */\nfunction changeList(index, currElm) {\n\tvar currForm = currElm.form;\n    var answerElm = currForm.elements['answer_' + index];\n    // If 'Select a question' option is selected, disable the answer field\n    if (currElm.value == 'N/A' || currElm.value == '') {\n        answerElm.value = '';\n        answerElm.disabled = true;\n    } else {\n        answerElm.disabled = false;\n    }\n    // PRB651727 - Recalculate questions every time, including 'Select a question'\n    _changeList(index, currElm, true);\n }\n \n/**\n * Builds the question list with removing the already selected ones from the main question list.\n */\nfunction _changeList(index, currElm, clearNotStoredAnswer) {\n\t// current form.\n\tvar currForm = currElm.form;\n\t\n\t// verification Id\n\tvar verificationId = currForm.elements['verification_id'].value;\n\t\n\t//Removes the value if exists.\n\tif (clearNotStoredAnswer) {\n\t\t\n\t\tvar storedQuestions = eval('getAllStoredQuestions_'+verificationId+'()');\n\t\tvar currentQuestion = currElm.value;\n\t\t\n\t\tvar metIndex = getIndex(storedQuestions,currentQuestion);\n\t\tvar answerElm = currForm.elements['answer_'+index];\n\t\t\n\t\t//If the current question is the stored question, show the stored answer.\n\t\t//If the not the stored answer, clear the answer.\n\t\tif (metIndex != -1) {\n\t\t\tvar storedAnswers = eval('getAllStoredAnswers_'+verificationId+'()');\n\t\t\tanswerElm.value = storedAnswers[metIndex];\n\t\t} else {\n\t\t\tanswerElm.value='';\n\t\t}\n\t}\n\t\n\t// get all surrounding elements except for the current.\n\tvar otherSelectElms = getOtherSelectElements(currElm);\n\t\n\t// traverse other select elements.\n\tfor (var i = 0; i != otherSelectElms.length; i++) {\n\t\t\n\t\tvar anotherElm  = otherSelectElms[i];\n\t\t// if the question is already selected, then throw an error.\n\t\tvar anotherQuestion = anotherElm.value;\n\t\t\n\t\tif (anotherQuestion != \"\" && anotherQuestion == currElm.value) {\n\t\t\tdisplayErrorMessage(getMessage(\"The same question was already selected. Select a different question.\"));\n\t\t\tcurrElm.options.selectedIndex = 0;\n\t\t\treturn;\n\t\t}\n\t\t// If not the same question, then let's rebuild other select lists.\n\t\trebuildQuestionList(anotherElm,verificationId);\n\t}\n}\n/**\n * Mark  the value of the passed element has changed.\n */\nfunction markChanged(index,currElm) {\n\t\n\tvar currForm = currElm.form;\n\tvar verificationId = currForm.elements['verification_id'].value;\n\tvar questionElm = currForm.elements['question_' + index];\n\tvar question = questionElm.value;\n\tvar storedQuestions = eval('getAllStoredQuestions_' + verificationId + '()');\n\tvar metIndex = getIndex(storedQuestions,question);\n\t\n\t// this is a new question, then the status \"true\" and return.\n\tif (metIndex == -1) {\n\t\tcurrForm.elements['changed_'+index].value = true;\n\t\treturn;\n\t}\n\t\n\tvar storedAnswers = eval('getAllStoredAnswers_' + verificationId + '()');\n\tvar storedAnswer = storedAnswers[metIndex];\n\tvar answer = currElm.value;\n\t\n\t// let's validate one more....\n\t// if every character is \"*\" which is masked value, do not take it..\n\tvar otherCharsFound = false;\n\t\n\tfor (var i = 0; i != answer.length; i++) {\n\t\tvar ch = answer.charAt(i);\n\t\tif (ch != '*') {\n\t\t\totherCharsFound = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tif (otherCharsFound && answer != storedAnswer)\n\t\tcurrForm.elements['changed_' + index].value = true;\n}\n/**\n * Rebuilds the question list. While rebuilding, removes the questions selected by other select elements.\n */\nfunction rebuildQuestionList(currentElement, verificationId) {\n\t\n\t\n\t// get other select elements that exxcludes the current one.\n\tvar otherSelectElements = getOtherSelectElements(currentElement);\n\t\n\t// Get all available questions.\n\tvar allQuestions = eval('getAllQuestions_'+verificationId+'()');\n\t\n\t// Get the selected questions for other select elements.\n\tvar otherSelectedQuestions = getSelectedQuestions(otherSelectElements);\n\t\n\t// current question.\n\tvar selectedQuestion = currentElement.value;\n\t\n\t// shrink the list to the first option. the link will be rebuit now.\n\tcurrentElement.options.length=1;\n\t\n\t// traverse all questions and remove the selected questions by other select elements.\n\tvar index=0;\n\t\n\tfor (var i = 0; i < allQuestions.length; i++) {\n\t\t\n\t\tvar question = allQuestions[i];\n\t\t\n\t\t// if the question is  selected question, then remove the option from the list.\n\t\tif(getIndex(otherSelectedQuestions,question) != -1)\n\t\t\tcontinue;\n\t\t\n\t\tindex++;\n\t\tcurrentElement.options[index]=new Option(question, question);\n\t\t\n\t\tif(selectedQuestion!=\"\" && question==selectedQuestion)\n\t\t\tcurrentElement.options.selectedIndex = index;\n\t\t\n\t}\n}\n/*\n * Returns the elements that have the name \"stored_sys_id\".\n * The returned elements contain the stored answer sys Id.\n */\nfunction getAllStoredAnswerSysIdElementsFrom(currForm) {\n\tvar arr = [];\n\tfor(var i = 0; i != currForm.elements.length; i++) {\n\t\tvar elm= currForm.elements[i];\n\t\tvar name = elm.name;\n\t\t\n\t\tif(name.indexOf(\"stored_sys_id_\") == -1) continue;\n\t\t\t\n\t\tarr.push(elm);\n\t}\n\treturn arr;\n}\n/*\n * Find all select elements except for the passsed one from the form.\n */\nfunction getOtherSelectElements(currElm) {\n\t\n\tvar currForm = currElm.form;\n\tvar arr = [];\n\tfor(var i = 0; i != currForm.elements.length; i++) {\n\t\tvar elm= currForm.elements[i];\n\t\tvar name = elm.name;\n\t\t\n\t\tif(name.indexOf(\"question_\") == -1) continue;\n\t\t\tif(name.indexOf(currElm.name) != -1 ) continue;\n\t\t\t\n\t\tarr.push(elm);\n\t}\n\treturn arr;\n}\n/**\n * Returns the index of the first occurrence from the array.\n * @param arr\n * @param val\n * @returns {Number}\n */\nfunction getIndex(arr, val) {\n\tfor(var i = 0; i != arr.length; i++ ) {\n\t\tif(arr[i] == val) return i;\n\t\t}\n\treturn -1;\n}\n/**\n * Returns an array of questions. The return array excludes the currently selected question.\n */\nfunction getSelectedQuestions(elements) {\n\tvar arr = [];\n\tfor(var i = 0; i != elements.length ;i++) {\n\t\t// push other selected question into the array.\n\t\tvar question = elements[i].value;\n\t\tif(question == \"\") continue;\n\t\t\tarr.push(question);\n\t}\n\treturn arr;\n}\n/**\n *Tests if the passed question has the same occrence\n */\nfunction getStoredQuestionIndex(question, verificationId) {\n\t\n\tvar storedQuestions = eval('getAllStoredQuestions_'+verificationId+'()');\n\treturn getIndex(storedQuestions, question);\n}\n/**\n * Validate the form before submit.\n */\nfunction questions_and_answers_on_submit(formId) {\n\tvar currForm = document.getElementById(formId);\n\t\n\tif (currForm == null)\n\t\treturn false;\n\t\n\tvar questions = getAllSelectElements(currForm);\n\tvar answers = getAllAnswerElements(currForm);\n\t\n\t//We need to traverse all the answers and call markChanged method\n\t//because some browsers (e.g. safari on ipad) have different behaviors for certain events.\n\t//markChanged function marks the answer dirty if the answer is changed by the user.\n\tfor (var i = 0; i < answers.length; i++) {\n\t\tvar answer = answers[i];\n\t\t\n\t\t//make sure i+1 is getting passed. It's a question index starting with 1.\n\t\tmarkChanged(i + 1, answer);\n\t}\n\t\n\t// If enrollment is not required for this form, then either all of the Q&A should\n\t// be empty, or they should all be valid. Also, the answers should be different. \n\tvar emptyQuestions = 0;\n\tvar emptyAnswers = 0;\n\tvar sameAnswers = 1;\n\tvar minLengthAnswers = 0;\n\tvar answerMap = {};\n\tvar question;\n\tvar trimmedAnswer;\n\t\n\tvar MIN_LENGTH = currForm.elements['min_length_for_qa'].value;\n\n\tfor (i = 0; i < questions.length; i++) {\n\t\tquestion = questions[i];\n\t\tif(questions[i].value == '')\n\t\t\t++emptyQuestions;\n\t\t\n\t\t// Don't validate answers if unchanged\n\t\tif (currForm.elements['changed_' + (i + 1)].value != 'true')\n\t\t\tcontinue;\n\t\t\n\t\ttrimmedAnswer = answers[i].value.trim();\n\t\tif (trimmedAnswer == '')\n\t\t\t++emptyAnswers;\n\t\telse if (answerMap[trimmedAnswer])\n\t\t\t++sameAnswers;\n\t\telse if (trimmedAnswer.length < MIN_LENGTH)\n\t\t\t++minLengthAnswers;\n\t\telse\n\t\t\tanswerMap[trimmedAnswer] = true;\n\t}\n\t\n\tcurrForm.elements['can_submit'].value = 'true';\n\tvar errorMessage;\n\t// questions are all selected\n\tif (emptyQuestions == 0) {\n\t\tif (emptyAnswers > 0)\n\t\t\terrorMessage = getMessage(\"All questions should be answered\");\n\t\telse if (sameAnswers > 1)\n\t\t\terrorMessage = getMessage(\"All answers must be unique\");\n\t\telse if (minLengthAnswers > 0)\n\t\t\terrorMessage = new GwtMessage().getMessage(\"Answer text must be at least {0} characters\", MIN_LENGTH);\t\n\n\t}\n\t\n\t// no questions is selected\n\telse if (emptyQuestions == questions.length) {\n\t\tif (currForm.elements['mandatory'].value == 'true')\n\t\t\terrorMessage = getMessage(\"Enrollment is required for QA Verification\");\n\t\telse \n\t\t    currForm.elements['can_submit'].value = 'false';\n\t}\n\t\n\t// only some of questions are selected\n\telse {\n\t\terrorMessage = new GwtMessage().getMessage(\"You need to choose {0} questions\", questions.length);\n\t}\n\t\n\tif (errorMessage) {\n\t\thandleInvalidForm(currForm, errorMessage);\n\t\treturn false;\n\t}\n\t\n\treturn true;\n}\n\n// If the form fails validation, this will show a message and focus the tab the form is on\nfunction handleInvalidForm(currForm, message) {\t\n\tvar tabId = 'tablabel' + currForm.elements['tab_index'].value;\n\tvar tab = gel(tabId);\n\ttab.click();\t\n\tif (message) \n\t\tdisplayErrorMessage(message);\n}\n\nfunction getAllSelectElements(currForm) {\n\tvar arr = [];\n\tvar elements = currForm.elements;\n\t\n\tfor(var i = 0; i < elements.length ; i++) {\n\t\tvar element= elements[i];\n\t\tvar name = element.name;\n\t\t\n\t\tif(name.indexOf(\"question_\") == -1) continue;\n\t\t\tarr.push(element);\n\t}\n\treturn arr;\n}\n\nfunction getAllAnswerElements(currForm) {\n\tvar arr = [];\n\tvar elements = currForm.elements;\n\t\n\tfor(var i = 0; i < elements.length; i++) {\n\t\tvar element= elements[i];\n\t\tvar name = element.name;\n\t\t\n\t\tif(name.indexOf(\"answer_\") == -1) continue;\n\t\t\tarr.push(element);\n\t}\n\treturn arr;\n}\n\n/** Clears the old value */\nfunction clearValue(index ,currElm) {\n\tvar currForm = currElm.form;\n\tvar verificationId = currForm.elements['verification_id'].value;\n\tvar questionElm = currForm.elements['question_'+index];\n\tvar question = questionElm.value;\n\t\n\t// if this is not stored question, then return.\n\tvar allStoredQuestions = eval('getAllStoredQuestions_'+verificationId+'()');\n\tvar metIndex = getIndex(allStoredQuestions,question);\n\t\n\t// If the question is not stored, then return.\n\tif(metIndex == -1)\n\t\treturn;\n\t\n\t// if the question is stored,let's compare the answer.\n\tvar storedAnswers = eval('getAllStoredAnswers_'+verificationId+'()');\n\tvar storedAnswer = storedAnswers[metIndex];\n\t\n\tvar answerElm = currForm.elements['answer_'+index];\n\tvar answer = answerElm.value;\n\t\n\t// if the value is the masked value, then remove the value.\n\tif(storedAnswer == answer) {\n\t\tanswerElm.value = '';\n\t}\n}\n/**\n * Restores the value if the value has not been changed.\n */\nfunction restoreValue (index ,currElm) {\n\t//if the length of the current value is not 0,do not restore.\n\tvar answer = currElm.value;\n\tif(answer.length!=0)\n\t\treturn;\n\t\n\tvar currForm = currElm.form;\n\tvar question = currForm.elements['question_'+index].value;\n\tvar verificationId = currForm.elements['verification_id'].value;\n\t\n\tvar allStoredQuestions = eval('getAllStoredQuestions_'+verificationId+'()');\n\tvar metIndex = getIndex(allStoredQuestions, question);\n\t\n\t// it the question is not the stored one, just return.\n\tif(metIndex == -1)\n\t\treturn;\n\t\n\t// if the question is stored,let's compare the answer.\n\tvar storedAnswers = eval('getAllStoredAnswers_'+verificationId+'()');\n\tvar storedAnswer = storedAnswers[metIndex];\n\tcurrElm.value=storedAnswer;\n}\n/**\n * Tests if the question is stored or not.\n */\nfunction isStoredQuestion(question,verificationId) {\n\tvar storedQuestions = eval('getAllStoredQuestions_'+verificationId+'()');\n\treturn getIndex(storedQuestions,question) != -1;\n}\n","sys_class_name":"sys_ui_script","sys_id":"3f8610b1d7332100b9bc43d60e6103e9","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/421beb3304352210559073c06a02f7ef","value":"421beb3304352210559073c06a02f7ef"},"ui_type":"","sys_update_name":"sys_ui_script_3f8610b1d7332100b9bc43d60e6103e9","sys_updated_by":"admin","sys_created_on":"2014-10-16 23:10:19","name":"$pwd_enroll_questions_ui","sys_name":"$pwd_enroll_questions_ui","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":"read"},{"ignore_in_now_experience":"false","sys_mod_count":"54","active":"true","description":"Checks that an end date is not before a start date","use_scoped_format":"false","global":"false","sys_updated_on":"2024-09-30 10:06:33","sys_tags":"","script_name":"","script":"var showErrorMsg = function(errorMsg, sourceFieldName) {\n    g_form.showErrorBox(sourceFieldName, errorMsg);\n};\n\nfunction validateField(startDateField, endDateField) {\n\n    g_form.hideFieldMsg(startDateField, true);\n    g_form.hideFieldMsg(endDateField, true);\n\n    var isStartDateValid = isValidDate(startDateField);\n    if (!isStartDateValid)\n        showErrorMsg(new GwtMessage().getMessage(\"{0} is invalid\", g_form.getLabelOf(startDateField)), startDateField);\n\n    var isEndDateValid = isValidDate(endDateField);\n    if (!isEndDateValid)\n        showErrorMsg(new GwtMessage().getMessage(\"{0} is invalid\", g_form.getLabelOf(endDateField)), endDateField);\n\n    if (!isStartDateValid || !isEndDateValid)\n        return;\n\n    if (validateStartDateBeforeEndDate(startDateField, endDateField, showErrorMsg) && (typeof validateMaxDateDuration !== \"undefined\"))\n        validateMaxDateDuration(startDateField, endDateField, showErrorMsg);\n}\n\nfunction isValidDate(fieldName) {\n    var dateValue = g_form.getValue(fieldName);\n    // The field is empty, not an invalid date\n    if (dateValue === '')\n        return true;\n    var dateValueMs = getDateInMillis(fieldName);\n\n    // 0 from \"getDateFormat\" means an invalid date string was passed to itx\n    return (dateValue !== \"\" && dateValueMs > 0);\n}\n\nfunction validateStartDateBeforeEndDate(startDateField, endDateField, processErrorMsg) {\n    var startDate = g_form.getValue(startDateField);\n    var endDate = g_form.getValue(endDateField);\n    var startDateMs = getDateInMillis(startDateField);\n    var endDateMs = getDateInMillis(endDateField);\n\n    processErrorMsg = typeof processErrorMsg === 'function' ? processErrorMsg : showErrorMsg;\n\n    if (startDate === \"\" || endDate === \"\")\n        return true;\n\n    if (startDateMs < endDateMs)\n        return true;\n\n    if (startDateMs > endDateMs) {\n        processErrorMsg(new GwtMessage().getMessage(\"{0} must be after {1}\", g_form.getLabelOf(endDateField), g_form.getLabelOf(startDateField)), endDateField);\n        return false;\n    }\n\n    return true;\n}\n\nfunction areDatesWithinRange(startRangeDate, endRangeDate, dates) {\n    var format = g_user_date_time_format;\n    var startRangeDateMs = getDateFromFormat(startRangeDate, format);\n    var endRangeDateMs = getDateFromFormat(endRangeDate, format);\n\n    if (!Array.isArray(dates))\n        dates = [dates];\n\n    for (var i = 0; i < dates.length; i++) {\n        var dateMs = getDateFromFormat(dates[i], format);\n        if (dateMs == 0)\n            continue;\n        if (dateMs < startRangeDateMs || (endRangeDateMs > 0 && dateMs > endRangeDateMs))\n            return false;\n    }\n    return true;\n}\n\nfunction validateMaxDateDuration(startDateField, endDateField, processErrorMsg) {\n    var startDate = g_form.getValue(startDateField);\n    var endDate = g_form.getValue(endDateField);\n\n    var format = g_user_date_time_format;\n\n    if (startDate === \"\" || endDate === \"\")\n        return true;\n\n    // get date strings into a number of milliseconds since 1970-01-01\n    var startDateMs = getDateFromFormat(startDate, format);\n    var endDateMs = getDateFromFormat(endDate, format);\n\n    // The same validation is done server-side for both Planned and Actual start/end dates\n    var FIFTY_YEARS_MILLIS = 1576800000000; // 1000 * 60 * 60 * 24 * 365 * 50\n\n    processErrorMsg = typeof processErrorMsg === 'function' ? processErrorMsg : showErrorMsg;\n\n    if (endDateMs - startDateMs > FIFTY_YEARS_MILLIS) {\n        processErrorMsg(new GwtMessage().getMessage(\"{0} cannot be more than 50 years after {1}\", g_form.getLabelOf(endDateField), g_form.getLabelOf(startDateField)), endDateField);\n        return false;\n    }\n\n    return true;\n}\n\nfunction getDateInMillis(dateFieldId) {\n    var userDatetimeFormat = g_user_date_time_format;\n    // when the form is live loading and the date field is readonly (ACL/Dictionary, not Client Script/UI Policy), the date is in the wrong format (PRB717143) and may not in the user's timezone\n    var systemDateTimeFormat = \"yyyy-MM-dd HH:mm:ss\"; \n    var timezoneOffset = g_tz_offset;\n\n    // These are the use cases we're covering here:\n    // 1 - The date field is not read-only: there's only one value to worry about, the one we see in the date field\n    // 2 - The date field is read-only, set by a Client Script/UI Policy, which means there is still only one field to care about\n    // 3 - The date field is read-only, set server-side by ACL/Dictionary (there are now two fields)\n    //   3.1 - The field has been live updated (Record Watcher)\n    //   3.2 - The field has not been changed\n    var fieldValue = g_form.getValue(dateFieldId);\n    var fieldControl = g_form.getControl(dateFieldId);\n    var fieldReadOnly = fieldControl ? gel(\"sys_readonly.\" + fieldControl.id) : null;\n\n    if (fieldReadOnly && fieldReadOnly.value !== fieldValue) {\n        if (!isDate(fieldValue, systemDateTimeFormat))\n            return 0;\n\n        var gwtDate = new GwtDate(fieldValue);\n        gwtDate.addSeconds(timezoneOffset / 1000);\n        return getDateFromFormat(gwtDate.toString(), systemDateTimeFormat); // Use cases 3.1 and 3.2\n    } else\n        return getDateFromFormat(fieldValue, userDatetimeFormat); // Use cases 1 and 2\n}","sys_class_name":"sys_ui_script","sys_id":"42518fd3672222004792adab9485ef76","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/32b7af7f04b12210559073c06a02f7fb","value":"32b7af7f04b12210559073c06a02f7fb"},"ui_type":"0","sys_update_name":"sys_ui_script_42518fd3672222004792adab9485ef76","sys_updated_by":"admin","sys_created_on":"2016-10-24 08:54:06","name":"StartEndDateValidation","sys_name":"StartEndDateValidation","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"215","active":"true","description":"Directive snCabChangeCalendar. Displays the conflict calendar for a given target instance.","use_scoped_format":"false","global":"false","sys_updated_on":"2022-10-11 11:18:26","sys_tags":"","script_name":"","script":"angular.module('sn.itsm.vcab.calendar', ['sn.common', 'sn.calendar', 'sn.itsm.vcab.common', 'ui.bootstrap', 'ui.bootstrap.popover']);\n(function($) {\n    'use strict';\n    var MOMENT_INTERNAL_DATE_TIME_FORMAT = \"YYYY-MM-DD HH:mm:ss\";\n    var ALL_FILTER = 'all';\n    var NONE_FILTER = 'none';\n    var ENTER = 13,\n        SPACE = 32,\n        ESC = 27,\n        F7 = 118,\n        LEFT = 37,\n        RIGHT = 39,\n        TAB = 9,\n        E = 69;\n\n    // Used to serialize filter options for user preference.\n    // Compared to JSON.stringify this creates more readable text.\n    function serializeObj(o) {\n        var s = '';\n        var keys = Object.keys(o);\n        for (var i = 0; i < keys.length; i++) {\n            var k = keys[i];\n            if (typeof o[k] === 'undefined' || k === ALL_FILTER || k === NONE_FILTER)\n                continue;\n            if (i > 0)\n                s += ',';\n            s += k + '=' + o[k];\n        }\n        return s;\n    }\n\n    function deserializeObj(s) {\n        var o = {};\n        if (s) {\n            var d = s.split(',');\n            for (var i = 0; i < d.length; i++) {\n                var p = d[i].split('=');\n                if (p[0] === ALL_FILTER || p[0] === NONE_FILTER)\n                    continue;\n                o[p[0]] = p[1] === 'true';\n            }\n        }\n        return o;\n    }\n\n    function getPhantomKey(d) {\n        return d.getDate() + '~' + d.getMonth();\n    }\n\n    var UIDC = 1;\n\n    function uid() {\n        return UIDC++ + '';\n    }\n\n    angular.module('sn.itsm.vcab.calendar')\n        .directive('snCabChangeCalendar', function(getTemplateUrl, CalendarView, vcabDataSource, dataUtil, $timeout, TimelineView, i18n, calendarUtils, calendarAccessibilityUtils,\n            $compile, userPreferences, $q, cancellablePromise, $rootScope, isAccessibilityEnabled, CAB, $sanitize, $window, calendarNotificationService) {\n            return {\n                restrict: 'E',\n                templateUrl: getTemplateUrl('vcab_sn_vcab_calendar_clone.xml'),\n                scope: {\n                    change: '=',\n                    onWarn: '&',\n                    isUpdatable: '@', // true/false - Default false\n                    isConfigAvailable: '@', // true/false - Default false\n                    configOptions: '=?',\n                    dayViewOptions: '=?',\n                    weekViewOptions: '=?',\n                    autoSaveAndFetchOptionsAsUserPref: '@', // true/false - Default false\n                    timeformat: '<',\n                    dateTimeFormat: '<',\n                    fieldPermission: '=',\n                    keyNav: '@',\n                    instanceName: '@'\n                },\n                link: function($scope, el, attrs) {\n                    dataUtil.setDateTimeFormat($scope.dateTimeFormat);\n                    dataUtil.setTimeFormat($scope.timeformat);\n                    var TIMEZONE = $window.g_tz;\n                    var BLACKOUT_SECTION = 10,\n                        MAINT_SECTION = 20,\n                        CURR_CHANGE_SECTION = 30,\n                        RELATED_CHANGE_SECTION = 40;\n                    var BLACKOUT_TYPE = 1,\n                        MAINT_TYPE = 2,\n                        BOTH_TYPE = 3;\n                    var HAS_SPACE = 1,\n                        NO_SPACE = 0,\n                        NO_SPACE_FOR_ANYTHING = -1;\n                    var LBL_MAINTENANCE_SCHEDULE = i18n.getMessage('Maintenance Window');\n                    var LBL_BLACKOUT_SCHEDULE = i18n.getMessage('Blackout Schedule');\n                    var LBL_MAINTENANCE_SCHEDULES = i18n.getMessage('Maintenance Windows');\n                    var LBL_BLACKOUT_SCHEDULES = i18n.getMessage('Blackout Schedules');\n                    var LBL_BOTH_SCHEDULES = i18n.getMessage('Blackout and Maint Schedules');\n                    var LBL_MULTIPLE_MAINTENANCE_SCHEDULES = i18n.getMessage('Multiple Maintenance Windows');\n                    var LBL_MULTIPLE_BLACKOUT_SCHEDULES = i18n.getMessage('Multiple Blackout Schedules');\n                    $scope.SETTINGS_TAB = 1;\n                    $scope.CONFIG_TAB = 2;\n                    $scope.CalendarView = CalendarView;\n                    var focusTimer, focusIDAfterUpdate;\n                    $scope.changeFilterOpen = false;\n                    var CHANGE_FILTER_BUTTON = 'change_filter';\n                    var CHANGE_FILTER_POPOVER = 'cab_change_filter_popover';\n                    var PARENT_EVENT_ID = \"parent_event_id\";\n                    var filterPopoverTimer;\n\n                    function setFocus(id, timeoutValue) {\n                        if (!id)\n                            return;\n                        timeoutValue = timeoutValue || 100;\n                        if (focusTimer)\n                            $timeout.cancel(focusTimer);\n                        focusTimer = $timeout(function() {\n                            focusTimer = undefined;\n                            var parentEl = $('div[' + PARENT_EVENT_ID + '=\"' + id + '\"]:not(.event_details), td[' + PARENT_EVENT_ID + ' = \"' + id + '\"]');\n                            parentEl.focus();\n                        }, timeoutValue, false);\n                    }\n\n                    $(el).on('keydown', '#dhx_minical_icon', function($event) {\n                        if ($event.which != TAB)\n                            return;\n\n                        var finalTarget;\n                        var $this = $(this);\n                        if ($event.shiftKey) {\n                            $event.stopPropagation();\n                            $event.preventDefault();\n                            $rootScope.$broadcast(CAB.FOCUS_TO_CHANGE_TAB);\n                        }\n                        if (!finalTarget)\n                            return;\n                        $event.preventDefault();\n                        $timeout(function() {\n                            finalTarget.focus();\n                        }, 10, false);\n                    });\n\n                    $(el).on('click', '#' + CHANGE_FILTER_BUTTON, function($event) {\n\n                        if (filterPopoverTimer)\n                            $timeout.cancel(filterPopoverTimer);\n                        $timeout(function() {\n                            if (!$scope.changeFilterOpen)\n                                return;\n\n                            filterPopoverTimer = undefined;\n                            $(\"#\" + CHANGE_FILTER_POPOVER).focus();\n                        }, 100, false);\n                    });\n\n                    function getCommonCalCtrl() {\n                        return angular.element('.common-cal', el).controller('snDhtmlxScheduler');\n                    }\n\n                    function hasEnoughSpaceToShowEventText(start, end) {\n                        var ctrl = getCommonCalCtrl();\n                        if (ctrl) {\n                            var width = ctrl.getEstimatedEventWidthInPx(start, end);\n                            return width > 70 ? HAS_SPACE : (width >= 34 ? NO_SPACE : NO_SPACE_FOR_ANYTHING);\n                        }\n                        return NO_SPACE;\n                    }\n\n                    function getChangeLabel(change) {\n                        var v = $sanitize($scope.instanceName);\n                        if (v) {\n                            v = v.replace(/\"/g, \"&quot;\").replace(/'/g, \"&apos;\");\n                        }\n\n                        return \"<span tabindex='0' class='inline-block'><small>\" + $sanitize(\"Selected Target Instance\") +\n                            \"</small><p><strong><sn-cab-line-clamp max-lines='2' text='\" + v + \"'>\" +\n                            \"</sn-cab-line-clamp></strong></p></span>\";\n                    }\n\n                    function getWindowLabel(windowDisplayValue) {\n                        return \"<span class='cab_window_label' tabindex = '0'>\" + $sanitize(windowDisplayValue) + \"</span>\";\n                    }\n\n                    function getWindowEventText(id, data, start, end, sectionId) {\n                        var t = \"<div class='event_details' event_id='\" + id + \"'>\";\n                        if ($scope.viewMode === CalendarView.MONTH) {\n                            t += '<strong>' + $sanitize(data.title) + '</strong>';\n                        } else {\n                            var spc = hasEnoughSpaceToShowEventText(start, end);\n                            var c = 'badge';\n                            if (angular.isArray(data)) {\n                                if (spc === NO_SPACE_FOR_ANYTHING)\n                                    c += ' size_zero_event';\n                                else if (spc === NO_SPACE)\n                                    c += ' no_text_event';\n                            }\n                            if (spc === HAS_SPACE) {\n                                var f = $scope.viewMode === CalendarView.DAY ? $scope.filters.dayView : $scope.filters.weekView;\n                                if (f.dateTime) {\n                                    t += \"<span class='date_range'>\" +\n                                        dataUtil.dateRangeToFriendlyText(start, end) +\n                                        \"</span>\";\n                                }\n                            }\n                            if (angular.isArray(data)) {\n                                t += \" <span class='\" + c + \"' uib-popover-template='\\\"cab_multi_window_popover.html\\\"'\" +\n                                    \" popover-append-to-body='true' popover-placement='right auto' popover-trigger='none' popover-is-open='isBadgePopupOpen'\" +\n                                    \" popover-class='cab_change_calendar_popover' popover-animation='false'\" +\n                                    \" ng-mouseenter='openBadgePopup()' ng-mouseleave='closeBadgePopup()'>\" + data.length + \"</span> \";\n                            }\n                            if (spc === HAS_SPACE) {\n                                t += \"</p>\";\n                            }\n                        }\n                        t += \"</div>\";\n                        return t;\n                    }\n\n                    function getChangeEventText(id, change, start, end) {\n                        var t = \"<div class='event_details' event_id='\" + id + \"' id = \" + id + '_content';\n                        var hasEnoughSpace = hasEnoughSpaceToShowEventText(start, end) === HAS_SPACE;\n\n                        if (!hasEnoughSpace && $scope.viewMode === CalendarView.MONTH) {\n                            var m = $scope.filters.monthView;\n                            if (m.name)\n                                t += '> <strong>' + $sanitize($scope.instanceName) + '</strong>';\n                            else\n                                t += \">\";\n                        } else if (!hasEnoughSpace)\n                            t += \" aria-label = '\" + $sanitize($scope.instanceName) + \"'>\";\n\n\n                        if (hasEnoughSpace) {\n                            t += \">\";\n                            var f;\n\n                            if ($scope.viewMode === CalendarView.DAY)\n                                f = $scope.filters.dayView;\n                            else if ($scope.viewMode === CalendarView.WEEK)\n                                f = $scope.filters.weekView;\n                            else\n                                f = $scope.filters.monthView;\n                            if (f.dateTime) {\n                                t += \"<span class='date_range'>\" +\n                                    dataUtil.dateRangeToFriendlyText(start || change.start_date, end || change.end_date) +\n                                    \"</span>\";\n                            }\n                        }\n\n                        t += \"</div>\";\n                        return t;\n                    }\n\n                    function getNoNullStartDate(d) {\n                        if (d)\n                            return d;\n                        return new Date(0);\n                    }\n\n                    function getNoNullEndDate(d) {\n                        if (d)\n                            return d;\n                        // If the event spans many many years like a 1000yrs then for some reason clicking that\n                        // dhtmlx hangs the browser for a really long time. The time taken to respond to click is directly\n                        // proportional to length of event span. So, below we generate a time which hopefully\n                        // long enough that user won't see the end of it and not that long to cause considerable slow down.\n                        return new Date(Date.now() + 100 * 365 * 24 * 60 * 60 * 1000); // Sometime way way into future, 100yrs from now\n                    }\n\n                    function changeToEvent(change, sectionId) {\n                        var s = change.start_date = dataUtil.wsToJsDate(change.start_date);\n                        var e = change.end_date = dataUtil.wsToJsDate(change.end_date);\n                        var id = change.instanceId.value;\n                        var ns = getNoNullStartDate(s);\n                        var ne = getNoNullEndDate(e);\n                        e = {\n                            id: id,\n                            start_date: ns,\n                            end_date: ne,\n                            text: getChangeEventText(id, change, ns, ne),\n                            change: change,\n                            timeline_section: sectionId\n                        };\n                        return e;\n                    }\n\n                    function scheduleToEvents(schedule, sectionId) {\n                        var events = [];\n                        var momentDefaultTimeZone = moment.defaultZone ? moment.defaultZone.name : null;\n                        moment.tz.setDefault();\n\n                        schedule.date_ranges.forEach(function(d, index) {\n                            var id = schedule.sys_id;\n                            if (schedule.date_ranges.length > 1)\n                                id += \"-\" + (index + 1);\n\n                            var s = d.start = dataUtil.wsToJsDate(d.start);\n                            var e = d.end = dataUtil.wsToJsDate(d.end);\n                            var ev = {\n                                id: id,\n                                start_date: getNoNullStartDate(s),\n                                end_date: getNoNullEndDate(e),\n                                text: getWindowEventText(id, schedule, s, e, sectionId),\n                                schedule: schedule,\n                                date_range: d,\n                                timeline_section: sectionId\n                            };\n                            events.push(ev);\n                        });\n                        moment.tz.setDefault(momentDefaultTimeZone);\n                        return events;\n                    }\n\n                    function updateEvent(eid) {\n                        var ctrl = getCommonCalCtrl();\n                        if (ctrl) {\n                            ctrl.updateEvent(eid, !isRelatedSectionOpen);\n                            return true;\n                        }\n                        return false;\n                    }\n\n                    function updateEventText(e) {\n                        e.text = getChangeEventText(e.id, e.change, e.start_date, e.end_date);\n                        updateEvent(e.id);\n                    }\n\n                    function refreshEventsText(notify) {\n                        var eventUpdated = false;\n                        if ($scope.events) {\n                            $scope.events.forEach(function(e) {\n                                if (e.change) {\n                                    e.text = getChangeEventText(e.id, e.change, e.start_date, e.end_date);\n                                } else {\n                                    var data = e.is_multievent ? e.events : e.schedule;\n                                    e.text = getWindowEventText(e.id, data, e.start_date, e.end_date, e.timeline_section);\n                                }\n                                if (notify)\n                                    eventUpdated = updateEvent(e.id);\n                            });\n                            if (eventUpdated)\n                                addPopoversToEventsIfNeeded();\n                        }\n                    }\n\n                    function getEventFromId(id) {\n                        if ($scope.events) {\n                            for (var i = 0; i < $scope.events.length; i++)\n                                if ($scope.events[i].id === id) {\n                                    return $scope.events[i];\n                                }\n                        }\n                        if ($scope.phantomEvents) {\n                            for (var k in $scope.phantomEvents) {\n                                if ($scope.phantomEvents[k].id === id) {\n                                    return $scope.phantomEvents[k];\n                                }\n                            }\n                        }\n                        return null;\n                    }\n\n                    function compileTimelineLabels() {\n                        $timeout(function() {\n                            $('.dhx_scell_name', el).each(function() {\n                                var needsCompilation = !$(this).hasClass('ng-scope');\n                                if (needsCompilation) {\n                                    $compile(this)($scope);\n                                }\n                            });\n                        }, 100);\n                    }\n\n                    var isDatePickerOpen = false;\n                    $scope.$on(\"dp.show\", function() {\n                        isDatePickerOpen = true;\n                        $timeout(function() {\n                            $(\".bootstrap-datetimepicker-widget.picker-open .prev:visible\").focus();\n                        });\n                    });\n                    $scope.$on(\"dp.hide\", function() {\n                        $timeout(function() {\n                            isDatePickerOpen = false;\n                            $(\"body > div.bootstrap-datetimepicker-widget\").find(\"button\").attr(\"aria-expanded\", \"false\");\n                        }, 10, false);\n                    });\n                    $(document).on('keydown.' + CHANGE_FILTER_POPOVER, '#' + CHANGE_FILTER_POPOVER, function($event) {\n                        function selectTab(el, ev) {\n                            el.click();\n                            el.focus();\n                            ev.stopPropagation();\n                            ev.preventDefault();\n                        }\n                        if ($event.keyCode == TAB) {\n                            var $tab = $(\"#cab_change_filter_popover .icon.active\");\n                            if ($event.target.id === \"cab_change_filter_popover\") {\n                                selectTab($tab, $event);\n                                return;\n                            }\n                            var toggleInputs = $(\"#cab_change_filter_popover input\");\n                            if (toggleInputs.length === 0)\n                                return;\n                            if ((!$event.shiftKey && toggleInputs[toggleInputs.length - 1].isEqualNode($event.target)) || ($event.shiftKey && toggleInputs[0].isEqualNode($event.target))) {\n                                selectTab($tab[0], $event);\n                            }\n                            if ($event.shiftKey && $tab[0].isEqualNode($event.target)) {\n                                toggleInputs[toggleInputs.length - 1].focus();\n                                $event.stopPropagation();\n                                $event.preventDefault();\n                            }\n                        }\n                        if ($event.keyCode == LEFT || $event.keyCode == RIGHT) {\n                            var targetIndex = 0;\n                            var dataIndex = $event.target.getAttribute('data-index');\n                            if (!dataIndex)\n                                return;\n                            var index = parseInt(dataIndex);\n                            var count = $('#cab_change_filter_popover .icon').length - 1;\n                            targetIndex = ($event.keyCode == LEFT) ? index - 1 : index + 1;\n\n                            if (targetIndex < 0)\n                                targetIndex = count;\n                            else if (targetIndex > count)\n                                targetIndex = 0;\n                            var selector = '#cab_change_filter_popover div[data-index=\"' + targetIndex + '\"].icon';\n                            var $target = $(selector);\n                            selectTab($target, $event);\n                        }\n                    });\n\n                    // Attach listeners to document since the popovers are directly appended to body\n                    $(document).on('keydown.cab_change_popover', function($event) {\n                        if ($event.keyCode == ESC) {\n                            if ($scope.changeFilterOpen) {\n                                $scope.$apply(function() {\n                                    $scope.changeFilterOpen = false;\n                                });\n                                $timeout(function() {\n                                    $('#' + CHANGE_FILTER_BUTTON).focus();\n                                }, 100, false);\n                                return;\n                            }\n                            // if datetimepicker is open, close it.\n                            if (isDatePickerOpen)\n                                return;\n\n                            var $el = $($event.target).closest('div[' + PARENT_EVENT_ID + ']');\n                            var id = $el.attr(PARENT_EVENT_ID);\n                            $scope.$apply(function() {\n                                $scope.closeChangePopups();\n                                setFocus(id, 500); // because we are recreating the scopes , 500 has given\n                            });\n                        }\n                    });\n\n                    $(el).on('keydown.cab_change_popover', 'td.cab_event .dhx_month_head > a', function($event) {\n                        if ($event.keyCode == F7) {\n                            $($event.target)\n                                .parents('td.cab_event')\n                                .trigger($.Event('keypress', {\n                                    keyCode: ENTER\n                                }));\n                        }\n                    });\n\n                    var eventScopes = {};\n                    var eventDuplicateCounts = {};\n                    // This not only adds popovers but compiles the full event dom,\n                    // so popover badges inside the event bars too are activated by this code.\n                    function addPopoversToEventsIfNeeded() {\n                        var defer = $q.defer();\n                        $scope.closeChangePopups();\n                        $timeout(function() {\n                            var sameEventCounts = {};\n                            $('.cab_event', el).each(function() { // Querying all event doms\n                                var $this = $(this);\n                                var needsCompilation = !$this.attr('uib-popover-template');\n                                var eid = $('.event_details', this).attr('event_id');\n                                if (!sameEventCounts[eid])\n                                    sameEventCounts[eid] = 1;\n                                else\n                                    sameEventCounts[eid]++;\n                                var scopeKey = eid + ':' + sameEventCounts[eid]; // In non-timeline views there could be multiple instances of same event.\n                                var scope = eventScopes[scopeKey];\n                                var createNewScope = false;\n                                if (!scope) {\n                                    createNewScope = true;\n                                } else if (needsCompilation) {\n                                    // We are about to recompile so we will destroy current scope\n                                    // so that old popovers having watch on this scope are destroyed.\n                                    scope.$destroy();\n                                    createNewScope = true;\n                                }\n                                if (createNewScope) {\n                                    scope = $scope.$new(true);\n                                    (function() {\n                                        var id = uid();\n                                        scope.getPopupId = function() {\n                                            return 'cab_calendar_popup_' + id;\n                                        };\n                                    }());\n                                    scope.isBadgePopupOpen = false;\n                                    scope.isPopupOpen = false;\n                                    eventScopes[scopeKey] = scope;\n                                    eventDuplicateCounts[eid] = sameEventCounts[eid];\n                                }\n\n                                var isChange;\n                                var isCurrChange;\n                                var isMultiEvent;\n                                var isPhantomEvent;\n                                var isSingleEventPhantom;\n                                // Syncing up scope.eventData with actual event data.\n                                scope.eventData = getEventFromId(eid);\n                                if (scope.eventData) {\n                                    isChange = !!scope.eventData.change;\n                                    isCurrChange = isChange && scope.eventData.timeline_section === CURR_CHANGE_SECTION;\n                                    isMultiEvent = scope.eventData.is_multievent;\n                                    isPhantomEvent = scope.eventData.is_phantom;\n                                    isSingleEventPhantom = isPhantomEvent && scope.eventData.events.length === 1;\n                                }\n                                if (isMultiEvent) {\n                                    if (scope.eventData.timeline_section === BLACKOUT_SECTION)\n                                        scope.schedulesTitle = LBL_BLACKOUT_SCHEDULES;\n                                    else if (scope.eventData.timeline_section === MAINT_SECTION)\n                                        scope.schedulesTitle = LBL_MAINTENANCE_SCHEDULES;\n                                    if (createNewScope) {\n                                        scope.openBadgePopup = function() {\n                                            if (!scope.isPopupOpen)\n                                                scope.isBadgePopupOpen = true;\n                                        };\n                                        scope.closeBadgePopup = function() {\n                                            scope.isBadgePopupOpen = false;\n                                        };\n                                        scope.$watch('isPopupOpen', function(open) {\n                                            if (open) {\n                                                scope.closeBadgePopup();\n                                            }\n                                        });\n                                    }\n                                }\n                                if (isPhantomEvent) {\n                                    if (scope.eventData.type === BLACKOUT_TYPE)\n                                        scope.schedulesTitle = LBL_BLACKOUT_SCHEDULES;\n                                    else if (scope.eventData.type === MAINT_TYPE)\n                                        scope.schedulesTitle = LBL_MAINTENANCE_SCHEDULES;\n                                    else if (scope.eventData.type === BOTH_TYPE)\n                                        scope.schedulesTitle = LBL_BOTH_SCHEDULES;\n                                    if (isSingleEventPhantom) {\n                                        scope.eventData = scope.eventData.events[0];\n                                    }\n                                }\n                                if (createNewScope) {\n                                    if (isChange) {\n                                        scope.canShowDateTime = function() {\n                                            if ($scope.viewMode === CalendarView.DAY)\n                                                return $scope.filters.dayView.dateTime;\n                                            else if ($scope.viewMode === CalendarView.WEEK)\n                                                return $scope.filters.weekView.dateTime;\n                                            return true;\n                                        };\n                                    }\n                                    scope.tabindex = (g_accessibility === \"true\") ? \"0\" : \"-1\";\n                                    scope.enableField = function(fieldName) {\n                                        return scope.canRead(fieldName) && scope.canWrite(fieldName);\n                                    };\n                                    scope.canRead = function(fieldName) {\n                                        // If the field exists in $scope.change object, we can read it\n                                        return typeof $scope.fieldPermission === \"undefined\" ? $scope.change[fieldName] : $scope.fieldPermission[fieldName].canRead;\n                                    };\n                                    scope.canWrite = function(fieldName) {\n                                        return typeof $scope.fieldPermission === \"undefined\" ? $scope.change[fieldName] && $scope.change[fieldName]._canWrite : $scope.fieldPermission[fieldName].canWrite;\n                                    };\n                                    scope.canSave = function() {\n                                        var mS = moment.tz(scope.dates.start, scope.dateTimeFormat, g_tz);\n                                        var mE = moment.tz(scope.dates.end, scope.dateTimeFormat, g_tz);\n                                        return mS.isSameOrBefore(mE);\n                                    };\n\n                                    scope.close = function() {\n                                        scope.isPopupOpen = false;\n                                    };\n                                    changePopupClosers[scopeKey] = scope.close;\n\n                                    // Adding methods for accessibility\n                                    scope.onEventClick = function($event) {\n                                        $timeout(function() {\n                                            scope.openPopup($event);\n                                        });\n                                    };\n                                    scope.openPopup = function($event) {\n                                        if ($event.keyCode === ENTER || $event.keyCode === SPACE || $event.type === \"click\") {\n                                            $scope.closeChangePopups();\n                                            $event.preventDefault();\n                                            $event.stopPropagation();\n                                            $scope.changeFilterOpen = false;\n                                            $timeout(function() {\n                                                scope.isPopupOpen = true;\n                                                angular.element('#' + scope.getPopupId()).focus();\n                                            }, 100);\n                                            return true;\n                                        }\n                                    };\n                                    scope.$watch('isPopupOpen', function(newValue, oldValue) {\n                                        if ($scope.keyNav === 'false')\n                                            return;\n                                        if (!scope.isPopupOpen) {\n                                            $scope.config.keyNav = true;\n                                            $(\".sp-scroll\").off(\"scroll\");\n                                        } else {\n                                            $timeout(function() {\n                                                // By this time isPopupOpen is false watch would have been fired for other previously opened popups.\n                                                $scope.config.keyNav = false; // Disable left-right arrow keys to change dates when popup is open\n                                            }, 10);\n                                            // Listen to the scroll event to force adjusting popover\n                                            $(\".sp-scroll\").on(\"scroll\", function() {\n                                                scope.$digest();\n                                            });\n                                        }\n                                    });\n                                }\n                                if (needsCompilation) {\n                                    if (scope.eventData) {\n                                        if (isChange) {\n                                            $this.attr('uib-popover-template', '\"cab_readonly_change_event_popover.html\"');\n                                        } else if (isMultiEvent || (isPhantomEvent && !isSingleEventPhantom))\n                                            $this.attr('uib-popover-template', '\"cab_multi_window_event_popover.html\"');\n                                        else\n                                            $this.attr('uib-popover-template', '\"cab_window_event_popover.html\"');\n\n                                        if ($scope.viewMode !== CalendarView.DAY) {\n                                            var startDate;\n                                            if (scope.eventData.events)\n                                                startDate = scope.eventData.events[0].end_date;\n                                            else\n                                                startDate = scope.eventData.start_date;\n                                        }\n                                        $this.attr('popover-class', 'cab_change_calendar_popover');\n                                        $this.attr('popover-placement', 'auto');\n                                        $this.attr('popover-append-to-body', 'true');\n                                        $this.attr('popover-is-open', 'isPopupOpen');\n                                        $this.attr('popover-trigger', \"click outsideClick\");\n                                        $this.attr('popover-animation', 'false');\n                                        $this.attr('ng-keydown', 'openPopup($event)');\n                                        $this.attr('ng-click', 'onEventClick($event)');\n                                        $this.attr('tabindex', '-1');\n                                        if (isChange)\n                                            $this.attr('aria-labelledby', scope.eventData.id + \"_content\");\n                                        else {\n                                            if ($scope.viewMode == CalendarView.DAY) {\n                                                if (scope.eventData.timeline_section == BLACKOUT_SECTION)\n                                                    $this.attr(\"aria-label\", LBL_BLACKOUT_SCHEDULE);\n                                                else if (scope.eventData.timeline_section == MAINT_SECTION)\n                                                    $this.attr(\"aria-label\", LBL_MAINTENANCE_SCHEDULE);\n                                            }\n                                        }\n                                        scope.parentEventId = scopeKey;\n                                        scope.dateTimeFormat = $scope.dateTimeFormat;\n                                        $this.attr(PARENT_EVENT_ID, scopeKey);\n                                        // We do this from here instead of CSS so that if enhancement fails users do not see the hand icon.\n                                        $this.css('cursor', 'pointer');\n                                        $compile(this)(scope);\n                                    }\n                                }\n                            });\n                            garbageCollectOldEventScopes();\n                            defer.resolve();\n                        }, 100);\n                        return defer.promise;\n                    }\n\n                    function garbageCollectOldEventScopes() {\n                        for (var scopeKey in eventScopes) {\n                            var s = eventScopes[scopeKey];\n                            var id = scopeKey.split(':')[0];\n                            var count = parseInt(scopeKey.split(':')[1]);\n                            var maxCount = eventDuplicateCounts[id] || 0;\n                            var e = getEventFromId(id);\n                            var destroy = false;\n                            if (s && !e) {\n                                destroy = true;\n                                eventDuplicateCounts[id] = 0;\n                            } else if (s && e && count > maxCount) {\n                                // Garbage collecting duplicate scopes of current event\n                                // but when there is no longer need for these many duplicates.\n                                destroy = true;\n                            }\n                            if (destroy) {\n                                s.$destroy();\n                                eventScopes[scopeKey] = undefined;\n                                if (changePopupClosers[scopeKey])\n                                    changePopupClosers[scopeKey] = undefined;\n                            }\n                        }\n                    }\n\n                    function getFirstScope(ev) {\n                        return eventScopes[ev.id + ':1'];\n                    }\n                    var isRelatedSectionOpen = true;\n\n                    function setVerticalUnits(currChangeLabel, showBlackoutSection, showMaintSection, showRelatedSection) {\n                        var sections = [];\n                        if (showBlackoutSection)\n                            sections.push({\n                                key: BLACKOUT_SECTION,\n                                label: getWindowLabel(LBL_BLACKOUT_SCHEDULE)\n                            });\n                        if (showMaintSection)\n                            sections.push({\n                                key: MAINT_SECTION,\n                                label: getWindowLabel(LBL_MAINTENANCE_SCHEDULE)\n                            });\n                        sections.push({\n                            key: CURR_CHANGE_SECTION,\n                            label: currChangeLabel\n                        }); // Current Change\n\n                        $scope.config.timeline.verticalUnits = sections;\n                        compileTimelineLabels();\n                    }\n\n                    $scope.events = [];\n                    $scope.phantomEvents = {}; // Stores date to phantom event map. Phantom events are not actually sent to dhtmlx as events.\n                    $scope.ready = false; // When this directive is rendered, it might be within ng-hide. Initing scheduler code then will render it collapsed.\n                    $scope.verticalUnits = null;\n                    $scope.config = {\n                        date: dataUtil.currentDateAsPerUserProfile(),\n                        allowCreate: false,\n                        allowResize: $scope.isUpdatable === 'true',\n                        allowMoving: $scope.isUpdatable === 'true',\n                        weekStartDay: calendarUtils.getNormalizedWeekStartDay(dataUtil.getFirstDayOfWeek()),\n                        viewTimeFormat: $scope.timeformat,\n                        nativeEventNavigation: false,\n                        timeline: {\n                            displayButtonInUI: false,\n                            enabled: true, // It is needed here since $scope.onViewChange is not invoked until there is a change in view.\n                            support: true,\n                            property: {\n                                value: 'timeline_section'\n                            },\n                            renderType: TimelineView.TREE,\n                            section_autoheight: false,\n                            dy: 68, // This value is used in CSS too.\n                            dx: 215,\n                            event_dy: 'full',\n                            folder_dy: 23\n                        },\n                        xy: {\n                            scale_height: 36,\n                            day_scale_height: 30\n                        },\n                        templates: {\n                            week_scale_date: function(date, mode, schedulerInstance, jumptoAttr) {\n                                // For some reason I am getting real mode as 2nd arg, whereas the documentation does not say that.\n                                return \"<a href='#' \" + jumptoAttr + \">\" + schedulerInstance.date.date_to_str(\"%j %D\")(date) + \"</a>\";\n                            },\n                            event_class: function(start, end, ev) {\n                                var c;\n                                if (ev.timeline_section === BLACKOUT_SECTION)\n                                    c = \"cab_blackout_event cab_window_event\";\n                                else if (ev.timeline_section === MAINT_SECTION)\n                                    c = \"cab_maint_event cab_window_event\";\n                                else if (ev.timeline_section === CURR_CHANGE_SECTION)\n                                    c = \"cab_current_change_event cab_change_event\";\n                                else\n                                    c = \"cab_related_change_event cab_change_event\";\n                                c += \" cab_event\";\n                                if (viewStartDate && ev.start_date.getTime() < viewStartDate.getTime()) {\n                                    c += \" cab_event_extends_left\";\n                                }\n                                if (viewEndDate && ev.end_date.getTime() > viewEndDate.getTime()) {\n                                    c += \" cab_event_extends_right\";\n                                }\n                                if (ev.is_multievent)\n                                    c += \" cab_multievent\";\n                                if (ev.change) {\n                                    if (!ev.hasOwnProperty('change')) {\n                                        // Means this is a dummy copy. This is done in basic views where same event spans multiple rows.\n                                        // The dummy copy's prototype is set to actual event object. However, it overrides start_date & end_date.\n                                        // The end_date is the actual end date but start date is always the change data's start date.\n                                        // The last span has reference to original event object.\n                                        c += \" cab_event_extends_right\";\n                                        if (!ev._first_chunk)\n                                            c += \" cab_event_extends_left\";\n                                        Object.getPrototypeOf(ev)._hasDummyCopy = true;\n                                    } else {\n                                        // Relies on that fact that if there are dummy events then they are rendered before,\n                                        // and the actual event is last span.\n                                        if (ev._hasDummyCopy)\n                                            c += \" cab_event_extends_left\";\n                                        ev._hasDummyCopy = false;\n                                    }\n                                }\n                                return c;\n                            },\n                            month_date_class: function(date) {\n                                // This might get called before fetchWindow finishes. In that case this will be\n                                // working on incorrect phantom data. However, when fetchWindow finishes that triggers\n                                // buildEventArr() which further recreates the events array causing its watch to fire\n                                // in common calendar; which then renders the scheduler, case this method to be invoked\n                                // again.\n                                var key = getPhantomKey(date);\n                                var ev = $scope.phantomEvents[key];\n                                if (ev) {\n                                    var c;\n                                    if (ev.type === BLACKOUT_TYPE)\n                                        c = \"cab_blackout_event cab_window_event\";\n                                    else if (ev.type === MAINT_TYPE)\n                                        c = \"cab_maint_event cab_window_event\";\n                                    else if (ev.type === BOTH_TYPE)\n                                        c = \"cab_blackout_event cab_maint_event cab_window_event\";\n                                    c += \" cab_event\";\n                                    return c;\n                                }\n                                return '';\n                            },\n                            month_day: function(date, schedulerInstance, jumptoAttr, tabindex, ariaDayName) {\n                                var dateToStr_func = schedulerInstance.date.date_to_str(schedulerInstance.config.month_day);\n                                var d = dateToStr_func(date);\n                                var key = getPhantomKey(date);\n                                var ev = $scope.phantomEvents[key];\n                                var html = \"<a  tabindex='-1' \";\n                                var ariaAttr = \" role='link' aria-label='\" + ariaDayName + \". \";\n                                if (ev) {\n                                    if (ev.type === BLACKOUT_TYPE)\n                                        ariaAttr = ariaAttr + i18n.getMessage('This day has blackout window scheduled. Press F7 for popup with more details.');\n                                    else if (ev.type === MAINT_TYPE)\n                                        ariaAttr = ariaAttr + i18n.getMessage('This day has maintenance window scheduled. Press F7 for popup with more details.');\n                                    else if (ev.type === BOTH_TYPE)\n                                        ariaAttr = ariaAttr + i18n.getMessage('This day has both blackout and maintenance windows scheduled. Press F7 for popup with more details.');\n                                } else\n                                    ariaAttr = ariaAttr + i18n.getMessage('This day has no blackout or maintenance windows scheduled.');\n                                ariaAttr = ariaAttr + \"' \";\n                                if (ev)\n                                    return html + \"class='event_details month_date' event_id='\" + ev.id + \"' \" +\n                                        jumptoAttr + ariaAttr + \" href='#'>\" + d + \"</a>\";\n                                else\n                                    return html + \"class='month_date' \" + jumptoAttr + ariaAttr + \" href='#'>\" + d + \"</a>\";\n                            },\n                            event_bar_date: function(start, end, ev) {\n                                return ''; // Used to remove dates from single day month views.\n                            },\n                            tooltip_text: function(start, end, ev) {\n                                var t = dataUtil.dateRangeToFriendlyText(start, end);\n                                if (ev.schedule) {\n                                    if (ev.timeline_section === BLACKOUT_SECTION)\n                                        t += \"<p>\" + LBL_BLACKOUT_SCHEDULE + \"</p>\";\n                                    else\n                                        t += \"<p>\" + LBL_MAINTENANCE_SCHEDULE + \"</p>\";\n                                } else if (ev.is_multievent) {\n                                    if (ev.timeline_section === BLACKOUT_SECTION)\n                                        t += \"<p>\" + LBL_MULTIPLE_BLACKOUT_SCHEDULES + \"</p>\";\n                                    else\n                                        t += \"<p>\" + LBL_MULTIPLE_MAINTENANCE_SCHEDULES + \"</p>\";\n                                } else if (ev.change)\n                                    t += \"<p>\" + $sanitize($scope.instanceName) + \"</p>\";\n                                return t;\n                            }\n                        },\n                        mode: CalendarView.WEEK,\n                        readOnly: false\n                    };\n\n                    function isReady() {\n                        if (el.height() === 0) { // Means it is not yet visible\n                            $timeout(isReady, 300);\n                            return;\n                        }\n                        $scope.ready = true;\n                    }\n                    isReady();\n\n                    var loadingCallsCounter = 0;\n                    $scope.enableLoading = function() {\n                        $scope.isLoading = true;\n                        loadingCallsCounter++;\n                    };\n                    $scope.disableLoading = function() {\n                        if (loadingCallsCounter === 0)\n                            return;\n                        loadingCallsCounter--;\n                        if (loadingCallsCounter === 0)\n                            $scope.isLoading = false;\n                    };\n\n                    setVerticalUnits(i18n.getMessage('No change selected'));\n                    $scope.viewMode = $scope.config.mode;\n                    $scope.onViewChange = function(newView) {\n                        var oldView = $scope.viewMode;\n                        $scope.viewMode = newView;\n                        $scope.closeChangePopups();\n                        if (newView === CalendarView.DAY || newView === CalendarView.WEEK) {\n                            $scope.config.timeline.enabled = true;\n                            if (oldView === CalendarView.MONTH)\n                                buildEventArr();\n                            //buildEventArr(); given as buildreleatedchanges\n                        } else if (newView === CalendarView.MONTH) {\n                            $scope.config.timeline.enabled = false;\n                            buildEventArr(); // Need to do so that phantom events can be built\n                        }\n                        $timeout(function() {\n                            $('.dhx_cal_data .cab_window_event').attr(\"tabindex\", \"-1\");\n                        });\n                    };\n                    $scope.onSchedulerResize = function($scheduler) {\n                        $scope.onViewChange($scope.viewMode);\n                    };\n                    $scope.onAfterViewChange = function() {\n                        if ($scope.viewMode === CalendarView.DAY || $scope.viewMode === CalendarView.WEEK)\n                            compileTimelineLabels();\n                        refreshEventsText(true);\n                        addPopoversToEventsIfNeeded();\n                    };\n                    var viewStartDate;\n                    var viewEndDate;\n                    $scope.onDateRangeChange = function(start, end) {\n                        viewStartDate = start;\n                        viewEndDate = end;\n                        $scope.closeChangePopups();\n                        if ($scope.viewMode !== CalendarView.MONTH)\n                            buildEventArrIfNotAlreadyBuilt();\n                        buildMarkedSpans();\n                        addPopoversToEventsIfNeeded();\n                    };\n                    $scope.onFolderToggle = function(isOpen) {\n                        // Toggling folder collapse re-renders the section labels and events,\n                        // hence we need to re-sprinkle magic dust.\n                        compileTimelineLabels();\n                        addPopoversToEventsIfNeeded();\n                        isRelatedSectionOpen = isOpen;\n                    };\n                    $scope.onBeforeTooltip = function(ev) {\n                        return false;\n                    };\n\n                    $scope.$watch('events', function() {\n                        buildMarkedSpans();\n                        compileTimelineLabels();\n                        addPopoversToEventsIfNeeded().then(function() {\n                            setFocus(focusIDAfterUpdate, 500);\n                            focusIDAfterUpdate = undefined;\n                        });\n                    });\n                    var changePopupClosers = {};\n                    $scope.closeChangePopups = function(exceptWithScopeKey) {\n                        for (var k in changePopupClosers) {\n                            if (k === exceptWithScopeKey)\n                                continue;\n                            if (changePopupClosers[k])\n                                changePopupClosers[k]();\n                        }\n                    };\n                    var currentChangeEvent;\n                    var currentChangeLabel;\n                    $scope.enableLoading();\n                    $scope.$watch('change', function(currentChange) {\n                        if (currentChange) {\n                            // When we update change we reassign it to $scope.change so it is updated, but\n                            // cloning helps prevent any possible infinite loop if we ever decide to deep watch this object.\n                            currentChange = angular.extend({}, currentChange);\n                            currentChangeEvent = changeToEvent(currentChange, CURR_CHANGE_SECTION);\n                            currentChangeLabel = getChangeLabel(currentChange);\n                            $scope.disableLoading();\n\n                            setVerticalUnits(currentChangeLabel, true, true); // TODO turn off windows section if that is turned off using properties\n\n                            if (currentChange.start_date)\n                                $scope.config.date = new Date(currentChange.start_date.getTime()); // changeToEvent has already converted WS date to JS Date.\n\n                            $scope.events = [currentChangeEvent];\n                            $scope.fetchEvents(currentChange.start_date, currentChange.end_date);\n                        } else {\n                            setVerticalUnits(i18n.getMessage('No change selected'));\n                            $scope.events = [];\n                        }\n                        $scope.ready = false;\n                        isReady();\n                    });\n\n                    function mergeOverlappingWindowEvents(events) {\n                        var rangeBuckets = [];\n                        for (var i = 0; i < events.length; i++) {\n                            var e = events[i];\n\n                            // If the current event start/end is not within my current view start/end then it should not be factored\n                            if (viewStartDate && viewEndDate && !calendarUtils.testRangesIntersect(e.start_date, e.end_date, viewStartDate, viewEndDate))\n                                continue;\n\n                            // If the current event starts/ends at the end/start of the visible range then it should not be factored\n                            // This check is performed because calendarUtils.testRangesIntersect will consider an event that starts/ends at the same time as viewEndDate/viewStartDate as being inside the range\n                            if (viewStartDate && viewEndDate && (e.start_date.getTime() === viewEndDate.getTime() || e.end_date.getTime() === viewStartDate.getTime()))\n                                continue;\n\n                            var eligibleBuckets = [];\n                            for (var j = 0; j < rangeBuckets.length; j++) {\n                                var b = rangeBuckets[j];\n                                if (calendarUtils.testRangesIntersect(e.start_date, e.end_date, b.start, b.end))\n                                    eligibleBuckets.push(j);\n                            }\n                            var targetB = {\n                                events: [e],\n                                start: e.start_date,\n                                end: e.end_date\n                            };\n                            rangeBuckets.push(targetB);\n                            // Merging all eligible buckets as one single bucket.\n                            // All events in eligible buckets will be emptied into\n                            // bucket targetB and then those buckets will be deleted.\n                            for (j = eligibleBuckets.length - 1; j >= 0; j--) {\n                                var currB = rangeBuckets[eligibleBuckets[j]];\n                                if (targetB.start.getTime() > currB.start.getTime())\n                                    targetB.start = currB.start;\n                                if (targetB.end.getTime() < currB.end.getTime())\n                                    targetB.end = currB.end;\n\n                                targetB.events = dataUtil.mergeSortedArrays(targetB.events, currB.events, function(e1, e2) {\n                                    return e1.start_date.getTime() - e2.start_date.getTime();\n                                });\n\n                                // Since values in eligibleBuckets always progressively increases\n                                // hence when iterating in reverse we can safely delete the merged buckets.\n                                rangeBuckets.splice(eligibleBuckets[j], 1);\n                            }\n                        }\n                        return rangeBuckets.map(function(b) {\n                            if (b.events.length > 1) {\n                                var leaderEvent = b.events[0];\n                                var id = b.events.map(function(e) {\n                                    return e.id;\n                                }).join(',');\n                                return {\n                                    id: id,\n                                    start_date: b.start,\n                                    end_date: b.end,\n                                    text: getWindowEventText(id, b.events, b.start, b.end, leaderEvent.timeline_section),\n                                    is_multievent: true,\n                                    events: b.events,\n                                    timeline_section: leaderEvent.timeline_section\n                                };\n                            } else {\n                                return b.events[0];\n                            }\n                        });\n                    }\n\n                    function buildPhantomEventMap() {\n                        $scope.phantomEvents = {};\n                        var events = [];\n                        if ($scope.blackoutSchedules && $scope.blackoutSchedules.length)\n                            events = events.concat($scope.blackoutSchedules);\n                        if ($scope.maintenanceSchedules && $scope.maintenanceSchedules.length)\n                            events = events.concat($scope.maintenanceSchedules);\n                        events.forEach(function(e) {\n                            calendarUtils.getAllDaysInDateRange(e.start_date, e.end_date).forEach(function(d) {\n                                var key = getPhantomKey(d);\n                                var pe = $scope.phantomEvents[key];\n                                if (!pe) {\n                                    pe = {\n                                        id: uid(),\n                                        date: new Date(d.getFullYear(), d.getMonth(), d.getDate()),\n                                        is_phantom: true,\n                                        type: undefined,\n                                        events: []\n                                    };\n                                    $scope.phantomEvents[key] = pe;\n                                }\n                                if (e.timeline_section === BLACKOUT_SECTION) {\n                                    if (!pe.type)\n                                        pe.type = BLACKOUT_TYPE;\n                                    else if (pe.type === MAINT_TYPE)\n                                        pe.type = BOTH_TYPE;\n                                } else if (e.timeline_section === MAINT_SECTION) {\n                                    if (!pe.type)\n                                        pe.type = MAINT_TYPE;\n                                    else if (pe.type === BLACKOUT_TYPE)\n                                        pe.type = BOTH_TYPE;\n                                } else\n                                    throw 'Programming error! Only schedule type events are expected here.';\n                                pe.events.push(e);\n                            });\n                        });\n                    }\n\n                    function getCurrentEventBuildMarker() {\n                        if (viewStartDate)\n                            return viewStartDate.getTime() + $scope.viewMode;\n                        return undefined;\n                    }\n\n                    function buildEventArrIfNotAlreadyBuilt() {\n                        if (eventBuildMarker === getCurrentEventBuildMarker())\n                            return;\n                        buildEventArr();\n                    }\n                    var eventBuildMarker;\n\n                    function buildEventArr() {\n                        if (currentChangeEvent) {\n                            $scope.events = [currentChangeEvent];\n                            if ($scope.viewMode !== CalendarView.MONTH) {\n\n                                var evs;\n                                if ($scope.blackoutSchedules && $scope.blackoutSchedules.length) {\n                                    evs = $scope.blackoutSchedules;\n                                    evs = mergeOverlappingWindowEvents(evs);\n                                    $scope.events = $scope.events.concat(evs);\n                                }\n                                if ($scope.maintenanceSchedules && $scope.maintenanceSchedules.length) {\n                                    evs = $scope.maintenanceSchedules;\n                                    evs = mergeOverlappingWindowEvents(evs);\n                                    $scope.events = $scope.events.concat(evs);\n                                }\n                                setVerticalUnits(currentChangeLabel, true, true, false);\n\n                            } else {\n                                buildPhantomEventMap();\n                            }\n                        } else {\n                            $scope.blackoutSchedules = [];\n                            $scope.maintenanceSchedules = [];\n\n                            setVerticalUnits(currentChangeLabel, true, true, false);\n                            $scope.events = [];\n                        }\n                        eventBuildMarker = getCurrentEventBuildMarker();\n                    }\n\n                    function buildMarkedSpans() {\n                        if (currentChangeEvent) {\n                            var c = 'current_change_span_mark';\n                            if (viewStartDate && currentChangeEvent.start_date.getTime() < viewStartDate.getTime())\n                                c += ' left_extends_beyond';\n                            if (viewEndDate && currentChangeEvent.end_date.getTime() > viewEndDate.getTime())\n                                c += ' right_extends_beyond';\n                            $scope.markedSpans = [{\n                                start_date: currentChangeEvent.start_date,\n                                end_date: currentChangeEvent.end_date,\n                                type: 'current_change_marker',\n                                css: c\n                            }];\n                            return;\n                        }\n                        $scope.markedSpans = [];\n                    }\n\n                    var startDate;\n                    var endDate;\n                    $scope.fetchEvents = function(start, end) {\n                        // Recording current date ranges\n                        startDate = start;\n                        endDate = end;\n                        fetchWindows();\n                    };\n\n                    var windowFetchPromise;\n                    var c = 0;\n\n                    function fetchWindows() {\n                        if (windowFetchPromise) {\n                            windowFetchPromise.cancel();\n                            $scope.disableLoading();\n                        }\n                        if (!currentChangeEvent) { // Change info not available, deferring fetch until it is available.\n                            return;\n                        }\n\n                        if (!startDate) { // Ignore since date range is not known yet.\n                            return;\n                        }\n\n                        $scope.enableLoading();\n                        windowFetchPromise = cancellablePromise(vcabDataSource.change.getRelatedWindows(currentChangeEvent.id, startDate, endDate));\n                        windowFetchPromise.then(function(data) {\n                            $scope.blackoutSchedules = [];\n                            $scope.maintenanceSchedules = [];\n                            data.maintenance.forEach(function(m) {\n                                $scope.maintenanceSchedules = $scope.maintenanceSchedules.concat(scheduleToEvents(m, MAINT_SECTION));\n                            });\n                            data.blackout.forEach(function(b) {\n                                $scope.blackoutSchedules = $scope.blackoutSchedules.concat(scheduleToEvents(b, BLACKOUT_SECTION));\n                            });\n                            if (data.warn_invalid_conflict_checker) {\n                                $scope.onWarn({\n                                    $msg: i18n.getMessage('Rest API Failure : ' + data.message)\n                                });\n                                calendarNotificationService.show(i18n.getMessage(\"Unable to get conflicts. Please contact customer support.\"), \"error\");\n                            }\n                            buildEventArr();\n                            $scope.disableLoading();\n                        }, function(data) {\n                            $scope.blackoutSchedules = [];\n                            $scope.maintenanceSchedules = [];\n                            $scope.onWarn({\n                                $msg: i18n.getMessage('Rest API Failure : ' + data.data.error.message)\n                            });\n                            calendarNotificationService.show(i18n.getMessage(\"Unable to get conflicts. Please contact customer support.\"), \"error\");\n                            buildEventArr();\n                            $scope.disableLoading();\n                        });\n                    }\n\n                    var relatedChangeFetchPromise;\n\n\n\n                    // Handling filters\n                    function setAllAndNone(c) {\n                        var score = 0;\n                        var total = 0;\n                        for (var k in c) {\n                            if (k === ALL_FILTER || k === NONE_FILTER)\n                                continue;\n                            total++;\n                            if (c[k])\n                                score++;\n                        }\n                        if (total === 0)\n                            return;\n                        c.all = false;\n                        c.none = false;\n                        if (score === total)\n                            c.all = true;\n                        if (score === 0)\n                            c.none = true;\n                    }\n                    if (!$scope.configOptions)\n                        $scope.configOptions = {};\n\n                    if (!$scope.dayViewOptions) {\n                        $scope.dayViewOptions = {};\n                    }\n                    if (!$scope.weekViewOptions)\n                        $scope.weekViewOptions = {};\n                    if (!$scope.monthViewOtions)\n                        $scope.monthViewOtions = {};\n                    $scope.filters = {\n                        config: $scope.configOptions,\n                        dayView: $scope.dayViewOptions,\n                        weekView: $scope.weekViewOptions,\n                        montView: $scope.monthViewOtions,\n                        tabSelection: $scope.SETTINGS_TAB\n                    };\n                    if ($scope.autoSaveAndFetchOptionsAsUserPref === 'true') {\n                        var q = $q.all(\n                            [userPreferences.getPreference('cab_workbench.day_view_options'),\n                                userPreferences.getPreference('cab_workbench.week_view_options'),\n                                userPreferences.getPreference('cab_workbench.config_options')\n                            ]\n                        );\n                        q.then(function(r) {\n                            $scope.dayViewOptions = {\n                                dateTime: true,\n                                number: true,\n                            };\n                            $scope.filters.dayView = angular.extend($scope.dayViewOptions, deserializeObj(r[0]));\n                            $scope.weekViewOptions = {\n                                dateTime: true,\n                                number: true,\n                            };\n                            $scope.filters.weekView = angular.extend($scope.weekViewOptions, deserializeObj(r[1]));\n                            $scope.configOptions = {\n                                dateTime: true,\n                            };\n\t\t\t\t\t\t\t$scope.filters.config = angular.extend($scope.configOptions, deserializeObj(r[2]));\n                            $scope.monthViewOptions = {\n                                dateTime: true,\n                                name: true,\n                            };\n                            $scope.filters.monthView = $scope.monthViewOptions;\n                            \n                        });\n                    } else {\n                        $scope.filters.config.all = true;\n                        $scope.filters.dayView.all = true;\n                        $scope.filters.weekView.all = true;\n                        $scope.filters.monthView.all = true;\n                    }\n\n                    $scope.$watch('filters.config.all', function(all) {\n                        if (all) {\n\t\t\t\t\t\t\t$scope.filters.config.none=false;\n\t\t\t\t\t\t\t$scope.filters.dayView.all = true;\n\t\t\t\t\t\t\t$scope.filters.weekView.all = true;\n\t\t\t\t\t\t\t$scope.filters.monthView.all = true;\n                        }\n                    });\n                    $scope.$watch('filters.config.none', function(none) {\n                        if (none) {\n                            $scope.filters.dayView.none = true;\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t$scope.filters.weekView.none = true;\n\t\t\t\t\t\t\t$scope.filters.monthView.none = true;\n\t\t\t\t\t\t\t$scope.filters.config.all=false;\n                        }\n                    });\n\n                    $scope.saveConfigOptions = function() {\n                        if ($scope.autoSaveAndFetchOptionsAsUserPref === 'true') {\n                            $timeout(function() {\n                                var s = serializeObj($scope.configOptions);\n                                if (s)\n                                    userPreferences.setPreference('cab_workbench.config_options', s);\n                            });\n                        }\n                    };\n\n                    // Day view filters\n                    $scope.$watch('filters.dayView.all', function(all) {\n                        if (all) {\n                            $scope.filters.dayView.none = false;\n                            $scope.filters.dayView.dateTime = true;\n                            $scope.filters.dayView.number = true;\n\t\t\t\t\t\t\t\n                        }\n                    });\n                    $scope.$watch('filters.dayView.none', function(none) {\n                        if (none) {\n                            $scope.filters.dayView.all = false;\n                            $scope.filters.dayView.dateTime = false;\n                            $scope.filters.dayView.number = false;\n                        }\n                    });\n                    $scope.$watchGroup(['filters.dayView.dateTime',\n                        'filters.dayView.number',\n                    ], function() {\n                        setAllAndNone($scope.filters.dayView);\n                        refreshEventsText(true);\n                    });\n                    $scope.saveDayViewOptions = function() {\n                        if ($scope.autoSaveAndFetchOptionsAsUserPref === 'true') {\n                            $timeout(function() {\n                                var s = serializeObj($scope.dayViewOptions);\n                                if (s)\n                                    userPreferences.setPreference('cab_workbench.day_view_options', s);\n                            });\n                        }\n                    };\n\n                    // Week view filters\n                    $scope.$watch('filters.weekView.all', function(all) {\n                        if (all) {\n                            $scope.filters.weekView.none = false;\n                            $scope.filters.weekView.dateTime = true;\n                            $scope.filters.weekView.number = true;\n                        }\n                    });\n                    $scope.$watch('filters.weekView.none', function(none) {\n                        if (none) {\n                            $scope.filters.weekView.all = false;\n                            $scope.filters.weekView.dateTime = false;\n                            $scope.filters.weekView.number = false;\n                        }\n                    });\n                    $scope.$watchGroup(['filters.weekView.dateTime',\n                        'filters.weekView.number',\n                    ], function() {\n                        setAllAndNone($scope.filters.weekView);\n                        refreshEventsText(true);\n                    });\n                    $scope.saveWeekViewOptions = function() {\n                        if ($scope.autoSaveAndFetchOptionsAsUserPref === 'true') {\n                            $timeout(function() {\n                                var s = serializeObj($scope.weekViewOptions);\n                                if (s)\n                                    userPreferences.setPreference('cab_workbench.week_view_options', s);\n                            });\n                        }\n                    };\n\n\n                    $scope.$watch('filters.monthView.all', function(all) {\n                        if (all) {\n                            $scope.filters.monthView.none = false;\n                            $scope.filters.monthView.dateTime = true;\n                            $scope.filters.monthView.name = true;\n                        }\n                    });\n                    $scope.$watch('filters.monthView.none', function(none) {\n                        if (none) {\n                            $scope.filters.monthView.all = false;\n                            $scope.filters.monthView.dateTime = false;\n                            $scope.filters.monthView.name = false;\n                        }\n                    });\n                    $scope.$watchGroup(['filters.monthView.dateTime',\n                        'filters.monthView.name',\n                    ], function() {\n                        setAllAndNone($scope.filters.monthView);\n                        refreshEventsText(true);\n                    });\n\n                    $scope.saveMonthViewOptions = function() {\n                        if ($scope.autoSaveAndFetchOptionsAsUserPref === 'true') {\n                            $timeout(function() {\n                                $scope.monthViewOptions = $scope.monthViewOptions;\n                            });\n                        }\n                    };\n\n                    $scope.$watch('keyNav', function() {\n                        if ($scope.keyNav === 'false')\n                            $scope.config.keyNav = false;\n                        else\n                            $scope.config.keyNav = true;\n                    });\n\n                    $scope.$on('$destroy', function() {\n                        $scope.events = [];\n                        $(document).off('.cab_change_popover');\n                        $(document).off('.' + CHANGE_FILTER_POPOVER);\n                        garbageCollectOldEventScopes();\n                    });\n\n                    function sortComprator(event1, event2) {\n                        var dateStr1 = $(event1).find('a').attr('jump_to');\n                        var dateStr2 = $(event2).find('a').attr('jump_to');\n                        var date1 = dateStr1 ? moment(dateStr1, \"DD-MM-YYYY hh:mm\") : moment(getCommonCalCtrl().getEvent($(event1).attr('event_id')).start_date);\n                        var date2 = dateStr2 ? moment(dateStr2, \"DD-MM-YYYY hh:mm\") : moment(getCommonCalCtrl().getEvent($(event2).attr('event_id')).start_date);\n                        return date1.isAfter(date2) ? 1 : -1;\n                    }\n                    calendarAccessibilityUtils.addShortcut('events', '.cab_event', E, undefined, undefined, sortComprator);\n                    el.on('keydown', '.cab_event', function(event) {\n                        if (event.which == ENTER)\n                            event.stopPropagation();\n                    });\n                }\n            };\n        });\n}(jQuery));","sys_class_name":"sys_ui_script","sys_id":"4253dca053025110a6f8ddeeff7b124a","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/3b83a3f304312210559073c06a02f788","value":"3b83a3f304312210559073c06a02f788"},"ui_type":"0","sys_update_name":"sys_ui_script_4253dca053025110a6f8ddeeff7b124a","sys_updated_by":"admin","sys_created_on":"2022-09-16 16:41:17","name":"clone_calendar.vcal.snChangeCabCalendar","sys_name":"clone_calendar.vcal.snChangeCabCalendar","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"20","active":"true","description":"Service modelUtil.  Provides object patching, timezone management, creation of ms values for date based fields.","use_scoped_format":"false","global":"false","sys_updated_on":"2019-03-25 17:18:11","sys_tags":"","script_name":"","script":"angular.module(\"sn.app_common\")\n\t.service(\"modelUtil\", ['SNAPI', 'TIME', '$rootScope', '$http', '$log', function(SNAPI, TIME, $rootScope, $http, $log) {\n\t\tvar modelUtil = this;\n\t\tvar DATE_RX = /^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}$/;\n\t\tvar YMD_RX = /^\\d{4}-\\d{2}-\\d{2}$/;\n\t\tvar DEFAULT_GLIDE_LIST_SEPARATOR = \", \";\n\n\t\t// Mapping of legacy ambiguous time zones to equivalent. Taken from Java mappings\n\t\t// See: https://docs.oracle.com/javase/8/docs/api/java/time/ZoneId.html#SHORT_IDS\n\t\tvar SHORT_IDS = {\n\t\t\t\"ACT\": \"Australia/Darwin\",\n\t\t\t\"AET\": \"Australia/Sydney\",\n\t\t\t\"AGT\": \"America/Argentina/Buenos_Aires\",\n\t\t\t\"ART\": \"Africa/Cairo\",\n\t\t\t\"AST\": \"America/Anchorage\",\n\t\t\t\"BET\": \"America/Sao_Paulo\",\n\t\t\t\"BST\": \"Asia/Dhaka\",\n\t\t\t\"CAT\": \"Africa/Harare\",\n\t\t\t\"CNT\": \"America/St_Johns\",\n\t\t\t\"CST\": \"America/Chicago\",\n\t\t\t\"CTT\": \"Asia/Shanghai\",\n\t\t\t\"EAT\": \"Africa/Addis_Ababa\",\n\t\t\t\"ECT\": \"Europe/Paris\",\n\t\t\t\"IET\": \"America/Indiana/Indianapolis\",\n\t\t\t\"IST\": \"Asia/Kolkata\",\n\t\t\t\"JST\": \"Asia/Tokyo\",\n\t\t\t\"MIT\": \"Pacific/Apia\",\n\t\t\t\"NET\": \"Asia/Yerevan\",\n\t\t\t\"NST\": \"Pacific/Auckland\",\n\t\t\t\"PLT\": \"Asia/Karachi\",\n\t\t\t\"PNT\": \"America/Phoenix\",\n\t\t\t\"PRT\": \"America/Puerto_Rico\",\n\t\t\t\"PST\": \"America/Los_Angeles\",\n\t\t\t\"SST\": \"Pacific/Guadalcanal\",\n\t\t\t\"VST\": \"Asia/Ho_Chi_Minh\"\n\t\t};\n\n\t\t/**\n\t\t * Returns a valid time zone name compensating for ambiguous time zones.\n\t\t * Defaults to UTC if an unsupported value is provided.\n\t\t */\n\t\tmodelUtil.checkTzName = function(tzName) {\n\t\t\tif (!tzName)\n\t\t\t\treturn;\n\t\t\t// Supported values\n\t\t\tif (moment.tz.zone(tzName) != null)\n\t\t\t\treturn tzName;\n\t\t\t// Ambiguous values\n\t\t\tif (typeof SHORT_IDS[tzName] !== \"undefined\")\n\t\t\t\treturn SHORT_IDS[tzName];\n\t\t\t// Unknown values\n\t\t\treturn \"UTC\";\n\t\t};\n\n\t\tvar dstOffset = {};\n\t\t/**\n\t\t * Get the DST offset for a timezone for a given timestamp.\n\t\t * Takes into account offsets which are not 1 hour, years/locals without DST etc.\n\t\t *\n\t\t * timestamp: UTC timestamp\n\t\t * tzName: name of the timezone.  Defaults to local zone if not present.\n\t\t */\n\t\tmodelUtil.getDSTOffset = function(timestamp, tzName) {\n\t\t\tvar year = new Date(timestamp).getFullYear();\n\t\t\ttzName = this.checkTzName(tzName);\n\n\t\t\tvar tzKey = (tzName ? tzName : 'local') + \"/\" + year;\n\t\t\tvar jan = new Date(year, 0, 1);\n\n\t\t\tif (dstOffset[tzKey])\n\t\t\t\treturn dstOffset[tzKey];\n\n\t\t\tif (!tzName) {\n\t\t\t\tfor (var i = 1; i < 12; i++) {\n\t\t\t\t\tdstOffset[tzKey] = Math.abs(jan.getTimezoneOffset() - (new Date(year,i,1)).getTimezoneOffset());\n\t\t\t\t\tif (dstOffset[tzKey] != 0)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\treturn dstOffset[tzKey];\n\t\t\t}\n\n\t\t\t// Same as above but for a defined timezone.\n\t\t\tvar zone = moment.tz.zone(tzName);\n\t\t\tfor (var j = 1; j < 12; j++) {\n\t\t\t\tdstOffset[tzKey] = Math.abs(zone.utcOffset(jan.getTime()) - zone.utcOffset((new Date(year, j, 1)).getTime()));\n\t\t\t\tif (dstOffset[tzKey] != 0)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn dstOffset[tzKey];\n\t\t};\n\n\t\t/**\n\t\t * Returns the MS difference between the client local time zone offset and the provided time zone offset.\n\t\t *\n\t\t * timestamp: UTC timestamp\n\t\t * tzName: name of the timezone.  Defaults to local offset if not present.\n\t\t */\n\t\tmodelUtil.getTzToLocalMSDiff = function(timestamp, tzName) {\n\t\t\tif (!tzName)\n\t\t\t\treturn 0; // No difference if no time zone.\n\n\t\t\treturn (moment.tz.zone(this.checkTzName(tzName)).utcOffset(timestamp) * TIME.MINUTE * -1) - ((new Date(timestamp)).getTimezoneOffset() * TIME.MINUTE * -1);\n\t\t};\n\n\t\t/**\n\t\t * Patch object with values from record watcher/table API format\n\t\t * Adds in 'value_ms' UTC millisecond value for recognised dates\n\t\t */\n\t\tmodelUtil.patchObject = function(obj, patch) {\n\t\t\tfor (var attr in patch) {\n\t\t\t\tvar permission;\n\t\t\t\tif (obj[attr])\n\t\t\t\t\tpermission = obj[attr]._canWrite;\n\t\t\t\tobj[attr] = patch[attr];\n\t\t\t\tif (permission)\n\t\t\t\t\tobj[attr]._canWrite = permission;\n\t\t\t\tmodelUtil.addValueMS(obj[attr]);\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Adds a value_ms to a date time field.\n\t\t */\n\t\tmodelUtil.addValueMS = function(element) {\n\t\t\tfunction strToMS(strDate) {\n\t\t\t\tvar dtComp = strDate.split(\" \");\n\t\t\t\tvar dComp = dtComp[0].split(\"-\"); //y0, m1, d2\n\t\t\t\tvar tComp = dtComp[1].split(\":\"); //h0, mi1, s2\n\t\t\t\treturn Date.UTC(dComp[0], dComp[1]-1, dComp[2], tComp[0], tComp[1], tComp[2]);\n\t\t\t}\n\n\t\t\tfunction strYMDToMS(strYMD) {\n\t\t\t\tvar dComp = strYMD.split(\"-\");\n\t\t\t\treturn Date.UTC(dComp[0], dComp[1]-1, dComp[2]);\n\t\t\t}\n\n\t\t\t// If the value matches a date stamp, add a conversion to MS.\n\t\t\tif (typeof element.value === \"string\") {\n\t\t\t\tif (element.value.match(DATE_RX))\n\t\t\t\t\telement.value_ms = strToMS(element.value);\n\t\t\t\telse if (element.value.match(YMD_RX))\n\t\t\t\t\telement.value_ms = strYMDToMS(element.value);\n\t\t\t\telse\n\t\t\t\t\treturn; //If it's not a date\n\t\t\t} else\n\t\t\t\treturn; // If it's not a string\n\n\t\t\t// Create a forced TZ display_value_ms\n\t\t\tif (element.tz_name && element.value_ms) {\n\t\t\t\telement.display_value_ms = element.value_ms + modelUtil.getTzToLocalMSDiff(element.value_ms, element.tz_name);\n\n\t\t\t\t// Adjust display value MS for DST if the value and display value span DST changeover\n\t\t\t\tvar dispInDST = moment(element.display_value_ms).isDST();\n\t\t\t\tvar valInDST = moment(element.value_ms).isDST();\n\t\t\t\tif (dispInDST && !valInDST)\n\t\t\t\t\telement.display_value_ms -= (this.getDSTOffset(element.value_ms) * TIME.MINUTE);\n\t\t\t\telse if (!dispInDST && valInDST)\n\t\t\t\t\telement.display_value_ms += (this.getDSTOffset(element.value_ms) * TIME.MINUTE);\n\t\t\t}\n\n\t\t};\n\n\t\t/**\n\t\t * Add a value_ms to all date time fields in record\n\t\t */\n\t\tmodelUtil.addValueMSToAll = function(record) {\n\t\t\tfor (var attr in record)\n\t\t\t\tmodelUtil.addValueMS(record[attr]);\n\t\t};\n\n\t\t/**\n\t\t * Adds from now/to now display value as display_value_friendly\n\t\t */\n\t\tmodelUtil.addFriendlyDisplayValue = function(element) {\n\t\t\tif (!element.value_ms)\n\t\t\t\tmodelUtil.addValueMS(element);\n\n\t\t\tif (element.value_ms) { // Check if we actually have an ms value\n\t\t\t\tif (element.value_ms > Date.now())\n\t\t\t\t\telement.display_value_friendly = moment(element.value_ms).toNow();\n\t\t\t\telse\n\t\t\t\t\telement.display_value_friendly = moment(element.value_ms).fromNow();\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * Adds a from now/to now display value to all date elements\n\t\t */\n\t\tmodelUtil.addFriendlyDisplayValueToAll = function(record) {\n\t\t\tfor (var attr in record)\n\t\t\t\tmodelUtil.addFriendlyDisplayValue(record[attr]);\n\t\t};\n\n\t\t/**\n\t\t * Converts a GlideList representation to JS array.\n\t\t */\n\t\tmodelUtil.glideListToArray = function(element) {\n\t\t\tif(!angular.isArray(element.display_value)) {\n\t\t\t\tif (element.display_value && typeof element.display_value === \"string\")\n\t\t\t\t\telement.display_value = element.display_value.split(DEFAULT_GLIDE_LIST_SEPARATOR);\n\t\t\t\telse\n\t\t\t\t\telement.display_value = [];\n\t\t\t}\n\n\t\t\tif(angular.isArray(element.value))\n\t\t\t\treturn;\n\n\t\t\tif (element.value && typeof element.value === \"string\")\n\t\t\t\telement.value = element.value.split(\",\");\n\t\t\telse\n\t\t\t\telement.value = [];\n\t\t};\n\n\t\t/**\n\t\t * Simple fail function for REST requests\n\t\t */\n\t\tmodelUtil.failNicely = function(response) {\n\t\t\t$log.info(\"REST Failure\");\n\t\t\t$log.info(response);\n\n\t\t\tif (!(response.data && response.data.error))\n\t\t\t\treturn;\n\n\t\t\t//If we have any error info try and get any messages\n\t\t\t$http.get(SNAPI.SERVICE.NOTIFICATION).then(function(response) {\n\t\t\t\tif (response.data.result)\n\t\t\t\t\tresponse.data.result.forEach(function(err){\n\t\t\t\t\t\t$rootScope.$broadcast(\"$$uiNotification\", {type: err.type, message: err.text});\n\t\t\t\t\t});\n\t\t\t},\n\t\t\tfunction(response) {\n\t\t\t\t$log.info(\"Notification Failure\");\n\t\t\t\t$log.info(response);\n\t\t\t});\n\t\t};\n\n\t\t/**\n\t\t * Simple check if id is 32 bytes of valid hexadecimal\n\t\t */\n\t\tmodelUtil.isValidSysID = function(sysId) {\n\t\t\tvar re = /^[a-f0-9]{32}$/i;\n\t\t\treturn re.test(sysId);\n\t\t};\n\t}]);","sys_class_name":"sys_ui_script","sys_id":"42609457d712220034d145bcce6103b0","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/39fbaf7704352210559073c06a02f71e","value":"39fbaf7704352210559073c06a02f71e"},"ui_type":"0","sys_update_name":"sys_ui_script_42609457d712220034d145bcce6103b0","sys_updated_by":"admin","sys_created_on":"2016-10-11 09:49:00","name":"app_com.modelUtil","sys_name":"app_com.modelUtil","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":"read"},{"ignore_in_now_experience":"false","sys_mod_count":"51","active":"true","description":"Controller confirmApproval.  Modal dialog handler for approval confirmation dialogs","use_scoped_format":"false","global":"false","sys_updated_on":"2024-04-12 11:53:48","sys_tags":"","script_name":"approval.confirmApproval","script":"angular.module(\"sn.change_management.cab.approval\")\n\t.controller('confirmApproval', ['$scope', '$uibModalInstance', '$uibModalStack', '$log', 'approval', function($scope, $uibModalInstance, $uibModalStack, $log, approval){\n\t\tvar editor = {\n\t\t\tconfig: {\n\t\t\t\tmenubar:false,\n\t\t\t\ttheme:'silver',\n\t\t\t\tplugins:[\n\t\t\t\t\t'advlist','lists','link','charmap','anchor',\n\t\t\t\t\t'searchreplace','visualblocks','code',\n\t\t\t\t\t'insertdatetime'\n\t\t\t\t],\n\t\t\t\theight: 150,\n\t\t\t\ttoolbar:'styles | bold italic | bullist numlist | alignleft aligncenter alignright alignjustify | link',\n\t\t\t\ttoolbar_items_size:'small',\n\t\t\t\tresize: false,\n\t\t\t\tstatusbar:false,\n\t\t\t\tdebounce:false,\n\t\t\t\tauto_focus: \"approve-reject-comments\",\n\t\t\t\tcache_suffix: 'sysparm_substitute=false',\n\t\t\t\t\"setup\": function (instance) {\n\t\t\t\t\tinstance.on(\"postRender\", function(event) {\n\t\t\t\t\t\t// Route to the toolbar container for our configuration.\n\t\t\t\t\t\tvar toolbar = event.target.editorContainer.children[0].children[0];\n\t\t\t\t\t\t// Keeps 'Esc' to move back to editor without closing modal.\n\t\t\t\t\t\ttoolbar.onkeydown = function(event) {\n\t\t\t\t\t\t\tif (event.keyCode == 27)\n\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t},\n\t\t\tworkingCopy: \"\"\n\t\t};\n\t\t$scope.editor = editor;\n\n\t\t$scope.approvalGroups = [];\n\n\t\tapproval.get($scope.item.task.value).then(function(approval){\n\t\t\t$scope.approvalGroups = approval.groups;\n\t\t\tif ($scope.approvalGroups.length > 0)\n\t\t\t\t$scope.selectedApprovalGroup = $scope.approvalGroups[0].sys_id;\n\t\t});\n\n\t\t$scope.commentRequired = function() {\n\t\t\treturn editor.workingCopy.length === 0;\n\t\t};\n\t\t// Flush the focus cache on change\n\t\t$scope.$watch($scope.commentRequired, function(newValue, oldValue) {\n\t\t\t$uibModalStack.clearFocusListCache();\n\t\t});\n\n\t\t$scope.ok = function() {\n\t\t\t//Only add [code] when we have a comment\n\t\t\tvar editorComment = $scope.editor.workingCopy;\n\t\t\tif (editorComment.length !== 0)\n\t\t\t\teditorComment = \"[code]\" + editorComment + \"[/code]\";\n\n\t\t\t$scope.approvalDataObj = {comment: editorComment, approvalGroupSysID: $scope.selectedApprovalGroup};\n\t\t\t$uibModalInstance.close($scope.approvalDataObj);\n\t\t};\n\n\t\t$scope.cancel = function() {\n\t\t\t$uibModalInstance.dismiss('cancel');\n\t\t};\n\t}]);","sys_class_name":"sys_ui_script","sys_id":"42ec5917d752220034d145bcce610398","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"ui_type":"0","sys_update_name":"sys_ui_script_42ec5917d752220034d145bcce610398","sys_updated_by":"admin","sys_created_on":"2016-10-11 15:20:01","name":"sn_change_cab.approval.confirmApproval","sys_name":"sn_change_cab.approval.confirmApproval","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"11","active":"true","description":"Module sn.itsm.vcab.common","use_scoped_format":"false","global":"false","sys_updated_on":"2025-06-05 05:18:18","sys_tags":"","script_name":"","script":"(function ($) {\nangular.module('sn.itsm.vcab.common', ['sn.common.auth', 'ng.amb', 'sn.change_management.cab'])\n.constant('Tables', {\n\tMEETING: 'cab_meeting',\n\tAGENDA: 'cab_agenda_item',\n\tAGENDA_BASE: 'mtg_agenda_item',\n\tATTENDEE: 'cab_attendee',\n\tCHANGE: 'change_request'\n})\n.constant('CtrlIds', { // List of all controller ids which can be used to fetch respective controller's instances.\n\tMEETING_HEADER: 'mtg_header'\n}).\nvalue('isAccessibilityEnabled', function () {\n\treturn window.g_accessibility == 'true';\n}).\nvalue('isMobile', function() {\n\tvar ua = window.navigator.userAgent;\n\tif( ua.match(/Android/i) ||\n\t\tua.match(/webOS/i) ||\n\t\tua.match(/iPhone/i) ||\n\t\tua.match(/iPad/i) ||\n\t\tua.match(/iPod/i) ||\n\t\tua.match(/BlackBerry/i) ||\n\t\tua.match(/Windows Phone/i))\n\t\t\treturn true;\n\n\t\t\treturn false;\n})\n.directive('snCabFocusInOut', function ($timeout) {\n\treturn {\n\t\trestrict: 'A',\n\t\tscope: {\n\t\t\tsnCabFocusInOut: '&'\n\t\t},\n\t\tlink: function ($scope, el, attrs) {\n\t\t\tvar $el = $(el);\n\t\t\tvar fin = false, fout = false;\n\t\t\t$el.on('focusin.snCabFocusInOut', function () {\n\t\t\t\tcheckForEvent();\n\t\t\t\tfin = true;\n\t\t\t});\n\t\t\t$el.on('focusout.snCabFocusInOut', function () {\n\t\t\t\tcheckForEvent();\n\t\t\t\tfout = true;\n\t\t\t});\n\t\t\tvar timer;\n\t\t\tfunction checkForEvent() {\n\t\t\t\tfout = false;\n\t\t\t\tfin = false;\n\t\t\t\tif (timer)\n\t\t\t\t\t$timeout.cancel(timer);\n\t\t\t\ttimer = $timeout(function () {\n\t\t\t\t\tif (fout)\n\t\t\t\t\t\t$scope.snCabFocusInOut({$isFocusIn: false});\n\t\t\t\t\tif (fin)\n\t\t\t\t\t\t$scope.snCabFocusInOut({$isFocusIn: true});\n\t\t\t\t\tfin = false;\n\t\t\t\t\tfout = false;\n\t\t\t\t\ttimer = undefined;\n\t\t\t  }, 100);\n\t\t\t}\n\t\t\t$scope.$on('$destroy', function () {\n\t\t\t\t$el.off('.snCabFocusInOut');\n\t\t\t});\n\t\t}\n\t};\n})\n.directive('snFocusContainer', function () {\n\tvar TAB = 9;\n\treturn {\n\t\trestrict: 'A',\n\t\tscope: false,\n\t\tlink: function ($scope, el, attrs) {\n\t\t\tvar $el = $(el);\n\t\t\t$el.on('keydown.snFocusContainer', function (evt) {\n\t\t\t\tvar list = $(this).find('button, input').not(\"[tabindex='-1']\");\n\t\t\t\tvar focused = $(document.activeElement);\n\t\t\t\t// if calendar is not render, skips event handling\n\t\t\t\tif (list.length <= 1)\n\t\t\t\t\treturn;\n\t\t\t\tif (evt.keyCode === TAB) {\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\tvar index;\n\t\t\t\t\tvar next;\n\t\t\t\t\tif (typeof index == 'undefined')\n\t\t\t\t\t\tindex = list.index(focused);\n\t\t\t\t\tif (!evt.shiftKey)\n\t\t\t\t\t\tindex = (index === list.length - 1) ? 0 : index + 1;\n\t\t\t\t\telse if (evt.shiftKey)\n\t\t\t\t\t\tindex = (index === 0) ? list.length - 1: index - 1;\n\t\t\t\t\tnext = list.get(index);\n\t\t\t\t\tif (next)\n\t\t\t\t\t\tnext.focus();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$scope.$on('$destroy', function () {\n\t\t\t\t$el.off('.snFocusContainer');\n\t\t\t});\n\t\t}\n\t};\n});\n}(jQuery));","sys_class_name":"sys_ui_script","sys_id":"439925d20b2332005775aabcb4673ade","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/3eb7af7f04b12210559073c06a02f7fb","value":"3eb7af7f04b12210559073c06a02f7fb"},"ui_type":"0","sys_update_name":"sys_ui_script_439925d20b2332005775aabcb4673ade","sys_updated_by":"system","sys_created_on":"2017-06-26 13:13:21","name":"change_calendar_common","sys_name":"change_calendar_common","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"12","active":"true","description":"Service approval.  Manages approvals for the CAB Workbench","use_scoped_format":"false","global":"false","sys_updated_on":"2021-04-29 15:11:29","sys_tags":"","script_name":"approval.approval","script":"angular.module(\"sn.change_management.cab.approval\")\n\t.service(\"approval\", ['CAB', 'modelUtil','runtimeState', 'cabWatcher', '$http', '$q', '$rootScope', function(CAB, modelUtil, runtimeState, cabWatcher, $http, $q, $rootScope) {\n\t\tvar approval = this;\n\t\t\n\t\tvar SYSAPPROVAL_APPROVER = \"sysapproval_approver\";\n\t\t\n\t\tvar tId = \"\";\n\t\tvar aInf = {};\n\t\tvar defReq;\n\t\t//var wChan;\n\t\t\n\t\tvar watcherSubscribed = false;\n\t\t\n\t\tvar rwMod = {\n\t\t\t\"sysapproval_approver\": null\n\t\t};\n\n\t\tfunction onFail(response) {\n\t\t\tmodelUtil.failNicely(response);\n\t\t\treturn $q.reject(response);\n\t\t}\n\t\t\n\t\tapproval.approve = function(taskId, comment, approvalGroupSysID) {\n\t\t\treturn $http.post(CAB.APPROVAL_SERVICE + \"approve/\" + taskId, {'comment': comment, 'approvalGroupSysID': approvalGroupSysID}).then(null, onFail);\n\t\t};\n\n\t\tapproval.reject = function(taskId, comment, approvalGroupSysID) {\n\t\t\treturn $http.post(CAB.APPROVAL_SERVICE + \"reject/\" + taskId, {'comment': comment, 'approvalGroupSysID': approvalGroupSysID}).then(null, onFail);\n\t\t};\n\t\t\n\t\t// LIFE CYCLE\n\t\tfunction refreshUserApproval(taskId) {\n\t\t\treturn $http.get(CAB.APPROVAL_SERVICE + taskId)\n\t\t\t\t.then(function(response) {\n\t\t\t\t\tmodelUtil.patchObject(aInf, response.data.result);\n\t\t\t\t\treturn $q.resolve(response);\n\t\t\t\t},\n\t\t\t\tonFail);\n\t\t}\n\t\t\n\t\tfunction init(taskId) {\n\t\t\ttId = taskId;\n\t\t\tdefReq = $q.defer();\n\t\t\tvar deferred = defReq;\n\t\t\t\n\t\t\tif (!watcherSubscribed)\n\t\t\t\truntimeState.get()\n\t\t\t\t.then(function(rts) {\n\t\t\t\t\tcabWatcher.watch(rts.cab_meeting.value)\n\t\t\t\t\t.subscribe(function(message) {\n\t\t\t\t\t\tif (message.data.table_name !== SYSAPPROVAL_APPROVER)\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\trwMod[SYSAPPROVAL_APPROVER] = message;\n\t\t\t\t\t\tmodelUtil.patchObject(aInf, message.data);\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\twatcherSubscribed = true;\n\t\t\t\t});\n\t\t\t\n\t\t\trefreshUserApproval(taskId)\n\t\t\t\t.then(function(response) {\n\t\t\t\t\tdefReq = null;\n\t\t\t\t\tdeferred.resolve(aInf);\n\t\t\t\t},\n\t\t\t\tfunction(response) {\n\t\t\t\t\t//Cleanup on failure.\n\t\t\t\t\tfor (var prop in aInf)\n\t\t\t\t\t\tif (aInf.hasOwnProperty(prop))\n\t\t\t\t\t\t\tdelete aInf[prop];\n\t\t\t\t\n\t\t\t\t\tdefReq = null;\n\t\t\t\t\tdeferred.reject(response);\n\t\t\t\t});\n\t\t\t\n\t\t\treturn deferred.promise;\n\t\t}\n\t\t\n\t\tapproval.get = function(taskId) {\n\t\t\tif (tId == taskId) { // If the same approval info is being requested.\n\t\t\t\tif (defReq)\n\t\t\t\t\treturn defReq.promise;\n\n\t\t\t\treturn $q.resolve(aInf);\n\t\t\t}\n\t\t\t\n\t\t\treturn init(taskId);\n\t\t};\n\t\t\n\t\t/**\n\t\t * Returns the Record Watcher modifications object.\n\t\t * Record watcher responses are set against named values to determine when data from record watcher\n\t\t * was received.  Name of the element is the table name of the modified table.\n\t\t */\n\t\tapproval.getRWMod = function() {\n\t\t\treturn rwMod;\n\t\t};\n\n\t}]);","sys_class_name":"sys_ui_script","sys_id":"453d9917d752220034d145bcce6103aa","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"ui_type":"0","sys_update_name":"sys_ui_script_453d9917d752220034d145bcce6103aa","sys_updated_by":"admin","sys_created_on":"2016-10-11 15:21:13","name":"sn_change_cab.approval.approval","sys_name":"sn_change_cab.approval.approval","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"40","active":"true","description":"Directive snDonutTimer.  Definition of the UI component for displaying a timer model as a donut timer.","use_scoped_format":"false","global":"false","sys_updated_on":"2022-01-06 00:11:53","sys_tags":"","script_name":"","script":"angular.module(\"sn.app_common.timers\")\n.run([\"$templateCache\", function($templateCache) {\n\t$templateCache.put(\"sn-4604d097d712220034d145bcce6103dc.html\",\n\t\t\"<div class=\\\"timer\\\" ng-style=\\\"{'width': display.width, 'height': display.height}\\\" ng-attr-aria-label=\\\"{{getAriaTimeLabel()}}\\\">\" +\n\t\t\t\"<div class=\\\"timer-centered\\\" role=\\\"group\\\"> \" +\n\t\t\t\t\"<div ng-if=\\\"!showDisplayValue()\\\" class=\\\"timer-scaled-text\\\">-</div> \" +\n\t\t\t\t\"<div ng-if=\\\"showDisplayValue() && !showDuration()\\\" class=\\\"timer-scaled-text\\\">{{display.value}}</div> \" +\n\t\t\t\t\"<div ng-if=\\\"display.minutesLabel && showDisplayValue()\\\" class=\\\"timer-center-label\\\">{{getLabel()}}</div> \" +\n\t\t\t\t\"<div ng-if=\\\"showDuration() && showDisplayValue()\\\" class=\\\"timer-scaled-text\\\">{{display.duration}}</div> \" +\n\t\t\t\"</div> \" +\n\t\t\t\"<div ng-class=\\\"['timer-semi-circle', 'left', 'timer-duration', 'timer-background', {\" +\n\t\t\t\t\"'mask': display.rotation <= 180,\" +\n\t\t\t\t\"'bg': display.rotation > 180,\" +\n\t\t\t\t\"}]\\\"></div>\" +\n\t\t\t\"<div ng-class=\\\"['timer-semi-circle','left','spin', 'timer-background', {\" +\n\t\t\t\t\"'timer-on-time': display.percentage <= 50,\" +\n\t\t\t\t\"'timer-caution': display.percentage > 50 && display.percentage <= 75,\" +\n\t\t\t\t\"'timer-warning': display.percentage > 75 && display.percentage < 100,\" +\n\t\t\t\t\"'timer-late': display.percentage >= 100\" +\n\t\t\t\t\"}]\\\"\" +\n\t\t\t\t\"ng-style=\\\"{'transform': 'rotate(' + display.rotation + 'deg)'}\\\">\" +\n\t\t\t\"</div>\" +\n\t\t\t\"<div ng-class=\\\"['timer-semi-circle','right','bg', 'timer-background', {\" +\n\t\t\t\t\"'timer-duration': display.percentage <= 50,\" +\n\t\t\t\t\"'timer-caution': display.percentage > 50 && display.percentage <= 75,\" +\n\t\t\t\t\"'timer-warning': display.percentage > 75 && display.percentage < 100,\" +\n\t\t\t\t\"'timer-late': display.percentage >= 100\" +\n\t\t\t\t\"}]\\\">\" +\n\t\t\t\"</div>\" +\n\t\t\"</div>\"\n\t);\n}])\n\t.directive(\"snDonutTimer\", function(TIME, TIMER_DEFAULT, $window, timerService, getTemplateUrl, i18n) {\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\ttemplateUrl: \"sn-4604d097d712220034d145bcce6103dc.html\",\n\t\t\tscope: {\n\t\t\t\tname: '@',\n\t\t\t\telapsed: '@',\n\t\t\t\tduration: '@',\n\t\t\t\tcountdown: '@',\n\t\t\t\tsize: '@',\n\t\t\t\tminutesLabel: '@',\n\t\t\t\tshowBeforeStart: '@',\n\t\t\t\tshowDurationBeforeStart: '@',\n\t\t\t\tmaxDisplayValue: '@',\n\t\t\t\tariaParentLabel: '@'\n\t\t\t},\n\t\t\tlink: function(scope, element, attr) {\n\t\t\t\tvar msg;\n\t\t\t\ti18n.getMessages([\n\t\t\t\t\t\t'Timer for {0} shows {1} minutes and scheduled for {2} minutes',\n\t\t\t\t\t\t'Timer for {0} shows {1} and scheduled for {2} minutes',\n\t\t\t\t\t\t'Timer for {0} not running',\n\t\t\t\t\t\t'Minute',\n\t\t\t\t\t\t'Minutes'\n\t\t\t\t\t],\n\t\t\t\t\tfunction (m) { msg = m; }\n\t\t\t\t);\n\t\t\t\tscope.getAriaTimeLabel = function () {\n\t\t\t\t\tif (!msg)\n\t\t\t\t\t\treturn '';\n\t\t\t\t\tif (scope.display) {\n\t\t\t\t\t\tif (scope.showDisplayValue()) {\n\t\t\t\t\t\t\tvar t;\n\t\t\t\t\t\t\tif (scope.showDuration())\n\t\t\t\t\t\t\t\tt = scope.display.duration;\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tt = scope.display.value;\n\t\t\t\t\t\t\tif (scope.display.minutesLabel)\n\t\t\t\t\t\t\t\treturn i18n.format(msg['Timer for {0} shows {1} minutes and scheduled for {2} minutes'], [scope.ariaParentLabel, t, Math.ceil(scope.timer.duration/ TIME.MINUTE || 0)]);\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\treturn i18n.format(msg['Timer for {0} shows {1} and scheduled for {2} minutes'], [scope.ariaParentLabel, t, Math.ceil(scope.timer.duration/TIME.MINUTE || 0 )]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn i18n.format(msg['Timer for {0} not running'], [scope.ariaParentLabel]);\n\t\t\t\t};\n\t\t\t\tscope.getLabel = function() {\n\t\t\t\t\tif (!msg)\n\t\t\t\t\t\treturn '';\n\t\t\t\t\tif (scope.display) {\n\t\t\t\t\t\tif (scope.display.value === 1)\n\t\t\t\t\t\t\treturn msg['Minute'];\n\t\t\t\t\t\treturn msg['Minutes'];\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// Update the display model in line with the timer\n\t\t\t\tfunction refreshDisplayModel() {\n\t\t\t\t\t// Count\n\t\t\t\t\tif (scope.countdown) {\n\t\t\t\t\t\tvar remTime = scope.timer.remainingTime();\n\t\t\t\t\t\tif (remTime <= 0)\n\t\t\t\t\t\t\tscope.display.value = 0;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tscope.display.value = $window.Math.ceil(remTime/TIME.MINUTE);\n\t\t\t\t\t} else\n\t\t\t\t\t\tscope.display.value = $window.Math.floor(scope.timer.elapsed/TIME.MINUTE);\n\n\t\t\t\t\tif (scope.display.value > scope.display.maxValue)\n\t\t\t\t\t\tscope.display.value = scope.display.maxValue;\n\n\t\t\t\t\t// Rotation\n\t\t\t\t\tvar rotation = 0;\n\t\t\t\t\tif (scope.timer.duration > 0)\n\t\t\t\t\t\trotation = $window.Math.floor((scope.timer.elapsed/(scope.timer.duration/360))*100)/100;\n\n\t\t\t\t\tif (rotation > 360)\n\t\t\t\t\t\tscope.display.rotation = 360;\n\t\t\t\t\telse\n\t\t\t\t\t\tscope.display.rotation = rotation;\n\n\t\t\t\t\tscope.display.percentage = scope.timer.percentElapsed();\n\n\t\t\t\t\tif (scope.timer.duration > 0)\n\t\t\t\t\t\tscope.display.duration = $window.Math.floor(scope.timer.duration/TIME.MINUTE);\n\t\t\t\t}\n\n\t\t\t\tfunction updateDuration(duration) {\n\t\t\t\t\tif (!isNaN(duration))\n\t\t\t\t\t\tscope.timer.duration = parseInt(duration);\n\t\t\t\t}\n\n\t\t\t\tfunction updateElapsed(elapsed) {\n\t\t\t\t\t// If it's not running and the elapsed time hasn't been set elsewhere, set the elapsed time.\n\t\t\t\t\tif (!scope.timer.running && !isNaN(elapsed)) {\n\t\t\t\t\t\telapsed = parseInt(elapsed);\n\t\t\t\t\t\tif (elapsed > 0 && scope.timer.elapsed == 0)\n\t\t\t\t\t\t\tscope.timer.elapsed = elapsed;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfunction updateSize(size) {\n\t\t\t\t\tscope.display.width = size ? size : TIMER_DEFAULT.SIZE;\n\t\t\t\t\tscope.display.height = scope.display.width;\n\t\t\t\t}\n\n\t\t\t\tfunction updateMinutesLabel(minutesLabel) {\n\t\t\t\t\tif (minutesLabel && minutesLabel == \"true\")\n\t\t\t\t\t\tscope.display.minutesLabel = true;\n\t\t\t\t\telse\n\t\t\t\t\t\tscope.display.minutesLabel = false;\n\t\t\t\t}\n\n\t\t\t\tfunction updateShowBeforeStart(showBeforeStart) {\n\t\t\t\t\tif (!showBeforeStart) {\n\t\t\t\t\t\tscope.display.showBeforeStart = true;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (showBeforeStart == \"true\")\n\t\t\t\t\t\tscope.display.showBeforeStart = true;\n\t\t\t\t\telse\n\t\t\t\t\t\tscope.display.showBeforeStart = false;\n\t\t\t\t}\n\n\t\t\t\tfunction updateShowDurationBeforeStart(showDurationBeforeStart) {\n\t\t\t\t\tif (!showDurationBeforeStart) {\n\t\t\t\t\t\tscope.display.showDurationBeforeStart = false;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (showDurationBeforeStart == \"true\")\n\t\t\t\t\t\tscope.display.showDurationBeforeStart = true;\n\t\t\t\t\telse\n\t\t\t\t\t\tscope.display.showDurationBeforeStart = false;\n\t\t\t\t}\n\n\t\t\t\tfunction updateMaxDisplayValue(maxDisplayValue) {\n\t\t\t\t\tif (isNaN(maxDisplayValue)) {\n\t\t\t\t\t\tscope.display.maxValue = 999;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.display.maxValue = parseInt(maxDisplayValue);\n\t\t\t\t}\n\n\t\t\t\t//Initial setup for display model\n\t\t\t\tscope.display = {};\n\t\t\t\tscope.timer = timerService.getTimer(attr.name);\n\t\t\t\tupdateDuration(attr.duration);\n\t\t\t\tupdateElapsed(attr.elapsed);\n\t\t\t\tupdateSize(attr.size);\n\t\t\t\tupdateMinutesLabel(attr.minutesLabel);\n\t\t\t\tupdateShowBeforeStart(attr.showBeforeStart);\n\t\t\t\tupdateShowDurationBeforeStart(attr.showDurationBeforeStart);\n\t\t\t\tupdateMaxDisplayValue(attr.maxDisplayValue);\n\t\t\t\trefreshDisplayModel();\n\n\t\t\t\tscope.showDisplayValue = function() {\n\t\t\t\t\tif (scope.timer.running)\n\t\t\t\t\t\treturn true;\n\n\t\t\t\t\tif (scope.timer.elapsed == 0 && !scope.display.showBeforeStart)\n\t\t\t\t\t\treturn false;\n\n\t\t\t\t\treturn true;\n\t\t\t\t};\n\n\t\t\t\tscope.showDuration = function() {\n\t\t\t\t\tif (scope.timer.running)\n\t\t\t\t\t\treturn false;\n\n\t\t\t\t\tif (scope.timer.elapsed == 0 && scope.display.showDurationBeforeStart)\n\t\t\t\t\t\treturn true;\n\n\t\t\t\t\treturn false;\n\t\t\t\t};\n\n\t\t\t\t// Observe changes in the name and duration and size\n\t\t\t\tattr.$observe(\"name\", function(name) {\n\t\t\t\t\tscope.timer = timerService.getTimer(name);\n\t\t\t\t\trefreshDisplayModel();\n\t\t\t\t});\n\n\t\t\t\tattr.$observe(\"duration\", function(duration) {\n\t\t\t\t\tupdateDuration(duration);\n\t\t\t\t\trefreshDisplayModel();\n\t\t\t\t});\n\n\t\t\t\tattr.$observe(\"size\", function(size) {\n\t\t\t\t\tupdateSize(size);\n\t\t\t\t});\n\n\t\t\t\t// Update the display model with the timer\n\t\t\t\tscope.$watch('timer.elapsed', function(newValue, oldValue) {\n\t\t\t\t\trefreshDisplayModel();\n\t\t\t\t}, true);\n\n\t\t\t\tscope.$watch('timer.duration', function(newValue, oldValue) {\n\t\t\t\t\trefreshDisplayModel();\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t});","sys_class_name":"sys_ui_script","sys_id":"4604d097d712220034d145bcce6103dc","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/39fbaf7704352210559073c06a02f71e","value":"39fbaf7704352210559073c06a02f71e"},"ui_type":"0","sys_update_name":"sys_ui_script_4604d097d712220034d145bcce6103dc","sys_updated_by":"admin","sys_created_on":"2016-10-11 10:03:02","name":"app_com.timers.snDonutTimer","sys_name":"app_com.timers.snDonutTimer","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":"read"},{"ignore_in_now_experience":"false","sys_mod_count":"56","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2023-09-20 14:19:37","sys_tags":"","script_name":"","script":"var app = angular.module(\"sn.change_request.risk_assessment_details\", [\"sn.common\", \"ui.bootstrap\", \"ui.bootstrap.popover\", ])\n    .constant(\"RISK_ASSESSMENT_DETAILS\", {\n        KEYS: {\n            TABKEY: 9,\n            ESCAPE: 27\n        },\n        FORM: {\n            POPOVER: \"chg_risk_assessment_ml_results\",\n            MODAL: \"chg_risk_details\",\n        },\n    })\n    .constant(\"CHANGE_RISK_DETAILS\", {\n        EVALUATORS: {\n            RISK_CONDITION: \"risk_condition\",\n            LEGACY_RISK_ASSESSMENT: \"legacy_risk_assessment\",\n            RISK_ASSESSMENT: \"risk_assessment\",\n            RISK_ML: \"risk_ml\",\n            RISK_SCORE: \"calculated_risk_score\"\n        }\n    })\n    .config(function($locationProvider) {\n        $locationProvider.html5Mode({\n            enabled: true,\n            requireBase: false,\n        });\n    })\n    .service(\"snRiskDetailsService\", function() {\n        var snRiskDetailsService = this;\n        snRiskDetailsService.normalizeKeyCode = function(evt) {\n            evt.charCode = evt.charCode === 0 ? evt.keyCode : evt.charCode;\n            return evt;\n        };\n        snRiskDetailsService.getTabbableElements = function(elem) {\n            var include = \"button:visible, [tabindex]:visible\";\n            var exclude = \"[tabindex='-1'], [disabled='disabled']\";\n            if (this.tabbable && this.tabbable.hasOwnProperty(\"include\"))\n                include = this.tabbable.include;\n            if (this.tabbable && this.tabbable.hasOwnProperty(\"exclude\"))\n                exclude = this.tabbable.exclude;\n            return elem.find(include).not(exclude);\n        };\n    })\n    .directive(\"snRiskDetails\", function(i18n, getTemplateUrl, $location, $window, $timeout, RISK_ASSESSMENT_DETAILS, CHANGE_RISK_DETAILS, snRiskDetailsService) {\n        \"use strict\";\n        return {\n            replace: true,\n            restrict: \"E\",\n            templateUrl: getTemplateUrl(\"chg_risk_details.xml\"),\n            link: function($scope) {\n                $scope.direction = $window.NOW.rtl;\n                $scope.pluginsInstalled = $window.NOW.risk_details.pluginsInstalled;\n                $scope.showViewDetails = $window.NOW.risk_details.show;\n                $scope.data = $window.NOW.risk_details.data;\n                $scope.chg_probability_data = $window.NOW.chg_probability_details.data;\n                $scope.title = $window.NOW.risk_details.title;\n                $scope.ml_review = $window.NOW.risk_details.ml_review;\n                $scope.sys_id = $location.search().sysparm_changeId || $location.search().sysparm_chg_id;\n                $scope.mode = $location.search().sysparm_mode;\n                $scope.highestRisk = {\n                    field: \"\",\n                    label: \"\",\n                    value: \"\",\n                    display_value: \"\"\n                };\n                $scope.selected = function(columnName) {\n                    return columnName === $scope.highestRisk.field;\n                };\n                $scope.hasConditionalRules = function() {\n                    return isPluginInstalled(\"BestPractice\") && isShowRiskType(\"BestPractice\", CHANGE_RISK_DETAILS.EVALUATORS.RISK_CONDITION);\n                };\n                $scope.hasLegacyRiskAssessment = function() {\n                    if (isPluginInstalled(\"RiskAsmt\"))\n                        return false;\n                    return isPluginInstalled(\"LegacyRiskAsmt\") && isShowRiskType(\"LegacyRiskAsmt\", CHANGE_RISK_DETAILS.EVALUATORS.LEGACY_RISK_ASSESSMENT);\n                };\n                $scope.hasRiskAssessment = function() {\n                    return isPluginInstalled(\"RiskAsmt\") && isShowRiskType(\"RiskAsmt\", CHANGE_RISK_DETAILS.EVALUATORS.RISK_ASSESSMENT);\n                };\n                $scope.hasMLResults = function() {\n                    return isPluginInstalled(\"MlRisk\") && isShowRiskType(\"MlRisk\", \"risk_ml\");\n                };\n                $scope.hasCalculatedRiskScore = function() {\n                    return isPluginInstalled(\"SuccessProbability\") && isShowRiskType(\"CalculatedRiskScore\", CHANGE_RISK_DETAILS.EVALUATORS.RISK_SCORE);\n                };\n                $scope.getConditionalRulesName = function() {\n                    if ($scope.data.risk_condition && $scope.data.risk_condition.display_value)\n                        return $scope.data.risk_condition.display_value;\n                    return $scope.messages[\"No risk condition matches the current record\"];\n                };\n                $scope.getConditionalRulesValue = function() {\n                    if (hasRun(CHANGE_RISK_DETAILS.EVALUATORS.RISK_CONDITION) && $scope.data.risk_condition && $scope.data.risk_condition.display_value && !$scope.data.risk_condition_risk.display_value)\n                        return $scope.messages[\"Not Set\"];\n                    else if (hasRun(CHANGE_RISK_DETAILS.EVALUATORS.RISK_CONDITION))\n                        return $scope.data.risk_condition_risk.display_value || $scope.messages[\"No matching risk conditions\"];\n                    return $scope.messages[\"No matching risk conditions\"];\n                };\n                $scope.getCalculatedRiskScoreValue = function() {\n                    if (hasRun(CHANGE_RISK_DETAILS.EVALUATORS.RISK_SCORE) && !$scope.data.calculated_risk_score_risk && !$scope.data.calculated_risk_score_risk.display_value)\n                        return $scope.messages[\"Not Set\"];\n                    else if (hasRun(CHANGE_RISK_DETAILS.EVALUATORS.RISK_SCORE))\n                        return $scope.data.calculated_risk_score_risk.display_value || $scope.messages[\"Not Set\"];\n                    // Probability on change request record not set\n                    return $scope.messages[\"Not Set\"];\n                };\n                $scope.getCalculatedRiskScoreName = function() {\n                    if (hasRun(CHANGE_RISK_DETAILS.EVALUATORS.RISK_SCORE) && $scope.chg_probability_data && $scope.chg_probability_data.probabilityType) {\n                        return $scope.messages[$scope.chg_probability_data.probabilityType];\n                    } else if (!hasRun(CHANGE_RISK_DETAILS.EVALUATORS.RISK_SCORE))\n                        return $scope.messages[\"Calculated risk score failed\"];\n                    return $scope.messages[\"No probability condition matches the current record\"];\n                };\n\n                $scope.getCalculatedRiskScoreStatus = function() {\n                    return hasRun(CHANGE_RISK_DETAILS.EVALUATORS.RISK_SCORE);\n                };\n\n                $scope.getLegacyRiskAssessmentName = function() {\n                    if (hasRun(CHANGE_RISK_DETAILS.EVALUATORS.LEGACY_RISK_ASSESSMENT))\n                        return $scope.data.assessment_master.display_value;\n                    return \"\";\n                };\n                $scope.getLegacyRiskAssessmentValue = function() {\n                    if (hasRun(CHANGE_RISK_DETAILS.EVALUATORS.LEGACY_RISK_ASSESSMENT))\n                        return $scope.data.legacy_risk_assessment.display_value || $scope.messages[\"No match / incomplete\"];\n                    return $scope.messages[\"No match / incomplete\"];\n                };\n                $scope.getRiskAssessmentName = function() {\n                    if (hasRun(CHANGE_RISK_DETAILS.EVALUATORS.RISK_ASSESSMENT))\n                        return $scope.data.change_risk_asmt.display_value;\n                    return \"\";\n                };\n                $scope.getRiskAssessmentValue = function() {\n                    if (hasRun(CHANGE_RISK_DETAILS.EVALUATORS.RISK_ASSESSMENT))\n                        return $scope.data.risk_assessment.display_value || $scope.messages[\"No match / incomplete\"];\n                    return $scope.messages[\"No match / incomplete\"];\n                };\n                $scope.isMLReadOnly = function() {\n                    return !$scope.data.risk_ml_set.value;\n                };\n                $scope.getRiskMLValue = function() {\n                    if (hasRun(\"risk_ml\"))\n                        return $scope.data.risk_ml.display_value || $scope.messages[\"Unable to predict\"];\n                    return $scope.data.mlOptions.isEnabled ? $scope.messages[\"Unable to predict\"] : $scope.messages[\"Disabled\"];\n                };\n                $scope.cancel = function() {\n                    setTimeout(function() {\n                        new $window.parent.GlideModal()\n                            .get(RISK_ASSESSMENT_DETAILS.FORM.MODAL)\n                            .destroy();\n                    }, 0);\n                };\n                $scope.getSelectedMessage = function() {\n                    return $scope.messages[\"Selected risk type {0}\"].withValues([$scope.highestRisk.label]);\n                };\n                init();\n\n                function init() {\n                    $scope.highestRisk = $scope.data.highestRisk;\n                    $timeout(function() {\n                        adjustHeight();\n                    });\n                }\n\n                function adjustHeight() {\n                    var _$j = $window.parent.$j;\n                    var contentHeight = angular.element(\"html\").height();\n                    if ($scope.mode === \"popover\") {\n                        var popover = _$j(\".popover\");\n                        var popoverContent = _$j(\".popover-content\");\n                        popoverContent.css(\"padding\", \"0\");\n                        popoverContent.css(\"overflow\", \"hidden\");\n                        // Adjust popover height once we know how many rows to display\n                        var delta = popoverContent.height() - contentHeight;\n                        popoverContent.height(contentHeight);\n                        if (popover.hasClass(\"top\"))\n                            popover.css(\"top\", parseInt(popover.css(\"top\"), 10) + delta);\n                        angular.element(\".chg-risk-wrapper\").focus();\n                    } else {\n                        var padding = 10;\n                        var modal = _$j(\"#chg_risk_details .modal-body\");\n                        modal.css(\"padding\", \"0\");\n                        modal.height(contentHeight - padding);\n                        modal.find(\":first-child\").css({\n                            top: \"0\",\n                            bottom: \"0\",\n                            right: \"0\",\n                            left: \"0\"\n                        });\n                        angular.element(\"#chk_risk_closemodal\").focus();\n                    }\n                }\n\n                function isValidParentWindow() {\n                    return $window && $window.parent;\n                }\n\n                function hasRun(field) {\n                    if ($scope.data[field + \"_has_run\"] && $scope.data[field + \"_has_run\"].value)\n                        return $scope.data[field + \"_has_run\"].value;\n                    return false;\n                }\n\n                function isShowRiskType(type, field) {\n                    if ($scope.showViewDetails[type] === \"always\")\n                        return true;\n                    if ($scope.showViewDetails[type] === \"match\") {\n                        if (field === CHANGE_RISK_DETAILS.EVALUATORS.RISK_CONDITION)\n                            return isValidField(CHANGE_RISK_DETAILS.EVALUATORS.RISK_CONDITION, \"risk_condition_risk\");\n                        else if (field === CHANGE_RISK_DETAILS.EVALUATORS.RISK_SCORE)\n                            return isValidField(CHANGE_RISK_DETAILS.EVALUATORS.RISK_SCORE, \"calculated_risk_score_risk\");\n                        return isValidField(field, field);\n                    }\n                    if ($scope.showViewDetails[type] === \"never\")\n                        return false;\n                }\n\n                function isValidField(fieldName, riskName) {\n                    if (!fieldName)\n                        return false;\n                    riskName = riskName || fieldName;\n                    var hasRun = $scope.data[fieldName + \"_has_run\"] && $scope.data[fieldName + \"_has_run\"].value;\n                    var hasValue = $scope.data[riskName] && $scope.data[riskName].value && !isNaN($scope.data[riskName].value);\n                    return hasRun && hasValue;\n                }\n\n                function isPluginInstalled(name) {\n                    return ($scope.pluginsInstalled && $scope.pluginsInstalled[name] === true);\n                }\n\n                angular.element($window.document).on(\"keydown\", function(event) {\n                    event = snRiskDetailsService.normalizeKeyCode(event);\n                    if (RISK_ASSESSMENT_DETAILS.KEYS.ESCAPE === event.charCode && isValidParentWindow()) {\n                        var target;\n                        if ($scope.mode === \"modal\" && $window.parent.GlideModal) {\n                            setTimeout(function() {\n                                new $window.parent.GlideModal().get(RISK_ASSESSMENT_DETAILS.FORM.MODAL).destroy();\n                            }, 0);\n                            target = $window.parent.$j(\"#chg_risk_details_link\");\n                        } else if ($scope.mode === \"popover\" && isValidParentWindow() && $window.parent.nowapi) {\n                            $window.parent.nowapi.g_popup_manager.exitPopup();\n                            target = $window.parent.$j(\"#chg_risk_details_button\");\n                        }\n                        $timeout(function() {\n                            target.focus();\n                        });\n                    }\n                });\n                $scope.messages = {\n                    \"No matching risk conditions\": i18n.getMessage(\"No matching risk conditions\"),\n                    \"No risk condition matches the current record\": i18n.getMessage(\"No risk condition matches the current record\"),\n                    \"No match / incomplete\": i18n.getMessage(\"No match / incomplete\"),\n                    \"Unable to predict\": i18n.getMessage(\"Unable to predict\"),\n                    \"Disabled\": i18n.getMessage(\"Disabled\"),\n                    \"Not Set\": i18n.getMessage(\"Not Set\"),\n                    \"Selected risk type {0}\": i18n.getMessage(\"Selected risk type {0}\"),\n                    \"Calculated risk score failed\": i18n.getMessage(\"Calculated risk score failed\"),\n                    \"No probability condition matches the current record\": i18n.getMessage(\"No probability condition matches the current record\"),\n                    \"Calculated\": i18n.getMessage(\"Calculated (Impact + Success Probability)\"),\n                    \"Change Success Score\": i18n.getMessage(\"Calculated (Impact + Change Success Score)\"),\n                    \"Change Model Success\": i18n.getMessage(\"Calculated (Impact + Change Model Success)\")\n                };\n            },\n        };\n    })\n    .directive(\"trapTabFocus\", [\"RISK_ASSESSMENT_DETAILS\", \"snRiskDetailsService\", function(RISK_ASSESSMENT_DETAILS, snRiskDetailsService) {\n        return {\n            restrict: \"A\",\n            link: function($scope, $element, $attr) {\n                $element.on(\"keydown\", function(event) {\n                    var keyCode = snRiskDetailsService.normalizeKeyCode(event);\n                    if (keyCode.keyCode === RISK_ASSESSMENT_DETAILS.KEYS.TABKEY) {\n                        var firstEl;\n                        var lastEl;\n                        if ($scope.mode === \"modal\") {\n                            var tabEls = snRiskDetailsService.getTabbableElements($element);\n                            firstEl = tabEls.first();\n                            lastEl = tabEls.last();\n                        } else {\n                            // Make the dialog the first and last elements since there are no other focusable elements\n                            firstEl = angular.element(this);\n                            lastEl = angular.element(this);\n                        }\n                        // tab and last element then focus on first element\n                        if (!event.shiftKey && event.target === lastEl[0]) {\n                            event.preventDefault();\n                            firstEl.focus();\n                        }\n                        // shift+tab and first element then focus on last element\n                        if (event.shiftKey && event.target === firstEl[0]) {\n                            event.preventDefault();\n                            lastEl.focus();\n                        }\n                    }\n                });\n            }\n        };\n    }]);","sys_class_name":"sys_ui_script","sys_id":"468a5b06c3941010cc343f52c1d3ae6e","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/32b7af7f04b12210559073c06a02f7fb","value":"32b7af7f04b12210559073c06a02f7fb"},"ui_type":"0","sys_update_name":"sys_ui_script_468a5b06c3941010cc343f52c1d3ae6e","sys_updated_by":"admin","sys_created_on":"2020-04-22 14:28:32","name":"change_risk_details_app","sys_name":"change_risk_details_app","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"6","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2024-10-10 15:36:17","sys_tags":"","script_name":"landing_wizard","script":"/* Module for creating a new change schedule */\nangular.module(\"sn.chg_soc.landing_wizard\",\n\t\t[\n\t\t\t\"ui.bootstrap\",\n\t\t\t\"sn.filter_widget\",\n\t\t\t\"sn.app_itsm.now.accessibility\"\n\t\t])\n.constant(\"WIZARD_CONST\", {\n\t\"CHG_CREATE\"      : \"/api/sn_chg_soc/soc/createchangeschedule\",\n\t\"CHG_GET_FIELDS\"  : \"/api/sn_chg_soc/soc/gettablefields\"\n})\n.directive(\"snLandingWizard\", function(i18n, getTemplateUrl, $uibModal, $window, WizardService) {\n\"use strict\";\n\treturn {\n\t\treplace : true,\n\t\trestrict : \"E\",\n\t\tscope: {\n\t\t\tlabel: \"@\"\n\t\t},\n\t\ttemplateUrl: function(tElement, tAttrs) {\n\t\t\tif (!tAttrs.template)\n\t\t\t\treturn getTemplateUrl(\"sn_chg_soc_landing_wizard.xml\");\n\t\t\treturn getTemplateUrl(tAttrs.template);\n\t\t},\n\t\tlink: function($scope, $element, $attrs) {\n\t\t\tif (!$scope.label)\n\t\t\t\t$scope.label = i18n.getMessage(\"New\");\n\n\t\t\t$scope.showNew = function() {\n\t\t\t\tif ($window.NOW.soc_schedules.canCreate)\n\t\t\t\t\treturn $window.NOW.soc_schedules.canCreate;\n\t\t\t\treturn false;\n\t\t\t};\n\n\t\t\t$scope.openWizard = function(source) {\n\t\t\t\t$scope.$emit(\"sn.change_soc_wizard:opened\");\n\t\t\t\tWizardService.setSource(source);\n\t\t\t\tvar modalInstance = $uibModal.open({\n\t\t\t\t\tanimation: true,\n\t\t\t\t\ttemplateUrl: getTemplateUrl(\"sn_chg_soc_landing_wizard_template.xml\"),\n\t\t\t\t\tcontroller: \"WizardModalCtrl\",\n\t\t\t\t\tariaLabelledBy: \"new-change-schedule\",\n\t\t\t\t\tsize: \"lg\"\n\t\t\t\t});\n\t\t\t};\n\t\t}\n\t};\n})\n.controller(\"WizardModalCtrl\", [\"$window\", \"i18n\", \"$scope\", \"$uibModalInstance\", \"WizardService\", \"$timeout\", \"socNotification\",\nfunction ($window, i18n, $scope, $uibModalInstance, WizardService, $timeout, socNotification) {\n\t$scope.data = {};\n\t$scope.data.name = \"\";\n\t$scope.currentPage = \"init\";\n\t$scope.isInitPage = function() {\n\t\treturn $scope.currentPage === \"init\";\n\t};\n\n\t$scope.cancel = function() {\n\t\t$uibModalInstance.dismiss(\"cancel\");\n\t};\n\n\t$scope.submit = function() {\n\t\t$scope.data.start_date_field = $scope.selectedStart;\n\t\t$scope.data.end_date_field = $scope.selectedEnd;\n\t\t$scope.data.condition = $scope.condition;\n\t\t$scope.data.blackout = $scope.blackout;\n\t\t$scope.data.maintenance = $scope.maintenance;\n\t\tWizardService.createChangeSchedule($scope.data).then(function(sys_id) {\n\t\t\tif (sys_id && sys_id !== -1) {\n\t\t\t\tWizardService.trackEvent();\n\t\t\t\t$window.location.href = \"/sn_chg_soc_change_soc.do?sysparm_id=\" + sys_id + \"&sysparm_redirect=\" + encodeURIComponent(\"sn_chg_soc_landing.do\");\n\t\t\t}\n\t\t})\n\t\t.catch(function(response) {\n\t\t\tif (response.status === 401)\n\t\t\t\t$window.location.reload();\n\t\t\tsocNotification.show(\"error\", response.data.error.message, 0, null, \".soc-condition-builder-modal-message\");\n\t\t});\n\t};\n\n\t$scope.next = function() {\n\t\t$scope.currentPage = \"condition\";\n\t\t$timeout(function() {\n\t\t\tangular.element(\".soc-wizard-back\").focus();\n\t\t}, 0);\n\t};\n\n\t$scope.back = function() {\n\t\t$scope.currentPage = \"init\";\n\t\t$timeout(function() {\n\t\t\tangular.element(\"#name\").focus();\n\t\t}, 0);\n\t};\n\n\t$scope.messages = {\n\t\t\"Back\" : i18n.getMessage(\"Back\"),\n\t\t\"Next\" : i18n.getMessage(\"Next\"),\n\t\t\"Submit\" : i18n.getMessage(\"Submit\"),\n\t\t\"Cancel\" : i18n.getMessage(\"Cancel\"),\n\t\t\"Close\" : i18n.getMessage(\"Close\"),\n\t\t\"Create New Change Schedule\" : i18n.getMessage(\"Create New Change Schedule\"),\n\t\t\"Name\" : i18n.getMessage(\"Name\"),\n\t\t\"Start date field\" : i18n.getMessage(\"Start date field\"),\n\t\t\"End date field\" : i18n.getMessage(\"End date field\"),\n\t\t\"Conditions\" : i18n.getMessage(\"Conditions\")\n\t};\n}])\n.directive(\"snLandingWizardInitPage\", function($window, $timeout, getTemplateUrl, WizardService) {\n\t\"use strict\";\n\treturn {\n\t\treplace : true,\n\t\trestrict : \"E\",\n\t\ttemplateUrl : getTemplateUrl(\"sn_chg_soc_landing_wizard_template_init_page.xml\"),\n\t\tlink: function($scope) {\n\t\t\t$scope.startDateFields = [];\n\t\t\t$scope.endDateFields = [];\n\t\t\t$scope.blackout = true;\n\t\t\t$scope.maintenance = true;\n\n\t\t\tfunction init() {\n\t\t\t\tWizardService.getDateTypeFields().then(function(result) {\n\t\t\t\t\tresult.forEach(function(field, index) {\n\t\t\t\t\t\tvar fieldObject = {\"columnName\" : field.columnName, \"label\": field.label};\n\t\t\t\t\t\t$scope.startDateFields.push(fieldObject);\n\t\t\t\t\t\t$scope.endDateFields.push(fieldObject);\n\t\t\t\t\t});\n\t\t\t\t\t$scope.selectedStart = \"start_date\";\n\t\t\t\t\t$scope.selectedEnd = \"end_date\";\n\t\t\t\t})\n\t\t\t\t.catch(function(response) {\n\t\t\t\t\tif (response.status === 401)\n\t\t\t\t\t\t$window.location.reload();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tinit();\n\n\t\t\t$timeout(function() {\n\t\t\t\tangular.element(\"#name\").focus();\n\t\t\t}, 0);\n\t\t}\n\t};\n})\n.directive(\"snLandingWizardConditionPage\", function(getTemplateUrl) {\n\t\"use strict\";\n\treturn {\n\t\treplace : true,\n\t\trestrict : \"E\",\n\t\ttemplateUrl : getTemplateUrl(\"sn_chg_soc_landing_wizard_template_condition_page.xml\"),\n\t\tcontroller: function($scope) {\n\t\t\t$scope.table = \"change_request\";\n\t\t\t$scope.filterConfig = {\n\t\t\t\tdotWalking\t: false,\n\t\t\t\ttestFilter  : false,\n\t\t\t\tcloseFilter : false,\n\t\t\t\trunFilter   : false,\n\t\t\t\tsaveFilter  : false,\n\t\t\t\tloadFilter  : false,\n\t\t\t\tsortFilter  : true,\n\t\t\t\tclearFilter : false,\n\t\t\t\toutputType  : \"encoded_query\",\n\t\t\t\tencodedQuery: \"active=true\"\n\t\t\t};\n\n\t\t\t$scope.condition = \"active=true\";\n\n\t\t\t$scope.$on(\"snfilter:update_query\", function(currentScope, queryString) {\n\t\t\t\t$scope.condition = queryString;\n\t\t\t\tif (queryString === \"^ORDERBYundefined\")\n\t\t\t\t\t$scope.condition = \"\";\n\t\t\t});\n\t\t}\n\t};\n})\n.service(\"WizardService\", [\"$rootScope\", \"$window\", \"$http\", \"$q\", \"WIZARD_CONST\",\nfunction($rootScope, $window, $http, $q, WIZARD_CONST) {\n\t\"use strict\";\n\tvar wizardService = this;\n\twizardService.source = \"\";\n\n\twizardService.sortArray = function(arr) {\n\t\tarr.sort(function(a, b) {\n\t\t\tif (a.label < b.label)\n\t\t\t\t\treturn -1;\n\t\t\tif (a.label > b.label)\n\t\t\t\t\treturn 1;\n\t\t\treturn 0;\n\t\t});\n\t\treturn arr;\n\t};\n\n\twizardService.getDateTypeFields = function() {\n\t\tvar deferred = $q.defer();\n\t\tvar url = WIZARD_CONST.CHG_GET_FIELDS + \"?sysparm_ck=\" + $window.g_ck + \"&type=date\";\n\t\t$http.get(url).then(function(response) {\n\t\t\t\tdeferred.resolve(wizardService.sortArray(response.data.result));\n\t\t}, function(response) {\n\t\t\t\tdeferred.reject(response);\n\t\t});\n\t\treturn deferred.promise;\n\t};\n\n\twizardService.createChangeSchedule = function(data) {\n\t\tvar deferred = $q.defer();\n\t\tvar url = WIZARD_CONST.CHG_CREATE + \"?sysparm_ck=\" + $window.g_ck;\n\t\t$http.post(url, data).then(function(response) {\n\t\t\t\tdeferred.resolve(response.data.result);\n\t\t}, function(response) {\n\t\t\t\tdeferred.reject(response);\n\t\t});\n\t\treturn deferred.promise;\n\t};\n\n\twizardService.setSource = function(source) {\n\t\twizardService.source = source;\n\t};\n\n\twizardService.getSource = function() {\n\t\treturn wizardService.source;\n\t};\n\n\twizardService.trackEvent = function() {\n\t\tif ($window.GlideWebAnalytics && $window.GlideWebAnalytics.trackEvent)\n\t\t\t$window.GlideWebAnalytics.trackEvent('com.snc.change_management.soc','Change Schedules', wizardService.getSource(), 0, 0);\n\t\twizardService.setSource(\"\"); // Reset source\n\t};\n}]);\n","sys_class_name":"sys_ui_script","sys_id":"47c80d6a57330300afc34786cc94f951","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"ui_type":"0","sys_update_name":"sys_ui_script_47c80d6a57330300afc34786cc94f951","sys_updated_by":"admin","sys_created_on":"2018-01-24 11:53:56","name":"sn_chg_soc.landing_wizard","sys_name":"sn_chg_soc.landing_wizard","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"0","active":"true","description":"Used to pass 'sysparm_domain' and 'sysparm_domain_scope' to DialogWindow from the record form.","use_scoped_format":"false","global":"true","sys_updated_on":"2020-06-05 09:53:04","sys_tags":"","script_name":"","script":"function assetSetDomainParameters(gDialog) {\n\tvar ga = new GlideAjax('global.AssetUtilsAJAX');\n\tga.addParam('sysparm_name', 'isDomainDataSeparationEnabled');\n\tga.getXMLWait();\n\tif (ga.getAnswer() === 'true') {\n\t\tgDialog.setPreference('sysparm_domain', g_form.getValue('sysparm_domain'));\n\t\tgDialog.setPreference('sysparm_domain_scope', g_form.getValue('sysparm_domain_scope'));\n\t}\n}","sys_class_name":"sys_ui_script","sys_id":"4a2b70900f511010967863cda8767e52","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/45672bfb04b12210559073c06a02f7c5","value":"45672bfb04b12210559073c06a02f7c5"},"ui_type":"0","sys_update_name":"sys_ui_script_4a2b70900f511010967863cda8767e52","sys_updated_by":"admin","sys_created_on":"2020-06-05 09:32:53","name":"AssetSetDomainParameters","sys_name":"AssetSetDomainParameters","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"1","active":"true","description":"Module sn.change_management.cab.attendees.   Contains components for the managenent of CAB attendance.","use_scoped_format":"false","global":"false","sys_updated_on":"2016-10-12 11:14:54","sys_tags":"","script_name":"att","script":"angular.module(\"sn.change_management.cab.attendees\", ['ng.amb', 'sn.app_common', 'sn.change_management.cab.core']);","sys_class_name":"sys_ui_script","sys_id":"4bdd5d17d752220034d145bcce610355","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"ui_type":"","sys_update_name":"sys_ui_script_4bdd5d17d752220034d145bcce610355","sys_updated_by":"admin","sys_created_on":"2016-10-11 15:24:33","name":"sn_change_cab.att","sys_name":"sn_change_cab.att","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"12","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2024-08-29 15:54:09","sys_tags":"","script_name":"filter_widget","script":"/**\n * NG Filter Widget\n *\n * Confused? Check the NG Filter Widget Documentation UI page!\n *\n *\n * filterConfig options:\n *\n * encodedQuery           (string)  The encoded query to update and start from. Updated when \"snfilter:update_query\" is emitted.\n * queryObj               (object)  The object containing the parts of the filter, updated and loaded just like encodedQuery. Updated when \"snfilter:update_query\" is emitted.\n * sets                   (bool)    Show or hide sets\n * dotWalking             (bool)    Can a user dot walk through the field picker.\n * saveFilter             (bool)    Show the save filter button.\n * testFilter             (bool)    Shows the record count as you change the filter.\n * loadFilter             (bool)    Show the load filter button.\n * sortFilter             (bool)    Enable or disable sort modal\n * runFilter              (bool)    Show the run button. If disabled use mode=\"automatic\".\n * clearFilter            (bool)    Show the clear all button.\n * closeFilter            (bool)    Show the close filter button.\n * watchConfig            (bool)    Live updates on config object passed into filter\n * outputType             (string)  What type of query filter widget emits when run. Options are \"encoded_query\" and \"glide_query\". Defaults to \"glide_query\"\n * fieldList              (array)   List of fields to show in the filter\n * */\n\nangular.module(\"sn.filter_widget\").directive(\"socFilterWidget\", function(getTemplateUrl, snCustomEvent, snFilterInstanceStore, i18n) {\n\t\"use strict\";\n\n\treturn {\n\t\trestrict: \"E\",\n\t\treplace: true,\n\t\ttemplateUrl: getTemplateUrl(\"sn_chg_soc_filter_widget.xml\"),\n\t\tscope: {\n\t\t\ttable: \"@\",\n\t\t\ttableLabel: \"@\",\n\t\t\tfilterConfig: \"=\",\n\t\t\tuid: \"=?\"\n\t\t},\n\t\tcontroller: function($scope, $element, $attrs) {\n\t\t\tvar GLIDE_QUERY = \"glide_query\";\n\t\t\tvar ENCODED_QUERY = \"encoded_query\";\n\t\t\tvar filterId;\n\t\t\tvar filterInstance;\n\t\t\tvar internalChange = false;\n\t\t\tvar uid = angular.isDefined($scope.uid) ? $scope.uid : $scope.table;\n\t\t\tvar defaults = {\n\t\t\t\tsets: true,\n\t\t\t\twatchConfig: false,\n\t\t\t\tdotWalking: true,\n\t\t\t\tsaveFilter: false,\n\t\t\t\tloadFilter: false,\n\t\t\t\ttestFilter: false,\n\t\t\t\tsortFilter: true,\n\t\t\t\trunFilter: true,\n\t\t\t\tcloseFilter: true,\n\t\t\t\tclearFilter: true,\n\t\t\t\toutputType: GLIDE_QUERY,\n\t\t\t\trelatedListQueryConditions: false,\n\t\t\t\tmanageFiltersLink: \"/sys_filter_list.do\",\n\t\t\t\tuid: uid,\n\t\t\t\tfieldList : []\n\t\t\t};\n\n\t\t\t$scope.fieldListCloseEvent = \"filter-field-list-close\";\n\t\t\t$scope.$on(\"$destroy\", cleanUp);\n\n\t\t\t$scope.messages = {\n\t\t\t\t\"Add Sort\" : i18n.getMessage(\"Add Sort\")\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Kick off this directive\n\t\t\t */\n\t\t\tactivate();\n\n\t\t\tfunction activate() {\n\t\t\t\t_extendConfig();\n\t\t\t\t_bindFilterConfigWatcher();\n\t\t\t\tfilterId = snFilterInstanceStore.create($scope.table, $scope.filterConfig.relatedListQueryConditions, undefined, $scope.filterConfig.fieldList);\n\t\t\t\tfilterInstance = snFilterInstanceStore.get(filterId);\n\t\t\t\t_bindTooltips();\n\t\t\t\t$scope.uid = $scope.filterConfig.uid;\n\t\t\t\tvar query = _getQueryType();\n\t\t\t\t_initializeQuery(query, false).then(function() {\n\t\t\t\t\t//performance tester hook\n\t\t\t\t\tsnCustomEvent.fireAll(\"snfilter:activated\");\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Updates the base table. This will reset all the filter field lists\n\t\t\t */\n\t\t\t$scope.$on(\"snfilter:update_table\", function(e, data) {\n\t\t\t\tif ((data.id && $scope.widgetId && (data.id == $scope.widgetId)) || !$scope.widgetId) {\n\t\t\t\tfilterInstance.updateTable(data.table);\n\t\t\t\t$scope.$broadcast(\"snfilter:update_predicate_base_table\", data);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t/**\n\t\t\t * Update the internal query. Can be encoded_query string or GlideQuery object\n\t\t\t */\n\t\t\t$scope.$on(\"snfilter:initialize_query\", function(e, query) {\n\t\t\t\t_initializeQuery(query, false);\n\t\t\t});\n\n\t\t\tsnCustomEvent.on(\"snfilter:initialize_query\", initializeQuery);\n\n\t\t\tfunction initializeQuery(e, query) {\n\t\t\t\t_initializeQuery(typeof e.predicates !== \"undefined\" ? e : query, false);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Update the sort in the internal query.\n\t\t\t */\n\t\t\t$scope.$on(\"snfilter:update_order_by\", function(e, sortArray) {\n\t\t\t\tif (!sortArray)\n\t\t\t\t\treturn;\n\t\t\t\tfilterInstance.setSort(sortArray);\n\t\t\t\t_updateFilter();\n\t\t\t\t_emitQuery();\n\t\t\t});\n\n\t\t\t/**\n\t\t\t * Internal event that triggers the encoded_query string update based on if there are valid comparisons.\n\t\t\t */\n\t\t\tsnCustomEvent.observe(\"snfilter:conditionChange\", conditionChange);\n\n\t\t\tfunction conditionChange() {\n\t\t\t\t_updateFilter();\n\t\t\t\tif (_isAutomatic())\n\t\t\t\t\t_emitQuery();\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * general functions\n\t\t\t */\n\t\t\t$scope.runFilter = runFilter;\n\t\t\t$scope.testFilter = testFilter;\n\t\t\t$scope.clearFilter = clearFilter;\n\t\t\t$scope.close = close;\n\t\t\t$scope.addComparisonRow = addComparisonRow;\n\t\t\t$scope.removeComparisonRow = removeComparisonRow;\n\t\t\t$scope.addCompound = addCompound;\n\n\t\t\t/**\n\t\t\t * Add a Comparison Row based on index with a \"type\"\n\t\t\t * @param setIndex {Integer}\n\t\t\t * @param ruleSetIndex {Integer}\n\t\t\t * @param condIndex {Integer}\n\t\t\t * @param type {String}\n\t\t\t */\n\t\t\tfunction addComparisonRow(setIndex, ruleSetIndex, condIndex, type) {\n\t\t\t\t$scope.$evalAsync(function() {\n\t\t\t\t\tfilterInstance.addComparisonRow(setIndex, ruleSetIndex, condIndex, type);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Remove a Comparison row based on index\n\t\t\t * @param setIndex {Integer}\n\t\t\t * @param ruleSetIndex {Integer}\n\t\t\t * @param conditionIndex {Integer}\n\t\t\t */\n\t\t\tfunction removeComparisonRow(setIndex, ruleSetIndex, conditionIndex) {\n\t\t\t\t$scope.$broadcast($scope.fieldListCloseEvent);\n\t\t\t\t$scope.$evalAsync(function() {\n\t\t\t\t\tfilterInstance.removeComparisonRow(setIndex, ruleSetIndex, conditionIndex);\n\n\t\t\t\t\tif (_isAutomatic())\n\t\t\t\t\t\trunFilter();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Add a new filter compound\n\t\t\t */\n\t\t\tfunction addCompound() {\n\t\t\t\tfilterInstance.addCompound();\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Clear All Filter Conditions\n\t\t\t */\n\t\t\tfunction clearFilter() {\n\t\t\t\t$scope.filterConfig.relatedShowCompounds = false;\n\t\t\t\t$scope.$broadcast(\"snfilter:reset_related_list_select\");\n\n\t\t\t\t_initializeQuery(\"\", true);\n\n\t\t\t\t// List specific to empty the column header search values\n\t\t\t\tsnCustomEvent.fire(\"filter:table.clear_column_headers\", $scope.table);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Close filter widget (triggered from (x) close button\n\t\t\t */\n\t\t\tfunction close() {\n\t\t\t\t$scope.$emit(\"snbreadcrumbs:toggle_filter\");\n\t\t\t\tangular.element(\"#\"+$scope.uid+\"-open-filters-button\").focus();\n\t\t\t}\n\n\t\t\t/**\n\t\t\t *\n\t\t\t */\n\t\t\tfunction testFilter() {\n\t\t\t\tfilterInstance.testResult().then(function(count) {\n\t\t\t\t\t$scope.count = count;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Based on the filter type, get the query and emit it\n\t\t\t * Note that the query is NOT constructed here, its already been constructed\n\t\t\t *\n\t\t\t */\n\t\t\tfunction runFilter() {\n\t\t\t\ttry {\n\t\t\t\t\t_updateFilter();\n\t\t\t\t\t_emitQuery();\n\t\t\t\t} catch (ex) {\n\t\t\t\t\t_errorHandler(ex);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Remove FilterInstance from FilterInstanceStore\n\t\t\t */\n\t\t\tfunction cleanUp() {\n\t\t\t\t$element.tooltip(\"destroy\");\n\t\t\t\t//snFilterInstanceStore.remove($scope.table);\n\t\t\t\tsnFilterInstanceStore.remove(filterId);\n\t\t\t\tsnCustomEvent.un(\"snfilter:conditionChange\", conditionChange);\n\t\t\t\tsnCustomEvent.un(\"snfilter:initialize_query\", initializeQuery);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * extend our local config options with the filterConfig object thats passed in\n\t\t\t */\n\t\t\tfunction _extendConfig() {\n\t\t\t\t$scope.filterConfig = angular.extend({}, defaults, $scope.filterConfig);\n\t\t\t\tif ($attrs.relatedListQueryConditions === \"true\")\n\t\t\t\t\tangular.extend($scope.filterConfig, {relatedListQueryConditions: true});\n\n\t\t\t\t$scope.filterConfig.hideHeader = _checkHideHeader($scope.filterConfig);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * If configured to watch the filterConfig, set up a watcher\n\t\t\t * @private\n\t\t\t */\n\t\t\tfunction _bindFilterConfigWatcher() {\n\t\t\t\tif ($scope.filterConfig.watchConfig) {\n\t\t\t\t\t$scope.$watch(\"filterConfig\", function(n, o) {\n\t\t\t\t\t\tif (n !== o && !internalChange)\n\t\t\t\t\t\t\t_extendConfig();\n\n\t\t\t\t\t\tinternalChange = false;\n\t\t\t\t\t}, true);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * bind our tooltips\n\t\t\t * @private\n\t\t\t */\n\t\t\tfunction _bindTooltips() {\n\t\t\t\t$element.tooltip({\n\t\t\t\t\tselector: \".sn-filter-tooltip\"\n\t\t\t\t}).on(\"hide.bs.tooltip\", function(evt) {\n\t\t\t\t\tvar button = jQuery(evt.target);\n\t\t\t\t\tif (typeof button.hideFix === \"function\") {\n\t\t\t\t\t\tbutton.hideFix();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Determine if we should emit our query on every change\n\t\t\t * @returns {boolean}\n\t\t\t * @private\n\t\t\t */\n\t\t\tfunction _isAutomatic() {\n\t\t\t\treturn ($scope.filterConfig.runFilter === false);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Hide the filter widget header if theres no reason to show it\n\t\t\t * @param config {object}\n\t\t\t * @returns {boolean}\n\t\t\t * @private\n\t\t\t */\n\t\t\tfunction _checkHideHeader(config) {\n\t\t\t\treturn (config.saveFilter === false &&\n\t\t\t\tconfig.loadFilter === false &&\n\t\t\t\tconfig.testFilter === false &&\n\t\t\t\tconfig.sortFilter === false &&\n\t\t\t\tconfig.runFilter === false &&\n\t\t\t\tconfig.closeFilter === false );\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Update the filterConfig with our most up to date encoded_query and GlideQuery object\n\t\t\t * @private\n\t\t\t */\n\t\t\tfunction _updateFilter() {\n\t\t\t\tif ($scope.filterConfig.watchConfig)\n\t\t\t\t\tinternalChange = true;\n\n\t\t\t\t$scope.filterConfig.queryObj = filterInstance.buildQueryObject();\n\t\t\t\t$scope.filterConfig.encodedQuery = $scope.filterConfig.queryObj.toQueryString();\n\t\t\t\t$scope.$emit(\"snfilter:filter_change\");\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Emit our query based on the filterConfig outputType\n\t\t\t * @private\n\t\t\t */\n\t\t\tfunction _emitQuery() {\n\t\t\t\tswitch ($scope.filterConfig.outputType) {\n\t\t\t\t\tcase ENCODED_QUERY :\n\t\t\t\t\t\t$scope.$emit(\"snfilter:update_query\", $scope.filterConfig.encodedQuery, $scope.table);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase GLIDE_QUERY :\n\t\t\t\t\t\t$scope.$emit(\"snfilter:update_query\", $scope.filterConfig.queryObj, $scope.table);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault :\n\t\t\t\t\t\t$scope.$emit(\"snfilter:update_query\", $scope.filterConfig.queryObj, $scope.table);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Get the correct kind of query\n\t\t\t *\n\t\t\t */\n\t\t\tfunction _getQueryType() {\n\t\t\t\tvar query = [];\n\t\t\t\tif ($scope.filterConfig.queryObj)\n\t\t\t\t\tquery = $scope.filterConfig.queryObj;\n\t\t\t\telse if ($scope.filterConfig.encodedQuery)\n\t\t\t\t\tquery = $scope.filterConfig.encodedQuery;\n\n\t\t\t\treturn query;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Initialize our filterInstance with a new query\n\t\t\t * @param query {GlideQuery|String}\n\t\t\t * @param update {Boolean}Emit updated query to the world\n\t\t\t * @returns {*}\n\t\t\t * @private\n\t\t\t */\n\t\t\tfunction _initializeQuery(query, update) {\n\n\t\t\t\t$scope.initializing = true;\n\n\t\t\t\treturn filterInstance.initialize(query, $scope.table, $scope.filterConfig.extendedOperatorOptions).then(function(queryMap){\n\n\t\t\t\t\t$scope.initializing = false;\n\t\t\t\t\t$scope.queryMap = queryMap;\n\t\t\t\t\t$scope.sortItems = filterInstance.getSort();\n\n\t\t\t\t\tif (update) {\n\t\t\t\t\t\t_updateFilter();\n\t\t\t\t\t\t_emitQuery();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction _errorHandler(ex) {\n\t\t\t\tconsole.warn(ex);\n\t\t\t}\n\n\t\t\t$scope.$watch(\"sortItems\", function(sortArray, oldValue) {\n\t\t\t\t$scope.$emit(\"snfilter:update_order_by\", sortArray);\n\t\t\t}, true);\n\t\t}\n\t};\n})\n.directive(\"socSortFilterWidget\", function(getTemplateUrl, snDotWalkTableAPI, i18n, snFilterUtilities, snDotWalkUtilities, snFilterInstanceErrors, $filter, $timeout) {\n\t\"use strict\";\n\treturn {\n\t\trestrict: \"E\",\n\t\treplace: true,\n\t\ttemplateUrl: getTemplateUrl(\"sn_chg_soc_sort_filter_widget.xml\"),\n\t\tcontroller : function($scope) {\n\n\t\t\tvar firstField;\n\t\t\t$scope.showSort = false;\n\t\t\t$scope.sortDirections = [\n\t\t\t\t{\n\t\t\t\t\tlabel: i18n.getMessage(\"A to Z\"),\n\t\t\t\t\tvalue: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: i18n.getMessage(\"Z to A\"),\n\t\t\t\t\tvalue: false\n\t\t\t\t}\n\t\t\t];\n\n\t\t\t$scope.addSortItem = addSortItem;\n\t\t\t$scope.removeSortItem = removeSortItem;\n\t\t\t$scope.setSort = setSort;\n\n\t\t\t$scope.toggleSort = function() {\n\t\t\t\t$scope.showSort = !$scope.showSort;\n\t\t\t\tif ($scope.showSort)\n\t\t\t\t\t_checkEmptySortItems();\n\t\t\t\tif (!$scope.sortFields)\n\t\t\t\t\tactivate();\n\t\t\t};\n\n\t\t\tfunction isEmptySort() {\n\t\t\t\treturn (!Array.isArray($scope.sortItems) || !$scope.sortItems[0] || !$scope.sortItems[0].hasOwnProperty(\"column_label\"));\n\t\t\t}\n\n\t\t\t$scope.showSortSection = function() {\n\t\t\t\treturn $scope.showSort || !isEmptySort();\n\t\t\t};\n\n\t\t\tactivate();\n\n\t\t\tfunction activate() {\n\t\t\t\t_getFilterFieldsData()\n\t\t\t\t\t.catch(function() {\n\t\t\t\t\t\tthrow new snFilterInstanceErrors.SortFilterMetadataError($scope.table);\n\t\t\t\t\t})\n\t\t\t\t\t.finally(_checkEmptySortItems);\n\t\t\t}\n\n\t\t\tfunction setSort() {\n\t\t\t\t$scope.$emit(\"snfilter:update_order_by\", $scope.sortItems);\n\t\t\t}\n\n\t\t\tfunction _getFilterFieldsData() {\n\t\t\t\treturn snDotWalkTableAPI.getMetaData($scope.table, false, false).then(function(columns) {\n\t\t\t\t\tif ($scope.fieldList && $scope.fieldList.length > 0)\n\t\t\t\t\t\tcolumns = filterTableColumns(columns, $scope.fieldList);\n\t\t\t\t\tvar _filterFields = snFilterUtilities.convertObjectToArray(columns).filter(_removeEdgeEncryptionFields);\n\t\t\t\t\t$scope.sortFields = snDotWalkUtilities.makeFieldsArray(_filterFields);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction _checkEmptySortItems() {\n\t\t\t\tif ($scope.sortItems.length === 0)\n\t\t\t\t\taddSortItem();\n\t\t\t\t$timeout(function() {\n\t\t\t\t\tsetFocusToLastSortField();\n\t\t\t\t}, 0);\n\t\t\t}\n\n\t\t\tfunction addSortItem() {\n\t\t\t\t$scope.sortItems.push({\n\t\t\t\t\tcolumn_name: firstField,\n\t\t\t\t\tascending : true\n\t\t\t\t});\n\t\t\t\t$timeout(function() {\n\t\t\t\t\tsetFocusToLastSortField();\n\t\t\t\t}, 0);\n\t\t\t}\n\n\t\t\tfunction setFocusToLastSortField() {\n\t\t\t\tvar fieldList = angular.element('[id^=change_request_sort_field]');\n\t\t\t\tif (fieldList.length > 0)\n\t\t\t\t\tfieldList[fieldList.length - 1].focus();\n\t\t\t}\n\n\t\t\tfunction removeSortItem(index) {\n\t\t\t\t$scope.sortItems.splice(index, 1);\n\t\t\t\tif ($scope.sortItems.length === 0) {\n\t\t\t\t\t$scope.showSort = false;\n\t\t\t\t\tsetSort();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction _removeEdgeEncryptionFields(item) {\n\t\t\t\treturn ([\"fixed\"].indexOf(item.edge_encryption_type) === -1);\n\t\t\t}\n\n\t\t\tfunction filterTableColumns(columns, filterColumns) {\n\t\t\t\tvar processedColumns = {};\n\t\t\t\tangular.forEach(filterColumns, function(column) {\n\t\t\t\t\tif (columns[column])\n\t\t\t\t\t\tprocessedColumns[column] = columns[column];\n\n\t\t\t\t});\n\t\t\t\tif (columns[\"123TEXTQUERY321\"])\n\t\t\t\t\tprocessedColumns[\"123TEXTQUERY321\"] = columns[\"123TEXTQUERY321\"];\n\t\t\t\treturn processedColumns;\n\t\t\t}\n\t\t},\n\t\tlink: function(scope, elem, attrs) {\n\t\t\tattrs.$observe(\"fieldList\", function(value) {\n\t\t\t\tscope.fieldList = (value) ? value.split(\",\"): [];\n\t\t\t});\n\t\t}\n\t};\n});","sys_class_name":"sys_ui_script","sys_id":"4d208ca457009300afc34786cc94f905","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"ui_type":"0","sys_update_name":"sys_ui_script_4d208ca457009300afc34786cc94f905","sys_updated_by":"admin","sys_created_on":"2018-01-30 11:44:20","name":"sn_chg_soc.filter_widget","sys_name":"sn_chg_soc.filter_widget","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"1","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2024-02-02 05:51:12","sys_tags":"","script_name":"","script":"function alert(message) {\n\t_notifications_.push({type: \"alert\", message: message});\n}\n\ncsGlobals['alert'] = alert;","sys_class_name":"sys_ui_script","sys_id":"4e2f11269f400210a86b86e29a0a1ca2","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/4c8e6ff304752210559073c06a02f7c4","value":"4c8e6ff304752210559073c06a02f7c4"},"ui_type":"0","sys_update_name":"sys_ui_script_4e2f11269f400210a86b86e29a0a1ca2","sys_updated_by":"admin","sys_created_on":"2024-02-02 05:48:26","name":"global.AlertProxy","sys_name":"global.AlertProxy","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"0","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2022-09-27 13:48:13","sys_tags":"","script_name":"","script":"/*! RESOURCE: /scripts/js_includes_vcab_calendar.js */\n/*! RESOURCE: /scripts/app.vcab/calendar/_calendar.js */\nangular.module('sn.itsm.vcab.calendar', ['sn.common', 'sn.calendar', 'sn.itsm.vcab.common', 'ui.bootstrap', 'ui.bootstrap.popover']);\n;\n/*! RESOURCE: /scripts/app.vcab/calendar/directive.cabChangeCalendar.js */\n(function ($) {\n'use strict';\nvar ALL_FILTER = 'all';\nvar NONE_FILTER = 'none';\nfunction serializeObj(o) {\nvar s = '';\nvar keys = Object.keys(o);\nfor (var i = 0; i < keys.length; i++) {\nvar k = keys[i];\nif (typeof o[k] === 'undefined' || k === ALL_FILTER || k === NONE_FILTER)\ncontinue;\nif (i > 0)\ns += ',';\ns += k + '=' + o[k];\n}\nreturn s;\n}\nfunction deserializeObj(s) {\nvar o = {};\nif (s) {\nvar d = s.split(',');\nfor (var i = 0; i < d.length; i++) {\nvar p = d[i].split('=');\nif (p[0] === ALL_FILTER || p[0] === NONE_FILTER)\ncontinue;\no[p[0]] = p[1] === 'true';\n}\n}\nreturn o;\n}\nfunction getPhantomKey(d) {\nreturn d.getDate() + '~' + d.getMonth();\n}\nvar UIDC = 1;\nfunction uid() {\nreturn UIDC++ + '';\n}\nangular.module('sn.itsm.vcab.calendar')\n.directive('snCabChangeCalendar', function (getTemplateUrl, CalendarView, vcabDataSource, dataUtil, $timeout, TimelineView, i18n, calendarUtils,\n$compile, userPreferences, $q, go, cancellablePromise) {\nreturn {\nrestrict: 'E',\ntemplateUrl: getTemplateUrl('vcab_sn_vcab_calendar.xml'),\nscope: {\nchange: '=',\nonWarn: '&',\nisUpdatable: '@',\nisConfigAvailable: '@',\nconfigOptions: '=?',\ndayViewOptions: '=?',\nweekViewOptions: '=?',\nconfigDescription: '@',\nautoSaveAndFetchOptionsAsUserPref: '@'\n},\nlink: function ($scope, el, attrs) {\nvar BLACKOUT_SECTION = 10, MAINT_SECTION = 20, CURR_CHANGE_SECTION = 30, RELATED_CHANGE_SECTION = 40;\nvar BLACKOUT_TYPE = 1, MAINT_TYPE = 2, BOTH_TYPE = 3;\nvar HAS_SPACE = 1, NO_SPACE = 0, NO_SPACE_FOR_ANYTHING = -1;\nvar LBL_MAINTENANCE_SCHEDULE = i18n.getMessage('Maintenance Window');\nvar LBL_BLACKOUT_SCHEDULE = i18n.getMessage('Blackout Schedule');\nvar LBL_MAINTENANCE_SCHEDULES = i18n.getMessage('Maintenance Windows');\nvar LBL_BLACKOUT_SCHEDULES = i18n.getMessage('Blackout Schedules');\nvar LBL_BOTH_SCHEDULES = i18n.getMessage('Blackout and Maint Schedules');\nvar LBL_MULTIPLE_MAINTENANCE_SCHEDULES = i18n.getMessage('Multiple Maintenance Windows');\nvar LBL_MULTIPLE_BLACKOUT_SCHEDULES = i18n.getMessage('Multiple Blackout Schedules');\n$scope.SETTINGS_TAB = 1;\n$scope.CONFIG_TAB = 2;\n$scope.CalendarView = CalendarView;\nfunction getCommonCalCtrl() {\nreturn angular.element('.common-cal', el).controller('snDhtmlxScheduler');\n}\nfunction hasEnoughSpaceToShowEventText(start, end) {\nvar ctrl = getCommonCalCtrl();\nif (ctrl) {\nvar width = ctrl.getEstimatedEventWidthInPx(start, end);\nreturn width > 70 ? HAS_SPACE : (width >= 34 ? NO_SPACE : NO_SPACE_FOR_ANYTHING);\n}\nreturn NO_SPACE;\n}\nfunction getChangeLabel(change) {\nvar v = change.short_description.display_value;\nif (v) {\nv = v.replace(/\"/g, \"&quot;\").replace(/'/g, \"&apos;\");;\n}\nreturn \"<small>\" + change.number.display_value + \"</small>\" + \"<p><strong><sn-cab-line-clamp max-lines='2' text='\" + v + \"'>\"\n+ \"</sn-cab-line-clamp></strong></p>\";\n}\nfunction getWindowLabel(windowDisplayValue) {\nreturn \"<span class='cab_window_label'>\" + windowDisplayValue + \"</span>\";\n}\nfunction getWindowEventText(id, data, start, end, sectionId) {\nvar t = \"<div class='event_details' event_id='\" + id + \"'>\";\nif ($scope.viewMode === CalendarView.MONTH) {\nt += '<strong>' + data.title + '</strong>';\n} else {\nvar spc = hasEnoughSpaceToShowEventText(start, end);\nvar c = 'badge';\nif (angular.isArray(data)) {\nif (spc === NO_SPACE_FOR_ANYTHING)\nc += ' size_zero_event';\nelse if (spc === NO_SPACE)\nc += ' no_text_event'\n}\nif (spc === HAS_SPACE) {\nvar f = $scope.viewMode === CalendarView.DAY ? $scope.filters.dayView : $scope.filters.weekView;\nif (f.dateTime) {\nt += \"<span class='date_range'>\"\n+ dataUtil.dateRangeToFriendlyText(start, end)\n+ \"</span>\";\n}\nif (sectionId === BLACKOUT_SECTION)\nt += \"<p>\" + LBL_BLACKOUT_SCHEDULE;\nelse\nt += \"<p>\" + LBL_MAINTENANCE_SCHEDULE;\n}\nif (angular.isArray(data)) {\nt += \" <span class='\" + c + \"' uib-popover-template='\\\"cab_multi_window_popover.html\\\"'\"\n+\" popover-append-to-body='true' popover-placement='right' popover-trigger='none' popover-is-open='isBadgePopupOpen'\"\n+\" popover-class='cab_change_calendar_popover' popover-animation='false'\"\n+\" ng-mouseenter='openBadgePopup()' ng-mouseleave='closeBadgePopup()'>\" + data.length + \"</span> \";\n}\nif (spc === HAS_SPACE) {\nt+= \"</p>\";\n}\n}\nt += \"</div>\";\nreturn t;\n}\nfunction getChangeEventText(id, change, start, end) {\nvar t = \"<div class='event_details' event_id='\" + id + \"'>\";\nif ($scope.viewMode === CalendarView.MONTH) {\nt += '<strong>' + change.number.display_value + '</strong>';\n} else {\nif (hasEnoughSpaceToShowEventText(start, end) === HAS_SPACE) {\nvar f = $scope.viewMode === CalendarView.DAY ? $scope.filters.dayView : $scope.filters.weekView;\nif (f.dateTime) {\nt += \"<span class='date_range'>\"\n+ dataUtil.dateRangeToFriendlyText(change.start_date, change.end_date)\n+ \"</span>\";\n}\nif (f.number || (f.shortDescription && change.short_description.display_value))\nt += \"<p>\";\nif (f.number)\nt += \"<strong>\" + change.number.display_value + \"</strong> \";\nif (f.shortDescription && change.short_description.display_value)\nt += change.short_description.display_value;\nif (f.number || (f.shortDescription && change.short_description.display_value))\nt += \"</p>\";\nif ($scope.viewMode === CalendarView.DAY) {\nif ((f.assignee && change.assigned_to.display_value) || (f.group && change.assignment_group.display_value))\nt += \"<p>\";\nif (f.assignee && change.assigned_to.display_value)\nt += change.assigned_to.display_value;\nif (f.group && change.assignment_group.display_value) {\nif (f.assignee && change.assigned_to.display_value)\nt += '&nbsp;&nbsp;&nbsp;';\nt += change.assignment_group.display_value;\n}\nif ((f.assignee && change.assigned_to.display_value) || (f.group && change.assignment_group.display_value))\nt += \"</p>\";\n}\n}\n}\nt += \"</div>\";\nreturn t;\n}\nfunction getNoNullStartDate(d) {\nif (d)\nreturn d;\nreturn new Date(0);\n}\nfunction getNoNullEndDate(d) {\nif (d)\nreturn d;\nreturn new Date(Date.now() + 100 * 365 * 24 * 60 * 60 * 1000);\n}\nfunction changeToEvent(change, sectionId) {\nvar s = change.start_date = dataUtil.wsToJsDate(change.start_date);\nvar e = change.end_date = dataUtil.wsToJsDate(change.end_date);\nvar id = change.sys_id.value;\nvar ns = getNoNullStartDate(s);\nvar ne = getNoNullEndDate(e);\nvar e = {\nid: id,\nstart_date: ns,\nend_date: ne,\ntext: getChangeEventText(id, change, ns, ne),\nchange: change,\ntimeline_section: sectionId\n};\nreturn e;\n}\nfunction scheduleToEvents(schedule, sectionId) {\nvar events = [];\nschedule.date_ranges.forEach(function (d, index) {\nvar id = schedule.sys_id;\nif (schedule.date_ranges.length > 1)\nid += \"-\" + (index + 1);\nvar s = d.start = dataUtil.wsToJsDate(d.start);\nvar e = d.end = dataUtil.wsToJsDate(d.end);\nvar e = {\nid: id,\nstart_date: getNoNullStartDate(s),\nend_date: getNoNullEndDate(e),\ntext: getWindowEventText(id, schedule, s, e, sectionId),\nschedule: schedule,\ndate_range: d,\ntimeline_section: sectionId\n};\nevents.push(e);\n});\nreturn events;\n}\nfunction updateEvent(eid) {\nvar ctrl = getCommonCalCtrl();\nif (ctrl) {\nctrl.updateEvent(eid);\nreturn true;\n}\nreturn false;\n}\nfunction refreshEventsText(notify) {\nvar eventUpdated = false;\nif ($scope.events) {\n$scope.events.forEach(function (e) {\nif (e.change) {\ne.text = getChangeEventText(e.id, e.change, e.start_date, e.end_date);\n} else {\nvar data = e.is_multievent ? e.events : e.schedule;\ne.text = getWindowEventText(e.id, data, e.start_date, e.end_date, e.timeline_section);\n}\nif (notify)\neventUpdated = updateEvent(e.id);\n});\nif (eventUpdated)\naddPopoversToEventsIfNeeded();\n}\n}\nfunction getEventFromId(id) {\nif ($scope.events) {\nfor (var i = 0; i < $scope.events.length; i++)\nif ($scope.events[i].id === id) {\nreturn $scope.events[i];\n}\n}\nif ($scope.phantomEvents) {\nfor (var k in $scope.phantomEvents) {\nif ($scope.phantomEvents[k].id === id) {\nreturn $scope.phantomEvents[k];\n}\n}\n}\nreturn null;\n}\nfunction compileTimelineLabels() {\n$timeout(function () {\n$('.dhx_scell_name', el).each(function () {\nvar needsCompilation = !$(this).hasClass('ng-scope');\nif (needsCompilation) {\n$compile(this)($scope);\n}\n});\n}, 100);\n}\nvar eventScopes = {};\nvar eventDuplicateCounts = {};\nfunction addPopoversToEventsIfNeeded() {\nvar defer = $q.defer();\n$scope.closeEditableChangePopups();\n$timeout(function () {\nvar sameEventCounts = {};\n$('.cab_event', el).each(function () {\nvar $this = $(this);\nvar needsCompilation = !$this.attr('uib-popover-template');\nvar eid = $('.event_details', this).attr('event_id');\nif (!sameEventCounts[eid])\nsameEventCounts[eid] = 1;\nelse\nsameEventCounts[eid]++;\nvar scopeKey = eid + ':' + sameEventCounts[eid];\nvar scope = eventScopes[scopeKey];\nvar createNewScope = false;\nif (!scope) {\ncreateNewScope = true;\n} else if (needsCompilation) {\nscope.$destroy();\ncreateNewScope = true;\n}\nif (createNewScope) {\nscope = $scope.$new(true);\nscope.isBadgePopupOpen = false;\nscope.isPopupOpen = false;\neventScopes[scopeKey] = scope;\neventDuplicateCounts[eid] = sameEventCounts[eid];\n}\nscope.eventData = getEventFromId(eid);\nif (scope.eventData) {\nvar isChange = !!scope.eventData.change;\nvar isCurrChange = isChange && scope.eventData.timeline_section === CURR_CHANGE_SECTION;\nvar isMultiEvent = scope.eventData.is_multievent;\nvar isPhantomEvent = scope.eventData.is_phantom;\nvar isSingleEventPhantom = isPhantomEvent && scope.eventData.events.length === 1;\n}\nif (isMultiEvent) {\nif (scope.eventData.timeline_section === BLACKOUT_SECTION)\nscope.schedulesTitle = LBL_BLACKOUT_SCHEDULES;\nelse if (scope.eventData.timeline_section === MAINT_SECTION)\nscope.schedulesTitle = LBL_MAINTENANCE_SCHEDULES;\nif (createNewScope) {\nscope.openBadgePopup = function () {\nif (!scope.isPopupOpen)\nscope.isBadgePopupOpen = true;\n};\nscope.closeBadgePopup = function () {\nscope.isBadgePopupOpen = false;\n};\nscope.$watch('isPopupOpen', function (open) {\nif (open) {\nscope.closeBadgePopup();\n}\n});\n}\n}\nif (isPhantomEvent) {\nif (scope.eventData.type === BLACKOUT_TYPE)\nscope.schedulesTitle = LBL_BLACKOUT_SCHEDULES;\nelse if (scope.eventData.type === MAINT_TYPE)\nscope.schedulesTitle = LBL_MAINTENANCE_SCHEDULES;\nelse if (scope.eventData.type === BOTH_TYPE)\nscope.schedulesTitle = LBL_BOTH_SCHEDULES;\nif (isSingleEventPhantom) {\nscope.eventData = scope.eventData.events[0];\n}\n}\nif (createNewScope) {\nif (isChange) {\nscope.canShowAssignedTo = function () {\nif ($scope.viewMode === CalendarView.DAY)\nreturn $scope.filters.dayView.assignee;\nelse if ($scope.viewMode === CalendarView.WEEK)\nreturn $scope.filters.weekView.assignee;\nreturn true;\n};\nscope.canShowGroup = function () {\nif ($scope.viewMode === CalendarView.DAY)\nreturn $scope.filters.dayView.group;\nelse if ($scope.viewMode === CalendarView.WEEK)\nreturn $scope.filters.weekView.group;\nreturn true;\n};\nscope.canShowShortDescription = function () {\nif ($scope.viewMode === CalendarView.DAY)\nreturn $scope.filters.dayView.shortDescription;\nelse if ($scope.viewMode === CalendarView.WEEK)\nreturn $scope.filters.weekView.shortDescription;\nreturn true;\n};\nscope.canShowDateTime = function () {\nif ($scope.viewMode === CalendarView.DAY)\nreturn $scope.filters.dayView.dateTime;\nelse if ($scope.viewMode === CalendarView.WEEK)\nreturn $scope.filters.weekView.dateTime;\nreturn true;\n};\n} else {\nscope.openScheduleForm = function (sysId) {\nscope.isPopupOpen = false;\ngo.toFormModal('cmn_schedule', sysId, {\ntitle: i18n.getMessage('Schedule Form')\n});\n};\n}\n}\nvar isEditableChange = isCurrChange && $scope.isUpdatable === 'true';\nif (isEditableChange && createNewScope) {\nscope.close = function () {\nscope.isPopupOpen = false;\n};\neditableChangePopupClosers[scopeKey] = scope.close;\nscope.update = function () {\nscope.updating = true;\nvcabDataSource.change.update({\nsys_id: scope.eventData.change.sys_id.value,\nstart_date: dataUtil.jsToWsDate(scope.dates.start),\nend_date: dataUtil.jsToWsDate(scope.dates.end)\n}).then(function (change) {\nscope.updating = false;\nscope.close();\nif (isCurrChange) {\n$scope.change = change;\nscope.changeWillUpdate = true;\n}\n}, function () {\nscope.updating = false;\nscope.close();\n});\n};\nscope.$watch('isPopupOpen', function (open) {\nif (open) {\n$scope.closeEditableChangePopups(scopeKey);\nif (scope.unsavedDates)\nscope.dates = scope.unsavedDates;\nelse {\nscope.dates = {\nstart: scope.eventData.change.start_date,\nend: scope.eventData.change.end_date\n};\n}\n} else {\nif (scope.unsavedDates) {\nscope.unsavedDates = undefined;\nif (!scope.changeWillUpdate) {\nangular.extend(scope.eventData, changeToEvent(scope.eventData.change, scope.eventData.timeline_section));\nupdateEvent(scope.eventData.id);\n}\n}\n}\n});\n}\nif (needsCompilation) {\nif (scope.eventData) {\nif (isChange) {\nif (isEditableChange)\n$this.attr('uib-popover-template', '\"cab_editable_change_event_popover.html\"');\nelse\n$this.attr('uib-popover-template', '\"cab_readonly_change_event_popover.html\"');\n} else if (isMultiEvent || (isPhantomEvent && !isSingleEventPhantom))\n$this.attr('uib-popover-template', '\"cab_multi_window_event_popover.html\"');\nelse\n$this.attr('uib-popover-template', '\"cab_window_event_popover.html\"');\n$this.attr('popover-class', 'cab_change_calendar_popover');\n$this.attr('popover-placement', 'auto');\n$this.attr('popover-append-to-body', 'true');\n$this.attr('popover-is-open', 'isPopupOpen');\n$this.attr('popover-trigger', 'click outsideClick');\n$this.attr('popover-animation', 'false');\n$this.css('cursor', 'pointer');\n$compile(this)(scope);\n}\n}\n});\ngarbageCollectOldEventScopes();\ndefer.resolve();\n}, 100);\nreturn defer.promise;\n}\nfunction garbageCollectOldEventScopes() {\nfor (var scopeKey in eventScopes) {\nvar s = eventScopes[scopeKey];\nvar id = scopeKey.split(':')[0];\nvar count = parseInt(scopeKey.split(':')[1]);\nvar maxCount = eventDuplicateCounts[id] || 0;\nvar e = getEventFromId(id);\nvar destroy = false;\nif (s && !e) {\ndestroy = true;\neventDuplicateCounts[id] = 0;\n} else if (s && e && count > maxCount) {\ndestroy = true;\n}\nif (destroy) {\ns.$destroy();\neventScopes[scopeKey] = undefined;\nif (editableChangePopupClosers[scopeKey])\neditableChangePopupClosers[scopeKey] = undefined;\n}\n}\n}\nfunction getFirstScope(ev) {\nreturn eventScopes[ev.id + ':1'];\n}\nvar isRelatedSectionOpen = true;\nfunction setVerticalUnits(currChangeLabel, showBlackoutSection, showMaintSection, showRelatedSection) {\nvar sections = [];\nif (showBlackoutSection)\nsections.push({key: BLACKOUT_SECTION, label: getWindowLabel(LBL_BLACKOUT_SCHEDULE)});\nif (showMaintSection)\nsections.push({key: MAINT_SECTION, label: getWindowLabel(LBL_MAINTENANCE_SCHEDULE)});\nsections.push({key: CURR_CHANGE_SECTION, label: currChangeLabel});\nif (showRelatedSection)\nsections.push({key: RELATED_CHANGE_SECTION, label: i18n.getMessage('Related Changes'), open: isRelatedSectionOpen, children: $scope.relatedChangeLabels});\n$scope.config.timeline.verticalUnits = sections;\ncompileTimelineLabels();\n}\n$scope.events = [];\n$scope.phantomEvents = {};\n$scope.relatedChangeLabels = [];\n$scope.ready = false;\n$scope.verticalUnits = null;\nif (!$scope.configDescription)\n$scope.configDescription = i18n.getMessage('Set filters to choose how related Changes are discovered.');\n$scope.config = {\ndate: dataUtil.currentDateAsPerUserProfile(),\nallowCreate: false,\nallowResize: $scope.isUpdatable === 'true',\nallowMoving: $scope.isUpdatable === 'true',\nweekStartDay: calendarUtils.getNormalizedWeekStartDay(dataUtil.getFirstDayOfWeek()),\nviewTimeFormat: '%H:%i',\ntimeline: {\ndisplayButtonInUI: false,\nenabled: true,\nsupport: true,\nproperty: {\nvalue: 'timeline_section'\n},\nrenderType: TimelineView.TREE,\nsection_autoheight: false,\ndy: 68,\ndx: 215,\nevent_dy: 'full',\nfolder_dy: 23\n},\nxy: {\nscale_height: 36,\nday_scale_height: 30\n},\ntemplates: {\nweek_scale_date: function (date, mode, schedulerInstance, jumptoAttr) {\nreturn \"<a href='#' \" + jumptoAttr + \">\" + schedulerInstance.date.date_to_str(\"%j %D\")(date) + \"</a>\";\n},\nevent_class: function (start, end, ev) {\nvar c;\nif (ev.timeline_section === BLACKOUT_SECTION)\nc = \"cab_blackout_event cab_window_event\";\nelse if (ev.timeline_section === MAINT_SECTION)\nc = \"cab_maint_event cab_window_event\";\nelse if (ev.timeline_section === CURR_CHANGE_SECTION)\nc = \"cab_current_change_event cab_change_event\";\nelse\nc = \"cab_related_change_event cab_change_event\";\nc += \" cab_event\";\nif (viewStartDate && ev.start_date.getTime() < viewStartDate.getTime()) {\nc += \" cab_event_extends_left\";\n}\nif (viewEndDate && ev.end_date.getTime() > viewEndDate.getTime()) {\nc += \" cab_event_extends_right\";\n}\nif (ev.is_multievent)\nc += \" cab_multievent\";\nif (ev.change) {\nif (!ev.hasOwnProperty('change')) {\nc += \" cab_event_extends_right\";\nif (!ev._first_chunk)\nc += \" cab_event_extends_left\";\nObject.getPrototypeOf(ev)._hasDummyCopy = true;\n} else {\nif (ev._hasDummyCopy)\nc += \" cab_event_extends_left\";\nev._hasDummyCopy = false;\n}\n}\nreturn c;\n},\nmonth_date_class: function (date) {\nvar key = getPhantomKey(date);\nvar ev = $scope.phantomEvents[key];\nif (ev) {\nvar c;\nif (ev.type === BLACKOUT_TYPE)\nc = \"cab_blackout_event cab_window_event\";\nelse if (ev.type === MAINT_TYPE)\nc = \"cab_maint_event cab_window_event\";\nelse if (ev.type === BOTH_TYPE)\nc = \"cab_blackout_event cab_maint_event cab_window_event\";\nc += \" cab_event\";\nreturn c;\n}\nreturn '';\n},\nmonth_day: function (date, schedulerInstance, jumptoAttr) {\nvar dateToStr_func = schedulerInstance.date.date_to_str(schedulerInstance.config.month_day);\nvar d = dateToStr_func(date);\nvar key = getPhantomKey(date);\nvar ev = $scope.phantomEvents[key];\nif (ev)\nreturn \"<a class='event_details month_date' event_id='\" + ev.id + \"' \" + jumptoAttr + \" href='#'>\"  + d + \"</a>\";\nelse\nreturn \"<a class='month_date' \" + jumptoAttr + \" href='#'>\" + d + \"</a>\";\n},\nevent_bar_date: function (start, end, ev) {\nreturn '';\n},\ntooltip_text: function (start, end, ev) {\nvar t = dataUtil.dateRangeToFriendlyText(start, end);\nif (ev.schedule) {\nif (ev.timeline_section === BLACKOUT_SECTION)\nt += \"<p>\" + LBL_BLACKOUT_SCHEDULE + \"</p>\";\nelse\nt += \"<p>\" + LBL_MAINTENANCE_SCHEDULE + \"</p>\";\n} else if (ev.is_multievent) {\nif (ev.timeline_section === BLACKOUT_SECTION)\nt += \"<p>\" + LBL_MULTIPLE_BLACKOUT_SCHEDULES + \"</p>\";\nelse\nt += \"<p>\" + LBL_MULTIPLE_MAINTENANCE_SCHEDULES + \"</p>\";\n} else if (ev.change)\nt += \"<p>\" + ev.change.short_description.display_value + \"</p>\";\nreturn t;\n}\n},\nmode: CalendarView.DAY,\nreadOnly: false\n};\nfunction isReady() {\nif (el.height() === 0) {\n$timeout(isReady, 300);\nreturn;\n}\n$scope.ready = true;\n}\nisReady();\nvar loadingCallsCounter = 0;\n$scope.enableLoading = function () {\n$scope.isLoading = true;\nloadingCallsCounter++;\n};\n$scope.disableLoading = function () {\nif (loadingCallsCounter === 0)\nreturn;\nloadingCallsCounter--;\nif (loadingCallsCounter === 0)\n$scope.isLoading = false;\n};\nsetVerticalUnits(i18n.getMessage('No change selected'));\n$scope.viewMode = $scope.config.mode;\n$scope.onViewChange = function (newView) {\nvar oldView = $scope.viewMode;\n$scope.viewMode = newView;\n$scope.closeEditableChangePopups();\nif (newView === CalendarView.DAY || newView === CalendarView.WEEK) {\n$scope.config.timeline.enabled = true;\nif (oldView === CalendarView.MONTH)\nbuildEventArr();\nfetchRelatedChanges();\n} else if (newView === CalendarView.MONTH) {\n$scope.config.timeline.enabled = false;\nbuildEventArr();\n}\n};\n$scope.onAfterViewChange = function () {\nif ($scope.viewMode === CalendarView.DAY || $scope.viewMode === CalendarView.WEEK)\ncompileTimelineLabels();\nrefreshEventsText();\naddPopoversToEventsIfNeeded();\n};\nvar viewStartDate;\nvar viewEndDate;\n$scope.onDateRangeChange = function (start, end) {\nviewStartDate = start;\nviewEndDate = end;\n$scope.closeEditableChangePopups();\nif ($scope.viewMode !== CalendarView.MONTH)\nbuildEventArrIfNotAlreadyBuilt();\nbuildMarkedSpans();\naddPopoversToEventsIfNeeded();\n};\n$scope.onFolderToggle = function (isOpen) {\ncompileTimelineLabels();\naddPopoversToEventsIfNeeded();\nisRelatedSectionOpen = isOpen;\n};\n$scope.onBeforeTooltip = function (ev) {\nreturn false;\n};\n$scope.onBeforeDrag = function (ev) {\nif (ev.change)\nreturn $scope.viewMode === CalendarView.DAY && ev.timeline_section === CURR_CHANGE_SECTION;\nelse\nreturn false;\n};\nvar isLastDragCancelled;\n$scope.onBeforeEventChanged = function (ev, originalEv) {\nisLastDragCancelled = true;\nif (ev.timeline_section !== originalEv.timeline_section)\nreturn false;\nvar ctrl = getCommonCalCtrl();\nif (ctrl) {\nvar extraGapInMs = 10 / ctrl.getEstimatedPxPerMs();\nif (ev.end_date.getTime() < (viewStartDate.getTime() + extraGapInMs))\nreturn false;\nif (ev.start_date.getTime() > (viewEndDate.getTime() - extraGapInMs))\nreturn false;\n}\nisLastDragCancelled = false;\nreturn true;\n};\n$scope.onDragEnd = function (ev) {\nvar showPopup = !isLastDragCancelled;\ncompileTimelineLabels();\naddPopoversToEventsIfNeeded().then(function () {\nif (showPopup) {\nvar scope = getFirstScope(ev);\nif (scope) {\nscope.unsavedDates = {\nstart: ev.start_date,\nend: ev.end_date\n};\nscope.isPopupOpen = true;\n}\n}\n});\n};\n$scope.$watch('events', function () {\nbuildMarkedSpans();\ncompileTimelineLabels();\naddPopoversToEventsIfNeeded();\n});\nvar editableChangePopupClosers = {};\n$scope.closeEditableChangePopups = function (exceptWithScopeKey) {\nfor (var k in editableChangePopupClosers) {\nif (k === exceptWithScopeKey)\ncontinue;\nif (editableChangePopupClosers[k])\neditableChangePopupClosers[k]();\n}\n};\nvar currentChangeEvent;\nvar currentChangeLabel;\n$scope.enableLoading();\n$scope.$watch('change', function (currentChange) {\nif (currentChange) {\ncurrentChange = angular.extend({}, currentChange);\ncurrentChangeEvent = changeToEvent(currentChange, CURR_CHANGE_SECTION);\ncurrentChangeLabel = getChangeLabel(currentChange);\n$scope.disableLoading();\nsetVerticalUnits(currentChangeLabel, true, true);\nif (currentChange.start_date)\n$scope.config.date = new Date(currentChange.start_date.getTime());\n$scope.events = [currentChangeEvent];\n$scope.fetchEvents(startDate, endDate);\n} else {\nsetVerticalUnits(i18n.getMessage('No change selected'));\n$scope.events = [];\n}\n$scope.ready = false;\nisReady();\n});\nfunction mergeOverlappingWindowEvents(events) {\nvar rangeBuckets = [];\nfor (var i = 0; i < events.length; i++) {\nvar e = events[i];\nvar eligibleBuckets = [];\nfor (var j = 0; j < rangeBuckets.length; j++) {\nvar b = rangeBuckets[j];\nif (calendarUtils.testRangesIntersect(e.start_date, e.end_date, b.start, b.end))\neligibleBuckets.push(j);\n}\nvar targetB = {\nevents: [e],\nstart: e.start_date,\nend: e.end_date\n};\nrangeBuckets.push(targetB);\nfor (j = eligibleBuckets.length - 1; j >= 0; j--) {\nvar currB = rangeBuckets[eligibleBuckets[j]];\nif (targetB.start.getTime() > currB.start.getTime())\ntargetB.start = currB.start;\nif (targetB.end.getTime() < currB.end.getTime())\ntargetB.end = currB.end;\ntargetB.events = dataUtil.mergeSortedArrays(targetB.events, currB.events, function (e1, e2) {\nreturn e1.start_date.getTime() - e2.start_date.getTime();\n});\nrangeBuckets.splice(eligibleBuckets[j], 1);\n}\n}\nreturn rangeBuckets.map(function (b) {\nif (b.events.length > 1) {\nvar leaderEvent = b.events[0];\nvar id = b.events.map(function (e) { return e.id }).join(',');\nreturn {\nid: id,\nstart_date: b.start,\nend_date: b.end,\ntext: getWindowEventText(id, b.events, b.start, b.end, leaderEvent.timeline_section),\nis_multievent: true,\nevents: b.events,\ntimeline_section: leaderEvent.timeline_section\n};\n} else {\nreturn b.events[0];\n}\n});\n}\nfunction buildPhantomEventMap() {\n$scope.phantomEvents = {};\nvar events = [];\nif ($scope.blackoutSchedules && $scope.blackoutSchedules.length)\nevents = events.concat($scope.blackoutSchedules);\nif ($scope.maintenanceSchedules && $scope.maintenanceSchedules.length)\nevents = events.concat($scope.maintenanceSchedules);\nevents.forEach(function (e) {\ncalendarUtils.getAllDaysInDateRange(e.start_date, e.end_date).forEach(function (d) {\nvar key = getPhantomKey(d);\nvar pe = $scope.phantomEvents[key];\nif (!pe) {\npe = {\nid: uid(),\ndate: new Date(d.getFullYear(), d.getMonth(), d.getDate()),\nis_phantom: true,\ntype: undefined,\nevents: []\n};\n$scope.phantomEvents[key] = pe;\n}\nif (e.timeline_section === BLACKOUT_SECTION) {\nif (!pe.type)\npe.type = BLACKOUT_TYPE;\nelse if (pe.type === MAINT_TYPE)\npe.type = BOTH_TYPE;\n} else if (e.timeline_section === MAINT_SECTION) {\nif (!pe.type)\npe.type = MAINT_TYPE;\nelse if (pe.type === BLACKOUT_TYPE)\npe.type = BOTH_TYPE;\n} else\nthrow 'Programming error! Only schedule type events are expected here.';\npe.events.push(e);\n});\n});\n}\nfunction getCurrentEventBuildMarker() {\nif (viewStartDate)\nreturn viewStartDate.getTime() + $scope.viewMode;\nreturn undefined;\n}\nfunction buildEventArrIfNotAlreadyBuilt() {\nif (eventBuildMarker === getCurrentEventBuildMarker())\nreturn;\nbuildEventArr();\n}\nvar eventBuildMarker;\nfunction buildEventArr() {\nif (currentChangeEvent) {\n$scope.events = [currentChangeEvent];\nif ($scope.viewMode !== CalendarView.MONTH) {\n$scope.relatedChangeLabels = [];\nvar evs;\nif ($scope.blackoutSchedules && $scope.blackoutSchedules.length) {\nevs = $scope.blackoutSchedules;\nevs = mergeOverlappingWindowEvents(evs);\n$scope.events = $scope.events.concat(evs);\n}\nif ($scope.maintenanceSchedules && $scope.maintenanceSchedules.length) {\nevs = $scope.maintenanceSchedules;\nevs = mergeOverlappingWindowEvents(evs);\n$scope.events = $scope.events.concat(evs);\n}\nif ($scope.relatedChanges && $scope.relatedChanges.length) {\nevs = $scope.relatedChanges.filter(function (e) {\nif (!viewStartDate)\nreturn false;\nif (e.end_date.getTime() > viewStartDate.getTime() && e.start_date.getTime() < viewEndDate.getTime()) {\n$scope.relatedChangeLabels.push({\nkey: e.timeline_section,\nlabel: getChangeLabel(e.change)\n});\nreturn true;\n}\nreturn false;\n});\nsetVerticalUnits(currentChangeLabel, true, true, evs.length > 0);\n$scope.events = $scope.events.concat(evs);\n} else {\nsetVerticalUnits(currentChangeLabel, true, true, false);\n}\n} else {\nbuildPhantomEventMap();\n}\n} else {\n$scope.blackoutSchedules = [];\n$scope.maintenanceSchedules = [];\n$scope.relatedChanges = [];\n$scope.relatedChangeLabels = [];\nsetVerticalUnits(currentChangeLabel, true, true, false);\n$scope.events = [];\n}\neventBuildMarker = getCurrentEventBuildMarker();\n}\nfunction buildMarkedSpans() {\nif (currentChangeEvent) {\nvar c = 'current_change_span_mark';\nif (viewStartDate && currentChangeEvent.start_date.getTime() < viewStartDate.getTime())\nc += ' left_extends_beyond';\nif (viewEndDate && currentChangeEvent.end_date.getTime() > viewEndDate.getTime())\nc += ' right_extends_beyond';\n$scope.markedSpans = [{\nstart_date: currentChangeEvent.start_date,\nend_date: currentChangeEvent.end_date,\ntype: 'current_change_marker',\ncss: c\n}];\nreturn;\n}\n$scope.markedSpans = [];\n}\nvar startDate;\nvar endDate;\n$scope.fetchEvents = function (start, end) {\nstartDate = start;\nendDate = end;\nfetchWindows();\nif ($scope.viewMode !== CalendarView.MONTH)\nfetchRelatedChanges();\n};\nvar windowFetchPromise;\nfunction fetchWindows() {\nif (windowFetchPromise) {\nwindowFetchPromise.cancel();\n$scope.disableLoading();\n}\nif (!currentChangeEvent) {\nreturn;\n}\nif (!startDate) {\nreturn;\n}\nvar start = calendarUtils.getStartOfPreviousDay(startDate);\nvar end = calendarUtils.getStartOfNextDay(endDate);\n$scope.enableLoading();\nwindowFetchPromise = cancellablePromise(vcabDataSource.change.getRelatedWindows(currentChangeEvent.id, start, end));\nwindowFetchPromise.then(function (data) {\n$scope.blackoutSchedules = [];\n$scope.maintenanceSchedules = [];\ndata.maintenance.forEach(function (m) {\n$scope.maintenanceSchedules = $scope.maintenanceSchedules.concat(scheduleToEvents(m, MAINT_SECTION));\n});\ndata.blackout.forEach(function (b) {\n$scope.blackoutSchedules = $scope.blackoutSchedules.concat(scheduleToEvents(b, BLACKOUT_SECTION));\n});\nif (data.warn_invalid_conflict_checker)\n$scope.onWarn({\n$msg: i18n.getMessage('The ChangeCheckConflicts script include has been modifed and does not contain the required API. Cannot collect maintenance and blackout schedules. Please contact system administrator.')\n});\nbuildEventArr();\n$scope.disableLoading();\n}, function () {\n$scope.blackoutSchedules = [];\n$scope.maintenanceSchedules = [];\nbuildEventArr();\n$scope.disableLoading();\n});\n}\nvar relatedChangeFetchPromise;\nfunction fetchRelatedChanges() {\nif (relatedChangeFetchPromise) {\nrelatedChangeFetchPromise.cancel();\n$scope.disableLoading();\n}\nif (!currentChangeEvent) {\nreturn;\n}\nif (!startDate) {\nreturn;\n}\nif ($scope.filters.config.assignee || $scope.filters.config.group || $scope.filters.config.ci) {\n$scope.enableLoading();\nrelatedChangeFetchPromise = cancellablePromise(vcabDataSource.change.getRelatedChanges($scope.change.sys_id.value,\nstartDate, endDate, $scope.filters.config.assignee, $scope.filters.config.group, $scope.filters.config.ci));\nrelatedChangeFetchPromise.then(function (changes) {\nvar sectionId = RELATED_CHANGE_SECTION;\n$scope.relatedChanges = changes.map(function (change) {\nsectionId += 10;\nreturn changeToEvent(change, sectionId);\n});\nbuildEventArr();\n$scope.disableLoading();\n}, function () {\n$scope.relatedChanges = [];\nbuildEventArr();\n$scope.disableLoading();\n});\n} else {\n$scope.relatedChanges = [];\nbuildEventArr();\n}\n}\nfunction setAllAndNone(c) {\nvar score = 0;\nvar total = 0;\nfor (var k in  c) {\nif (k === ALL_FILTER || k === NONE_FILTER)\ncontinue;\ntotal++;\nif (c[k])\nscore++;\n}\nif (total === 0)\nreturn;\nc.all = false;\nc.none = false;\nif (score === total)\nc.all = true;\nif (score === 0)\nc.none = true;\n}\nif (!$scope.configOptions)\n$scope.configOptions = {};\nif (!$scope.dayViewOptions)\n$scope.dayViewOptions = {};\nif (!$scope.weekViewOptions)\n$scope.weekViewOptions = {};\n$scope.filters = {\nconfig: $scope.configOptions,\ndayView: $scope.dayViewOptions,\nweekView: $scope.weekViewOptions,\ntabSelection: $scope.SETTINGS_TAB\n};\nif ($scope.autoSaveAndFetchOptionsAsUserPref === 'true') {\nvar q = $q.all(\n[userPreferences.getPreference('cab_workbench.day_view_options'),\nuserPreferences.getPreference('cab_workbench.week_view_options'),\nuserPreferences.getPreference('cab_workbench.config_options')]\n);\nq.then(function (r) {\n$scope.dayViewOptions = {\ndateTime: true,\nnumber: true,\nshortDescription: true,\nassignee: true,\ngroup: true\n};\n$scope.filters.dayView = angular.extend($scope.dayViewOptions, deserializeObj(r[0]));\n$scope.weekViewOptions = {\ndateTime: true,\nnumber: true,\nshortDescription: true\n};\n$scope.filters.weekView = angular.extend($scope.weekViewOptions, deserializeObj(r[1]));\n$scope.configOptions = {\nassignee: false,\ngroup: false,\nci: true\n};\n$scope.filters.config = angular.extend($scope.configOptions, deserializeObj(r[2]));\n});\n} else {\n$scope.filters.config.ci = true;\n$scope.filters.dayView.all = true;\n$scope.filters.weekView.all = true;\n}\n$scope.$watch('filters.config.all', function (all) {\nif (all) {\n$scope.filters.config.none = false;\n$scope.filters.config.assignee = true;\n$scope.filters.config.group = true;\n$scope.filters.config.ci = true;\n}\n});\n$scope.$watch('filters.config.none', function (none) {\nif (none) {\n$scope.filters.config.all = false;\n$scope.filters.config.assignee = false;\n$scope.filters.config.group = false;\n$scope.filters.config.ci = false;\n}\n});\n$scope.$watchGroup(['filters.config.assignee', 'filters.config.group', 'filters.config.ci'], function () {\nsetAllAndNone($scope.filters.config);\nfetchRelatedChanges();\n});\n$scope.saveConfigOptions = function () {\nif ($scope.autoSaveAndFetchOptionsAsUserPref === 'true') {\n$timeout(function () {\nvar s = serializeObj($scope.configOptions);\nif (s)\nuserPreferences.setPreference('cab_workbench.config_options', s);\n});\n}\n};\n$scope.$watch('filters.dayView.all', function (all) {\nif (all) {\n$scope.filters.dayView.none = false;\n$scope.filters.dayView.dateTime = true;\n$scope.filters.dayView.number = true;\n$scope.filters.dayView.shortDescription = true;\n$scope.filters.dayView.assignee = true;\n$scope.filters.dayView.group = true;\n}\n});\n$scope.$watch('filters.dayView.none', function (none) {\nif (none) {\n$scope.filters.dayView.all = false;\n$scope.filters.dayView.dateTime = false;\n$scope.filters.dayView.number = false;\n$scope.filters.dayView.shortDescription = false;\n$scope.filters.dayView.assignee = false;\n$scope.filters.dayView.group = false;\n}\n});\n$scope.$watchGroup(['filters.dayView.dateTime',\n'filters.dayView.number',\n'filters.dayView.shortDescription',\n'filters.dayView.assignee',\n'filters.dayView.group'], function () {\nsetAllAndNone($scope.filters.dayView);\nrefreshEventsText(true);\n});\n$scope.saveDayViewOptions = function () {\nif ($scope.autoSaveAndFetchOptionsAsUserPref === 'true') {\n$timeout(function () {\nvar s = serializeObj($scope.dayViewOptions);\nif (s)\nuserPreferences.setPreference('cab_workbench.day_view_options', s);\n});\n}\n};\n$scope.$watch('filters.weekView.all', function (all) {\nif (all) {\n$scope.filters.weekView.none = false;\n$scope.filters.weekView.dateTime = true;\n$scope.filters.weekView.number = true;\n$scope.filters.weekView.shortDescription = true;\n}\n});\n$scope.$watch('filters.weekView.none', function (none) {\nif (none) {\n$scope.filters.weekView.all = false;\n$scope.filters.weekView.dateTime = false;\n$scope.filters.weekView.number = false;\n$scope.filters.weekView.shortDescription = false;\n}\n});\n$scope.$watchGroup(['filters.weekView.dateTime',\n'filters.weekView.number',\n'filters.weekView.shortDescription'], function () {\nsetAllAndNone($scope.filters.weekView);\nrefreshEventsText(true);\n});\n$scope.saveWeekViewOptions = function () {\nif ($scope.autoSaveAndFetchOptionsAsUserPref === 'true') {\n$timeout(function () {\nvar s = serializeObj($scope.weekViewOptions);\nif (s)\nuserPreferences.setPreference('cab_workbench.week_view_options', s);\n});\n}\n};\n$scope.$on('$destroy', function () {\n$scope.events = [];\ngarbageCollectOldEventScopes();\n});\n}\n};\n});\n} (jQuery));\n;\n;","sys_class_name":"sys_ui_script","sys_id":"522554c4c31a9d10be13544c1840ddba","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/3b83a3f304312210559073c06a02f788","value":"3b83a3f304312210559073c06a02f788"},"ui_type":"0","sys_update_name":"sys_ui_script_522554c4c31a9d10be13544c1840ddba","sys_updated_by":"admin","sys_created_on":"2022-09-27 13:48:13","name":"sn.itsm.vcab.calendar.js","sys_name":"sn.itsm.vcab.calendar.js","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"3","active":"true","description":"Supports the ui_select_list ui_macro","use_scoped_format":"false","global":"false","sys_updated_on":"2025-06-05 05:18:18","sys_tags":"","script_name":"","script":"/**\r\n * The SelectList manages a multiline select box \r\n */\r\n\r\nvar SelectList = Class.create();\r\n\r\n// companion script to ui_select_list macro\r\nSelectList.prototype = {\r\n\tinitialize: function(id, sortFlag) {\r\n\t\tthis.id = id;\r\n\t\tthis.sortFlag = sortFlag;\r\n\t\tthis.userDblClick = null;\r\n\t},\r\n\r\n    getSort: function() {\r\n        return this.sortFlag;\r\n    },\r\n\r\n    setSort: function(sortFlag) {\r\n        this.sortFlag = sortFlag;\r\n    },\r\n\r\n    setDblClick: function(func) {\r\n        this.userDblClick = func;\r\n    },\r\n    \r\n\taddChoice: function(value, text) {\r\n\t   var opt = cel(\"option\");\r\n\t   opt.value = value;\r\n\t   opt.text = text;\r\n\t   this.getSelect().options.add(opt);\r\n    },\r\n    \r\n    // clear select box\r\n    clear: function() {\r\n    \tthis.getSelect().options.length = 0;\r\n    },\r\n    \r\n    // return an array of all the values in the select box\r\n    getValues: function() {\r\n\t\tvar values = new Array();\r\n\t    var options = this.getSelect().options;\r\n\t    for (var i = 0; i < options.length; i++) {\r\n\t    \tvalues[i] = options[i].value;\r\n\t    }\r\n\t\treturn values;    \t\r\n    },\r\n    \r\n    // get the text and value for a specific option\r\n    getTextAndValue: function(ndx) {\r\n        var options = this.getSelect().options;\r\n        if (ndx < options.length) {\r\n            return {'text' : options[ndx].text, 'value' : options[ndx].value};\r\n        } else {\r\n            return null;\r\n        }\r\n    },\r\n    \r\n    // get a specific option \r\n    getOption: function(ndx) {\r\n        var options = this.getSelect().options;\r\n        if (ndx < options.length) {\r\n            return options[ndx];\r\n        } else {\r\n            return null;\r\n        }\r\n    },\r\n    \r\n    // return an array of selected option ids\r\n    getSelectedIds: function() {\r\n        // find which ones are selected...\r\n        var selectedIds = new Array();\r\n        var index = 0;\r\n        var options = this.getSelect().options;\r\n        for (var i = 0; i < options.length; i++) {\r\n            option = options[i];\r\n            if (option.selected) {\r\n                // canSelect from select list, no functionality\r\n                var canSelect = true;\r\n                \r\n                // if this option can be moved we add it to our array of elements selected elements\r\n                if (canSelect) {\r\n                    selectedIds[index] = i;\r\n                    index++;\r\n                } else {\r\n                    // if we can't move this option, then unselect it\r\n                    option.selected = false;\r\n                }\r\n            }\r\n        }   \r\n        return selectedIds; \t\r\n    },\r\n\r\n    getSelect: function() {\r\n    \treturn gel(this.id);\r\n    },    \r\n    \r\n\t// remove selected values from the select list, starting with the last one selected\r\n\tremoveSelected: function() {\r\n\t    var selectBox = this.getSelect();\r\n\t    var selectedIds = this.getSelectedIds();\r\n\t    for (var i = selectedIds.length - 1; i > -1; i--) {\r\n            selectBox.remove(selectedIds[i]);\r\n\t    }\r\n\r\n\t    // notify the Select Element that its contents have changed\r\n\t    if (selectBox[\"onchange\"]) {\r\n\t\t    selectBox.onchange();\r\n\t    }\r\n\t   \r\n        // Workaround here for a bug in IE:\r\n        // If you have a select element with many values, and you've scrolled to\r\n        // the bottom and move an option from the top-most element you can now see,\r\n        // IE would not refresh the select element, leaving a hole in the list.\r\n        // By forcing the select element disabled and back, it seems to refresh the\r\n        // element properly.\r\n        selectBox.disabled = true;\r\n        selectBox.disabled = false;\r\n\t},\r\n\t\r\n    // move items in a select box upward\r\n    moveUp: function() {\r\n      \tselectBox = this.getSelect();\r\n   \t\tvar options = selectBox.options;\r\n    \r\n\t\t// find which ones are selected...\r\n\t\tvar selectedIds = this.getSelectedIds();\r\n\r\n\t\t// move each selected option up\r\n\t\tvar selId;\r\n\t\tfor (var i = 0; i < selectedIds.length; i++) {\r\n\t\t\tselId = selectedIds[i];\r\n\t\t\tprivateMoveUp(options, selId);\r\n\t\t\toptions[selId].selected = false;\r\n\t\t\toptions[selId - 1].selected = true;\r\n\t\t}\r\n\r\n\t\tselectBox.focus();\r\n\r\n\t\t// invoke if the Slect Element has local function\r\n\t\tif (selectBox[\"onLocalMoveUp\"]) {\r\n\t\t\tselectBox.onLocalMoveUp();\r\n    \t}\r\n    },\r\n    \r\n    // move items in a select box downward\r\n    moveDown: function() {\r\n      \tselectBox = this.getSelect();\r\n   \t\tvar options = selectBox.options;\r\n    \r\n\t\t// find which ones are selected...\r\n\t\tvar selectedIds = this.getSelectedIds();\r\n    \r\n\t\t// move each selected element down\r\n\t\tvar selId;\r\n\t\tfor (var i = 0; i < selectedIds.length; i++) {\r\n\t\t\tselId = selectedIds[i];\r\n\t\t\tprivateMoveDown(options, selId);\r\n\t\t\toptions[selId].selected = false;\r\n\t\t\toptions[selId + 1].selected = true;\r\n\t\t}\r\n    \r\n   \t\tselectBox.focus();\r\n    \r\n\t\t// invoke if the Slect Element has local function\r\n\t\tif (selectBox[\"onLocalMoveDown\"]) {\r\n\t\t\tselectBox.onLocalMoveDown();\r\n    \t}\r\n    },\r\n\r\n    dblClick: function(e) {\r\n        // Call any user specified dbl click handler\r\n        if (this.userDblClick) {\r\n            this.userDblClick();\r\n        }\r\n    },\r\n    \r\n\tgetClassName : function() {\r\n\t\treturn \"SelectList\";\r\n\t}\r\n}","sys_class_name":"sys_ui_script","sys_id":"5355f9080a0a0a9e019a9c6371ae03fa","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/72532b7304312210559073c06a02f7c6","value":"72532b7304312210559073c06a02f7c6"},"ui_type":"0","sys_update_name":"sys_ui_script_5355f9080a0a0a9e019a9c6371ae03fa","sys_updated_by":"system","sys_created_on":"2007-05-03 19:06:22","name":"SelectList","sys_name":"SelectList","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"glide.maint","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"0","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2018-03-01 16:38:09","sys_tags":"","script_name":"mousedown","script":"angular.module(\"sn.chg_soc.mousedown\", [])\n\t.directive(\"socMouseDown\", [\"$document\", \"$parse\", \"$interval\", function($document, $parse, $interval) {\n\t\treturn {\n\t\t\trestrict: 'A',\n\t\t\tlink: function ($scope, $element, $attrs, $controller) {\n\t\t\t\tvar intervalPromise = null;\n\t\t\t\tvar touchEnabled = isTouchEnabled();\n\t\t\t\tvar action = $parse($attrs.socMouseDown);\n\t\t\t\tvar freq = parseInt($attrs.socMouseDownFreq, 10);\n\t\t\t\tfreq = isNaN(freq) ? 15 : freq;\n\n\t\t\t\tfunction onStart(event) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tperformAction();\n\t\t\t\t\tintervalPromise = $interval(performAction, freq);\n\t\t\t\t\tbindEndProcess();\n\t\t\t\t}\n\n\t\t\t\tfunction onEnd(event) {\n\t\t\t\t\t$interval.cancel(intervalPromise);\n\t\t\t\t\tif (touchEnabled)\n\t\t\t\t\t\t$element.off('touchend', onEnd);\n\t\t\t\t\telse {\n\t\t\t\t\t\t$element.off('mouseup', onEnd);\n\t\t\t\t\t\t$element.off('mouseleave', onEnd);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfunction bindStartProcess() {\n\t\t\t\t\tif (touchEnabled)\n\t\t\t\t\t\t$element.on(\"touchstart\", onStart);\n\t\t\t\t\telse\n\t\t\t\t\t\t$element.on(\"mousedown\", onStart);\n\t\t\t\t}\n\n\t\t\t\tfunction bindEndProcess() {\n\t\t\t\t\tif (touchEnabled)\n\t\t\t\t\t\t$element.on('touchend', onEnd);\n\t\t\t\t\telse {\n\t\t\t\t\t\t$element.on('mouseup', onEnd);\n\t\t\t\t\t\t$element.on('mouseleave', onEnd);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfunction performAction() {\n\t\t\t\t\taction($scope);\n\t\t\t\t}\n\n\t\t\t\tfunction isTouchEnabled() {\n\t\t\t\t\treturn typeof $document[0].body.ontouchstart !== \"undefined\" &&\n\t\t\t\t\t\ttypeof $document[0].body.ontouchend !== \"undefined\";\n\t\t\t\t}\n\n\t\t\t\tbindStartProcess();\n\t\t\t}\n\t\t};\n\t}]);","sys_class_name":"sys_ui_script","sys_id":"53c0878ac3641300b6dcdfdc64d3ae32","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"ui_type":"","sys_update_name":"sys_ui_script_53c0878ac3641300b6dcdfdc64d3ae32","sys_updated_by":"admin","sys_created_on":"2018-03-01 14:18:33","name":"sn_chg_soc.mousedown","sys_name":"sn_chg_soc.mousedown","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"184","active":"true","description":"Problem Modal Helpers","use_scoped_format":"false","global":"false","sys_updated_on":"2024-03-11 07:23:50","sys_tags":"","script_name":"","script":"function ProblemModalUIHelpers() {\n\n\tvar initialFrameHeight = -1;\n\tvar initialFrameWidth = -1;\n\tvar modalName;\n\n\tfunction setModalWidthAndHeight(width, height) {\n\n\t\twidth = width || initialFrameWidth;\n\t\theight = height || initialFrameHeight;\n\t\tif (height == -1)\n\t\t\theight = 100;\n\t\tjQuery('#' + modalName + ' .modal-body').css({\n\t\t\tminHeight: height\n\t\t});\n\t}\n\tCustomEvent.un('content_frame.resized', ProblemModalUIHelpers.onIFrameEventListener);\n\tCustomEvent.un('frame.resized', ProblemModalUIHelpers.onIFrameEventListener);\n\t\n\tvar adjustedHeight = 0; // Caching value that was last adjusted to avoid recurrent updates - DEF0191449\n\tProblemModalUIHelpers.onIFrameEventListener = function(name, frameHeight) {\n\t\tif (name !== \"glide_modal_iframe\")\n\t\t\treturn;\n\t\tif (!frameHeight)\n\t\t\treturn;\n\t\t// If the next trigger is a result of previous adjustment simply return. \n\t\tif (Math.abs(frameHeight - adjustedHeight) <= 5)\n\t\t\treturn;\n\t\t\n\t\tif (initialFrameHeight == -1)\n\t\t\tinitialFrameHeight = frameHeight;\n\t\t\n\t\tadjustedHeight = frameHeight + 5; // Add 5px to give sufficient height for scroll to disappear when style is 'auto'\n\t\tsetModalWidthAndHeight(initialFrameWidth, adjustedHeight);\n\t};\n\n\tfunction registerIframeEvents() {\n\t\tCustomEvent.on('content_frame.resized', ProblemModalUIHelpers.onIFrameEventListener);\n\t\tCustomEvent.on('frame.resized', ProblemModalUIHelpers.onIFrameEventListener);\n\t}\n\n\tthis.getFieldsToUpdate = function(gForm, table) {\n\t\tvar fieldsToUpdate = {}, field = '', fieldName = '';\n\t\tvar allFieldsModified = decodeURIComponent(gForm.serializeChangedAll());\n\t\tvar fieldsModified = allFieldsModified.split('&').filter(\n\t\t\tfunction(modifiedField) { \n\t\t\t\treturn modifiedField.indexOf(table) === 0;\n\t\t\t});\n\n\t\tfor (var i = 0; i < fieldsModified.length; i++) {\n\t\t\tfield = fieldsModified[i]; // Ex: problem.subcategory=os\n\t\t\tif (field != '' && field.indexOf('=') > 0) {\n\t\t\t\tfieldName = field.split('=')[0];\n\t\t\t\tif (table == \"problem\")\n\t\t\t\t\tfieldName = fieldName.substring(8);\n\t\t\t\tif (table == \"problem_task\")\n\t\t\t\t\tfieldName = fieldName.substring(13);\n\n\t\t\t\tfieldsToUpdate[fieldName] = gForm.getValue(fieldName);\n\t\t\t}\n\t\t}\n\t\treturn fieldsToUpdate;\n\t};\n\n\t//dataActionName is the UIActionName from which the openModal is triggered and is used to refocus back on the action on closure of the modal\n\tthis.openModal = function(viewName, title, width, formValues, dataActionName) {\n\t\tvar tableName = g_form.getTableName();\n\n\t\t//get modified fields from parent g_form\n\t\tvar fieldsFromParent = this.getFieldsToUpdate(g_form, tableName);\n\n\t\tvar url = tableName + \".do?sys_id=\" + g_form.getUniqueValue();\n\t\turl += \"&sysparm_stack=no&sysparm_view=\" + viewName + \"&sysparm_titleless=true&sysparm_form_only=true&sysparm_view_forced=true\";\n\n\t\tmodalName = viewName;\n\t\tinitialFrameWidth = width || 850;\n\t\tvar modal = new GlideModal(viewName, false, \"modal-lg\", 350);\n\t\tmodal.setTitle(title);\n\t\tmodal.setBackdropStatic(true);\n\t\tmodal.setPreference('focusTrap', true);\n\t\tvar thisForm = g_form;\n\t\tvar modalBody;\n\t\tregisterIframeEvents();\n\t\tScriptLoader.getScripts('/scripts/incident/glide_modal_accessibility.js', function() {\n\t\t\tmodal.template = glideModalTemplate;\n\t\t\tmodal.on('bodyrendered', function(event) {\n\t\t\t\tglideModalKeyDownHandler(event, modal.getID());\n\t\t\t});\n\t\t\t\n\t\t\tmodal.on('closeconfirm', function() {\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tvar triggeredElement = document.querySelectorAll('[data-action-name=\\''  + dataActionName  + '\\']')[0];\n\t\t\t\t\tif(typeof triggeredElement !== \"undefined\")\n\t\t\t\t\t\ttriggeredElement.focus();\n\t\t\t\t});\n\t\t\t});\n\t\t\t\n\t\t\tmodal.renderIframe(url, function() {\n\t\t\t\tthis.window.name = \"glide_modal_iframe\";\n\t\t\t\tsetModalWidthAndHeight(width);\n\t\t\t\tvar g_form_modal = this.window.g_form;\n\t\t\t\tthis.window[\"g_iframe_height\"] = undefined;\n\n\t\t\t\tjQuery(this.window.document.body,\n\t\t\t\t\t\".outputmsg_div #output_messages #close-messages-btn\").on('click', function(e) {\n\t\t\t\t\tif (e.target.id == 'close-messages-btn')\n\t\t\t\t\t\tsetModalWidthAndHeight();\n\t\t\t\t});\n\n\t\t\t\tjQuery(\"#\" + modalName + \" .modal-header .close\").on('click', function(e) {\n\t\t\t\t\tg_form.setValue(\"state\", g_scratchpad.originalState);\n\t\t\t\t\tif(g_form.getTableName() == \"problem\")\n\t\t\t\t\t\tg_form.setValue(\"resolution_code\", g_scratchpad.originalResolutionCode);\n\t\t\t\t\tif(g_form.getTableName() == \"problem_task\")\n\t\t\t\t\t\tg_form.setValue(\"close_code\", g_scratchpad.originalCloseCode);\n\t\t\t\t});\n\n\t\t\t\tif (g_form_modal) {\n\t\t\t\t\tfor (var prop in formValues)\n\t\t\t\t\t\tg_form_modal.setValue(prop, formValues[prop]);\n\t\t\t\t\tfor (var field in fieldsFromParent)\n\t\t\t\t\t\tg_form_modal.setValue(field, fieldsFromParent[field]);\n\n\t\t\t\t\t//Informing users that the marking of duplicate of the current problem will lead to async ( background )  movement of related records ( This message only shows up if there is a atleast one related record)\n\t\t\t\t\tif (dataActionName == 'mark_duplicate') {\n\t\t\t\t\t\tvar triggeredElement = document.querySelectorAll('[id=\"problem.state\"]')[0];\n\t\t\t\t\t\tif (typeof triggeredElement !== \"undefined\")\n\t\t\t\t\t\t\ttriggeredElement.focus();\n\t\t\t\t\t\tvar ga = new GlideAjax('ProblemUtilsClientSNC');\n\t\t\t\t\t\tga.addParam('sysparm_name', 'isDisplayBackgroundMoveMessage');\n\t\t\t\t\t\tga.addParam('sysparm_srcPrbSysId', g_form.getUniqueValue());\n\t\t\t\t\t\tga.getXMLAnswer(processMessageBackgroundMove);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfunction processMessageBackgroundMove(answer) {\n\t\t\t\t\tif (answer === 'true') {\n\t\t\t\t\t    g_form_modal.addInfoMessage(getMessage(\"Marking this problem as a duplicate will move related records to the Duplicate of problem as a background task\"));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t};\n}\n\nProblemModalUIHelpers.onAssess = function() {\n\tvar view = g_form.getViewName();\n\tif (!g_form.hasField(\"state\")) {\n\t\tgetMessage('Cannot assess the Problem as \\'State\\' is not visible', function(msg) {\n\t\t\tg_form.addErrorMessage(msg);\n\t\t});\n\t\treturn false;\n\t}\n\n\tg_form.setValue('state', g_scratchpad.STATE.ASSESS);\n\tif (g_form.mandatoryCheck()) {\n\t\tg_form.save();\n\t\treturn;\n\t}\n\n\tg_form.clearMessages();\n\tvar ob = new ProblemModalUIHelpers();\n\tvar formValues = {\n\t\tstate: g_scratchpad.STATE.ASSESS\n\t};\n\tob.openModal('assess_dialog_form_view', getMessage('Assess'), 850, formValues, \"move_to_assess\"); // The Modal has also been used in the Business Rule <Update Problem State to Assess>\n};\n\nProblemModalUIHelpers.onFix = function() {\n\tvar view = g_form.getViewName();\n\tif (!g_form.hasField(\"state\")) {\n\t\tgetMessage('Cannot proceed to fix the Problem as \\'State\\' is not visible', function(msg) {\n\t\t\tg_form.addErrorMessage(msg);\n\t\t});\n\t\treturn false;\n\t}\n\n\tg_form.setValue(\"state\", g_scratchpad.STATE.FIX_IN_PROGRESS);\n\tif (g_form.mandatoryCheck()) {\n\t\tg_form.save();\n\t\treturn;\n\t}\n\n\tg_form.clearMessages();\n\tvar sysId = g_form.getUniqueValue();\n\tvar ob = new ProblemModalUIHelpers();\n\n\tvar formValues = {\n\t\tstate: g_scratchpad.STATE.FIX_IN_PROGRESS\n\t};\n\tob.openModal('start_fix_dialog_form_view', getMessage('Fix'), 850, formValues, \"move_to_fix_in_progress\");\n};\n\nProblemModalUIHelpers.onMarkDuplicate = function() {\n\tif (!g_form.hasField(\"state\") || !g_form.hasField(\"resolution_code\")) {\n\t\tgetMessage('Cannot mark the Problem duplicate as atleast one of the following fields are not visible: \\'State\\' \\'Resolution code\\'', function(msg) {\n\t\t\tg_form.addErrorMessage(msg);\n\t\t});\n\t\treturn false;\n\t}\n\n\tg_form.setValue(\"state\", g_scratchpad.STATE.CLOSED);\n\tg_form.setValue(\"resolution_code\", g_scratchpad.RESOLUTION_CODES.DUPLICATE);\n\tif (g_form.mandatoryCheck()) {\n\t\tg_form.save();\n\t\treturn;\n\t}\n\tg_form.clearMessages();\n\tvar sysId = g_form.getUniqueValue();\n\n\tvar formValues = {\n\t\tstate: g_scratchpad.STATE.CLOSED,\n\t\tresolution_code: g_scratchpad.RESOLUTION_CODES.DUPLICATE\n\t};\n\tvar ob = new ProblemModalUIHelpers();\n\tob.openModal(\"mark_duplicate_dialog_form_view\", getMessage('Mark Duplicate'), 850, formValues, \"mark_duplicate\");\n};\n\nProblemModalUIHelpers.onAcceptingRisk = function() {\n\tif (!g_form.hasField(\"state\")) {\n\t\tgetMessage('Cannot accept risk for the Problem as atleast one of the following fields are not visible: \\'State\\' \\'Resolution code\\'', function(msg) {\n\t\t\tg_form.addErrorMessage(msg);\n\t\t});\n\t\treturn false;\n\t}\n\n\tvar sysId = g_form.getUniqueValue();\n\tvar moveToClosed = g_scratchpad.PROP_MOVE_TO_CLOSED;\n\tvar stateValue = moveToClosed == 'true' ? g_scratchpad.STATE.CLOSED : g_scratchpad.STATE.RESOLVED;\n\tg_form.setValue(\"state\", stateValue);\n\tg_form.setValue(\"resolution_code\", g_scratchpad.RESOLUTION_CODES.RISK_ACCEPTED);\n\tif (g_form.mandatoryCheck()) {\n\t\tg_form.save();\n\t\treturn;\n\t}\n\n\tg_form.clearMessages();\n\tvar formValues = {\n\t\tstate: stateValue,\n\t\tresolution_code: g_scratchpad.RESOLUTION_CODES.RISK_ACCEPTED\n\t};\n\tvar ob = new ProblemModalUIHelpers();\n\tob.openModal(\"accept_risk_dialog_form_view\", getMessage('Accept Risk'), 900, formValues, \"accept_risk\");\n};\n\nProblemModalUIHelpers.ProblemTask_MoveToAssess = function() {\n\tvar view = g_form.getViewName();\n\n\tif (!g_form.hasField('state')) {\n\t\tgetMessage('Cannot Assess the Problem task as \\'State\\' is not visible', function(msg) {\n\t\t\tg_form.addErrorMessage(msg);\n\t\t});\n\t\treturn false;\n\t}\n\n\tvar sysId = g_form.getUniqueValue();\n\tg_form.setValue('state', g_scratchpad.PRBTASK_STATES.ASSESS);\n\tif (g_form.mandatoryCheck()) {\n\t\tg_form.save();\n\t\treturn;\n\t}\n\tg_form.clearMessages();\n\tvar formValues = {\n\t\tstate: g_scratchpad.PRBTASK_STATES.ASSESS\n\t};\n\tvar ob = new ProblemModalUIHelpers();\n\tob.openModal(\"ptask_assess_dialog_view\", getMessage('Assess'), 850, formValues, \"state_to_assess\"); // The Modal has also been used in the Business Rule <Update Problem Task State to Assess>\n};\n\nProblemModalUIHelpers.ProblemTask_MoveToClosedComplete = function() {\n\tif (!g_form.hasField('state') || !g_form.hasField('close_code')) {\n\t\tgetMessage('Cannot Complete the Problem task as \\'State\\' or \\'Close code\\' is not visible', function(msg) {\n\t\t\tg_form.addErrorMessage(msg);\n\t\t});\n\t\treturn false;\n\t}\n\n\tvar sysId = g_form.getUniqueValue();\n\tg_form.setValue('state', g_scratchpad.PRBTASK_STATES.CLOSED);\n\tg_form.setValue(\"close_code\", \"completed\");\n\tif (g_form.mandatoryCheck()) {\n\t\tg_form.save();\n\t\treturn;\n\t}\n\tg_form.clearMessages();\n\tvar width = 850;\n\tvar modalName = \"ptask_complete_dialog_view_1\";\n\n\tif (g_form.getValue(\"problem_task_type\") != \"rca\") {\n\t\twidth = 900;\n\t\tmodalName = \"ptask_complete_dialog_view_2\";\n\t}\n\tvar formValues = {\n\t\tstate: g_scratchpad.PRBTASK_STATES.CLOSED,\n\t\tclose_code: 'completed'\n\t};\n\tvar ob = new ProblemModalUIHelpers();\n\tob.openModal(modalName, getMessage(\"Complete\"), width, formValues, \"state_to_closed_completed\");\n};\n\n\n\nProblemModalUIHelpers.ProblemTask_MoveToClosedCanceled = function() {\n\tif (!g_form.hasField('state') || !g_form.hasField('close_code')) {\n\t\tgetMessage('Cannot Assess the Problem task as \\'State\\' or \\'Close code\\' is not visible', function(msg) {\n\t\t\tg_form.addErrorMessage(msg);\n\t\t});\n\t\treturn false;\n\t}\n\n\tg_form.setValue('state', g_scratchpad.PRBTASK_STATES.CLOSED);\n\tg_form.setValue(\"close_code\", \"canceled\");\n\n\tvar sysId = g_form.getUniqueValue();\n\tif (g_form.mandatoryCheck()) {\n\t\tg_form.save();\n\t\treturn;\n\t}\n\tg_form.clearMessages();\n\tvar formValues = {\n\t\tstate: g_scratchpad.PRBTASK_STATES.CLOSED,\n\t\tclose_code: \"canceled\"\n\t};\n\tvar ob = new ProblemModalUIHelpers();\n\tob.openModal(\"ptask_cancel_dialog_view\", getMessage('Cancel'), 850, formValues, \"state_to_closed_canceled\");\n};\n\nProblemModalUIHelpers.onOk = function(table) {\n\tvar fieldsToUpdate = {};\n\tfieldsToUpdate[\"state\"] = g_form.getValue(\"state\");\n\tif (table == \"problem\")\n\t\tfieldsToUpdate[\"resolution_code\"] = g_form.getValue(\"resolution_code\");\n\tif (table == \"problem_task\")\n\t\tfieldsToUpdate[\"close_code\"] = g_form.getValue(\"close_code\");\n\n\t//get modified fields on the parent form\n\tvar ob = new ProblemModalUIHelpers();\n\tvar fieldsModifiedOnParent = ob.getFieldsToUpdate(parent.g_form, table);\n\tfor (var parentField in fieldsModifiedOnParent) {\n\t\tfieldsToUpdate[parentField] = fieldsModifiedOnParent[parentField];\n\t}\n\t\n\t//get modified fields on the modal form\n\tvar fieldsModifiedOnModal = ob.getFieldsToUpdate(g_form, table);\n\tfor (var modalField in fieldsModifiedOnModal) {\n\t\tfieldsToUpdate[modalField] = fieldsModifiedOnModal[modalField];\n\t}\n\n\t//making the GlideAJAX call \n\tvar ga = new GlideAjax('ProblemUtilsClientSNC');\n\tga.addParam('sysparm_name', 'submitForm');\n\tga.addParam('sysparm_record_type', table);\n\tga.addParam('sysparm_sys_id', g_form.getUniqueValue());\n\tga.addParam('sysparm_fields', JSON.stringify(fieldsToUpdate));\n\tga.getXMLAnswer(responseHandler);\n\n\tfunction responseHandler(answer) {\n\t\tif (answer == \"true\") {\n\t\t\t//setting modified flag to false to avoid browser reload confirmation dialog\n\t\t\tCustomEvent.fireAll('form.isModified', { uniqueValue: g_form.getUniqueValue(), isModified: false });\n\t\t\tparent.g_form.modified = false;\n\t\t\tg_form.modified = false;\n\t\t\tparent.window.reloadWindow(parent.window);\n\t\t}\n\t}\n};\n\nProblemModalUIHelpers.problem_Cancel = function() {\n\tif (!g_form.hasField(\"state\") || !g_form.hasField(\"resolution_code\")) {\n\t\tgetMessage('Cannot Cancel the Problem as atleast one of the following fields are not visible: \\'State\\' \\'Resolution code\\'', function(msg) {\n\t\t\tg_form.addErrorMessage(msg);\n\t\t});\n\t\treturn false;\n\t}\n\n\tvar sysId = g_form.getUniqueValue();\n\tg_form.setValue(\"state\", g_scratchpad.STATE.CLOSED);\n\tg_form.setValue(\"resolution_code\", g_scratchpad.RESOLUTION_CODES.CANCELED);\n\tif (g_form.mandatoryCheck()) {\n\t\tg_form.save();\n\t\treturn;\n\t}\n\n\tg_form.clearMessages();\n\tvar formValues = {\n\t\tstate: g_scratchpad.STATE.CLOSED,\n\t\tresolution_code: g_scratchpad.RESOLUTION_CODES.CANCELED\n\t};\n\tvar ob = new ProblemModalUIHelpers();\n\tob.openModal(\"cancel_dialog_form_view\", getMessage('Cancel'), 850, formValues, \"cancel_problem\");\n};","sys_class_name":"sys_ui_script","sys_id":"592479f30b4123005775aabcb4673a32","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/46dca7fb04352210559073c06a02f7cb","value":"46dca7fb04352210559073c06a02f7cb"},"ui_type":"0","sys_update_name":"sys_ui_script_592479f30b4123005775aabcb4673a32","sys_updated_by":"admin","sys_created_on":"2018-10-16 12:02:43","name":"ProblemModalUIHelpers","sys_name":"ProblemModalUIHelpers","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"2","active":"true","description":"Module sn.itsm.vcab.misc","use_scoped_format":"false","global":"false","sys_updated_on":"2016-10-13 15:09:30","sys_tags":"","script_name":"vmisc","script":"angular.module('sn.itsm.vcab.misc', ['sn.common', 'ui.bootstrap.modal', 'sn.itsm.vcab.common']);","sys_class_name":"sys_ui_script","sys_id":"5ba82f37d796220034d145bcce610325","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"ui_type":"","sys_update_name":"sys_ui_script_5ba82f37d796220034d145bcce610325","sys_updated_by":"admin","sys_created_on":"2016-10-13 14:47:24","name":"sn_change_cab.vmisc","sys_name":"sn_change_cab.vmisc","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"1","active":"true","description":"Module sn.change_management.cab.calendar.  Contains calendar components for the CAB Workbench.","use_scoped_format":"false","global":"false","sys_updated_on":"2016-10-12 11:14:05","sys_tags":"","script_name":"cal","script":"angular.module(\"sn.change_management.cab.calendar\", ['sn.$sp', 'sn.calendar', 'sn.app_common', 'ui.bootstrap.popover', 'sn.change_management.cab.core']);","sys_class_name":"sys_ui_script","sys_id":"5c0f9d17d752220034d145bcce6103b0","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"ui_type":"","sys_update_name":"sys_ui_script_5c0f9d17d752220034d145bcce6103b0","sys_updated_by":"admin","sys_created_on":"2016-10-11 15:29:02","name":"sn_change_cab.cal","sys_name":"sn_change_cab.cal","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"0","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2020-09-14 14:13:01","sys_tags":"","script_name":"landing_splash_screens","script":"/* Module for splash screens */\nangular.module(\"sn.chg_model_ui.landing_splash_screens\", [])\n.directive(\"snSplashScreens\", function(getTemplateUrl) {\n\t\"use strict\";\n\treturn {\n\t\treplace: true,\n\t\trestrict: \"E\",\n\t\ttemplateUrl: getTemplateUrl(\"sn_chg_model_ui_cmu_landing_splash_screens.xml\")\n\t};\n});\n","sys_class_name":"sys_ui_script","sys_id":"5da5cafc53d350100999ddeeff7b12ce","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/bb9f15345332101034d1ddeeff7b12c8","value":"bb9f15345332101034d1ddeeff7b12c8"},"ui_type":"0","sys_update_name":"sys_ui_script_5da5cafc53d350100999ddeeff7b12ce","sys_updated_by":"admin","sys_created_on":"2020-09-14 14:13:01","name":"sn_chg_model_ui.landing_splash_screens","sys_name":"sn_chg_model_ui.landing_splash_screens","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/bb9f15345332101034d1ddeeff7b12c8","value":"bb9f15345332101034d1ddeeff7b12c8"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"3","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2019-09-17 10:30:50","sys_tags":"","script_name":"","script":"(function() {\n\ttop.NOW = top.NOW || {};\n\ttop.NOW.magellan = top.NOW.magellan || {\n\t\tisNavigating: false,\n\t\tsetNavigatingState: function(state) {\n\t\t\tthis.isNavigating = state;\n\t\t},\n\t\tinvokeWhenShouldFocus: function(currentWindow, onFocus) {\n\t\t\tif (this.isNavigating || currentWindow.self === currentWindow.top) {\n\t\t\t\tonFocus();\n\t\t\t\tthis.isNavigating = false;\n\t\t\t}\n\t\t}\n\t};\n})();","sys_class_name":"sys_ui_script","sys_id":"5dc9a8dc73031300d68ed5fdbdf6a7c0","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/0a442f7b04312210559073c06a02f799","value":"0a442f7b04312210559073c06a02f799"},"ui_type":"0","sys_update_name":"sys_ui_script_5dc9a8dc73031300d68ed5fdbdf6a7c0","sys_updated_by":"admin","sys_created_on":"2018-06-28 04:22:00","name":"ConditionalFocus","sys_name":"ConditionalFocus","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"269","active":"true","description":"Directive snCabMeetingCalendar.  Displays CAB Meetings for the current user.","use_scoped_format":"false","global":"false","sys_updated_on":"2024-04-17 13:27:44","sys_tags":"","script_name":"cal.snCabMeetingCalendar","script":"angular.module('sn.change_management.cab.calendar').directive('snCabMeetingCalendar', ['CAB', 'modelUtil', 'meetingCalendar', 'spUtil', 'getTemplateUrl', 'CalendarView', '$timeout', '$log', '$compile', '$document', 'filterFilter', '$window', '$location', 'isAccessibilityEnabled', 'calendarUtils', function(CAB, modelUtil, meetingCalendar, spUtil, getTemplateUrl, CalendarView, $timeout, $log, $compile, $document, filterFilter, $window, $location, isAccessibilityEnabled, calendarUtils) {\n    return {\n        restrict: 'E',\n        scope: {\n            timeformat: '<',\n        },\n        templateUrl: getTemplateUrl('cab_workbench_meeting_calendar.xml'),\n        link: function($scope, el, attrs, Ctrl) {\n            var SPACE = 32;\n            var ENTER = 13;\n            var ESCAPE = 27;\n            var TAB = 9;\n            var popoverTimerPromise, resizeTimerPromise;\n            var userTzName;\n            var isA11yEnabled = isAccessibilityEnabled();\n            var popoverScopes = [];\n            var eventbarMap = {};\n            var eventIndex = 0;\n            var activePopoverId = \"\";\n\n            function destroyPopoverScopes() {\n                for (var i = 0; i < popoverScopes.length; i++)\n                    popoverScopes[i].$destroy();\n                popoverScopes.length = 0;\n                eventbarMap = {};\n                eventIndex = 0;\n            }\n\n            function buildEventTemplate(meeting) {\n                return \"<span>\" + meeting.name.value + \"<br />\" + meeting.manager.display_value + \"</span>\";\n            }\n\n            function meetingToEvent(meeting) {\n                // Just incase start doesn't have a timezone, grab it here on each map.\n                if (!userTzName && meeting.start.tz_name)\n                    userTzName = meeting.start.tz_name;\n\n                return {\n                    id: meeting.sys_id.value,\n                    start_date: new Date(meeting.start.display_value_ms),\n                    end_date: new Date(meeting.end.display_value_ms),\n                    text: buildEventTemplate(meeting),\n                    meeting: meeting\n                };\n            }\n\n            $scope.events = [];\n            $scope.ready = false; // When this directive is rendered, it might be within ng-hide. Initing scheduler code then will render it collapsed.\n            function renderPopoverEvent(container, ev, width, height, header_content, body_content, templates) {\n\n                var $container = angular.element(container);\n                $container.attr(\"tabindex\", 0);\n                eventIndex++;\n                var eventKey = ev.id + \"_\" + eventIndex;\n                var durationInMins = (ev.meeting.end.value_ms - ev.meeting.start.value_ms) / (1000 * 60);\n                // If duration is less than 1 hr, its defaulting to 1 hr in global calendar class. \n                // So handling it here by making default as 15mins \n                // Setting default height to 12 if duration is less than 15 mins.\n                var heightModfied = null;\n                if (durationInMins <= 15) {\n                    height = 12;\n                    heightModfied = height;\n                } else if (durationInMins < 60) {\n                    //44 is the default height for 1hour\n                    height = (durationInMins / 60) * 44;\n                    heightModfied = height;\n                }\n                // We are removing padding only if duration is <30 to show the meeting name clearly within the event box.\n                var removePadding = '';\n                if (durationInMins < 30)\n                    removePadding = \"padding-top:0px;\";\n                var popoverScope = recompileEvent(container, eventKey, heightModfied);\n                var html = \"<div style='overflow: hidden; width: \" + width + \"px; height: \" + height + \"px;' >\";\n                html += \"<div class='dhx_event_move dhx_header' style='width:\" + width + \"px'></div>\";\n                if ($scope.view != \"day\")\n                    html += \"<div class='dhx_event_move dhx_title' style='width:\" + width + \"px'>\" + header_content + \"</div>\";\n\n                html += \"<div class='dhx_body' style='\" + removePadding + \"width:\" + width + \"px'>\" + body_content + \"</div>\";\n                html += \"<div class='dhx_event_resize dhx_footer' style='width:\" + width + \"px'></div>\";\n                html += \"</div>\";\n                popoverScope.ev = ev;\n                angular.element(container).append(($compile(html))(popoverScope));\n                return true;\n            }\n\n            $scope.popoverTemplate = \"cab_meeting_cal_popover\";\n            $scope.view = 'month';\n\n            var myPlacement = \"auto right\";\n            $scope.popoverPlacement = function() {\n                return myPlacement;\n            };\n\n            $scope.config = {\n                date: new Date(),\n                viewTimeFormat: $scope.timeformat,\n                multiDay: true,\n                allTimed: true,\n                allowCreate: false,\n                allowResize: false,\n                allowMoving: false,\n                readOnly: true,\n                supportedModes: [CalendarView.DAY, CalendarView.WEEK, CalendarView.MONTH],\n                mode: CalendarView.MONTH,\n                useSelectMenuSpace: true,\n                renderEvent: renderPopoverEvent,\n                timeoutToDisplay: 60000,\n                weekStartDay: calendarUtils.getNormalizedWeekStartDay(($window.g_first_day_of_week === undefined || $window.g_first_day_of_week === null || isNaN($window.g_first_day_of_week)) ? 2 : $window.g_first_day_of_week),\n                templates: {\n                    event_class: function(start, end, ev) {\n                        return \"cab_event_class\";\n                    },\n                    // Month view time.  Slight hack as the date starts a div, the text ends it.\n                    event_bar_date: function(start, end, ev, scheduler) {\n                        var html = \"<b>\" + (scheduler.date.date_to_str($scope.timeformat))(start) + \"</b> \";\n                        return html;\n                    },\n                    event_bar_text: function(start, end, ev, scheduler) {\n                        return ev.text;\n                    },\n                    // Week/Day view header\n                    event_header: function(start, end, ev, scheduler) {\n                        var dateFormat = scheduler.date.date_to_str($scope.timeformat);\n                        if (scheduler.getState().mode == CalendarView.WEEK)\n                            return \"<b>\" + dateFormat(start) + \" - \" + dateFormat(end) + \"</b> \";\n                        return \"\";\n                    }\n                }\n            };\n\n            function isReady() {\n                if (el.height() === 0) { // Means it is not yet visible\n                    $timeout(isReady, 300);\n                    return;\n                }\n                $scope.ready = true;\n            }\n\n            isReady();\n\n            var loadingCallsCounter = 0;\n            $scope.enableLoading = function() {\n                $scope.isLoading = true;\n                loadingCallsCounter++;\n            };\n\n            $scope.disableLoading = function() {\n                if (loadingCallsCounter === 0)\n                    return;\n\n                loadingCallsCounter--;\n                if (loadingCallsCounter === 0)\n                    $scope.isLoading = false;\n            };\n\n            $scope.onSchedulerResize = function(schedulerInstance) {\n\n                for (var p in eventbarMap) {\n                    if (eventbarMap[p]) {\n                        activePopoverId = p;\n                        break;\n                    }\n                }\n\n                destroyPopoverScopes();\n                updateEvents();\n            };\n\n            function bindGlobalEvents() {\n                $document.on(\"click\", handleDocumentClickEvent);\n                $document.on(\"keyup\", handleEscape);\n                $(\".sp-scroll\").on(\"scroll\", function() {\n                    $scope.$digest();\n                });\n            }\n\n            function unbindGlobalEvents() {\n                $document.off(\"click\", handleDocumentClickEvent);\n                $document.off(\"keyup\", handleEscape);\n                $(\".sp-scroll\").off(\"scroll\");\n            }\n\n            function clearPopovers(shiftFocus) {\n                unbindGlobalEvents();\n                var eventKey = \"\";\n                for (var p in eventbarMap) {\n                    if (eventbarMap[p])\n                        eventKey = p;\n                    eventbarMap[p] = false;\n                }\n\n                if (!shiftFocus)\n                    return;\n                if (eventKey.length == 0)\n                    return;\n\n                var el = angular.element($document).find(\"#\" + eventKey);\n\n                if (el.length == 0)\n                    return;\n\n                el.focus();\n            }\n\n            function handleEscape($event) {\n                if ($event.keyCode != ESCAPE)\n                    return;\n                var shiftFocus = angular.element($event.target).closest(\".popover\").length != 0;\n                $scope.$apply(function() {\n                    clearPopovers(shiftFocus);\n                });\n            }\n\n            function handleDocumentClickEvent($event) {\n                var $el = angular.element($event.target);\n                // return if clicked on popover dialog.\n                if ($el.closest(\".popover\").length != 0)\n                    return;\n                $scope.$apply(function() {\n                    clearPopovers(false);\n                });\n            }\n\n            $scope.$on(\"$destroy\", function() {\n                clearPopovers();\n            });\n\n            function togglePopover(eventKey) {\n                var isOpen = !eventbarMap[eventKey];\n                for (var p in eventbarMap)\n                    eventbarMap[p] = false;\n\n                unbindGlobalEvents();\n                eventbarMap[eventKey] = isOpen;\n                if (!isOpen)\n                    return;\n                if (popoverTimerPromise)\n                    $timeout.cancel(popoverTimerPromise);\n                popoverTimerPromise = null;\n\n                popoverTimerPromise = $timeout(function() {\n                    bindGlobalEvents();\n                    if (!isA11yEnabled)\n                        return;\n                    var elFocus = angular.element($document).find(\"#cab_event_dialog_\" + eventKey);\n                    if (elFocus.length >= 1)\n                        elFocus.focus();\n                }, 30, false);\n            }\n\n            $scope.isPopoverOpen = function(eventKey) {\n                if (typeof eventbarMap[eventKey] == 'undefined')\n                    eventbarMap[eventKey] = false;\n                return eventbarMap[eventKey];\n            };\n\n            $scope.onPopoverEventClick = function($event, eventKey) {\n                togglePopover(eventKey);\n            };\n\n            function updateEvents() {\n                if ($scope.view != CalendarView.MONTH)\n                    return;\n                if (resizeTimerPromise)\n                    $timeout.cancel(resizeTimerPromise);\n                resizeTimerPromise = undefined;\n                resizeTimerPromise = $timeout(function() {\n                    var evEl = $document.find(\"div[event_id]\");\n                    for (var i = 0; i < evEl.length; i++)\n                        recompileEvent(evEl[i], evEl[i].getAttribute(\"event_id\") + \"_\" + i, null);\n                }, 100, false);\n            }\n\n            function recompileEvent(el, eventKey, height) {\n\n                var $container = angular.element(el);\n                $container.attr(\"id\", eventKey);\n                $container.attr(\"uib-popover-template\", \"popoverTemplate\");\n                $container.attr(\"popover-placement\", \"{{popoverPlacement()}}\");\n                $container.attr(\"popover-trigger\", \"none\");\n                $container.attr(\"popover-append-to-body\", \"true\");\n                $container.attr(\"popover-is-open\", \"isPopoverOpen('\" + eventKey + \"')\");\n                $container.attr(\"ng-click\", \"onPopoverEventClick($event, '\" + eventKey + \"')\");\n                $container.attr(\"data-popover-index\", eventKey);\n                // Here we are modifying the height of the div (its coming default as 40 if duration is less than 1 hr)\n                if (height != null) {\n                    var len = $container.attr(\"style\").length;\n                    $container.attr(\"style\", $container.attr(\"style\").substring(0, len - 5) + height + \"px\");\n                }\n                var popoverScope = $scope.$new();\n                popoverScope.tabindex = $container.attr(\"tabindex\");\n                popoverScope.eventIndex = eventKey;\n                popoverScope.cab_a11y = isA11yEnabled ? \"cab_a11y\" : \"\";\n                popoverScope.ev = filterFilter($scope.events, {\n                    id: $container.attr(\"event_id\")\n                })[0];\n                if (activePopoverId == eventKey) {\n                    eventbarMap[activePopoverId] = true;\n                    activePopoverId = '';\n                } else\n                    eventbarMap[eventKey] = false;\n                popoverScopes.push(popoverScope);\n                $compile($container)(popoverScope);\n                return popoverScope;\n            }\n\n            $scope.onEventClick = function(eventId) {\n                $window.location.href = spUtil.getHost() + $location.path() + '?id=' + CAB.WORKBENCH + '&sys_id=' + eventId;\n            };\n            $scope.onEventKeydown = function(event, eventId, elementId) {\n                if (event.which == ENTER) {\n                    $window.location.href = spUtil.getHost() + $location.path() + '?id=' + CAB.WORKBENCH + '&sys_id=' + eventId;\n                } else if (event.which == TAB) {\n                    togglePopover(eventId);\n                    angular.element('#' + elementId).focus();\n                    event.preventDefault();\n                }\n            };\n\n            $scope.onViewChange = function(view) {\n                $scope.view = view;\n                // Deal with placement of the popover in different views\n                if (view == CalendarView.DAY)\n                    myPlacement = \"auto top\";\n                else\n                    myPlacement = \"auto right\";\n\n                destroyPopoverScopes();\n            };\n\n            $scope.onDateRangeChange = function() {\n                destroyPopoverScopes();\n            };\n\n            $scope.fetchEvents = function(startDate, endDate) {\n                // Start Date and endDate are in the forced users's timezone.  Need to adjust accordingly.\n                var startMs = startDate.getTime() - modelUtil.getTzToLocalMSDiff(startDate.getTime(), userTzName);\n                var endMs = endDate.getTime() - modelUtil.getTzToLocalMSDiff(endDate.getTime(), userTzName);\n\n                meetingCalendar.getMeetingsBetween(startMs, endMs).then(\n                    function(meetings) {\n                        $scope.events = meetings.map(function(meeting) {\n                            return meetingToEvent(meeting);\n                        });\n                        //Funky. Should be bound to the render of the month view events.\n                        // Also destruction of popover scopes should be bound to the destruction of the event.\n                        updateEvents();\n                    });\n            };\n\n            el.on('keydown', '.cab_event_class', function(event) {\n                if (event.which == ENTER) {\n                    angular.element(event.target).click();\n                }\n            });\n\n        }\n    };\n}]);","sys_class_name":"sys_ui_script","sys_id":"5fdf1557d752220034d145bcce610387","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"ui_type":"0","sys_update_name":"sys_ui_script_5fdf1557d752220034d145bcce610387","sys_updated_by":"admin","sys_created_on":"2016-10-11 15:34:45","name":"sn_change_cab.cal.snCabMeetingCalendar","sys_name":"sn_change_cab.cal.snCabMeetingCalendar","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"14","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2025-06-05 05:18:18","sys_tags":"","script_name":"","script":"var AssessmentClientUtils = {\n\tpopulateDefaultFilter: function() {\n\t\tvar id = g_form.getUniqueValue();\n\t\tvar table = g_form.getValue('table');\n\t\tvar condition = getFilter('asmt_metric_type.condition');\n\t\tvar filterTable = g_form.getValue('filter_table');\n\t\tvar groupField = g_form.getValue('display_field');\n\t\tvar filterCondition = g_form.getValue('filter_condition');\n\t\tvar showAllGroups = this._getDisplayAll();\n\t\tvar currentDefault = g_form.getValue('default_filter').toString();\n\t\t\n\t\tvar onResponse = function(serverResponse) {\n\t\t\tvar filters = serverResponse.responseXML.getElementsByTagName('group');\n\t\t\tvar numFilters = filters.length;\n\t\t\t\n\t\t\tg_form.clearOptions('default_filter');\n\t\t\tg_form.addOption('default_filter', '-- None --', getMessage('-- None --'));\n\t\t\tfor(var i = 0; i < numFilters; i++) {\n\t\t\t\tvar display = filters[i].getAttribute('display');\n\t\t\t\tvar id = filters[i].getAttribute('value');\n\t\t\t\tg_form.addOption('default_filter', id, display);\n\t\t\t\tif(currentDefault == id)\n\t\t\t\t\tg_form.setValue('default_filter', id);\n\t\t\t}\n\t\t};\n\t\n\t\tvar ga = new GlideAjax('AssessmentUtilsAJAX');\n\t\tga.addParam('sysparm_id', id);\n\t\tga.addParam('sysparm_name', 'getFilters');\n\t\tga.addParam('sysparm_base_table', table);\n\t\tga.addParam('sysparm_condition', condition);\n\t\tga.addParam('sysparm_filter_table', filterTable);\n\t\tga.addParam('sysparm_group_field', groupField);\n\t\tga.addParam('sysparm_filter_condition', filterCondition);\n\t\tga.addParam('sysparm_show_all_groups', showAllGroups);\n\t\tga.getXML(onResponse);\n\t},\n\t\n\t_getDisplayAll: function() {\n\t\t// If the field is on the form (even if it is hidden), \n\t\t// return the value of the field\n\t\tvar displayAllField = $('asmt_metric_type.display_all_filters');\n\t\tif (displayAllField)\n\t\t\treturn g_form.getValue('display_all_filters');\n\t\t// If the field value is on the scratchpad, return that value\n\t\telse if (g_scratchpad._loadDisplayAll !== undefined)\n\t\t\treturn g_scratchpad._loadDisplayAll;\n\t\t// Make an AJAX to get the value of the field\n\t\telse {\n\t\t\tvar currentSysId = g_form.getUniqueValue().toString();\n\t\t\tvar gr = new GlideRecord('asmt_metric_type');\n\t\t\tgr.get(currentSysId);\n\t\t\treturn gr.display_all_filters;\n\t\t}\n\t}\n};\n","sys_class_name":"sys_ui_script","sys_id":"60e45d06df310100cd7da5f59bf263fd","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/3da7677f04b12210559073c06a02f701","value":"3da7677f04b12210559073c06a02f701"},"ui_type":"0","sys_update_name":"sys_ui_script_60e45d06df310100cd7da5f59bf263fd","sys_updated_by":"system","sys_created_on":"2013-06-07 20:03:31","name":"AssessmentClientUtils","sys_name":"AssessmentClientUtils","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"69","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2020-11-13 17:18:11","sys_tags":"","script_name":"","script":"angular.module(\"sn.app_common.aisa.action\", [\"sn.app_common\", \"sn.app_common.aisa.utils\"]);\nangular.module(\"sn.app_common.aisa.action\").service(\"aisaAction\", [\"$http\", \"$window\", \"$location\", \"$log\", \"aisaUtils\", \"aisaActionModalHelper\", \"aisaFeedback\", \"i18n\", function($http, $window, $location, $log, aisaUtils, aisaActionModalHelper, aisaFeedback, i18n) {\n\tvar aisaAction = this;\n\n\taisaAction.ACTION_ENDPOINT_BASE = '/api/now/aisa_action';\n\taisaAction.ACTION_TYPE = {\n\t\t'OPEN_LINK_NEW_TAB': 'OPEN_LINK_NEW_TAB',\n\t\t'OPEN_LINK_CURRENT_TAB': 'OPEN_LINK_CURRENT_TAB',\n\t\t'OPEN_MODAL': 'OPEN_MODAL',\n\t\t'REDIRECT': 'REDIRECT',\n\t\t'SEARCH_RESULT_EVENT_SIGNAL': 'SEARCH_RESULT_EVENT_SIGNAL',\n\t};\n\taisaAction.ACTIONS = {\n\t\t'SOLVES_ISSUE': 'Solves my issue'\n\t};\n\t\n\taisaAction.execAction = function(action, resultRecord, commonFeedbackData, isModalSubmit, modalData, domain, rpSysId) {\n\t\tvar table = resultRecord.table;\n\t\tvar sysId = resultRecord.sysId;\n\n\t\tvar className = aisaUtils.getResultField(resultRecord, \"sys_class_name\").value;\n\t\tif (!className)\n\t\t\tclassName = table;\n\n\t\tvar restPath = action.restPath;\n\t\tif (!restPath.startsWith('/'))\n\t\t\trestPath = '/' + restPath;\n\n\t\tvar actionRequest = {\n\t\t\tmethod: 'POST',\n\t\t\turl: aisaAction.ACTION_ENDPOINT_BASE + restPath,\n\t\t\theaders: {\n\t\t\t\t'Content-Type': \"application/json; charset=UTF-8\"\n\t\t\t},\n\t\t\tdata: {\n\t\t\t\ttable: table,\n\t\t\t\tsysId: sysId,\n\t\t\t\tclassName: className,\n\t\t\t\tcommonFeedbackData: commonFeedbackData,\n\t\t\t\tisModalSubmit: isModalSubmit,\n\t\t\t\tmodalData: modalData\n\t\t\t}\n\t\t};\n\n\t\t$http(actionRequest).then(\n\t\t\tfunction(response) {\n\t\t\t\tvar result = response.data.result;\n\t\t\t\tvar actionType = result.actionType;\n\t\t\t\tvar forceRedirect = result.forceRedirect;\n\t\t\t\n\t\t\t\tif (aisaAction.ACTION_TYPE.OPEN_LINK_NEW_TAB === actionType) {\n\t\t\t\t\taisaFeedback.sendSearchCompleteAppSeeEvent(resultRecord, rpSysId, result.linkValue, action.actionId, domain);\n\t\t\t\t\t$window.open(result.linkValue, '_blank');\n\t\t\t\t} else if (aisaAction.ACTION_TYPE.OPEN_LINK_CURRENT_TAB === actionType) {\n\t\t\t\t\taisaFeedback.sendSearchCompleteAppSeeEvent(resultRecord, rpSysId, result.linkValue, action.actionId, domain);\n\t\t\t\t\tif (forceRedirect) {\n\t\t\t\t\t\tg_dirty_form_warning_enabled = false;\n\t\t\t\t\t\t// using open will do a refresh to reset g_dirty_form_warning_enabled\n\t\t\t\t\t\t$window.open(result.linkValue, '_self');\n\t\t\t\t\t} else\n\t\t\t\t\t\t$location.search(result.linkValue);\n\t\t\t\t} else if (aisaAction.ACTION_TYPE.OPEN_MODAL === actionType) {\n\t\t\t\t\tvar actionModal = {};\n\t\t\t\t\tactionModal.result = resultRecord;\n\t\t\t\t\tactionModal.action = action;\n\t\t\t\t\tactionModal.title = result.modalTitle || action.actionLabel;\n\t\t\t\t\tactionModal.bodyTemplate = result.modalBodyTemplate;\n\t\t\t\t\tactionModal.submitText = result.modalSubmitText || i18n.getMessage('Submit');\n\t\t\t\t\tactionModal.cancelText = result.modalCancelText || i18n.getMessage('Cancel');\n\t\t\t\t\t// modalData is for custom usage of modal\n\t\t\t\t\tactionModal.modalData = result.modalData;\n\t\t\t\t\tactionModal.modalSubmit = function() {\n\t\t\t\t\t\taisaAction.execAction(this.action, this.result, commonFeedbackData, true, this.modalData, domain, rpSysId);\n\t\t\t\t\t};\n\t\t\t\t\taisaActionModalHelper.showActionModal(actionModal);\n\t\t\t\t} else if (aisaAction.ACTION_TYPE.SEARCH_RESULT_EVENT_SIGNAL === actionType) {\n\t\t\t\t\tvar searchTerm = commonFeedbackData.queryTerm;\n\t\t\t\t\tvar rpConfig = {searchApp: commonFeedbackData.searchContextConfigId};\n\t\t\t\t\tvar signalType = result.signalType;\n\t\t\t\t\tvar signalValue = result.signalValue;\n\t\t\t\t\taisaFeedback.searchResultEvent(searchTerm, rpConfig, resultRecord, signalType, signalValue);\n\t\t\t\t\taisaFeedback.sendActionClickAppSeeEvent(resultRecord, rpSysId, {\n\t\t\t\t\t\tactionId: action.actionId,\n\t\t\t\t\t\tactionValue: signalValue\n\t\t\t\t\t}, domain);\n\t\t\t\t}\n\t\t\t},\n\t\t\tfunction(response) {\n\t\t\t\t\n\t\t\t}\n\t\t);\n\t};\n}]);\n\nangular.module(\"sn.app_common.aisa.action\").factory('aisaActionModalHelper', [\"$uibModal\", \"aisaUtils\", function ($uibModal, aisaUtils) {\n\t\"use strict\";\n\treturn {\n\t\tshowActionModal: function (actionModal) {\n\t\t\tvar modalInstance = $uibModal.open({\n\t\t\t\ttemplateUrl: 'aisa-action-modal',\n\t\t\t\tcontroller: ['$scope', '$uibModalInstance', function ($scope, $uibModalInstance) {\n\t\t\t\t\t$scope.actionModal = actionModal;\n\t\t\t\t\t$scope.aisaUtils = aisaUtils;\n\t\t\t\t\t$scope.ok = function() {\n\t\t\t\t\t\t$uibModalInstance.dismiss();\n\t\t\t\t\t\tactionModal.modalSubmit();\n\t\t\t\t\t};\n\t\t\t\t\t$scope.cancel = function() {\n\t\t\t\t\t\t$uibModalInstance.dismiss();\n\t\t\t\t\t};\n\t\t\t\t}],\n\t\t\t\tsize: 'md'\n\t\t\t});\n\t\t\treturn modalInstance;\n\t\t}\n\t};\n}]);","sys_class_name":"sys_ui_script","sys_id":"61ccbf1c67079010b3d782f45685ef74","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/e4dd6b3304752210559073c06a02f70c","value":"e4dd6b3304752210559073c06a02f70c"},"ui_type":"0","sys_update_name":"sys_ui_script_61ccbf1c67079010b3d782f45685ef74","sys_updated_by":"admin","sys_created_on":"2020-08-31 23:23:28","name":"app_com.aisa.search_ui_action","sys_name":"app_com.aisa.search_ui_action","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"114","active":"true","description":"Use AJAX to determine the progress of something","use_scoped_format":"false","global":"false","sys_updated_on":"2025-06-05 05:18:18","sys_tags":"","script_name":"","script":"var  AJAXProgress = Class.create();\r\n\r\nAJAXProgress.prototype = {\r\n    WAIT_PERIOD: 5000,\r\n\r\n    initialize: function(span_name, stage_list) {\r\n\tthis.span = gel(span_name);\r\n        this.stageList = gel(stage_list);\r\n        this.stages = new Array();\r\n        this.currentStage = -1;\r\n\r\n        this.parseStages(this.stageList);\r\n    },\r\n\r\n    start: function() {\r\n        this.currentStage = -1;\r\n        this.stageStart();\r\n    },\r\n\r\n    stageStart: function() {\r\n       this.currentStage++;\r\n       \r\n       this.updateSpan();\r\n       this.stageLoop();\r\n    },\r\n\r\n    stageLoop: function() {\r\n       var id = this.stages[this.currentStage].ajax;\r\n       var name = this.stages[this.currentStage].name;\r\n       var ga = new GlideAjax('ECCQueueAjax');\r\n       ga.addParam('sysparm_name','ajaxProgress');\r\n       ga.addParam('sysparm_value',name);\r\n       ga.addParam('sysparm_id',id);\r\n       ga.getXMLAnswer(this.stageEvalComplete.bind(this));\r\n    },\r\n\r\n    stageEvalComplete: function(answer) {\r\n       if (answer == 'true')\r\n           this.stageComplete();\r\n       else\r\n           setTimeout(this.stageLoop.bind(this), this.WAIT_PERIOD);\r\n    },\r\n\r\n    stageComplete: function() {\r\n        if (this.stages[this.currentStage].oncomplete) {\r\n            var c = this.stages[this.currentStage].oncomplete;\r\n            eval(c);\r\n        }\r\n\r\n        if (this.currentStage+1 == this.stages.length)\r\n            return;\r\n\r\n        this.stageStart();\r\n    },\r\n\r\n    parseStages: function(stageNode) {\r\n        for(var i = 0; i < stageNode.childNodes.length; i++) {\r\n            var stage = stageNode.childNodes[i];\r\n            var name = \"\";\r\n            var ajax = \"\";\r\n            var complete = \"\";\r\n\r\n            for(var s = 0; s < stage.childNodes.length; s++) {\r\n                var attr = stage.childNodes[s];\r\n                if (attr.tagName.toLowerCase() == \"name\")\r\n                    name = getTextValue(attr);\r\n                if (attr.tagName.toLowerCase() == \"complete_condition\")\r\n                    ajax = getTextValue(attr);\r\n                if (attr.tagName.toLowerCase() == \"oncomplete\")\r\n                    complete = getTextValue(attr);\r\n            }\r\n\r\n            this.addStage(name, ajax, complete);\r\n        }\r\n    },\r\n\r\n    updateSpan: function() {\r\n        var stageName = this.stages[this.currentStage].name;\r\n        this.span.innerHTML = \"<table border='0'><tr><td align='center'>\" + stageName +\r\n                              \"<br><img src='images/ajax-loader.gifx'>\" + \"</td></tr></table>\";\r\n    },\r\n\r\n    addStage: function(name, ajax, complete) {\r\n        var stage = { \"name\": name, \"ajax\": ajax, \"oncomplete\": complete };\r\n        this.stages.push(stage);\r\n    },\r\n\r\n    type: \"AJAXProgress\"\r\n};","sys_class_name":"sys_ui_script","sys_id":"6391d9cbc0a8000b006b9b42bdc20cc1","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/72532b7304312210559073c06a02f7c6","value":"72532b7304312210559073c06a02f7c6"},"ui_type":"0","sys_update_name":"sys_ui_script_6391d9cbc0a8000b006b9b42bdc20cc1","sys_updated_by":"system","sys_created_on":"2008-11-03 18:16:22","name":"AJAXProgress","sys_name":"AJAXProgress","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"glide.maint","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"3","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2020-09-01 02:13:45","sys_tags":"","script_name":"","script":"angular.module(\"sn.app_common.aisa.utils\", [\"sn.app_common\"]);\nangular.module(\"sn.app_common.aisa.utils\").service(\"aisaUtils\", [\"$log\", function($log) {\n\tvar aisaUtils = this;\n\n\taisaUtils.buildCatalogKBFacetFilters = function(catalogDisplayValues, kbDisplayValues) {\n\t\tvar catalogValues = [];\n\t\tvar knowledgeBaseValues = [];\n\t\tcatalogDisplayValues.forEach(function(e1) {\n\t\t\tif (e1)\n\t\t\t\tcatalogValues.push(e1);\n\t\t});\n\t\t\n\t\tkbDisplayValues.forEach(function(e2) {\n\t\t\tif (e2)\n\t\t\t\tknowledgeBaseValues.push(e2);\n\t\t});\n\t\treturn [\"_sc_cat_item.sc_catalogs_s:FACET(\" + catalogValues + \")\", \"_kb_knowledge.kb_knowledge_base_s:FACET(\" + knowledgeBaseValues + \")\"];\n\t};\n\n\taisaUtils.getResultField = function(result, fieldName) {\n\t\tvar field = {value: '', displayValue: ''};\n\t\tif (!result)\n\t\t\treturn field;\n\n\t\tresult.columns.forEach(function(column) {\n\t\t\tif (column.fieldName === fieldName)\n\t\t\t\tfield = column;\n\t\t});\n\t\treturn field;\n\t};\n\n}]);","sys_class_name":"sys_ui_script","sys_id":"64616c2067031010b3d782f45685efea","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/e4dd6b3304752210559073c06a02f70c","value":"e4dd6b3304752210559073c06a02f70c"},"ui_type":"0","sys_update_name":"sys_ui_script_64616c2067031010b3d782f45685efea","sys_updated_by":"admin","sys_created_on":"2020-09-01 02:01:13","name":"app_com.aisa.utils","sys_name":"app_com.aisa.utils","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"0","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2022-10-15 11:26:04","sys_tags":"","script_name":"ec_url_whitelist","script":"angular.module('sn.$sp').config(['$compileProvider',function( $compileProvider ){ \n        $compileProvider.aHrefSanitizationWhitelist(/^\\s*(https?|ftp|mailto|tel|file|msteams|zoomtg):/) ;\n}]);","sys_class_name":"sys_ui_script","sys_id":"66212cb5eb621110191f2ff2a2522884","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/4249e63a28d54d61bb6fbf61fd86cccb","value":"4249e63a28d54d61bb6fbf61fd86cccb"},"ui_type":"10","sys_update_name":"sys_ui_script_66212cb5eb621110191f2ff2a2522884","sys_updated_by":"admin","sys_created_on":"2022-10-15 11:26:04","name":"sn_ex_sp.ec_url_whitelist","sys_name":"sn_ex_sp.ec_url_whitelist","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/4249e63a28d54d61bb6fbf61fd86cccb","value":"4249e63a28d54d61bb6fbf61fd86cccb"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"65","active":"true","description":"/*\r\nCoolClock by Simon Baird (simon dot baird at gmail dot com)\r\nVersion 1.0.4 (09-Nov-2006)\r\nSee http://simonbaird.com/coolclock/\r\n\r\nCopyright (c) Simon Baird 2006\r\n\r\nRedistribution and use in source and binary forms, with or without modification,\r\nare permitted provided that the following conditions are met:\r\n\r\nRedistributions of source code must retain the above copyright notice, this\r\nlist of conditions and the following disclaimer.\r\n\r\nRedistributions in binary form must reproduce the above copyright notice, this\r\nlist of conditions and the following disclaimer in the documentation and/or other\r\nmaterials provided with the distribution.\r\n\r\nNeither the name of the Simon Baird nor the names of other contributors may be\r\nused to endorse or promote products derived from this software without specific\r\nprior written permission.\r\n\r\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY\r\nEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\r\nOF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT\r\nSHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\r\nINCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\r\nTO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\r\nBUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\nCONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\r\nANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\r\nDAMAGE.\r\n*/\r\n","use_scoped_format":"false","global":"false","sys_updated_on":"2023-08-15 22:12:29","sys_tags":"","script_name":"","script":"window.CoolClock = function(canvasId,displayRadius,skinId,showSecondHand,gmtOffset) {\n\treturn this.init(canvasId,displayRadius,skinId,showSecondHand,gmtOffset);\n}\n\nCoolClock.findAndCreateClocks = function() {\n\tvar canvases = document.getElementsByTagName(\"canvas\");\n\tfor (var i=0;i<canvases.length;i++) {\n\t\tvar fields = canvases[i].className.split(\" \")[0].split(\":\");\n\t\tif (fields[0] == \"CoolClock\") {\n\t\t\tnew CoolClock(canvases[i].id,fields[2],fields[1],fields[3]!=\"noSeconds\",fields[4]);\n\t\t}\n\t}\n}\n\nCoolClock.tick = function(id) {\n  CoolClock.config.clockTracker[id].tick();\n}\n\nCoolClock.config = {\n\tclockTracker: {},\n\ttickDelay: 1000,\n\tlongTickDelay: 15000,\n\tdefaultRadius: 85,\n\trenderRadius: 100,\n\tdefaultSkin: \"swissRail\",\n\tskins:\t{\n\t\t// try making your own...\n\n\t\tswissRail: {\n\t\t\touterBorder: { lineWidth: 1, radius:95, color: \"black\", alpha: 1 },\n\t\t\tsmallIndicator: { lineWidth: 2, startAt: 89, endAt: 93, color: \"black\", alpha: 1 },\n\t\t\tlargeIndicator: { lineWidth: 4, startAt: 80, endAt: 93, color: \"black\", alpha: 1 },\n\t\t\thourHand: { lineWidth: 8, startAt: -15, endAt: 50, color: \"black\", alpha: 1 },\n\t\t\tminuteHand: { lineWidth: 7, startAt: -15, endAt: 75, color: \"black\", alpha: 1 },\n\t\t\tsecondHand: { lineWidth: 1, startAt: -20, endAt: 85, color: \"red\", alpha: 1 },\n\t\t\tsecondDecoration: { lineWidth: 1, startAt: 70, radius: 4, fillColor: \"red\", color: \"red\", alpha: 1 }\n\t\t},\n\n\t\tswissRailPM: {\n\t\t\touterBorder: { lineWidth: 1, radius:95, color: \"white\", fillColor: \"black\", alpha: 1 },\n\t\t\tsmallIndicator: { lineWidth: 2, startAt: 89, endAt: 93, color: \"white\", alpha: 1 },\n\t\t\tlargeIndicator: { lineWidth: 4, startAt: 80, endAt: 93, color: \"white\", alpha: 1 },\n\t\t\thourHand: { lineWidth: 8, startAt: -15, endAt: 50, color: \"white\", alpha: 1 },\n\t\t\tminuteHand: { lineWidth: 7, startAt: -15, endAt: 75, color: \"white\", alpha: 1 },\n\t\t\tsecondHand: { lineWidth: 1, startAt: -20, endAt: 85, color: \"red\", alpha: 1 },\n\t\t\tsecondDecoration: { lineWidth: 1, startAt: 70, radius: 4, fillColor: \"red\", color: \"red\", alpha: 1 }\n\t\t},\n\t\tchunkySwiss: {\n\t\t\touterBorder: { lineWidth: 4, radius:97, color: \"black\", alpha: 1 },\n\t\t\tsmallIndicator: { lineWidth: 4, startAt: 89, endAt: 93, color: \"black\", alpha: 1 },\n\t\t\tlargeIndicator: { lineWidth: 8, startAt: 80, endAt: 93, color: \"black\", alpha: 1 },\n\t\t\thourHand: { lineWidth: 12, startAt: -15, endAt: 60, color: \"black\", alpha: 1 },\n\t\t\tminuteHand: { lineWidth: 10, startAt: -15, endAt: 85, color: \"black\", alpha: 1 },\n\t\t\tsecondHand: { lineWidth: 4, startAt: -20, endAt: 85, color: \"red\", alpha: 1 },\n\t\t\tsecondDecoration: { lineWidth: 2, startAt: 70, radius: 8, fillColor: \"red\", color: \"red\", alpha: 1 }\n\t\t},\n\t\tfancy: {\n\t\t\touterBorder: { lineWidth: 5, radius:95, color: \"green\", alpha: 0.7 },\n\t\t\tsmallIndicator: { lineWidth: 1, startAt: 80, endAt: 93, color: \"black\", alpha: 0.4 },\n\t\t\tlargeIndicator: { lineWidth: 1, startAt: 30, endAt: 93, color: \"black\", alpha: 0.5 },\n\t\t\thourHand: { lineWidth: 8, startAt: -15, endAt: 50, color: \"blue\", alpha: 0.7 },\n\t\t\tminuteHand: { lineWidth: 7, startAt: -15, endAt: 92, color: \"red\", alpha: 0.7 },\n\t\t\tsecondHand: { lineWidth: 10, startAt: 80, endAt: 85, color: \"blue\", alpha: 0.3 },\n\t\t\tsecondDecoration: { lineWidth: 1, startAt: 30, radius: 50, fillColor: \"blue\", color: \"red\", alpha: 0.15 }\n\t\t},\n\t\tmachine: {\n\t\t\touterBorder: { lineWidth: 60, radius:55, color: \"#dd6655\", alpha: 1 },\n\t\t\tsmallIndicator: { lineWidth: 4, startAt: 80, endAt: 95, color: \"white\", alpha: 1 },\n\t\t\tlargeIndicator: { lineWidth: 14, startAt: 77, endAt: 92, color: \"#dd6655\", alpha: 1 },\n\t\t\thourHand: { lineWidth: 18, startAt: -15, endAt: 40, color: \"white\", alpha: 1 },\n\t\t\tminuteHand: { lineWidth: 14, startAt: 24, endAt: 100, color: \"#771100\", alpha: 0.5 },\n\t\t\tsecondHand: { lineWidth: 3, startAt: 22, endAt: 83, color: \"green\", alpha: 0 },\n\t\t\tsecondDecoration: { lineWidth: 1, startAt: 52, radius: 26, fillColor: \"#ffcccc\", color: \"red\", alpha: 0.5 }\n\t\t},\n\n\t\t// these three created by bonstio from http://bonstio.net\n\t\tclassic/*was gIG*/: {\n\t\t\touterBorder: { lineWidth: 185, radius:1, color: \"#E5ECF9\", alpha: 1 },\n\t\t\tsmallIndicator: { lineWidth: 2, startAt: 89, endAt: 94, color: \"#3366CC\", alpha: 1 },\n\t\t\tlargeIndicator: { lineWidth: 4, startAt: 83, endAt: 94, color: \"#3366CC\", alpha: 1 },\n\t\t\thourHand: { lineWidth: 5, startAt: 0, endAt: 60, color: \"black\", alpha: 1 },\n\t\t\tminuteHand: { lineWidth: 4, startAt: 0, endAt: 80, color: \"black\", alpha: 1 },\n\t\t\tsecondHand: { lineWidth: 1, startAt: -20, endAt: 85, color: \"red\", alpha: .85 },\n\t\t\tsecondDecoration: { lineWidth: 3, startAt: 0, radius: 2, fillColor: \"black\", color: \"black\", alpha: 1 }\n\t\t},\n\t\t\n\t\tmodern/*was gIG2*/: {\n\t\t\touterBorder: { lineWidth: 185, radius:1, color: \"#E5ECF9\", alpha: 1 },\n\t\t\tsmallIndicator: { lineWidth: 5, startAt: 88, endAt: 94, color: \"#3366CC\", alpha: 1 },\n\t\t\tlargeIndicator: { lineWidth: 5, startAt: 88, endAt: 94, color: \"#3366CC\", alpha: 1 },\n\t\t\thourHand: { lineWidth: 8, startAt: 0, endAt: 60, color: \"black\", alpha: 1 },\n\t\t\tminuteHand: { lineWidth: 8, startAt: 0, endAt: 80, color: \"black\", alpha: 1 },\n\t\t\tsecondHand: { lineWidth: 5, startAt: 80, endAt: 85, color: \"red\", alpha: .85 },\n\t\t\tsecondDecoration: { lineWidth: 3, startAt: 0, radius: 4, fillColor: \"black\", color: \"black\", alpha: 1 }\n\t\t},\n\t\t\n\t\tsimple/*was gIG3*/: {\n\t\t\touterBorder: { lineWidth: 185, radius:1, color: \"#E5ECF9\", alpha: 1 },\n\t\t\tsmallIndicator: { lineWidth: 10, startAt: 90, endAt: 94, color: \"#3366CC\", alpha: 1 },\n\t\t\tlargeIndicator: { lineWidth: 10, startAt: 90, endAt: 94, color: \"#3366CC\", alpha: 1 },\n\t\t\thourHand: { lineWidth: 8, startAt: 0, endAt: 60, color: \"black\", alpha: 1 },\n\t\t\tminuteHand: { lineWidth: 8, startAt: 0, endAt: 80, color: \"black\", alpha: 1 },\n\t\t\tsecondHand: { lineWidth: 5, startAt: 80, endAt: 85, color: \"red\", alpha: .85 },\n\t\t\tsecondDecoration: { lineWidth: 3, startAt: 0, radius: 4, fillColor: \"black\", color: \"black\", alpha: 1 }\n\t\t}\n\n\t}\n};\n\nCoolClock.prototype = {\n\tinit: function(canvasId,displayRadius,skinId,showSecondHand,gmtOffset) {\n\t\tthis.canvasId = canvasId;\n\t\tthis.displayRadius = displayRadius || CoolClock.config.defaultRadius;\n\t\tthis.skinId = skinId || CoolClock.config.defaultSkin;\n\t\tthis.showSecondHand = typeof showSecondHand == \"boolean\" ? showSecondHand : true;\n\t\tthis.tickDelay = CoolClock.config[ this.showSecondHand ? \"tickDelay\" : \"longTickDelay\"];\n\n\t\tthis.canvas = document.getElementById(canvasId);\n\n\t\tthis.canvas.setAttribute(\"width\",this.displayRadius*2);\n\t\tthis.canvas.setAttribute(\"height\",this.displayRadius*2);\n\n\t\tthis.canvas.style.width = this.displayRadius*2 + \"px\";\n\t\tthis.canvas.style.height = this.displayRadius*2 + \"px\";\n\t\tthis.canvas.style.background = 'white';\n\t\tthis.canvas.style.borderRadius = this.displayRadius*2 + \"px\";\n\n\t\tthis.renderRadius = CoolClock.config.renderRadius; \n\n\t\tthis.scale = this.displayRadius / this.renderRadius;\n\t\tthis.ctx = this.canvas.getContext(\"2d\");\n\t\tthis.ctx.scale(this.scale,this.scale);\n\n\t\tthis.gmtOffset = gmtOffset != null ? parseFloat(gmtOffset) : gmtOffset;\n\t\tCoolClock.config.clockTracker[canvasId] = this;\n\t\tthis.tick();\n\t\treturn this;\n\t},\n\n\tfullCircle: function(skin) {\n\t\tthis.fullCircleAt(this.renderRadius,this.renderRadius,skin);\n\t},\n\n\tfullCircleAt: function(x,y,skin) {\n\t\twith (this.ctx) {\n\t\t\tsave();\n\t\t\tglobalAlpha = skin.alpha;\n\t\t\tlineWidth = skin.lineWidth;\n\t\t\tif (document.all)\n\t\t\t\t// excanvas doesn't scale line width so we will do it here\n\t\t\t\tlineWidth = lineWidth * this.scale;\n\t\t\tarc(x, y, skin.radius, 0, 2*Math.PI, false);\n\t\t\tif (document.all)\n\t\t\t\t// excanvas doesn't close the circle so let's color in the gap\n\t\t\t\tarc(x, y, skin.radius, -0.1, 0.1, false);\n\t\t\tif (skin.fillColor) {\n\t\t\t\tfillStyle = skin.fillColor\n\t\t\t\tfill();\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// XXX why not stroke and fill\n\t\t\t\tstrokeStyle = skin.color;\n\t\t\t\tstroke();\n\t\t\t}\n\t\t\trestore();\n\t\t}\n\t},\n\n\tradialLineAtAngle: function(angleFraction,skin) {\n\t\twith (this.ctx) {\n\t\t\tsave();\n\t\t\ttranslate(this.renderRadius,this.renderRadius);\n\t\t\trotate(Math.PI * (2 * angleFraction - 0.5));\n\t\t\tglobalAlpha = skin.alpha;\n\t\t\tstrokeStyle = skin.color;\n\t\t\tlineWidth = skin.lineWidth;\n\t\t\tif (document.all)\n\t\t\t\t// excanvas doesn't scale line width so we will do it here\n\t\t\t\tlineWidth = lineWidth * this.scale;\n\t\t\tif (skin.radius) {\n\t\t\t\tthis.fullCircleAt(skin.startAt,0,skin)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbeginPath();\n\t\t\t\tmoveTo(skin.startAt,0)\n\t\t\t\tlineTo(skin.endAt,0);\n\t\t\t\tstroke();\n\t\t\t}\n\t\t\trestore();\n\t\t}\n\t},\n\n\trender: function(hour,min,sec) {\n\t\tvar skin = CoolClock.config.skins[this.skinId];\n\t\tthis.ctx.clearRect(0,0,this.renderRadius*2,this.renderRadius*2);\n\n\t\tthis.fullCircle(skin.outerBorder);\n\n\t\tfor (var i=0;i<60;i++)\n\t\t\tthis.radialLineAtAngle(i/60,skin[ i%5 ? \"smallIndicator\" : \"largeIndicator\"]);\n\t\t\t\t\n\t\tthis.radialLineAtAngle((hour+min/60)/12,skin.hourHand);\n\t\tthis.radialLineAtAngle((min+sec/60)/60,skin.minuteHand);\n\t\tif (this.showSecondHand) {\n\t\t\tthis.radialLineAtAngle(sec/60,skin.secondHand);\n\t\t\tif (!document.all)\n\t\t\t\t// decoration doesn't render right in IE so lets turn it off\n\t\t\t\tthis.radialLineAtAngle(sec/60,skin.secondDecoration);\n\t\t}\n\t},\n\n\tnextTick: function() {\n            if (this.stillHere())\n\t\tsetTimeout(\"CoolClock.tick('\"+this.canvasId+\"')\",this.tickDelay);\n\t},\n\n\tstillHere: function() {\n\t\treturn document.getElementById(this.canvasId) != null;\n\t},\n\n\trefreshDisplay: function() {\n\t\tvar now = new Date();\n\t\tif (this.gmtOffset != null) {\n\t\t\t// use GMT + gmtOffset\n\t\t\tvar offsetNow = new Date(now.valueOf() + (this.gmtOffset * 1000 * 60 * 60));\n\t\t\tthis.render(offsetNow.getUTCHours(),offsetNow.getUTCMinutes(),offsetNow.getUTCSeconds());\n\t\t}\n\t\telse {\n\t\t\t// use local time\n\t\t\tthis.render(now.getHours(),now.getMinutes(),now.getSeconds());\n\t\t}\n\t},\n\n\ttick: function() {\n\t\tif (this.stillHere()) {\n\t\t\tthis.refreshDisplay()\n\t\t\tthis.nextTick();\n\t\t}\n\t}\n}\n\nCoolClock.findAndCreateClocks();","sys_class_name":"sys_ui_script","sys_id":"68b55f5f0a0a0aa300b7bdae843cbdf6","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/72532b7304312210559073c06a02f7c6","value":"72532b7304312210559073c06a02f7c6"},"ui_type":"0","sys_update_name":"sys_ui_script_68b55f5f0a0a0aa300b7bdae843cbdf6","sys_updated_by":"admin","sys_created_on":"2007-05-07 22:42:36","name":"CoolClock","sys_name":"CoolClock","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"glide.maint","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"11","active":"true","description":"Service to streamline the initial load of CAB","use_scoped_format":"false","global":"false","sys_updated_on":"2021-02-10 17:13:23","sys_tags":"","script_name":"initialLoad","script":"angular.module(\"sn.change_management.cab.initialLoad\", [])\n.service(\"initialLoad\",[\"CAB\", \"$http\", \"$q\", \"modelUtil\", \"loadWait\", function(CAB, $http, $q, modelUtil, loadWait) {\n\tvar initialLoad = this;\n\t\n\tvar cache = null; // structure {runtime_state: {}, agenda: {}, attendee: []}\n\tvar dReq = null;\n\t\n\tfunction refreshData (meetingId) {\n\t\tif (dReq)\n\t\t\treturn dReq.promise;\n\t\t\n\t\tvar dReq = $q.defer();\n\t\t\n\t\t$http.get(CAB.SERVICE.INITIAL + meetingId)\n\t\t.then(\n\t\t\tfunction(response) {\n\t\t\t\tdReq.resolve(response.data.result);\n\t\t\t\tdReq = null;\n\t\t\t\tcache = response.data.result;\n\t\t\t},\n\t\t\tfunction(response) {\n\t\t\t\tdReq.reject(response);\n\t\t\t\tloadWait.setRecordNotFound(true);\n\t\t\t\tdReq = null;\n\t\t\t\tcache = null;\n\t\t\t}\n\t\t);\n\t\t\n\t\treturn dReq.promise;\n\t}\n\t\n\tinitialLoad.runtimeState = function(meetingId) {\n\t\tif (cache !== null)\n\t\t\treturn $q.resolve({\"data\": {\"result\": cache.runtime_state}});\n\t\t\n\t\treturn refreshData(meetingId)\n\t\t.then(\n\t\t\tfunction(response) {\n\t\t\t\treturn {\"data\": {\"result\": response.runtime_state}};\n\t\t\t},\n\t\t\tfunction(response) {\n\t\t\t\treturn $q.reject(response);\n\t\t\t}\n\t\t);\n\t};\n\t\n\tinitialLoad.agenda = function(meetingId) {\n\t\tif (cache !== null)\n\t\t\treturn $q.resolve({\"data\": {\"result\": cache.agenda}});\n\t\t\n\t\treturn refreshData(meetingId)\n\t\t.then(\n\t\t\tfunction(response) {\n\t\t\t\treturn {\"data\": {\"result\": response.agenda}};\n\t\t\t},\n\t\t\tfunction(response) {\n\t\t\t\treturn $q.reject(response);\n\t\t\t}\n\t\t);\n\t};\n\t\n\tinitialLoad.attendee = function(meetingId) {\t\t\n\t\tif (cache !== null)\n\t\t\treturn $q.resolve({\"data\": {\"result\": cache.attendee}});\n\t\t\n\t\treturn refreshData(meetingId)\n\t\t.then(\n\t\t\tfunction(response) {\n\t\t\t\treturn {\"data\": {\"result\": response.attendee}};\n\t\t\t},\n\t\t\tfunction(response) {\n\t\t\t\treturn $q.reject(response);\n\t\t\t}\n\t\t);\n\t};\n}]);","sys_class_name":"sys_ui_script","sys_id":"692a842bc703001034d1f8d07a97630c","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"ui_type":"0","sys_update_name":"sys_ui_script_692a842bc703001034d1f8d07a97630c","sys_updated_by":"admin","sys_created_on":"2020-02-24 12:27:23","name":"sn_change_cab.initialLoad","sys_name":"sn_change_cab.initialLoad","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"94","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2022-10-06 06:41:24","sys_tags":"","script_name":"","script":"(function($) {\n    'user strict';\n    var app = angular.module(\"sn.clone_request.calendar_view\", [\n        'ui.bootstrap',\n        'ui.bootstrap.popover',\n        'sn.common',\n        'sn.itsm.vcab.common',\n        'sn.itsm.vcab.calendar',\n        'sn.itsm.common.accessibility'\n\n    ]);\n\n    function appendStyle() {\n        $(\"#calendar_height\").remove();\n        var height = $(window).height() - 79; // css was set for min and max height for header height (46px) + legend bar height (33px)\n        var s = '<style id=\"calendar_height\"> .sn-calendar .snc-common-calendar { height: ' + (height) + 'px !important; } </style>';\n        $(s).appendTo(document.body);\n    }\n\n    $(\"#calendar_height\").remove();\n    var height = $(window).height() - 79; // css was set for min and max height for header height (46px) + legend bar height (33px)\n    var s = '<style id=\"calendar_height\"> .sn-calendar .snc-common-calendar { height: ' + (height) + 'px !important; } </style>';\n    $(s).appendTo(document.body);\n    app.constant(\"CAB\", {\n        FOCUS_TO_CHANGE_TAB: 'cab_change_tab:focus'\n    });\n    var changeRequestViewApp = app;\n\n    changeRequestViewApp.controller(\"calendarController\",\n        function($scope, $log, $rootScope, $timeout, CloneData, isMobile, CAB, isAccessibilityEnabled, vcabDataSource, $window) {\n            var c = this;\n            c.isA11yEnabled = isAccessibilityEnabled();\n            c.isUrlFetching = false;\n            c.configOptions = {};\n            c.keyNav = true;\n            c.onWarn = function(msg) {\n\t\t\t\t$log.warn(msg);\n            };\n            var dataSource = vcabDataSource;\n            var data2 = JSON.parse(CloneData);\n            if (!data2.isValidRecord) {\n                $log.error(\"Invalid Target Record value is\" + data2.isValidRecord);\n\t\t\t\treturn;\n            }\n\n            c.data = {\n                allowConfig: true,\n                canRead: data2.canRead,\n                canWrite: data2.canWrite,\n                timeFormat: data2.timeFormat,\n                dateTimeFormat: data2.dateTimeFormat,\n                isMobile: false,\n                fieldPermission: {\n                    start_date: data2.start_date,\n                    end_date: data2.end_date\n                },\n                instanceId: data2.instanceId,\n                instanceName: data2.instanceName\n            };\n\n            var inputs = {\n                instanceId: {\n                    \"display_value\": data2.targetInstanceId,\n                    \"value\": data2.targetInstanceId\n                },\n                start_date: {\n\n                    \"display_value\": data2.start_date,\n                    \"value\": data2.start_date\n                },\n                end_date: {\n                    \"display_value\": data2.end_date,\n                    \"value\": data2.end_date\n                }\n            };\n            c.change = inputs;\n            var mobile = false;\n            $rootScope.$on(CAB.FOCUS_TO_CHANGE_TAB, function() {\n                setTimeout(function() {\n                    $('#nav_form').focus();\n                }, 10);\n            });\n        }\n\n    );\n\n})(jQuery);","sys_class_name":"sys_ui_script","sys_id":"697dbb80c3da9d10be13544c1840ddd6","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/3b83a3f304312210559073c06a02f788","value":"3b83a3f304312210559073c06a02f788"},"ui_type":"0","sys_update_name":"sys_ui_script_697dbb80c3da9d10be13544c1840ddd6","sys_updated_by":"admin","sys_created_on":"2022-09-28 06:43:23","name":"CloneController","sys_name":"CloneController","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"1","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2020-12-05 12:24:00","sys_tags":"","script_name":"tooltip_overflow","script":"angular.module(\"sn.chg_model_ui.tooltip_overflow\", [])\n\t.directive(\"showTooltipOnTextOverflow\", [function() {\n\t\treturn {\n\t\t\trestrict: \"A\",\n\t\t\tlink: function(scope, element, attrs) {\n\t\t\t\tvar elem = element[0];\n\t\t\t\tscope.$watch(\n\t\t\t\t\tfunction() {\n\t\t\t\t\t\treturn elem.scrollWidth;\n\t\t\t\t\t},\n\t\t\t\t\tfunction() {\n\t\t\t\t\t\tvar firstElem = element[0];\n\t\t\t\t\t\tif (firstElem.offsetWidth < firstElem.scrollWidth || firstElem.offsetHeight < firstElem.scrollHeight)\n\t\t\t\t\t\t\tattrs.tooltipEnable = \"true\";\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\t}]);","sys_class_name":"sys_ui_script","sys_id":"6a650afc53d350100999ddeeff7b12b9","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/bb9f15345332101034d1ddeeff7b12c8","value":"bb9f15345332101034d1ddeeff7b12c8"},"ui_type":"0","sys_update_name":"sys_ui_script_6a650afc53d350100999ddeeff7b12b9","sys_updated_by":"admin","sys_created_on":"2020-09-14 14:12:00","name":"sn_chg_model_ui.tooltip_overflow","sys_name":"sn_chg_model_ui.tooltip_overflow","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/bb9f15345332101034d1ddeeff7b12c8","value":"bb9f15345332101034d1ddeeff7b12c8"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"14","active":"true","description":"","use_scoped_format":"true","global":"false","sys_updated_on":"2023-09-16 14:08:18","sys_tags":"","script_name":"FieldsBasedOnAutomateActualHandler","script":"var sn_gf = sn_gf || {};\n\nsn_gf.FieldsBasedOnAutomateActualHandler = (function() {\n    \"use strict\";\n\n    return {\n        setTargetFields: function(readOnly) {\n            if (g_form.getValue(\"check_in_frequency\") == '')\n                g_form.setReadOnly(\"actual_value\", readOnly);\n            g_form.setMandatory(\"check_in_frequency\", readOnly);\n            if (readOnly || g_form.getValue(\"actual_value\")) {\n                g_form.setMandatory(\"base_value\", true);\n                g_form.setMandatory(\"target_value\", true);\n                g_form.setMandatory(\"measure\", true);\n            } else {\n                g_form.setMandatory(\"measure\", !!(g_form.getValue(\"base_value\") || g_form.getValue(\"target_value\")));\n                g_form.setMandatory(\"base_value\", false);\n                if (g_form.getValue(\"check_in_frequency\") == '')\n                    g_form.setMandatory(\"target_value\", false);\n            }\n        },\n        type: \"FieldsBasedOnAutomateActualHandler\"\n    };\n})();","sys_class_name":"sys_ui_script","sys_id":"6ba2f97577301110114329354f5a99ed","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/11879041532030103913ddeeff7b12d8","value":"11879041532030103913ddeeff7b12d8"},"ui_type":"0","sys_update_name":"sys_ui_script_6ba2f97577301110114329354f5a99ed","sys_updated_by":"admin","sys_created_on":"2022-07-20 17:32:34","name":"sn_gf.FieldsBasedOnAutomateActualHandler","sys_name":"sn_gf.FieldsBasedOnAutomateActualHandler","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/11879041532030103913ddeeff7b12d8","value":"11879041532030103913ddeeff7b12d8"},"sys_created_by":"maint","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"3","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2020-04-06 15:24:11","sys_tags":"","script_name":"","script":"function openNextAvailableTime() {\n    var changeSysId = g_form.getUniqueValue();\n    var dialogClass = GlideModal;\n    var template = '<div id=\"#{HTML:id}\" tabindex=\"-1\" style=\"visibility: hidden;\"' +\n        'aria-hidden=\"true\" class=\"modal\" role=\"dialog\" ' +\n        'aria-labelledby=\"#{HTML:id}_title\" data-readonly=\"#{HTML:readOnly}\" data-has-help=\"#{HTML:showHelp}\" focus-escape=\"#{HTML:focusEscape}\" data-auto-focus=\"#{HTML:autoFocus}\">' +\n        '\t<div class=\"modal-dialog #{size}\">' +\n        '\t\t<div class=\"modal-content\">' +\n        '\t\t\t<div class=\"modal-body container-fluid\" style=\"overflow: hidden; height: 260px;\"></div>' +\n        '\t\t</div>' +\n        '\t</div>' +\n        '\t<i class=\"focus-trap-boundary-south\" tabindex=\"0\"></i>' +\n        '</div>';\n    var nextAvailableDialog = new dialogClass(\"chg_next_available_time\", false, 400, 400);\n    nextAvailableDialog.template = template;\n    nextAvailableDialog.on(\"closeconfirm\", function() {\n        setTimeout(function() {\n            if (window.g_scratchpad.next_available_time.start_date && window.g_scratchpad.next_available_time.end_date) {\n                g_form.setValue(\"start_date\", window.g_scratchpad.next_available_time.start_date);\n                g_form.setValue(\"end_date\", window.g_scratchpad.next_available_time.end_date);\n            }\n        });\n    });\n    nextAvailableDialog.setPreference('focusTrap', true);\n    nextAvailableDialog.setTitle(new GwtMessage().getMessage(\"Next Available Time\"));\n    nextAvailableDialog.renderIframe(\"chg_next_available_time.do?sysparm_stack=no&sysparm_changeId=\" + changeSysId, function() {\n        window.g_scratchpad.next_available_time = {};\n        $j(\"#chg_next_available_time\").css({\n            visibility: \"visible\"\n        });\n        $j(\"#chg_next_available_time iframe\").css({\n            overflow: \"hidden\"\n        });\n    });\n}","sys_class_name":"sys_ui_script","sys_id":"6bfa41ed732023008ef62d2b04f6a77b","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/d00ba33304352210559073c06a02f77e","value":"d00ba33304352210559073c06a02f77e"},"ui_type":"0","sys_update_name":"sys_ui_script_6bfa41ed732023008ef62d2b04f6a77b","sys_updated_by":"admin","sys_created_on":"2018-09-14 12:26:06","name":"FormNextAvailableTime","sys_name":"FormNextAvailableTime","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"44","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2020-09-15 09:22:01","sys_tags":"","script_name":"","script":"(function(sncStdChg) {\n\n\tvar _MODIFY_RP_CR_LABEL = 'label_IO:b548bf8d9f6002002920bde8132e7039';\n\tvar _NEW_RP_CR_LABEL = 'label_IO:9fb19f3b9fb002002920bde8132e70dd';\n\n\t//prepare a name , value array from encodedQuery\n\tfunction parseEncodedQuery(query) {\n\t\tif (query) {\n\t\t\tquery = query.trim();\n\t\t\tvar attributeList = query.split('^');\n\t\t\tvar parsedAttributeNames = [];\n\t\t\tvar parsedAttributeVals = [];\n\t\t\tfor (var i = 0; attributeList && i < attributeList.length; i++) {\n\t\t\t\tvar firstIndex = attributeList[i].indexOf('=');\n\t\t\t\tif (firstIndex > -1) {\n\t\t\t\t\tparsedAttributeNames.push(attributeList[i].substring(0, firstIndex));\n\t\t\t\t\tparsedAttributeVals.push(attributeList[i].substring(firstIndex + 1).trim());\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {names: parsedAttributeNames, vals: parsedAttributeVals};\n\t\t}\n\t\treturn;\n\t}\n\n\tfunction validateTemplateValue(templateValue) {\n\t\tvar stdChgUtils = new GlideAjax(\"StdChangeUtils\");\n\t\tstdChgUtils.addParam(\"sysparm_name\", \"validateTemplateValue\");\n\t\tstdChgUtils.addParam(\"sysparm_template_value\", templateValue);\n\t\tstdChgUtils.getXMLAnswer(checkTemplateValidationResult);\n\t}\n\n\tfunction checkTemplateValidationResult(validationResultJSON) {\n\t\tvar validationResult = JSON.parse(validationResultJSON);\n\n\t\tif (validationResult.validationPassed + \"\" === \"true\" || validationResult.errorMsgs.length === 0)\n\t\t\tprogressFormSubmit(sncStdChg.cartParam, sncStdChg.templateValue);\n\t\telse\n\t\t\talert(validationResult.errorMsgs.join(\"\\n\\n\"));\n\t}\n\n\tfunction containsName(arr, what) {\n\t\tfor (var i = 0; i < arr.length; i++) {\n\t\t\tif (arr[i].name == what)\n\t\t\t\treturn i;\n\t\t}\n\t\treturn -1;\n\t}\n\t//function to check if restricted fields are set\n\tfunction checkRestrictedFields(q) {\n\t\tvar attemptedSet = ' ';\n\t\tvar unmodifiable = sncStdChg.unmodifiable;\n\t\tif (q && unmodifiable) {\n\t\t\tfor (var i = 0; i < q.names.length; i++) {\n\t\t\t\tvar f = q.names[i];\n\t\t\t\tvar idx = containsName(unmodifiable, f);\n\t\t\t\tif (idx !== -1)\n\t\t\t\t\tattemptedSet = attemptedSet + unmodifiable[idx].label + ', ';\n\t\t\t}\n\t\t}\n\t\tif (attemptedSet !== ' ') {\n\t\t\tvar msg = formatMessage(getMessage('The following \"Change Request values\" are not allowed to be set in a template:{0}'), attemptedSet.substring(0, attemptedSet.length - 2));\n\t\t\talert(msg);\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\tfunction isMandatoryFieldsSet(q) {\n\t\tvar unfilledValues = ' ';\n\t\tvar mandatory = sncStdChg.mandatory;\n\t\tif (mandatory) {\n\t\t\tfor (var i = 0; i < mandatory.length; i++) {\n\t\t\t\tvar m = mandatory[i];\n\t\t\t\tif (q) {\n\t\t\t\t\tvar idx = q.names.indexOf(m.name);\n\t\t\t\t\tif (idx === -1 || q.vals[idx] === '')\n\t\t\t\t\t\tunfilledValues = unfilledValues + m.label + ', ';\n\t\t\t\t} else {\n\t\t\t\t\tunfilledValues = unfilledValues + m.label + ', ';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (unfilledValues !== ' ') {\n\t\t\tvar msg = formatMessage(getMessage('\"Change Request values\" have not been provided:{0}'), unfilledValues.substring(0, unfilledValues.length - 2));\n\t\t\talert(msg);\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\tfunction defaultTemplateValue() {\n\t\t//processFields is defined in std_chg_template_handler\n\t\tif(sncStdChg.orig_templ_values) {\n\t\t\tprocessFields(sncStdChg.orig_templ_values);\n\t\t} else {\n\t\t\tprocessFields(sncStdChg.default_values);\n\t\t}\n\t}\n\tfunction setRequiredMarkerForRP() {\n\t\tvar label = gel(_MODIFY_RP_CR_LABEL) || gel(_NEW_RP_CR_LABEL);\n\t\tif(label && sncStdChg.mandatory && sncStdChg.mandatory.length>0) {\n\t\t\tlabel.className = label.className + ' is-required';\n\t\t}\n\t}\n\tfunction standardChangeHiddenVars() {\n\t\tg_form.setDisplay('variables.template_value', false);\n\t\tg_form.setDisplay('variables.state', false);\n\t}\n\tfunction progressFormSubmit(cartParam, finalEncodedQuery) {\n\t\ttry {\n\t\t\t//this field is set in sample change macro\n\t\t\tif (sncSampleChangesPlaceHolder) {\n\t\t\t\tg_form.setValue('variables.change_requests', gel(sncSampleChangesPlaceHolder)\n\t\t\t\t\t.value);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// This is needed as sample change is optional and macro is\n\t\t\t// not rendered in case of modify producer\n\t\t\tif (e instanceof ReferenceError) {\n\t\t\t\t; //noop\n\t\t\t}\n\t\t}\n\t\tg_form.setValue('variables.template_value', finalEncodedQuery);\n\t\tsaveProducer(cartParam);\n\t}\n\t/* Used by submit actions in produce_button.xml */\n\twindow.submitStdChgProposalInNew = function submitStdChgProposalInNew(cartParam) {\n\t\tvar e = gel('submit_button_std_chg_new');\n\t\tif (hasClassName(e, 'disabled')) {\n\t\t\treturn;\n\t\t}\n\t\tg_form.setValue('variables.state', '1');\n\t\t//interpretQuery is defined in std_chg_template_handler\n\t\tvar finalEncodedQuery = interpretQuery();\n\t\tprogressFormSubmit(cartParam,finalEncodedQuery);\n\t};\n\twindow.submitStdChgProposal = function submitStdChgProposal(cartParam) {\n\t\tvar e = gel('submit_button_std_chg_approval');\n\t\tif (hasClassName(e, 'disabled')) {\n\t\t\treturn;\n\t\t}\n\t\tg_form.setValue('variables.state', '2');\n\t\t//interpretQuery is defined in std_chg_template_handler\n\t\tvar finalEncodedQuery = interpretQuery();\n\t\tsncStdChg.templateValue = finalEncodedQuery;\n\t\tsncStdChg.cartParam = cartParam;\n\t\tvalidateTemplateValue(finalEncodedQuery);\n\t};\n\t/* End used by submit actions in produce_button.xml */\n\n\taddRenderEvent(function() {\n\t\tstandardChangeHiddenVars();\n\t\tsetRequiredMarkerForRP();\n\t\tdefaultTemplateValue();\n\t});\n\n}(g_sncStdChg));","sys_class_name":"sys_ui_script","sys_id":"6cc2d80cff810200b18afffffffffff5","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/b80be33304352210559073c06a02f76b","value":"b80be33304352210559073c06a02f76b"},"ui_type":"0","sys_update_name":"sys_ui_script_6cc2d80cff810200b18afffffffffff5","sys_updated_by":"admin","sys_created_on":"2015-06-29 12:04:57","name":"StdChgProposalRPScript","sys_name":"StdChgProposalRPScript","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":"read"},{"ignore_in_now_experience":"false","sys_mod_count":"5","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2022-08-16 13:42:07","sys_tags":"","script_name":"","script":"function getUrl(mode) {\n\tvar changeSysId = g_form.getUniqueValue();\n\tvar urlSuffix = \"?sysparm_nostack=true&sysparm_chg_id=\" + changeSysId + \"&sysparm_ck=\" + g_form.getValue('sysparm_ck') + \"&sysparm_mode=\" + mode;\n\tif (mode === \"modal\")\n\t\treturn \"/change_risk_details_app.do\" + urlSuffix;\n\treturn \"/change_risk_details_page.do\" + urlSuffix;\n}\n\nfunction toggleRiskDetails(evt) {\n\tevt = evt || window.event;\n\tvar popup = nowapi.g_popup_manager;\n\tpopup.showPopup(evt, getUrl(\"popover\"), { trapFocus: true, \"width\": \"100%\"});\n}\n\nfunction openRiskDetails() {\n\tvar title = new GwtMessage().getMessage(\"Risk Details\");\n\tvar dialogClass = GlideModal;\n\tvar template = '<div id=\"#{HTML:id}\" tabindex=\"-1\" style=\"visibility: hidden;\"' +\n\t\t'aria-hidden=\"true\" class=\"modal\" role=\"dialog\" ' +\n\t\t'aria-label=\"' + title + '\" data-readonly=\"#{HTML:readOnly}\" data-has-help=\"#{HTML:showHelp}\" focus-escape=\"#{HTML:focusEscape}\" data-auto-focus=\"#{HTML:autoFocus}\">' +\n\t\t'\t<div class=\"modal-dialog #{size}\">' +\n\t\t'\t\t<div class=\"modal-content\">' +\n\t\t'\t\t\t<div class=\"modal-body container-fluid\" style=\"overflow: hidden; height: 260px;\"></div>' +\n\t\t'\t\t</div>' +\n\t\t'\t</div>' +\n\t\t'\t<i class=\"focus-trap-boundary-south\" tabindex=\"0\"></i>' +\n\t\t'</div>';\n\tvar riskDetailsDialog = new dialogClass(\"chg_risk_details\", false, 400, 400);\n\triskDetailsDialog.template = template;\n\triskDetailsDialog.setPreference('focusTrap', true);\n\triskDetailsDialog.setTitle(title);\n\triskDetailsDialog.renderIframe(getUrl(\"modal\"), function() {\n\t\twindow.g_scratchpad.next_available_time = {};\n\t\t$j(\"#chg_risk_details\").css({\n\t\t\tvisibility: \"visible\"\n\t\t});\n\t\t$j(\"#chg_risk_details iframe\").css({\n\t\t\toverflow: \"hidden\"\n\t\t});\n\t});\n}","sys_class_name":"sys_ui_script","sys_id":"6ef584c5c300101035ae3f52c1d3ae5e","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/32b7af7f04b12210559073c06a02f7fb","value":"32b7af7f04b12210559073c06a02f7fb"},"ui_type":"10","sys_update_name":"sys_ui_script_6ef584c5c300101035ae3f52c1d3ae5e","sys_updated_by":"admin","sys_created_on":"2020-04-06 10:17:01","name":"RiskAssessmentResults","sys_name":"RiskAssessmentResults","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"221","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2025-06-05 05:18:18","sys_tags":"","script_name":"","script":"var AddRelationship = Class.create();\n\nAddRelationship.prototype = {\n\n\tinitialize: function(item_id, changeset_id, propose_change) {\n\t\tthis.changeset_id = changeset_id;\n\t\tthis.propose_change = propose_change;\n\t\tthis.is_proposed_save = (this.changeset_id && (this.propose_change == 'true'));\n\t\tthis.item_id = item_id;\n\t\tthis.select = gel('available_select');\n\t\tthis.slush = gel('relationship_slushbucket');\n\t\tthis.ok_button = gel('select_0_ok_button');\n\t\tthis.apply_button = gel('apply_button');\n\t\tthis.cancel_button = gel('select_0_cancel_button');\n\t\tthis.loading = gel('loading_span');\n\t\tthis.hide_ci = gel('hide_ci_relationships');\n\t\tthis.hide_user = gel('hide_user_relationships');\n\t\tthis.hide_group = gel('hide_group_relationships');\n\t\tthis.show_all = gel('show_all_relationships');\n\t\tthis.no_rel_possible = gel('no_rel_possible');\n\t\tthis.slushMode = 'cmdb_ci';\n\t\tthis.madeChanges = false;\n\t\tthis.dirty = false;\n\t\tthis.selectedIndex = 0;\n\t\tthis.NAVIGATE_AWAY_MESSAGE = new GwtMessage().getMessage(\"Press OK to discard your changes. Press Cancel to stay here.\");\n\t\tthis.NON_CI_PROPOSED_REL_MESSAGE = new GwtMessage().getMessage(\"Cannot Propose Changes for User or Group Relationships\");\n\t\tthis.filter_td = gel('select_0_filter_td');\n\t\tthis.filter_cmdb_ci = gel('filteron.cmdb_ci');\n\t\tthis.filter_sys_user = gel('filteron.sys_user');\n\t\tthis.filter_sys_user_group = gel('filteron.sys_user_group');\n\t\tthis.left_select = gel('select_0');\n\t},\n\n\tinit: function() {\n\t\tthis.loadSelect();\n\t\tthis.select.onchange = this._relationShipSelected.bindAsEventListener(this);\n\t\tif (this.apply_button)\n\t\t\tthis.apply_button.onclick = this._saveRelationships.bindAsEventListener(this);\n\t\tif (this.ok_button)\n\t\t\tthis.ok_button.onclick = this._saveRelationshipsAndExit.bindAsEventListener(this);\n\t\tif (this.cancel_button)\n\t\t\tthis.cancel_button.onclick = this._close.bindAsEventListener(this);\n\t\tthis.hide_ci.onclick = this._applySelectFilter.bindAsEventListener(this);\n\t\tthis.hide_user.onclick = this._applySelectFilter.bindAsEventListener(this);\n\t\tthis.hide_group.onclick = this._applySelectFilter.bindAsEventListener(this);\n\t\tif (this.show_all)\n\t\t\tthis.show_all.onclick = this._applySelectFilter.bindAsEventListener(this);\n\t\tthis.filter_cmdb_ci.onchange = this._applyQuickFilter.bindAsEventListener(this);\n\t\tthis.filter_sys_user.onchange = this._applyQuickFilter.bindAsEventListener(this);\n\t\tthis.filter_sys_user_group.onchange = this._applyQuickFilter.bindAsEventListener(this);\n\t},\n\n\tdestroy: function() {\n\t\tthis.select = null;\n\t\tthis.slush = null;\n\t\tthis.ok_button = null;\n\t\tthis.apply_button = null;\n\t\tthis.cancel_button = null;\n\t\tthis.loading = null;\n\t\tthis.show_ci = null;\n\t\tthis.show_user = null;\n\t\tthis.show_group = null;\n\t\tthis.show_all = null;\n\t\tthis.no_rel_possible = null;\n\t\tthis.original = null;\n\n\t\tthis.filter_td = null;\n\t\tthis.filter_cmdb_ci = null;\n\t\tthis.filter_sys_user = null;\n\t\tthis.filter_sys_user_group = null;\n\t\tthis.left_select = null;\n\t},\n\n\t_applySelectFilter: function(e) {\n\t\tvar ci = !this.hide_ci.checked;\n\t\tvar user = !this.hide_user.checked;\n\t\tvar group = !this.hide_group.checked;\n\t\tvar all = false;\n\t\tif (this.show_all)\n\t\t\tall = this.show_all.checked;\n\t\tthis.select.options.length = 0;\n\t\tfor (var i = 0; i < this.original.length; i++) {\n\t\t\tvar o = this.original[i];\n\t\t\tvar add = false;\n\t\t\tif (o.value.indexOf(':sys_user:') >= 0)\n\t\t\t\tadd = user;\n\t\t\telse if (o.value.indexOf(':sys_user_group:') >= 0)\n\t\t\t\tadd = group;\n\t\t\telse\n\t\t\t\tadd = ci;\n\n\t\t\tif (add)\n\t\t\t\tadd = all || (o.getAttribute('gsft_suggested') == 'true');\n\n\t\t\tif (!add)\n\t\t\t\tcontinue;\n\n\t\t\tvar oNew = addOption(this.select, o.value, o.text, false);\n\t\t\toNew.setAttribute('gsft_label', o.getAttribute('gsft_label'));\n\t\t}\n\n\t\tthis._selectFirst();\n\t},\n\n\t_applyQuickFilter: function(e) {\n\t\tvar filter = this._quickFilter();\n\n\t\tvar oldSQL = g_filter.gsft_SQL;\n\t\tif (!oldSQL)\n\t\t\toldSQL = '';\n\n\t\tvar set_sql = oldSQL + '^' + filter;\n\t\tthis._setFilterAndResize(set_sql, oldSQL);\n\t},\n\n\t_quickFilter: function() {\n\t\tvar filter = '';\n\t\tif (this.slushMode == 'cmdb_ci')\n\t\t\tfilter = this.filter_cmdb_ci.value;\n\t\telse if (this.slushMode == 'sys_user')\n\t\t\tfilter = this.filter_sys_user.value;\n\t\telse if (this.slushMode == 'sys_user_group')\n\t\t\tfilter = this.filter_sys_user_group.value;\n\n\t\treturn filter;\n\t},\n\n\t_selectFirst: function() {\n\t\tif (this.select.options.length == 0) {\n\t\t\tthis.slush.style.display = 'none';\n\t\t\tthis.no_rel_possible.style.display = '';\n\t\t} else {\n\t\t\tthis.slush.style.display = '';\n\t\t\tthis.no_rel_possible.style.display = 'none';\n\t\t\tthis.select.options[0].selected = true;\n\t\t\tthis._relationShipSelected();\n\t\t}\n\t},\n\n\t_setLabel: function() {\n\t\tvar type = 'CIs';\n\t\tif (this.slushMode == 'sys_user')\n\t\t\ttype = 'Users';\n\t\telse if (this.slushMode == 'sys_user_group')\n\t\t\ttype = 'Groups';\n\t\tvar label = $$('[for=select_1]')[0];\n\t\tvar name = gel('item_name').value;\n\t\tlabel.innerHTML = name + ' ' + this.select[this.select.selectedIndex].getAttribute('gsft_label') + ' these ' + type;\n\t\tvar label2 = $$('[for=select_0]')[0];\n\t\tlabel2.innerHTML = 'Available ' + type;\n\t},\n\n\tloadSelect: function() {\n\t\tvar ajax = new GlideAjax(\"AddRelationshipAjax\");\n\t\tajax.addParam(\"sysparm_type\", \"getRelationships\");\n\t\tajax.addParam(\"sysparm_value\", this.item_id);\n\t\tajax.getXML(this.getRelationshipsResponse.bind(this));\n\t},\n\n\t_saveRelationshipsAndExit: function(e) {\n\t\tif (!this.dirty) {\n\t\t\tthis._close(e);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.madeChanges = true;\n\t\tvar ajax;\n\t\tif (this.is_proposed_save) {\n\t\t\tif (!this._isNotCIRelationship(this.select.value)) {\n\t\t\t\tajax = new GlideAjax(\"AddRelationshipAjax\");\n\t\t\t\tajax.addParam(\"sysparm_type\", \"save_proposed_changes\");\n\t\t\t\tajax.addParam(\"sysparm_changeset\", this.changeset_id);\n\t\t\t\tajax.addParam(\"sysparm_name\", this.item_id);\n\t\t\t\tajax.addParam(\"sysparm_value\", this.select.value);\n\t\t\t\tajax.addParam(\"sysparm_chars\", this._serializeSelect());\n\t\t\t\t//PRB631393\n\t\t\t\tajax.setWantSessionMessages(false);\n\t\t\t\tajax.getXML(this._close.bind(this));\n\t\t\t}\n\t\t} else {\n\t\t\tajax = new GlideAjax(\"AddRelationshipAjax\");\n\t\t\tajax.addParam(\"sysparm_type\", \"save\");\n\t\t\tajax.addParam(\"sysparm_name\", this.item_id);\n\t\t\tajax.addParam(\"sysparm_value\", this.select.value);\n\t\t\tajax.addParam(\"sysparm_chars\", this._serializeSelect());\n\t\t\t//PRB631393\n\t\t\tajax.setWantSessionMessages(false);\n\t\t\tajax.getXML(this._close.bind(this));\n\t\t}\n\t},\n\n\t_isNotCIRelationship: function(relationshipId) {\n\t\tvar relSplit = relationshipId.split(':');\n\t\treturn (relSplit.length == 3);\n\t},\n\n\t_setApply: function() {\n\t\tif (this.apply_button) {\n\t\t\tthis.apply_button.disabled = !this.dirty;\n\n\t\t\tif (this.apply_button.disabled)\n\t\t\t\taddClassName(this.apply_button, 'disabled');\n\t\t\telse\n\t\t\t\tremoveClassName(this.apply_button, 'disabled');\n\n\t\t}\n\t},\n\n\t_saveRelationships: function(e) {\n\t\tif (!this.dirty)\n\t\t\treturn;\n\n\t\tthis.madeChanges = true;\n\t\tvar ajax;\n\t\tif (this.is_proposed_save) {\n\t\t\tif (!this._isNotCIRelationship(this.select.value)) {\n\t\t\t\tajax = new GlideAjax(\"AddRelationshipAjax\");\n\t\t\t\tajax.addParam(\"sysparm_type\", \"save_proposed_changes\");\n\t\t\t\tajax.addParam(\"sysparm_changeset\", this.changeset_id);\n\t\t\t\tajax.addParam(\"sysparm_name\", this.item_id);\n\t\t\t\tajax.addParam(\"sysparm_value\", this.select.value);\n\t\t\t\tajax.addParam(\"sysparm_chars\", this._serializeSelect());\n\t\t\t\t//PRB631393\n\t\t\t\tajax.setWantSessionMessages(false);\n\t\t\t\tajax.getXML(this._saveRelationshipsResponse.bind(this));\n\t\t\t}\n\t\t} else {\n\t\t\tajax = new GlideAjax(\"AddRelationshipAjax\");\n\t\t\tajax.addParam(\"sysparm_type\", \"save\");\n\t\t\tajax.addParam(\"sysparm_name\", this.item_id);\n\t\t\tajax.addParam(\"sysparm_value\", this.select.value);\n\t\t\tajax.addParam(\"sysparm_chars\", this._serializeSelect());\n\t\t\t//PRB631393\n\t\t\tajax.setWantSessionMessages(false);\n\t\t\tajax.getXML(this._saveRelationshipsResponse.bind(this));\n\t\t}\n\t},\n\n\t_close: function(e) {\n\t\tvar dlg = document.getElementById(\"FormDialog\");\n\t\tif (dlg)\n\t\t\tdlg.gWindow.destroy();\n\t\telse\n\t\t\thistory.go(-1);\n\t},\n\n\t_saveRelationshipsResponse: function(e) {\n\t\tvar responseText = (this.is_proposed_save) ? new GwtMessage().getMessage('Saved Proposed Relationships') : new GwtMessage().getMessage('Relationships saved');\n\n\t\tthis._showMessage(responseText);\n\t\tthis._asLoaded = new Array();\n\t\tvar options = gel('select_1').options;\n\t\tfor (var i = 0; i < options.length; i++) {\n\t\t\tvar opt = options[i];\n\t\t\tvar v = opt.value;\n\t\t\tthis._asLoaded.push(v);\n\t\t}\n\n\t\tthis.dirty = false;\n\t\tthis.madeChanges = true;\n\t\tthis._setApply();\n\t},\n\n\t_serializeSelect: function() {\n\t\tvar options = gel('select_1').options;\n\t\tvar answer = '';\n\t\tfor (var i = 0; i < options.length; i++) {\n\t\t\tvar opt = options[i];\n\t\t\tvar v = opt.value;\n\t\t\tif (i > 0)\n\t\t\t\tanswer += ',';\n\t\t\tanswer += v;\n\t\t}\n\t\treturn answer;\n\t},\n\n\tgetRelationshipsResponse: function(response) {\n\t\tvar xml = response.responseXML;\n\t\tvar e = xml.documentElement;\n\t\tvar items = xml.getElementsByTagName(\"item\");\n\t\tif (items.length == 0)\n\t\t\treturn;\n\n\t\tvar select = this.select;\n\t\tif (!select)\n\t\t\treturn;\n\n\t\tthis.original = new Array();\n\n\t\t// Remove any existing options\n\t\tselect.options.length = 0;\n\t\tvar item_name = gel('item_name').value;\n\n\t\tfor (var i = 0; i < items.length; i++) {\n\t\t\tvar item = items[i];\n\t\t\tvar v = item.getAttribute('value');\n\t\t\tvar label = item.getAttribute('label');\n\t\t\tlabel = '[' + item_name + '] ' + label + ' ...';\n\t\t\tvar suggested = item.getAttribute('suggested');\n\n\t\t\tvar o = addOption(select, v, label, false);\n\t\t\to.setAttribute('gsft_label', item.getAttribute('label'));\n\t\t\to.setAttribute('gsft_suggested', suggested);\n\t\t\tthis.original.push(o);\n\t\t\tif (suggested == 'false')\n\t\t\t\tselect.options.length = select.options.length - 1;\n\t\t}\n\n\t\tthis._selectFirst();\n\t},\n\n\t_relationShipSelected: function(e) {\n\t\tif (this.dirty) {\n\t\t\tvar ok = confirm(this.NAVIGATE_AWAY_MESSAGE);\n\t\t\tif (!ok) {\n\t\t\t\tthis.select.selectedIndex = this.selectedIndex;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.left_select.options.length = 0;\n\t\tvar v = this.select.value;\n\t\tvar visible = true;\n\t\tif (v == '' || v == 'loading')\n\t\t\tvisible = false;\n\n\t\tif (visible) {\n\t\t\tthis._showLoading();\n\t\t\tthis._transformSlush();\n\t\t\tthis._loadRelationships(e);\n\t\t\tthis._showFilters();\n\t\t\tthis.selectedIndex = this.select.selectedIndex;\n\t\t} else\n\t\tthis.slush.style.display = 'none';\n\t},\n\n\t_showFilters: function() {\n\t\tvar cmdb_ci = this.slushMode == 'cmdb_ci';\n\t\tvar sys_user_group = this.slushMode == 'sys_user_group';\n\t\tvar sys_user = this.slushMode == 'sys_user';\n\n\t\tcmdb_ci ? cmdb_ci = '' : cmdb_ci = 'none';\n\t\tsys_user ? sys_user = '' : sys_user = 'none';\n\t\tsys_user_group ? sys_user_group = '' : sys_user_group = 'none';\n\n\t\tthis.filter_cmdb_ci.style.display = cmdb_ci;\n\t\tthis.filter_sys_user.style.display = sys_user;\n\t\tthis.filter_sys_user_group.style.display = sys_user_group;\n\n\t\tthis.filter_td.style.display = ''\n\t},\n\n\t_showLoading: function() {\n\t\tthis.loading.style.display = '';\n\t\tthis.slush.style.display = 'none';\n\t\tthis.slush.style.visibility = '';\n\t},\n\n\t_hideLoading: function() {\n\t\tthis.loading.style.display = 'none';\n\t\tthis.slush.style.display = '';\n\t\tthis.slush.style.visibility = '';\n\t},\n\n\t_transformSlush: function() {\n\t\tvar x = this.select.value.split(':');\n\t\tvar mode = 'cmdb_ci';\n\t\tif (x.length == 3)\n\t\t\tmode = x[1];\n\n\t\tif (this.slushMode == mode)\n\t\t\treturn; // we're already set\n\n\t\tthis.slushMode = mode;\n\t\tg_filter = new GlideFilter(mode);\n\n\t\t_getMTOMRelatedTable = new Function(\"return '\" + mode + \".1'\");\n\n\t\tvar magic_label = gel(mode + '.1');\n\t\tif (magic_label)\n\t\t\treturn;\n\n\t\tmagic_label = document.createElement(\"label\");\n\t\tmagic_label.type = \"hidden\";\n\t\tmagic_label.id = mode + \".1\";\n\t\tmagic_label.style.display = \"none\";\n\n\t\tvar om = gel('cmdb_ci.1');\n\t\tom.parentNode.appendChild(magic_label);\n\t},\n\n\t_loadRelationships: function(e) {\n\t\tvar ajax = new GlideAjax(\"AddRelationshipAjax\");\n\t\tajax.addParam(\"sysparm_type\", \"getExisting\");\n\t\tajax.addParam(\"sysparm_name\", this.item_id);\n\t\tajax.addParam(\"sysparm_value\", this.select.value);\n\t\tajax.getXML(this._getExistingResponse.bind(this));\n\t},\n\n\t_getExistingResponse: function(response) {\n\t\tvar xml = response.responseXML;\n\t\tvar e = xml.documentElement;\n\t\tvar select = gel('select_1');\n\t\tif (!select)\n\t\t\treturn;\n\n\t\tthis._loading = true;\n\t\t// Remove any existing options\n\t\tselect.options.length = 0;\n\t\tthis._asLoaded = new Array();\n\t\tvar items = xml.getElementsByTagName(\"item\");\n\n\t\tfor (var i = 0; i < items.length; i++) {\n\t\t\tvar item = items[i];\n\t\t\tthis._asLoaded.push(item.getAttribute('value'));\n\t\t\taddOption(select, item.getAttribute('value'), item.getAttribute('label'), false);\n\t\t}\n\n\t\tvar items = xml.getElementsByTagName('suggested_query');\n\t\tvar sql = '';\n\t\tif (items.length == 1)\n\t\t\tsql = items[0].getAttribute('value');\n\n\t\tvar set_sql = this._mergeSQL(sql, g_filter);\n\t\tthis._setFilterAndResize(set_sql, sql);\n\t},\n\n\t_setFilterAndResize: function(set_sql, sql) {\n\t\tg_filter.reset();\n\t\tg_filter.setQuery(set_sql);\n\t\tg_filter.gsft_SQL = sql;\n\n\t\t// resize ourselves to account\n\t\t// for the new query\n\t\tvar dlg = document.getElementById(\"FormDialog\");\n\n\t\tif (dlg)\n\t\t\tdlg.gWindow._resizeDialog();\n\n\t\tacRequest(null);\n\n\t\tthis._loading = false;\n\t\tthis.dirty = false;\n\t\tthis._setLabel();\n\t\tthis._setApply();\n\t\tthis._hideLoading();\n\t\tthis.slush.style.display = '';\n\t},\n\n\t_mergeSQL: function(newSQL, filter) {\n\t\tvar oldSQL = g_filter.gsft_SQL;\n\t\tif (!oldSQL || oldSQL == '^')\n\t\t\toldSQL = '';\n\n\t\tvar currentSQL = getFilter(); // see ac.js\n\t\tif (currentSQL)\n\t\t\tcurrentSQL = currentSQL.substring(0, currentSQL.length - 3); // strip the trailing ^EQ\n\n\t\tif (currentSQL.indexOf(oldSQL) < 0)\n\t\t\treturn currentSQL;\n\n\t\tvar filter = this._quickFilter();\n\t\tif (filter)\n\t\t\tfilter = filter.substring(0, filter.length - 3); // strip the trailing ^EQ\n\n\t\tif (oldSQL == '')\n\t\t\treturn currentSQL + '^' + newSQL + '^' + filter;\n\n\t\tvar l = currentSQL.indexOf(oldSQL);\n\t\tvar answer = currentSQL.substring(0, l); // quite possibly 0 characters\n\t\tanswer += newSQL;\n\t\tanswer += currentSQL.substring(l + oldSQL.length);\n\t\tif (answer.indexOf(filter) == -1)\n\t\t\tanswer += '^' + filter;\n\n\t\treturn answer;\n\t},\n\n\tselChange: function() {\n\t\tif (this._loading)\n\t\t\treturn;\n\n\t\tvar select = gel('select_1');\n\t\tif (!select)\n\t\t\treturn;\n\n\t\tif (!this._asLoaded)\n\t\t\treturn;\n\n\t\tvar newRel = new Array();\n\t\tvar missingRel = this._asLoaded.slice(); // clone our old array\n\n\t\tvar options = select.options;\n\t\tfor (var i = 0; i < options.length; i++) {\n\t\t\tvar opt = options[i];\n\t\t\tvar v = opt.value;\n\t\t\tif (v == '')\n\t\t\t\tcontinue;\n\n\t\t\tvar match = false;\n\t\t\tfor (var j = 0; j < missingRel.length; j++) {\n\t\t\t\tif (missingRel[j] != v)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tmatch = true;\n\t\t\t\tmissingRel.splice(j, 1);\n\t\t\t}\n\t\t\tif (!match)\n\t\t\t\tnewRel.push(v);\n\t\t}\n\n\t\tvar isProposedNonCIRelationship = (this._isNotCIRelationship(this.select.value) && this.is_proposed_save);\n\t\tif (isProposedNonCIRelationship && this.ok_button) {\n\t\t\t// Disable Ok button\n\t\t\tthis.ok_button.disabled = true;\n\t\t\taddClassName(this.ok_button, 'disabled');\n\t\t} else if (this.ok_button) {\n\t\t\t// Enable Ok button\n\t\t\tthis.ok_button.disabled = false;\n\t\t\tremoveClassName(this.ok_button, 'disabled');\n\t\t}\n\n\t\tvar msg = '';\n\t\tvar gwt = new GwtMessage();\n\t\tif (newRel.length == 0 && missingRel.length == 0) {\n\t\t\tmsg = (isProposedNonCIRelationship) ? this.NON_CI_PROPOSED_REL_MESSAGE : '';\n\t\t\tthis._showMessage(msg);\n\t\t\tthis.dirty = false;\n\t\t\treturn;\n\t\t}\n\n\t\tthis.dirty = true;\n\n\t\tif (newRel.length > 0) {\n\t\t\tif (missingRel.length > 0)\n\t\t\t\tmsg = formatMessage(gwt.getMessage('Pending addition of {0} new relationships and removal {1} old ones'), newRel.length, missingRel.length);\n\t\t\telse\n\t\t\t\tmsg = formatMessage(gwt.getMessage('Pending addition of {0} new relationships'), newRel.length);\n\t\t} else\n\t\tmsg = formatMessage(gwt.getMessage('Pending removal of {0} old relationships'), missingRel.length);\n\n\t\tif (isProposedNonCIRelationship) {\n\t\t\tthis.dirty = false;\n\t\t\tmsg = this.NON_CI_PROPOSED_REL_MESSAGE;\n\t\t}\n\n\t\tthis._showMessage(msg);\n\t\tthis._setApply();\n\n\t},\n\n\t_showMessage: function(msg) {\n\t\tvar rel_msg = gel('rel_changed');\n\t\tif (!msg) {\n\t\t\trel_msg.style.visibility = 'hidden';\n\t\t} else {\n\t\t\trel_msg.innerHTML = msg;\n\t\t\trel_msg.style.visibility = '';\n\t\t}\n\t}\n}","sys_class_name":"sys_ui_script","sys_id":"6fa94bff0a0a0b44000f52b37abd4cb5","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/6535677304712210559073c06a02f74f","value":"6535677304712210559073c06a02f74f"},"ui_type":"0","sys_update_name":"sys_ui_script_6fa94bff0a0a0b44000f52b37abd4cb5","sys_updated_by":"system","sys_created_on":"2008-07-29 16:33:18","name":"AddRelationship","sys_name":"AddRelationship","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"glide.maint","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"27","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2020-09-04 15:04:17","sys_tags":"","script_name":"change_soc","script":"angular.module(\"sn.chg_soc.change_soc\", [\n        \"ngAria\",\n        \"sn.common\",\n        \"sn.common.glide\",\n        \"sn.angularstrap\",\n        \"sn.chg_soc.accessibility\",\n        \"sn.chg_soc.tooltip_overflow\",\n        \"sn.chg_soc.notification\",\n        \"sn.chg_soc.mousedown\",\n        \"sn.chg_soc.gantt\",\n        \"sn.chg_soc.data\",\n        \"sn.chg_soc.style\",\n        \"sn.chg_soc.config\",\n        \"sn.chg_soc.share\",\n        \"sn.chg_soc.landing_wizard\",\n        \"sn.chg_soc.context_menu\",\n        \"sn.chg_soc.snCreateNewInvite\",\n        \"sn.chg_soc.keyboard\",\n        \"sn.chg_soc.popover\",\n        \"sn.chg_soc.duration\",\n        \"sn.app_itsm.now.filter\",\n        \"sn.chg_soc.filter_control\",\n        \"sn.chg_soc.loading\",\n        \"sn.itsm.change.overflow\"\n    ])\n    .constant(\"SOC\", {\n        BLACKOUT: \"blackout\",\n        BLACKOUT_SPAN_COLOR: \"#BDC0C4\",\n        CHANGE_REQUEST: \"change_request\",\n        DATE_FORMAT: \"%Y-%m-%d %H:%i:%s\",\n        GET_CHANGE_SCHEDULE: \"/api/sn_chg_soc/soc/changeschedule/\",\n        GET_PARSE_QUERY: \"/api/now/ui/query_parse/change_request?sysparm_query=\",\n        ISO_WEEK: \"isoWeek\",\n        MAINT: \"maint\",\n        MAINT_SPAN_COLOR: \"#BDDCFC\",\n        STYLE_PREFIX: \"soc_\",\n        SYSPARM_ID: \"sysparm_id\",\n        ZOOM_LEVEL_PREF: \"sn_chg_soc.change_soc_zoom_level\",\n        COLUMN: {\n            CONFIG_ITEM: \"config_item\",\n            DURATION: \"duration\",\n            NUMBER: \"number\"\n        },\n        STYLE_CLASS_MAP: {\n            soc_event_bar: \"soc-event-bar\",\n            soc_row_child: \"soc-row-child\",\n            soc_row_child_end: \"soc-row-child-end\",\n            soc_row_child_start: \"soc-row-child-start\",\n            soc_row_child_single: \"soc-row-child-single\"\n        },\n        KEYS: {\n            TABKEY: 9,\n            ENTER: 13,\n            ESCAPE: 27,\n            SPACE: 32,\n            LEFT_ARROW: 37,\n            UP_ARROW: 38,\n            RIGHT_ARROW: 39,\n            DOWN_ARROW: 40,\n            D: 68,\n            E: 69,\n            F: 70,\n            SLASH: 191\n        }\n    })\n    .config([\"$httpProvider\", \"$locationProvider\", function ($httpProvider, $locationProvider) {\n        $locationProvider.html5Mode({\n            enabled: true,\n            requireBase: false\n        });\n        $httpProvider.interceptors.push(\"xhrInterceptor\");\n    }])\n    .service(\"urlService\", [\"$location\", \"SOC\", function ($location, SOC) {\n        var urlService = this;\n\n        urlService.socId = $location.search()[SOC.SYSPARM_ID];\n\n        urlService.setChangeScheduleId = function () {\n            var params = $location.search();\n            urlService.socId = params[SOC.SYSPARM_ID];\n        };\n    }])\n\t.service(\"clientService\", [\"dataService\", function(dataService) {\n\t\tvar clientService = this;\n\t\t\n\t\tclientService.filter = dataService.definition;\n\t}])\n    .directive(\"changeSoc\", [\"urlService\", \"ganttChart\", \"ganttScale\", \"dataService\", \"i18n\", \"getTemplateUrl\", \"$templateRequest\", \"$templateCache\", \"$filter\", \"$compile\", \"$window\", \"SOC\", \"TextSearchService\", \"socNotification\",\n        function (urlService, ganttChart, ganttScale, dataService, i18n, getTemplateUrl, $templateRequest, $templateCache, $filter, $compile, $window, SOC, TextSearchService, socNotification) {\n            return {\n                restrict: \"A\",\n                scope: false,\n                transclude: true,\n                template: \"<div ng-transclude></div>\",\n                link: function ($scope, $element, $attrs, changeSoCCtrl) {\n                    var position = {\n                        delta: {\n                            top: 0,\n                            left: 0\n                        },\n                        original: {\n                            top: 0,\n                            left: 0\n                        }\n                    };\n                    $scope.ganttInstance = ganttChart.getInstance(urlService.socId);\n                    $scope.gantt = $scope.ganttInstance.gantt;\n\n                    // destroy all popovers when resizing the window\n                    angular.element(window).on(\"resize\", function () {\n                        angular.element(\".popover.soc-task-popover\").popover(\"destroy\");\n                        _handleDestroyPopover();\n                    });\n\n                    angular.element(window).on(\"keydown\", function ($event) {\n                        if ($event.keyCode === SOC.KEYS.ESCAPE)\n                            _handleDestroyPopover();\n                    });\n\n                    angular.element(window).on(\"click\", function ($event) {\n                        var target = getTargetElement($event);\n                        if (target === null)\n                            _handleDestroyPopover(); // Clicking outside a gantt task\n                    });\n\n                    //size of gantt\n                    $scope.$watch(function () {\n                        return $element[0].offsetWidth + \".\" + $element[0].offsetHeight;\n                    }, function () {\n                        $scope.gantt.setSizes();\n                    });\n\n                    $scope.$watch(\"dataService.definition.condition.dryRun\", function (newValue, oldValue) {\n                        if (newValue)\n                            angular.element(\".control-left .filter-btn\").addClass(\"dry-run\");\n                        else\n                            angular.element(\".control-left .filter-btn\").removeClass(\"dry-run\");\n                    });\n                    /**\n                     * Marker config\n                     */\n                    $scope.gantt.config.show_markers = true;\n\n                    /**\n                     * Column config\n                     */\n                    var msgSelectRecord = i18n.getMessage(\"Show span start\");\n                    $scope.gantt.config.columns = [{\n                            name: SOC.COLUMN.NUMBER,\n                            label: i18n.getMessage(\"Number\"),\n                            align: \"left\",\n                            tree: true,\n                            width: 160,\n                            min_width: 160,\n                            resize: true,\n                            template: function (content) {\n                                return \"<span>\" + content.number + \"</span>\" +\n                                    \"<span data-toggle='tooltip' data-trigger='hover focus click' data-container='body' data-placement='auto bottom' class='select-task icon-target'\" +\n                                    \"data-original-title='\" + msgSelectRecord + \"'\" +\n                                    \"></span>\";\n                            }\n                        },\n                        {\n                            name: SOC.COLUMN.CONFIG_ITEM,\n                            label: i18n.getMessage(\"Configuration Item\"),\n                            align: \"left\",\n                            width: 220,\n                            min_width: 220,\n                            resize: true,\n                            template: function (content) {\n                                return \"<span data-toggle='tooltip' data-trigger='hover focus click' data-container='body' data-placement='auto bottom' \" +\n                                    \"data-original-title='\" + content[SOC.COLUMN.CONFIG_ITEM] + \"'>\" +\n                                    content[SOC.COLUMN.CONFIG_ITEM] +\n                                    \"</span>\";\n                            }\n                        },\n                        {\n                            name: SOC.COLUMN.DURATION,\n                            label: i18n.getMessage(\"Duration\"),\n                            align: \"left\",\n                            width: 130,\n                            min_width: 130,\n                            template: function (content) {\n                                return content.dur_display;\n                            },\n                            resize: true\n                        }\n                    ];\n\n                    /**\n                     * Core Config\n                     */\n                    // internal date time format\n                    $scope.gantt.config.xml_date = SOC.DATE_FORMAT;\n                    // ARIA attributes\n                    $scope.gantt.config.wai_aria_attributes = true;\n                    // Keyboard navigation\n                    $scope.gantt.config.keyboard_navigation = true;\n\n                    /**\n                     * Scrolling\n                     */\n                    // Prevents scrolling gantt on load of data\n                    $scope.gantt.config.initial_scroll = false;\n\n                    $scope.gantt.showTask = function (id) {\n                        var task = this.getTask(id);\n                        var taskSize = this.getTaskPosition(task, task.start, task.end);\n                        var left = Math.max(taskSize.left - this.config.task_scroll_offset, 0);\n                        var ganttVerScrollWidth = angular.element(\".gantt_ver_scroll\").width();\n                        var ganttTaskWidth = angular.element(\".gantt_task\").width() - ganttVerScrollWidth;\n\n                        if (Math.abs(this.getScrollState().x - taskSize.left) < ganttTaskWidth && (taskSize.left + taskSize.width) > this.getScrollState().x)\n                            left = null;\n\n                        var scrollStateTop = this.getScrollState().y;\n                        var scrollStateBottom = scrollStateTop + this._scroll_sizes().y;\n                        var visibleTaskTop = taskSize.top;\n                        var visibleTaskBottom = taskSize.top + this.config.row_height;\n                        var top = null;\n\n                        if (visibleTaskTop < scrollStateTop)\n                            top = visibleTaskTop;\n                        else if (visibleTaskTop > scrollStateTop && (visibleTaskTop < scrollStateBottom && visibleTaskBottom < scrollStateBottom))\n                            top = null;\n                        else if (visibleTaskTop > scrollStateTop && visibleTaskBottom > scrollStateBottom)\n                            top = visibleTaskBottom - scrollStateBottom + scrollStateTop;\n\n                        this.scrollTo(left, top);\n                    };\n\n                    function isPopoverInViewport(el) {\n                        var visibleArea = {\n                            minWidth: angular.element(\".gantt_grid_data\").width() - 15, // 15px considering the arrow can be shifted to the right (still visible)\n                            maxWidth: angular.element(\"body\").width(),\n                            minTop: angular.element(\".gantt_data_area\").offset().top,\n                            maxTop: angular.element(\"body\").height()\n                        };\n                        var currentArea = {\n                            minWidth: el.offset().left,\n                            maxWidth: el.offset().left + el.width(),\n                            minTop: el.offset().top - 15, // 15px considering the arrow\n                            maxTop: el.offset().top + el.height() + 15, // 15px considering the arrow\n                        };\n                        if (currentArea.minWidth > visibleArea.minWidth && currentArea.maxWidth < visibleArea.maxWidth &&\n                            currentArea.minTop > visibleArea.minTop && currentArea.maxTop < visibleArea.maxTop)\n                            return true;\n                        return false;\n                    }\n\n                    function adjustPopover() {\n                        popoverElement = angular.element(\".popover.soc-task-popover\");\n                        if (position.delta.top - angular.element(\".gantt_ver_scroll\").scrollTop() === 0 && position.delta.left - angular.element(\".gantt_hor_scroll\").scrollLeft() === 0)\n                            return;\n                        if (popoverElement.hasClass(\"in\")) {\n                            var newPopoverPosition = {\n                                top: position.original.top + position.delta.top - angular.element(\".gantt_ver_scroll\").scrollTop(),\n                                left: position.original.left + position.delta.left - angular.element(\".gantt_hor_scroll\").scrollLeft()\n                            };\n                            popoverElement.offset(newPopoverPosition);\n                            if (!isPopoverInViewport(popoverElement))\n                                _handleDestroyPopover();\n                        }\n                    }\n\n                    $scope.lastScrollTop = 0;\n                    $scope.loadScrollTop = 0;\n                    $scope.lazyLoading = false;\n                    $scope.gantt.attachEvent(\"onGanttScroll\", function (left, top) {\n                        if ($scope.lazyLoading)\n                            $scope.lastScrollTop = top;\n\n                        if (dataService.count >= $window.NOW.sn_chg_soc.limit)\n                            return;\n\n                        var gridHeight = angular.element(\"div.gantt_ver_scroll\").find(\"div\").height();\n                        var shouldLoad = top > ($scope.loadScrollTop + ((gridHeight - $scope.loadScrollTop) / 4));\n                        adjustPopover();\n                        if (!shouldLoad || $scope.isLoading() || !dataService.more || $scope.lazyLoading || top <= $scope.loadScrollTop || top <= $scope.lastScrollTop)\n                            return;\n\n                        $scope.loadScrollTop = top;\n                        $scope.lazyLoading = true;\n                        dataService.getChanges(urlService.socId).then(function (model) {\n                            if (dataService.count >= $window.NOW.sn_chg_soc.limit)\n                                socNotification.show(\"warning\", i18n.format(i18n.getMessage(\"This schedule has exceeded the event limit. The first {0} events based on your order criteria will be displayed.\"), $window.NOW.sn_chg_soc.limit), 0);\n\n                            // Need to provide the tasks so it can calc min/max\n                            ganttScale.setDateRange(dataService.tasks.data);\n                            ganttScale.configureScale();\n                            $scope.gantt.clearAll();\n                            ganttChart.addNowMarker(urlService.socId);\n                            // these are the created tasks that will be added to the gantt\n                            $scope.gantt.parse(dataService.tasks, \"json\");\n                            $scope.lazyLoading = false;\n                        });\n                    });\n\n                    /**\n                     * Scales\n                     */\n                    // Only visible scale is rendered\n                    $scope.gantt.config.smart_scales = true;\n                    // Removes vertical borders on cells\n                    $scope.gantt.config.show_task_cells = false;\n                    $scope.gantt.config.scale_height = 60;\n                    $scope.gantt.config.row_height = 40;\n                    $scope.gantt.config.duration_unit = \"hour\";\n                    $scope.gantt.config.duration_step = 1;\n                    $scope.gantt.config.scale_unit = \"day\";\n                    $scope.gantt.config.date_scale = \"%j %M %Y\";\n                    $scope.gantt.config.subscales = [{\n                        unit: \"hour\",\n                        step: 1,\n                        date: \"%H:%i\"\n                    }];\n\n                    /**\n                     * UI Components\n                     */\n                    $scope.gantt.config.show_progress = false;\n                    $scope.gantt.config.drag_links = false;\n                    $scope.gantt.config.drag_move = false;\n                    $scope.gantt.config.drag_resize = false;\n\n                    /**\n                     * Templates\n                     */\n                    // Configure use of icons in the gantt rows\n                    $scope.gantt.templates.grid_open = function (item) {\n                        return \"<div class='gantt_tree_icon gantt_\" + (item.$open ? \"close\" : \"open\") + \" icon-vcr-\" + (item.$open ? \"down\" : \"right\") + \"'></div>\";\n                    };\n                    $scope.gantt.templates.grid_folder = function (item) {\n                        return \"\";\n                    };\n                    $scope.gantt.templates.grid_file = function (item) {\n                        return \"\";\n                    };\n                    $scope.gantt.templates.grid_indent = function (item) {\n                        return \"\";\n                    };\n                    $scope.gantt.templates.grid_row_class = function (start, end, task) {\n                        return \"\";\n                    };\n                    $scope.gantt.templates.task_row_class = function (start, end, task) {\n                        return \"\";\n                    };\n                    $scope.gantt.templates.task_class = function (start, end, task) {\n                        return SOC.STYLE_CLASS_MAP.soc_event_bar;\n                    };\n                    $scope.gantt.templates.task_text = function (start, end, task) {\n                        return \"\";\n                    };\n\n                    function getNode(node) {\n                        if (node.hasClass(\"gantt_row\"))\n                            return angular.element(node.children(\".gantt_cell\")[0]);\n                        if (!node.hasClass(\"gantt_cell\") || node.hasClass(\"gantt_task_content\") || node.hasClass(\"gantt_task_drag\"))\n                            node = node.parent();\n                        return node;\n                    }\n\n                    function getTargetElement($event) {\n                        var node = angular.element($event.target || $event.srcElement);\n                        if ($event.type === \"keydown\")\n                            return angular.element($event.target);\n                        node = getNode(node);\n                        if (node.hasClass(\"gantt_task_line\"))\n                            return node;\n                        return null;\n                    }\n\n                    function handleOpenRecord() {\n                        var task = $filter(\"filter\")(dataService.tasks.data, {\n                            id: this.targetId\n                        })[0];\n                        $window.location.href = task.table + \".do?&sys_id=\" + task.sys_id +\n                            \"&sysparm_redirect=\" + encodeURIComponent(\"sn_chg_soc_change_soc.do?sysparm_id=\" + urlService.socId);\n                    }\n\n                    function _handleDestroyPopover() {\n                        if (angular.element(\"[soc-popover]\").length === 0)\n                            return \"\";\n                        angular.element(\"[soc-popover]\").focus();\n                        angular.element(\"[soc-popover]\").attr(\"aria-expanded\", \"false\");\n                        angular.element(\"[soc-popover]\").removeAttr(\"soc-popover\");\n                        angular.element(\".popover.soc-task-popover\").popover(\"destroy\");\n                    }\n\n                    function _handleDestroyFlyout() {\n                        $scope.$broadcast(\"sn.aside.change_soc_side.close\");\n                    }\n\n                    function getTargetSelector($event, taskObj) {\n                        if ($event.type !== \"keydown\") {\n                            var selector = \".gantt_grid_data .\" + $event.target.className;\n                            var result = angular.element(selector);\n                            var targetClass = (result.length > 0) ? \".gantt_grid\" : \".gantt_task\";\n                            return (result.length > 0) ? targetClass + \" [task_id='\" + taskObj.id + \"'] .gantt_cell:first\" : targetClass + \" .gantt_task_line[task_id='\" + taskObj.id + \"']\";\n                        } else\n                            return \".gantt_grid [task_id='\" + taskObj.id + \"'] .gantt_cell:first\";\n                    }\n\n                    function getX(target) {\n                        var result = {\n                            \"start\": 0,\n                            \"end\": 0\n                        };\n                        var targetElement = {\n                            \"start\": angular.element(target).offset().left,\n                            \"end\": angular.element(target).offset().left + angular.element(target).width()\n                        };\n                        var visibleArea = angular.element(\".gantt_task\");\n                        var visibleAreaLimits = {\n                            \"start\": visibleArea.offset().left,\n                            \"end\": visibleArea.offset().left + visibleArea.width()\n                        };\n                        result.start = (targetElement.start > visibleAreaLimits.start) ? targetElement.start : visibleAreaLimits.start;\n                        result.end = (targetElement.end < visibleAreaLimits.end) ? targetElement.end : visibleAreaLimits.end;\n                        return result.start + (result.end - result.start) / 2;\n                    }\n\n                    // Callback function used for building the popover template\n                    function buildPopoverTemplate(taskObj, $event, popoverContent, popoverTemplate) {\n                        var $popoverScope = $scope.$new(true);\n                        $popoverScope.openRecord = i18n.getMessage(\"Open Record\");\n                        $popoverScope.handleOpenRecord = handleOpenRecord;\n                        var targetSelector = getTargetSelector($event, taskObj);\n                        var target = angular.element(targetSelector);\n                        $popoverScope.targetId = taskObj.id;\n                        popoverTemplate = $compile(popoverTemplate)($popoverScope);\n                        target.attr(\"tabindex\", \"0\");\n                        target.attr(\"aria-expanded\", \"true\");\n                        target.attr(\"soc-popover\", \"opened\");\n                        var options = {\n                            \"container\": \"body\",\n                            \"viewport\": {\n                                \"selector\": \"body\",\n                                \"padding\": 20\n                            },\n                            \"html\": true,\n                            \"trigger\": \"manual\",\n                            \"placement\": \"auto\",\n                            \"title\": taskObj.number + \" - \" + (taskObj.record.short_description ? taskObj.record.short_description.display_value : \"\"),\n                            \"content\": popoverContent,\n                            \"template\": popoverTemplate\n                        };\n                        target.popover(options);\n                        if (targetSelector.indexOf(\"gantt_task\") !== -1) {\n                            target.data(\"bs.popover\").options.atMouse = $event.pageX !== 0;\n                            target.data(\"bs.popover\").options.mousePos = {\n                                \"x\": getX(target),\n                                \"y\": $event.pageY\n                            };\n                        }\n                        var action = angular.element(\".popover.soc-task-popover\").hasClass(\"in\") ? \"hidden\" : \"shown\";\n                        target.on(action + \".bs.popover\", function ($ev) {\n                            if ($ev.type === \"shown\") {\n                                _handleDestroyFlyout();\n                                angular.element(\".soc-btn-open-record\").focus();\n                                position.delta = {\n                                    top: angular.element(\".gantt_ver_scroll\").scrollTop(),\n                                    left: angular.element(\".gantt_hor_scroll\").scrollLeft()\n                                };\n                                position.original = {\n                                    top: angular.element(\".popover.soc-task-popover\").offset().top,\n                                    left: angular.element(\".popover.soc-task-popover\").offset().left\n                                };\n                                // Amend popover height if it is taller than remaining part of the window\n                                var popoverElement = angular.element(\".soc-task-popover\");\n                                var windowHeight = angular.element(window).height();\n                                var maxHeight = windowHeight - popoverElement.offset().top;\n                                if (popoverElement.height() > maxHeight)\n                                    popoverElement.height(maxHeight + \"px\");\n                            } else\n                                _handleDestroyPopover();\n                        });\n                        target.popover(\"toggle\");\n                    }\n\n                    function getTooltipTextToDisplay() {\n\n                    }\n\n                    // Callback function used for building the popover content\n                    function buildPopoverContent(taskObj, $event, popoverContent) {\n                        $templateCache.remove(getTemplateUrl(\"sn_chg_soc_change_soc_popover_template.xml\"));\n                        var $popoverContentScope = $scope.$new(true);\n                        $popoverContentScope.leftFields = taskObj.left_fields;\n                        $popoverContentScope.rightFields = taskObj.right_fields;\n                        $popoverContentScope.emptyValue = \"[\" + i18n.getMessage(\"Empty\") + \"]\";\n                        popoverContent = $compile(popoverContent)($popoverContentScope);\n                        $templateRequest(getTemplateUrl(\"sn_chg_soc_change_soc_popover_template.xml\")).then(buildPopoverTemplate.bind(this, taskObj, $event, popoverContent));\n                    }\n\n                    function openPopover(id, $event) {\n                        var targetElement = getTargetElement($event);\n                        var openedPopover = angular.element(\"[soc-popover]\");\n                        if (targetElement === null || openedPopover.length > 0) {\n                            _handleDestroyPopover();\n                            if (targetElement === null || openedPopover.attr(\"task_id\") === id)\n                                return;\n                        }\n                        _handleDestroyFlyout();\n                        $event.stopPropagation();\n                        var taskObj = $filter(\"filter\")(dataService.tasks.data, {\n                            \"id\": id\n                        }, true)[0];\n                        $templateRequest(getTemplateUrl(\"sn_chg_soc_change_soc_task_popover.xml\")).then(buildPopoverContent.bind(this, taskObj, $event));\n                    }\n\n                    /**\n                     * Events\n                     **/\n                    $scope.gantt.attachEvent(\"onTaskClick\", function (id, $event) {\n                        openPopover(id, $event);\n                        return true;\n                    });\n\n                    $scope.gantt.attachEvent(\"onTaskDblClick\", function (id, e) {\n                        return false;\n                    });\n\n                    $scope.gantt.addShortcut(\"enter\", function ($event) {\n                        openPopover(this.taskId, $event);\n                    }, \"taskRow\");\n\n                    $scope.gantt.addShortcut(\"tab\", function ($event) {}, \"taskRow\");\n\n                    $scope.gantt.attachEvent(\"onTaskSelected\", function (id, item) {\n                        return true;\n                    });\n\n                    $scope.gantt.attachEvent(\"onBeforeTaskSelected\", function (id, item) {\n                        return true;\n                    });\n\n                    function getScheduleEvent(task, startDate, endDate, styleClass) {\n                        startDate = $scope.gantt.date.parseDate(startDate, \"xml_date\");\n                        endDate = $scope.gantt.date.parseDate(endDate, \"xml_date\");\n                        var sizes = $scope.gantt.getTaskPosition(task, startDate, endDate);\n                        var el = document.createElement(\"div\");\n                        el.className = \"schedule-bar \" + styleClass;\n                        el.style.left = sizes.left + \"px\";\n                        el.style.width = sizes.width + \"px\";\n                        el.style.top = sizes.top + \"px\";\n                        return el;\n                    }\n\n                    // Add task layer for blackout windows\n                    $scope.ganttInstance.addTaskLayer(function (task) {\n                        if (task.blackout_spans.length === 0 && task.maint_spans.length === 0)\n                            return;\n                        var wrapper = document.createElement(\"div\");\n                        if (dataService.definition.show_maintenance.value)\n                            task.maint_spans.forEach(function (maintSpan) {\n                                wrapper.appendChild(getScheduleEvent(task, maintSpan.start, maintSpan.end, \"maint\"));\n                            });\n                        if (dataService.definition.show_blackout.value)\n                            task.blackout_spans.forEach(function (blackoutSpan) {\n                                wrapper.appendChild(getScheduleEvent(task, blackoutSpan.start, blackoutSpan.end, \"blackout\"));\n                            });\n                        return wrapper;\n                    });\n\n                    $scope.gantt.attachEvent(\"onGanttRender\", function () {\n                        $element.find(\".gantt_container\").attr(\"role\", \"grid\");\n                        angular.element('[data-toggle=\"tooltip\"]').tooltip('destroy');\n                        angular.element(\".tooltip[id^='tooltip']\").remove();\n                        $element.find('[data-toggle=\"tooltip\"]').tooltip();\n                    });\n\n                    // Locale information must be associated with gantt object attached to window\n                    $window.gantt.locale = {\n                        date: {\n                            month_full: [i18n.getMessage(\"January\"),\n                                i18n.getMessage(\"February\"),\n                                i18n.getMessage(\"March\"),\n                                i18n.getMessage(\"April\"),\n                                i18n.getMessage(\"May\"),\n                                i18n.getMessage(\"June\"),\n                                i18n.getMessage(\"July\"),\n                                i18n.getMessage(\"August\"),\n                                i18n.getMessage(\"September\"),\n                                i18n.getMessage(\"October\"),\n                                i18n.getMessage(\"November\"),\n                                i18n.getMessage(\"December\")\n                            ],\n                            month_short: [i18n.getMessage(\"Jan\"),\n                                i18n.getMessage(\"Feb\"),\n                                i18n.getMessage(\"Mar\"),\n                                i18n.getMessage(\"Apr\"),\n                                i18n.getMessage(\"May\"),\n                                i18n.getMessage(\"Jun\"),\n                                i18n.getMessage(\"Jul\"),\n                                i18n.getMessage(\"Aug\"),\n                                i18n.getMessage(\"Sep\"),\n                                i18n.getMessage(\"Oct\"),\n                                i18n.getMessage(\"Nov\"),\n                                i18n.getMessage(\"Dec\")\n                            ],\n                            day_full: [i18n.getMessage(\"Sunday\"),\n                                i18n.getMessage(\"Monday\"),\n                                i18n.getMessage(\"Tuesday\"),\n                                i18n.getMessage(\"Wednesday\"),\n                                i18n.getMessage(\"Thursday\"),\n                                i18n.getMessage(\"Friday\"),\n                                i18n.getMessage(\"Saturday\")\n                            ],\n                            day_short: [i18n.getMessage(\"Sun\"),\n                                i18n.getMessage(\"Mon\"),\n                                i18n.getMessage(\"Tue\"),\n                                i18n.getMessage(\"Wed\"),\n                                i18n.getMessage(\"Thu\"),\n                                i18n.getMessage(\"Fri\"),\n                                i18n.getMessage(\"Sat\")\n                            ]\n                        },\n                        labels: {}\n                    };\n\n                    $scope.zoomIn = function () {\n                        _handleDestroyPopover();\n                        ganttScale.zoom(++$scope.ganttScale.level, urlService.socId);\n                    };\n\n                    $scope.zoomOut = function () {\n                        _handleDestroyPopover();\n                        ganttScale.zoom(--$scope.ganttScale.level, urlService.socId);\n                    };\n\n                    $scope.gantt.init($element[0]);\n                }\n            };\n        }\n    ])\n    .controller(\"ChangeSoCCtrl\", [\"$scope\", \"$document\", \"$timeout\", \"$window\", \"$location\", \"ganttChart\", \"styleService\", \"configService\", \"shareService\", \"dataService\", \"urlService\", \"ganttScale\", \"getTemplateUrl\", \"i18n\", \"SOC\", \"TextSearchService\", \"socNotification\",\n        function ($scope, $document, $timeout, $window, $location, ganttChart, styleService, configService, shareService, dataService, urlService, ganttScale, getTemplateUrl, i18n, SOC, TextSearchService, socNotification) {\n            var changeSoCCtrl = this;\n\n            changeSoCCtrl.share = {\n                canWrite: false\n            };\n\n            changeSoCCtrl.closeFlyout = function () {\n                $scope.$apply(function () {\n                    $scope.$broadcast(\"sn.aside.change_soc_side.close\");\n                });\n            };\n\n            $scope.loadingElements = {};\n            $scope.dataService = dataService;\n            $scope.ganttScale = ganttScale;\n            $scope.urlService = urlService;\n\n            $scope.pageLeft = function ($event) {\n                if ($event && $event.keyCode !== SOC.KEYS.ENTER && $event.keyCode !== SOC.KEYS.SPACE)\n                    return;\n                var gantt = ganttChart.getGantt(urlService.socId);\n                var left = gantt.getScrollState().x - angular.element(\"div.gantt_scale_cell\").width();\n                gantt.scrollTo(left < 0 ? 0 : left, null);\n            };\n\n            $scope.pageRight = function ($event) {\n                if ($event && $event.keyCode !== SOC.KEYS.ENTER && $event.keyCode !== SOC.KEYS.SPACE)\n                    return;\n                var gantt = ganttChart.getGantt(urlService.socId);\n                var left = gantt.getScrollState().x + angular.element(\"div.gantt_scale_cell\").width();\n                var scrollLength = angular.element(\"div.gantt_hor_scroll > div\").width();\n                gantt.scrollTo(left > scrollLength ? scrollLength : left, null);\n            };\n\n            $scope.scrollToday = function () {\n                var gantt = ganttChart.getGantt(urlService.socId);\n                gantt.showDate(new Date());\n            };\n\n            $scope.openView = function (viewId, event) {\n                // We already have something open, need to deal with that first\n                if ($scope.activeAside === viewId) {\n                    $scope.$broadcast(\"sn.aside.change_soc_side.close\");\n                    if (event)\n                        event.target.blur();\n                } else {\n                    var view;\n                    switch (viewId) {\n                        case \"share\":\n                            view = getView(viewId, \"sn_chg_soc_aside_share.xml\");\n                            break;\n                        case \"style\":\n                            view = getView(viewId, \"sn_chg_soc_aside_style.xml\");\n                            break;\n                        case \"style_def\":\n                            view = getView(viewId, \"sn_chg_soc_aside_style_page.xml\", true);\n                            break;\n                        case \"config\":\n                            view = getView(viewId, \"sn_chg_soc_aside_config.xml\");\n                            break;\n                        case \"keyboard\":\n                            view = getView(viewId, \"sn_chg_soc_aside_keyboard.xml\");\n                            break;\n                    }\n                    if (view !== undefined) {\n                        angular.element(\".sn-aside_right\").show();\n                        $scope.activeAside = viewId;\n                        $scope.$broadcast(\"sn.aside.change_soc_side.open\", view, \"320px\");\n                    }\n                }\n            };\n\n            $scope.$on(\"sn.aside.change_soc_side.close\", function () {\n                switch ($scope.activeAside) {\n                    case \"share\":\n                        angular.element(\"#share_side\").focus();\n                        break;\n                    case \"style\":\n                        angular.element(\"#style_side\").focus();\n                        break;\n                    case \"style_def\":\n                        angular.element(\"#style_side\").focus();\n                        break;\n                    case \"config\":\n                        angular.element(\"#config_side\").focus();\n                        break;\n                    case \"keyboard\":\n                        angular.element(\"#keyboard_side\").focus();\n                        break;\n                }\n                $scope.activeAside = \"\";\n                angular.element(\".sn-aside_right\").hide();\n            });\n\n            $scope.$on(\"sn.aside.change_soc_side.open_style\", function (event, style) {\n                styleService.selectedStyle = style;\n                $scope.openView(\"style_def\");\n            });\n\n            $scope.$on(\"sn.aside.change_soc_side.style_updated\", function (event, result) {\n                if (result.style_sheet) {\n                    var socStyleSheet = $document[0].getElementById(\"soc_span_style\");\n                    socStyleSheet.innerHTML = result.style_sheet;\n                }\n\n                if (result.records) {\n                    var gantt = ganttChart.getGantt(urlService.socId);\n                    for (var i = 0; i < dataService.tasks.data.length; i++)\n                        if (result.records[dataService.tasks.data[i].id].style_rule)\n                            dataService.tasks.data[i].style_class = SOC.STYLE_PREFIX + result.records[dataService.tasks.data[i].id].style_rule.sys_id;\n                    gantt.parse(dataService.tasks, \"json\");\n                }\n            });\n\n            $scope.$on(\"sn.aside.change_soc_side.open_share\", function (event, model) {\n                shareService.model = model;\n                $scope.openView(\"share\");\n            });\n\n            $scope.$on(\"sn.aside.change_soc_side.open_share:closed\", function (event, model) {\n                $scope.openView(\"share\");\n            });\n\n            $scope.$on(\"sn.aside.change_soc_side.historyBack.completed\", function (e, view) {\n                $scope.activeAside = view.title;\n            });\n\n            function getView(name, template, isChild) {\n                return {\n                    scope: $scope,\n                    title: name,\n                    templateUrl: getTemplateUrl(template),\n                    isChild: isChild\n                };\n            }\n\n            // Global keyboard shortcuts\n            $document.on(\"keydown\", function (event) {\n                // Open keyboard help side\n                if (event.shiftKey && event.which == SOC.KEYS.SLASH && event.originalEvent.target.tagName !== \"INPUT\") {\n                    $scope.$apply(function () {\n                        if ($scope.activeAside === \"keyboard\") {\n                            $scope.$broadcast(\"sn.aside.change_soc_side.close\");\n                            if (event)\n                                event.target.blur();\n                        } else {\n                            $scope.activeAside = \"keyboard\";\n                            $scope.$broadcast(\"sn.aside.change_soc_side.open\", getView(\"keyboard\", \"sn_chg_soc_aside_keyboard.xml\"), \"320px\");\n                        }\n                    });\n                }\n            });\n\n            var getChildTaskDividerClass = function (start, end, task) {\n                if (!task.parent)\n                    return \"\";\n\n                var classStyle = \" \" + SOC.STYLE_CLASS_MAP.soc_row_child;\n\n                var nextTask = this.ganttChart.getNext(task.id);\n                nextTask = nextTask ? this.ganttChart.getTask(nextTask) : null;\n                var previousTask = this.ganttChart.getPrev(task.id);\n                previousTask = previousTask ? this.ganttChart.getTask(previousTask) : null;\n\n                // Only child task for a parent\n                if (previousTask && !previousTask.parent)\n                    if (!nextTask || (nextTask && !nextTask.parent))\n                        return classStyle += \" \" + SOC.STYLE_CLASS_MAP.soc_row_child_single;\n\n                // First child task for their parent\n                if (previousTask && !previousTask.parent && (nextTask && nextTask.parent))\n                    return classStyle += \" \" + SOC.STYLE_CLASS_MAP.soc_row_child_start;\n\n                // Last child task for their parent\n                if (previousTask && previousTask.parent && ((nextTask && !nextTask.parent) || !nextTask))\n                    return classStyle += \" \" + SOC.STYLE_CLASS_MAP.soc_row_child_end;\n\n                return classStyle;\n            };\n\n            var defineClassTemplate = function (start, end, task) {\n                var classStyle = \"\";\n\n                if (this.type)\n                    classStyle += SOC.STYLE_CLASS_MAP[this.type];\n\n                classStyle += getChildTaskDividerClass.call({\n                    ganttChart: this.ganttChart\n                }, null, null, task);\n\n                if (task.style_class)\n                    classStyle += \" \" + task.style_class;\n\n                return classStyle;\n            };\n\n            var dateToStr = gantt.date.date_to_str(gantt.config.task_date);\n\n            function updateMarkerInterval(gantt, markerId) {\n                var today = gantt.getMarker(markerId);\n                today.start_date = new Date();\n                today.title = dateToStr(today.start_date);\n                gantt.updateMarker(markerId);\n            }\n\n            function addNowMarker(gantt) {\n                var markerId = gantt.addMarker({\n                    start_date: new Date(),\n                    css: \"today-marker\",\n                    title: dateToStr(new Date()),\n                    text: \" \"\n                });\n                setInterval(updateMarkerInterval(gantt, markerId), 1000 * 60);\n            }\n\n            function addScheduleSpanStyle(definition) {\n                var socStyleSheet = $document[0].createElement(\"style\");\n                socStyleSheet.id = \"soc_schedule_style\";\n                $document[0].head.appendChild(socStyleSheet);\n\n                var maintColor = definition.maintenance_span_color.value ? definition.maintenance_span_color.value : SOC.MAINT_SPAN_COLOR;\n                var blackoutColor = definition.blackout_span_color.value ? definition.blackout_span_color.value : SOC.BLACKOUT_SPAN_COLOR;\n\n                var spanStyleSheet;\n                for (var i = 0; i < $document[0].styleSheets.length; i++)\n                    if ($document[0].styleSheets[i].ownerNode.id === socStyleSheet.id) {\n                        spanStyleSheet = $document[0].styleSheets[i];\n                        break;\n                    }\n\n                if (!spanStyleSheet)\n                    return;\n\n                spanStyleSheet.insertRule(\"div.schedule-bar.maint {background-color: \" + maintColor + \";}\", 0);\n                spanStyleSheet.insertRule(\"div.schedule-bar.blackout {background-color: \" + blackoutColor + \";}\", 0);\n            }\n\n            changeSoCCtrl.initPage = function () {\n                dataService.initPage(urlService.socId).then(function () {\n                    styleService.initStyle();\n\n                    // Setup for share panel\n                    changeSoCCtrl.share.canWrite = dataService.canWrite();\n\n                    // Setup configuration panel\n                    configService.showBlackoutOption = configService.showBlackoutSchedules = dataService.definition.show_blackout.value;\n                    configService.showMaintOption = configService.showMaintSchedules = dataService.definition.show_maintenance.value;\n                    configService.setChildRecords(dataService.child_table);\n\n                    // Need to apply changes due to style info\n                    var socStyleSheet = document.createElement(\"style\");\n                    socStyleSheet.id = \"soc_span_style\";\n                    document.head.appendChild(socStyleSheet);\n                    socStyleSheet.innerHTML = dataService.style.style_sheet;\n\n                    addScheduleSpanStyle(dataService.definition);\n\n                    var gantt = ganttChart.getGantt(urlService.socId);\n                    gantt.templates.grid_row_class = defineClassTemplate.bind({\n                        ganttChart: gantt,\n                        type: \"\",\n                    });\n                    gantt.templates.task_row_class = getChildTaskDividerClass.bind({\n                        ganttChart: gantt\n                    });\n                    gantt.templates.task_class = defineClassTemplate.bind({\n                        ganttChart: gantt,\n                        type: \"soc_event_bar\",\n                    });\n                    gantt.render();\n\n                    // Need to provide the tasks so it can calc min/max\n                    ganttScale.setDateRange(dataService.tasks.data);\n                    ganttScale.configureScale();\n                    gantt.clearAll();\n                    addNowMarker(gantt);\n                    // these are the created tasks that will be added to the gantt\n                    gantt.parse(dataService.tasks, \"json\");\n                    if (dataService.tasks.data.length > 0) {\n                        gantt.showTask(dataService.tasks.data[0].id);\n                        $scope.noResults = false;\n                    } else\n                        $scope.noResults = true;\n                }).catch(function (response) {\n                    socNotification.show(\"error\", response.data.error.message);\n                });\n            };\n\n            $scope.filter = {\n                filterConditions: [\"number\", \"config_item\", \"children.number\", \"children.config_item\"],\n                placeholderText: i18n.getMessage(\"Search Change Schedule\")\n            };\n\n            function buildFilterData() {\n                var augmentedData = dataService.tasks.data;\n                dataService.tasks.data.forEach(function (obj, index) {\n                    augmentedData[index].children = dataService.getChildren(obj.id);\n                });\n                return augmentedData;\n            }\n\n            $scope.$on(\"textSearch\", function (event, textSearch) {\n                var filteredRecords = TextSearchService.getFilteredArray(buildFilterData(), textSearch);\n                ganttChart.updateGanttData(urlService.socId, filteredRecords);\n                $scope.noResults = filteredRecords.length === 0;\n            });\n\n            $scope.isLoading = function () {\n                return $scope.$parent.loading;\n            };\n\n            changeSoCCtrl.messages = {\n                \"No records to display\": i18n.getMessage(\"No records to display\"),\n                \"No records match the filter\": i18n.getMessage(\"No records match the filter\"),\n                \"Change Schedule\": i18n.getMessage(\"Change Schedule\"),\n                \"Close panel\": i18n.getMessage(\"Close panel\"),\n                \"Configuration\": i18n.getMessage(\"Configuration\"),\n                \"Share\": i18n.getMessage(\"Share\"),\n                \"Open context menu\": i18n.getMessage(\"Open context menu\"),\n                \"Filter\": i18n.getMessage(\"Filter\"),\n                \"Keyboard Shortcuts\": i18n.getMessage(\"Keyboard Shortcuts\"),\n                \"Search Change Schedule\": i18n.getMessage(\"Search Change Schedule\"),\n                \"Span Styles\": i18n.getMessage(\"Span Styles\"),\n                \"Today\": i18n.getMessage(\"Today\"),\n                \"Zoom in\": i18n.getMessage(\"Zoom in\"),\n                \"Zoom out\": i18n.getMessage(\"Zoom out\"),\n                \"Page left\": i18n.getMessage(\"Page left\"),\n                \"Page right\": i18n.getMessage(\"Page right\"),\n                \"Show today\": i18n.getMessage(\"Show today\")\n            };\n\n            $scope.noResults = false;\n            var noResultsElem = \"<div class='no-results' aria-live='polite' aria-label='\" + changeSoCCtrl.messages[\"No records to display\"] + \"'>\" + changeSoCCtrl.messages[\"No records to display\"] + \"</div>\";\n\n            function noResults(newValue, oldValue) {\n                if (newValue === oldValue)\n                    return;\n                if (newValue) {\n                    angular.element(\"div.gantt_marker.today-marker\").hide();\n                    angular.element(\"div.gantt_task_scale\").after(noResultsElem);\n                } else {\n                    angular.element(\"div.gantt_marker.today-marker\").show();\n                    angular.element(\"div.no-results\").remove();\n                }\n            }\n            $scope.$watch(\"noResults\", noResults);\n        }\n    ])\n    .filter(\"objectKeys\", [function () {\n        return function (anObject) {\n            if (!anObject)\n                return null;\n            return Object.keys(anObject);\n        };\n    }])\n    .filter(\"objectKeysLength\", [function () {\n        return function (anObject) {\n            if (!anObject)\n                return null;\n            return Object.keys(anObject).length;\n        };\n    }]);","sys_class_name":"sys_ui_script","sys_id":"6ff41e3ac31303009f93dfdc64d3aebb","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"ui_type":"0","sys_update_name":"sys_ui_script_6ff41e3ac31303009f93dfdc64d3aebb","sys_updated_by":"admin","sys_created_on":"2017-12-31 15:40:21","name":"sn_chg_soc.change_soc","sys_name":"sn_chg_soc.change_soc","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"5","active":"true","description":"Directive snLineClamp.  Ellipsis truncates text for when you cannot use overflow: ellipsis.","use_scoped_format":"false","global":"false","sys_updated_on":"2016-10-13 14:20:58","sys_tags":"","script_name":"","script":"angular.module('sn.app_common.line_clamp', [])\n.directive('snLineClamp', function ($timeout) {\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: {\n\t\t\ttext: '@',\n\t\t\tmaxLines: '@'\n\t\t},\n\t\ttemplate: '<div>{{truncatedText}}</div>',\n\t\t\tlink: function (scope, element, attrs) {\n\t\t\t\tvar maxLines = parseInt(scope.maxLines || 1);\n\t\t\t\tvar isClamped = false;\n\t\t\t\tvar $el = angular.element(element).children('div');\n\t\t\t\t\n\t\t\t\tfunction removeLastWords(txt, count) {\n\t\t\t\t\tif (txt && count) {\n\t\t\t\t\t\ttxt = txt.replace(/[\\t\\n\\r\\s]+/g, ' ').trim();\n\t\t\t\t\t\tvar idx = txt.length;\n\t\t\t\t\t\tfor (var i = txt.length - 1; i >= 0; i--) {\n\t\t\t\t\t\t\tvar c = txt.charAt(i);\n\t\t\t\t\t\t\tif (c === ' ')\n\t\t\t\t\t\t\t\tcount--;\n\t\t\t\t\t\t\tif (count === 0) {\n\t\t\t\t\t\t\t\treturn txt.substring(0, i);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn txt;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tfunction tryText() {\n\t\t\t\t\t$timeout(function () {\n\t\t\t\t\t\tif ($el.get(0).scrollHeight > (scope.maxAllowedHt + 5)) {\n\t\t\t\t\t\t\tscope.truncatedText = removeLastWords(scope.text, ++scope.counter) + ' …';\n\t\t\t\t\t\t\t$el.attr('title', scope.text);\n\t\t\t\t\t\t\ttryText();\n\t\t\t\t\t\t} else if (scope.counter === 0) {\n\t\t\t\t\t\t\tscope.truncatedText = scope.text;\n\t\t\t\t\t\t\t$el.removeAttr('title');\n\t\t\t\t\t\t}\n\t\t\t\t\t}, 1);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfunction clamp () {\n\t\t\t\t\tif (!isClamped) {\n\t\t\t\t\t\tscope.maxAllowedHt = parseInt($el.css('line-height')) * maxLines;\n\t\t\t\t\t\t$el.css({\n\t\t\t\t\t\t\t'max-height': scope.maxAllowedHt + 'px',\n\t\t\t\t\t\t});\n\t\t\t\t\t\tisClamped = true;\n\t\t\t\t\t}\n\t\t\t\t\tscope.counter = 0;\n\t\t\t\t\tscope.truncatedText = scope.text;\n\t\t\t\t\ttryText();\n\t\t\t\t}\n\t\t\t\tscope.$watch('text', clamp);\n\t\t\t}\n\t\t};\n\t});","sys_class_name":"sys_ui_script","sys_id":"70cad1a7d712220034d145bcce6103ac","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/39fbaf7704352210559073c06a02f71e","value":"39fbaf7704352210559073c06a02f71e"},"ui_type":"","sys_update_name":"sys_ui_script_70cad1a7d712220034d145bcce6103ac","sys_updated_by":"admin","sys_created_on":"2016-10-12 09:54:32","name":"app_com.line_clamp.snLineClamp","sys_name":"app_com.line_clamp.snLineClamp","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":"read"},{"ignore_in_now_experience":"false","sys_mod_count":"1","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2024-06-11 17:26:59","sys_tags":"","script_name":"","script":"csGlobals['g_user_date_format'] = gs.getDateFormat();\ncsGlobals['g_user_date_time_format'] = gs.getDateTimeFormat();","sys_class_name":"sys_ui_script","sys_id":"736a0c60ebf282100e38e530695228c0","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/4c8e6ff304752210559073c06a02f7c4","value":"4c8e6ff304752210559073c06a02f7c4"},"ui_type":"10","sys_update_name":"sys_ui_script_736a0c60ebf282100e38e530695228c0","sys_updated_by":"admin","sys_created_on":"2024-06-11 11:25:12","name":"global.DateTimeConstantsProxy","sys_name":"global.DateTimeConstantsProxy","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"29","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2024-05-30 18:34:21","sys_tags":"","script_name":"","script":"/* window proxy */\n// Added to handle onLoad and onSumbit client script since this object is not initialised.\nvar csInputs = csInputs || {};\nfunction Window(host, url, globals) {\n    this.location = new Location(host, url);\n    this.open = function(newUrl) {\n        _notifications_.push({\n            type: 'launch-window-action',\n            url: newUrl\n        });\n        return new Window(host, newUrl, globals); // TODO: newUrl can be absolute/relative\n    };\n    this.close = function() {\n        return true;\n    };\n    if (globals) {\n        Object.keys(globals).forEach(function(g) {\n            this[g] = globals[g];\n        });\n    }\n    this.window = this;\n    this.top = this;\n}\n\nfunction Location(host, url) {\n    var fullUrl = host + url;\n\n    Object.defineProperty(this, 'href', {\n        get: function() {\n            return fullUrl;\n        },\n        set: function(value) {\n            _notifications_.push({\n                type: 'set-page-url-action',\n                url: value\n            });\n        }\n    });\n\n    this.hostname = host;\n    this.host = host;\n    this.pathname = url;\n    this.search = url && url.split('?')[1] || '';\n\n    this.reload = function() {\n        _notifications_.push({\n            type: 'reload-location-action'\n        });\n    };\n}\n\nvar host = csInputs.host || csInputs.url ? csInputs.host : gs.getProperty('glide.servlet.uri');\nvar url = csInputs.url ? csInputs.url : g_form.getTableName() + '.do?sys_id=' + g_form.getUniqueValue();\ncsGlobals['window'] = new Window(host, url, csInputs.globals);\ncsGlobals['location'] = new Location(host, url);\ncsGlobals['top'] = csGlobals['window'];\ncsGlobals['parent'] = csGlobals['window'];\ncsGlobals['open'] = csGlobals['window'].open;","sys_class_name":"sys_ui_script","sys_id":"737eba1f9ff33110a86b86e29a0a1c29","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/4c8e6ff304752210559073c06a02f7c4","value":"4c8e6ff304752210559073c06a02f7c4"},"ui_type":"10","sys_update_name":"sys_ui_script_737eba1f9ff33110a86b86e29a0a1c29","sys_updated_by":"admin","sys_created_on":"2024-01-23 10:24:32","name":"global.WindowProxy","sys_name":"global.WindowProxy","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"12","active":"false","description":"Allows navigation filter processing before default filtering","use_scoped_format":"false","global":"true","sys_updated_on":"2025-06-05 05:18:18","sys_tags":"","script_name":"","script":"//**************************************************************************\r\n//* This function is called before default nav filtering is done.\r\n//* If function returns false, default nav filtering happens next.\r\n//* If it returns true, no more nav filtering is done for current keystroke.\r\n//*\r\n//* val is the current content of the nav filter input\r\n//* msg was the initial content of the nav filter input on focus\r\n//**************************************************************************\r\n\r\nfunction navFilterExtension(val, msg) {\r\n\r\n//  if (val.endsWith('.dict')) {\r\n//    // example: incident.dict\r\n//    // navigates to Dictionary records for the specified table\r\n//    val = val.replace(/ /g, '');\r\n//    document.getElementById('gsft_main').src = \"sys_dictionary_list.do?sysparm_query=name=\" + val.replace('.dict','');\r\n//    restoreFilterText(msg);\r\n//    return true;\r\n//  } \r\n\r\n//  if (val.endsWith('?')) {\r\n//    // example: sys_user:nameLIKEbeth?\r\n//    // query specified table using encoded query after the colon\r\n//    val = val.replace(/ /g, '');\r\n//    var table = val.split(\":\")[0];\r\n//    var query = val.split(\":\")[1].replace('?','');\r\n//    document.getElementById('gsft_main').src = table + \"_list.do?sysparm_query=\" + query;\r\n//    restoreFilterText(msg);\r\n//    return true;\r\n//  }\r\n\r\n  return false;\r\n}","sys_class_name":"sys_ui_script","sys_id":"7595a72f0a0006d400c3a9fc993d5092","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/72532b7304312210559073c06a02f7c6","value":"72532b7304312210559073c06a02f7c6"},"ui_type":"0","sys_update_name":"sys_ui_script_7595a72f0a0006d400c3a9fc993d5092","sys_updated_by":"system","sys_created_on":"2011-01-11 14:58:56","name":"NavFilterExtension","sys_name":"NavFilterExtension","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"14","active":"true","description":"When the requestor_location or special_instructions values change then update the cart so the information will be passed to the Request during checkout.","use_scoped_format":"false","global":"false","sys_updated_on":"2018-07-27 17:27:03","sys_tags":"","script_name":"","script":"var cartAjaxProcessor = 'CartAjaxProcessor';\n\nfunction catDeliveryAddress(sysId, name) {\n\tvar control = gel(name);\n\tif (!control)\n\t\treturn;\n\t\n\tvar ga = new GlideAjax(cartAjaxProcessor);\n\tga.addParam('sysparm_action', 'set_delivery_address');\n\tga.addParam('sysparm_value', control.value);\n\tga.addParam('sysparm_sys_id', sysId);\n\tga.getXMLAnswer(function(){}, null, null);\n}\n\nfunction catSpecialInstructions(sysId, name) {\n\tvar control = gel(name);\n\tif (!control)\n\t\treturn;\n\t\n\tvar ga = new GlideAjax(cartAjaxProcessor);\n\tga.addParam('sysparm_action', 'set_special_instructions');\n\tga.addParam('sysparm_value', control.value);\n\tga.addParam('sysparm_sys_id', sysId);\n\tga.getXMLAnswer(function(){}, null, null);\n}\n\nfunction catReqFor(name, cartName) {\n\tvar control = gel(name);\n\tif (!control)\n\t\treturn;\n\t\n\tvar ga = new GlideAjax(cartAjaxProcessor);\n\tga.addParam('sysparm_action', 'req_for');\n\tga.addParam('sysparm_value', control.value);\n\tif (cartName)\n\t\tga.addParam('sysparm_cart_name', cartName);\n\n\tserverRequest(ga.getURL());\n}","sys_class_name":"sys_ui_script","sys_id":"76320852c0a80164602dce2080d6085e","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/3028ab3304f12210559073c06a02f7b7","value":"3028ab3304f12210559073c06a02f7b7"},"ui_type":"0","sys_update_name":"sys_ui_script_76320852c0a80164602dce2080d6085e","sys_updated_by":"admin","sys_created_on":"2010-08-15 14:42:38","name":"CartCheckoutFunctions","sys_name":"CartCheckoutFunctions","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"myla.jordan","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"26","active":"true","description":"Service vcabDataSource","use_scoped_format":"false","global":"false","sys_updated_on":"2021-03-30 14:42:54","sys_tags":"","script_name":"","script":"(function () {\n\t'use strict';\n\n\t/*\n\t * Use this service in angular components and vcab widgets to access the data.\n\t */\n\tangular.module('sn.itsm.vcab.common')\n\t.factory('vcabDataSource', function ($http, $q, Tables, $log, dataUtil, $rootScope) {\n\t\tvar URI_BASE = '/api/now/table/';\n\t\tvar URI_BASE_PERMISSION = '/api/now/change_request_calendar/';\n\t\tvar AGG_URI_BASE = '/api/now/stats/';\n\t\tvar CHANGE_META_API = '/api/now/change_request_calendar/change/';\n\t\tvar RELATED_CHANGE_API = '/api/now/change_request_calendar/change/related/';\n\t\tvar UI_NOTIFICATIONS = '/api/now/session/notification';\n\n\t\tfunction getAllNotifications() {\n\t\t\treturn $http.get(UI_NOTIFICATIONS);\n\t\t}\n\n\t\tfunction getConfig(params) {\n\t\t\tvar c = {\n\t\t\t\tparams: {\n\t\t\t\t\tsysparm_exclude_reference_link: true,\n\t\t\t\t\tsysparm_display_value: 'all'\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (params) {\n\t\t\t\tfor (var k in  params) {\n\t\t\t\t\tif (typeof params[k] === 'undefined')\n\t\t\t\t\t\tdelete c.params[k];\n\t\t\t\t\telse\n\t\t\t\t\t\tc.params[k] = params[k];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn c;\n\t\t}\n\n\t\tfunction getNewPromise(promise, transformResult) {\n\t\t\treturn $q(function (resolve, reject) {\n\t\t\t\tpromise.then(function (response) {\n\t\t\t\t\tvar r = response.data.result;\n\t\t\t\t\tif (transformResult)\n\t\t\t\t\t\tr = transformResult(r);\n\t\t\t\t\tresolve(r);\n\t\t\t\t}, function (response) {\n\t\t\t\t\t$log.info(\"sn.change_management.cab.vcabDataSource: REST Failure\");\n\t\t\t\t\t$log.info(response);\n\t\t\t\t\tif (response.data && response.data.error) {\n\t\t\t\t\t\tgetAllNotifications().then(function (resp) {\n\t\t\t\t\t\t\tvar r = resp.data.result;\n\t\t\t\t\t\t\tif (r) {\n\t\t\t\t\t\t\t\tr.forEach(function (e) {\n\t\t\t\t\t\t\t\t\t// On service portal this is auto caught and presented on UI.\n\t\t\t\t\t\t\t\t\t$rootScope.$broadcast(\"$$uiNotification\", {type: e.type, message: e.text});\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treject(response);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tfunction get(table, sysId) {\n\t\t\treturn getNewPromise($http.get(URI_BASE + table + '/' + sysId, getConfig()));\n\t\t}\n\n\t\tfunction query(table, filter) {\n\t\t\tif (!filter) {\n\t\t\t\t$log.warn('query invoked without any filter!');\n\t\t\t\tif (console.trace)\n\t\t\t\t\tconsole.trace();\n\t\t\t}\n\t\t\treturn getNewPromise($http.get(URI_BASE + table, getConfig({\n\t\t\t\tsysparm_query: filter,\n\t\t\t\tsysparm_suppress_pagination_header: true\n\t\t\t})));\n\t\t}\n\n\t\tfunction update(table, obj, changedFields) {\n\t\t\tif (!obj.sys_id)\n\t\t\t\tthrow 'Cannot update object, it is not saved probably. Anyway no sys_id field found in it.';\n\t\t\tvar keys = Object.keys(obj);\n\t\t\tvar data = {};\n\t\t\tfor (var k in keys) {\n\t\t\t\tif (changedFields && changedFields.indexOf(k) === -1)\n\t\t\t\t\tcontinue;\n\t\t\t\tvar v = obj[keys[k]];\n\t\t\t\tif (v && v.value)\n\t\t\t\t\tv = v.value;\n\t\t\t\tif (keys[k] !== 'sys_id')\n\t\t\t\t\tdata[keys[k]] = v;\n\t\t\t}\n\n\t\t\treturn getNewPromise($http.patch(URI_BASE_PERMISSION + table + '/' + dataUtil.getValue(obj.sys_id), data, getConfig()));\n\t\t}\n\n\t\tfunction multiUpdate(table, objs, changedFields) {\n\t\t\tvar counter = 0;\n\t\t\tvar def = $q.defer();\n\t\t\tvar failedObjs = [];\n\t\t\tvar savedObjs = [];\n\t\t\tfunction onDone() {\n\t\t\t\tcounter--;\n\t\t\t\tif (counter === 0)\n\t\t\t\t\tdef.resolve(savedObjs, failedObjs);\n\t\t\t}\n\t\t\tif (!objs || objs.length === 0)\n\t\t\t\tdef.resolve(savedObjs, failedObjs);\n\t\t\telse\n\t\t\t\tobjs.forEach(function (obj) {\n\t\t\t\t\tvar p = update(table, obj, changedFields);\n\t\t\t\t\tcounter++;\n\t\t\t\t\tp.then(function (d) {\n\t\t\t\t\t\tsavedObjs.push(d);\n\t\t\t\t\t\tonDone();\n\t\t\t\t\t}, function (d) {\n\t\t\t\t\t\tfailedObjs.push(obj);\n\t\t\t\t\t\tonDone();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\treturn def.promise;\n\t\t}\n\n\t\tfunction count(table, query) {\n\t\t\treturn getNewPromise($http.get(AGG_URI_BASE + table, getConfig({\n\t\t\t\tsysparm_query: query,\n\t\t\t\tsysparm_count: true,\n\t\t\t\tsysparm_exclude_reference_link: undefined\n\t\t\t})), function (res) {\n\t\t\t\treturn res.stats.count * 1; // The returned count is string, converting to number\n\t\t\t});\n\t\t}\n\n\t\tvar Source = {\n\t\t\tmeeting: {\n\t\t\t\tget: function (sysId) {\n\t\t\t\t\treturn get(Tables.MEETING, sysId);\n\t\t\t\t},\n\t\t\t\tquery: function (filter) {\n\t\t\t\t\treturn query(Tables.MEETING, filter);\n\t\t\t\t},\n\t\t\t\tupdate: function(changeObject, changedFields) {\n\t\t\t\treturn update(Tables.MEETING, changeObject, changedFields);\n\t\t\t\t}\n\t\t\t},\n\t\t\tagenda: {\n\t\t\t\tget: function (sysId) {\n\t\t\t\t\treturn get(Tables.AGENDA, sysId);\n\t\t\t\t},\n\t\t\t\tquery: function (filter) {\n\t\t\t\t\treturn query(Tables.AGENDA, filter);\n\t\t\t\t},\n\t\t\t\tupdate: function (agenda, changedFields) {\n\t\t\t\t\treturn update(Tables.AGENDA, agenda, changedFields);\n\t\t\t\t},\n\t\t\t\tmultiUpdate: function (agendas, changedFields) {\n\t\t\t\t\treturn multiUpdate(Tables.AGENDA, agendas, changedFields);\n\t\t\t\t},\n\t\t\t\tcount: function (query) {\n\t\t\t\t\treturn count(Tables.AGENDA, query);\n\t\t\t\t}\n\t\t\t},\n\t\t\tattendee: {\n\t\t\t\tget: function (sysId) {\n\t\t\t\t\treturn get(Tables.ATTENDEE, sysId);\n\t\t\t\t},\n\t\t\t\tquery: function (filter) {\n\t\t\t\t\treturn query(Tables.ATTENDEE, filter);\n\t\t\t\t},\n\t\t\t\tcount: function (query) {\n\t\t\t\t\treturn count(Tables.ATTENDEE, query);\n\t\t\t\t}\n\t\t\t},\n\t\t\tchange: {\n\t\t\t\tget: function (sysId) {\n\t\t\t\t\treturn get(Tables.CHANGE, sysId);\n\t\t\t\t},\n\t\t\t\tgetByAgendaId: function (agendaId) {\n\t\t\t\t\treturn query(Tables.CHANGE, 'JOIN' + Tables.CHANGE + '.sys_id=' + Tables.AGENDA_BASE + '.task!sys_id=' + agendaId).then(function (r) {\n\t\t\t\t\t\tif (r && r.length > 0)\n\t\t\t\t\t\t\treturn r[0];\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t}, function (res) {\n\t\t\t\t\t\treturn res;\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tquery: function (filter) {\n\t\t\t\t\treturn query(Tables.CHANGE, filter);\n\t\t\t\t},\n\t\t\t\tqueryByMeetingId: function (meetingId, filter) {\n\t\t\t\t\tif (!filter)\n\t\t\t\t\t\tfilter = '';\n\t\t\t\t\telse\n\t\t\t\t\t\tfilter = '^' + filter;\n\t\t\t\t\treturn query(Tables.CHANGE, 'SUBQUERYsys_id,task,cab_agenda_item^cab_meeting=' + meetingId + '^ENDSUBQUERY' + filter);\n\t\t\t\t},\n\t\t\t\tupdate: function (change, changedFields) {\n\t\t\t\t\treturn update(Tables.CHANGE, change, changedFields);\n\t\t\t\t},\n\t\t\t\tmultiUpdate: function (changes, changedFields) {\n\t\t\t\t\treturn multiUpdate(Tables.CHANGE, changes, changedFields);\n\t\t\t\t},\n\t\t\t\tgetRelatedWindows: function (sysId, startDate, endDate) {\n\t\t\t\t\treturn getNewPromise($http.get(CHANGE_META_API + sysId + '/' + dataUtil.jsToWsDate(startDate, true) + '/' + dataUtil.jsToWsDate(endDate, true)));\n\t\t\t\t},\n\t\t\t\tgetRelatedChanges: function (sysId, startDate, endDate, byAssignee, byGroups, byPrimaryCi) {\n\t\t\t\t\tvar f = [];\n\t\t\t\t\tif (byAssignee)\n\t\t\t\t\t\tf.push('assigned_to');\n\t\t\t\t\tif (byGroups)\n\t\t\t\t\t\tf.push('group');\n\t\t\t\t\tif (byPrimaryCi)\n\t\t\t\t\t\tf.push('primary_ci');\n\t\t\t\t\treturn getNewPromise($http.get(RELATED_CHANGE_API + sysId, {\n\t\t\t\t\t\tparams: {\n\t\t\t\t\t\t\tstart_date: dataUtil.jsToWsDate(startDate),\n\t\t\t\t\t\t\tend_date: dataUtil.jsToWsDate(endDate),\n\t\t\t\t\t\t\tfilter: f.join(',')\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn Source;\n\t});\n\n} ());","sys_class_name":"sys_ui_script","sys_id":"778ee5160b2332005775aabcb4673aad","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/3eb7af7f04b12210559073c06a02f7fb","value":"3eb7af7f04b12210559073c06a02f7fb"},"ui_type":"0","sys_update_name":"sys_ui_script_778ee5160b2332005775aabcb4673aad","sys_updated_by":"admin","sys_created_on":"2017-06-26 13:32:41","name":"change_calendar_vcom.vcabDataSource","sys_name":"change_calendar_vcom.vcabDataSource","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"18","active":"true","description":"Utilities for password reset UI pages and UI macros","use_scoped_format":"false","global":"false","sys_updated_on":"2019-04-30 17:34:40","sys_tags":"","script_name":"","script":"// To be invoked by JS events, in order to update the red asterisk to grey if a field is filled or vice versa\nfunction updateMandatoryMarker(fieldElem, requiredMarkerId) {\n\n    var valueToCheck = fieldElem.value.trim();\n\n\t// Special case for select elements with a -- None -- value such as the selector on the $pwd_change page\n\tif (fieldElem.tagName.toLowerCase() == 'select') {\n\t    var selectedOption = fieldElem.options[fieldElem.selectedIndex];\n\t    valueToCheck = selectedOption.value === '0'? '' : selectedOption.value;\n    }\n\n    var requiredElem = $j('#' + requiredMarkerId);\n\tif (valueToCheck != \"\")\n\t\trequiredElem.addClass(\"is-filled\");\n\telse\n\t\trequiredElem.removeClass(\"is-filled\");\n}\n\n\n// Adds the appropriate event UI Macro event listeners.\nfunction addMacroEventListeners(loadElemId, reloadElemId) {\n\taddMacroLoadedEventListener(loadElemId || null);\n\taddMacroReloadEventListener(reloadElemId || loadElemId || null); // Use the loadElem if no reloadElem is passed\n}\n\n// Adds a event listener to set focus to a certain element\n// when the \"macroLoaded\" event is fired\nfunction addMacroLoadedEventListener(elementId) {\n\tif (elementId != null) {\n\t\tCustomEvent.observe('macroLoaded', function(e) {\n\t\t\t  focusElemIfFound(elementId);\n\t\t});\n\t}\n}\n\n// Adds a event listener to set focus to a certain element\n// when the \"macroReloaded\" event is fired\nfunction addMacroReloadEventListener(elementId) {\n\tif (elementId != null) {\n\t\tCustomEvent.observe('macroReloaded', function(e) {\n\t\t\t  focusElemIfFound(elementId);\n\t\t});\n\t}\n}\n\nfunction focusElemIfFound(elementId) {\n\tvar focusElem = gel(elementId);\n\tif (focusElem)\n\t\tfocusElem.focus();\n}","sys_class_name":"sys_ui_script","sys_id":"782e873987280300cfab6dd207cb0bb7","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/421beb3304352210559073c06a02f7ef","value":"421beb3304352210559073c06a02f7ef"},"ui_type":"0","sys_update_name":"sys_ui_script_782e873987280300cfab6dd207cb0bb7","sys_updated_by":"adam.moguel","sys_created_on":"2017-08-14 00:16:16","name":"$pwd_util","sys_name":"$pwd_util","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"114","active":"true","description":"Email enrollment UI script","use_scoped_format":"false","global":"false","sys_updated_on":"2023-03-23 05:54:20","sys_tags":"","script_name":"","script":"// Get the user ID\nfunction getUserID() {\n\tvar user_id =  gel(\"userId\").value;\n\treturn user_id;\n}\n\n// call back for container on load\nfunction email_on_load(formId) {\n\tvar currForm = document.getElementById(formId);\n\tvar verificationId = currForm.elements['verification_id'].value;\n\t\n\tgetEmails(currForm);\n}\n\n// call back for container on submit\nfunction email_on_submit(formId) {\n\tvar currForm = document.getElementById(formId);\t\n\tvar mandatory = currForm.elements['mandatory'].value == 'true';\n\t\n\tcurrForm.elements['can_submit'].value = 'true';\n\tvar valid = verifyAtleastOneEmailIsSubscribed(null, currForm);\t\n\tif (!valid) {\n\t\t// If form is invalid and mandatory, show message and select the tab to draw the user's attention.\n\t\tif (mandatory) {\n\t\t\tvar tabId = 'tablabel' + currForm.elements['tab_index'].value;\n\t\t    var tab = gel(tabId);\n\t\t    tab.click();\n\t\t    displayErrorMessage(getMessage('You must authorize at least one email'));\n\t\t    return false;\n\t\t}\n\t\t// if not mandatory we dont want the form submitted and enrollment inserted\n\t\telse {\n\t\t\tcurrForm.elements['can_submit'].value = 'false';\n\t\t}\n\t}\n\t\n\treturn true;\n}\n\n// Get the list of Emails for the user\n// Subscription info is also received and ui is updated accordingly.\nfunction getEmails(currentForm) {\n\t// clean up first\n\tvar verificationId = currentForm.elements['verification_id'].value;\n\tclearAllEmails('email_addresses_' + verificationId);\n\tvar ga = new GlideAjax('PwdAjaxEnrollEmail');\n\tga.addParam('sysparm_name', 'getEmails');\n\tga.addParam('sysparm_user_id', getUserID());\n\tga.getXML(handleGetEmailsResponse, null, currentForm);\n}\n\n// remove all generated Email details\nfunction clearAllEmails(element) {\n\tvar myNode = document.getElementById(element);\n\twhile (myNode.firstChild) {\n\t\tmyNode.removeChild(myNode.firstChild);\n\t}\n}\n\nfunction handleGetEmailsResponse(response, currentForm) {\n\tvar res =  response.responseXML.getElementsByTagName(\"response\");\n\tvar count = handleEmailResponse(response, currentForm);\n\t/*\n\tif (count == 0) {\n\t\tdisplayHeader(getMessage('There is no email registered for this user'), currentForm);\n\t} else {\n\t\tdisplayHeader(getMessage('Available emails'), currentForm);\n\t}\n\t*/\n}\n\n// Get the list of emails and add to the email list\nfunction handleEmailResponse(response, currentForm) {\n\tvar containsUserProfileEmail = false;\n\tvar emails = response.responseXML.getElementsByTagName(\"email\");\n\tif (emails.length > 0) {\n\t\t// If the table already exists, dont add again\n\t\tvar verificationId = currentForm.elements['verification_id'].value;\n\t\tvar eTable = document.getElementById('email_address_table_' + verificationId);\n\t\tif (eTable == null) {\n\t\t\teTable = addEmailHeaderRow(currentForm);\n\t\t}\n\t\tvar eBody = document.createElement('tbody');\n\t\teTable.appendChild(eBody);\n\t\t\n\t\tfor (var i = 0; i != emails.length; i++) {\n\t\t\taddEmailsDetailRow(emails[i], currentForm, eBody);\n\t\t\t\n\t\t\tif (emails[i].getAttribute('isUserProfileEmail') === 'true')\n\t\t\t\tcontainsUserProfileEmail = true;\n\t\t}\n\t}\n\t\n\t// If the user is already enrolled with their user profile email, hide the shortcut button (or show it if they're not)\n\tvar addProfEmailBtn = $j('#add_profile_email_btn');\n\tif (containsUserProfileEmail)\n\t\taddProfEmailBtn.hide();\n\telse\n\t\taddProfEmailBtn.show();\t\n\t\n\treturn emails.length;\n}\n\n// add email detail row - makes the checkbox, email name and the email verification fields\nfunction addEmailHeaderRow(currentForm) {\n\tvar verificationId = currentForm.elements['verification_id'].value;\n\tvar emailDivElem = document.getElementById('email_addresses_' + verificationId);\n\t\n\t// Create a table\n\tvar emailTableRow = document.createElement('table');\n\temailTableRow.id = 'email_address_table_' + verificationId;\n\tvar eHead = document.createElement('thead');\n\temailTableRow.appendChild(eHead);\n\t\n\t// Create a table header\n\tvar eTableHeaderRow = document.createElement('tr');\n\teTableHeaderRow.id = 'email_address_table_header_' + verificationId;\n\teHead.appendChild(eTableHeaderRow);\n\t\n\t// Create the table header th tags\n\t// Column: Authorized\n\tvar ethCellUsed = document.createElement('th');\n\tethCellUsed.id = 'email_address_table_th_used_' + verificationId;\n\tsetText(ethCellUsed, getMessage('Authorized'));\n\teTableHeaderRow.appendChild(ethCellUsed);\n\t\n\t// Column: Name\n\tvar ethCellName = document.createElement('th');\n\tethCellName.id = 'email_address_table_th_name_' + verificationId;\n\tsetText(ethCellName, getMessage('Name'));\n\tethCellName.align='left';\n\teTableHeaderRow.appendChild(ethCellName);\n\t\n\t// Column: Email\n\tvar ethEmailAddr = document.createElement('th');\n\tethEmailAddr.id = 'email_address_table_th_email_' + verificationId;\n\tsetText(ethEmailAddr, getMessage('Email'));\n\tethEmailAddr.align = 'left';\n\teTableHeaderRow.appendChild(ethEmailAddr);\n\t\n\t// Column: Verified\n\tvar ethCellVerified = document.createElement('th');\n\tethCellVerified.id = 'email_address_table_th_verified_' + verificationId;\n\tsetText(ethCellVerified, getMessage('Status'));\n\teTableHeaderRow.appendChild(ethCellVerified);\n\t\n\temailDivElem.appendChild(emailTableRow);\n\treturn emailTableRow;\n}\n\n// add email detail row - makes the checkbox, email name and the email verification fields\nfunction addEmailsDetailRow(email, currentForm, body) {\n\tvar emailId = email.getAttribute(\"sys_id\");\n\tvar verificationId = currentForm.elements['verification_id'].value;\n\tvar devicesElem = document.getElementById('email_address_table_' + verificationId);\n\tvar emailVerified = email.getAttribute(\"isVerified\") === 'true';\n\tvar isRTL = (document.dir == \"rtl\");\n\t\t\n\t// Create a table row\n\tvar emailRow = document.createElement('tr');\n\tbody.appendChild(emailRow);\n\t\n\t// Create a checkbox cell\n\tvar checkboxCell = document.createElement('td');\n\tcheckboxCell.align = 'center';\n\temailRow.appendChild(checkboxCell);\n\t\n    var cbSpan = document.createElement('span');\n\tcbSpan.className =\"input-group-checkbox\";\n\tcheckboxCell.appendChild(cbSpan);\n\t\n\t// Create the checkbox\n\tvar checkbox = document.createElement('input');\n\tcheckbox.className = 'checkbox device'; // \"device\" is used by the tests\n\tcheckbox.type = 'checkbox';\n\t// Displayed to user in the message when selecting/unselecting an email\n\tcheckbox.name = email.getAttribute(\"name\") + ' (' + email.getAttribute(\"email\") + ')';\n\tcheckbox.id = 'email_address_checkbox_' + emailId;\n\tcheckbox.value = emailId; // The value is emailId so we can use it later in updateSubscriptionToEmail\n\tcheckbox.onclick = function() { updateSubscriptionToEmail(this); };\n\tcheckbox.disabled = !emailVerified;\n\tcheckbox.checked = email.getAttribute(\"isSubscribed\").toLowerCase() === 'true' && emailVerified;\n\tupdateCheckboxAriaLabel(checkbox, email.getAttribute(\"name\"));\n\t\n\tcbSpan.appendChild(checkbox);\n\t\n\tvar checkboxLabel = document.createElement('label');\n\tcheckboxLabel.className = \"checkbox-label\";\n\tcheckboxLabel.setAttribute('for', checkbox.id);\t\n\tcbSpan.appendChild(checkboxLabel);\n\t\n\t// Email label cell\n\tvar emailAddrLabelCell = document.createElement('td');\n\temailAddrLabelCell.className = 'pwd-enroll-email-name-cell';\n\temailRow.appendChild(emailAddrLabelCell);\n\t\n\t// Email label\n\tvar emailAddrLabel = document.createElement(\"span\");\n\temailAddrLabel.id = 'email_address_name_' + emailId;\n\tsetText(emailAddrLabel, email.getAttribute(\"name\"));\n\temailAddrLabelCell.appendChild(emailAddrLabel);\n\tif (isRTL)\n\t\temailAddrLabelCell.style=\"text-align: right\";\n\t\n\t//  Email Address\n\tvar emailLabelCell = document.createElement('td');\n\temailLabelCell.className = 'pwd-enroll-email';\n\temailRow.appendChild(emailLabelCell);\n\tvar emailLabel = document.createElement(\"span\");\n\temailLabel.id = 'email_address_' + emailId;\n\tsetText(emailLabel, email.getAttribute(\"email\"));\n\temailLabelCell.appendChild(emailLabel);\n\tif (isRTL)\n\t\temailLabelCell.style=\"text-align: right\";\n\t\n    var verifyButtonCell = document.createElement('td');\n    emailRow.appendChild(verifyButtonCell);\n\t\n\t// if email is not verified, add the Verify button, code message, code textbox and ok button\n\t// Verify button cell\n    if (emailVerified) {\n\t\tvar verifyButton = document.createElement(\"button\");\n\t\tverifyButton.id = 'email_address_verify_button_' + emailId;\n\t\tverifyButton.style.whiteSpace = 'nowrap';\n\t\tverifyButton.style.width = \"auto\";\n\t\tverifyButton.className = 'btn btn-primary btn-pwd-submit';\n\t\tverifyButton.disabled = true;\n\t\tverifyButton.innerHTML = getMessage('Verified');\n\t\tverifyButtonCell.appendChild(verifyButton);\n\t\tverifyButtonCell.setAttribute(\"aria-label\", getMessage('Verified'));\n\t}\n\t\n\telse {\n\t\t// Verify button\n\t\tvar resetButton = document.createElement(\"button\");\n\t\tverifyButtonCell.appendChild(resetButton);\n\t\tresetButton.setAttribute('data-target', '#verify_email_address_dlg');\n\t\tresetButton.setAttribute('data-toggle', 'modal');\n\t\tresetButton.className = \"btn btn-primary btn-pwd-submit\";\n\t\tresetButton.id = \"email_address_verify_button_\" + emailId;\n\t\tresetButton.style.whiteSpace = \"nowrap\";\n\t\tresetButton.style.width = \"auto\";\n\t\tresetButton.innerHTML = getMessage('Verify');\n\t\tresetButton.onclick = function() {\n\t\t\tinitVerifyEmailDialog(this);\n\t\t\treturn false;\n\t\t};\n\t\tresetButton.setAttribute(\"aria-label\", getMessage('Verify email ' + email.getAttribute(\"name\")));\n\t}\n}\n\nfunction getEmail(elem) {\n\tvar currentForm = elem.form;\n\tvar verId = currentForm.elements['verification_id'].value;\n\tvar emailElem = currentForm.elements['sysparm_email_addr_' + verId];\n\treturn emailElem.value.trim();\n}\n\nfunction getDeviceIdUsingEmail(verId, email) {\n\tvar cellElems = $j('#email_address_table_' + verId + ' .pwd-enroll-email');\n\tfor (var i = 0; i < cellElems.length; i++) {\n\t\tif($j(cellElems[i]).text() == email) {\n\t\t\tvar spanId = $j(cellElems[i]).find('span').attr('id');\n\t\t\treturn spanId.replace('email_address_', '');\n\t\t}\n\t}\n\treturn \"\";\n}\n\n// Add a new email and subscription\nfunction  addNewEmail(elem) {\n\tvar currentForm = elem.form;\n\tvar verId = currentForm.elements['verification_id'].value;\n\tvar gMsg = new GwtMessage();\n\t// email name\n\tvar name = getFieldValue(currentForm, 'sysparm_email_address_name_' + verId, \n\t\t\t'email_name_form_group_' + verId, 'retype_email_address_name_' + verId, gMsg.getMessage(\"You must specify a name to associate with the email address\"));  // I18N_OK 08-04-16\n\tif (name == \"\")\n\t\treturn false;\n\t\n\t//email address\n\tvar emailAddr = getFieldValue(currentForm, 'sysparm_email_addr_' + verId, 'email_form_group_' + verId, 'retype_email_addr_' + verId, gMsg.getMessage(\"You must specify an email address\"));\n\tvar validEmail = /^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/.test(emailAddr);\n\t\n\tif(!validEmail){\n\t\tvar formGroupId = 'email_form_group_' + verId;\n\t\tvar helpBlockId = 'retype_email_addr_' + verId;\n\t\tdisplayFieldError(helpBlockId, getMessage(\"Invalid Email address\"), formGroupId);\n\t\treturn false;\n\t}\n\n\tvar ga = new GlideAjax('PwdAjaxEnrollEmail');\n\tga.addParam('sysparm_name', 'addEmail');\n\tga.addParam('sysparm_user_id', getUserID());\n\tga.addParam('sysparm_email_addr', emailAddr);\n\tga.addParam('sysparm_email_name', name);\n\t\n\tga.getXML(handleAddEmailResponse, null, currentForm);\n\t\n\treturn true;\n}\n\nfunction addProfileEmail(elem) {\n\tvar currentForm = elem.form;\n\tvar ga = new GlideAjax('PwdAjaxEnrollEmail');\n\tga.addParam('sysparm_name', 'addProfileEmail');\n\tga.addParam('sysparm_user_id', getUserID());\n\tif(currentForm.elements['verification_id'])\n\t\tga.addParam('sysparm_verification_id', currentForm.elements['verification_id'].value);\n\tga.getXML(handleAddEmailResponse, null, currentForm);\n}\n\nfunction getFieldValue(currentForm, fieldId, formGroupId, helpBlockId, message) {\n\tvar ele = currentForm.elements[fieldId];\n\tele.value = ele.value.trim();\n\tif (ele.value == \"\") {\n\t\tdisplayFieldError(helpBlockId, message, formGroupId);\n\t}\n\treturn ele.value;\n}\n\n\nfunction handleAddEmailResponse(response, currentForm) {\n\tvar verificationId = currentForm.elements['verification_id'].value;\n\t\n\tvar res =  response.responseXML.getElementsByTagName(\"response\");\n\tvar status = res[0].getAttribute(\"status\");\n\tvar message = res[0].getAttribute(\"message\");\n\tvar value = res[0].getAttribute(\"value\");\n\t\n\tclearAllEmails('email_addresses_' + verificationId);\n\thandleEmailResponse(response, currentForm);\n\t\n\t// if added clear up the input field. It's already added.\n\tif (status == 'success') {\n\t\tcurrentForm.elements['sysparm_email_addr_' + verificationId].value = '';\n\t\tcurrentForm.elements['sysparm_email_address_name_' + verificationId].value = '';\n\n\t}\n\t\n\t// the record info for newly added email addresses\n\t// displayMessage(message, currentForm);\n\tg_form.clearMessages();\n\tg_form.addInfoMessage(message);\n}\n\n// Update subscription of a email, represented by the checkbox.\nfunction updateSubscriptionToEmail(box) {\n\tupdateCheckboxAriaLabel(box, box.name);\n\t\n\tvar currentForm = box.form;\n\t\n\tvar ga = new GlideAjax('PwdAjaxEnrollEmail');\n\tga.addParam('sysparm_name', 'updateEmailSubscription');\n\tga.addParam('sysparm_user_id', getUserID());\n\tga.addParam('sysparm_device_id', box.value);\n\tga.addParam('sysparm_email_name', box.name);\n\tga.addParam('sysparm_subscribed', box.checked);\n\tif(currentForm.elements['verification_id'])\n\t\tga.addParam('sysparm_verification_id', currentForm.elements['verification_id'].value);\n\t\n\tga.getXML(handleUpdateEmailSubscriptionResponse, null, box.form);\n}\n\nfunction updateCheckboxAriaLabel(checkbox, emailName) {\n\tvar checkboxMsg = checkbox.checked? getMessage(\"Unselect the device  \" + emailName) : getMessage(\"Select the device \" + emailName);\n\tcheckbox.setAttribute(\"aria-label\", checkboxMsg);\n}\n\nfunction handleUpdateEmailSubscriptionResponse(response, currentForm) {\n\thandleEmailResponseAndShowMessage(response, currentForm);\n\thandleIfNoDeviceSubscribed(response, currentForm);\n}\n\n// Verify if there is at least one email selected\n// If not, give a message. Do not allow the last one to be unselected.\n// Returns if atleast one email is selected or not\nfunction verifyAtleastOneEmailIsSubscribed(box, currentForm) {\n\tvar verificationId = currentForm.elements['verification_id'].value;\n\tvar divElem = document.getElementById('email_addresses_' + verificationId);\n\tvar checkboxElems = divElem.getElementsByTagName('input');\n\tvar foundCheckedEmail = false;\n\t\n\t// if at least one is checked, we are good.\n\tfor (var i = 0; i != checkboxElems.length; i++) {\n\t\tif (checkboxElems[i].type != 'checkbox') {\n\t\t\tcontinue;\n\t\t}\n\t\tif (checkboxElems[i].checked) {\n\t\t\tfoundCheckedEmail = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (foundCheckedEmail) {\n\t\t// displayMessage(\"\", currentForm);\n\t\treturn true;\n\t} else {\n\t\t// displayMessage(getMessage('You must subscribe to at least one email'), currentForm);\n\t\tif (box != null)\n\t\t\tbox.checked = true;\n\t\treturn false;\n\t}\n}\n// PRB1160019 - Don't allow deletion of email addresses due to side effects involving the cmn_notif_device table which is\n// outside of our \"jurisdiction\"\n//function deleteEmailAddress(deleteItem, currentForm) {\n//\tvar itemId = deleteItem.id;\n//\t// Extract emailId from the buttonId. ButtonId is email_address_verify_button_ + emailId\n//\tvar emailId = itemId.replace('email_delete_link_', '');\n//\tvar verificationId = currentForm.elements['verification_id'].value;\n//\tvar box  = currentForm.elements['email_address_checkbox_' + emailId];\n//\tvar emailName = document.getElementById('email_address_name_' + emailId).innerHTML;\n//\n//\t/*\n//\t// make sure we are not deleting the last checked email.\n//\tvar enrolled = box.checked;\n//\tbox.checked = false;\n//\tif (enrolled && !verifyAtleastOneEmailIsSubscribed(box, currentForm)) {\n//\t\tbox.checked = enrolled;\n//\t\treturn;\n//\t}\n//\t*/\n//\n//\tvar dd = new GlideModal(\"glide_confirm_basic\");\n//\tdd.setTitle(new GwtMessage().getMessage('Confirm deletion for email: {0}', emailName));\n//\tdd.setPreference('onPromptComplete', function() {\n//\t\t// clean up first\n//\t\tclearAllEmails('email_addresses_' + verificationId);\n//\t\t// get the result back\n//\t\tvar ga = new GlideAjax('PwdAjaxEnrollEmail');\n//\t\tga.addParam('sysparm_name', 'deleteEmail');\n//\t\tga.addParam('sysparm_device_id', emailId);\n//\t\tga.addParam('sysparm_user_id', getUserID());\n//\t\tga.getXML(handleDeleteEmailResponse, null, currentForm);\n//\t});\n//\tdd.setPreference('onPromptCancel', function() {});\n//\tdd.render();\n//\n//}\n//\n//function handleDeleteEmailResponse(response, currentForm) {\n//\thandleEmailResponseAndShowMessage(response, currentForm);\n//\thandleEmailResponse(response, currentForm);\n//\thandleIfNoDeviceSubscribed(response, currentForm);\n//}\n\n\nfunction resendEmailEnrollmentCode(elem) {\n\tvar currentForm = elem.form;\n\tvar verificationId = currentForm.elements['verification_id'].value;\n\tvar emailId = gel('verify_email_address_id_' + verificationId).value;\n\tsendEnrollmentCodeToEmail(currentForm, verificationId, emailId);\n}\n\nfunction initVerifyEmailDialog(elem) {\n\tvar currentForm = elem.form;\n\tvar verificationId = currentForm.elements['verification_id'].value;\n\tvar buttonId = elem.id;\n\t// Extract emailId from the buttonId. ButtonId is email_address_verify_button + emailId\n\tvar emailId = buttonId.replace('email_address_verify_button_', '');\n\n\tvar name     = $j('#email_address_name_' + emailId).text();     // Use jquery to better handle both chrome and Firefox\n\tvar email    = $j('#email_address_' + emailId).text();   // Use jquery to better handle both chrome and Firefox\n\t\n\tcurrentForm.elements['verify_email_address_id_' + verificationId].value = emailId;\n\tcurrentForm.elements['verify_email_address_name_' + verificationId].value = name;\n\tcurrentForm.elements['verify_email_address_email_' + verificationId].value = email;\n\t\n\tcurrentForm.elements['verify_dialog_email_code_' + verificationId].value = '';\n\n\tsendEnrollmentCodeToEmail(currentForm, verificationId, emailId);\n}\n\n\n// Send a code to the email for the purpose of verifying it\nfunction sendEnrollmentCodeToEmail(currentForm, verificationId, emailId) {\n\tgel('verify_email_dialog_error_msg_' + verificationId).innerHTML = '';\n\n\tvar ga = new GlideAjax('PwdAjaxEmailProcessor');\n\tga.addParam('sysparm_name', 'generateEnrollmentCode');\n\tga.addParam('sysparm_verification_id', verificationId);\n\tga.addParam('sysparm_device_id', emailId);\n\tga.getXML(handledEmailEnrollmentCodeResponse, null, currentForm);\n}\n\n// after the enrollment code is sent to the Email, show success msg\nfunction handledEmailEnrollmentCodeResponse(response, currentForm) {\n\tvar verificationId = currentForm.elements['verification_id'].value;\n\t\n\tvar res =  response.responseXML.getElementsByTagName(\"response\");\n\tvar message = res[0].getAttribute(\"message\");\n\tvar status = res[0].getAttribute(\"status\");\n\tvar emailId = res[0].getAttribute(\"value\");\n\n    if (message)\n        gel('verify_email_dialog_error_msg_' + verificationId).innerHTML = message;\n}\n\n// Verify if the code entered matches the code sent\nfunction verifyEmailAddressWithEnrollmentCode(elem) {\n\tvar currentForm = elem.form;\n\tvar verificationId = currentForm.elements['verification_id'].value;\n\t\n\tvar emailId = currentForm.elements['verify_email_address_id_' + verificationId].value;\n\n\tvar ga = new GlideAjax('PwdAjaxEmailProcessor');\n\tga.addParam('sysparm_name', 'verifyEnrollmentCode');\n\t\n\tvar code = currentForm.elements['verify_dialog_email_code_' + verificationId].value.trim();\n\tcurrentForm.elements['verify_dialog_email_code_' + verificationId].value = code;\n\t\n\tif (code == \"\") {\n\t\tdisplayFieldError('verify_email_dialog_error_msg_' + verificationId, \n\t\t\t\t\t\t new GwtMessage().getMessage('Code cannot be empty'),\n\t\t\t\t\t\t 'verify_dialog_email_code_form_group_' + verificationId);\n\t\treturn false;\n\t}\n\t\n\tga.addParam('sysparm_device_id', emailId);\n\tga.addParam('sysparm_verification_id', verificationId);\n\tga.addParam('sysparm_email_code', code);\n\tga.addParam('sysparm_user_id', getUserID());\n\t\n\tga.getXML(handledEmailEnrollmentVerifyResponse, null, currentForm);\n\t\n\treturn true;\n}\n\n// after the enrollment code is verified, update UI to remove verification related fields\nfunction handledEmailEnrollmentVerifyResponse(response, currentForm) {\n\thandleEmailResponseAndShowMessage(response, currentForm);\n\n\tvar res =  response.responseXML.getElementsByTagName(\"response\");\n\tvar status = res[0].getAttribute(\"status\");\n\tif (status == 'fail') {\n\t\treturn;\n\t}\n\t\n\tvar emailId = res[0].getAttribute(\"value\");\n\t\n\t// Update the email verification status, enable the checkbox and also select it\n\tcurrentForm.elements['email_address_checkbox_' + emailId].disabled = false;\n\tcurrentForm.elements['email_address_checkbox_' + emailId].checked = true;\n\t\n\tcurrentForm.elements['email_address_verify_button_' + emailId].innerHTML = getMessage('Verified');  // I18N_OK 08-04-16\n\tcurrentForm.elements['email_address_verify_button_' + emailId].disabled = true;\n\t\n\tgetEmails(currentForm);\n}\n\nfunction handleEmailResponseAndShowMessage(response, currentForm) {\n\tvar res = response.responseXML.getElementsByTagName(\"response\");\n\tvar message = res[0].getAttribute(\"message\");\n\tvar status = res[0].getAttribute(\"status\");\n\n\tg_form.clearMessages();\n\tif (status == 'success') {\n\t\tg_form.addInfoMessage(message);\n\t} else {\n\t\tg_form.addErrorMessage(message);\n\t}\n}\n\nfunction handleIfNoDeviceSubscribed(response, currentForm) {\n\tvar status = response.responseXML.getElementsByTagName(\"response\")[0].getAttribute(\"status\");\n\tif (status == \"success\" && !verifyAtleastOneEmailIsSubscribed(null, currentForm))\n\t\tg_form.addErrorMessage(getMessage(\"You must authorize at least one email\"));\n}\n\nfunction setText(elem, txt){\n\tvar node = document.createTextNode(txt);\n\telem.appendChild(node);\n}\n\nfunction openAddEmailDialog(elem) {\n\tclearEmailAddressForm(elem);\n}\n\nfunction clearEmailAddressForm(elem) {\n\tvar currentForm = elem.form;\n\tvar verificationId = currentForm.elements['verification_id'].value;\n\t\n\tvar fieldId = 'sysparm_email_address_name_' + verificationId;\n\tvar formGroupId = 'email_name_form_group_' + verificationId;\n\tvar errorId = 'retype_email_address_name_' + verificationId;\n\tcurrentForm.elements[fieldId].value = '';\n\tclearEmailFieldError(errorId, formGroupId);\n\t\t\n\tfieldId = 'sysparm_email_addr_' + verificationId;\n\tformGroupId = 'email_form_group_' + verificationId;\n\terrorId = 'retype_email_addr_' + verificationId;\n\tcurrentForm.elements[fieldId].value = '';\n\tclearEmailFieldError(errorId, formGroupId);\n\n}\n\nfunction displayFieldError(fieldId, message, formGroupId) {\n\tvar fieldElem = document.getElementById(fieldId);\n\tif (fieldElem != undefined) {\n\t\tfieldElem.classList.add(\"icon-alert\");\n\t\tfieldElem.innerHTML = \" \" + message;\n\n        $j(\"[aria-describedby='\" + fieldId + \"']\").attr('aria-invalid', 'true');\n\t}\n\t$j('#' + formGroupId).addClass(\"has-error\");\n}\n\nfunction clearEmailFieldError(fieldId, formGroupId) {\n\tvar fieldElem = document.getElementById(fieldId);\n\tif (fieldElem != undefined) {\n\t\tfieldElem.classList.remove(\"icon-alert\");\n\t\tfieldElem.innerHTML = '';\n\n        $j(\"[aria-describedby='\" + fieldId + \"']\").attr('aria-invalid', 'false');\n\t}\n\t$j('#' + formGroupId).removeClass(\"has-error\");\n}\n","sys_class_name":"sys_ui_script","sys_id":"78d6b8630b333200572a6f3ef6673a07","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/421beb3304352210559073c06a02f7ef","value":"421beb3304352210559073c06a02f7ef"},"ui_type":"0","sys_update_name":"sys_ui_script_78d6b8630b333200572a6f3ef6673a07","sys_updated_by":"admin","sys_created_on":"2017-07-12 16:56:25","name":"$pwd_enroll_email_ui","sys_name":"$pwd_enroll_email_ui","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":"read"},{"ignore_in_now_experience":"false","sys_mod_count":"101","active":"true","description":"Knowledge fix to increase the iFrame size.","use_scoped_format":"false","global":"false","sys_updated_on":"2022-11-11 10:15:14","sys_tags":"","script_name":"","script":"(function() {\n\tvar contentWindow = '',\n\t\tiframeArray = [],\n\t\tpollingDelay = 250,\n\t\tprevHeight,\n\t\tsrc = '',\n\t\tblacklist = [],\n\t\tbottomMargin = 80;\n\n\t/**\n \t* Executes the proper calculation strategy and returns the internal height of the iframe.  You should edit this function if you find strategies that are not accounted for\n \t* @function getHeight\n \t*/\n\tvar getHeight = function() {\n\t\tif (contentWindow.$j('body')[0].style.overflow != 'hidden') {\n\t\t\tcontentWindow.$j('body')[0].style.overflow = 'hidden';\n\t\t}\n\t\t//if (iframePageIs('$knowledge.do') || iframePageIs('knowledge_home_launcher.do')) {\n\t\tif (iframePageIs('$knowledge.do')) {\n\t\t\t// Knowledge v3 UI\n\t\t\t// Shrink iframe when the src changes to force a recalculation\n\t\t\tif (src != contentWindow.location.href) {\n\t\t\t\tsrc = contentWindow.location.href;\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\treturn getTotalHeight(['.application'], 0);\n\t\t}\n\t\telse if (iframePageIs('kb_view.do')) {\n\t\t\treturn getTotalHeight([\n\t\t\t\t'body > .outputmsg_div',\n\t\t\t\t'body > .navbar',\n\t\t\t\t'.kb-view-content-wrapper',\n\t\t\t\t'.snc-article-header-author',\n\t\t\t\t'.snc-article-attachments',\n\t\t\t\t'.snc-article-footer-section',\n\t\t\t\t'.snc-article-footer'\n\t\t\t], bottomMargin);\n\t\t}\n\t\telse if (iframePageIs('kb_home.do')) {\n\t\t\treturn getTotalHeight([\n\t\t\t\t'body .navbar',\n\t\t\t\t'body > .kb_main'\n\t\t\t], bottomMargin);\n\t\t}\n\t\telse \n\t\t\treturn null;\n\t};\n\n\t/**\n \t* @function getTotalHeight\n \t* @param {array} divs - Array of CSS selectors that identify the div's whose height should be added in the calculation\n \t* @param {int} modifier - Number of additional pixels to add as a modifier\n \t*/\n\tvar getTotalHeight = function(divs, modifier) {\n\t\tvar h = 0;\n\n\t\t$j.each(divs, function(ix, val) {\n\t\t\th = h + contentWindow.$j(val).height();\n\t\t});\n\n\t\treturn h + modifier;\n\t};\n\n\t/**\n \t* Determines if the url contains the given fragment\n \t* @function iframePageIs\n \t* @param {string} urlFragment - String to search for in the iframe url\n \t*\n \t*/\n\tvar iframePageIs = function (urlFragment) {\n\t\treturn (contentWindow.location.href.indexOf(urlFragment) != -1);\n\t};\n\n\t/**\n \t* A recursive polling function that gets the internal height of the iframe and resizes the it accordingly.\n \t* @function resizeIframeFix\n \t*/\n\tvar resizeIframeFix = function(iframe) {\n\t\tsetTimeout(function() {\n\t\t\tvar curHeight;\n\t\t\tvar i;\n\n\t\t\tfor (i = 0; i < blacklist.length; i++) {\n\t\t\t\tif (iframePageIs(blacklist[i])) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($j && contentWindow.$j) {\n\t\t\t\tcurHeight = getHeight();\n\n\t\t\t\tif (curHeight !== null && prevHeight != curHeight) {\n\t\t\t\t\t//curHeight is set to -1 every time src changes on $knowledge.do\n\t\t\t\t\tif(curHeight == -1){\n\t\t\t\t\t\t$j(iframe)[0].style = \"min-height:500px\";\n\t\t\t\t\t}else{\n\t\t\t\t\t\t$j(iframe).height(curHeight);\n\t\t\t\t\t\tprevHeight = getHeight();\n\t\t\t\t\t\tif(iframePageIs(\"kb_home.do\"))\n\t\t\t\t\t\t\t$j(iframe)[0].style = \"min-height:\"+ ($j(iframe)[0].style.height || \"700px\") + \";min-width:\"+ ($j(iframe)[0].style.width || \"100%\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tresizeIframeFix(iframe);\n\t\t}, pollingDelay);\n\t};\n\n\tvar queryParamsString = window && window.location && window.location.search ? window.location.search : '';\n\tvar isFromPopup = false;\n\ttry{\n\t\tvar queryParams = new URLSearchParams(queryParamsString);\n\t\tisFromPopup = (queryParams.get('sysparm_context') == 'popup');\n\t}catch(e){\n\t\tconsole.log(e);\n\t}\n\n\t// Initiate knowledge page resize if we are in iframe and not in platform UI iframe\n\tif (parent && top != window && top.location.pathname != '/' && top.location.pathname != '/navpage.do' && top.location.pathname != '/nav_to.do' && top.location.pathname != '/gtb.do' && (top.location.pathname.indexOf('now/nav/ui/classic') == -1) && !isFromPopup) {\n\t\t//detect end of page - scrolling\n\t\t$j(top).scroll(function() {\n\t\t\tif(top && typeof angular !== 'undefined'){\n\t\t\t\tif($j(top).scrollTop() + $j(top).height() == $j(top.document).height()) {\n\t\t\t\t\tvar articleScope = angular.element($j('div[articles-container]')[0]).scope(),\n\t\t\t\t\t\tsearchScope = angular.element($j('.search-results')[0]).scope();\n\n\t\t\t\t\tif(articleScope)\n\t\t\t\t\t\tarticleScope.$parent.$parent.getArticlesAndQuestions();\n\t\t\t\t\tif(searchScope)\n\t\t\t\t\t\tsearchScope.$parent.$parent.executeSearch(searchScope.filterQuery.keywords);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t//resizing\n\t\tparent.addAfterPageLoadedEvent(function() {\n\t\t\tcontentWindow = window; //iframe window\n\t\t\tresizeIframeFix(parent.window.$j('iframe'));\n\t\t});\n\t}\n})();","sys_class_name":"sys_ui_script","sys_id":"7d41c51cdb1ca2005bc67b7e0f96197d","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/2fe727ff04b12210559073c06a02f7dd","value":"2fe727ff04b12210559073c06a02f7dd"},"ui_type":"0","sys_update_name":"sys_ui_script_7d41c51cdb1ca2005bc67b7e0f96197d","sys_updated_by":"admin","sys_created_on":"2017-09-15 19:31:35","name":"KnowledgeIframeFix","sys_name":"KnowledgeIframeFix","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"95","active":"true","description":"Module sn.change_management.cab.core.  Contains core components for the CAB Workbench","use_scoped_format":"false","global":"false","sys_updated_on":"2021-03-03 16:42:01","sys_tags":"","script_name":"core","script":"angular.module(\"sn.change_management.cab.core\", [])\n.constant('CAB', {\n\tAGENDA: {\n\t\tREQUEST_LIMIT: 60,\n\t\tREQUEST_SKEW: 20,\n\t\tTIMEOUT_MAX: 2000,\n\t\tTIMEOUT_SKEW: 2000,\n\t\tPAGE_SIZE: 40,\n\t\tCHANNEL_WATCH_MAX: 150\n\t},\n\tVALID_FILTERS: [\"all\",\"pending\",\"mine\",\"complete\",\"approved\"],\n\tFOCUS_TO_CHANGE_TAB: 'cab_change_tab:focus',\n\tAGENDA_ITEM: 'cab_agenda_item',\n\tDEFINITION: 'cab_definition',\n\tMEETING: 'cab_meeting',\n\tATTENDEE: 'cab_attendee',\n\tRUNTIME_STATE: 'cab_runtime_state',\n\tCHANGE_REQUEST: 'change_request',\n\tTASK: 'task',\n\tAPPROVAL_SERVICE: '/api/sn_change_cab/cab/approval/',\n\tSERVICE: {\n\t\tRUNTIME: '/api/sn_change_cab/cab/runtime_state/',\n\t\tAGENDA: '/api/sn_change_cab/cab/agenda/',\n\t\tAGENDA_ITEM: '/api/sn_change_cab/cab/agenda/item/',\n\t\tAPPROVAL: '/api/sn_change_cab/cab/approval/',\n\t\tATTENDEE: '/api/sn_change_cab/cab/attendee/',\n\t\tHOST_MEETING:'/api/sn_change_cab/cab/runtime_state/change_host/',\n\t\tNOTES_EDITOR:'/api/sn_change_cab/cab/runtime_state/notes_editor/',\n\t\tMEETING_CALENDAR: '/api/sn_change_cab/cab/meeting/calendar/',\n\t\tINITIAL: \"/api/sn_change_cab/cab/initial/\"\n\t},\n\tCAL_TAB: \"cab-cal-tab\",\n\tFORM_TAB: \"cab-form-tab\",\n\tPORTAL: {'ID': 'cab_workbench', 'SUFFIX': 'cab'},\n\tPORTAL_PREFIX: 'cab',\n\tPORTAL_ID: 'cab_workbench',\n\tWORKBENCH: 'cab_workbench',\n\tCALENDAR: 'cab_calendar',\n\tPENDING: 'pending',\n\tIN_PROGRESS: 'in_progress',\n\tCOMPLETE: 'complete',\n\tCANCELED: 'canceled',\n\tPAUSED: 'paused',\n\tNO_DECISION: \"no_decision\",\n\tAPPROVED: \"approved\",\n\tALL: \"all\",\n\tMINE: \"mine\",\n\tPREAPPROVED: \"preapproved\",\n\tREJECTED: \"rejected\",\n\tACTION_PAUSE: 'current_agenda_action_pause',\n\tACTION_RESUME: 'current_agenda_action_resume',\n\tACTION_NEXT: 'current_agenda_action_next',\n\tACTION_FINISH: 'current_agenda_action_finish',\n\tACTION_DUMMY: 'dummy',\n\tACTION_APPROVE: 'current_agenda_action_approve',\n\tACTION_REJECT: 'current_agenda_action_reject',\n\tACTION_CURRENT_AGENDA_ITEM: 'current_agenda_item'\n})\n.constant('MTG', {\n\tAGENDA_ITEM: 'mtg_agenda_item',\n\tATTENDEE: 'mtg_attendee',\n\tDEFINITION: 'mtg_definition',\n\tMEETING: 'mtg_meeting',\n\tRUNTIME_STATE: 'mtg_runtime_state'\n})\n.constant('KEY', {\n\t\"ESC\": {\n\t\t\"VAL\": \"Escape\",\n\t\t\"CODE\": 27\n\t},\n\t\"F6\": {\n\t\t\"CODE\": 117\n\t},\n\t\"TAB\": {\n\t\t\"VAL\": \"Tab\",\n\t\t\"CODE\": 9,\n\t},\n\t\"LEFT\": {\n\t\t\"VAL\": \"ArrowLeft\",\n\t\t\"CODE\": 37\n\t},\n\t\"RIGHT\": {\n\t\t\"VAL\": \"ArrowRight\",\n\t\t\"CODE\": 39\n\t}\n})\n.directive(\"focusThis\", [\"$timeout\", \"$log\", function($timeout, $log) {\n    return {\n\t\t\"restrict\": 'A',\n        \"scope\": {\n\t\t\ttrigger: \"<focusThis\",\n\t\t\tscroll: \"@preventFocusScroll\"\n\t\t},\n        \"link\": function(scope, element) {\n            scope.$watch(\"trigger\", function(value) {\n                if (value === true)\n                    $timeout(function() { element[0].focus({\"preventScroll\": scope.scroll}); });\n            });\n        }\n    };\n}])\n.directive(\"correctFormFocus\", [function() {\n\treturn {\n\t\t\"restrict\": 'A',\n\t\t\"link\": function(scope, element) {\n\t\t\tfunction setDisabledFields(mutationList, observer) {\n\t\t\t\tmutationList.forEach(function(mutation) {\n\t\t\t\t\tif (mutation.addedNodes.length === 0)\n\t\t\t\t\t\treturn;\n\t\t\t\t\t\n\t\t\t\t\tvar target = mutation.target;\n\t\t\t\t\tvar firstAdded = mutation.addedNodes[0];\n\t\t\t\t\t\n\t\t\t\t\tif (firstAdded.tagName === \"INPUT\" || firstAdded.tagName === \"TEXTAREA\") {\n\t\t\t\t\t\tfirstAdded.setAttribute(\"disabled\", \"disabled\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (target.tagName === \"SPAN\" && target.className === \"type-glide_date_time field-actual\" &&\n\t\t\t\t\t\tfirstAdded.tagName === \"DIV\" && firstAdded.childNodes.length > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tfirstAdded.childNodes[0].setAttribute(\"disabled\", \"disabled\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t});\t\n\t\t\t}\n\t\t\t\n\t\t\tvar config = {\n\t\t\t\t\"attributes\": false,\n\t\t\t\t\"childList\": true,\n\t\t\t\t\"subtree\": true,\n\t\t\t\t\"characterData\": false\n\t\t\t};\n\t\t\t\n\t\t\tvar observer = new MutationObserver(setDisabledFields);\n\t\t\tobserver.observe(element[0], config);\n\t\t}\n\t};\n}]);","sys_class_name":"sys_ui_script","sys_id":"7f849d93d752220034d145bcce61039e","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"ui_type":"0","sys_update_name":"sys_ui_script_7f849d93d752220034d145bcce61039e","sys_updated_by":"admin","sys_created_on":"2016-10-11 14:43:50","name":"sn_change_cab.core","sys_name":"sn_change_cab.core","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"9","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2024-08-12 14:57:40","sys_tags":"","script_name":"landing_accessibility","script":"angular.module(\"sn.app_itsm.now.accessibility\", [])\n.constant(\"COMMON\", {\n    \"KEYS\": {\n        \"TABKEY\"          : 9,\n        \"ENTER\"           : 13,\n        \"ESCAPE\"          : 27,\n        \"RIGHT_ARROW\"     : 39,\n        \"LEFT_ARROW\"      : 37\n    }\n})\n.directive(\"focusMe\", function($timeout) {\n    return {\n        scope: {\n            trigger: \"@focusMe\"\n        },\n        link: function(scope, element) {\n            scope.$watch(\"trigger\", function(value) {\n                if (value === \"true\")\n                    $timeout(function() {\n                        element[0].focus();\n                    });\n            });\n        }\n    };\n})\n.directive(\"addUibTabAccessibility\", function(COMMON) {\n    return {\n        restrict: 'A',\n        link: function(scope, element, attr) {\n            element.on('keydown', function(ev) {\n                if (ev.which !== COMMON.KEYS.RIGHT_ARROW && ev.which !== COMMON.KEYS.LEFT_ARROW)\n                    return;\n                var currentSelected = angular.element(ev.currentTarget).children('li[role=tab][aria-selected=true]');\n                if (currentSelected && currentSelected.length !== 1)\n                    return;\n                var currentFocusId = currentSelected[0].id;\n                var tabs = angular.element(ev.currentTarget).children('li[role=tab]')\n                var nextIndex = 0;\n                for (var i = 0; i < tabs.length; i++) {\n                    if (tabs[i].getAttribute('id') === currentFocusId) {\n                        nextIndex = (COMMON.KEYS.RIGHT_ARROW === ev.which) ? i++ : i--;\n                        nextIndex = i === -1 ? tabs.length - 1 : i % tabs.length;\n                        break;\n                    }\n                }\n                scope.chgModelLandingCtrl.filterBy(tabs[nextIndex].getAttribute('id'));\n            });\n        }\n    };\n});","sys_class_name":"sys_ui_script","sys_id":"802c4ef0531750100999ddeeff7b1270","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/bb9f15345332101034d1ddeeff7b12c8","value":"bb9f15345332101034d1ddeeff7b12c8"},"ui_type":"0","sys_update_name":"sys_ui_script_802c4ef0531750100999ddeeff7b1270","sys_updated_by":"admin","sys_created_on":"2020-09-14 14:41:20","name":"sn_chg_model_ui.landing_accessibility","sys_name":"sn_chg_model_ui.landing_accessibility","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/bb9f15345332101034d1ddeeff7b12c8","value":"bb9f15345332101034d1ddeeff7b12c8"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"321","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2024-10-23 05:14:05","sys_tags":"","script_name":"","script":"angular.module(\"sn.on_call.now\", [\"sn.on_call.now.groups\"]);\n\nangular.module(\"sn.on_call.now.groups\", [\"sn.common\", \"sn.app_common\", \"ui.bootstrap\", \"sn.on_call.now.filters\", \"sn.common.glide\", \"sn.on_call.now.iscroll\", \"sn.on_call.now.showTooltipOnTextOverflow\", \"ngAnimate\"]).constant(\"ON_CALL\", {\n\t\"SERVICE\": {\n\t\t\"QUERY\": \"/api/now/on_call_rota/oncallgroups\",\n\t\t\"QUERY_SEARCH\": \"/api/now/on_call_rota/searchoncallgroups\"\n\t}\n});\n\nangular.module('sn.on_call.now.groups').config(function ($uibTooltipProvider) {\n\tvar isTouchDevice = 'ontouchstart' in window || navigator.maxTouchPoints;\n\tif (isTouchDevice) {\n\t\tvar options = {\n\t\t\ttrigger: 'none'\n\t\t};\n\t\t$uibTooltipProvider.options(options);\n\t}\n});\n\nangular.module(\"sn.on_call.now.iscroll\", []).directive(\"iScroll\", [\"$rootScope\", \"$window\", \"$timeout\", function($rootScope, $window, $timeout) {\n\treturn {\n\t\tlink: function(scope, elem, attrs) {\n\t\t\tvar checkWhenEnabled, handler, scrollDistance, scrollEnabled, scrollElem;\n\t\t\t$window = angular.element($window);\n\n\t\t\tif (attrs.iScrollContainer)\n\t\t\t\tscrollElem = angular.element(attrs.iScrollContainer);\n\n\t\t\tscrollDistance = 0;\n\t\t\tif (attrs.iScrollDistance !== null) {\n\t\t\t\tscope.$watch(attrs.iScrollDistance, function(value) {\n\t\t\t\t\tscrollDistance = parseInt(value, 10);\n\t\t\t\t\treturn scrollDistance;\n\t\t\t\t});\n\t\t\t}\n\t\t\tscrollEnabled = true;\n\t\t\tcheckWhenEnabled = false;\n\t\t\tif (attrs.iScrollDisabled !== null) {\n\t\t\t\tscope.$watch(attrs.iScrollDisabled, function(value) {\n\t\t\t\t\tscrollEnabled = !value;\n\t\t\t\t\tif (scrollEnabled && checkWhenEnabled) {\n\t\t\t\t\t\tcheckWhenEnabled = false;\n\t\t\t\t\t\treturn handler();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\thandler = function() {\n\t\t\t\tvar elementBottom, remaining, shouldScroll, windowBottom;\n\t\t\t\tif (scrollElem)\n\t\t\t\t\twindowBottom = scrollElem.height() + scrollElem.scrollTop();\n\t\t\t\telse\n\t\t\t\t\twindowBottom = $window.height() + $window.scrollTop();\n\t\t\t\telementBottom = elem.offset().top + elem.height();\n\t\t\t\tremaining = elementBottom - windowBottom;\n\t\t\t\tshouldScroll = remaining <= $window.height() * scrollDistance;\n\t\t\t\tif (shouldScroll && scrollEnabled) {\n\t\t\t\t\tif ($rootScope.$$phase)\n\t\t\t\t\t\treturn scope.$eval(attrs.iScroll);\n\t\t\t\t\telse\n\t\t\t\t\t\treturn scope.$apply(attrs.iScroll);\n\t\t\t\t} else if (shouldScroll) {\n\t\t\t\t\tcheckWhenEnabled = true;\n\t\t\t\t\treturn checkWhenEnabled;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Attach handler to scroll event\n\t\t\tif (scrollElem)\n\t\t\t\tscrollElem.on(\"scroll\", handler);\n\t\t\telse\n\t\t\t\t$window.on(\"scroll\", handler);\n\n\t\t\tscope.$on(\"$destroy\", function() {\n\t\t\t\tif (scrollElem)\n\t\t\t\t\treturn scrollElem.off(\"scroll\", handler);\n\t\t\t\treturn $window.off(\"scroll\", handler);\n\t\t\t});\n\n\t\t\treturn $timeout(function() {\n\t\t\t\tif (attrs.iScrollImmediateCheck === \"true\")\n\t\t\t\t\tif (scope.$eval(attrs.iScrollImmediateCheck))\n\t\t\t\t\t\treturn handler();\n\t\t\t\t\telse\n\t\t\t\t\t\treturn handler();\n\t\t\t}, 0);\n\t\t}\n\t};\n}]);\n\nangular.module(\"sn.on_call.now.showTooltipOnTextOverflow\", []).directive(\"showTooltipOnTextOverflow\", [function() {\n\treturn {\n\t\trestrict: \"A\",\n\t\tlink: function(scope, element, attrs) {\n\t\t\tvar elem = element[0];\n\t\t\tscope.$watch(\n\t\t\t\tfunction() {\n\t\t\t\t\treturn elem.scrollWidth;\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\tvar firstElem = element[0];\n\t\t\t\t\tif (firstElem.offsetWidth < firstElem.scrollWidth)\n\t\t\t\t\t\tattrs.tooltipEnable = \"true\";\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t};\n}]);\n\nangular.module(\"sn.on_call.now.filters\", [\"sn.common\", \"sn.app_common\"]);\n\nangular.module(\"sn.on_call.now.filters\").filter(\"memberfilter\", [function() {\n\treturn function(members, textMemberSearch) {\n\t\tif (!textMemberSearch)\n\t\t\treturn members;\n\n\t\tvar filteredMembers = [];\n\t\tmembers.forEach(function(member) {\n\t\t\tif (member.user && member.user.name && member.user.name.toLowerCase().indexOf(textMemberSearch.toLowerCase()) !== -1)\n\t\t\t\tfilteredMembers.push(member);\n\t\t});\n\t\treturn filteredMembers;\n\t};\n}]);\n\nangular.module(\"sn.on_call.now.filters\").filter(\"groupfilter\", [\"GroupFilterService\", function(GroupFilterService) {\n\treturn function(groups, filterBy, textSearch, textSearchType, pinnedGroups) {\n\t\treturn GroupFilterService.getFilteredGroups(groups, filterBy, textSearch, textSearchType, pinnedGroups);\n\t};\n}]);\n\nangular.module(\"sn.on_call.now.groups\").service(\"GroupFilterService\", [\"$window\", \"PinnedService\", \"TextSearchService\", \"ManagedBelongService\", function($window, PinnedService, TextSearchService, ManagedBelongService) {\n\tvar groupFilterService = this;\n\n\tvar _allGroups = [];\n\tfunction getAllGroups(groups) {\n\t\tif (_allGroups.length !== groups.length)\n\t\t\t_allGroups = groups.slice();\n\t\treturn _allGroups;\n\t}\n\n\tgroupFilterService.getFilteredGroups = function(groups, filterBy, textSearch, textSearchType, pinnedGroups) {\n\t\tvar filteredGroups = [];\n\n\t\tif (filterBy === \"all\")\n\t\t\tfilteredGroups = getAllGroups(groups);\n\t\telse if (filterBy === \"manage_belong\")\n\t\t\tfilteredGroups = ManagedBelongService.getFilteredGroups(groups, $window.NOW.user_id || \"\");\n\t\telse if (filterBy === \"pinned\")\n\t\t\tfilteredGroups = PinnedService.getFilteredGroups(groups, pinnedGroups);\n\t\telse\n\t\t\tfilteredGroups = [];\n\n\t\treturn TextSearchService.getFilteredGroups(filteredGroups, textSearch, textSearchType);\n\t};\n}]);\n\nangular.module(\"sn.on_call.now.groups\").service(\"ManagedBelongService\", [function() {\n\tvar managedBelongService = this;\n\n\tvar _manageBelong = [];\n\tvar _groups = [];\n\n\tmanagedBelongService.getFilteredGroups = function(groups, activeUserID) {\n\t\tif (!groups || groups.length < 1 || !activeUserID) {\n\t\t\t_manageBelong = [];\n\t\t\t_groups = [];\n\t\t}\n\t\t// Only re-filter if there are more or less groups\n\t\telse if (_groups.length !== groups.length) {\n\t\t\t_groups = groups.concat(_groups);\n\t\t\tvar manageGroups = [];\n\t\t\tvar belongToGroups = [];\n\t\t\tgroups.filter(function(group) {\n\t\t\t\t// Manage Group\n\t\t\t\tif (group.manager && group.manager.indexOf(activeUserID) !== -1)\n\t\t\t\t\tmanageGroups.push(group);\n\t\t\t\telse {\n\t\t\t\t\t// Belong to Group\n\t\t\t\t\tif (group.users) {\n\t\t\t\t\t\tvar users = group.users.filter(function(user) {\n\t\t\t\t\t\t\tif (user.indexOf(activeUserID) !== -1)\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (users.length > 0)\n\t\t\t\t\t\t\tbelongToGroups.push(group);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\t// First managed then belonging to\n\t\t\t_manageBelong = manageGroups.concat(belongToGroups);\n\t\t}\n\t\treturn _manageBelong;\n\t};\n\n}]);\n\nangular.module(\"sn.on_call.now.groups\").service(\"PinnedService\", [function() {\n\tvar pinnedService = this;\n\tvar _groups = [];\n\tvar _pinnedGroupSysIds = \"\";\n\tvar _filteredGroups = [];\n\n\t// Verify that pinned groups have not changed (includeing order in which they are pinned)\n\tfunction _pinnedGroupsChanged(pinnedGroups) {\n\t\tvar pinnedGroupSysIds = pinnedGroups.map( function(group) { return group.sys_id; }).join();\n\t\tif (pinnedGroupSysIds !== _pinnedGroupSysIds) {\n\t\t\t_pinnedGroupSysIds = pinnedGroupSysIds;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpinnedService.getFilteredGroups = function(groups, pinnedGroups) {\n\n\t\tif (!groups || groups.length < 1 || !pinnedGroups || pinnedGroups.length < 1) {\n\t\t\t_filteredGroups = [];\n\t\t\t_groups = [];\n\t\t\t_pinnedGroupSysIds = [];\n\t\t}\n\t\telse if (_groups.length !== groups.length || _pinnedGroupsChanged(pinnedGroups)) {\n\t\t\t_filteredGroups = groups.filter(function(group) {\n\t\t\t\treturn pinnedGroups.indexOf(group.sys_id) !== -1;\n\t\t\t});\n\t\t\t_groups = groups.slice();\n\t\t\t_pinnedGroupSysIds = pinnedGroups.slice();\n\t\t}\n\n\t\treturn _filteredGroups;\n\t};\n\n}]);\n\nangular.module(\"sn.on_call.now.groups\").service(\"TextSearchService\", [\"$sanitize\", function($sanitize) {\n\tvar textSearchService = this;\n\t\n\ttextSearchService.getFilteredGroups = function(filteredGroups, textSearch, textSearchType) {\n\t\tif (!textSearch)\n\t\t\treturn filteredGroups;\n\n\t\tvar textFilteredGroups = [];\n\t\tfilteredGroups.forEach(function(group) {\n\t\t\tif (textSearchType === 'group_schedule') {\n\t\t\t\tif (group.name.toLowerCase().indexOf(textSearch.toLowerCase()) !== -1)\n\t\t\t\t\ttextFilteredGroups.push(group);\n\t\t\t\telse if (group.rota && group.rota.name.toLowerCase().indexOf(textSearch.toLowerCase()) !== -1)\n\t\t\t\t\t\ttextFilteredGroups.push(group);\n\t\t\t} else if (textSearchType === 'user')\n\t\t\t\tif (group.rota && group.rota.rosters) {\n\t\t\t\t\tvar i;\n\t\t\t\t\tfor(i=0; i < group.rota.rosters.length; i++){\n\t\t\t\t\t\tvar roster = group.rota.rosters[i];\n\t\t\t\t\t\tif(roster.member \n\t\t\t\t\t\t   && roster.member.user\n\t\t\t\t\t\t   && roster.member.user.name.toLowerCase().indexOf(textSearch.toLowerCase()) !== -1){\n\t\t\t\t\t\t\ttextFilteredGroups.push(group);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t});\n\t\treturn textFilteredGroups;\n\t};\n}]);\n\nangular.module(\"sn.on_call.now.groups\").service(\"HighlightService\", [\"$sanitize\", \"$sce\", function($sanitize, $sce) {\n\tvar highlightService = this;\n\n\thighlightService.highlight = function(text, highlightText, highlightClass) {\n\t\tif (!highlightText || !highlightClass)\n\t\t\treturn text;\n\t\tvar cleanHighlightText = highlightText;\n\t\tvar cleanHighlightClass = $sanitize(highlightClass);\n\t\tvar pattern = new RegExp(cleanHighlightText, \"gi\");\n\t\treturn $sce.trustAsHtml(text.replace(pattern, '<span class=\"' + cleanHighlightClass + '\">$&</span>'));\n\t};\n}]);\n\nangular.module(\"sn.on_call.now.groups\").service(\"GroupService\", [\"$window\", \"$http\", \"$q\", \"filterFilter\", \"modelUtil\", \"ON_CALL\", function($window, $http, $q, filterFilter, modelUtil, ON_CALL) {\n\n\tvar groupService = this;\n\tvar _groupsBySysId = {};\n\tvar _hasMoreGroups = {\n\t\t'pinned': true,\n\t\t'manage_belong': true,\n\t\t'all': true,\n\t\t'search': true\n\t};\n\t// This limit is driven by system property: com.snc.on_call_rotation.landing_page.group_limit\n\tgroupService.groupHardLimit = parseInt($window.NOW.on_call_groups.group_limit || \"20\");\n\n\t// group limit is the batch of group data return from each request\n\tgroupService.groupLimit = groupService.groupHardLimit;\n\n\tfunction buildDataModel(result, filter) {\n\t\tvar groups = [];\n\t\tvar overlappingRotasCount = 0;\n\n\t\tif (!result || !result.onCallData)\n\t\t\treturn groups;\n\n\t\tresult.onCallData.forEach(function(onCallElem) {\n\t\t\tif (onCallElem.group && !result.groups[onCallElem.group].rota)\n\t\t\t\tresult.groups[onCallElem.group].rota = result.rotas[onCallElem.rota];\n\t\t\telse if (onCallElem.group && result.groups[onCallElem.group].rota && !result.groups[onCallElem.group + \"_\" + onCallElem.rota] && result.groups[onCallElem.group].rota && result.groups[onCallElem.group].rota.sys_id != onCallElem.rota) {\n\t\t\t\tvar cloneGroupData = angular.copy(result.groups[onCallElem.group]);\n\t\t\t\tcloneGroupData.rota = result.rotas[onCallElem.rota];\n\t\t\t\tresult.groups[onCallElem.group + \"_\" + onCallElem.rota] = cloneGroupData;\n\t\t\t\toverlappingRotasCount++;\n\t\t\t}\n\n\t\t\tif (onCallElem.rota && !result.rotas[onCallElem.rota].rosters) {\n\t\t\t\tresult.rotas[onCallElem.rota].rosters = [];\n\t\t\t\tresult.rotas[onCallElem.rota].rosters.push(result.rosters[onCallElem.roster]);\n\t\t\t} else if ((onCallElem.rota && onCallElem.roster) && result.rotas[onCallElem.rota].rosters.indexOf(result.rosters[onCallElem.roster]) === -1)\n\t\t\t\tresult.rotas[onCallElem.rota].rosters.push(result.rosters[onCallElem.roster]);\n\n\t\t\tif (onCallElem.roster && !result.rosters[onCallElem.roster].member) {\n\t\t\t\tresult.rosters[onCallElem.roster].member = result.members[onCallElem.memberId] || {};\n\t\t\t\tif (onCallElem.userId && result.users[onCallElem.userId]) {\n\t\t\t\t\tresult.rosters[onCallElem.roster].member.user = result.users[onCallElem.userId];\n\t\t\t\t\tresult.rosters[onCallElem.roster].member.user.displayName = result.rosters[onCallElem.roster].member.user.name;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tObject.keys(result.groups).forEach(function(outerKey) {\n\t\t\tvar group = result.groups[outerKey];\n\t\t\tgroup.id = outerKey;\n\t\t\tgroup.filter = filter;\n\t\t\tgroups.push(group);\n\t\t\t_groupsBySysId[outerKey] = group;\n\t\t});\n\n\t\tgroups.sort(function(a, b) {\n\t\t\tif (a.name < b.name)\n\t\t\t\treturn -1;\n\t\t\tif (a.name > b.name)\n\t\t\t\treturn 1;\n\t\t\treturn 0;\n\t\t});\n\n\t\t// If groups length matches limit we will always make one more request\n\t\t_hasMoreGroups[filter] = groups.length === (groupService.groupLimit + overlappingRotasCount);\n\t\t\t\n\t\treturn groups;\n\t}\n\n\tgroupService.hasMoreGroups = function(filter) {\n\t\treturn _hasMoreGroups[filter];\n\t};\n\n\tgroupService.resetSearch = function() {\n\t\t_hasMoreGroups.search = true;\n\t};\n\t\n\tgroupService.setGroupLimit = function(groupLimit) {\n\t\tgroupService.groupLimit = parseInt(groupLimit);\n\t\tif (!groupService.groupLimit || isNaN(groupService.groupLimit) || groupService.groupLimit > groupService.groupHardLimit)\n\t\t\tgroupService.groupLimit = groupService.groupHardLimit;\n\t};\n\n\tgroupService.getGroupBySysId = function(groupSysId) {\n\t\tif (!groupSysId)\n\t\t\treturn {};\n\t\treturn _groupsBySysId[groupSysId];\n\t};\n\n\tfunction escapeHtml(html){\n\t\tvar text = document.createTextNode(html);\n\t\tvar p = document.createElement('p');\n\t\tp.appendChild(text);\n\t\treturn p.innerHTML;\n\t}\n\t\n\tgroupService.getGroups = function(offset, groupLimit, filter, isSearch, textSearch, textSearchType, foundGroupsSysIds) {\n\t\tgroupService.setGroupLimit(groupLimit);\n\t\tvar deferred = $q.defer();\n\t\tvar url;\n\t\tif (isSearch) {\n\t\t\turl = ON_CALL.SERVICE.QUERY_SEARCH + \"?sysparm_ck=\" + $window.g_ck + \"&offset=\" + offset + \"&group_limit=\" + groupService.groupLimit + \"&filter=\" + filter;\n\t\t\tvar reqBody = {};\n\t\t\treqBody.text = escapeHtml(textSearch);\n\t\t\treqBody.textSearchType = textSearchType;\n\t\t\treqBody.ignoreGroupSysIds = foundGroupsSysIds;\n\t\t\t\n\t\t\t$http({\n\t\t\t\tmethod: 'POST',\n\t\t\t\turl: url,\n\t\t\t\tdata: reqBody,\n\t\t\t}).then(function(response) {\n\t\t\t\tdeferred.resolve(buildDataModel(response.data.result, filter));\n\t\t\t}, function(response) {\n\t\t\t\tmodelUtil.failNicely(response);\n\t\t\t\tdeferred.reject(response);\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\turl = ON_CALL.SERVICE.QUERY + \"?sysparm_ck=\" + $window.g_ck + \"&offset=\" + offset + \"&group_limit=\" + groupService.groupLimit + \"&filter=\" + filter;\n\t\t\t$http.get(url).then(function(response) {\n\t\t\t\tdeferred.resolve(buildDataModel(response.data.result, filter));\n\t\t\t}, function(response) {\n\t\t\t\tmodelUtil.failNicely(response);\n\t\t\t\tdeferred.reject(response);\n\t\t\t});\n\t\t}\n\t\treturn deferred.promise;\n\t};\n}]);\n\nangular.module('sn.on_call.now.groups').constant('KeyCode', {\n\tENTER: 13,\n\tSPACE: 32,\n\tTAB: 9,\n\tESCAPE: 27,\n\tRIGHT_ARROW: 39,\n\tLEFT_ARROW: 37,\n\tUP_ARROW: 38,\n\tDOWN_ARROW: 40\n});\n\nangular.module(\"sn.on_call.now.groups\").service(\"slackService\", function($http, $q, i18n, snNotification, $window) {\n\tvar TYPE = {\n\t\t\tDANGER: \"danger\"\n\t\t};\n\tvar MESSAGES = {\n\t\t\tTECH_ERROR: i18n.getMessage(\"Cannot connect to Slack due to technical error, please contact administrator.\"),\n\t\t\tSLACK_ERROR: i18n.getMessage(\"Slack account is not present for this user email id, please contact administrator.\")\n\t\t};\n\tvar CONSTANTS = {\n\t\t\tTIME: 5000\n\t\t};\n\t\n\treturn {\n\t\t\n\t\tgetSlackInfo: function(sys_id) {\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar url = \"/api/now/on_call_rota/slack/getUserInfo/\" + sys_id;\n\t\t\t$http.get(url).then(function(response) {\n\t\t\t\tdeferred.resolve(response.data.result);\n\t\t\t}, function(response) {\n\t\t\t\tdeferred.reject(response);\n\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t},\n\t\t\n\t\topenSlackApp: function (sys_id) {\n\t\t\tthis.getSlackInfo(sys_id).then(function (slackDetails) {\n\t\t\t\tif (slackDetails && slackDetails.status === \"Success\")\n\t\t\t\t\t$window.location.href = \"slack://user?team=\" + slackDetails.team_id + \"&id=\" + slackDetails.user_id;\n\t\t\t\telse if (slackDetails && slackDetails.status === \"Error\")\n\t\t\t\t\tsnNotification.show(TYPE.DANGER,MESSAGES.SLACK_ERROR,CONSTANTS.TIME);\n\t\t\t\telse\n\t\t\t\t\tsnNotification.show(TYPE.DANGER,MESSAGES.TECH_ERROR,CONSTANTS.TIME);\n\t\t\t}, function(){\n\t\t\t\tsnNotification.show(TYPE.DANGER,MESSAGES.TECH_ERROR,CONSTANTS.TIME);\n\t\t\t});\n\t\t}\n\t};\n});\n\nangular.module(\"sn.on_call.now.groups\").controller(\"ModalRostersCtrl\", function(i18n, $window, KeyCode) {\n\tvar modalRostersCtrl = this;\n\tvar modalId = \"on_call_who_and_escalation\";\n\n\tfunction getUrl(group) {\n\t\tvar url = \"/$on_call_who_and_escalation.do?sysparm_group_id=\";\n\t\tvar params = \"\";\n\t\tparams += group.sys_id;\n\t\tparams += \"&sysparm_rota_id=\" + group.rota.sys_id;\n\t\tparams += \"&sysparm_stack=no\";\n\t\tif ($window.NOW.USER_PREF.IS_DARK_THEME_ENABLED) {\n\t\t\tparams += \"&sysparm_use_polaris=false\";\n\t\t}\n\t\t\n\t\treturn url + params;\n\t}\n\t\n\tfunction dismissModalDialog() {\n\t\tsetTimeout(function() {\n\t\t\tvar modal = GlideModal.prototype.get(modalId);\n\t\t\tmodal.destroy();\n\t\t}, 0);\n\t}\n\t\n\tfunction isModalOutOfViewport (el) {\n\t\tif (el && (el.width() + el.offset().left) > this.window.innerWidth)\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\t\n\tmodalRostersCtrl.open = function($event, group) {\n\t\t$event.stopPropagation();\n\t\tvar modal = new GlideModal(modalId);\n\t\tmodal.template = glideCustomModalTemplate;\n\t\tmodal.renderIframe(getUrl(group), function() {\n\t\t\tvar iframeElement = this.parent.jQuery('iframe')[0];\n\t\t\tif (iframeElement)\n\t\t\t\tiframeElement.title = i18n.getMessage('Roster and escalation details');\n\t\t\tvar modalContainer = this.parent.jQuery('#on_call_who_and_escalation');\n\t\t\tvar modalDialogEl = modalContainer.find(\".modal-dialog\");\n\t\t\tif (isModalOutOfViewport(modalDialogEl)) {\n\t\t\t\tmodalContainer.css({\n\t\t\t\t\t\"overflow-x\": \"scroll\"\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\t$window.NOW.CustomEvent.observe(\"DismissOCGlideModal\", dismissModalDialog);\n\t};\n\t\n\tmodalRostersCtrl.handleKeyAction = function($event, group, groupOnCallCtrl) {\n\t\tif ($event.which == KeyCode.ENTER || $event.which == KeyCode.SPACE) {\n\t\t\tgroupOnCallCtrl.closeMemberDialogs('');\n\t\t\tmodalRostersCtrl.open($event, group);\n\t\t\t$event.preventDefault();\n\t\t}\n\t};\n});\n\nangular.module(\"sn.on_call.now.groups\").controller(\"GroupOnCallController\", [\"$scope\", \"GroupService\", \"GroupFilterService\", \"ManagedBelongService\", \"PinnedService\", \"TextSearchService\", \"$window\", \"$location\", \"userPreferences\", \"getTemplateUrl\", \"i18n\", \"$timeout\", \"snConnectService\", \"HighlightService\", \"$injector\", \"$sce\", \"$interval\", \"KeyCode\", \"slackService\", \"$sanitize\", function($scope, GroupService, GroupFilterService, ManagedBelongService, PinnedService, TextSearchService, $window, $location, userPreferences, getTemplateUrl, i18n, $timeout, snConnectService, HighlightService, $injector, $sce, $interval, KeyCode, slackService, $sanitize) {\n\n\tvar groupOnCallCtrl = this;\n\tvar userPreferenceGroups = \"com.snc.on_call_rotation.landing_page.pinned_groups\";\n\tvar userPreferenceGroupFilter = \"com.snc.on_call_rotation.landing_page.group_filter\";\n\n\tgroupOnCallCtrl.isRTL = angular.element(\"html\").hasClass(\"rtl\");\n\tgroupOnCallCtrl.showOnCallRotas = false;\n\tgroupOnCallCtrl.groups = [];\n\tgroupOnCallCtrl.quantity = 2;\n\tgroupOnCallCtrl.textSearchReadOnly = true;\n\tgroupOnCallCtrl.textSearch = \"\";\n\tgroupOnCallCtrl.textSearchType = \"group_schedule\";\n\tgroupOnCallCtrl.groupFilter = $window.NOW.on_call_groups.group_filter || \"pinned\";\n\tgroupOnCallCtrl.groupLimit = GroupService.groupHardLimit;\n\tgroupOnCallCtrl.maxGroups = parseInt($window.NOW.on_call_groups.max_groups || \"300\");\n\tgroupOnCallCtrl.notificationTimeout = parseInt($window.NOW.on_call_groups.notification_timeout || \"4000\");\n\tgroupOnCallCtrl.isChatEnabled = ($window.NOW.on_call_groups.chat_enabled === \"true\" && $window.NOW.isPolarisEnabled !== 'true');\n\tgroupOnCallCtrl.isSlackActive = ($window.NOW.is_Slack_Spoke_Installed === \"true\");\n\tgroupOnCallCtrl.isTeamsActive = ($window.NOW.is_MS_Teams_Installed === \"true\");\n\tgroupOnCallCtrl.showWizardBtn = ($window.NOW.on_call_groups.show_wizard_btn === \"true\");\n\tgroupOnCallCtrl.isAccessibilityEnabled = ($window.NOW.on_call_groups.isAccessibilityEnabled === \"true\");\n\tgroupOnCallCtrl.showPinnedNotification = ($window.NOW.on_call_groups.pinned_notification === \"true\");\n\tgroupOnCallCtrl.isWizardBtnPrimary = false;\n\tgroupOnCallCtrl.groupOffset = 0;\n\tgroupOnCallCtrl.pinnedGroups = $window.NOW.on_call_groups.pinned_groups ? $window.NOW.on_call_groups.pinned_groups.split(\",\") : [];\n\tgroupOnCallCtrl.userTimeFormat = $window.NOW.user_time_format;\n\tgroupOnCallCtrl.isTabsContentFetched = false;\n\tgroupOnCallCtrl.isDivAdded = false;\n\t\n\tgroupOnCallCtrl.tabs = {\n\t\t'pinned': {\n\t\t\tgroups: [],\n\t\t\tgroupOffset: 0\n\t\t},\n\t\t'manage_belong': {\n\t\t\tgroups: [],\n\t\t\tgroupOffset: 0\n\t\t},\n\t\t'all': {\n\t\t\tgroups: [],\n\t\t\tgroupOffset: 0\n\t\t},\n\t\t'search': {\n\t\t\tgroups: [],\n\t\t\tgroupOffset: 0\n\t\t}\n\t};\n\t\n\n\tgroupOnCallCtrl.isLoading = false;\n\tgroupOnCallCtrl.limitReached = false;\n\tgroupOnCallCtrl.noMoreGroups = false;\n\tgroupOnCallCtrl.showGroupPinnedMsg = false;\n\tgroupOnCallCtrl.showPinnedSplashMsg = false;\n\tgroupOnCallCtrl.showManageBelongSplashMsg = false;\n\tgroupOnCallCtrl.showAllSplashMsg = false;\n\n\tgroupOnCallCtrl.membersPopover = {};\n\n\t// I18N messages section\n\tgroupOnCallCtrl.form = {};\n\tgroupOnCallCtrl.form.title = i18n.getMessage(\"On-Call Schedules\");\n\tgroupOnCallCtrl.form.loading = i18n.getMessage(\"Loading...\");\n\tgroupOnCallCtrl.form.new = i18n.getMessage(\"New\");\n\tgroupOnCallCtrl.form.to = i18n.getMessage(\"{0} to {1}\");\n\tgroupOnCallCtrl.form.allOnCallSchedules = i18n.getMessage(\"All On-Call Schedules\");\n\tgroupOnCallCtrl.form.myOnCallSchedules = i18n.getMessage(\"My On-Call Schedules\");\n\tgroupOnCallCtrl.form.pinnedOnCallSchedules = i18n.getMessage(\"Your Pinned On-Call Schedules\");\n\tgroupOnCallCtrl.form.pinnedOnCallSchedulesTitle = i18n.getMessage(\"Pinned On-Call Schedules\");\n\tgroupOnCallCtrl.form.filterTitle = i18n.getMessage(\"Search On-Call Schedules\");\n\tgroupOnCallCtrl.form.filterOptions = [{\n\t\tvalue: \"group_schedule\",\n\t\tlabel: i18n.getMessage(\"Group / Schedule\")\n\t}, {\n\t\tvalue: \"user\",\n\t\tlabel: i18n.getMessage(\"User\")\n\t}];\n\tgroupOnCallCtrl.form.nobodyOnCall = i18n.getMessage(\"Nobody is On-Call now\");\n\tgroupOnCallCtrl.form.somebodyOnCall = i18n.getMessage(\"On-Call Members will be available today from:\");\n\tgroupOnCallCtrl.form.pinOnCallSchedule = i18n.getMessage(\"Pin On-Call Schedule\");\n\tgroupOnCallCtrl.form.unpinOnCallSchedule = i18n.getMessage(\"Unpin On-Call Schedule\");\n\tgroupOnCallCtrl.form.pin = i18n.getMessage(\"Pin\");\n\tgroupOnCallCtrl.form.icon = i18n.getMessage(\"icon\");\n\tgroupOnCallCtrl.form.onCallSchedulePinnedMsg = \"\";\n\tgroupOnCallCtrl.form.addTo = i18n.getMessage(\"added to\");\n\tgroupOnCallCtrl.form.showEscalationPath = i18n.getMessage(\"Show escalation details\");\n\tgroupOnCallCtrl.form.showRosterEscalationPath = i18n.getMessage(\"Roster and escalation details\");\n\tgroupOnCallCtrl.form.close = i18n.getMessage(\"Close\");\n\tgroupOnCallCtrl.form.limitReachedMsg = i18n.getMessage(\"You have reached the limit of visible On-Call Schedules in this view.\");\n\tgroupOnCallCtrl.form.sendDirectMsg = i18n.getMessage(\"Send a direct message\");\n\tgroupOnCallCtrl.form.notAvailable = i18n.getMessage(\"Not Available\");\n\tgroupOnCallCtrl.form.manager = i18n.getMessage(\"Manager\");\n\tgroupOnCallCtrl.form.noResultsFound = i18n.getMessage(\"No results found\");\n\tgroupOnCallCtrl.form.userNameLabel = i18n.getMessage(\"User name\");\n\tgroupOnCallCtrl.form.userTitleLabel = i18n.getMessage(\"User title\");\n\tgroupOnCallCtrl.form.contactNumberLabel = i18n.getMessage(\"User contact number\");\n\tgroupOnCallCtrl.form.emailLabel = i18n.getMessage(\"User email\");\n\tgroupOnCallCtrl.form.groupLabel = i18n.getMessage(\"Group name\");\n\tgroupOnCallCtrl.form.rotaLabel = i18n.getMessage(\"Shift name\");\n\tgroupOnCallCtrl.form.pinnedDesc = i18n.getMessage(\"To pin an On-Call Schedule to this tab, point to the card on the All On-Call Schedules tab and click the Pin icon.\");\n\tgroupOnCallCtrl.form.manageBelongDesc = i18n.getMessage(\"On this tab, you access schedules that you manage or that you are a member of.\");\n\ti18n.getMessage('\"{0}\", there are no active On-Call Schedules.', function(msg) {\n\t\tgroupOnCallCtrl.form.allOnCallSchedulesDesc = msg.withValues([groupOnCallCtrl.form.allOnCallSchedules]);\n\t});\n\n\tfunction _splashScreenVisibility() {\n\t\tgroupOnCallCtrl.isWizardBtnPrimary = groupOnCallCtrl.pinnedGroups.length === 0;\n\t\tgroupOnCallCtrl.showPinnedSplashMsg = (groupOnCallCtrl.groupFilter === \"pinned\" && PinnedService.getFilteredGroups(groupOnCallCtrl.groups, groupOnCallCtrl.pinnedGroups).length === 0);\n\t\tgroupOnCallCtrl.showManageBelongSplashMsg = (groupOnCallCtrl.groupFilter === \"manage_belong\" && ManagedBelongService.getFilteredGroups(groupOnCallCtrl.groups, $window.NOW.user_id).length === 0);\n\t\tgroupOnCallCtrl.showAllSplashMsg = (groupOnCallCtrl.groupFilter === \"all\" && groupOnCallCtrl.groups.length === 0);\n\t\tgroupOnCallCtrl.textSearchReadOnly = groupOnCallCtrl.showPinnedSplashMsg || groupOnCallCtrl.showManageBelongSplashMsg || groupOnCallCtrl.showAllSplashMsg;\n\t\tif (groupOnCallCtrl.textSearchReadOnly)\n\t\t\tgroupOnCallCtrl.textSearch = \"\";\n\t\tgroupOnCallCtrl.showOnCallRotas = (groupOnCallCtrl.groups.length > 0 && !groupOnCallCtrl.showPinnedSplashMsg && !groupOnCallCtrl.showManageBelongSplashMsg && !groupOnCallCtrl.showAllSplashMsg);\n\n\t\t// Strip out extraneous tabindex\n\t\t$timeout(function() {\n\t\t\tangular.element(\".sub-avatar\").each(function() { angular.element(this).removeAttr(\"tabindex\"); });\n\t\t}, 0);\n\t}\n\n\tfunction _getGroupLimit() {\n\t\tvar groupLimit = GroupService.groupHardLimit;\n\t\treturn groupLimit;\n\t}\n\n\tfunction _groupLimitReached() {\n\t\tvar groupLimitReached = groupOnCallCtrl.groups.length +  groupOnCallCtrl.groupLimit > groupOnCallCtrl.maxGroups;\n\t\tgroupOnCallCtrl.limitReached = groupLimitReached;\n\t\treturn groupLimitReached;\n\t}\n\n\tgroupOnCallCtrl.showLimitReachedMessage = function() {\n\t\treturn groupOnCallCtrl.limitReached && groupOnCallCtrl.textSearch == '' && groupOnCallCtrl.tabs[groupOnCallCtrl.groupFilter].groups && groupOnCallCtrl.tabs[groupOnCallCtrl.groupFilter].groups.length > 0;\n\t};\n\t\n\tfunction _uniqueConcat(arr1, arr2) {\n\t\tif (!arr1 || arr1.length === 0) {\n\t\t\tif (!arr2 || arr2.length === 0)\n\t\t\t\treturn [];\n\t\t\telse\n\t\t\t\treturn arr2;\n\t\t}\n\n\t\tif (!arr2 || arr2.length === 0)\n\t\t\treturn arr1;\n\n\t\tvar uniqueSet = {};\n\t\tvar dupArr = arr1.concat(arr2);\n\t\tdupArr.forEach(function(elem) {\n\t\t\tif (elem.id)\n\t\t\t\tuniqueSet[elem.id] = elem;\n\t\t});\n\n\t\tif (typeof Object.values === \"function\")\n\t\t\treturn Object.values(uniqueSet);\n\n\t\tvar uniqueArr = [];\n\t\tObject.keys(uniqueSet).map(function(key) { uniqueArr.push(uniqueSet[key]); });\n\t\treturn uniqueArr;\n\t}\n\n\tgroupOnCallCtrl.filterBy = function(filter) {\n\t\tif (groupOnCallCtrl.groupFilter === filter)\n\t\t\treturn;\n\t\tgroupOnCallCtrl.isLoading = false;\n\t\tgroupOnCallCtrl.textSearch = \"\";\n\t\tgroupOnCallCtrl.groupFilter = filter;\n\t\t$window.NOW.on_call_groups.group_filter = groupOnCallCtrl.groupFilter;\n\t\t_splashScreenVisibility();\n\t\tuserPreferences.setPreference(userPreferenceGroupFilter, groupOnCallCtrl.groupFilter);\n\t\tif (!groupOnCallCtrl.isTabsContentFetched) {\n\t\t\tgroupOnCallCtrl.getGroups();\n\t\t\tgroupOnCallCtrl.isTabsContentFetched = true;\n\t\t}\n\t};\n\t\n\tgroupOnCallCtrl.getGroupCountMessage = function(groups) {\n\t\tif(!groups)\n\t\t\treturn;\n\t\tvar filteredGroups = GroupFilterService.getFilteredGroups(groups, groupOnCallCtrl.groupFilter, groupOnCallCtrl.textSearch, groupOnCallCtrl.textSearchType, groupOnCallCtrl.pinnedGroups);\n\t\tif (!filteredGroups || filteredGroups.length == 0) {\n\t\t\treturn i18n.getMessage('No groups found');\n\t\t}\n\t\treturn i18n.format(i18n.getMessage('{0} groups found'), [filteredGroups.length]);\n\t};\n\n\tgroupOnCallCtrl.handleKeyAction = function(filter, event) {\n\t\tif (event.which == KeyCode.ENTER || event.which == KeyCode.SPACE) {\n\t\t\tgroupOnCallCtrl.filterBy(filter);\n\t\t\tevent.preventDefault();\n\t\t} else if (event.which === KeyCode.RIGHT_ARROW) {\n\t\t\tvar next = getNextSibling(event.target);\n\t\t\tif (next)\n\t\t\t\t$timeout(function() {\n\t\t\t\t\tnext.click();\n\t\t\t\t\tnext.focus();\n\t\t\t\t});\n\t\t\tevent.preventDefault();\n\t\t} else if (event.which === KeyCode.LEFT_ARROW) {\n\t\t\tvar previous = getPreviousSibling(event.target);\n\t\t\tif (previous)\n\t\t\t\t$timeout(function() {\n\t\t\t\t\tprevious.click();\n\t\t\t\t\tprevious.focus();\n\t\t\t\t});\n\t\t\tevent.preventDefault();\n\t\t}\n\t};\n\t\n\tfunction getNextSibling(element){\n\t\tvar next = angular.element(element).next();\n\t\tif(next.length == 0)\n\t\t\treturn null;\n\t\tif(next.hasClass('disabled'))\n\t\t\treturn getNextSibling(next);\n\t\treturn next;\n\t}\n\n\tfunction getPreviousSibling(element){\n\t\tvar previous = angular.element(element).prev();\n\t\tif(previous.length == 0)\n\t\t\treturn null;\n\t\tif(previous.hasClass('disabled'))\n\t\t\treturn getPreviousSibling(previous);\n\t\treturn previous;\n\t}\n\t\n\tfunction escapeHTML(text) {\n\t\tif(!text) return '';\n\t\ttext = text.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n\t\treturn text;\n\t}\n\t\n\tfunction handleSpecialCharacters(search) {\n\t\tvar pattern = /[!@#$%^&*()+=\\-[\\]\\\\';,./{}|\":?~_]/g;\n\t\treturn search.replace(pattern, '\\\\$&');\n\t}\n\n\tgroupOnCallCtrl.highlight = function(text, search, stopHighlightCondition) {\n\t\ttext = escapeHTML(text);\n\t\tsearch = handleSpecialCharacters(search);\n\t\tsearch = escapeHTML(search)\n\t\tif(stopHighlightCondition)\n\t\t\treturn text;\n\t\treturn HighlightService.highlight(text, search, \"oc-search-highlight\");\n\t};\n\n\tgroupOnCallCtrl.foundGroups = function() {\n\t\tvar filteredGroups = GroupFilterService.getFilteredGroups(groupOnCallCtrl.groups, groupOnCallCtrl.groupFilter, groupOnCallCtrl.textSearch, groupOnCallCtrl.textSearchType, groupOnCallCtrl.pinnedGroups);\n\t\treturn (filteredGroups && filteredGroups.length > 0);\n\t};\n\t\n\tgroupOnCallCtrl.redirectFromGroupsCard = function(groupId) {\n\t\tvar userId = $window.NOW.user_id;\n\t\tvar isManager = groupOnCallCtrl.groups.some(function(item) {\n\t\t\treturn item.sys_id == groupId && item.isCurrentUserRotaMgr;\n\t\t});\n\t\tif(isManager) {\n\t\t\t//for manager\n\t\t\t$window.location.href = \"$oc_workbench.do?sysparm_redirect=\" + encodeURIComponent(\"$oc_groups.do\") + \"&sysparm_group_id=\" + groupId;\n\t\t\treturn;\n\t\t}\n\t\tvar isMember = groupOnCallCtrl.groups.some(function(item) {\n\t\t\treturn item.sys_id == groupId && item.isCurrentUserGrpMember;\n\t\t});\n\t\tif(isMember) {\n\t\t\t//for user\n\t\t\t$window.location.href = \"$oc_workbench.do?sysparm_redirect=\" + encodeURIComponent(\"$oc_groups.do\") + \"&sysparm_group_id=\" + groupId;\n\t\t\treturn;\n\t\t}\n\t\tgroupOnCallCtrl.redirectCalendar(groupId);\n\t};\n\n\tgroupOnCallCtrl.redirectCalendar = function(groupId) {\n\t\t$window.location.href = \"on_call_rotation_calendar_launcher.do?sysparm_redirect=\" + encodeURIComponent(\"$oc_groups.do\") + \"&sysparm_group_id=\" + groupId + \"&sysparm_ck=\" + $window.g_ck;\n\t};\n\n\tgroupOnCallCtrl.redirectWizard = function() {\n\t\t$window.location.href = \"expert_shell.do?sysparm_sys_id=0eace47cbf1211003f07e2c1ac07396c&sysparm_initial=true\";\n\t};\n\n\tgroupOnCallCtrl.showRosters = function($event) {\n\t\t$event.stopPropagation();\n\t};\n\n\tgroupOnCallCtrl.isPinned = function(groupId) {\n\t\treturn groupOnCallCtrl.pinnedGroups.indexOf(groupId) !== -1;\n\t};\n\n\tgroupOnCallCtrl.getActionCountAriaMessage = function(actionsCount) {\n\t\tvar totalPendingAction = actionsCount.gaps + actionsCount.oddities + actionsCount.timeOffRequests;\n\t\treturn i18n.format(i18n.getMessage('{0} Pending actions, {1} gaps identified, {2} conflicts identified, {3} time off requests'), [totalPendingAction, actionsCount.gaps, actionsCount.oddities, actionsCount.timeOffRequests]);\n\t};\n\t\n\tgroupOnCallCtrl.togglePinned = function($event, group) {\n        $event.stopPropagation();\n\n        if (!group || !group.id)\n            return;\n\n        var index = groupOnCallCtrl.pinnedGroups.indexOf(group.sys_id);\n        if (index > -1) {\n            while (index > -1) {\n                groupOnCallCtrl.pinnedGroups.splice(index, 1);\n                index = groupOnCallCtrl.pinnedGroups.indexOf(group.sys_id);\n            }\n        }\n        else {\n            groupOnCallCtrl.pinnedGroups.push(group.sys_id);\n            groupOnCallCtrl.form.onCallSchedulePinnedMsg = '\"' + group.name + '\" ' + groupOnCallCtrl.form.addTo + ' \"' + groupOnCallCtrl.form.pinnedOnCallSchedules + '\"';\n            if (groupOnCallCtrl.showPinnedNotification) {\n                groupOnCallCtrl.showGroupPinnedMsg = true;\n                $timeout(function() { groupOnCallCtrl.showGroupPinnedMsg = false; }, groupOnCallCtrl.notificationTimeout);\n            }\n        }\n\n        groupOnCallCtrl.pinnedGroups.sort(function (a, b) {\n            var groupA = GroupService.getGroupBySysId(a);\n            var groupB = GroupService.getGroupBySysId(b);\n\t\t\tif (groupA && !groupB)\n\t\t\t\treturn -1;\n\t\t\tif (!groupA && groupB)\n\t\t\t\treturn 1;\n\t\t\tif (!groupA && !groupB)\n\t\t\t\treturn 0;\n\t\t\t\n\t\t\tvar groupAName = groupA.name;\n\t\t\tvar groupBName = groupB.name;\n            if (groupAName < groupBName) return -1;\n            if (groupAName > groupBName) return 1;\n            return 0;\n        }, this);\n\n        $window.NOW.on_call_groups.pinned_groups = groupOnCallCtrl.pinnedGroups.join(\",\");\n        userPreferences.setPreference(userPreferenceGroups, $window.NOW.on_call_groups.pinned_groups);\n        groupOnCallCtrl.showPinnedSplashMsg = (groupOnCallCtrl.groupFilter === \"pinned\" && PinnedService.getFilteredGroups(groupOnCallCtrl.groups, groupOnCallCtrl.pinnedGroups).length === 0);\n        if (groupOnCallCtrl.showPinnedSplashMsg)\n            groupOnCallCtrl.showOnCallRotas = false;\n\t\t\n\t\tvar $element = angular.element($event.target);\n\t\tvar $parentElement = $element.parent();\n\t\tif ($element.hasClass('pinned'))\n\t\t\t$timeout(function() {\n\t\t\t\t$parentElement.find('.unpinned').focus();\n\t\t\t}, 100);\n\t\telse\n\t\t\t$timeout(function() {\n\t\t\t\t$parentElement.find('.pinned').focus();\n\t\t\t}, 100);\n    };\n\n\tgroupOnCallCtrl.getPopoverTemplate = function(member) {\n\t\t$scope.profile = member;\n\t\tvar isAccessibilityEnabled = ($window.NOW.on_call_groups.isAccessibilityEnabled === \"true\");\n\t\tif (isAccessibilityEnabled)\n\t\t\t$scope.tabindex = 0;\n\t\treturn getTemplateUrl(\"on_call_avatar.xml\");\n\t};\n\n\tgroupOnCallCtrl.closeMemberDialogs = function(memberSysId) {\n\t\tmemberSysId = memberSysId + \"\";\n\t\tObject.keys(groupOnCallCtrl.membersPopover).forEach(function(memberKey) {\n\t\t\tif (!memberSysId || memberKey.indexOf(memberSysId) === -1)\n\t\t\t\tgroupOnCallCtrl.membersPopover[memberKey].open = false;\n\t\t});\n\t};\n\n\tgroupOnCallCtrl.togglePopover = function($event, roster) {\n\t\t$event.stopPropagation();\n\t\tvar id = roster.member.id || (roster.id + \" \" + roster.member.user.id);\n\t\tif (groupOnCallCtrl.membersPopover[id])\n\t\t\tgroupOnCallCtrl.membersPopover[id].open = !groupOnCallCtrl.membersPopover[id].open;\n\n\t\tif (groupOnCallCtrl.membersPopover[id].open) {\n\t\t\tvar intervalPromise = $interval(function(){\n\t\t\t\tif (angular.element('.start-of-popover').length > 0) {\n\t\t\t\t\tangular.element('.start-of-popover').focus();\n\t\t\t\t\t$interval.cancel(intervalPromise);\n\t\t\t\t}\n\t\t\t}, 200);\n\t\t\tgroupOnCallCtrl.openedPopoverElement = $event.target;\n\n\t\t\tvar $profileIcon = angular.element($event.target);\n\t\t\tif ($profileIcon.length) {\n\t\t\t\tvar offsetTop = $profileIcon.offset().top;\n\t\t\t\tvar offsetBottom = offsetTop - (angular.element(window).height() - $profileIcon.height());\n\t\t\t\tif (offsetTop > 250) {\n\t\t\t\t\tif (offsetBottom > -250 && offsetTop > 500)\n\t\t\t\t\t\tgroupOnCallCtrl.profilePlacement = 'right-bottom';\n\t\t\t\t\telse\n\t\t\t\t\t\tgroupOnCallCtrl.profilePlacement = 'right';\n\t\t\t\t} else\n\t\t\t\t\tgroupOnCallCtrl.profilePlacement = 'right-top';\n\t\t\t}\n\t\t}\n\t\t// close all other dialogs\n\t\tgroupOnCallCtrl.closeMemberDialogs(id);\n\t};\n\n\t$window.document.on('click', function(event){\n\t\tvar isAvatarClicked = angular.element(event.target).parents('.user-presence').length > 0;\n\t\tif(!isAvatarClicked) {\n\t\t\t$timeout(function() {\n\t\t\t  // close all dialogs\n\t\t\t  groupOnCallCtrl.closeMemberDialogs(\"\");\n\t\t\t});\n\t\t}\n\t});\n\n\tgroupOnCallCtrl.onProfilePopoverKeyDown = function(event, roster){\n\t\tvar id = roster.member.id || (roster.id + \" \" + roster.member.user.id);\n\t\tif (event.keyCode === KeyCode.ESCAPE) {\n\t\t\tgroupOnCallCtrl.membersPopover[id].open = false;\n\t\t\tangular.element(groupOnCallCtrl.openedPopoverElement).focus();\n\t\t}\n\t};\n\n\tgroupOnCallCtrl.startOfPopoverKeyDown = function(event){\n\t\tif(event.shiftKey && event.keyCode === KeyCode.TAB) {\n\t\t\tangular.element('.end-of-popover').focus();\n\t\t}\n\t};\n\tgroupOnCallCtrl.endOfPopoverKeyDown = function(event){\n\t\tif (event.keyCode === KeyCode.TAB) {\n\t\t\tangular.element('.start-of-popover').focus();\n\t\t}\n\t};\n\n\tgroupOnCallCtrl.openPopover = function(roster) {\n\t\tvar id = roster.member.id || (roster.id + \" \" + roster.member.user.id);\n\t\tif (!groupOnCallCtrl.membersPopover[id])\n\t\t\tgroupOnCallCtrl.membersPopover[id] = {\n\t\t\t\t\"open\": false\n\t\t\t};\n\t\treturn groupOnCallCtrl.membersPopover[id].open;\n\t};\n\n\tgroupOnCallCtrl.immediateCheck = function() {\n\t\treturn groupOnCallCtrl.groupFilter === \"all\";\n\t};\n\n\tgroupOnCallCtrl.setDivAddedInitially = function() {\n\t\tgroupOnCallCtrl.isDivAdded = true;\n\t};\n\n\tgroupOnCallCtrl.getGroups = function() {\n\t\tgroupOnCallCtrl.noMoreGroups = !GroupService.hasMoreGroups(groupOnCallCtrl.groupFilter);\n\n\t\t// Do not get more groups if loading, limit reached, no more groups, or filter is pinned and all pinned has been retrieved\n\t\tif (groupOnCallCtrl.isLoading || _groupLimitReached() || groupOnCallCtrl.noMoreGroups) {\n\t\t\t_splashScreenVisibility();\n\t\t\treturn;\n\t\t}\n\n\t\tif(groupOnCallCtrl.isDivAdded) {\n\t\t\tgroupOnCallCtrl.isDivAdded = false;\n\t\t\treturn;\n\t\t}\n\n\t\t// Do not get more groups if limit is zero or negative number\n\t\tvar groupLimit = _getGroupLimit();\n\t\tif (groupLimit < 1) {\n\t\t\tif (groupOnCallCtrl.initialLoad)\n\t\t\t\t_splashScreenVisibility();\n\t\t\treturn;\n\t\t}\n\n\t\tgroupOnCallCtrl.isLoading = true;\n\t\t\n\t\tGroupService.getGroups(groupOnCallCtrl.tabs[groupOnCallCtrl.groupFilter].groupOffset, groupLimit, groupOnCallCtrl.groupFilter).then(function(groups) {\n\t\t\tgroupOnCallCtrl.tabs[groupOnCallCtrl.groupFilter].groups = _uniqueConcat(groupOnCallCtrl.tabs[groupOnCallCtrl.groupFilter].groups, groups);\n\t\t\tgroupOnCallCtrl.tabs[groupOnCallCtrl.groupFilter].groupOffset = groupOnCallCtrl.tabs[groupOnCallCtrl.groupFilter].groupOffset + groupLimit;\n\t\t\t\n\t\t\tvar pinnedAndManage = _uniqueConcat(groupOnCallCtrl.tabs['pinned'].groups, groupOnCallCtrl.tabs['manage_belong'].groups);\n\t\t\tvar searchedAndAll = _uniqueConcat(groupOnCallCtrl.tabs['search'].groups, groupOnCallCtrl.tabs['all'].groups);\n\t\t\tvar allGroups = _uniqueConcat(pinnedAndManage, searchedAndAll);\n\t\t\tsortGroups(allGroups);\n\t\t\tgroupOnCallCtrl.groups = allGroups;\n\n\t\t\tgroupOnCallCtrl.initialLoad = false;\n\t\t\t_splashScreenVisibility();\n\t\t\tgroupOnCallCtrl.isLoading = false;\n\t\t});\n\n\t};\n\t\n\tfunction sortGroups(groups) {\n\t\tgroups.sort(function(groupA, groupB) {\n\t\t\tvar groupAName = groupA.name.toLowerCase();\n\t\t\tvar groupBName = groupB.name.toLowerCase();\n\t\t\tif (groupAName < groupBName)\n\t\t\t\treturn -1;\n\t\t\tif (groupAName > groupBName)\n\t\t\t\treturn 1;\n\t\t\treturn 0;\n\t\t});\n\t}\n\tgroupOnCallCtrl.init = function() {\n\t\tgroupOnCallCtrl.initialLoad = true;\n\t\tgroupOnCallCtrl.getGroups();\n\t};\n\n\t// This limit is driven by system property: com.snc.on_call_rotation.landing_page.debounce_wait\n\tvar debounceWait = parseInt($window.NOW.on_call_groups.debounce_wait || \"500\");\n\t// Search for Groups that have not yet been retrieved\n\tvar debounceTimeout;\n\t$scope.$on(\"textSearch\", function() {\n\t\tif (debounceTimeout)\n\t\t\t$timeout.cancel(debounceTimeout);\n\t\tdebounceTimeout = $timeout(function() {\n\t\t\t// each new search must flush offset\n\t\t\tgroupOnCallCtrl.searchGroups(true);\n        }, debounceWait);\n\t});\n\t\n\tgroupOnCallCtrl.textSearchTypeChange = function() {\n\t\tgroupOnCallCtrl.textSearch = '';\n\t};\n\t\n\tgroupOnCallCtrl.searchGroups = function(isNewSearch) {\n\t\tif (!groupOnCallCtrl.textSearch || groupOnCallCtrl.textSearch.length < 3)\n\t\t\treturn;\n\n\t\tgroupOnCallCtrl.isLoading = true;\n\n\t\tif (isNewSearch) {\n\t\t\tGroupService.resetSearch();\n\t\t\tgroupOnCallCtrl.tabs['search'].groupOffset = 0;\n\t\t}\n\t\t\n\t\tvar groupLimit = _getGroupLimit();\n\t\tvar alreadyFetchedGroupsThatMatchesSearch = _getGroupSysIds(groupOnCallCtrl.textSearch);\n\t\t\n\t\tGroupService.getGroups(groupOnCallCtrl.tabs['search'].groupOffset, groupLimit, 'search', true, groupOnCallCtrl.textSearch, groupOnCallCtrl.textSearchType, alreadyFetchedGroupsThatMatchesSearch).then(function(groups) {\n\t\t\tgroupOnCallCtrl.tabs['search'].groups = _uniqueConcat(groupOnCallCtrl.tabs['search'].groups, groups);\n\t\t\tgroupOnCallCtrl.tabs['search'].groupOffset = groupOnCallCtrl.tabs['search'].groupOffset + groupLimit;\n\t\t\tvar pinnedAndManage = _uniqueConcat(groupOnCallCtrl.tabs['pinned'].groups, groupOnCallCtrl.tabs['manage_belong'].groups);\n\t\t\tvar searchedAndAll = _uniqueConcat(groupOnCallCtrl.tabs['search'].groups, groupOnCallCtrl.tabs['all'].groups);\n\t\t\tvar allGroups = _uniqueConcat(pinnedAndManage, searchedAndAll);\n\t\t\tsortGroups(allGroups);\n\t\t\tgroupOnCallCtrl.groups = allGroups;\n\t\t\t_splashScreenVisibility();\n\t\t\tgroupOnCallCtrl.isLoading = false;\n\t\t});\n\n\t};\n\t\n\tfunction _getGroupSysIds(textSearch) {\n\t\tvar groupSysIds = [];\n\t\tif (!textSearch || !groupOnCallCtrl.groups || groupOnCallCtrl.groups.length < 1)\n\t\t\treturn \"\";\n\n\t\tgroupSysIds = groupOnCallCtrl.groups.filter(function(group) {\n\t\t\t\treturn (group.name && group.name.toLowerCase().indexOf(textSearch.toLowerCase()) !== -1) ||\n\t\t\t\t\t(group.rota && $sanitize(group.rota.name).toLowerCase().indexOf(textSearch.toLowerCase()) !== -1);\n\t\t\t})\n\t\t\t.map(function(group) { return group.sys_id; })\n\t\t\t.join(\",\");\n\t\treturn groupSysIds;\n\t}\n\n\t// All $scope exposed API used by on_call_avatar.xml\n\t$scope.isChatEnabled = function() {\n\t\t// this was called too: showDirectMessagePromptFn()\n\t\treturn groupOnCallCtrl.isChatEnabled;\n\t};\n\n\t$scope.getBackgroundStyle = function() {\n\t\tif ($scope.profile && $scope.profile.user && $scope.profile.user.avatar && $scope.profile.user.avatar !== \"\")\n\t\t\treturn { \"background-image\": \"url(\" + $scope.profile.user.avatar + \")\" };\n\t\tif ($scope.profile.user && $scope.profile.user.name)\n\t\t\treturn \"\"; // one-time watch (see angular doc)\n\t\treturn void (0);\n\t};\n\t\n\t$scope.openSlackApp = function (sys_id) {\n\t\tslackService.openSlackApp(sys_id);\n\t};\n\n\t$scope.openDirectMessageConversation = function(evt) {\n\t\tif (evt && evt.keyCode === 9)\n\t\t\treturn;\n\n\t\t$timeout(function() {\n\t\t\tif ($scope.profile.user)\n\t\t\t\tsnConnectService.openWithProfile($scope.profile.user);\n\t\t}, 0, false);\n\n\t\tangular.element(\".popover\").each(function() {\n\t\t\tangular.element(this).remove();\n\t\t});\n\t};\n\n\tgroupOnCallCtrl.getMembers = function(rota) {\n\t\tif (rota.rosters.length == 0)\n\t\t\treturn \"\";\n\t\treturn i18n.format(i18n.getMessage(\"{0} members\"), rota.rosters.length);\n\t};\n\t\n\tgroupOnCallCtrl.pendingActionMsg = function (actionsCount) {\n\t\tvar tooltipHtml = \"\";\n\t\tif (actionsCount) {\n\t\t\ttooltipHtml += i18n.getMessage(\"Pending Actions:\");\n\t\t\ttooltipHtml += \"<div>\" + i18n.format(i18n.getMessage(\"Gaps identified = {0}\"), actionsCount.gaps) + \"</div>\";\n\t\t\ttooltipHtml += \"<div>\" + i18n.format(i18n.getMessage(\"Conflicts identified = {0}\"), actionsCount.oddities) + \"</div>\";\n\t\t\ttooltipHtml += \"<div>\" + i18n.format(i18n.getMessage(\"Time off requests = {0}\"), actionsCount.timeOffRequests) + \"</div>\";\n\t\t\treturn $sce.trustAsHtml(tooltipHtml);\n\t\t}\n\t\treturn \"\";\n\t};\n\n\t$scope.form = groupOnCallCtrl.form;\n\n\tif ($injector.has('notifyCallService')) {\n\t\tvar notifyCallService = $injector.get('notifyCallService');\n\t\t$scope.isNotifyCallAvailable = notifyCallService.isAvailable.bind(notifyCallService);\n\t\t$scope.callPerson = notifyCallService.call.bind(notifyCallService);\n\t\t$scope.isNotifyCallEnabled = notifyCallService.isOnline.bind(notifyCallService);\n\t\tvar dereg = notifyCallService.registerCloseHandler(function () {\n\t\t\tvar popupBtn = angular.element('.popover-content .oc-user-profile .call > button');\n\t\t\tif (popupBtn.length)\n\t\t\t\tpopupBtn.focus();\n\t\t\telse if ($scope.profile && $scope.profile.user)\n\t\t\t\tangular.element('#' + $scope.profile.roster + '_' + $scope.profile.user.sys_id + ' .user-avatar .user-presence').focus();\n\t\t});\n\t\t$scope.$on('$destroy', function () {\n\t\t\tif (dereg)\n\t\t\t\tdereg();\n\t\t});\n\t}\n}]);\n\nangular.module(\"sn.on_call.now.groups\").directive(\"snOncallHeader\", function(getTemplateUrl) {\n\t\"use strict\";\n\n\treturn {\n\t\treplace: true,\n\t\trestrict: \"E\",\n\t\ttemplateUrl: getTemplateUrl(\"on_call_header.xml\"),\n\t\tlink: function(scope) {\n\t\t\tscope.$watch(\"groupOnCallCtrl.textSearch\", function(newValue, oldValue) {\n\t\t\t\tif (newValue === undefined)\n\t\t\t\t\treturn;\n\t\t\t\tif (newValue.length > 2)\n\t\t\t\t\tscope.$emit(\"textSearch\", newValue);\n\t\t\t});\n\t\t}\n\t};\n});\n\nangular.module(\"sn.on_call.now.groups\").directive(\"snOncallPinnedNotification\", function(getTemplateUrl) {\n\t\"use strict\";\n\n\treturn {\n\t\treplace: true,\n\t\trestrict: \"E\",\n\t\ttemplateUrl: getTemplateUrl(\"on_call_pinned_notification.xml\")\n\t};\n});\n\nangular.module(\"sn.on_call.now.groups\").directive(\"snOncallGroupCard\", function(getTemplateUrl) {\n\t\"use strict\";\n\n\treturn {\n\t\trestrict: \"E\",\n\t\ttemplateUrl: getTemplateUrl(\"on_call_group_card.xml\")\n\t};\n});\n\nangular.module(\"sn.on_call.now.groups\").directive(\"snOncallEmptyCard\", function(getTemplateUrl) {\n\t\"use strict\";\n\n\treturn {\n\t\trestrict: \"E\",\n\t\ttemplateUrl: getTemplateUrl(\"on_call_empty_card.xml\")\n\t};\n});\n\nangular.module(\"sn.on_call.now.groups\").directive(\"snOncallSplashScreens\", function(getTemplateUrl) {\n\t\"use strict\";\n\n\treturn {\n\t\treplace: true,\n\t\trestrict: \"E\",\n\t\ttemplateUrl: getTemplateUrl(\"on_call_splash_screens.xml\")\n\t};\n});\n\nangular.module(\"sn.on_call.now.groups\").directive(\"snOncallPageDecoration\", function(getTemplateUrl) {\n\t\"use strict\";\n\n\treturn {\n\t\treplace: true,\n\t\trestrict: \"E\",\n\t\ttemplateUrl: getTemplateUrl(\"on_call_page_decoration.xml\")\n\t};\n});\n\nangular.module(\"sn.on_call.now.groups\").directive(\"snOncallUserProfile\", function(getTemplateUrl, snCustomEvent, $window, avatarProfilePersister, $timeout, $http, i18n, $injector) {\n\t\"use strict\";\n\n\treturn {\n\t\treplace: true,\n\t\trestrict: \"E\",\n\t\ttemplateUrl: getTemplateUrl(\"on_call_avatar.xml\"),\n\t\tscope: {\n\t\t\tprofile: \"=\",\n\t\t\tgroup: \"=\",\n\t\t\tshowDirectMessagePrompt: \"=\"\n\t\t},\n\t\tlink: function(scope) {\n\t\t\tscope.showDirectMessagePromptFn = function() {\n\t\t\t\tif (scope.showDirectMessagePrompt) {\n\t\t\t\t\tvar activeUserID = $window.NOW.user_id || \"\";\n\t\t\t\t\treturn !(!scope.profile || activeUserID === scope.profile.user.sys_id || (scope.profile.user.document && activeUserID === scope.profile.user.document));\n\t\t\t\t} else\n\t\t\t\t\treturn false;\n\t\t\t};\n\n\t\t},\n\t\tcontroller: function($scope, snConnectService, $element) {\n\t\t\tvar isAccessibilityEnabled = ($window.NOW.on_call_groups.isAccessibilityEnabled === \"true\");\n\t\t\tif (isAccessibilityEnabled)\n\t\t\t\t$scope.tabindex = 0;\n\n\t\t\t$scope.form = {};\n\t\t\t$scope.form.sendDirectMsg = i18n.getMessage(\"Send a direct message\");\n\t\t\t$scope.form.notAvailable = i18n.getMessage(\"Not Available\");\n\t\t\t$scope.form.manager = i18n.getMessage(\"Manager\");\n\n\t\t\t$scope.isChatEnabled = function() {\n\t\t\t\treturn ($window.NOW.on_call_groups.chat_enabled === \"true\" && $window.NOW.isPolarisEnabled !== 'true');\n\t\t\t};\n\n\t\t\tif ($scope.profile && $scope.profile.user.sys_id && avatarProfilePersister.getAvatar($scope.profile.user.sys_id)) {\n\t\t\t\t$scope.profile = avatarProfilePersister.getAvatar($scope.profile.user.sys_id);\n\t\t\t\t$scope.$emit(\"sn-user-profile.ready\");\n\t\t\t} else {\n\t\t\t\tvar url = \"/api/now/live/profiles/sys_user.\" + $scope.profile.user.sys_id;\n\t\t\t\t$http.get(url).then(function(response) {\n\t\t\t\t\tangular.merge($scope.profile, response.data.result);\n\t\t\t\t\tavatarProfilePersister.setAvatar($scope.profile.user.sys_id, $scope.profile);\n\t\t\t\t\t$scope.$emit(\"sn-user-profile.ready\");\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t$scope.getBackgroundStyle = function() {\n\t\t\t\tif ($scope.profile && $scope.profile.user && $scope.profile.user.avatar && $scope.profile.user.avatar !== \"\")\n\t\t\t\t\treturn { \"background-image\": \"url(\" + $scope.profile.user.avatar + \")\" };\n\t\t\t\tif ($scope.profile.user && $scope.profile.user.name)\n\t\t\t\t\treturn \"\"; // one-time watch (see angular doc)\n\t\t\t\treturn void (0);\n\t\t\t};\n\n\t\t\t$scope.openDirectMessageConversation = function(evt) {\n\t\t\t\tif (evt && evt.keyCode === 9)\n\t\t\t\t\treturn;\n\n\t\t\t\t$timeout(function() {\n\t\t\t\t\tif ($scope.profile.user)\n\t\t\t\t\t\tsnConnectService.openWithProfile($scope.profile.user);\n\t\t\t\t}, 0, false);\n\n\t\t\t\tangular.element(\".popover\").each(function() {\n\t\t\t\t\tangular.element(this).remove();\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tif ($injector.has('notifyCallService')) {\n\t\t\t\tvar notifyCallService = $injector.get('notifyCallService');\n\t\t\t\t$scope.isNotifyCallAvailable = notifyCallService.isAvailable.bind(notifyCallService);\n\t\t\t\t$scope.callPerson = notifyCallService.call.bind(notifyCallService);\n\t\t\t\t$scope.isNotifyCallEnabled = notifyCallService.isOnline.bind(notifyCallService);\n\t\t\t\tvar dereg = notifyCallService.registerCloseHandler(function () {\n\t\t\t\t\t$element.find('.oc-message-container.call button').focus();\n\t\t\t\t});\n\t\t\t\t$scope.$on('$destroy', function () {\n\t\t\t\t\tif (dereg)\n\t\t\t\t\t\tdereg();\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n});","sys_class_name":"sys_ui_script","sys_id":"81e734b1d7000300532c24837e610361","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/8c6ca73b04352210559073c06a02f754","value":"8c6ca73b04352210559073c06a02f754"},"ui_type":"0","sys_update_name":"sys_ui_script_81e734b1d7000300532c24837e610361","sys_updated_by":"admin","sys_created_on":"2017-07-19 16:47:49","name":"sn_on_call_now.app","sys_name":"sn_on_call_now.app","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"3","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2023-03-20 12:39:24","sys_tags":"","script_name":"filter_widget","script":"/**\n * NG Filter Widget\n *\n * Confused? Check the NG Filter Widget Documentation UI page!\n *\n *\n * filterConfig options:\n *\n * encodedQuery           (string)  The encoded query to update and start from. Updated when \"snfilter:update_query\" is emitted.\n * queryObj               (object)  The object containing the parts of the filter, updated and loaded just like encodedQuery. Updated when \"snfilter:update_query\" is emitted.\n * sets                   (bool)    Show or hide sets\n * dotWalking             (bool)    Can a user dot walk through the field picker.\n * saveFilter             (bool)    Show the save filter button.\n * testFilter             (bool)    Shows the record count as you change the filter.\n * loadFilter             (bool)    Show the load filter button.\n * sortFilter             (bool)    Enable or disable sort modal\n * runFilter              (bool)    Show the run button. If disabled use mode=\"automatic\".\n * clearFilter            (bool)    Show the clear all button.\n * closeFilter            (bool)    Show the close filter button.\n * watchConfig            (bool)    Live updates on config object passed into filter\n * outputType             (string)  What type of query filter widget emits when run. Options are \"encoded_query\" and \"glide_query\". Defaults to \"glide_query\"\n * fieldList              (array)   List of fields to show in the filter\n *\n */\nangular.module(\"sn.filter_widget\")\n.directive(\"chgModelFilterWidget\", function($window, urlTools, snCustomEvent, snFilterInstanceStore, i18n) {\n\t\"use strict\";\n\n\treturn {\n\t\trestrict: \"E\",\n\t\treplace: true,\n\t\ttemplateUrl: urlTools.getPartialURL(\"sn_chg_model_ui_landing_cmu_filter_widget\", \"v=\" + $window.NOW.macro_flush_stamp),\n\t\tscope: {\n\t\t\ttable: \"@\",\n\t\t\ttableLabel: \"@\",\n\t\t\tfilterConfig: \"=\",\n\t\t\tuid: \"=?\"\n\t\t},\n\t\tcontroller: function($scope, $element, $attrs) {\n\t\t\tvar GLIDE_QUERY = \"glide_query\";\n\t\t\tvar ENCODED_QUERY = \"encoded_query\";\n\t\t\tvar filterId;\n\t\t\tvar filterInstance;\n\t\t\tvar internalChange = false;\n\t\t\tvar uid = angular.isDefined($scope.uid) ? $scope.uid : $scope.table;\n\t\t\tvar defaults = {\n\t\t\t\tsets: true,\n\t\t\t\twatchConfig: false,\n\t\t\t\tdotWalking: true,\n\t\t\t\tsaveFilter: false,\n\t\t\t\tloadFilter: false,\n\t\t\t\ttestFilter: false,\n\t\t\t\tsortFilter: true,\n\t\t\t\trunFilter: true,\n\t\t\t\tcloseFilter: true,\n\t\t\t\tclearFilter: true,\n\t\t\t\toutputType: GLIDE_QUERY,\n\t\t\t\trelatedListQueryConditions: false,\n\t\t\t\tmanageFiltersLink: \"/sys_filter_list.do\",\n\t\t\t\tuid: uid,\n\t\t\t\tfieldList : []\n\t\t\t};\n\n\t\t\t$scope.fieldListCloseEvent = \"filter-field-list-close\";\n\t\t\t$scope.$on(\"$destroy\", cleanUp);\n\n\t\t\t$scope.messages = {\n\t\t\t\t\"Add Sort\" : i18n.getMessage(\"Add Sort\")\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Kick off this directive\n\t\t\t */\n\t\t\tactivate();\n\n\t\t\tfunction activate() {\n\t\t\t\t_extendConfig();\n\t\t\t\t_bindFilterConfigWatcher();\n\t\t\t\tfilterId = snFilterInstanceStore.create($scope.table, $scope.filterConfig.relatedListQueryConditions, undefined, $scope.filterConfig.fieldList);\n\t\t\t\tfilterInstance = snFilterInstanceStore.get(filterId);\n\t\t\t\t_bindTooltips();\n\t\t\t\t$scope.uid = $scope.filterConfig.uid;\n\t\t\t\tvar query = _getQueryType();\n\t\t\t\t_initializeQuery(query, false).then(function() {\n\t\t\t\t\t//performance tester hook\n\t\t\t\t\tsnCustomEvent.fireAll(\"snfilter:activated\");\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Updates the base table. This will reset all the filter field lists\n\t\t\t */\n\t\t\t$scope.$on(\"snfilter:update_table\", function(e, data) {\n\t\t\t\tif ((data.id && $scope.widgetId && (data.id == $scope.widgetId)) || !$scope.widgetId) {\n\t\t\t\tfilterInstance.updateTable(data.table);\n\t\t\t\t$scope.$broadcast(\"snfilter:update_predicate_base_table\", data);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t/**\n\t\t\t * Update the internal query. Can be encoded_query string or GlideQuery object\n\t\t\t */\n\t\t\t$scope.$on(\"snfilter:initialize_query\", function(e, query) {\n\t\t\t\t_initializeQuery(query, false);\n\t\t\t});\n\n\t\t\tsnCustomEvent.on(\"snfilter:initialize_query\", initializeQuery);\n\n\t\t\tfunction initializeQuery(e, query) {\n\t\t\t\t_initializeQuery(typeof e.predicates !== \"undefined\" ? e : query, false);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Update the sort in the internal query.\n\t\t\t */\n\t\t\t$scope.$on(\"snfilter:update_order_by\", function(e, sortArray) {\n\t\t\t\tif (!sortArray)\n\t\t\t\t\treturn;\n\t\t\t\tfilterInstance.setSort(sortArray);\n\t\t\t\t_updateFilter();\n\t\t\t\t_emitQuery();\n\t\t\t});\n\n\t\t\t/**\n\t\t\t * Internal event that triggers the encoded_query string update based on if there are valid comparisons.\n\t\t\t */\n\t\t\tsnCustomEvent.observe(\"snfilter:conditionChange\", conditionChange);\n\n\t\t\tfunction conditionChange() {\n\t\t\t\t_updateFilter();\n\t\t\t\tif (_isAutomatic())\n\t\t\t\t\t_emitQuery();\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * general functions\n\t\t\t */\n\t\t\t$scope.runFilter = runFilter;\n\t\t\t$scope.testFilter = testFilter;\n\t\t\t$scope.clearFilter = clearFilter;\n\t\t\t$scope.close = close;\n\t\t\t$scope.addComparisonRow = addComparisonRow;\n\t\t\t$scope.removeComparisonRow = removeComparisonRow;\n\t\t\t$scope.addCompound = addCompound;\n\n\t\t\t/**\n\t\t\t * Add a Comparison Row based on index with a \"type\"\n\t\t\t * @param setIndex {Integer}\n\t\t\t * @param ruleSetIndex {Integer}\n\t\t\t * @param condIndex {Integer}\n\t\t\t * @param type {String}\n\t\t\t */\n\t\t\tfunction addComparisonRow(setIndex, ruleSetIndex, condIndex, type) {\n\t\t\t\t$scope.$evalAsync(function() {\n\t\t\t\t\tfilterInstance.addComparisonRow(setIndex, ruleSetIndex, condIndex, type);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Remove a Comparison row based on index\n\t\t\t * @param setIndex {Integer}\n\t\t\t * @param ruleSetIndex {Integer}\n\t\t\t * @param conditionIndex {Integer}\n\t\t\t */\n\t\t\tfunction removeComparisonRow(setIndex, ruleSetIndex, conditionIndex) {\n\t\t\t\t$scope.$broadcast($scope.fieldListCloseEvent);\n\t\t\t\t$scope.$evalAsync(function() {\n\t\t\t\t\tfilterInstance.removeComparisonRow(setIndex, ruleSetIndex, conditionIndex);\n\n\t\t\t\t\tif (_isAutomatic())\n\t\t\t\t\t\trunFilter();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Add a new filter compound\n\t\t\t */\n\t\t\tfunction addCompound() {\n\t\t\t\tfilterInstance.addCompound();\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Clear All Filter Conditions\n\t\t\t */\n\t\t\tfunction clearFilter() {\n\t\t\t\t$scope.filterConfig.relatedShowCompounds = false;\n\t\t\t\t$scope.$broadcast(\"snfilter:reset_related_list_select\");\n\n\t\t\t\t_initializeQuery(\"\", true);\n\n\t\t\t\t// List specific to empty the column header search values\n\t\t\t\tsnCustomEvent.fire(\"filter:table.clear_column_headers\", $scope.table);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Close filter widget (triggered from (x) close button\n\t\t\t */\n\t\t\tfunction close() {\n\t\t\t\t$scope.$emit(\"snbreadcrumbs:toggle_filter\");\n\t\t\t\tangular.element(\"#\"+$scope.uid+\"-open-filters-button\").focus();\n\t\t\t}\n\n\t\t\t/**\n\t\t\t *\n\t\t\t */\n\t\t\tfunction testFilter() {\n\t\t\t\tfilterInstance.testResult().then(function(count) {\n\t\t\t\t\t$scope.count = count;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Based on the filter type, get the query and emit it\n\t\t\t * Note that the query is NOT constructed here, its already been constructed\n\t\t\t *\n\t\t\t */\n\t\t\tfunction runFilter() {\n\t\t\t\ttry {\n\t\t\t\t\t_updateFilter();\n\t\t\t\t\t_emitQuery();\n\t\t\t\t} catch (ex) {\n\t\t\t\t\t_errorHandler(ex);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Remove FilterInstance from FilterInstanceStore\n\t\t\t */\n\t\t\tfunction cleanUp() {\n\t\t\t\t$element.tooltip(\"destroy\");\n\t\t\t\t//snFilterInstanceStore.remove($scope.table);\n\t\t\t\tsnFilterInstanceStore.remove(filterId);\n\t\t\t\tsnCustomEvent.un(\"snfilter:conditionChange\", conditionChange);\n\t\t\t\tsnCustomEvent.un(\"snfilter:initialize_query\", initializeQuery);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * extend our local config options with the filterConfig object thats passed in\n\t\t\t */\n\t\t\tfunction _extendConfig() {\n\t\t\t\t$scope.filterConfig = angular.extend({}, defaults, $scope.filterConfig);\n\t\t\t\tif ($attrs.relatedListQueryConditions === \"true\")\n\t\t\t\t\tangular.extend($scope.filterConfig, {relatedListQueryConditions: true});\n\n\t\t\t\t$scope.filterConfig.hideHeader = _checkHideHeader($scope.filterConfig);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * If configured to watch the filterConfig, set up a watcher\n\t\t\t * @private\n\t\t\t */\n\t\t\tfunction _bindFilterConfigWatcher() {\n\t\t\t\tif ($scope.filterConfig.watchConfig) {\n\t\t\t\t\t$scope.$watch(\"filterConfig\", function(n, o) {\n\t\t\t\t\t\tif (n !== o && !internalChange)\n\t\t\t\t\t\t\t_extendConfig();\n\n\t\t\t\t\t\tinternalChange = false;\n\t\t\t\t\t}, true);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * bind our tooltips\n\t\t\t * @private\n\t\t\t */\n\t\t\tfunction _bindTooltips() {\n\t\t\t\t$element.tooltip({\n\t\t\t\t\tselector: \".sn-filter-tooltip\"\n\t\t\t\t}).on(\"hide.bs.tooltip\", function(evt) {\n\t\t\t\t\tvar button = jQuery(evt.target);\n\t\t\t\t\tif (typeof button.hideFix === \"function\") {\n\t\t\t\t\t\tbutton.hideFix();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Determine if we should emit our query on every change\n\t\t\t * @returns {boolean}\n\t\t\t * @private\n\t\t\t */\n\t\t\tfunction _isAutomatic() {\n\t\t\t\treturn ($scope.filterConfig.runFilter === false);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Hide the filter widget header if theres no reason to show it\n\t\t\t * @param config {object}\n\t\t\t * @returns {boolean}\n\t\t\t * @private\n\t\t\t */\n\t\t\tfunction _checkHideHeader(config) {\n\t\t\t\treturn (config.saveFilter === false &&\n\t\t\t\tconfig.loadFilter === false &&\n\t\t\t\tconfig.testFilter === false &&\n\t\t\t\tconfig.sortFilter === false &&\n\t\t\t\tconfig.runFilter === false &&\n\t\t\t\tconfig.closeFilter === false );\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Update the filterConfig with our most up to date encoded_query and GlideQuery object\n\t\t\t * @private\n\t\t\t */\n\t\t\tfunction _updateFilter() {\n\t\t\t\tif ($scope.filterConfig.watchConfig)\n\t\t\t\t\tinternalChange = true;\n\n\t\t\t\t$scope.filterConfig.queryObj = filterInstance.buildQueryObject();\n\t\t\t\t$scope.filterConfig.encodedQuery = $scope.filterConfig.queryObj.toQueryString();\n\t\t\t\t$scope.$emit(\"snfilter:filter_change\");\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Emit our query based on the filterConfig outputType\n\t\t\t * @private\n\t\t\t */\n\t\t\tfunction _emitQuery() {\n\t\t\t\tswitch ($scope.filterConfig.outputType) {\n\t\t\t\t\tcase ENCODED_QUERY :\n\t\t\t\t\t\t$scope.$emit(\"snfilter:update_query\", $scope.filterConfig.encodedQuery, $scope.table);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase GLIDE_QUERY :\n\t\t\t\t\t\t$scope.$emit(\"snfilter:update_query\", $scope.filterConfig.queryObj, $scope.table);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault :\n\t\t\t\t\t\t$scope.$emit(\"snfilter:update_query\", $scope.filterConfig.queryObj, $scope.table);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Get the correct kind of query\n\t\t\t *\n\t\t\t */\n\t\t\tfunction _getQueryType() {\n\t\t\t\tvar query = [];\n\t\t\t\tif ($scope.filterConfig.queryObj)\n\t\t\t\t\tquery = $scope.filterConfig.queryObj;\n\t\t\t\telse if ($scope.filterConfig.encodedQuery)\n\t\t\t\t\tquery = $scope.filterConfig.encodedQuery;\n\n\t\t\t\treturn query;\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Initialize our filterInstance with a new query\n\t\t\t * @param query {GlideQuery|String}\n\t\t\t * @param update {Boolean}Emit updated query to the world\n\t\t\t * @returns {*}\n\t\t\t * @private\n\t\t\t */\n\t\t\tfunction _initializeQuery(query, update) {\n\n\t\t\t\t$scope.initializing = true;\n\n\t\t\t\treturn filterInstance.initialize(query, $scope.table, $scope.filterConfig.extendedOperatorOptions).then(function(queryMap){\n\n\t\t\t\t\t$scope.initializing = false;\n\t\t\t\t\t$scope.queryMap = queryMap;\n\t\t\t\t\t$scope.sortItems = filterInstance.getSort();\n\n\t\t\t\t\tif (update) {\n\t\t\t\t\t\t_updateFilter();\n\t\t\t\t\t\t_emitQuery();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction _errorHandler(ex) {\n\t\t\t\tconsole.warn(ex);\n\t\t\t}\n\n\t\t\t$scope.$watch(\"sortItems\", function(sortArray, oldValue) {\n\t\t\t\t$scope.$emit(\"snfilter:update_order_by\", sortArray);\n\t\t\t}, true);\n\t\t}\n\t};\n})\n.directive(\"chgModelSortFilterWidget\", function($window, urlTools, snDotWalkTableAPI, i18n, snFilterUtilities, snDotWalkUtilities, snFilterInstanceErrors) {\n\t\"use strict\";\n\treturn {\n\t\trestrict: \"E\",\n\t\treplace: true,\n\t\ttemplateUrl: urlTools.getPartialURL(\"sn_chg_model_ui_landing_cmu_sort_filter_widget.xml\", \"v=\" + $window.NOW.macro_flush_stamp),\n\t\tcontroller : function($scope) {\n\n\t\t\tvar firstField;\n\t\t\t$scope.showSort = false;\n\t\t\t$scope.sortDirections = [\n\t\t\t\t{\n\t\t\t\t\tlabel: i18n.getMessage(\"A to Z\"),\n\t\t\t\t\tvalue: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: i18n.getMessage(\"Z to A\"),\n\t\t\t\t\tvalue: false\n\t\t\t\t}\n\t\t\t];\n\n\t\t\t$scope.addSortItem = addSortItem;\n\t\t\t$scope.removeSortItem = removeSortItem;\n\t\t\t$scope.setSort = setSort;\n\n\t\t\t$scope.toggleSort = function() {\n\t\t\t\t$scope.showSort = !$scope.showSort;\n\t\t\t\tif ($scope.showSort)\n\t\t\t\t\t_checkEmptySortItems();\n\t\t\t\tif (!$scope.sortFields)\n\t\t\t\t\tactivate();\n\t\t\t};\n\n\t\t\tfunction isEmptySort() {\n\t\t\t\treturn (!Array.isArray($scope.sortItems) || !$scope.sortItems[0] || !$scope.sortItems[0].hasOwnProperty(\"column_label\"));\n\t\t\t}\n\n\t\t\t$scope.showSortSection = function() {\n\t\t\t\treturn $scope.showSort || !isEmptySort();\n\t\t\t};\n\n\t\t\tactivate();\n\n\t\t\tfunction activate() {\n\t\t\t\t_getFilterFieldsData()\n\t\t\t\t\t.catch(function() {\n\t\t\t\t\t\tthrow new snFilterInstanceErrors.SortFilterMetadataError($scope.table);\n\t\t\t\t\t})\n\t\t\t\t\t.finally(_checkEmptySortItems);\n\t\t\t}\n\n\t\t\tfunction setSort() {\n\t\t\t\t$scope.$emit(\"snfilter:update_order_by\", $scope.sortItems);\n\t\t\t}\n\n\t\t\tfunction _getFilterFieldsData() {\n\t\t\t\treturn snDotWalkTableAPI.getMetaData($scope.table, false, false).then(function(columns) {\n\t\t\t\t\tif ($scope.fieldList && $scope.fieldList.length > 0)\n\t\t\t\t\t\tcolumns = filterTableColumns(columns, $scope.fieldList);\n\t\t\t\t\tvar _filterFields = snFilterUtilities.convertObjectToArray(columns).filter(_removeEdgeEncryptionFields);\n\t\t\t\t\t$scope.sortFields = snDotWalkUtilities.makeFieldsArray(_filterFields);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction _checkEmptySortItems() {\n\t\t\t\tif ($scope.sortItems.length === 0)\n\t\t\t\t\taddSortItem();\n\t\t\t}\n\n\t\t\tfunction addSortItem() {\n\t\t\t\t$scope.sortItems.push({\n\t\t\t\t\tcolumn_name: firstField,\n\t\t\t\t\tascending : true\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction removeSortItem(index) {\n\t\t\t\t$scope.sortItems.splice(index, 1);\n\t\t\t\tif ($scope.sortItems.length === 0) {\n\t\t\t\t\t$scope.showSort = false;\n\t\t\t\t\tsetSort();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction _removeEdgeEncryptionFields(item) {\n\t\t\t\treturn ([\"fixed\"].indexOf(item.edge_encryption_type) === -1);\n\t\t\t}\n\n\t\t\tfunction filterTableColumns(columns, filterColumns) {\n\t\t\t\tvar processedColumns = {};\n\t\t\t\tangular.forEach(filterColumns, function(column) {\n\t\t\t\t\tif (columns[column])\n\t\t\t\t\t\tprocessedColumns[column] = columns[column];\n\n\t\t\t\t});\n\t\t\t\tif (columns[\"123TEXTQUERY321\"])\n\t\t\t\t\tprocessedColumns[\"123TEXTQUERY321\"] = columns[\"123TEXTQUERY321\"];\n\t\t\t\treturn processedColumns;\n\t\t\t}\n\t\t},\n\t\tlink: function(scope, elem, attrs) {\n\t\t\tattrs.$observe(\"fieldList\", function(value) {\n\t\t\t\tscope.fieldList = (value) ? value.split(\",\"): [];\n\t\t\t});\n\t\t}\n\t};\n});","sys_class_name":"sys_ui_script","sys_id":"831582fc53d350100999ddeeff7b12d9","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/bb9f15345332101034d1ddeeff7b12c8","value":"bb9f15345332101034d1ddeeff7b12c8"},"ui_type":"0","sys_update_name":"sys_ui_script_831582fc53d350100999ddeeff7b12d9","sys_updated_by":"admin","sys_created_on":"2020-09-14 14:10:40","name":"sn_chg_model_ui.filter_widget","sys_name":"sn_chg_model_ui.filter_widget","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/bb9f15345332101034d1ddeeff7b12c8","value":"bb9f15345332101034d1ddeeff7b12c8"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"2","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2019-09-30 15:44:43","sys_tags":"","script_name":"share","script":"angular.module(\"sn.chg_soc.share\", [\"sn.common\"])\n\t.constant(\"SOC_SHARE\", {\n\t\tTRACKING_KEY: {\n\t\t\tSHARING: \"Sharing Change Schedule\"\n\t\t},\n\t\tROLE: \"sys_user_role\",\n\t\tGROUP: \"sys_user_group\",\n\t\tUSER: \"sys_user\",\n\t\tSERVICE: {\n\t\t\tGET_SUGGESTIONS: \"/api/sn_chg_soc/soc/getSuggestions?sysparm_ck=\",\n\t\t\tGET_PERMISSIONS: \"/api/sn_chg_soc/soc/getPermissions?sysparm_ck=\",\n\t\t\tADD_INVITEES: \"/api/sn_chg_soc/soc/addInvitees?sysparm_ck=\",\n\t\t\tREMOVE_PERMISSIONS: \"/api/sn_chg_soc/soc/removePermission?sysparm_ck=\",\n\t\t\tUPDATE_PERMISSIONS: \"/api/sn_chg_soc/soc/updatePermission?sysparm_ck=\"\n\t\t}\n\t})\n\t.service(\"suggestions\", [\"$http\", \"$q\", \"$window\", \"dataService\", \"SOC_SHARE\", function($http, $q, $window, dataService, SOC_SHARE) {\n\t\tvar suggestions = this;\n\t\tsuggestions.current = [];\n\t\tsuggestions.query = \"\";\n\n\t\tsuggestions.lookup = function() {\n\t\t\tif (!suggestions.query)\n\t\t\t\treturn;\n\n\t\t\tvar url = SOC_SHARE.SERVICE.GET_SUGGESTIONS + $window.g_ck;\n\t\t\t$http.post(url, {\n\t\t\t\tquery: suggestions.query,\n\t\t\t\tsys_id: dataService.definition.sys_id.value\n\t\t\t}).then(function(response) {\n\t\t\t\tif (!response.data.result)\n\t\t\t\t\treturn;\n\t\t\t\tsuggestions.current = response.data.result;\n\t\t\t});\n\t\t};\n\n\t\tsuggestions.trackEvent = function() {\n\t\t\tdataService.trackEvent(SOC_SHARE.TRACKING_KEY.SHARING);\n\t\t};\n\t}])\n\t.directive(\"suggestionInput\", [\"$timeout\", \"suggestions\", function($timeout, suggestions) {\n\t\t\"use strict\";\n\n\t\tvar typeAheadTimeout;\n\n\t\treturn {\n\t\t\trestrict: \"E\",\n\t\t\treplace: true,\n\t\t\ttemplate: '<input id=\"recipient-input\" aria-labelledby=\"soc-sharing-invitation-search-label\" class=\"soc-suggestions\"  ng-keyup=\"shareCtrl.keyUp($event)\" ng-model=\"suggestions.query\" placeholder=\"{{shareCtrl.messages[\\'Add recipient\\']}}\"></input>',\n\t\t\tlink: function(scope) {\n\t\t\t\tscope.suggestions = suggestions;\n\t\t\t\tscope.suggestions.query = \"\";\n\n\t\t\t\tscope.$watch(\"suggestions.query\", function(newValue, oldValue) {\n\t\t\t\t\tif (!newValue || newValue === oldValue)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tif (newValue && newValue.length < 3) {\n\t\t\t\t\t\tsuggestions.current = [];\n\t\t\t\t\t\tif (typeAheadTimeout)\n\t\t\t\t\t\t\t$timeout.cancel(typeAheadTimeout);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (typeAheadTimeout)\n\t\t\t\t\t\t$timeout.cancel(typeAheadTimeout);\n\n\t\t\t\t\ttypeAheadTimeout = $timeout(function() {\n\t\t\t\t\t\tsuggestions.lookup();\n\t\t\t\t\t}, 500);\n\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}])\n\t.service(\"shareService\", [\"$http\", \"$q\", \"$window\", \"dataService\", \"SOC_SHARE\", function($http, $q, $window, dataService, SOC_SHARE) {\n\t\tvar shareService = this;\n\n\t\tvar _buildDataModel = function(result) {\n\t\t\tvar permissions = {};\n\t\t\tif (!result)\n\t\t\t\treturn permissions;\n\t\t\tpermissions.users = result.shareUsers;\n\t\t\tpermissions.groups = result.shareGroups;\n\t\t\tpermissions.roles = result.shareRoles;\n\t\t\tpermissions.everyone = result.shareWith === \"1\";\n\t\t\treturn permissions;\n\t\t};\n\n\t\tshareService.getSelectedShareWithOption = function() {\n\t\t\treturn dataService.definition.share_with.value + \"\";\n\t\t};\n\n\t\tshareService.getSocDefName = function() {\n\t\t\treturn dataService.definition.name.display_value + \"\";\n\t\t};\n\n\t\tshareService.getPermissionLists = function() {\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar url = SOC_SHARE.SERVICE.GET_PERMISSIONS + $window.g_ck;\n\t\t\t$http.post(url, {sys_id: dataService.definition.sys_id.value}).then(function(response) {\n\t\t\t\tdeferred.resolve(_buildDataModel(response.data.result));\n\t\t\t}, function(response) {\n\t\t\t\tdeferred.reject(response);\n\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tshareService.addInvitees = function(invitation) {\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar url = SOC_SHARE.SERVICE.ADD_INVITEES + $window.g_ck;\n\t\t\t$http.post(url, invitation).then(function(response) {\n\t\t\t\tdeferred.resolve(response.data.result);\n\t\t\t}, function(response) {\n\t\t\t\tdeferred.reject(response);\n\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tshareService.removePermission = function(identityDetails) {\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar url = SOC_SHARE.SERVICE.REMOVE_PERMISSIONS + $window.g_ck;\n\t\t\tvar identityLite = {\n\t\t\t\tchg_soc_definition: dataService.definition.sys_id.value,\n\t\t\t\tsys_id: identityDetails.sys_id,\n\t\t\t\ttableName: identityDetails.tableName\n\t\t\t};\n\t\t\t$http.post(url, identityLite).then(function(response) {\n\t\t\t\tdeferred.resolve(response.data.result);\n\t\t\t}, function(response) {\n\t\t\t\tdeferred.reject(response);\n\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tshareService.updatePermission = function(everyone, count) {\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar url = SOC_SHARE.SERVICE.UPDATE_PERMISSIONS + $window.g_ck;\n\t\t\tvar shareWith = {\n\t\t\t\tchg_soc_definition: dataService.definition.sys_id.value,\n\t\t\t\teveryone: everyone ? 1 : count > 0 ? 2 : \"\"\n\t\t\t};\n\t\t\t$http.post(url, shareWith).then(function(response) {\n\t\t\t\tdeferred.resolve(response.data.result);\n\t\t\t}, function(response) {\n\t\t\t\tdeferred.reject(response);\n\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t}])\n\t.controller(\"removePermissionCtrl\", [\"$scope\", \"$uibModalInstance\", \"i18n\", \"shareService\", function($scope, $uibModalInstance, i18n, shareService) {\n\n\t\t$scope.removeAccessMsg = i18n.format(\"Are you sure you want to remove {0} from this Change Schedule?\", $scope.selectedProfile.name);\n\n\t\t$scope.messages = {\n\t\t\t\"Remove access\": i18n.getMessage(\"Remove access\"),\n\t\t\t\"Cancel\": i18n.getMessage(\"Cancel\"),\n\t\t\t\"Remove\": i18n.getMessage(\"Remove\")\n\t\t};\n\n\t\t$scope.cancel = function() {\n\t\t\t$uibModalInstance.dismiss(\"cancel\");\n\t\t};\n\n\t\tvar _removePermissionSuccess = function(identityDetails) {\n\t\t\t$scope.$emit(\"sn.aside.change_soc_side.selected_profile_removed\", identityDetails);\n\t\t\t$uibModalInstance.dismiss(\"cancel\");\n\t\t};\n\n\t\t$scope.delete = function() {\n\t\t\tvar selectedProfile = angular.copy($scope.selectedProfile);\n\t\t\tselectedProfile.chg_soc_definition = $scope.socDefId;\n\t\t\tif (selectedProfile.chg_soc_definition && selectedProfile.sys_id && selectedProfile.tableName)\n\t\t\t\tshareService.removePermission(selectedProfile).then(_removePermissionSuccess);\n\t\t};\n\n\t}])\n\t.directive(\"socAsideShare\", [\"getTemplateUrl\", \"shareService\", \"dataService\", \"suggestions\", \"i18n\", \"SOC_SHARE\", \"$uibModal\", \"$window\", function(getTemplateUrl, shareService, dataService, suggestions, i18n, SOC_SHARE, $uibModal, $window) {\n\t\t\"use strict\";\n\n\t\tvar _defaultSelectedTab = \"all\";\n\t\tvar _defaultInviteMessage = i18n.format(\"{0} Change Schedule has been shared with you by {1}.\", shareService.getSocDefName(), $window.NOW.user.firstName + \" \" + $window.NOW.user.lastName);\n\t\t// HTML escape message. User can then modify message in browser, and variable is then sanitized for XSS prevention.\n\t\t_defaultInviteMessage = _defaultInviteMessage.replace(/[&<>\"'\\/]/g, function (match) {\n\t\t\tvar replacement = {\n\t\t\t\t'&': '&amp;',\n\t\t\t\t'<': '&lt;',\n\t\t\t\t'>': '&gt;',\n\t\t\t\t'\"': '&quot;',\n\t\t\t\t\"'\": '&#x27;',\n\t\t\t\t'/': '&#x2F;'\n\t\t\t};\n\t\t\treturn replacement[match]\n\t\t});\n\n\t\tvar _getIndexOf = function(permissions, identitySysId) {\n\t\t\treturn permissions.map(function(data) { return data.sys_id; }).indexOf(identitySysId);\n\t\t};\n\n\t\tvar _removeAllInstances = function(permissions, identitySysId) {\n\t\t\tvar index = _getIndexOf(permissions, identitySysId);\n\t\t\twhile (index !== -1) {\n\t\t\t\tpermissions.splice(index, 1);\n\t\t\t\tindex = _getIndexOf(permissions, identitySysId);\n\t\t\t}\n\t\t};\n\n\t\tvar _flushView = function(views) {\n\t\t\tvar viewKeys = Object.keys(views);\n\t\t\tfor (var i = 0; i < viewKeys.length; i++)\n\t\t\t\tviews[viewKeys[i]] = false;\n\t\t};\n\n\t\tvar _sortByObjKey = function(field, reverse, primer) {\n\t\t\tvar key = primer ? function(x) { return primer(x[field]); } : function(x) { return x[field]; };\n\t\t\treverse = !reverse ? 1 : -1;\n\t\t\treturn function(a, b) {\n\t\t\t\ta = key(a);\n\t\t\t\tb = key(b);\n\t\t\t\treturn reverse * ((a > b) - (b > a));\n\t\t\t};\n\t\t};\n\n\t\tvar _containsObject = function(list, obj, key) {\n\t\t\tif (!obj || !list || !key)\n\t\t\t\treturn false;\n\n\t\t\tvar listLength = list.length;\n\n\t\t\tif (listLength === 0)\n\t\t\t\treturn false;\n\n            for (var i = 0; i < listLength; i++)\n                if (list[i][key] === obj[key])\n                    return true;\n            return false;\n        };\n\n        var _difference = function(arr1, arr2, key) {\n\t\t\treturn arr1.filter(function(obj) {\n\t\t\t\treturn !_containsObject(arr2, obj, key);\n\t\t\t});\n        };\n\n\t\treturn {\n\t\t\trestrict: \"E\",\n\t\t\ttemplateUrl: getTemplateUrl(\"sn_chg_soc_aside_share_body.xml\"),\n\t\t\tscope: {\n\t\t\t\tsocDefId: \"=\",\n\t\t\t\tactiveAside: \"=\"\n\t\t\t},\n\t\t\tlink: function(scope, elem, attrs, shareCtrl) {\n\n\t\t\t\tscope.$watch(\"activeAside\", function(newValue, oldValue) {\n\t\t\t\t\tif (newValue && newValue === \"share\")\n\t\t\t\t\t\tshareCtrl.initDataModel();\n\t\t\t\t});\n\n\t\t\t\tscope.$watch(\"shareCtrl.permissions.everyone\", function(newValue, oldValue) {\n\t\t\t\t\tif (newValue === oldValue)\n\t\t\t\t\t\treturn;\n\t\t\t\t\tshareCtrl.view.checkboxDisabled = true;\n\t\t\t\t\tshareService.updatePermission(newValue, shareCtrl.permissions.all.length).then(function(result) {\n\t\t\t\t\t\tshareCtrl.view.checkboxDisabled = false;\n\n\t\t\t\t\t\tif (result.updated) {\n\t\t\t\t\t\t\tvar shareWithValue = result.shareWith;\n\t\t\t\t\t\t\tdataService.definition.share_with.value = shareWithValue;\n\t\t\t\t\t\t\tshareCtrl.permissions.everyone = shareWithValue === 1;\n\t\t\t\t\t\t\tshareCtrl.view.listPermissionsTabs = !shareCtrl.permissions.everyone;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tconsole.error(result);\n\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tscope.$on(\"sn.aside.change_soc_side.selected_profile_removed\", function(currentScope, identityDetails) {\n\t\t\t\t\tvar identitySysId = identityDetails.sys_id;\n\n\t\t\t\t\t// Remove permission from 'All' list\n\t\t\t\t\t_removeAllInstances(shareCtrl.permissions.all, identitySysId);\n\n\t\t\t\t\t// Remove permission from specific list\n\t\t\t\t\tswitch (identityDetails.tableName) {\n\t\t\t\t\t\tcase SOC_SHARE.ROLE:\n\t\t\t\t\t\t\t_removeAllInstances(shareCtrl.permissions.roles, identitySysId);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase SOC_SHARE.GROUP:\n\t\t\t\t\t\t\t_removeAllInstances(shareCtrl.permissions.groups, identitySysId);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase SOC_SHARE.USER:\n\t\t\t\t\t\t\t_removeAllInstances(shareCtrl.permissions.users, identitySysId);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tshareCtrl.view.selectedProfile = {};\n\t\t\t\t\tscope.selectedProfile = shareCtrl.view.selectedProfile;\n\t\t\t\t});\n\n\t\t\t},\n\t\t\tcontrollerAs: \"shareCtrl\",\n\t\t\tcontroller: function($scope, $rootScope, $timeout, $sanitize) {\n\t\t\t\tvar shareCtrl = this;\n\n\t\t\t\tvar _inviteSuccess = function(invitationResponse) {\n\t\t\t\t\t_flushInvitation();\n\n\t\t\t\t\tif (!invitationResponse.updated) {\n\t\t\t\t\t\t// TODO show error permissions not updated\n\t\t\t\t\t\tshareCtrl.showSharingView(\"listPermissions\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tinvitationResponse.recipients.forEach(function(recipient) {\n\t\t\t\t\t\tif (!_containsObject(shareCtrl.permissions.all, recipient, \"sys_id\"))\n\t\t\t\t\t\t\tshareCtrl.permissions.all.push(recipient);\n\t\t\t\t\t\tswitch (recipient.tableName) {\n\t\t\t\t\t\t\tcase SOC_SHARE.ROLE:\n\t\t\t\t\t\t\t\tif (!_containsObject(shareCtrl.permissions.roles, recipient, \"sys_id\"))\n\t\t\t\t\t\t\t\t\tshareCtrl.permissions.roles.push(recipient);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase SOC_SHARE.GROUP:\n\t\t\t\t\t\t\t\tif (!_containsObject(shareCtrl.permissions.groups, recipient, \"sys_id\"))\n\t\t\t\t\t\t\t\t\tshareCtrl.permissions.groups.push(recipient);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase SOC_SHARE.USER:\n\t\t\t\t\t\t\t\tif (!_containsObject(shareCtrl.permissions.users, recipient, \"sys_id\"))\n\t\t\t\t\t\t\t\t\tshareCtrl.permissions.users.push(recipient);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tif (invitationResponse.recipients.length > 0) {\n\t\t\t\t\t\tshareCtrl.permissions.all = shareCtrl.permissions.all.sort(_sortByObjKey(\"name\", false, function(a) { return a.toUpperCase(); }));\n\t\t\t\t\t\tshareCtrl.permissions.users = shareCtrl.permissions.users.sort(_sortByObjKey(\"name\", false, function(a) { return a.toUpperCase(); }));\n\t\t\t\t\t\tshareCtrl.permissions.roles = shareCtrl.permissions.roles.sort(_sortByObjKey(\"name\", false, function(a) { return a.toUpperCase(); }));\n\t\t\t\t\t\tshareCtrl.permissions.groups = shareCtrl.permissions.groups.sort(_sortByObjKey(\"name\", false, function(a) { return a.toUpperCase(); }));\n\t\t\t\t\t}\n\t\t\t\t\tshareCtrl.showSharingView(\"listPermissions\");\n\t\t\t\t};\n\n\t\t\t\tvar _getTopOfViewStack = function() {\n\t\t\t\t\treturn shareCtrl.view.stack[shareCtrl.view.stack.length - 1];\n\t\t\t\t};\n\n\t\t\t\tvar _flushInvitation = function() {\n\t\t\t\t\tshareCtrl.invitation.inviteMessage = _defaultInviteMessage;\n\t\t\t\t\tshareCtrl.invitation.recipients = [];\n\t\t\t\t\t$scope.pendingRecipients = shareCtrl.invitation.recipients;\n\t\t\t\t};\n\n\t\t\t\tshareCtrl.i18n = i18n;\n\n\t\t\t\tshareCtrl.messages = {\n\t\t\t\t\t\"Access\": i18n.getMessage(\"Access\"),\n\t\t\t\t\t\"Cancel\": i18n.getMessage(\"Cancel\"),\n\t\t\t\t\t\"Close panel\": i18n.getMessage(\"Close panel\"),\n\t\t\t\t\t\"Share\": i18n.getMessage(\"Share\"),\n\t\t\t\t\t\"Sharing\": i18n.getMessage(\"Sharing\"),\n\t\t\t\t\t\"Share with\": i18n.getMessage(\"Share with\"),\n\t\t\t\t\t\"Invite\": i18n.getMessage(\"Invite\"),\n\t\t\t\t\t\"Profile\": i18n.getMessage(\"Profile\"),\n\t\t\t\t\t\"All\": i18n.getMessage(\"All\"),\n\t\t\t\t\t\"Groups\": i18n.getMessage(\"Groups\"),\n\t\t\t\t\t\"Users\": i18n.getMessage(\"Users\"),\n\t\t\t\t\t\"Roles\": i18n.getMessage(\"Roles\"),\n\t\t\t\t\t\"Recipients\": i18n.getMessage(\"Recipients\"),\n\t\t\t\t\t\"MESSAGE\": i18n.getMessage(\"MESSAGE\"),\n\t\t\t\t\t\"Remove access\": i18n.getMessage(\"Remove access\"),\n\t\t\t\t\t\"1 user\": i18n.getMessage(\"1 user\"),\n\t\t\t\t\t\"{0} users\": i18n.getMessage(\"{0} users\"),\n\t\t\t\t\t\"1 group\": i18n.getMessage(\"1 group\"),\n\t\t\t\t\t\"{0} groups\": i18n.getMessage(\"{0} groups\"),\n\t\t\t\t\t\"1 role\": i18n.getMessage(\"1 role\"),\n\t\t\t\t\t\"{0} roles\": i18n.getMessage(\"{0} roles\"),\n\t\t\t\t\t\"View {0} profile\": i18n.getMessage(\"View {0} profile\"),\n\t\t\t\t\t\"Remove\": i18n.getMessage(\"Remove\"),\n\t\t\t\t\t\"Remove {0}\": i18n.getMessage(\"Remove {0}\"),\n\t\t\t\t\t\"Share with everyone\": i18n.getMessage(\"Share with everyone\"),\n\t\t\t\t\t\"Shared with everyone\": i18n.getMessage(\"Shared with everyone\"),\n\t\t\t\t\t\"Are you sure you want to remove {0} from this Change Schedule?\": i18n.getMessage(\"Are you sure you want to remove {0} from this Change Schedule?\"),\n\t\t\t\t\t\"Remove access to Change Schedule\": i18n.getMessage(\"Remove access to Change Schedule\"),\n\t\t\t\t\t\"{0} Change Schedule has been shared with you by {1}.\": i18n.getMessage(\"{0} Change Schedule has been shared with you by {1}.\"),\n\t\t\t\t\t\"This change schedule hasn't been shared with any groups\": i18n.getMessage(\"This change schedule hasn't been shared with any groups\"),\n\t\t\t\t\t\"This change schedule hasn't been shared with any users\": i18n.getMessage(\"This change schedule hasn't been shared with any users\"),\n\t\t\t\t\t\"This change schedule hasn't been shared with any roles\": i18n.getMessage(\"This change schedule hasn't been shared with any roles\"),\n\t\t\t\t\t\"This change schedule hasn't been shared with anyone\": i18n.getMessage(\"This change schedule hasn't been shared with anyone\"),\n\t\t\t\t\t\"Add groups, users and roles\": i18n.getMessage(\"Add groups, users and roles\"),\n\t\t\t\t\t\"Back to sharing panel permissions list view\": i18n.getMessage(\"Back to sharing panel permissions list view\"),\n\t\t\t\t\t\"Error while inviting users, groups or roles.\": i18n.getMessage(\"Error while inviting users, groups or roles.\"),\n\t\t\t\t\t\"Add recipient\": i18n.getMessage(\"Add recipient\"),\n\t\t\t\t\t\"Send an e-mail invitation\": i18n.getMessage(\"Send an e-mail invitation\")\n\t\t\t\t};\n\n\t\t\t\tshareCtrl.view = {\n\t\t\t\t\tlistPermissionsTabs: false,\n\t\t\t\t\tcheckboxDisabled: false,\n\t\t\t\t\tselectedProfile: {},\n\t\t\t\t\tshowRemoveButton: false,\n\t\t\t\t\tselectedTab: _defaultSelectedTab,\n\t\t\t\t\tstack: [\"listPermissions\"],\n\t\t\t\t\tviews: {\n\t\t\t\t\t\tlistPermissions: true,\n\t\t\t\t\t\tinviteUsers: false,\n\t\t\t\t\t\tprofile: false\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tshareCtrl.permissions = {\n\t\t\t\t\teveryone: false,\n\t\t\t\t\tall: [],\n\t\t\t\t\troles: [],\n\t\t\t\t\tgroups: [],\n\t\t\t\t\tusers: []\n\t\t\t\t};\n\n\t\t\t\tshareCtrl.invitation = {\n\t\t\t\t\tsendEmail: true,\n\t\t\t\t\tinviteMessage: _defaultInviteMessage,\n\t\t\t\t\trecipients: []\n\t\t\t\t};\n\n\t\t\t\t$scope.pendingRecipients = shareCtrl.invitation.recipients;\n\n\t\t\t\t// link controller directory to service\n\t\t\t\tshareCtrl.suggestions = suggestions;\n\n\t\t\t\tshareCtrl.keyUp = function(event) {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\tif (event.keyCode === 40 && !event.altKey) {\n\t\t\t\t\t\tvar firstElem = angular.element(\"li.sn-soc-suggestion\")[0];\n\t\t\t\t\t\tif (firstElem)\n\t\t\t\t\t\t\tfirstElem.focus();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tshareCtrl.getPermissions = function() {\n\t\t\t\t\tshareService.getPermissionLists().then(function(permissions) {\n\t\t\t\t\t\tif (shareCtrl.permissions.everyone !== permissions.everyone)\n\t\t\t\t\t\t\tshareCtrl.permissions.everyone = permissions.everyone;\n\t\t\t\t\t\tif (permissions.users)\n\t\t\t\t\t\t\tshareCtrl.permissions.users = permissions.users.sort(_sortByObjKey(\"name\", false, function(a) { return a.toUpperCase(); }));\n\n\t\t\t\t\t\tif (permissions.groups)\n\t\t\t\t\t\t\tshareCtrl.permissions.groups = permissions.groups.sort(_sortByObjKey(\"name\", false, function(a) { return a.toUpperCase(); }));\n\n\t\t\t\t\t\tif (permissions.groups)\n\t\t\t\t\t\t\tshareCtrl.permissions.roles = permissions.roles.sort(_sortByObjKey(\"name\", false, function(a) { return a.toUpperCase(); }));\n\n\t\t\t\t\t\tvar all = shareCtrl.permissions.users.slice().concat(shareCtrl.permissions.groups).concat(shareCtrl.permissions.roles);\n\t\t\t\t\t\tshareCtrl.permissions.all = all.sort(_sortByObjKey(\"name\", false, function(a) { return a.toUpperCase(); }));\n\n\t\t\t\t\t\tshareCtrl.view.listPermissionsTabs = !shareCtrl.permissions.everyone;\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\t/**\n\t\t\t\t * Enables navigating back in she sharing panel\n\t\t\t\t */\n\t\t\t\tshareCtrl.goBack = function() {\n\t\t\t\t\tshareCtrl.view.stack.pop();\n\t\t\t\t\t_flushView(shareCtrl.view.views);\n\t\t\t\t\tshareCtrl.view.views[shareCtrl.view.stack[shareCtrl.view.stack.length - 1]] = true;\n\n\t\t\t\t\t// Flush the service\n\t\t\t\t\tshareCtrl.suggestions.query = \"\";\n\t\t\t\t\tshareCtrl.suggestions.current = [];\n\t\t\t\t};\n\n\t\t\t\tshareCtrl.showProfileView = function(selectedProfile, $event) {\n\t\t\t\t\tif (\"profile\" !== _getTopOfViewStack() && \"removePermissionButton\" !== $event.target.name) {\n\t\t\t\t\t\tshareCtrl.view.stack.push(\"profile\");\n\t\t\t\t\t\t_flushView(shareCtrl.view.views);\n\t\t\t\t\t\tshareCtrl.view.views[shareCtrl.view.stack[shareCtrl.view.stack.length - 1]] = true;\n\t\t\t\t\t\tshareCtrl.view.selectedProfile = selectedProfile;\n\t\t\t\t\t\tshareCtrl.view.showRemoveButton = shareCtrl.view.selectedProfile.tableName === SOC_SHARE.USER\n\t\t\t\t\t\t\t|| shareCtrl.view.selectedProfile.tableName === SOC_SHARE.GROUP\n\t\t\t\t\t\t\t|| shareCtrl.view.selectedProfile.tableName === SOC_SHARE.ROLE;\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t/**\n\t\t\t\t * Event propagation is stopped not to trigger the onclick event which can further trigger showProfileView method.\n\t\t\t\t *\n\t\t\t\t * @param identityDetails\n\t\t\t\t * @param $event\n\t\t\t\t */\n\t\t\t\tshareCtrl.removePermission = function(identityDetails, $event) {\n\t\t\t\t\tif (\"listPermissions\" !== _getTopOfViewStack())\n\t\t\t\t\t\tshareCtrl.showSharingView(\"listPermissions\");\n\t\t\t\t\t$event.stopPropagation();\n\t\t\t\t\tshareCtrl.view.selectedProfile = identityDetails;\n\t\t\t\t\t$scope.selectedProfile = shareCtrl.view.selectedProfile;\n\t\t\t\t\tvar modalInstance = $uibModal.open({\n\t\t\t\t\t\tanimation: true,\n\t\t\t\t\t\ttemplateUrl: getTemplateUrl(\"sn_chg_soc_remove_permission_def.xml\"),\n\t\t\t\t\t\tcontroller: \"removePermissionCtrl\",\n\t\t\t\t\t\tscope: $scope,\n\t\t\t\t\t\tsize: \"sm\"\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\t/**\n\t\t\t\t * Enables showing and hiding blocks of the sharing panel\n\t\t\t\t * when user drills down\n\t\t\t\t */\n\t\t\t\tshareCtrl.showSharingView = function(viewName) {\n\t\t\t\t\tshareCtrl.view.stack.push(viewName);\n\t\t\t\t\t_flushView(shareCtrl.view.views);\n\t\t\t\t\tshareCtrl.view.views[shareCtrl.view.stack[shareCtrl.view.stack.length - 1]] = true;\n\t\t\t\t\tif (\"inviteUsers\" === viewName)\n\t\t\t\t\t\t$rootScope.$broadcast(\"sn.aside.change_soc_side.open_share:opened\");\n\t\t\t\t};\n\n\t\t\t\tshareCtrl.initDataModel = function() {\n\t\t\t\t\t// Flush Views\n\t\t\t\t\t_flushView(shareCtrl.view.views);\n\t\t\t\t\tshareCtrl.view.stack.splice(0, shareCtrl.view.stack.length);\n\t\t\t\t\tshareCtrl.view.stack.push(\"listPermissions\");\n\t\t\t\t\tshareCtrl.view.views[shareCtrl.view.stack[shareCtrl.view.stack.length - 1]] = true;\n\t\t\t\t\tshareCtrl.view.listPermissionsTabs = !shareCtrl.permissions.everyone;\n\t\t\t\t\tshareCtrl.view.selectedTab = _defaultSelectedTab;\n\n\t\t\t\t\t// Flush suggestions\n\t\t\t\t\tshareCtrl.suggestions.query = \"\";\n\t\t\t\t\tshareCtrl.suggestions.current = [];\n\n\t\t\t\t\t_flushInvitation();\n\t\t\t\t};\n\n\t\t\t\tshareCtrl.closeView = function() {\n\t\t\t\t\t$scope.$emit(\"sn.aside.change_soc_side.open_share:closed\");\n\t\t\t\t};\n\n\t\t\t\t/**\n\t\t\t\t * Clicking the Invite button sends out invitations to the selected users and groups, and role.\n\t\t\t\t */\n\t\t\t\tshareCtrl.invite = function() {\n\t\t\t\t\tif (shareCtrl.invitation.recipients && shareCtrl.invitation.recipients.length > 0) {\n\t\t\t\t\t\tsuggestions.trackEvent();\n\t\t\t\t\t\tshareCtrl.invitation.recipients = _difference(shareCtrl.invitation.recipients, shareCtrl.permissions.all, \"sys_id\");\n\t\t\t\t\t\tvar invitation = angular.copy(shareCtrl.invitation);\n\t\t\t\t\t\tinvitation.chg_soc_definition = $scope.socDefId;\n\t\t\t\t\t\tinvitation.inviteMessage = $sanitize(shareCtrl.invitation.inviteMessage);\n\t\t\t\t\t\tshareService.addInvitees(invitation).then(_inviteSuccess);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t}\n\t\t};\n\t}]);\n","sys_class_name":"sys_ui_script","sys_id":"8397f792d7401300532c24837e61037b","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"ui_type":"0","sys_update_name":"sys_ui_script_8397f792d7401300532c24837e61037b","sys_updated_by":"admin","sys_created_on":"2018-02-05 16:13:09","name":"sn_chg_soc.share","sys_name":"sn_chg_soc.share","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"29","active":"true","description":"","use_scoped_format":"false","global":"true","sys_updated_on":"2019-08-16 21:43:36","sys_tags":"","script_name":"","script":"function populateLeftAndRightScopeEditor(dataLeft, dataRight) {\n\tslushbucketPopulateHelper(gel('scope_slush_left'), dataLeft);\n\tslushbucketPopulateHelper(gel('scope_slush_right'), dataRight);\n}\n\nfunction slushbucketPopulateHelper(select, data) {\n\tselect.options.length = 0;\n\tif(data) {\n\t\tvar list = data.split('^');\n\t\tfor (var i = 0; i != list.length; i++) {\n\t\t\tvar t = list[i].split(':');\n\t\t\tvar label = atob(t[0]);\n\t\t\tvar value = atob(t[1]);\n\t\t\tvar o = new Option(label, value);\n\t\t\tselect.options[select.options.length] = o;\n\t\t}\n\t}\n}\n\nfunction cancel() {\n\tg_form.fieldChanged('scope_slush', false);\n\tsetTimeout(function() {reloadWindow(self);}, 1);\n}\n\nfunction editScopes() {\n\tg_form.fieldChanged('scope_slush', false);\n\tvar jsonScopes = {\n\t\t\"additionalScopes\": scope_slush.getValues(scope_slush.getRightSelect()) || [],\n\t\t\"removedScopes\": scope_slush.getValues(scope_slush.getLeftSelect()) || []\n\t};\n\tvar stringScopes = JSON.stringify(jsonScopes);\n\t\n\tvar ga = new GlideAjax('AJAXAddScopes');\n\tga.addParam('sysparm_name', 'updateScopes');\n\tga.addParam('sysparm_scopes', stringScopes);\n\tga.addParam('sysparm_oauthEntityId', g_form.getUniqueValue());\n\tga.getXML(function(result) {\n\t\tg_navigation.reloadWindow();\n\t});\n}","sys_class_name":"sys_ui_script","sys_id":"8398c2f053533300a91ccd2323dc347b","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4242b3b04312210559073c06a02f7f7","value":"a4242b3b04312210559073c06a02f7f7"},"ui_type":"0","sys_update_name":"sys_ui_script_8398c2f053533300a91ccd2323dc347b","sys_updated_by":"admin","sys_created_on":"2019-08-13 22:03:40","name":"populate_scope_editor_slushbucket","sys_name":"populate_scope_editor_slushbucket","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"4","active":"true","description":"Directive snCabToggle","use_scoped_format":"false","global":"false","sys_updated_on":"2025-06-05 05:18:18","sys_tags":"","script_name":"","script":"\n(function () {\n\t'use strict';\n\tangular.module('sn.itsm.vcab.common').directive('snCabToggle', function () {\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\tscope: {\n\t\t\t\tname: '@',\n\t\t\t\tvalue: '=',\n\t\t\t\tidFor: '@'\n\t\t\t},\n\t\t\ttemplate: '<div class=\"input-switch\">'\n\t\t\t\t+'<input ng-attr-id=\"{{$id}}\" type=\"checkbox\" name=\"{{name}}\" ng-model=\"value\" ng-attr-aria-labelledby = \"{{idFor}}\"/>'\n\t\t\t\t+'<label aria-hidden=\"true\" class=\"switch\" ng-attr-for=\"{{$id}}\"></label>'\n\t\t\t+'</div>'\n\t\t};\n\t});\n}());","sys_class_name":"sys_ui_script","sys_id":"840f69160b2332005775aabcb4673a17","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/3eb7af7f04b12210559073c06a02f7fb","value":"3eb7af7f04b12210559073c06a02f7fb"},"ui_type":"0","sys_update_name":"sys_ui_script_840f69160b2332005775aabcb4673a17","sys_updated_by":"system","sys_created_on":"2017-06-26 13:34:14","name":"change_calendar_vcom.snCabToggle","sys_name":"change_calendar_vcom.snCabToggle","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"14","active":"true","description":"Common functionality for rendering a progress view for building an Upgrade Plan and similar","use_scoped_format":"false","global":"true","sys_updated_on":"2022-03-26 00:43:27","sys_tags":"","script_name":"","script":"var UpgradePlanProgressViewerUtil = Class.create();\nUpgradePlanProgressViewerUtil.prototype = {\n\n\tinitialize: function() {\n\t},\n\n\trenderProgressViewer: function(title, progressId) {\n\t\tvar self = this;\n\t\tvar dialogClass = window.GlideModal ? GlideModal : GlideDialogWindow;\n\t\tvar modal = new dialogClass('hierarchical_progress_viewer', false, '40em', '10.5em');\n\t\n\t\tmodal.setTitle(title);\n\t\tmodal.setPreference('sysparm_renderer_execution_id', progressId);\n\t\tmodal.setPreference('sysparm_button_close', new GwtMessage().getMessage('Close'));\n\t\tmodal.setPreference('sysparm_renderer_hide_drill_down', true);\n\t\n\t\tmodal.on('bodyrendered', function() {\n\t\t\tself.disableModalCloseButton();\n\t\t});\n\t\n\t\tmodal.on('renderStatus', function(statusObject) {\n\t\t\tself.addResultButtonIfApplicable(statusObject);\n\t\t\tself.addViewDetailsButtonIfApplicable(statusObject, progressId, modal);\n\t\t});\n\t\n\t\tmodal.on('executionComplete', function() {\n\t\t\tself.updateModalButtons(modal);\n\t\t});\n\t\n\t\tmodal.render();\n\t},\n\n\taddResultButtonIfApplicable: function(statusObject) {\n\t\tif (!this.isUpgradePlanComplete(statusObject))\n\t\t\treturn;\n\n\t\taddButtonToProgressFooter(this.createResultButton(statusObject.result.upgradePlanSysId));\n\t},\n\n\taddViewDetailsButtonIfApplicable: function(statusObject, progressId, modal) {\n\t\tif (statusObject && statusObject.result && statusObject.result.succeedWithWarning && !$('sysparm_button_view_details') && !modal.title.includes(' - Execution Details'))\n\t\t\taddButtonToProgressFooter(this.createViewDetailsButton(progressId, modal));\n\t},\n\n\tdisableModalCloseButton: function() {\n\t\tvar closeBtn = $('sysparm_button_close');\n\t\tif (closeBtn)\n\t\t\tcloseBtn.disable();\n\t},\n\n\tisUpgradePlanComplete: function(statusObject) {\n\t\treturn statusObject && statusObject.result && statusObject.result.upgradePlanSysId && !$('sysparm_button_result_page');\n\t},\n\n\tcreateResultButton: function(upgradePlanSysId) {\n\t\tvar resultButton = new Element('button', {\n\t\t\t'id': 'sysparm_button_result_page',\n\t\t\t'type': 'button',\n\t\t\t'class': 'btn btn-default',\n\t\t\t'style': 'margin-left: 5px;'\n\t\t}).update(new GwtMessage().getMessage('Go to Upgrade Plan'));\n\n\t\tresultButton.onclick = function() {\n\t\t\twindow.location = 'sys_upgrade_plan.do?sys_id=' + upgradePlanSysId;\n\t\t};\n\n\t\treturn resultButton;\n\t},\n\n\tcreateViewDetailsButton: function(progressId, modal) {\n\t\tvar viewDetailsButton = new Element('button', {\n\t\t\t'id': 'sysparm_button_view_details',\n\t\t\t'type': 'button',\n\t\t\t'class': 'btn btn-default',\n\t\t\t'style': 'margin-left: 5px;'\n\t\t}).update(new GwtMessage().getMessage('View Details'));\n\n\t\tviewDetailsButton.onclick = function() {\n\t\t\tmodal.setPreference('sysparm_renderer_hide_drill_down', false);\n\t\t\tmodal.setTitle(modal.title + ' - Execution Details');\n\t\t\tmodal.render();\n\t\t};\n\t\treturn viewDetailsButton;\n\t},\n\n\tupdateModalButtons: function(modal) {\n\t\tvar closeBtn = $('sysparm_button_close');\n\t\tif (closeBtn) {\n\t\t\tcloseBtn.onclick = function() {\n\t\t\t\tmodal.destroy();\n\t\t\t\treloadWindow(window);\n\t\t\t};\n\t\t}\n\n\t\tvar resultBtn = $('sysparm_button_result_page');\n\t\tif (resultBtn)\n\t\t\tresultBtn.className += ' btn-primary';\n\n\t\tvar viewDetailsBtn = $('sysparm_button_view_details');\n\t\tif (viewDetailsBtn)\n\t\t\tviewDetailsBtn.className += ' btn-secondary';\n\t},\n\n\ttype: 'UpgradePlanProgressViewerUtil'\n};\n","sys_class_name":"sys_ui_script","sys_id":"848e5a530fcb301006c340c1df767ea9","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/ef542bbb04312210559073c06a02f73f","value":"ef542bbb04312210559073c06a02f73f"},"ui_type":"0","sys_update_name":"sys_ui_script_848e5a530fcb301006c340c1df767ea9","sys_updated_by":"maint","sys_created_on":"2021-10-12 16:46:51","name":"UpgradePlanProgressViewerUtil","sys_name":"UpgradePlanProgressViewerUtil","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"1","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2024-02-19 13:09:15","sys_tags":"","script_name":"","script":"function getMessage(message, callback) {\n    var result;\n\tif(message) {\n\t\tresult = gs.getMessage(message);\n\t\tif (typeof callback == \"function\") {\n\t\t\tcallback(result);\n\t\t}\n\t}\n    return result;\n}\n\ncsGlobals['getMessage'] = getMessage;","sys_class_name":"sys_ui_script","sys_id":"8636e644eb6002102b57e5306952283c","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/4c8e6ff304752210559073c06a02f7c4","value":"4c8e6ff304752210559073c06a02f7c4"},"ui_type":"10","sys_update_name":"sys_ui_script_8636e644eb6002102b57e5306952283c","sys_updated_by":"admin","sys_created_on":"2024-02-19 13:05:18","name":"global.GetMessageProxy","sys_name":"global.GetMessageProxy","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"3","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2024-09-23 14:03:44","sys_tags":"","script_name":"landing_card","script":"angular.module(\"sn.chg_soc.landing\")\n.directive(\"snLandingCard\", function(getTemplateUrl, $window) {\n\t\"use strict\";\n\treturn {\n\t\treplace : true,\n\t\trestrict : \"E\",\n\t\ttemplateUrl : getTemplateUrl(\"sn_chg_soc_landing_card.xml\"),\n\t\tlink: function($scope) {\n\t\t\t$scope.openSchedule = function(id, $event) {\n\t\t\t\t$window.location.href = \"/sn_chg_soc_change_soc.do?sysparm_id=\" + id + \"&sysparm_redirect=\" + encodeURIComponent(\"sn_chg_soc_landing.do\");\n\t\t\t};\n\t\t},\n\t\tcontroller: function($scope) {\n\t\t\t$scope.hasOwner = function(schedule) {\n\t\t\t\tif (schedule.owner.value)\n\t\t\t\t\treturn true;\n\t\t\t\treturn false;\n\t\t\t};\n\t\t\t$scope.isOwner = function(schedule) {\n\t\t\t\tif (!schedule.owner.value)\n\t\t\t\t\treturn false;\n\t\t\t\treturn ($window.NOW.user_id === schedule.owner.value);\n\t\t\t};\n\t\t}\n\t};\n});\n","sys_class_name":"sys_ui_script","sys_id":"893bc350572b0300afc34786cc94f91a","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"ui_type":"0","sys_update_name":"sys_ui_script_893bc350572b0300afc34786cc94f91a","sys_updated_by":"admin","sys_created_on":"2018-01-05 11:19:54","name":"sn_chg_soc.landing_card","sys_name":"sn_chg_soc.landing_card","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"2","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2023-03-20 12:39:30","sys_tags":"","script_name":"landing_page_header","script":"var app = angular.module(\"sn.chg_model_ui.landing\");\napp.directive(\"snLandingPageHeader\", function($window, urlTools, i18n) {\n    \"use strict\";\n    return {\n        replace: true,\n        restrict: \"E\",\n        templateUrl: urlTools.getPartialURL(\"sn_chg_model_ui_cmu_landing_header.xml\", \"v=\" + $window.NOW.macro_flush_stamp),\n        link: function($scope) {\n            $scope.filter = {\n                \"placeholderText\": i18n.getMessage(\"Filter by keyword...\"),\n                \"filterConditions\": [\"name.display_value\", \"description.display_value\"]\n            };\n        }\n    };\n});","sys_class_name":"sys_ui_script","sys_id":"8ad3cabc53d350100999ddeeff7b1274","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/bb9f15345332101034d1ddeeff7b12c8","value":"bb9f15345332101034d1ddeeff7b12c8"},"ui_type":"0","sys_update_name":"sys_ui_script_8ad3cabc53d350100999ddeeff7b1274","sys_updated_by":"admin","sys_created_on":"2020-09-14 14:05:09","name":"sn_chg_model_ui.landing_page_header","sys_name":"sn_chg_model_ui.landing_page_header","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/bb9f15345332101034d1ddeeff7b12c8","value":"bb9f15345332101034d1ddeeff7b12c8"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"16","active":"true","description":"Provides an \"Edit UI Action\" context menu option for UI Actions","use_scoped_format":"false","global":"true","sys_updated_on":"2025-06-05 05:18:18","sys_tags":"","script_name":"","script":"function showUIActionContext(event) {\r\n   if (!g_user.hasRole(\"ui_action_admin\"))\r\n      return;\r\n\r\n   var element = Event.element(event);\r\n   if (element.tagName.toLowerCase() == \"span\")\r\n      element = element.parentNode;\r\n   var id = element.getAttribute(\"gsft_id\");\r\n   var mcm = new GwtContextMenu('context_menu_action_' + id);\r\n   mcm.clear();\r\n   mcm.addURL(getMessage('Edit UI Action'), \"sys_ui_action.do?sys_id=\" + id, \"gsft_main\");\r\n   contextShow(event, mcm.getID(), 500, 0, 0);\r\n   Event.stop(event);\r\n}\r\n\r\naddLoadEvent(function() {\r\n   document.on('contextmenu', '.action_context', function (evt, element) {\r\n      showUIActionContext(evt);\r\n   });\r\n});","sys_class_name":"sys_ui_script","sys_id":"8c83238b0f320000b12e6903cfe0126f","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/72532b7304312210559073c06a02f7c6","value":"72532b7304312210559073c06a02f7c6"},"ui_type":"0","sys_update_name":"sys_ui_script_8c83238b0f320000b12e6903cfe0126f","sys_updated_by":"system","sys_created_on":"2011-05-27 17:08:41","name":"UI Action Context Menu","sys_name":"UI Action Context Menu","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"135","active":"true","description":"Helper class to handle workflow activities and post processing for Password Reset application.","use_scoped_format":"false","global":"false","sys_updated_on":"2015-07-14 18:53:29","sys_tags":"","script_name":"","script":"var PwdWfManager = Class.create();\n\nPwdWfManager.prototype = {\n  wfResult : {bPass : false, msg : \"\"},\n  requestId : \"\",\n  processId : \"\",  \n  // Error Message to display in case of workflow errors\n  errorMsg : \"\",\n  startTime : \"\",\n  wfCheckDoneFrequency : 500,\n  wfTimeOut : 300000,\n  wfContextSysId : \"\",\n  \n  initialize : function (_wfCheckDoneFrequency, _wfTimeOut) {\n    this.wfCheckDoneFrequency = _wfCheckDoneFrequency;\n    this.wfTimeOut = _wfTimeOut;\n  },\n  \n  startWfViaAjax : function(processId, requestId, password) {\n    this.requestId = requestId;\n    this.processId = processId;\n    this.startTime = new Date().getTime();\n\n    var ga = new GlideAjax('PwdAjaxWFRequestProcessor');\n    \n    // These 4 params are required.\n    ga.addParam('sysparm_name', 'startWorkflow');\n    ga.addParam('sysparam_request_id', requestId);\n    if (password != undefined) {\n      ga.addParam('sysparam_new_password', password);\n    }\n    ga.addParam('sysparam_pwd_csrf_token', findCSRFElement().value);\n    ga.getXML(this.callBackForStartWf.bind(this));\n  },\n  \n  callBackForStartWf : function(response, args) {\n    //Let's handle the security.\n    handleSecurityFrom(response);\n\n    // reponse message. this always exists.\n    var res =  response.responseXML.getElementsByTagName(\"response\");\n    var status = res[0].getAttribute(\"status\");\n    var message = res[0].getAttribute(\"message\");\n    this.wfContextSysId = res[0].getAttribute(\"value\");\n    if (status.match(/failure/i)) {\n      //this._onError(\"An error occured in PwdWfManager UI Script callBackForStartWf(): \" + message);\n\t\tthis._onError(\"TIMEOUT\");\n      return;\n    }\n    \n    this.setTimeoutForRefresh();\n  },\n  \n  setTimeoutForRefresh : function() {\n    window.setTimeout(this.checkWFProgress.bind(this), this.wfCheckDoneFrequency);\n  },\n  \n  checkWFProgress : function() {\n    var currTime = new Date().getTime();\n    if (currTime - this.startTime > this.wfTimeOut) {\n      this._onError(\"TIMEOUT\");\n      return;\n    }\n    \n    var ga = new GlideAjax('PwdAjaxWFRequestProcessor');\n    ga.addParam('sysparm_name', 'getWorkflowStatus');\n    ga.addParam('sysparam_wf_context_sys_id', this.wfContextSysId);\n    // csrf token\n    ga.addParam('sysparam_pwd_csrf_token', findCSRFElement().value)\n    ga.getXMLWait();\n    \n    handleSecurityFrom(ga.requestObject);\n    var state = ga.getAnswer();\n    \n    if (!state.match(/finished/i)) {\n      this.setTimeoutForRefresh();\n      return;\n    } else if (state.match(/failure/i)) {\n      this._onError(\"An error occured in PwdWfManager UI Script : checkWFProgress()\");\n      return;\n    }\n    \n\tvar gaResult = new GlideAjax('PwdAjaxWFRequestProcessor');\n    gaResult.addParam('sysparm_name', 'getWorkflowResult');\n    gaResult.addParam('sysparam_wf_context_sys_id', this.wfContextSysId);\n    \n    // csrf token\n    gaResult.addParam('sysparam_pwd_csrf_token', findCSRFElement().value);\n    gaResult.getXML(this.callBackForGetWfContext.bind(this));\n  },\n  \n\n  callBackForGetWfContext : function(response) {\n    handleSecurityFrom(response);\n\n    this._alert(\"client: callBackForGetWfContext triggered!\");\n    \n    var history = response.responseXML.getElementsByTagName('history');\n    var names = response.responseXML.getElementsByTagName('activity');\n    \n    var bAllActivitiesSucceeded = true;\n    \n    // An array of obj representing the state of an activity\n    var allActivitiesObj = [];\n    \n    \n    // Grab all the activities in the workflow and build an array of objects\n    for (var ii=0; ii<history.length; ii++) {\n      var tmp = {};\n      tmp.name = names[ii].getAttribute(\"name\");\n      tmp.index = history[ii].getAttribute(\"activity_index\");\n      \n      tmp.result = history[ii].getAttribute(\"activity_result\");\n      if (tmp.result == undefined) {\n        tmp.result = \"\";\n      }\n      \n      tmp.faultDescription = history[ii].getAttribute(\"fault_description\");\n      if (tmp.faultDescription == undefined) {\n        tmp.faultDescription = \"\";\n      }\n      \n      allActivitiesObj.push(tmp);\n      \n      this._alert(\"Adding activity: \" + \"index=\" + tmp.index + \" : name=\" + tmp.name + \" : result=\" + tmp.result + \" : faultDescription=\" + tmp.faultDescription);\n    }\n    \n    // Iterate through activity history list to find the first error\n    allActivitiesObj.sort(function(a, b) { return b.index - a.index; });\n    var failingActivityObj = {};\n    for (var jj in allActivitiesObj) {\n      var eachObj = allActivitiesObj[jj];\n      \n      if (eachObj.result == undefined)\n        continue;\n      \n      if (eachObj.result.match(/failure/i)) {\n        bAllActivitiesSucceeded = false;\n        this._alert(\"Found an error in activity history -> \" + eachObj.name);\n        \n        // Check if faultDescription is an json object. If so, this was created via SNC.PwdWorkflowManager().creatError().\n        try {\n          failingActivityObj = eval(\"(\" + eachObj.faultDescription + \")\");\n          this._alert(\"Fault description created via new SNC.PwdWorkflowManager().getErrorJSONString(...): \\n* wfName=\" + failingActivityObj.wfName + \"\\n* activityName=\" + failingActivityObj.activityName + \" \\n* message=\" + failingActivityObj.message + \" \\n* isFatal=\" + failingActivityObj.isFatal);\n        } catch (e) {\n          //The faultDescription was created manually, and not via new SNC.PwdWorkflowManager().getErrorJSONString(...)\n          this._alert(\"Fault description created manually\");\n          failingActivityObj.message = eachObj.faultDescription;\n          failingActivityObj.isFatal = true;\n        }\n        break;\n      }\n    }\n    \n    try {\n      var res =  response.responseXML.getElementsByTagName(\"response\");\n    } catch (error) {\n      alert(\"PwdWfManager caught exception! \" + error.message);\n    }\n    var wfGeneralStatus = res[0].getAttribute(\"status\");\n    var message = res[0].getAttribute(\"message\");\n    var value = res[0].getAttribute(\"value\");\n    \n    if (!wfGeneralStatus.match(/success/i) || (!bAllActivitiesSucceeded)) {\n      //Check failure via by workflow result\n      this.wfResult.bPass = false;\n      this.wfResult.msg = \"Password reset request failed.\";\n    } else { //pass\n      this.wfResult.bPass = true;\n    }\n  \n    this._alert (\"Final: WFContext results:\\n bPass=\" + this.wfResult.bPass + \" \\n msg=\" + this.wfResult.msg);\n    \n    if (this.wfResult.bPass) {\n      this._postProcessSuccess();\n    } else {\n      if (failingActivityObj) {\n        if (!failingActivityObj.isFatal) {\n          var msg = \"non fatal failure\";\n\t\t  this._alert(msg);\n          \n          submitWithOKAndSysParam('pwd_new.do','sysparm_page_text', msg);\n        \n        } else {\n          this._postProcessError(this.wfResult.msg);\n        }\n      } else {\n        this._postProcessError(this.wfResult.msg);\n      }\n    }\n  },\n\n  _postProcessSuccess : function() {\n    var ga = this._createPostProcessAjax(\"true\");\n    ga.getXML(this._onSuccess.bind(this));\n  },\n  \n  _postProcessError : function(msg) {\n    this.errorMsg = msg;\n    var ga = this._createPostProcessAjax(\"false\");\n    // Need to use the callback because of the parameter errorMsg\n    ga.getXML(this.callBackForPostProcessOnError.bind(this));\n  },\n  \n  callBackForPostProcessOnError : function(response) {\n    this._onError(this.errorMsg);\n  },\n  \n  _createPostProcessAjax : function(isSuccess) {\n    var ga = new GlideAjax('PwdAjaxWFRequestProcessor');\n    ga.addParam('sysparm_name', 'runPostProcessor');\n    ga.addParam('sysparam_request_id', this.requestId);\n    ga.addParam('sysparam_process_id', this.processId);\n    ga.addParam('sysparam_workflow_status', isSuccess);\n    ga.addParam('sysparam_pwd_csrf_token', findCSRFElement().value);\n    return ga;\n  },\n  \n  _alert : function(msg) {\n    var debug = false;\n    if (debug) {\n      alert(msg);\n    }\n  },\n  _onError:function(errorReason) {\n    submitWithBlock('pwd_error.do',errorReason);\n  },\n  _onSuccess:function(response) {\n    handleSecurityFrom(response);\n    submitWithOKAndSysParam('pwd_success.do','sysparm_success','SUCCESS');\n  },\n\n  type : \"PwdWfManager\"\n};\n","sys_class_name":"sys_ui_script","sys_id":"8ca2db2ebf510100710071a7bf0739fc","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/421beb3304352210559073c06a02f7ef","value":"421beb3304352210559073c06a02f7ef"},"ui_type":"","sys_update_name":"sys_ui_script_8ca2db2ebf510100710071a7bf0739fc","sys_updated_by":"admin","sys_created_on":"2013-05-15 22:12:03","name":"PwdWfManager","sys_name":"PwdWfManager","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":"read"},{"ignore_in_now_experience":"false","sys_mod_count":"209","active":"true","description":"The included javascript for pwd_enroll_questions_ui UI macro.","use_scoped_format":"false","global":"false","sys_updated_on":"2013-08-13 01:03:50","sys_tags":"","script_name":"","script":"/**\n * Onload function for pwd_enroll_question_ui macro.  \n * @param currForm\n */\nfunction questions_and_answers_on_load(formId) {\n    var currForm = document.getElementById(formId);\n    \n    if(currForm=='undefined')\n      return;\n\n    var mode = currForm.elements['mode'].value;\n    \n \t// If mode is create, all the selects will have 'Select a question'\n  \t// so disable the answer fields\n    if (mode == 'create') {\n        var allSelectElements = getAllSelectElements(currForm);\n        for (var index = 0; index < allSelectElements.length; index++) {\n            var currForm = allSelectElements[index].form;\n            var answerElm = currForm.elements['answer_' + (index+1)];\n            answerElm.disabled = true;\n        }\n        return;\n     }\n         \n    // get the current verification Id.\n    var verificationId = currForm.elements['verification_id'].value;\n    // Get the stored questions .\n    var storedQuestions = eval('getAllStoredQuestions_'+verificationId+'()');\n    var storedAnswers = eval('getAllStoredAnswers_'+verificationId+'()');\n    var allSelectElements = getAllSelectElements(currForm);\n    \n    // let's decide the size of the selects.\n    var selectSize = storedQuestions.length;\n  \n    if (allSelectElements.length > storedQuestions.length) {\n        \n        // if # of select elements is > what are stored, \n        // the required # of questions has changed.\n\n        displayEnrollAgainMessage();\n        \n    \n    } else if (allSelectElements.length < storedQuestions.length) {\n\n        // the size of questions got smaller for some reason.\n        displayEnrollAgainMessage();\n        selectSize = allSelectElements.length;\n    }\n    \n    var allQuestions = eval('getAllQuestions_'+verificationId+'()');\n    var allStoredAnswerSysIdElements = getAllStoredAnswerSysIdElementsFrom(currForm);\n    var storedAnswerSysIds = eval('getAllStoredAnswerSysIds_'+verificationId+'()');\n        \n    for (var i = 0; i < selectSize; i++) {\n    \n        var storedQuestion = storedQuestions[i];\n        \n        // Get the stored answer Id\n        var storedAnswersysId = storedAnswerSysIds[i];\n        \n        // assign the stored sys id to each element. \n        var sysIdElm = allStoredAnswerSysIdElements[i];\n        sysIdElm.value = storedAnswersysId;\n        \n        //Let's find the stored question from the all questions.\n        var index = getIndex(allQuestions,storedQuestion);\n        \n        // should not happen. can't find the stored question.\n        if (index == -1) continue;\n        \n        // Once found, let's set selected index.\n        var currElm = allSelectElements[i];\n        currElm.options.selectedIndex = index+1;\n        \n        // update  the answer value.\n        var answer = storedAnswers[i]; \n        currForm.elements['answer_'+(i+1)].value=answer;\n        \n    };\n    // Let's remove selected ones from the main question list. \n    for (var i = 0; i< allSelectElements.length; i++) {\n    var currElm = allSelectElements[i];\n    _changeList(i,currElm,false);\n  }\n  \n  // Load submit event handler.\n  //setSubmitEventHanlder();\n}\n\nfunction displayEnrollAgainMessage(){\n  displayErrorMessage(getMessage(\"The number of questions required for enrollment has changed. Enroll again.\"));  \n}\n/**\n * Removes the selected ones from the main question list.\n */\nfunction changeList(index, currElm) {\n\tvar currForm = currElm.form;\n    var answerElm = currForm.elements['answer_' + index];\n    // If 'Select a question' option is selected, disable the answer field\n    if (currElm.value == 'N/A' || currElm.value == '') {\n        answerElm.value = '';\n        answerElm.disabled = true;\n    } else {\n        answerElm.disabled = false;\n        _changeList(index, currElm, true);\n    }\n }\n/**\n* Builds the question list with removing the already selected ones from the main question list.\n*/\nfunction _changeList(index, currElm, clearNotStoredAnswer) {\n    // current form.\n    var currForm = currElm.form;\n    \n  // verification Id\n    var verificationId = currForm.elements['verification_id'].value;\n    \n  //Removes the value if exists.\n    if (clearNotStoredAnswer) {\n\n        var storedQuestions = eval('getAllStoredQuestions_'+verificationId+'()');\n        var currentQuestion = currElm.value; \n        \n        var metIndex = getIndex(storedQuestions,currentQuestion); \n        var answerElm = currForm.elements['answer_'+index];\n        \n        //If the current question is the stored question, show the stored answer.\n        //If the not the stored answer, clear the answer.\n        if (metIndex != -1) {\n            var storedAnswers = eval('getAllStoredAnswers_'+verificationId+'()');\n            answerElm.value = storedAnswers[metIndex];\n        } else {\n            answerElm.value='';\n        }\n    }\n    \n    // get all surrounding elements except for the current.\n    var otherSelectElms = getOtherSelectElements(currElm);\n    \n    // traverse other select elements.\n    for (var i = 0; i != otherSelectElms.length; i++) {\n        \n        var anotherElm  = otherSelectElms[i];\n        // if the question is already selected, then throw an error. \n        var anotherQuestion = anotherElm.value;\n        \n        if (anotherQuestion != \"N/A\" && anotherQuestion == currElm.value) {\n            displayErrorMessage(getMessage(\"The same question was already selected. Select a different question.\"));\n            currElm.options.selectedIndex = 0;\n            return;\n        }\n        // If not the same question, then let's rebuild other select lists. \n        rebuildQuestionList(anotherElm,verificationId);\n    }\n}\n/**\n * Mark  the value of the passed element has changed.\n */\nfunction markChanged(index,currElm) {\n\n    var currForm = currElm.form;\n    var verificationId = currForm.elements['verification_id'].value;\n    var questionElm = currForm.elements['question_'+index]; \n    var question = questionElm.value;\n    var storedQuestions = eval('getAllStoredQuestions_'+verificationId+'()');\n    var metIndex = getIndex(storedQuestions,question);\n    \n    // this is a new question, then the status \"true\" and return.\n    if (metIndex == -1) {\n        currForm.elements['changed_'+index].value='true';\n        return;\n    }\n\n    var storedAnswers = eval('getAllStoredAnswers_'+verificationId+'()');\n    var storedAnswer = storedAnswers[metIndex]; \n    var answer = currElm.value;\n    \n    // let's validate one more....\n    // if every character is \"*\" which is masked value, do not take it..\n    var otherCharsFound = false;\n    \n    for (var i = 0; i != answer.length; i++) {\n        \n        var ch = answer.charAt(i); \n        if (ch!='*') {\n            otherCharsFound = true;\n            break;\n        }\n    }\n    \n    if (otherCharsFound && answer != storedAnswer) {\n        currForm.elements['changed_'+index].value=true;\n    }\n} \n/**\n * Rebuilds the question list. While rebuilding, removes the questions selected by other select elements.\n */\n function rebuildQuestionList(currentElement, verificationId) {\n\n\n  // get other select elements that exxcludes the current one.\n  var otherSelectElements = getOtherSelectElements(currentElement);\n    \n     // Get all available questions. \n     var allQuestions = eval('getAllQuestions_'+verificationId+'()');\n\n     // Get the selected questions for other select elements.\n     var otherSelectedQuestions = getSelectedQuestions(otherSelectElements);\n     \n     // current question.\n     var selectedQuestion = currentElement.value;\n     \n     // shrink the list to the first option. the link will be rebuit now.\n     currentElement.options.length=1;\n     \n     // traverse all questions and remove the selected questions by other select elements.\n     var index=0;\n\n     for (var i = 0; i < allQuestions.length; i++) {\n         \n         var question = allQuestions[i];\n         \n         // if the question is  selected question, then remove the option from the list.\n         if(getIndex(otherSelectedQuestions,question) != -1)\n            continue;\n         \n         index++;\n         currentElement.options[index]=new Option(question, question);\n         \n         if(selectedQuestion!=\"N/A\" && question==selectedQuestion)\n          currentElement.options.selectedIndex = index;\n         \n     }\n }\n /*\n * Returns the elements that have the name \"stored_sys_id\". \n * The returned elements contain the stored answer sys Id.\n */\n function getAllStoredAnswerSysIdElementsFrom(currForm) {\n     var arr = [];\n     for(var i = 0; i != currForm.elements.length; i++) {\n         var elm= currForm.elements[i];\n         var name = elm.name;\n     \n         if(name.indexOf(\"stored_sys_id_\") == -1) continue;\n         \n         arr.push(elm);\n     }\n     return arr;\n }\n /*\n  * Find all select elements except for the passsed one from the form.\n  */\n  function getOtherSelectElements(currElm) {\n\n    var currForm = currElm.form;\n      var arr = [];\n      for(var i = 0; i != currForm.elements.length; i++) {\n          var elm= currForm.elements[i];\n          var name = elm.name;\n      \n          if(name.indexOf(\"question_\") == -1) continue;\n          if(name.indexOf(currElm.name) != -1 ) continue;\n          \n          arr.push(elm);\n      }\n      return arr;\n  }\n  /**\n   * Returns the index of the first occurrence from the array.\n   * @param arr\n   * @param val\n   * @returns {Number}\n   */\n  function getIndex(arr, val) {\n    for(var i = 0; i != arr.length; i++ ) {\n        if(arr[i] == val) return i;\n    }\n    return -1;\n  }\n  /**\n  * Returns an array of questions. The return array excludes the currently selected question. \n  */\n  function getSelectedQuestions(elements) {\n    var arr = [];\n    for(var i = 0; i != elements.length ;i++) {\n          // push other selected question into the array. \n          var question = elements[i].value;\n          if(question == \"N/A\") continue;\n          arr.push(question);\n      }\n      return arr;\n    } \n  /**\n   *Tests if the passed question has the same occrence \n   */\n   function getStoredQuestionIndex(question, verificationId) {\n\n        var storedQuestions = eval('getAllStoredQuestions_'+verificationId+'()');\n        return getIndex(storedQuestions, question);\n   } \n   /**\n   * Validate the form before submit.\n   */\n   function questions_and_answers_on_submit(formId) {\n       \n        var currForm = document.getElementById(formId);\n    \n        if(currForm=='undefined')\n          return false;\n\n        var selects = getAllSelectElements(currForm);\n        var answers = getAllAnswerElements(currForm);\n        \n        //We need to traverse all the answers and call markChanged method \n        //because some browsers (i.e. safari on ipad) have different behaviors for certain events.\n        //markChanged function marks the answer dirty if the answer is changed by the user. \n        for(var i=0; i<answers.length; i++){\n            \tvar answer = answers[i];\n\n\t        //make sure i+1 is getting passed. It's a question indenx starting with 1.\n        \tmarkChanged(i+1,answer);\n        }\n        \n        for(var i = 0; i< selects.length ; i++) {\n            var select = selects[i];\n            if(select.value == 'N/A') {\n                displayErrorMessage(getMessage(\"You need to choose \" + selects.length + \" questions\"));\n                return false;\n            }\n            var answer = answers[i];\n            if(answer.value.trim().length == 0) {\n                displayErrorMessage(getMessage(\"All questions should be answered\"));\n                answer.focus();\n                return false;\n            }\n        }\n        return true;\n    }\n    /*\n    * Find all select elements from the form.\n    */\n    function getAllSelectElements(currForm) {\n        var arr = [];\n        var elements = currForm.elements;\n        \n        for(var i = 0; i < elements.length ; i++) {\n            var element= elements[i];\n            var name = element.name;\n            \n            if(name.indexOf(\"question_\") == -1) continue;\n            arr.push(element);\n        }\n        return arr;\n    }\n    /*\n    * Find all select elements from the form.\n    */\n    function getAllAnswerElements(currForm) {\n        var arr = [];\n        var elements = currForm.elements;\n        \n        for(var i = 0; i < elements.length; i++) {\n            var element= elements[i];\n            var name = element.name;\n            \n            if(name.indexOf(\"answer_\") == -1) continue;\n            arr.push(element);\n        }\n        return arr;\n    }\n/**\n * Clears the old value \n * @returns\n */\nfunction clearValue(index ,currElm) {\n    var currForm = currElm.form;\n    var verificationId = currForm.elements['verification_id'].value;\n    var questionElm = currForm.elements['question_'+index];\n    var question = questionElm.value;\n    \n    // if this is not stored question, then return.\n    var allStoredQuestions = eval('getAllStoredQuestions_'+verificationId+'()');\n    var metIndex = getIndex(allStoredQuestions,question); \n    \n    // If the question is not stored, then return.\n    if(metIndex == -1)\n        return;\n    \n    // if the question is stored,let's compare the answer. \n    var storedAnswers = eval('getAllStoredAnswers_'+verificationId+'()');\n    var storedAnswer = storedAnswers[metIndex];\n    \n    var answerElm = currForm.elements['answer_'+index];\n    var answer = answerElm.value; \n        \n    // if the value is the masked value, then remove the value.\n    if(storedAnswer == answer) {\n        answerElm.value = ''; \n    }\n}\n/**\n * Restores the value if the value has not been changed.\n */\nfunction restoreValue (index ,currElm) {\n    //if the length of the current value is not 0,do not restore.\n    var answer = currElm.value;\n    if(answer.length!=0) \n        return;\n    \n    var currForm = currElm.form; \n    var question = currForm.elements['question_'+index].value;\n    var verificationId = currForm.elements['verification_id'].value;\n\n    var allStoredQuestions = eval('getAllStoredQuestions_'+verificationId+'()');\n    var metIndex = getIndex(allStoredQuestions, question); \n    \n    // it the question is not the stored one, just return.\n    if(metIndex == -1)\n        return;\n        \n    // if the question is stored,let's compare the answer. \n    var storedAnswers = eval('getAllStoredAnswers_'+verificationId+'()');\n    var storedAnswer = storedAnswers[metIndex];\n    currElm.value=storedAnswer;\n}\n/**\n * Tests if the question is stored or not. \n */\nfunction isStoredQuestion(question,verificationId) {\n    var storedQuestions = eval('getAllStoredQuestions_'+verificationId+'()');\n    return getIndex(storedQuestions,question) != -1; \n}\n","sys_class_name":"sys_ui_script","sys_id":"8f1e2fa99f70010054005f29468ba3bf","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/421beb3304352210559073c06a02f7ef","value":"421beb3304352210559073c06a02f7ef"},"ui_type":"","sys_update_name":"sys_ui_script_8f1e2fa99f70010054005f29468ba3bf","sys_updated_by":"admin","sys_created_on":"2013-04-18 00:45:12","name":"pwd_enroll_questions_ui","sys_name":"pwd_enroll_questions_ui","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":"read"},{"ignore_in_now_experience":"false","sys_mod_count":"182","active":"true","description":"Column based horizontal tree structure. Expands horizontally as child nodes are added by the user.","use_scoped_format":"false","global":"false","sys_updated_on":"2022-07-26 16:29:10","sys_tags":"","script_name":"","script":"// Adds input box text range selection\nif (!jQuery.fn.selectRange) {\n    jQuery.fn.selectRange = function(start, end) {\n        if(!end) end = start;\n        return this.each(function() {\n            if (this.setSelectionRange) {\n                this.focus();\n                this.setSelectionRange(start, end);\n            } else if (this.createTextRange) {\n                var range = this.createTextRange();\n                range.collapse(true);\n                range.moveEnd('character', end);\n                range.moveStart('character', start);\n                range.select();\n            }\n        });\n    };\n}\n\n// checks the end of a string\nif (!String.prototype.endsWith) {\n    String.prototype.endsWith = function(suffix) {\n        return this.indexOf(suffix, this.length - suffix.length) !== -1;\n    };\n}\n\n/*!\n * mapAttributes jQuery Plugin v1.0.0\n *\n * Copyright 2010, Michael Riddle\n * Licensed under the MIT\n * http://jquery.org/license\n *\n * Date: Sun Mar 28 05:49:39 2010 -0900\n */\nif (!jQuery.fn.mapAttributes) {\n    jQuery.fn.mapAttributes = function(prefix) {\n        var maps = [];\n        $(this).each(function() {\n            var map = {};\n            for (var key in this.attributes) {\n                if (!isNaN(key)) {\n                    if (!prefix || this.attributes[key].name.substr(0,prefix.length) == prefix) {\n                        map[this.attributes[key].name] = this.attributes[key].value;\n                    }\n                }\n            }\n            maps.push(map);\n        });\n        return (maps.length > 1 ? maps : maps[0]);\n    };\n}\n\n/**\n * jquery.columnview-1.3.js\n *\n * Created by Chris Yates on 2009-02-26.\n * http://christianyates.com\n *\n * Copyright 2009 Christian Yates and ASU Mars Space Flight Facility. All rights reserved.\n * Copyright 2011 Manuel Odendahl <wesen@ruinwesen.com>\n * Copyright 2012 James Roberts <feedthefire@gmail.com>\n *\n * Supported under jQuery 1.5.x or later\n *\n * Dual licensed under MIT and GPL.\n *\n * 90% modified to meet SN features requirements.\n */\n(function($) {\n    var defaults = {\n        height:     '150px',    // Height of colview-container\n        maxWidth: false, // maximum width of the main container div. Columns will scroll horizontally.\n        preview:    true,       // Handler for preview pane\n        attrs: [],              // attributes to pull from original items\n        autoFocus: true,        // focus to column onclick\n        getSubtree: undefined,  // callback for getting new data\n        onChange:   undefined,  // callback for onclick\n        columnMargin: 5, // css margin between column border and inner text.\n        isRtl: $j(\"html\").hasClass(\"rtl\"),\n        jsonData: false,\n        isQuirksMode: (document.compatMode !== 'CSS1Compat'), // true for IE7/8 and when glide.ui.doctype == false, but false for IE9\n        isOldIE: isMSIE7 || isMSIE8 || isMSIE9, // IE 7, 8 and 9 are treated the same because their lack of support for pseudo css classes.\n        isIE: isIE(), // is any IE version, even newer Trident engines.\n        idValue: false, // value of current element ID to be displayed\n        pathSeparator: ' || ',\n        blockEditing: false, // to be set by caller.\n        level:-1  // Level of node in the tree \n    };\n    //Global GwtMessage Object\n    var gwtObj=new GwtMessage();\n   \n    /** Detects all IE versions, even the ones identifying as \"Trident\" such as IE11.\n     * (isMSIE doesn't detect Trident engines properly)\n     */\n    function isIE() {\n        var isNetscape = navigator.appName == 'Netscape';\n        var isTrident = new RegExp(\"Trident/.*rv:([0-9]{1,}[\\.0-9]{0,})\").exec(navigator.userAgent) != null;\n        return ((navigator.appName == 'Microsoft Internet Explorer') || (isNetscape && isTrident));\n    }\n\n    // last event data when adding or modifying a menu item.\n    var lastEvent = false;\n\n    /**\n     * default subtree function, returns child elements of the original list.\n     **/\n    var getSubtree = function (elt) {\n        var children = $j(elt).data(\"sub\");\n        if (children) {\n            return children.children('li');\n        } else {\n            return $j(elt).children('li');\n        }\n    };\n\n    function createNewCatInput() {\n        return $j('<input id=\"newCategoryInput\"/>').addClass('labelInput').attr(\"aria-label\",getMessage(\"Enter category label\"));\n    }\n\n    function init(options) {\n        var $this = $j(this);\n        var data = $this.data(\"columnview\");\n\n        if (data) {\n            /* plugin has already been initialized */\n            return $this;\n        }\n\n        var settings = $.extend({}, defaults, options);\n\n        if (typeof settings.jsonData === 'string') {\n            settings.jsonData = $j.parseJSON(settings.jsonData);\n        }\n\n        /* fix order of declaration */\n        if (!settings.getSubtree) {\n            settings.getSubtree = getSubtree;\n        }\n\n        if (settings.maxWidth && !(''+settings.maxWidth).endsWith('px')) {\n            settings.maxWidth += 'px';\n        }\n        defaults = settings;\n\n        addCSS(settings);\n\n        // Hide original list\n        $this.hide();\n\n        defaults.containerId = $this.attr('id') + '-columnview-container';\n        data = {\n            settings: settings,\n            origElt: $this\n        };\n\n        // Create new top container\n        var $container = $j('<div/>').addClass('colview-container').css({'height':settings.height}).attr({'id': defaults.containerId}).insertAfter($this);\n        $container.addClass((defaults.blockEditing) ? 'block-edit' : 'allow-edit');\n        $container.data('columnview', data);\n\n        /* populate the first column */\n        var columnDiv = buildList(settings.jsonData, $container);\n        columnDiv.attr('class', 'top column');\n        addPlusButtons();\n\n        /* bind events on the newly created column entries */\n        $container.click(handleClickEvent);\n\n        // set page-global events\n        if (defaults.isOldIE)\n            $j(document).on('keyup', handleKeyEvent);\n        else\n            $j(window).on('keyup', handleKeyEvent);\n\n        if (settings.idValue) {\n            setTimeout(function() {\n                var idPath = findPathById(settings.jsonData, settings.idValue, settings.pathSeparator);\n                idPath = idPath.split(settings.pathSeparator);\n                drillIntoPath(idPath, $container);\n            }, 150);\n        }\n\n        // hijack ok/cancel button event handlers.\n        var $okBtn = $j('#body_kb_categories_dialog .btn.btn-primary.category-ok-btn');\n        var okFncOnClick = $okBtn[0].onclick;\n        $okBtn[0].onclick = null;\n        var $cancelBtn = $j('#body_kb_categories_dialog .btn.btn-default');\n\n        // hook on the OK button\n        $okBtn.click(function(evt) {\n            destroy();\n            disableOkCancel();\n            fireIeBlurEvent(this);\n            if (lastEvent) {\n                var defer = $j.Deferred();\n                var deferredFnc = defer.then(function() {\n                    // defer processing the original click event until after the data has been processed.\n                    okFncOnClick(evt.originalEvent);\n                });\n                processLastEvent(deferredFnc);\n            } else {\n                okFncOnClick(evt.originalEvent);\n            }\n        });\n\n        // hook on the Cancel button\n        $cancelBtn.click(function(evt) {\n            destroy();\n            if (window.blurTimeout) clearTimeout(blurTimeout);\n            disableOkCancel();\n        });\n\n        var maxWidth = $container.parent().width() - 5;\n        $container.css('max-width', maxWidth);\n        if (defaults.isOldIE) {\n            $container.width(maxWidth);\n        }\n\n        return $this;\n    }\n\n    // remove page-golbal events\n    function destroy() {\n        if (defaults.isOldIE)\n            $j(document).off('keyup', handleKeyEvent);\n        else\n            $j(window).off('keyup', handleKeyEvent);\n    };\n\n    /**\n     * Handle a click event on an item inside the menu.\n     */\n    \n    \n    function handleClickEvent(event) {\n        lastEvent = false;\n        var $target = $j(event.target);\n        var $newItem = $j('#newCategoryInput');\n        \n        //Handle a click outside of the items and will focus on errored input\n        if (!$target.is('.list-item, .label') || $newItem.length != 0) {         \n            $newItem.focus();       \n            return;\n        }\n\n        processLastEvent();\n\n        var $container = $j('#' + defaults.containerId);\n        var data = $container.data('columnview');\n        var settings = data.settings;\n        var $self = $target.is('.label') ? $target.parent() : $target;\n        $self.focus();\n\n        /** if element already active, go into edit mode:\n         *  hide the element, show the input field, bind an event to handle the new input value\n         */\n        if (!defaults.blockEditing && $self.hasClass(\"colview-active\")) {\n            $self.addClass('pen-icon');\n            var label = $self.find('.label').eq(0);\n            label.css('display', 'none');\n            var content = label.text();\n            var input = createNewCatInput();\n            input.val(content);\n\n            if (defaults.isQuirksMode && defaults.isOldIE) {\n                input.css('height', '26px');\n                input.css('line-height', '26px');\n            }\n\n            input.appendTo($self);\n            input.focus();\n            input.selectRange(0, content.length);\n\n            if (defaults.isQuirksMode && defaults.isOldIE) {\n                input.width($self.width()-20);\n            }\n\n            setInputHandlers(input, {\n                type: 'update',\n                originElId: data.origElt.attr('id')\n            });\n        } else {\n            defaults.level = $j('.column', $container).index($self.parents('.column'));\n            /** Remove blocks to the right in the tree, and 'deactivate' other\n             * links within the same level, if metakey is not being used\n             */\n            $j('.column:gt('+defaults.level+')', $container).remove();\n            $j('.column:eq('+defaults.level+') .list-item', $container).removeClass('colview-active inpath');\n            $j('.colview-active', $container).addClass('inpath');\n            $j('.column:lt('+defaults.level+') .list-item', $container).removeClass('colview-active');\n\n            $self.addClass('colview-active');\n            var item = findItemById(data.settings.jsonData, $self.data('id'));\n\n            if (item.items.length) {\n                // Menu has children, so add another submenu\n                addSubmenu($container, $self);\n                addPlusButtons();\n                return;\n            } else {\n                // No children, show title instead (if it exists, or a link)\n                addLastColumn($container);\n            }\n\n            var activeElem = $container.find(\".colview-active\").eq(0);\n            data.origElt.trigger(\"columnview_select\", {\n                'id': activeElem.data('id'),\n                'value': activeElem.data('label')\n            });\n        }\n\n        if (settings.onChange)\n            settings.onChange($container.find('.colview-active'));\n\n        if (settings.autoFocus)\n            $container.scrollLeft($self.offsetParent().offset().left);\n\n        event.preventDefault();\n    }\n\n    /**\n     * Handle Keyboard navigation\n     */\n    function handleKeyEvent(event) {\n        // not while editing a list item\n        if ($j(event.target).is('.labelInput')) {\n            return;\n        }\n        var $container = $j('#' + defaults.containerId);\n        var $self = $container.find('.colview-active');\n        var keyCode = event.which;\n        if (defaults.isRtl) {\n            // swap left and right key code when running in rtl mode.\n            if (keyCode == 37) keyCode = 39;\n            else if (keyCode == 39) keyCode = 37;\n        }\n        switch (keyCode) {\n            case (37): //left\n                event.preventDefault();\n                $self.parent().prev().children('.inpath').focus().trigger('click');\n                break;\n            case (38): //up\n                event.stopImmediatePropagation();\n                event.preventDefault();\n                $self.prev().focus().trigger('click');\n                break;\n            case (39): //right\n                event.preventDefault();\n                if ($self.hasClass('arrow')) {\n                    $self.parent().next().children('.list-item:first').focus().trigger('click');\n                }\n                break;\n            case (40): //down\n                event.stopImmediatePropagation();\n                event.preventDefault();\n                $self.next().focus().trigger('click');\n                break;\n        }\n    }\n\n    /**\n     * Dispatcher method for the jQuery plugin. Call without arguments\n     * or options to call the initializer, or pass a method name and\n     * arguments:\n     *\n     * $j(elt).columnview();\n     *\n     */\n    $j.fn.columnview = function(arg) {\n        if (typeof arg === 'object') {\n            return init.apply(this, arguments);\n        } else {\n            $j.error('jQuery.columnview needs a json object literal as argument');\n        }\n    };\n\n    function disableOkCancel() {\n        $j('#body_kb_categories_dialog .btn.btn-primary.category-ok-btn').attr('disabled', true);\n        $j('#body_kb_categories_dialog .btn.btn-default').attr('disabled', true);\n    }\n\n    function fireIeBlurEvent(srcElement) {\n        if (defaults.isQuirksMode || defaults.isOldIE) {\n            var elem = $j('#newCategoryInput')[0];\n            if (elem) {\n                var evObj = document.createEventObject();\n                evObj.button = 0;\n                evObj.srcElement = srcElement;\n                evObj.relatedTarget = srcElement;\n                evObj.target = elem;\n                elem.fireEvent('onblur', evObj);\n            }\n        }\n    }\n\n    /**\n     * When an item was added or modified a \"lastEvent\" was memorized.\n     */\n    function processLastEvent(deferredFnc) {\n        if (!lastEvent) {\n            return;\n        }\n        var params = false;\n\n        if (lastEvent.type === 'update') {\n            params = {\n                id: lastEvent.id,\n                value: lastEvent.value,\n                deferredFnc: deferredFnc,\n                callback: function(id, params) {\n                    if (params.deferredFnc) params.deferredFnc.done();\n                }\n            };\n        } else if (lastEvent.type === 'create') {\n            params = {\n                id: lastEvent.id,\n                value: lastEvent.value,\n                newItem: lastEvent.newItem,\n                deferredFnc: deferredFnc,\n                callback: function(id, params) {\n                    params.newItem.id = id;\n                    var activeElem = $j('#' + defaults.containerId).find(\".colview-active\").eq(0);\n                    activeElem.data('id', id);\n                    if (params.deferredFnc) params.deferredFnc.done();\n                }\n            };\n        }\n\n        if (params) {\n            $j(lastEvent.triggerTarget).trigger(lastEvent.triggerEvent, params);\n        }\n\n        lastEvent = false;\n    }\n\n    function addLastColumn($container) {\n        var lastColumn = $j('<div/>').addClass('column last-column').appendTo($container);\n        addPlusButton(lastColumn);\n    }\n\n    /**\n     * removes \"edit mode\" input box and reset styling.\n     */\n    function discardInputElement(event, removeAll) {\n        var inputEl = $j('#newCategoryInput');\n        var itemEl = inputEl.parent();\n        var labelEl = inputEl.prev();\n\n        if (removeAll) {\n            inputEl.remove();\n            labelEl.remove();\n            itemEl.remove();\n        } else {\n            itemEl.removeClass('pen-icon');\n            labelEl.removeAttr('style');\n            inputEl.remove();\n        }\n        itemEl.focus();\n    }\n\n    function checkErrors(evt,newVal,oldVal,removeAll)\n    {\n        if(!newVal.trim().length)\n        {\n            if(evt.data.type == 'create')\n                discardInputElement(evt, true);\n            else\n                discardInputElement(evt, false);\n        }\n        else if(newVal == oldVal)\n            discardInputElement(evt, false);\n        else if(!removeAll)\n            discardInputElement(evt, removeAll);    \n\n        if($j('#newCategoryInput').length)\n        {\n            var catName = newVal;\n            var err_message = getMessage('The Category, {0}, already exists at this level. Please enter a unique category.');\n            err_message = err_message.replace(\"{0}\",catName);\n            $j('#err_message').text(err_message).css('display','block');    \n        }\n        else\n            $j('#err_message').css('display','none');\n    }\n    \n    \n    /**\n     * the event listeners set here will be removed when the input field is removed by jquery.\n     */\n    function setInputHandlers(input, paramObj) {\n        input.blur(paramObj, function(evt) {\n            var blurExec = function() {\n                var $newItem = $j('#newCategoryInput');\n                var newVal = $newItem.val();\n                var oldVal = $newItem.prev().text();\n                updateEvtHandler(evt);\n                var removeAll = (lastEvent === false);\n                processLastEvent();\n                checkErrors(evt,newVal,oldVal,removeAll);\n            };\n\n            if (defaults.isOldIE) {\n                /*\n                delayed execution for legacy IE versions: if the cancel button is clicked it will cancel this\n                execution, any other cause for the blur event will let the execution complete.\n                */\n                window.blurTimeout = setTimeout(blurExec, 250);\n            } else if (!evt.relatedTarget || evt.relatedTarget.id == '' || evt.relatedTarget.id === 'kb_categories_dialog' || evt.relatedTarget.id === 'ok_button' || $j(evt.relatedTarget).is('.list-item')) {\n                /*\n                We don't save the last change if Cancel was clicked.\n                We only save the current changes if either no DLG button was clicked,\n                or when another list-item was clicked, or when the OK button was clicked.\n                */\n                blurExec(evt);\n            } else if (evt.relatedTarget.id === 'cancel_button') {\n                // NoOp\n            } else {\n                // special edge cases are hard to track without this.\n                throw 'unexpected onblur case';\n            }\n        });\n\n        input.keydown(paramObj, function(evt) {\n            var keyCode = event.which;\n            switch (keyCode) {\n                case (27): {\n                    // ESC\n                    evt.stopImmediatePropagation();\n                    evt.preventDefault();\n                    var removeAll = (evt.data.type === 'create');\n                    discardInputElement(evt, removeAll);\n                    break;\n                }\n                case (13): {\n                    // ENTER\n                    var $newItem = $j('#newCategoryInput');\n                    var newVal = $newItem.val();\n                    var oldVal = $newItem.prev().text();\n                    evt.stopImmediatePropagation();\n                    evt.preventDefault();\n                    updateEvtHandler(evt);\n                    var removeAll = (lastEvent === false);\n                    processLastEvent();\n                    checkErrors(evt,newVal,oldVal,removeAll);\n                    break;\n                }\n            }\n        });\n    }\n\n    /**\n     * Event handler to create or update items in a list.\n     * The 'event' argument is expected to have a 'data' object containing 'originElId' and 'type'\n     */\n    function updateEvtHandler(event) {\n        var $activeInput = $j('#newCategoryInput');\n        var $activeElem = $activeInput.parent();\n        var $activeLabel = $activeInput.prev();\n\n        var oldValue = $activeLabel.text();\n        var newValue = $activeInput.val();\n        if (newValue && newValue.trim().length && newValue !== oldValue) {\n            \n\n            var $colviewContainer = $j('#' + defaults.containerId);\n            var settings = $colviewContainer.data('columnview').settings;\n\n            if (event.data.type === 'update') {\n                var sysId = $activeElem.data('id');\n                var dataItem = findDuplicateItemById(settings.jsonData, sysId,newValue);\n                if(dataItem && dataItem.label)\n                {\n                    $activeLabel.text(newValue);\n                    $activeElem.data('label', newValue);\n                    dataItem.label = newValue;\n                    lastEvent = {\n                        type: 'update',\n                        id: sysId,\n                        value: newValue,\n                        triggerTarget: '#' + event.data.originElId,\n                        triggerEvent: 'columnview_update'\n                    };\n                }\n                else\n                    lastEvent = false;\n            } else if (event.data.type === 'create') {\n                var parentItem = getParentListItem($activeElem);\n                var parentItemId = parentItem.data('id');\n                var newItem = addItemToParentId(settings.jsonData, parentItemId, newValue);\n                if(newItem && newItem.label)\n                {\n                    addArrow(parentItem);\n                    addLastColumn($colviewContainer);\n                    $activeLabel.text(newValue);\n                    $activeElem.data('label', newValue);\n                    lastEvent = {\n                        type: 'create',\n                        id: parentItemId,\n                        value: newValue,\n                        newItem: newItem,\n                        triggerTarget: '#' + event.data.originElId,\n                        triggerEvent: 'columnview_create'\n                    };\n                }\n                else\n                    lastEvent = false;\n            }\n        }\n    }\n\n    function getParentListItem(elem) {\n        var parent = elem.closest('.column').prev();\n        parent = parent.find('.inpath, .colview-active').eq(0);\n        return parent;\n    }\n\n    function findDuplicateItemById(items,id,newValue) {\n        for (var i = 0; i < items.length; i++) {\n            var obj = items[i];\n            if (obj.id == id) {\n                for(var j=0;j<items.length;j++)\n                {\n                    if(j != i && items[j].label.toLowerCase().trim() == newValue.toLowerCase().trim())\n                    {\n                        return {};\n                    }\n                }\n                return obj;\n            } \n            else if (obj.items.length) {\n                var result = findDuplicateItemById(obj.items,id,newValue);\n                if (result) return result;\n            }\n        }\n    }\n    \n    function findItemById(items, id) {\n        for (var i = 0; i < items.length; i++) {\n            var obj = items[i];\n            if (obj.id == id) {\n                return obj;\n            } else if (obj.items.length) {\n                var result = findItemById(obj.items, id);\n                if (result) return result;\n            }\n        }\n    }\n\n    function findPathById(items, id, pathSeparator) {\n        for (var i = 0; i < items.length; i++) {\n            var obj = items[i];\n            if (obj.id == id) {\n                return obj.id;\n            } else if (obj.items.length) {\n                var result = findPathById(obj.items, id, pathSeparator);\n                if (result && result.length) return obj.id + pathSeparator + result;\n            }\n        }\n    }\n\n    function drillIntoPath(idArray, container) {\n        for (var j = 0; j < idArray.length; j++) {\n            var id = idArray[j];\n            var listItems = container.find('.column').last().find('.list-item');\n            for (var k = 0; k < listItems.length; k++) {\n                var listItem = listItems.eq(k);\n                if (id  == listItem.data('id')) {\n                    listItem.click();\n                    break;\n                }\n            }\n        }\n    }\n\n    \n    function validateNewItem(items,newItem,newLabel)\n    {\n        for(var i=0;i<items.length;i++)\n        {\n            if(items[i].label.toLowerCase().trim() == newLabel.toLowerCase().trim())\n            {\n                return {};\n            }\n        }\n        return newItem;\n    }\n    \n    function addItemToParentId(items, parentItemId, newLabel, newId) {\n        var newItem = {\n            label: newLabel,\n            id: newId || newLabel,\n            items: []\n        };\n        var item = findItemById(items, parentItemId);\n        var obj;\n        if (item) // add new item to parent item.\n        {\n            obj = validateNewItem(item.items,newItem,newLabel);\n            if(obj && obj.label)\n            {\n                item.items.push(newItem);\n            }\n        }\n        else // when no parent item found, add to array of first level items.\n        {\n            obj = validateNewItem(items,newItem,newLabel);\n            if(obj && obj.label)\n                items.push(newItem);\n        }\n        return obj;\n    }\n\n    function buildList(items, container) {\n\t\tvar ariaLabelMoreText = getMessage(\"choose a category and click right arrow to navigate to its respective level\");\n        var ariaSectionText = getMessage(\"level\");\n\t\tvar columnDiv = $j('<div class=\"column\"></div>');\n        for (var i = 0; i < items.length; i++) {\n            var obj = items[i];\n            var listItem = $j('<div>').addClass('list-item').attr('tabindex', '0').data({\n                id: obj.id,\n                label: obj.label\n            }).appendTo(columnDiv);\n            addEditImg(listItem);\n\n\t\t\tvar ariaNextLevelCategoryInfo = \"\";\n            if (obj.items.length) {\n                listItem.addClass('arrow');\n                addArrow(listItem);\n\t\t\t\tariaNextLevelCategoryInfo = \" \" + ariaLabelMoreText + (defaults.level+3);\n\t\t\t}\n            var span = $j('<span class=\"label\"></span>').html(obj.label).attr({\"aria-label\": obj.label+ \",\" + ariaSectionText +(defaults.level+2) + ariaNextLevelCategoryInfo});\n            listItem.append(span);\n        }\n        columnDiv.appendTo(container);\n\t\t$j(\".list-item\",columnDiv).last().on('focus', function() {\n\t\t\tcolumnDiv.scrollTop(10000);\t\t\n\t\t});\n        return columnDiv;\n    }\n\n    function addPlusButtons() {\n        // Insert a [+] button in each column.\n        var colviewCntrItems = $j('.colview-container .column');\n        for (var i = 0; i < colviewCntrItems.length; i++) {\n            addPlusButton($j(colviewCntrItems[i]));\n        }\n    }\n\n    function addPlusButton(container) {\n        if (!defaults.blockEditing && !(container.has('.btn-add-cat').length)) {\n            // list-item-spacer prevents button from potentially tucking under horizontal scrollbar.\n            var spacer = $j('<div>').addClass('list-item-spacer').html(' ');\n            spacer.appendTo(container);\n            var btnCnt = $j('<div>').addClass('btn-add-cat').html(' ');\n            if (defaults.isQuirksMode || defaults.isOldIE) {\n                btnCnt.html('+'); // IE fallback solution for unsupported web fonts.\n            } else {\n                btnCnt.addClass('icon-add');\n            }\n\t\t\tbtnCnt.attr(\"tabindex\",\"0\");\n            btnCnt.attr( { \"aria-label\":gwtObj.getMessage(\"Add category at level {0}\",(defaults.level+2)), \"role\":\"button\" });\n            btnCnt.appendTo(container);\n            btnCnt.click(function(event) {\n                processLastEvent();\n                newItemInput(event);\n            });\n\t\t\t//Reset button position to allow focus border\n\t\t\tbtnCnt.on(\"focus\",function(evt){\n\t\t\t\t$j(evt.currentTarget).css('bottom', (container.scrollTop() - 3) * -1);\n\t\t\t});\n\t\t\tbtnCnt.on(\"focusout\",function(evt){\n\t\t\t\t$j(evt.currentTarget).css('bottom', container.scrollTop() * -1);\n\t\t\t});\n            // reposition the buttons along the bottom border when the container scrolls.\n            container.scroll(function (evt) {\n                $j(evt.currentTarget).find('.btn-add-cat').css('bottom', container.scrollTop() * -1);\n            });\n        }\n    }\n\n    // create new input field to entering a new list item label.\n    function newItemInput(event) {\n        var $newItem = $j('#newCategoryInput');\n\n        if($newItem.length != 0)\n        {\n            $newItem.focus();\n            return;\n        }\n        \n        var target = $j(event.currentTarget);\n        var columnDiv = target.parent('.column');\n        var input = columnDiv.find('.labelInput');\n\n        if (input.length) {\n            input.eq(0).focus();\n        } else {\n            columnDiv.nextAll().remove();\n            var container = $j('#' + defaults.containerId);\n            // grey out items in selection path.\n            container.find('.colview-active').toggleClass('colview-active inpath');\n            columnDiv.find('.inpath').removeClass('inpath'); // remove selection in same column.\n            // create list item.\n            var listItem = $j('<div>').addClass('list-item colview-active pen-icon').attr('tabindex', '0').insertBefore(columnDiv.find('.list-item-spacer').eq(0));\n            // create span label\n            $j('<span/>').addClass('label').css('display', 'none').appendTo(listItem);\n            // create input field.\n            input = createNewCatInput();\n            input.appendTo(listItem).focus();\n            if (defaults.isQuirksMode || defaults.isOldIE) {\n                input.css('height', '26px');\n                input.css('line-height', '26px');\n                input.width(listItem.width() - 20);\n            }\n            var origElt = container.data('columnview').origElt;\n            // bind event handlers.\n            setInputHandlers(input, {\n                type: 'create',\n                originElId: origElt.attr('id')\n            });\n        }\n        // scroll to bottom to reveal input field.\n        columnDiv.scrollTop(columnDiv[0].scrollHeight);\n    }\n\n    /**\n     * The :hover pseudo class isn't supported when operating in quirks mode hence we need a JS substitute.\n     */\n    function setHoverEvents(container, onEnter, onLeave) {\n        if (!defaults.blockEditing && defaults.isQuirksMode) {\n            container.mouseenter(onEnter).mouseleave(onLeave);\n        }\n    }\n\n    function mouseenterActiveItem(event) {\n        var target = $j(event.currentTarget);\n        if (target.is('.colview-active')) {\n            target.find('.arrow').css('display', 'none');\n            target.find('.pen-image').css('display', 'block');\n        }\n    }\n\n    function mouseleaveActiveItem(event) {\n        var target = $j(event.currentTarget);\n        if (target.is('.colview-active')) {\n            target.find('.pen-image').removeAttr('style');\n            target.find('.arrow').removeAttr('style');\n        }\n    }\n\n\n    /**\n     * Generate deeper level item columns and items.\n     */\n    function addSubmenu($container, node) {\n        var data = $container.data(\"columnview\");\n        var settings  = data.settings;\n        var sysId = node.data('id');\n        var item = findItemById(settings.jsonData, sysId);\n        var submenu = buildList(item.items, $container);\n\n        if (defaults.isQuirksMode) {\n            submenu.css({'top': 0, 'width': '150px'});\n            submenu.children('.label').css({\n                'text-overflow': 'ellipsis',\n                '-o-text-overflow': 'ellipsis',\n                '-ms-text-overflow': 'ellipsis'\n            });\n        }\n\n        // Trigger item selection callback.\n        data.origElt.trigger(\"columnview_select\", {\n            'id': sysId,\n            'value': node.data('label')\n        });\n    }\n\n    /**\n     * IE in Quirks Mode only.\n     * Adds an arrow next to the anchor tag if it has child items.\n     * @param elem element\n     */\n    function addArrow(elem) {\n        // IE7 needs old school html since it doesn't support modern CSS selectors.\n        // IE8 is just as bad because our platform is forcing it to use Quirks mode.\n        // IE9 doesn't support setting text-decoration on :after and :before\n        // Setting glide.ui.doctype to false disables support for font icons in Chrome and require images to be used instead.\n        if (defaults.isQuirksMode) {\n            var arrow = $j(\"<span></span>\").addClass('arrow');\n            if (defaults.isRtl) {\n                arrow.html(\"◄\");\n                arrow.prependTo(elem);\n            } else {\n                arrow.html(\"►\");\n                arrow.appendTo(elem);\n            }\n        } else {\n            // Modern browsers, IE10 and up, and glide.ui.doctype=true support more CSS pseudo classes which makes it way simpler.\n            elem.addClass(\"arrow\");\n        }\n    }\n\n    /**\n     * IE in Quirks Mode only.\n     * @param elem element\n     */\n    function addEditImg(elem) {\n        if (!defaults.blockEditing && defaults.isQuirksMode) {\n            var edit = $j(\"<span></span>\").addClass('pen-image').html('&nbsp;');\n            if (defaults.isRtl) {\n                edit.prependTo(elem);\n            } else {\n                edit.appendTo(elem);\n            }\n        }\n    }\n\n    function getIconContent(iconName) {\n        var iconContent = '';\n        if (!defaults.isQuirksMode && window.getComputedStyle) {\n            var elem = $j('span.' + iconName)[0];\n            iconContent = getComputedStyle(elem, ':before').getPropertyValue('content');\n            iconContent = iconContent.replace(/\"/g, ''); // strip the double quotes included by some browsers in the content.\n        }\n        return iconContent;\n    }\n\n    function addCSS(settings) {\n        // As the hex values of the Heisenberg icons keep changing it's impossible to reliably set the \"content\" CSS\n        // attribute of the :hover:after pseudo class in the stylesheet in order to display a full star instead of an\n        // empty one when hovering over with the mouse.\n        var penIconContent = getIconContent('icon-edit');\n        var arrowLeftIconContent = getIconContent('icon-chevron-left');\n        var arrowRightIconContent = getIconContent('icon-chevron-right');\n\n        // Add stylesheet, but only once\n        if (!$j('.colview-container').get(0)) {\n            $j('head').prepend('\\\n    <style type=\"text/css\" media=\"screen\">\\\n\tHTML .-polaris .drag_section_picker {\\\n        border: 1px solid RGB(var(--now-color_border--tertiary, var(--now-color--neutral-3, 211, 214, 220)));\\\n    }\\\n    HTML .drag_section_picker {\\\n        padding: 14px;\\\n        border: 1px solid rgb(213, 213, 213);\\\n        border-radius: 3px;\\\n        -webkit-box-shadow: 0 2px 40px 0 rgba(0, 0, 0, 0.4);\\\n        -moz-box-shadow: 0 2px 40px 0 rgba(0, 0, 0, 0.4);\\\n        box-shadow: 0 2px 40px 0 rgba(0, 0, 0, 0.4);\\\n    }\\\n    .drag_section_picker > tbody > tr:nth-child(1) > td:first-child {\\\n        padding: 0 6px;\\\n    }\\\n    .drag_section_header {\\\n        margin-bottom: 10px;\\\n        font-size: 16px;\\\n        font-family: Arial;\\\n    }\\\n    .ltr #dialog_buttons {\\\n        text-align: right;\\\n    }\\\n    .colview-container .list-item.arrow:after,\\\n    .colview-container .list-item.arrow:before {\\\n        text-decoration: none;\\\n        position: absolute;\\\n        margin-top: 5px;\\\n    }\\\n    .colview-container .list-item.arrow:after {\\\n        font-family: \"retina_icons\",\"now-icons\";\\\n        content: \"' + arrowRightIconContent + '\";\\\n        right: 5px;\\\n    }\\\n    span.arrow {\\\n        position: absolute;\\\n        margin-top: 5px;\\\n    }\\\n    .ltr span.arrow {\\\n        right: 0px;\\\n    }\\\n    .pen-image {\\\n        display: none;\\\n        position: absolute;\\\n        background: url(images/list_edit.pngx) no-repeat;\\\n        margin-top: 5px;\\\n        width: 13px;\\\n    }\\\n    .ltr span.pen-image {\\\n        right: 0px;\\\n    }\\\n    .-polaris .colview-container {\\\n        border: 1px solid RGB(var(--now-color_border--tertiary, var(--now-color--neutral-3, 211, 214, 220)));\\\n    }\\\n\t.colview-container {\\\n        box-sizing: border-box;\\\n        border: 1px solid #ccc;\\\n        border-radius: 3px;\\\n        overflow-x: ' + (defaults.isIE ? 'scroll' : 'visible') + ';\\\n        overflow-y: hidden;\\\n        white-space: nowrap;\\\n        position: relative;\\\n        margin-bottom: 20px;\\\n        width: 100%;\\\n        cursor: default;\\\n    }\\\n\t.-polaris .colview-container .column {\\\n        border-right: 1px solid RGB(var(--now-color_border--tertiary, var(--now-color--neutral-3, 211, 214, 220)));\\\n    }\\\n    .colview-container .column {\\\n        position: relative;\\\n        display: inline-block;\\\n        height: 100%;\\\n        overflow-y: ' + (defaults.isOldIE ? 'scroll' : 'auto') + ';\\\n        overflow-x: hidden;\\\n        border-right: 1px solid rgb(204, 204, 204);\\\n        vertical-align: top;\\\n        min-width: 150px;\\\n    }\\\n    .msie7 .colview-container .column, \\\n    .msie8 .colview-container .column {\\\n        position: relative;\\\n        display: inline;\\\n        width: 150px;\\\n    }\\\n    .colview-container .feature,\\\n    .rtl .colview-container .feature {\\\n        border: 0 none;\\\n    }\\\n\t.-polaris .colview-container .list-item .label {\\\n        color: RGB(var(--now-color_text--tertiary, var(--now-color--neutral-19, 14, 17, 22)));\\\n    }\\\n    .colview-container .list-item .label {\\\n        display: inline-block;\\\n        margin: 5px 15px 5px 5px;\\\n        color: #485563;\\\n        font-weight: normal;\\\n        font-size: 1em;\\\n    }\\\n    .-polaris .colview-container .list-item.colview-active span.label {\\\n        color: RGB(var(--now-color_text--primary-actionable, 255, 255, 255));\\\n    }\\\n    .colview-container .list-item.colview-active span.label {\\\n        color: #fff;\\\n    }\\\n    .colview-container .list-item {\\\n        position: relative;\\\n        display: block;\\\n        width: 100%;\\\n        text-decoration: none;\\\n        white-space: nowrap;\\\n        clear: both;\\\n        padding-right: 15px;\\\n        ' + (defaults.isOldIE ? '' : 'overflow: hidden;') + '\\\n    }\\\n    .-polaris .colview-container .list-item:hover {\\\n        background-color: RGB(var(--now-color--secondary-0, 209, 210, 238));\\\n    }\\\n\t.colview-container .list-item:hover {\\\n        background-color: #F0F0F0;\\\n    }\\\n    .colview-container .list-item:focus:hover {\\\n        outline: none;\\\n    }\\\n    .-polaris .colview-container .list-item:focus.colview-active,\\\n    .-polaris .colview-container .list-item.colview-active,\\\n    .-polaris .colview-container .list-item:hover.colview-active {\\\n        background-color: RGB(var(--now-color--secondary-1, 79, 82, 189));\\\n        color: RGB(var(--now-color_text--primary-actionable, 255, 255, 255));\\\n    }\\\n\t.colview-container .list-item:focus.colview-active,\\\n    .colview-container .list-item.colview-active,\\\n    .colview-container .list-item:hover.colview-active {\\\n        background-color: #3671cf;\\\n        color: #fff;\\\n    }\\\n    .-polaris .colview-container .inpath {\\\n        background-color: RGB(var(--now-color--primary-0, 209, 210, 238));\\\n        color: RGB(var(--now-color_text--primary, var(--now-color--neutral-18, 21, 25, 32)));\\\n    }\\\n\t.colview-container .inpath {\\\n        background-color: #d0d0d0;\\\n        color: #000;\\\n    }\\\n    HTML .-polaris .colview-container .list-item .labelInput, HTML .-polaris .colview-container .list-item .labelInput:focus {\\\n        background-color: RGB(var(--now-color--secondary-1, 79, 82, 189));\\\n        color: RGB(var(--now-color_text--primary-actionable, 255, 255, 255));\\\n    }\\\n    HTML .colview-container .list-item .labelInput, HTML .colview-container .list-item .labelInput:focus {\\\n        background-color: #3671cf;\\\n        color: #fff;\\\n        border: 0 none;\\\n        outline: none;\\\n        box-shadow: none;\\\n        box-sizing: border-box;\\\n        height: 29px;\\\n        padding: 0 5px;\\\n    }\\\n    .colview-container .column .list-item-spacer {\\\n        display: block;\\\n        position: relative;\\\n        box-sizing: border-box;\\\n        height: 25px;\\\n        width: 1px;\\\n        margin: 0px;\\\n        padding: 0px;\\\n        border: 0 none;\\\n    }\\\n\t .-polaris .colview-container .column .btn-add-cat {\\\n        background-color: RGB(var(--now-color_background--secondary, var(--now-color--neutral-1, 246, 246, 248)));\\\n        color: RGB(var(--now-color_text--primary, 21, 25, 32));\\\n    }\\\n    .colview-container .column .btn-add-cat {\\\n        display: block;\\\n        position: absolute;\\\n        box-sizing: border-box;\\\n        bottom: 0px;\\\n        height: auto;\\\n        width: 100%;\\\n        border: 0 none;\\\n        text-align: center;\\\n        background-color: rgb(211, 211, 211);\\\n        cursor: pointer;\\\n        margin: 0px;\\\n        padding: 2px 0;\\\n    }\\\n    .allow-edit .pen-icon .arrow,\\\n    .colview-container input::-ms-clear {\\\n        display: none;\\\n    }\\\n    .allow-edit .column .colview-active:hover:after,\\\n    .allow-edit .column .colview-active.arrow.pen-icon:after {\\\n        right: 5px;\\\n    }\\\n    .allow-edit .column .colview-active:after,\\\n    .allow-edit .column .colview-active.arrow.pen-icon:after,\\\n    .rtl .allow-edit .column .colview-active:hover:before,\\\n    .rtl .allow-edit .column .colview-active.arrow.pen-icon:before {\\\n        position: absolute;\\\n        text-decoration: none;\\\n        font-family: \"retina_icons\",\"now-icons\";\\\n        speak: none;\\\n        font-style: normal;\\\n        font-weight: normal;\\\n        font-variant: normal;\\\n        text-transform: none;\\\n        line-height: 1;\\\n        -webkit-font-smoothing: antialiased;\\\n        -moz-osx-font-smoothing: grayscale;\\\n        margin-top: 8px;\\\n        content: \"' + penIconContent + '\";\\\n\t\tright: 5px;\\\n    }\\\n    .rtl .allow-edit .column .colview-active:hover:after,\\\n    .rtl .allow-edit .column .colview-active.arrow.pen-icon:after {\\\n        right: auto;\\\n        left: 5px;\\\n    }\\\n    .rtl .allow-edit .column .colview-active:hover:before,\\\n    .rtl .allow-edit .column .colview-active.arrow.pen-icon:before {\\\n        content: \"\";\\\n    }\\\n    .rtl div.list-item.arrow:after {\\\n        content: \"\";\\\n        right: auto;\\\n    }\\\n    .rtl div.list-item.arrow:before {\\\n        font-family: \"retina_icons\",\"now-icons\";\\\n        content: \"' + arrowLeftIconContent + '\";\\\n        left: 5px;\\\n     }\\\n    .rtl span.arrow {\\\n        left: 0px;\\\n    }\\\n    .rtl span.pen-image {\\\n        left: 0px;\\\n    }\\\n    .rtl .colview-container .list-item {\\\n        padding-right: 0;\\\n        ' + (defaults.isOldIE ? '' : 'padding-left: 15px;') + '\\\n    }\\\n\t.-polaris .rtl .colview-container .column {\\\n        border: 0 none;\\\n        ' + (defaults.isOldIE ? '' : 'border-left: 1px solid RGB(var(--now-color_border--tertiary, var(--now-color--neutral-3, 211, 214, 220)));') + '\\\n    }\\\n    .rtl .colview-container .column {\\\n        border: 0 none;\\\n        ' + (defaults.isOldIE ? '' : 'border-left: 1px solid rgb(204, 204, 204);') + '\\\n    }\\\n    .rtl .colview-container .list-item .label {\\\n        margin-left: 0px;\\\n        margin-right: 5px;\\\n    }\\\n    </style>');\n        }\n    }\n\n})(jQuery);","sys_class_name":"sys_ui_script","sys_id":"906bad13d731210013ab49547e61039c","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/2fe727ff04b12210559073c06a02f7dd","value":"2fe727ff04b12210559073c06a02f7dd"},"ui_type":"0","sys_update_name":"sys_ui_script_906bad13d731210013ab49547e61039c","sys_updated_by":"admin","sys_created_on":"2014-07-14 11:06:34","name":"jquery_columnview","sys_name":"jquery_columnview","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":"read"},{"ignore_in_now_experience":"false","sys_mod_count":"7","active":"true","description":"Proxy for \"g_user\" (GlideUser) API for server-side execution of client scripts ","use_scoped_format":"false","global":"false","sys_updated_on":"2024-05-30 05:05:02","sys_tags":"","script_name":"GlideUser Proxy","script":"// Original \"GlideUser\" source: \n// https://code.devsnc.com/dev/glide/blob/76f9f1a72028261edffb426cfabe433d49715fb4/glide/ui.html/scripts/classes/GlideUser.js\n// Reference Portal Impl: https://code.devsnc.com/dev/glide/blob/b887fb68903baa35881bf59bf85613563149b035/glide-ng/src/main/plugins/com.glide.ui.ng/ui.html/scripts/sn/common/clientScript/glideUser.js\n\nvar GlideUserProxy = Class.create();\nGlideUserProxy.prototype = {\n    initialize: function(userName, firstName, lastName, nonDefaultRoles, userID, userEmail, userAvatar, userTitle) {\n        this.userName = userName;\n        this.firstName = firstName;\n        this.lastName = lastName;\n        this.setFullName(this.firstName + \" \" + this.lastName);\n        this.setRoles(nonDefaultRoles);\n        this.userID = userID;\n\t\tthis.title = userTitle;\n\t\tthis.email = userEmail;\n\t\tthis.avatar = userAvatar;\n    },\n\n    hasRoleExactly: function(role, includeDefaults) {\n        if (!role || typeof role != 'string')\n            return false;\n\n        var rolesToCheck = this.roles;\n        if (includeDefaults)\n            rolesToCheck = this.allRoles;\n\n        for (var x = 0, l = rolesToCheck.length; x < l; x++) {\n            if (rolesToCheck[x].toLowerCase() == role.toLowerCase())\n                return true;\n        }\n        return false;\n    },\n\n    hasRoles: function(includeDefaults) {\n        if (includeDefaults)\n            return (this.allRoles.length > 0);\n        else\n            return (this.roles.length > 0);\n    },\n\n    hasRole: function(role, includeDefaults) {\n        // if we're maint we win\n        if (this.hasRoleExactly('maint', includeDefaults))\n            return true;\n        // if we've got it we've got it\n        if (this.hasRoleExactly(role, includeDefaults))\n            return true;\n        // if we don't have maint, we aren't maint\n        if (role == 'maint')\n            return false;\n        // if we've got admin, we are all roles (except maint)\n        if (this.hasRoleExactly('admin', includeDefaults))\n            return true;\n        return false;\n    },\n\n    hasRoleFromList: function(roles, includeDefaults) {\n        var rolesToMatch = new Array();\n\n        if (roles)\n            rolesToMatch = roles.split(/\\s*,\\s*/);\n\n        // if the roles is empty, return true\n        if (rolesToMatch.length == 0)\n            return true;\n\n        for (var i = 0; i < rolesToMatch.length; i++) {\n            var r = rolesToMatch[i];\n            if (r && this.hasRole(r, includeDefaults))\n                return true;\n        }\n\n        return false;\n    },\n\n    getFullName: function() {\n        return this.fullName;\n    },\n\n    setFullName: function(fn) {\n        this.fullName = fn;\n    },\n\n    getUserName: function() {\n        return this.userName;\n    },\n\n    getUserID: function() {\n        return this.userID;\n    },\n\n    getRoles: function(includeDefaults) {\n        if (includeDefaults)\n            return this.allRoles;\n\n        return this.roles;\n    },\n\n    setRoles: function(r, includeDefaults) {\n        if (includeDefaults) {\n            if (r)\n                this.allRoles = r.split(/\\s*,\\s*/);\n            else\n                this.allRoles = new Array();\n        } else {\n            if (r)\n                this.roles = r.split(/\\s*,\\s*/);\n            else\n                this.roles = new Array();\n        }\n    },\n\n    getClientData: function(n) {\n        return gs.getSession().getClientData(n);\n    },\n\n    setClientData: function(n, v) {\n        return gs.getSession().putClientData(n, v);\n    },\n\n    type: \"GlideUserProxy\"\n};\n\nvar user = gs.getUser();\nvar gUser = new GlideUserProxy(\n    user.getName(),\n    user.getFirstName(),\n    user.getLastName(),\n    user_roles,\n    user.getID(),\n    user_email,\n\tuser_avatar,\n\tuser_title\n);\ngUser.setRoles(user_allRoles, true);\n\nvar g_user = gUser;\n\n// TBD - set \"g_user\" in the global context\n// _globalContext_['g_user'] = gUser;\ncsGlobals['g_user'] = gUser;","sys_class_name":"sys_ui_script","sys_id":"91b3288443040210d0526bdbd4b8f2e7","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/4c8e6ff304752210559073c06a02f7c4","value":"4c8e6ff304752210559073c06a02f7c4"},"ui_type":"10","sys_update_name":"sys_ui_script_91b3288443040210d0526bdbd4b8f2e7","sys_updated_by":"admin","sys_created_on":"2024-01-25 08:11:27","name":"global.GlideUser Proxy","sys_name":"global.GlideUser Proxy","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"30","active":"true","description":"Directive snFloatBox.","use_scoped_format":"false","global":"false","sys_updated_on":"2019-04-18 17:25:58","sys_tags":"","script_name":"vmisc.snFloatBox","script":"(function ($) {\n\t'use strict';\n\tvar ESC = 27, F6 = 117, TAB = 9;\n\n\tangular.module('sn.itsm.vcab.misc').directive('snFloatBox', function (getTemplateUrl, $timeout, isAccessibilityEnabled, getAllFocussableElements, $window) {\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\ttransclude: true,\n\t\t\tscope: {\n\t\t\t\tshow: '=',\n\t\t\t\ttitle: '@?',\n\t\t\t\twidth: '@?',\n\t\t\t\tcount: '@?',\n\t\t\t\tonFocusOutside: '&'\n\t\t\t},\n\t\t\ttemplateUrl: getTemplateUrl('vcab_sn_float_box.xml'),\n\t\t\tcontroller: function ($scope) {\n\t\t\t\tthis.close = function close(event) {\n\t\t\t\t\tif ($window.NOW.CAB.lastActiveElement)\n\t\t\t\t\t\t$window.NOW.CAB.lastActiveElement.focus();\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t$scope.show = false;\n\t\t\t\t};\n\t\t\t\t$scope.close = this.close;\n\n\t\t\t\tthis.open = function open() {\n\t\t\t\t\t$scope.show = true;\n\t\t\t\t};\n\t\t\t},\n\t\t\tlink: function ($scope, el, attrs, Ctrl) {\n\t\t\t\tvar dom = $('.sn-float-box', el).detach().appendTo('body');\n\t\t\t\tvar headerDom = $('.modal-header', dom);\n\t\t\t\tif ($scope.width)\n\t\t\t\t\tdom.css('width', $scope.width);\n\t\t\t\tdom.css({\n\t\t\t\t\tright: '20px',\n\t\t\t\t\ttop: el.offset().top + 10 + 'px'\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t$scope.isAccessibilityEnabled = isAccessibilityEnabled();\n\n\t\t\tvar left = 0,\n\t\t\t\ttop = 0,\n\t\t\t\tprevX = 0,\n\t\t\t\tprevY = 0,\n\t\t\t\tdeltaX = 0,\n\t\t\t\tdeltaY = 0;\n\t\t\tvar winWidth = $(document).outerWidth();\n\t\t\tvar winHeight = $(document).outerHeight();\n\t\t\tvar elWidth = dom.outerWidth();\n\t\t\tvar elHeight = dom.outerHeight();\n\n\t\t\tfunction onMouseDown(event) {\n\t\t\t\t// remove the text selected . otherwise mouse drags the text instead of float box.\n\t\t\t\t// we are not clearing the text automatically. when user clicks the header part, we are clearing the selected text.\n\t\t\t\tif (document.selection)\n\t\t\t\t\tdocument.selection.empty();\n\t\t\t\telse if (window.getSelection)\n\t\t\t\t\twindow.getSelection().removeAllRanges();\n\t\t\t\tdeltaX = 0;\n\t\t\t\tdeltaY = 0;\n\t\t\t\tprevX = event.pageX;\n\t\t\t\tprevY = event.pageY;\n\t\t\t\tvar offset = dom.offset();\n\t\t\t\tleft = offset.left;\n\t\t\t\ttop = offset.top;\n\t\t\t\twinWidth = $(window).outerWidth();\n\t\t\t\twinHeight = $(window).outerHeight();\n\t\t\t\telWidth = dom.outerWidth();\n\t\t\t\telHeight = dom.outerHeight();\n\t\t\t\t$(document).on('mousemove', onMouseMove);\n\t\t\t\t$(document).on('mouseleave mouseout mouseup dragstart', onMouseLost);\n\t\t\t}\n\n\t\t\tfunction onMouseMove(event) {\n\t\t\t\t/*\n\t\t\t\t moves the float box across the window\n\t\t\t\t restrict the window to offset left,right,bottom not for top.\n\t\t\t\t so that it will not go out of window and user has the ability to drag back into view.\n\t\t\t\t */\n\t\t\t\tvar offset = 40;\n\t\t\t\tdeltaX += (event.pageX - prevX);\n\t\t\t\tdeltaY += (event.pageY - prevY);\n\t\t\t\tprevX = event.pageX;\n\t\t\t\tprevY = event.pageY;\n\t\t\t\t// Box can go up to -boxWidth + offset of window\n\t\t\t\tvar finalX = Math.max(-elWidth + offset, left + deltaX);\n\t\t\t\t// Box can go up to top 0th position of window\n\t\t\t\tvar finalY = Math.max(0, top + deltaY);\n\t\t\t\t// Box can go it's right up to current windowWidth - offset .\n\t\t\t\tvar finalX = Math.min(winWidth - offset, finalX);\n\t\t\t\t// Box can go it's bottom up to current windowHeight - offset.\n\t\t\t\tvar finalY = Math.min(winHeight - offset, finalY);\n\t\t\t\tdom.css({\n\t\t\t\t\tleft: (finalX + 'px'),\n\t\t\t\t\ttop: (finalY + 'px')\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction onMouseLost(event) {\n\t\t\t\tif (event.type == 'mouseout') {\n\t\t\t\t\tvar from = event.relatedTarget || event.toElement;\n\t\t\t\t\t// mouseout will be triggered by every element . so we are checking only HTML element.\n\t\t\t\t\tvar isMouseOutOfWindow = !from || from.nodeName == 'HTML';\n\t\t\t\t\tif (!isMouseOutOfWindow)\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t$(document).off('mousemove', onMouseMove);\n\t\t\t\t$(document).off('mouseleave mouseout mouseup dragstart', onMouseLost);\n\t\t\t}\n\n\t\t\t$scope.startMove = function (event) {\n\t\t\t\t\tonMouseDown(event);\n\t\t\t};\n\n\t\t\t$scope.onDialogKeyDown = function ($event) {\n\t\t\t\tif ($event.keyCode == ESC) {\n\t\t\t\t\tCtrl.close($event);\n\t\t\t\t\t$scope.onFocusOutside();\n\t\t\t\t\t$event.stopPropagation();\n\t\t\t\t} else if ($event.keyCode == F6) {\n\t\t\t\t\t$scope.onFocusOutside();\n\t\t\t\t\t$event.stopPropagation();\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t\t$('body').on('keydown.snFloatBox' + $scope.$$id, function (event) {\n\t\t\t\tif ($scope.show) {\n\t\t\t\t\tif (event.keyCode == F6) {\n\t\t\t\t\t\tdom.focus();\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tvar all = getAllFocussableElements(dom);\n\t\t\tvar firstDom = all.first(), lastDom = all.last();\n\t\t\tall = undefined;\n\t\t\tfirstDom.on('keydown.snFloatBox', function (event) {\n\t\t\t\tif (event.keyCode == TAB && event.shiftKey) {\n\t\t\t\t\tlastDom.focus();\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t});\n\t\t\t// Widgets which are displayed within the floatbox\n\t\t\t// must ensure to provide a static last focussable dom.\n\t\t\tlastDom.on('keydown.snFloatBox', function (event) {\n\t\t\t\tif (event.keyCode == TAB && !event.shiftKey) {\n\t\t\t\t\tfirstDom.focus();\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$scope.$on('$destroy', function () {\n\t\t\t\t\t$('body').off('.snFloatBox' + $scope.$$id);\n\t\t\t\t\tdom.remove();\n\t\t\t});\n\n\t\t\t}\n\t\t};\n\t});\n} (jQuery));","sys_class_name":"sys_ui_script","sys_id":"91b92f77d796220034d145bcce6103db","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"ui_type":"0","sys_update_name":"sys_ui_script_91b92f77d796220034d145bcce6103db","sys_updated_by":"christen.mitchell","sys_created_on":"2016-10-13 14:53:01","name":"sn_change_cab.vmisc.snFloatBox","sys_name":"sn_change_cab.vmisc.snFloatBox","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"41","active":"true","description":"Download log from node UI functions","use_scoped_format":"false","global":"false","sys_updated_on":"2023-05-01 20:16:25","sys_tags":"","script_name":"","script":"function setDownloadButton(e) {\n\tvar downloadButton = gel(\"downloadButton\");\n\tvar selectedSysIdsElement = gel(\"selected_sys_ids\");\n\tvar selectedSysIds = [];\n\tvar selectedString = selectedSysIdsElement.value;\n\tif (selectedString)\n\t\tselectedSysIds = selectedString.split(\";\");\n\n\tvar thisId = e.name;\n\tif (e.checked) {\n\t\tdownloadButton.removeAttribute('disabled');\n\t\tselectedSysIds.push(thisId);\n\t} else {\n\t\tvar index = selectedSysIds.indexOf(thisId);\n\t\tselectedSysIds.splice(index, 1);\n\n\t\tvar inputs = document.getElementsByTagName(\"input\");\n\t\tvar nonechecked = true;\n\t\tvar i = 0;\n\t\twhile (i < inputs.length && nonechecked) {\n\t\t\tif (inputs[i].type === \"checkbox\" && inputs[i].checked)\n\t\t\t\tnonechecked = false;\n\n\t\t\ti++;\n\t\t}\n\t\tif (nonechecked)\n\t\t\tdownloadButton.setAttribute('disabled', 'true');\n\n\t}\n\tselectedSysIds = selectedSysIds.join(\";\");\n\tselectedSysIdsElement.value = selectedSysIds;\n}\n\nfunction selectAll(master) {\n\tvar downloadButton = gel(\"downloadButton\");\n\tvar checkboxes = document.getElementsByClassName(\"systemID\");\n\tvar selectedSysIdsElement = gel(\"selected_sys_ids\");\n\tvar selectedArray = [];\n\tfor (var i = 0; i < checkboxes.length; i++) {\n\t\tdocument.getElementById(checkboxes[i].id).checked = master.checked;\n\t\tselectedArray.push(checkboxes[i].value);\n\t}\n\tif (master.checked) {\n\t\tselectedSysIdsElement.value=selectedArray.join(';');\n\t\tdownloadButton.removeAttribute('disabled');\n\t} else {\n\t\tselectedSysIdsElement.value=\"\";\n\t\tdownloadButton.setAttribute('disabled', 'true');\n\t}\n}\n\nfunction selectDateRange() {\n\tvar dateRangeTab = gel(\"dateRangeTab\");\n\tdateRangeTab.setAttribute('class', 'active');\n\tvar oneDayTab = gel(\"oneDayTab\");\n\toneDayTab.setAttribute('class', 'deactive');\n\tvar dateRangeTable = gel(\"dateRangeTable\");\n\tdateRangeTable.setAttribute('class', 'show');\n\tvar oneDayTable = gel(\"oneDayTable\");\n\toneDayTable.setAttribute('class', 'hidden');\n}\n\nfunction selectOneDay() {\n\tvar dateRangeTab = gel(\"dateRangeTab\");\n\tdateRangeTab.setAttribute('class', 'deactive');\n\tvar oneDayTab = gel(\"oneDayTab\");\n\toneDayTab.setAttribute('class', 'active');\n\tvar dateRangeTable = gel(\"dateRangeTable\");\n\tdateRangeTable.setAttribute('class', 'hidden');\n\tvar oneDayTable = gel(\"oneDayTable\");\n\toneDayTable.setAttribute('class', 'show');\n}\n\nfunction checkStartDate() {\n\t_checkDates('startDate');\n}\n\nfunction checkEndDate() {\n\t_checkDates('endDate');\n}\n\nfunction _checkDates(dateField) {\n\tif (!dateField || !['startDate', 'endDate'].includes(dateField)) {\n\t\tconsole.error('Invalid _checkDates argument dateField: ' + dateField);\n\t\treturn;\n\t}\n\n\tvar noLaterThanToday = 'Please select a date no later than today';\n\tvar currentDate = new Date();\n\tvar datesInSystemFormat = convertDatesToSystemFormat(gel('startDate').value, gel('endDate').value);\n\tvar startDate = new Date(datesInSystemFormat[0] + 'T00:00');\n\tvar endDate = new Date(datesInSystemFormat[1] + 'T00:00');\n\tvar dateRange = gel('date_range').value;\n\n\tif (dateField == 'startDate') {\n\t\tif (endDate < startDate)\n\t\t\tgel('endDate').value = gel('startDate').value;\n\n\t\tif (currentDate < startDate) {\n\t\t\talert(new GwtMessage().getMessage(noLaterThanToday));\n\t\t\tgel('startDate').value = new Date().toJSON().slice(0,10);\n\t\t\tgel('endDate').value = new Date().toJSON().slice(0,10);\n\t\t}\n\t} else {\n\t\tif (endDate < startDate) {\n\t\t\talert(new GwtMessage().getMessage(\"Please select a date after start date\"));\n\t\t\tgel('endDate').value = gel('startDate').value;\n\t\t}\n\n\t\tif (currentDate < endDate) {\n\t\t\talert(new GwtMessage().getMessage(noLaterThanToday));\n\t\t\tgel('endDate').value = gel('startDate').value;\n\t\t}\n\t}\n\n\tif (OutOfDateRange(endDate, startDate, dateRange)) {\n\t\talert(new GwtMessage().getMessage(\"Please select a date within {0} days\", dateRange));\n\t\tgel('endDate').value = gel('startDate').value;\n\t}\n\n\tgel('date').value=gel(dateField).value;\n}\n\nfunction checkDate() {\n\tvar currentDate = new Date();\n\tvar dateInSystemFormat = convertDatesToSystemFormat(gel('date').value);\n\tvar date = new Date(dateInSystemFormat[0]);\n\tvar singleDate = gel('single_date').value;\n\tif (OutOfDateRange(currentDate, date, singleDate)) {\n\t\talert(new GwtMessage().getMessage(\"Please select a date within {0} days\", singleDate));\n\t\tgel('date').value = new Date().toJSON().slice(0,10);\n\t}\n\tif (currentDate < date) {\n\t\talert(new GwtMessage().getMessage(\"Please select a date no later than today\"));\n\t\tgel('date').value = new Date().toJSON().slice(0,10);\n\t}\n\tgel('startDate').value=gel('date').value;\n\tgel('endDate').value=gel('date').value;\n}\n\n//check whether the select date is within the date range that defined in GlideProperty\nfunction OutOfDateRange(currentDate, date, dateRange) {\n\treturn currentDate - date > (dateRange * 24 * 60 * 60 * 1000);\n}\n\nfunction scheduleCreation() {\n\tvar select = getNotification();\n\tif (select === 'email') {\n\t\tvar email = gel('emailAddress').value;\n\t\tif (!email) {\n\t\t\talert(new GwtMessage().getMessage(\"Please specify an email address\"));\n\t\t\treturn false;\n\t\t}\n\t} else\n\t\tgel('emailAddress').value = '';\n\n\tif (downloadingInProcess())\n\t\talert(new GwtMessage().getMessage(\"Another similar download is already in progress, please try later.\"));\n\telse\n\t\tschedule();\n\n\treturn false;\n}\n\nfunction getNotification() {\n\tvar notification = document.getElementsByName('notify');\n\tfor (var i=0; i < notification.length; i++)\n\t\tif (notification[i].checked)\n\t\t\treturn notification[i].value;\n\n}\n\nfunction downloadingInProcess() {\n\tvar gr = new GlideRecord('sys_execution_tracker');\n\tgr.addQuery('name', 'Uploading Logs from Selected Nodes');\n\tgr.orderByDesc('sys_created_on');\n\tgr.setLimit(1);\n\tgr.query();\n\tif (!gr.next())\n\t\treturn false;\n\n\treturn gr.getValue('state') === '1';\n}\n\nfunction schedule() {\n\tvar ga = new GlideAjax('ScheduleNodesLogsDownload');\n\tga.addParam('sysparm_name','schedule');\n\tga.addParam('sysparm_selected_sys_ids', getSelectedNode());\n\tga.addParam('sysparm_email', gel('emailAddress').value);\n\tga.addParam('sysparm_protocol', window.location.protocol);\n\tga.addParam('sysparm_host', window.location.host);\n\n\tvar dateRange = getDateRange(gel('startDate').value, gel('endDate').value);\n\tga.addParam('sysparm_date_range', dateRange);\n\n\tif (gel('emailAddress').value === '')\n\t\tga.getXML(redirect);\n\n\telse {\n\t\tga.getXML();\n\t\talert(new GwtMessage().getMessage(formatMessage('An email will be sent to {0} upon completion.', gel('emailAddress').value)));\n\t\tGlideModal.get().destroy();\n\t}\n}\n\nfunction getDateRange(startDate, endDate){\n\tvar datesInSystemFormat = convertDatesToSystemFormat(startDate, endDate);\n\tstartDate = datesInSystemFormat[0];\n\tendDate = datesInSystemFormat[1];\n\tvar dateArray = [];\n\tvar currentDate = startDate;\n\twhile (currentDate <= endDate) {\n\t\tdateArray.push(currentDate);\n\t\tvar oneDayAfter = new Date(new Date(currentDate).getTime() + 24*60*60*1000);\n\t\tcurrentDate = oneDayAfter.toJSON().slice(0,10);\n\t}\n\treturn dateArray.join(';');\n}\n\nfunction convertDatesToSystemFormat(startDate, endDate) {\n\tvar todayDate = new Date().toJSON().slice(0,10);\n\tvar datesArray = [];\n\t// If startDate or endDate is today's date then there is no need to convert them into system's format.\n\tif(startDate == todayDate && endDate == null){\n\t\tdatesArray.push(startDate);\n\t\treturn datesArray;\n\t}\n\telse if (startDate != todayDate && endDate == null){\n\t\tvar res = makeAjaxCallToConvertDates(startDate);\n\t\tdatesArray.push(res.start_date);\n\t\treturn datesArray;\n\t}\n\telse if (startDate == todayDate && endDate == todayDate){\n\t\tdatesArray.push(startDate);\n\t\tdatesArray.push(endDate);\n\t\treturn datesArray;\n\t}\n\telse if (startDate != todayDate && endDate == todayDate){\n\t\tvar res = makeAjaxCallToConvertDates(startDate);\n\t\tdatesArray.push(res.start_date);\n\t\tdatesArray.push(endDate);\n\t\treturn datesArray;\n\t}\n\telse if (startDate != null && endDate != null){\n\t\tvar res = makeAjaxCallToConvertDates(startDate, endDate);\n\t\tdatesArray.push(res.start_date);\n\t\tdatesArray.push(res.end_date);\n\t\treturn datesArray;\n\t}\n}\n\nfunction makeAjaxCallToConvertDates(startDate, endDate){\n\tvar ga = new GlideAjax('DownloadLogFromNodesUtil');\n\tga.addParam('sysparm_name', 'convertDatesToSystemFormat');\n\tga.addParam('sysparm_start_date', startDate);\n\tga.addParam('sysparm_end_date', endDate);\n\tga.getXMLWait();\n\treturn JSON.parse(ga.getAnswer());\n}\n\nfunction redirect(response) {\n\tvar tableSysID = response.responseXML.documentElement.getAttribute(\"answer\");\n\tif (tableSysID === undefined)\n\t\treturn;\n\n\twindow.location.href = window.location.protocol + \"//\" + window.location.host + '/node_log_download_info.do?sys_id=' + tableSysID;\n}","sys_class_name":"sys_ui_script","sys_id":"921dd9f00b3212005a33061437673ac9","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a8d72bbf04b12210559073c06a02f76e","value":"a8d72bbf04b12210559073c06a02f76e"},"ui_type":"0","sys_update_name":"sys_ui_script_921dd9f00b3212005a33061437673ac9","sys_updated_by":"admin","sys_created_on":"2016-04-12 21:15:53","name":"DownloadLogFromNodes","sys_name":"DownloadLogFromNodes","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"40","active":"true","description":"Common utility used to perform Skipped Record Rule engine APIs","use_scoped_format":"false","global":"false","sys_updated_on":"2023-04-17 23:58:40","sys_tags":"","script_name":"","script":"function SkippedRecordRuleEngineUtils() {\n\n // for List view\n    function runSelectedActiveRulesOnLastUpgrade() {\n\t\tvar activeRuleIds = getListOfSelectedActiveRules();\n\t\tvar title = getMessage('Are you sure you want to run rule(s)?');\n\t\tvar param = new GwtMessage().getMessage('RunRules');\n\t\tshowConfirmDialogAndTriggerRule(title, param, activeRuleIds, null, true);\n    }\n\n// for Form view\n   function runRuleOnLastUpgrade(ruleId) {\n\t\tvar title = getMessage('Are you sure you want to run rule?');\n\t\tvar param = new GwtMessage().getMessage('RunNow');\n\t\tshowConfirmDialogAndTriggerRule(title, param, ruleId, null, true);\n    }\n\n// for system upgrade\n     function runActiveRulesOnGivenUpgradeHistoryId(upgradeHistorySysId) {\n\t\tvar title = getMessage('Are you sure you want to run rule(s)?');\n\t\tvar param = new GwtMessage().getMessage('RunRules');\n\t\tshowConfirmDialogAndTriggerRule(title, param, null, upgradeHistorySysId, false);\n    }\n\n    function showConfirmDialogAndTriggerRule(title, param, ruleIds, upgradeHistorySysId, showUpgradeLink) {\n      var gm = new GlideModal('skipped_record_run_rules_confirm_modal');\n\t\tgm.setTitle(title);\n\t\tgm.setPreference('sysparm_message', param);\n\t\tgm.setPreference('sysparm_showlink', showUpgradeLink);\n\n\t\tgm.setWidth(450);\n\t\tgm.on('beforeclose', function() {\n        if ($j('#confirmModalAction').val() == 'execute') {\n                triggerRule(ruleIds, upgradeHistorySysId);\n\t\t\t}\n\t\t});\n\t\tgm.render();\n    }\n\n\n    function triggerRule(ruleIds, upgradeHistorySysId) {\n        var ga = new GlideAjax('SkippedRecordRuleUtil');\n\t\tga.addParam('sysparm_name', 'triggerRules');\n\t\tif(ruleIds != null)\n\t\t\tga.addParam('sysparm_sysIds', ruleIds);\n\n\t\tif(upgradeHistorySysId != null)\n\t\t\tga.addParam('sysparm_upgradeHistorySysId', upgradeHistorySysId);\n\t\tga.getXML(handleTriggerRulesResponse);\n    }\n\n\n\tfunction getListOfSelectedActiveRules() {\n\t\tvar selSysIds = g_list.getChecked();\n\t\tvar sysIdList;\n\t\tif(selSysIds && selSysIds.length > 0) {\n\t\t\tsysIdList = selSysIds.split(',');\n\t\t}\n\t\tvar activeRuleSysIds = [];\n\t\tvar gr = new GlideRecord('sys_upgrade_skipped_record_rule');\n\t\tif(sysIdList && sysIdList.length > 0)\n\t\t\tgr.addQuery('sys_id','IN',sysIdList);\n\t\tgr.addQuery('active', true);\t\n\t\tgr.query();\n\n\t\twhile (gr.next()) {\n\t\t\tactiveRuleSysIds.push(gr.getValue(\"sys_id\"));\n\t\t}\n\t\treturn activeRuleSysIds;\n    }\n\n\tfunction handleTriggerRulesResponse(response) {\n\t\tvar result = JSON.parse(response.responseXML.documentElement.getAttribute('answer'));\n\t\tif (result && result.errorMessage) {\n\t\t\tshowErrorMessage(result.errorMessage);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(result && result.progressId)\n\t\t\trenderProgressViewer(new GwtMessage().getMessage('Rules Execution Progress'), result.progressId);\n\t}\n\n\tfunction showErrorMessage(errorMessage) {\n\t\tvar glideForm = typeof g_form === 'undefined' ? new GlideForm() : g_form; // support for list and form\n\t\tglideForm.addErrorMessage(errorMessage);\n\t}\n\n\n\tfunction renderProgressViewer(title, progressId) {\n\t\tvar dialogClass = window.GlideModal ? GlideModal : GlideDialogWindow;\n\t\tvar modal = new dialogClass('hierarchical_progress_viewer', false, '40em', '10.5em');\n\t\n\t\tmodal.setTitle(title);\n\t\tmodal.setPreference('sysparm_renderer_execution_id', progressId);\n\t\tmodal.setPreference('sysparm_button_close', new GwtMessage().getMessage('Close'));\n\t\tmodal.setPreference('sysparm_renderer_expanded_levels', '0');\n\n\t\tmodal.on('bodyrendered', function() {\n\t\t\tnew UpgradePlanProgressViewerUtil().disableModalCloseButton();\n\t\t});\n\n\t\tmodal.on('executionComplete', function() {\n\t\t\tnew UpgradePlanProgressViewerUtil().updateModalButtons(modal);\n\t\t});\n\t\n\t\tmodal.render();\n\t}\n\n    return {\n        runRuleOnLastUpgrade: runRuleOnLastUpgrade,\n        runActiveRulesOnGivenUpgradeHistoryId: runActiveRulesOnGivenUpgradeHistoryId,\n        runSelectedActiveRulesOnLastUpgrade: runSelectedActiveRulesOnLastUpgrade,\n        type: 'SkippedRecordRuleEngineUtils'\n    };\n}","sys_class_name":"sys_ui_script","sys_id":"93c6eda343112110322fb927eeb8f2bd","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/08646bbb04312210559073c06a02f75c","value":"08646bbb04312210559073c06a02f75c"},"ui_type":"10","sys_update_name":"sys_ui_script_93c6eda343112110322fb927eeb8f2bd","sys_updated_by":"admin","sys_created_on":"2023-03-06 19:58:39","name":"SkippedRecordRuleEngineUtils","sys_name":"SkippedRecordRuleEngineUtils","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":"read"},{"ignore_in_now_experience":"false","sys_mod_count":"15","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2021-04-29 15:19:18","sys_tags":"","script_name":"watcher","script":"angular.module(\"sn.change_management.cab.watcher\", ['ng.amb'])\n.service(\"cabWatcher\",[\"$rootScope\", \"amb\", \"$timeout\", function($rootScope, amb, $timeout) {\n\tvar cabWatcher = this;  //Convenience\n\t\n\tvar ambChannel = null;\n\tvar mId = null;\n\tvar cbFunc = [];\n\t\n\t\n\tfunction subscribeCallback(callbackFunc) {\n\t\tif (callbackFunc && typeof callbackFunc === \"function\")\n\t\t\tcbFunc.push(callbackFunc);\n\t}\n\t\n\tfunction unsubscribeCallback(callbackFunc) {\n\t\tvar funcIdx = cbFunc.indexOf(callbackFunc);\n\t\t\n\t\tif (funcIdx !== -1)\n\t\t\tcbFunc.splice(funcIdx,1);\n\t}\t\n\t\n\tfunction executeCallbacks(response) {\n\t\tcbFunc.forEach(function(callbackFunc) {\n\t\t\tcallbackFunc(response);\n\t\t});\n\t}\n\t\n\tfunction initChannel(meetingSysId) {\n\t\tambChannel = amb.getChannel(\"/cab/\" + meetingSysId);\n\t\tambChannel.subscribe(executeCallbacks);\n\t\tamb.connect();\n\t\t\n\t\tsubscribeCallback(function (message) {\n\t\t\t$rootScope.$broadcast(\"cab.state.change\", message.data);\n\t\t});\n\t\t\n\t\treturn meetingSysId;\n\t}\n\t\n\tfunction clearChannel() {\n\t\tmId = null;\n\t\tambChannel.unsubscribe();\n\t\tambChannel = null;\n\t}\n\t\n\tcabWatcher.watch = function(meetingSysId) {\n\t\tif (!meetingSysId)\n\t\t\treturn null;\n\t\t\n\t\tif (mId !== null && meetingSysId !== mId)\n\t\t\tclearChannel();\n\t\t\n\t\tif (mId === null)\n\t\t\tmId = initChannel(meetingSysId);\n\t\t\n\t\treturn {\n\t\t\t\"subscribe\": subscribeCallback,\n\t\t\t\"unsubscribe\": unsubscribeCallback\n\t\t};\n\t};\n}]);","sys_class_name":"sys_ui_script","sys_id":"9477846c5323201034d1ddeeff7b128c","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"ui_type":"0","sys_update_name":"sys_ui_script_9477846c5323201034d1ddeeff7b128c","sys_updated_by":"admin","sys_created_on":"2021-04-12 16:52:17","name":"sn_change_cab.watcher","sys_name":"sn_change_cab.watcher","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"44","active":"true","description":"UI script conaining utility methods for enabling Web-Authentication support.","use_scoped_format":"false","global":"false","sys_updated_on":"2021-03-11 08:43:03","sys_tags":"","script_name":"","script":"var lookup = [];\nvar revLookup = [];\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nfor (var i = 0, len = code.length; i < len; ++i) {\n    lookup[i] = code[i];\n    revLookup[code.charCodeAt(i)] = i;\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62;\nrevLookup['_'.charCodeAt(0)] = 63;\n\nfunction getLens(b64) {\n    var len = b64.length;\n\n    if (len % 4 > 0) {\n        throw new Error('Invalid string. Length must be a multiple of 4');\n    }\n\n    // Trim off extra bytes after placeholder bytes are found\n    // See: https://github.com/beatgammit/base64-js/issues/42\n    var validLen = b64.indexOf('=');\n    if (validLen === -1)\n        validLen = len;\n\n    var placeHoldersLen = validLen === len ? 0 : 4 - (validLen % 4);\n\n    return [validLen, placeHoldersLen];\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength(b64) {\n    var lens = getLens(b64);\n    var validLen = lens[0];\n    var placeHoldersLen = lens[1];\n    return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen;\n}\n\nfunction _byteLength(b64, validLen, placeHoldersLen) {\n    return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen;\n}\n\nfunction toByteArray(b64) {\n    var tmp;\n    var lens = getLens(b64);\n    var validLen = lens[0];\n    var placeHoldersLen = lens[1];\n\n    var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));\n\n    var curByte = 0;\n\n    // if there are placeholders, only get up to the last complete 4 chars\n    var len = placeHoldersLen > 0 ? validLen - 4 : validLen;\n\n    var i;\n    for (i = 0; i < len; i += 4) {\n        tmp =\n            (revLookup[b64.charCodeAt(i)] << 18) |\n            (revLookup[b64.charCodeAt(i + 1)] << 12) |\n            (revLookup[b64.charCodeAt(i + 2)] << 6) |\n            revLookup[b64.charCodeAt(i + 3)];\n        arr[curByte++] = (tmp >> 16) & 0xFF;\n        arr[curByte++] = (tmp >> 8) & 0xFF;\n        arr[curByte++] = tmp & 0xFF;\n    }\n\n    if (placeHoldersLen === 2) {\n        tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4);\n        arr[curByte++] = tmp & 0xFF;\n    }\n\n    if (placeHoldersLen === 1) {\n        tmp =\n            (revLookup[b64.charCodeAt(i)] << 10) |\n            (revLookup[b64.charCodeAt(i + 1)] << 4) |\n            (revLookup[b64.charCodeAt(i + 2)] >> 2);\n        arr[curByte++] = (tmp >> 8) & 0xFF;\n        arr[curByte++] = tmp & 0xFF;\n    }\n\n    return arr;\n}\n\nfunction tripletToBase64(num) {\n    return lookup[num >> 18 & 0x3F] +\n        lookup[num >> 12 & 0x3F] +\n        lookup[num >> 6 & 0x3F] +\n        lookup[num & 0x3F];\n}\n\nfunction encodeChunk(uint8, start, end) {\n    var tmp;\n    var output = [];\n    for (var i = start; i < end; i += 3) {\n        tmp =\n            ((uint8[i] << 16) & 0xFF0000) +\n            ((uint8[i + 1] << 8) & 0xFF00) +\n            (uint8[i + 2] & 0xFF);\n        output.push(tripletToBase64(tmp));\n    }\n    return output.join('');\n}\n\nfunction fromByteArray(uint8) {\n\n    var tmp;\n    var len = uint8.length;\n    var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n    var parts = [];\n    var maxChunkLength = 16383; // must be multiple of 3\n\n    // go through the array every three bytes, we'll deal with trailing stuff later\n    for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n        parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)));\n    }\n\n    // pad the end with zeros, but make sure to not forget the extra bytes\n    if (extraBytes === 1) {\n        tmp = uint8[len - 1];\n        parts.push(\n            lookup[tmp >> 2] +\n            lookup[(tmp << 4) & 0x3F] +\n            '=='\n        );\n    } else if (extraBytes === 2) {\n        tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n        parts.push(\n            lookup[tmp >> 10] +\n            lookup[(tmp >> 4) & 0x3F] +\n            lookup[(tmp << 2) & 0x3F] +\n            '='\n        );\n    }\n\n    return parts.join('');\n}\n\nfunction decode(code) {\n    code = code.replace(/-/g, '+').replace(/_/g, '/') + '===='.substring(0, (4 - (code.length % 4)) % 4);\n    return toByteArray(code);\n}\n\nfunction encode(code) {\n    code = fromByteArray(ensureUint8Array(code));\n    return code.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '');\n}\n\nfunction ensureUint8Array(arg) {\n    if (arg instanceof ArrayBuffer) {\n        return new Uint8Array(arg);\n    } else {\n        return arg;\n    }\n}\n\nfunction decodeExcludeCredentials(cred) {\n    cred.id = decode(cred.id);\n    delete cred.transports;\n}\n\nfunction registerAutheticator(response) {\n    var options = response.responseXML.documentElement.getAttribute('answer');\n\tvar valid = !!options;\n\t\n\tif(!valid){\n\t\tjslog(\"Error while generating registration request.\");\n\t\tclose();\n\t\treturn false;\n\t}\n\t\n    options = JSON.parse(options);\n    options.user.id = decode(options.user.id);\n    options.challenge = decode(options.challenge.value);\n\n    delete options.user.icon;\n    delete options.rp.icon;\n\n    if (options.excludeCredentials) {\n        options.excludeCredentials.forEach(decodeExcludeCredentials);\n    }\n\n    navigator.credentials.create({\n        publicKey: options\n    }).then(function(response) {\n        var res = {};\n        res.id = response.id;\n        res.rawId = encode(response.rawId);\n        res.type = response.type;\n        res.response = {};\n        res.response.clientDataJSON = encode(response.response.clientDataJSON);\n        res.response.attestationObject = encode(response.response.attestationObject);\n        res.clientExtensionResults = response.getClientExtensionResults();\n\n        if (response.response.getTransports)\n            res.response.transports = JSON.stringify(response.response.getTransports());\n\n        validateRegistrationResponse(res);\n    }).catch(function(error) {\n        alert(error);\n    });\n}\n\nfunction doesClientSupportWebAuthn() {\n    if (!window.PublicKeyCredential) {\n        return false;\n    }\n    return true;\n}\n\nfunction authenticate(response) {\n    var options = response.responseXML.documentElement.getAttribute('answer');\n    options = JSON.parse(options);\n    options.challenge = decode(options.challenge.value);\n    options.allowCredentials.forEach(function(item, index) {\n        item.id = decode(item.id);\n        delete item.transports;\n    });\n\n    delete options.extensions;\n\n    navigator.credentials.get({\n        publicKey: options\n    }).then(function(response) {\n        var res = {};\n        res.id = response.id;\n        res.rawId = encode(response.rawId);\n        res.type = response.type;\n        res.response = {};\n        res.response.clientDataJSON = encode(response.response.clientDataJSON);\n        res.response.authenticatorData = encode(response.response.authenticatorData);\n        res.response.signature = encode(response.response.signature);\n        res.clientExtensionResults = response.getClientExtensionResults();\n        gel('sys_web_authentication_response').value = JSON.stringify(res);\n        validateAuthenticationResponse(res);\n    }).catch(function(error) {\n        jslog(\"Error while authenticating: \" + error);\n    });\n}","sys_class_name":"sys_ui_script","sys_id":"9513e8f373212010fdbd04fbc4f6a739","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/9f152f3304712210559073c06a02f70e","value":"9f152f3304712210559073c06a02f70e"},"ui_type":"10","sys_update_name":"sys_ui_script_9513e8f373212010fdbd04fbc4f6a739","sys_updated_by":"admin","sys_created_on":"2021-01-13 11:06:42","name":"WebAuthnUtil","sys_name":"WebAuthnUtil","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"8","active":"true","description":"Utilities for supporting mobile devices for tasks such as setting the viewport size","use_scoped_format":"false","global":"false","sys_updated_on":"2015-11-19 22:16:56","sys_tags":"","script_name":"","script":"function setViewportForMobile() {\n\tvar CONTENT = 'width=device-width, initial-scale=1.0, minimum-scale=1.0';\n\t\n\tvar viewportElem = $j(\"meta[name='viewport']\");\t\n\tif (viewportElem.length)\n\t\tviewportElem.attr(\"content\", CONTENT);\n\telse\n\t\t$j('head').append('<meta name=\"viewport\" content=\"' + CONTENT + '\">');\n}\n","sys_class_name":"sys_ui_script","sys_id":"988ecec687330200cfab91abe3e3ec17","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/421beb3304352210559073c06a02f7ef","value":"421beb3304352210559073c06a02f7ef"},"ui_type":"","sys_update_name":"sys_ui_script_988ecec687330200cfab91abe3e3ec17","sys_updated_by":"michael.riha","sys_created_on":"2015-11-19 19:03:21","name":"pwd_mobile","sys_name":"pwd_mobile","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"11","active":"true","description":"Module with modal with next available time","use_scoped_format":"false","global":"false","sys_updated_on":"2024-08-21 11:16:25","sys_tags":"","script_name":"next_available_time","script":"angular.module(\"sn.change_request.next_available_time\", [\"ui.bootstrap\"])\n\t.constant(\"NEXT_AVAILABLE_TIME\", {\n\t\t\"URL\": \"/api/now/change_request_calendar/change/nextavailabletime/\",\n\t\t\"SYSPARM_CK\": \"?sysparm_ck=\",\n\t\t\"KEYS\": {\n\t\t\t\"TABKEY\": 9,\n\t\t\t\"ENTER\": 13,\n\t\t\t\"ESCAPE\": 27,\n\t\t\t\"SPACE\": 32,\n\t\t\t\"LEFT\": 37,\n\t\t\t\"UP\": 38,\n\t\t\t\"RIGHT\": 39,\n\t\t\t\"DOWN\": 40\n\t\t},\n\t\t\"VIEW_MODE\": {\n\t\t\t\"DAY\": 0,\n\t\t\t\"MONTH\": 1,\n\t\t\t\"YEAR\": 2\n\t\t},\n\t\t\"FORM\": {\n\t\t\t\"MODAL\": \"chg_next_available_time\"\n\t\t}\n\t})\n\t.config(function($locationProvider) {\n\t\t$locationProvider.html5Mode({\n\t\t\tenabled: true,\n\t\t\trequireBase: false\n\t\t});\n\t})\n\t.service(\"snCalendarNextAvailableTimeService\", function(i18n, $http, $q, $rootScope, NEXT_AVAILABLE_TIME, $window) {\n\t\tvar snCalendarNextAvailableTimeService = this;\n\n\t\tsnCalendarNextAvailableTimeService.getSlots = function(chgId, range) {\n\t\t\tchgId = sanitizeSysId(chgId);\n\t\t\tif (!chgId)\n\t\t\t\treturn null;\n\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar url = NEXT_AVAILABLE_TIME.URL + chgId + NEXT_AVAILABLE_TIME.SYSPARM_CK + $window.g_ck;\n\t\t\t$http.post(url, range).then(function(response) {\n\t\t\t\tdeferred.resolve(response.data.result);\n\t\t\t}, function(response) {\n\t\t\t\tdeferred.reject(response);\n\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\t\tsnCalendarNextAvailableTimeService.submit = function(chgId, data) {\n\t\t\tchgId = sanitizeSysId(chgId);\n\t\t\tif (!chgId)\n\t\t\t\treturn null;\n\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar url = NEXT_AVAILABLE_TIME.URL + chgId + NEXT_AVAILABLE_TIME.SYSPARM_CK + $window.g_ck;\n\t\t\t$http.put(url, data).then(function(response) {\n\t\t\t\tdeferred.resolve(response.data.result);\n\t\t\t}, function(response) {\n\t\t\t\tdeferred.reject(response);\n\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\t\tsnCalendarNextAvailableTimeService.abort = function(promise) {\n\t\t\t$q.resolve(promise);\n\t\t};\n\t\tsnCalendarNextAvailableTimeService.broadcast = function(type, msg) {\n\t\t\t$rootScope.$broadcast(\"sn.cnat.\" + type, msg);\n\t\t};\n\t\tsnCalendarNextAvailableTimeService.translate = function() {\n\t\t\tvar locale = {\n\t\t\t\t\"days\": {\n\t\t\t\t\tprevious: i18n.getMessage(\"Previous month\"),\n\t\t\t\t\tnext: i18n.getMessage(\"Next month\")\n\t\t\t\t},\n\t\t\t\t\"months\": {\n\t\t\t\t\tnext: i18n.getMessage(\"Next year\"),\n\t\t\t\t\tprevious: i18n.getMessage(\"Previous year\"),\n\t\t\t\t},\n\t\t\t\t\"years\": {\n\t\t\t\t\tprevious: i18n.getMessage(\"Previous decade\"),\n\t\t\t\t\tnext: i18n.getMessage(\"Next decade\")\n\t\t\t\t},\n\t\t\t\t\"today\": i18n.getMessage(\"Today\")\n\t\t\t};\n\t\t\treturn locale;\n\t\t};\n\t\tsnCalendarNextAvailableTimeService.normalizeKeyCode = function(evt) {\n\t\t\tevt.charCode = evt.charCode === 0 ? evt.keyCode : evt.charCode;\n\t\t\treturn evt;\n\t\t};\n\t\tsnCalendarNextAvailableTimeService.locale = function() {\n\t\t\tvar lang = angular.element(\"html\").attr(\"lang\");\n\t\t\tvar momentLocaleMapper = {\n\t\t\t\t'pb': 'pt-br', //Portuguese-Brazil\n\t\t\t\t'fq': 'fr-ca', //French Canadian\n\t\t\t\t'fc': 'fr-ca', //French Canadian\n\t\t\t\t'zt': 'zh-tw', //Chinese Traditional\n\t\t\t\t'zh': 'zh-cn' //Chinese Simplified\n\t\t\t};\n\t\t\treturn momentLocaleMapper[lang] ? momentLocaleMapper[lang] : lang;\n\t\t};\n\t})\n\t.directive(\"snChangeDatePicker\", function(i18n, getTemplateUrl, $timeout, NEXT_AVAILABLE_TIME, snCalendarNextAvailableTimeService) {\n\t\treturn {\n\t\t\treplace: true,\n\t\t\trestrict: \"E\",\n\t\t\ttemplateUrl: getTemplateUrl(\"sn_next_available_time_date_picker.xml\"),\n\t\t\tlink: function($scope, element, $attrs) {\n\t\t\t\tfunction handler(evt) {\n\t\t\t\t\tevt = snCalendarNextAvailableTimeService.normalizeKeyCode(evt);\n\t\t\t\t\tvar index;\n\t\t\t\t\tvar next;\n\t\t\t\t\tvar minicalObj = angular.element(element).datetimepicker().data(\"DateTimePicker\");\n\t\t\t\t\tvar focused = angular.element(document.activeElement);\n\t\t\t\t\tvar list = angular.element(\".datepicker > div:visible\").find(\".prev:visible, .next:visible, [tabindex='0']\");\n\t\t\t\t\tif (typeof index === \"undefined\")\n\t\t\t\t\t\tindex = list.index(focused);\n\t\t\t\t\tswitch (evt.charCode) {\n\t\t\t\t\t\tcase NEXT_AVAILABLE_TIME.KEYS.TABKEY:\n\t\t\t\t\t\tcase NEXT_AVAILABLE_TIME.KEYS.LEFT:\n\t\t\t\t\t\tcase NEXT_AVAILABLE_TIME.KEYS.RIGHT:\n\t\t\t\t\t\t\tvar nav = focused.parents(\".bootstrap-datetimepicker-widget\");\n\t\t\t\t\t\t\tif (nav.length) {\n\t\t\t\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\t\t\t\tevt.stopPropagation();\n\t\t\t\t\t\t\t\tif ((evt.charCode === NEXT_AVAILABLE_TIME.KEYS.TABKEY && !evt.shiftKey) || evt.charCode === NEXT_AVAILABLE_TIME.KEYS.RIGHT)\n\t\t\t\t\t\t\t\t\tindex = (index === list.length - 1) ? 0 : index + 1;\n\t\t\t\t\t\t\t\telse if ((evt.charCode === NEXT_AVAILABLE_TIME.KEYS.TABKEY && evt.shiftKey) || evt.charCode === NEXT_AVAILABLE_TIME.KEYS.LEFT)\n\t\t\t\t\t\t\t\t\tindex = (index === 0) ? list.length - 1 : index - 1;\n\t\t\t\t\t\t\t\tnext = list.get(index);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase NEXT_AVAILABLE_TIME.KEYS.UP:\n\t\t\t\t\t\t\tif (focused.is(\"th\")) {\n\t\t\t\t\t\t\t\tnext = list.get(list.length - 1);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar noOfcols = (minicalObj.viewMode === NEXT_AVAILABLE_TIME.VIEW_MODE.DAY) ? 7 : 4;\n\t\t\t\t\t\t\tvar noOfHeaderElements = 3;\n\t\t\t\t\t\t\tif (index === noOfHeaderElements)\n\t\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t\telse if (index > noOfHeaderElements && index < noOfHeaderElements + noOfcols - 1)\n\t\t\t\t\t\t\t\tindex = 1;\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tindex -= noOfcols;\n\t\t\t\t\t\t\tnext = list.get(index);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase NEXT_AVAILABLE_TIME.KEYS.DOWN:\n\t\t\t\t\t\t\tif (focused.is(\"th\")) {\n\t\t\t\t\t\t\t\tnext = list.get(3);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tswitch (minicalObj.viewMode) {\n\t\t\t\t\t\t\t\tcase NEXT_AVAILABLE_TIME.VIEW_MODE.DAY:\n\t\t\t\t\t\t\t\t\tindex = (index + 7 > list.length - 1) ? 0 : index + 7;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase NEXT_AVAILABLE_TIME.VIEW_MODE.MONTH:\n\t\t\t\t\t\t\t\tcase NEXT_AVAILABLE_TIME.VIEW_MODE.YEAR:\n\t\t\t\t\t\t\t\t\tindex = (index + 4 > list.length - 1) ? 0 : index + 4;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tnext = list.get(index);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase NEXT_AVAILABLE_TIME.KEYS.ENTER:\n\t\t\t\t\t\t\tfocused.click();\n\t\t\t\t\t\t\tnext = focused;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase NEXT_AVAILABLE_TIME.KEYS.ESCAPE:\n\t\t\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\t\t\tevt.stopPropagation();\n\t\t\t\t\t\t\tminicalObj.hide();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (next)\n\t\t\t\t\t\tnext.focus();\n\t\t\t\t}\n\t\t\t\tangular.element(element).datetimepicker({\n\t\t\t\t\tlanguage: snCalendarNextAvailableTimeService.locale(),\n\t\t\t\t\tformat: \"L\",\n\t\t\t\t\tviewMode: 'days',\n\t\t\t\t\tpickTime: false,\n\t\t\t\t\ticons: {\n\t\t\t\t\t\tprevious: 'icon-arrow-left',\n\t\t\t\t\t\tnext: 'icon-arrow-right'\n\t\t\t\t\t},\n\t\t\t\t\tdefaultDate: $scope.getCurrentDate(),\n\t\t\t\t\ttranslation: snCalendarNextAvailableTimeService.translate()\n\t\t\t\t}).on(\"dp.show\", function(event) {\n\t\t\t\t\t$timeout(function() {\n\t\t\t\t\t\tangular.element(event.currentTarget).find(\"button\").attr(\"aria-expanded\", true);\n\t\t\t\t\t\tvar minical = angular.element(\".bootstrap-datetimepicker-widget\");\n\t\t\t\t\t\tminical.attr(\"aria-expanded\", true);\n\t\t\t\t\t\tminical.off(\"keydown\"); // make sure the keydown event is not attached\n\t\t\t\t\t\tminical.on(\"keydown\", handler);\n\t\t\t\t\t\tminical.find(\"table\").attr(\"role\", \"presentation\");\n\t\t\t\t\t\tangular.element(\".datepicker div:visible th.prev\").focus();\n\t\t\t\t\t});\n\t\t\t\t}).on('dp.change', function(event) {\n\t\t\t\t\tif (!event.oldDate.isValid()) return;\n\t\t\t\t\t$scope.setCurrentDate(event.date);\n\t\t\t\t}).on(\"dp.hide\", function(event) {\n\t\t\t\t\tif (angular.element(event.currentTarget).find(\"button\").attr(\"aria-expanded\") === \"false\")\n\t\t\t\t\t\treturn;\n\t\t\t\t\tangular.element(event.currentTarget).find(\"button\").attr(\"aria-expanded\", false);\n\t\t\t\t\tvar minical = angular.element(\".bootstrap-datetimepicker-widget\");\n\t\t\t\t\tminical.attr(\"aria-expanded\", false);\n\t\t\t\t\tminical.off(\"keydown\");\n\t\t\t\t\tangular.element(\"#change-date-picker\").focus();\n\t\t\t\t}).on(\"sn.changeview\", function(event) {\n\t\t\t\t\tif (angular.element(event.currentTarget).find(\"button\").attr(\"aria-expanded\") === \"false\")\n\t\t\t\t\t\treturn;\n\t\t\t\t\tangular.element(\".datepicker-\" + event.view + \" .prev\").focus();\n\t\t\t\t});\n\t\t\t},\n\t\t\tcontroller: function($scope) {\n\t\t\t\t$scope.$on('modal.closing', function(event) {\n\t\t\t\t\tangular.element('#datetimepicker1').data(\"DateTimePicker\").destroy();\n\t\t\t\t});\n\t\t\t\t$timeout(function() {\n\t\t\t\t\tangular.element(\"#change-date-picker\").focus();\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t})\n\t.directive(\"snFormNextAvailableTime\", function(i18n, getTemplateUrl, $window, $timeout, NEXT_AVAILABLE_TIME, snCalendarNextAvailableTimeService) {\n\t\t\"use strict\";\n\t\treturn {\n\t\t\treplace: true,\n\t\t\trestrict: \"E\",\n\t\t\tscope: {\n\t\t\t\ttitle: \"@\"\n\t\t\t},\n\t\t\ttemplateUrl: function(tElement, tAttrs) {\n\t\t\t\treturn getTemplateUrl(\"sn_next_available_time_window.xml\");\n\t\t\t},\n\t\t\tlink: function($scope, $element, $attrs) {\n\t\t\t\t$scope.form = true;\n\n\t\t\t\tangular.element($window.document).on(\"keydown\", function(event) {\n\t\t\t\t\tevent = snCalendarNextAvailableTimeService.normalizeKeyCode(event);\n\t\t\t\t\tif (NEXT_AVAILABLE_TIME.KEYS.ESCAPE === event.charCode && $scope.form && $window && $window.parent && $window.parent.GlideModal)\n\t\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t\tnew $window.parent.GlideModal().get(NEXT_AVAILABLE_TIME.FORM.MODAL).destroy();\n\t\t\t\t\t\t}, 0);\n\t\t\t\t});\n\t\t\t},\n\t\t\tcontroller: [\"snCalendarNextAvailableTimeService\", \"i18n\", \"$scope\", \"$timeout\", \"$window\", \"$location\", \"NEXT_AVAILABLE_TIME\", NextAvailableModalInstanceCtrl]\n\t\t};\n\t})\n\t.directive(\"snCalendarNextAvailableTime\", function(i18n, getTemplateUrl, $uibModal, $window, $timeout) {\n\t\t\"use strict\";\n\t\treturn {\n\t\t\treplace: true,\n\t\t\trestrict: \"E\",\n\t\t\tscope: {\n\t\t\t\ttitle: \"@\"\n\t\t\t},\n\t\t\ttemplateUrl: function(tElement, tAttrs) {\n\t\t\t\tif (!tAttrs.template)\n\t\t\t\t\treturn getTemplateUrl(\"sn_next_available_time.xml\");\n\t\t\t\treturn getTemplateUrl(tAttrs.template);\n\t\t\t},\n\t\t\tlink: function($scope, $element, $attrs) {\n\t\t\t\t$scope.messages = {\n\t\t\t\t\t\"Scheduling Assistant\": i18n.getMessage(\"Scheduling Assistant\")\n\t\t\t\t};\n\n\t\t\t\tif (!$scope.title)\n\t\t\t\t\t$scope.title = $scope.messages[\"Scheduling Assistant\"];\n\n\t\t\t\t$scope.show = function() {\n\t\t\t\t\tif ($scope.$parent && $scope.$parent.$parent && $scope.$parent.$parent.fieldPermission) {\n\t\t\t\t\t\tvar fieldPermission = $scope.$parent.$parent.fieldPermission;\n\t\t\t\t\t\treturn (fieldPermission.start_date.canRead && fieldPermission.start_date.canWrite && fieldPermission.end_date.canRead && fieldPermission.end_date.canWrite);\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t};\n\t\t\t\t$scope.templateXML = (!$attrs.templateModal) ? \"sn_next_available_time_window.xml\" : $attrs.templateModal;\n\t\t\t\t$scope.ctrller = (!$attrs.controller || typeof $attrs.controller !== \"function\") ? NextAvailableModalInstanceCtrl : $attrs.controller;\n\t\t\t},\n\t\t\tcontroller: function($scope) {\n\t\t\t\t$scope.openNextAvailableTimeWindow = function() {\n\t\t\t\t\tvar modalInstance = $uibModal.open({\n\t\t\t\t\t\tanimation: true,\n\t\t\t\t\t\ttemplateUrl: getTemplateUrl($scope.templateXML),\n\t\t\t\t\t\tcontroller: $scope.ctrller,\n\t\t\t\t\t\tsize: \"sm\"\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t\t$scope.$on(\"isLoading\", function(loadingElements) {\n\t\t\t\t\t$scope.loadingElements = loadingElements;\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t});\n\nfunction sanitizeSysId(sysId) {\n\tsysId = sysId + '';\n\tvar regexSysId = /[0-9a-f]{32}/;\n\tvar foundArr = sysId.match(regexSysId);\n\treturn (Array.isArray(foundArr) && foundArr.length === 1) ? foundArr[0] : '';\n}\n\nfunction NextAvailableModalInstanceCtrl(snCalendarNextAvailableTimeService, i18n, $scope, $timeout, $window, $location, NEXT_AVAILABLE_TIME, $uibModalInstance) {\n\t$scope.tabbable = {\n\t\t\"include\": \"button:visible, [tabindex]:visible\",\n\t\t\"exclude\": \"[tabindex='-1'], [disabled='disabled']\"\n\t};\n\t$scope.messages = {\n\t\t\"Calendar\": i18n.getMessage(\"Calendar\"),\n\t\t\"Cancel\": i18n.getMessage(\"Cancel\"),\n\t\t\"Close\": i18n.getMessage(\"Close\"),\n\t\t\"Select Available Time\": i18n.getMessage(\"Select Available Time\"),\n\t\t\"Time Zone\": i18n.getMessage(\"Time Zone\"),\n\t\t\"from_to\": i18n.getMessage(\"from {0} to {1}\"),\n\t\t\"Today\": i18n.getMessage(\"Today\"),\n\t\t\"Previous week\": i18n.getMessage(\"Previous week\"),\n\t\t\"Next week\": i18n.getMessage(\"Next week\"),\n\t\t\"to\": i18n.getMessage(\"change_management_to_string\").toLowerCase(),\n\t\t\"No Available Time\": i18n.getMessage(\"No Available Time\"),\n\t\t\"Loading\": i18n.getMessage(\"Loading\"),\n\t\t\"Search\": i18n.getMessage(\"Search\"),\n\t\t\"No availability found, try again.\": i18n.getMessage(\"No availability found, try again.\"),\n\t\t\"Searching for availability...\": i18n.getMessage(\"Searching for availability...\"),\n\t\t\"Scheduling conflict avoided. Save the form to schedule the change request.\": i18n.getMessage(\"Scheduling conflict avoided. Save the form to schedule the change request.\"),\n\t\t\"No Permission\": i18n.getMessage(\"No Permission\")\n\t};\n\tvar slotSelected = {};\n\tvar locale = snCalendarNextAvailableTimeService.locale();\n\tmoment.locale(locale);\n\tmoment.updateLocale(locale, {\n\t\tweek: {\n\t\t\tdow: (parseInt(window.g_first_day_of_week) === 1) ? 0 : 1\n\t\t}\n\t});\n\tvar timezone = $window.g_tz;\n\tvar timeFormat = $window.g_time_format;\n\tvar dateTimeFormat = $window.g_date_time_format;\n\tvar systemDateTimeFormat = \"YYYY-MM-DD HH:mm:ss\";\n\tvar currentTime;\n\tvar mToday = moment.tz(timezone).startOf(\"day\");\n\tvar range = {};\n\tvar modalLoaded = false;\n\tvar lastFocused;\n\t$scope.title = $scope.messages[\"No availability found, try again.\"];\n\t$scope.intro_message = \"\";\n\t$scope.reason_message = \"\";\n\t$scope.display_message = \"\";\n\t$scope.crossSlots = [];\n\t$scope.slots = [];\n\t$scope.timezone = moment().tz(timezone).zoneAbbr();\n\t$scope.isLoading = false;\n\t$scope.showSearch = true;\n\n\tvar chgId = sanitizeSysId($location.search().sysparm_changeId);\n\n\tvar requestPromise;\n\tvar fullyExpanded = false;\n\n\tinit();\n\n\tfunction init() {\n\t\tlastFocused = angular.element(document.activeElement);\n\t\t$scope.isLoading = true;\n\t\t$scope.showSearch = true;\n\t\tsnCalendarNextAvailableTimeService.abort(requestPromise); // abort any request as we're about to start a new one\n\n\t\tif (currentTime) {\n\t\t\tvar startWeekTZ = currentTime.startOf(\"week\").format(systemDateTimeFormat);\n\t\t\tvar endWeekTZ = currentTime.endOf(\"week\").format(systemDateTimeFormat);\n\t\t\trange.startDate = moment.tz(startWeekTZ, timezone).utc().format(systemDateTimeFormat);\n\t\t\trange.endDate = moment.tz(endWeekTZ, timezone).utc().format(systemDateTimeFormat);\n\t\t\tgetHeader();\n\t\t}\n\n\t\trequestPromise = snCalendarNextAvailableTimeService.getSlots(chgId, range);\n\t\trequestPromise.then(function(result) {\n\t\t\t$scope.crossSlots = [];\n\t\t\t$scope.slots = [];\n\t\t\tvar objResult = result.spans;\n\t\t\tif (!objResult && result.display_message) {\n\t\t\t\t$scope.title = $scope.messages[\"No Permission\"];\n\t\t\t\t$scope.display_message = result.display_message;\n\t\t\t\t$scope.showSearch = false;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (objResult.length > 0 && range.hasOwnProperty(\"startDate\") && !modalLoaded) {\n\t\t\t\tcurrentTime = getMomentDate(objResult[0].start.display_value);\n\t\t\t\tgetHeader();\n\t\t\t} else if (objResult.length === 0 && !modalLoaded) {\n\t\t\t\tangular.element(\".modal-dialog\").removeClass(\"modal-lg\");\n\t\t\t\tangular.element(\".modal-dialog\").addClass(\"modal-sm\");\n\t\t\t\t$scope.intro_message = result.intro_message;\n\t\t\t\t$scope.reason_message = result.reason_message;\n\t\t\t\t$scope.display_message = result.display_message;\n\t\t\t\tcurrentTime = null;\n\t\t\t\tvar newRangeStart = getMomentDate(result.suggested_range.start);\n\t\t\t\tvar newRangeEnd = getMomentDate(result.suggested_range.end);\n\t\t\t\trange.startDate = newRangeStart.format(systemDateTimeFormat);\n\t\t\t\trange.endDate = newRangeEnd.format(systemDateTimeFormat);\n\t\t\t\tif (!modalLoaded) return;\n\t\t\t}\n\t\t\tmodalLoaded = true;\n\t\t\tif ($scope.form) {\n\t\t\t\t$window.parent.$j(\"#chg_next_available_time > .modal-dialog\").removeClass(\"modal-sm\");\n\t\t\t\t$window.parent.$j(\"#chg_next_available_time > .modal-dialog\").addClass(\"modal-lg\");\n\t\t\t} else {\n\t\t\t\tangular.element(\".modal-dialog\").addClass(\"modal-lg\");\n\t\t\t\tangular.element(\".modal-dialog\").removeClass(\"modal-sm\");\n\t\t\t}\n\t\t\tfor (var index = 0; index < objResult.length; index++) {\n\t\t\t\tvar slot = objResult[index];\n\t\t\t\tif (getMomentDate(slot.start.display_value).isBefore(mToday))\n\t\t\t\t\tcontinue; // don't show slots that start in the past\n\t\t\t\tif (!currentTime) {\n\t\t\t\t\tcurrentTime = getMomentDate(slot.start.display_value);\n\t\t\t\t\tgetHeader();\n\t\t\t\t}\n\t\t\t\tvar startInCurrentWeek = isCurrentWeek(slot.start.display_value, \"[)\");\n\t\t\t\tvar endInCurrentWeek = isCurrentWeek(slot.end.display_value, \"(]\");\n\t\t\t\tif (startInCurrentWeek || endInCurrentWeek) {\n\t\t\t\t\tvar slotObj = getTimes(slot);\n\t\t\t\t\tslotObj.prev_week = (!startInCurrentWeek && endInCurrentWeek) ? true : false;\n\t\t\t\t\tslotObj.next_week = (startInCurrentWeek && !endInCurrentWeek) ? true : false;\n\t\t\t\t\tslotObj = calculateColumnNumber(slotObj);\n\t\t\t\t\tif (slotObj.crossover)\n\t\t\t\t\t\t$scope.crossSlots.push(slotObj);\n\t\t\t\t\telse\n\t\t\t\t\t\t$scope.slots.push(slotObj);\n\t\t\t\t}\n\t\t\t}\n\t\t\t$scope.crossSlots = calculateRowNumber($scope.crossSlots);\n\t\t\t$scope.slots = calculateRowNumber($scope.slots);\n\n\t\t\t/** HELPERS **/\n\t\t\tfunction getTimes(span) {\n\t\t\t\tvar sd = getMomentDate(span.start.display_value);\n\t\t\t\tvar ed = getMomentDate(span.end.display_value);\n\t\t\t\tif (ed.format(\"HH:mm:ss\") === \"00:00:00\")\n\t\t\t\t\ted.add(\"-1\", \"seconds\"); // if midnight, we don't want it to think it's crossover to next day\n\t\t\t\tvar diff = ed.startOf(\"day\").diff(sd.startOf(\"day\"), \"days\");\n\t\t\t\treturn {\n\t\t\t\t\tstartDate: getMomentDate(span.start.display_value).format(\"YYYY-MM-DD\"),\n\t\t\t\t\tstart: getMomentDate(span.start.display_value).format(timeFormat),\n\t\t\t\t\tstartDateTime: getMomentDate(span.start.display_value).format(dateTimeFormat),\n\t\t\t\t\tstart_date_display: span.start.display_value,\n\t\t\t\t\tendDate: getMomentDate(span.end.display_value).format(\"YYYY-MM-DD\"),\n\t\t\t\t\tend: getMomentDate(span.end.display_value).format(timeFormat),\n\t\t\t\t\tendDateTime: getMomentDate(span.end.display_value).format(dateTimeFormat),\n\t\t\t\t\tend_date_display: span.end.display_value,\n\t\t\t\t\tcrossover: diff > 0,\n\t\t\t\t\tspandiff: diff,\n\t\t\t\t\tstart_date_utc: getMomentDate(span.start.display_value).utc().format(systemDateTimeFormat),\n\t\t\t\t\tend_date_utc: getMomentDate(span.end.display_value).utc().format(systemDateTimeFormat),\n\t\t\t\t\tstart_date_utc_display: getMomentDate(span.start.display_value).utc().format(dateTimeFormat),\n\t\t\t\t\tend_date_utc_display: getMomentDate(span.end.display_value).utc().format(dateTimeFormat)\n\t\t\t\t};\n\t\t\t}\n\t\t}).finally(function() {\n\t\t\t$scope.isLoading = false;\n\t\t\t$timeout(function() {\n\t\t\t\tif ($scope.form && !fullyExpanded) {\n\t\t\t\t\tvar contentHeight = angular.element($window.document).outerHeight();\n\t\t\t\t\t// We add 4px here because GlideModal defines a parent div that is absolutely positioned, top: 2px, bottom: 2px\n\t\t\t\t\t$window.parent.$j(\"#chg_next_available_time div.container-fluid\").outerHeight(contentHeight + 4);\n\t\t\t\t\tfullyExpanded = true;\n\t\t\t\t}\n\t\t\t\tif (lastFocused)\n\t\t\t\t\tlastFocused.focus();\n\t\t\t\tvar modalEl = angular.element(\"#cnat\");\n\t\t\t\tif (modalEl.find(\"#cnat-data:visible\").length === 0)\n\t\t\t\t\tif (lastFocused.hasClass(\"btn-cnat-search\"))\n\t\t\t\t\t\tangular.element(\".btn-cnat-search\").focus();\n\t\t\t\t\telse\n\t\t\t\t\t\tangular.element(\".btn-cnat-cancel\").focus();\n\t\t\t});\n\t\t});\n\t}\n\n\tfunction getMomentDate(sDate) {\n\t\treturn moment.tz(sDate, dateTimeFormat, timezone);\n\t}\n\n\tfunction isCurrentWeek(dateTimeDisplayValue, restriction) {\n\t\tvar mDate = getMomentDate(dateTimeDisplayValue);\n\t\tvar mBoW = moment.tz($scope.cols[0].id + \" 00:00:00\", systemDateTimeFormat, timezone);\n\t\tvar mEoW = moment.tz($scope.cols[6].id + \" 23:59:59\", systemDateTimeFormat, timezone);\n\t\tmEoW.add(\"1\", \"seconds\"); // Move the end of the week to the correct limit (midnight)\n\t\treturn (mDate.isBetween(mBoW, mEoW, \"second\", restriction) && mDate.isSameOrAfter(mToday, \"day\"));\n\t}\n\n\tfunction getHeader() {\n\t\t$scope.cols = [];\n\t\t$scope.title = currentTime.startOf(\"week\").format(\"DD MMMM YYYY\") + \" - \" + currentTime.endOf(\"week\").format(\"DD MMMM YYYY\");\n\t\tvar t = currentTime.clone();\n\t\tfor (var j = 0; j < 7; j++) {\n\t\t\tt.startOf('week').add(j, \"days\");\n\t\t\t$scope.cols.push({\n\t\t\t\tid: t.format(\"YYYY-MM-DD\"),\n\t\t\t\tday: t.format(\"DD\"),\n\t\t\t\tdow: t.format(\"dddd\"),\n\t\t\t\tvalue: t.format(\"YYYY-MM-DD\"),\n\t\t\t\tisToday: t.isSame(moment().tz(timezone), \"day\")\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction findColumnIndex(value) {\n\t\tfor (var i = 0; i < $scope.cols.length; i++)\n\t\t\tif ($scope.cols[i].id === value)\n\t\t\t\treturn i + 1;\n\t\treturn 1;\n\t}\n\n\tfunction calculateColumnNumber(span) {\n\t\tif (span.prev_week)\n\t\t\tspan.colStart = 1;\n\t\tif (span.next_week)\n\t\t\tspan.colSpan = 7;\n\n\t\tvar sd = null;\n\t\tvar ed = null;\n\t\tif (!span.prev_week && span.next_week) {\n\t\t\tsd = moment.utc(span.start_date_utc_display, dateTimeFormat).tz(timezone);\n\t\t\tspan.colStart = findColumnIndex(sd.format(\"YYYY-MM-DD\"));\n\t\t\tspan.colSpan = span.colSpan - findColumnIndex(sd.format(\"YYYY-MM-DD\")) + 1;\n\t\t} else if (span.prev_week && !span.next_week) {\n\t\t\ted = moment.utc(span.end_date_utc_display, dateTimeFormat).tz(timezone);\n\t\t\tspan.colSpan = findColumnIndex(ed.format(\"YYYY-MM-DD\"));\n\t\t} else if (!span.prev_week && !span.next_week) {\n\t\t\tsd = moment.utc(span.start_date_utc_display, dateTimeFormat).tz(timezone);\n\t\t\ted = moment.utc(span.end_date_utc_display, dateTimeFormat).tz(timezone);\n\t\t\tif (ed.format(\"HH:mm:ss\") === \"00:00:00\")\n\t\t\t\ted.add(\"-1\", \"seconds\"); // Don't want to show it crosses to the next week if it finishes at midnight\n\t\t\tspan.colStart = findColumnIndex(sd.format(\"YYYY-MM-DD\"));\n\t\t\tspan.colSpan = ed.startOf(\"day\").diff(sd.startOf(\"day\"), \"days\") + 1;\n\t\t}\n\t\treturn span;\n\t}\n\n\tfunction calculateRowNumber(slotsArray) {\n\t\tif (slotsArray.length === 0)\n\t\t\treturn slotsArray;\n\n\t\tslotsArray[0].row = 1;\n\t\tfor (var i = 1; i < slotsArray.length; i++) {\n\t\t\tvar counter = 1;\n\t\t\tfor (var j = 0; j < i; j++) {\n\t\t\t\tvar prevSD = moment.tz(slotsArray[j].startDate, \"YYYY-MM-DD\", timezone);\n\t\t\t\tvar prevED = moment.tz(slotsArray[j].endDate, \"YYYY-MM-DD\", timezone);\n\t\t\t\tvar dateCollision = moment.tz(slotsArray[i].startDate, \"YYYY-MM-DD\", timezone).isBetween(prevSD, prevED, null, \"[]\");\n\t\t\t\tif (dateCollision && counter === slotsArray[j].row)\n\t\t\t\t\tcounter += 1;\n\t\t\t}\n\t\t\tslotsArray[i].row = counter;\n\t\t}\n\t\treturn slotsArray;\n\t}\n\n\tfunction findSlot(array, col) {\n\t\tvar BoD = moment.tz(col.id, \"YYYY-MM-DD\", timezone).startOf(\"day\");\n\t\tvar EoD = moment.tz(col.id, \"YYYY-MM-DD\", timezone).endOf(\"day\");\n\t\tif (!array.find) // IE11\n\t\t\tfor (var i = 0; i < array.length; i++) {\n\t\t\t\tvar slot = array[i];\n\t\t\t\tvar mSlotStartDateTime = getMomentDate(slot.startDateTime);\n\t\t\t\tvar mSlotEndDateTime = getMomentDate(slot.endDateTime);\n\t\t\t\tvar isInPreviousColumn = mSlotStartDateTime.isBefore(BoD, \"second\") && mSlotEndDateTime.isSameOrBefore(BoD, \"second\");\n\t\t\t\tvar isInNextColumn = mSlotStartDateTime.isSameOrAfter(EoD, \"second\") && mSlotEndDateTime.isAfter(EoD, \"second\");\n\t\t\t\treturn !isInPreviousColumn && !isInNextColumn;\n\t\t\t}\n\t\telse\n\t\t\treturn array.find(function(slot) {\n\t\t\t\tvar mSlotStartDateTime = getMomentDate(slot.startDateTime);\n\t\t\t\tvar mSlotEndDateTime = getMomentDate(slot.endDateTime);\n\t\t\t\tvar isInPreviousColumn = mSlotStartDateTime.isBefore(BoD, \"second\") && mSlotEndDateTime.isSameOrBefore(BoD, \"second\");\n\t\t\t\tvar isInNextColumn = mSlotStartDateTime.isSameOrAfter(EoD, \"second\") && mSlotEndDateTime.isAfter(EoD, \"second\");\n\t\t\t\treturn !isInPreviousColumn && !isInNextColumn;\n\t\t\t});\n\t}\n\n\tfunction setMinicalendar(mDate) {\n\t\tvar minicalObj = angular.element(\"div#datetimepicker1\").datetimepicker().data(\"DateTimePicker\");\n\t\tminicalObj.setDate(mDate);\n\t}\n\n\t$scope.isInitLoading = function() {\n\t\treturn $scope.isLoading && !modalLoaded;\n\t};\n\n\t$scope.isLoaded = function() {\n\t\treturn currentTime && !$scope.isLoading;\n\t};\n\n\t$scope.isEmpty = function() {\n\t\treturn $scope.isLoaded() && ($scope.crossSlots.length === 0 && $scope.slots.length === 0) && !modalLoaded;\n\t};\n\n\t$scope.hasCrossSlots = function() {\n\t\treturn $scope.crossSlots.length > 0;\n\t};\n\n\t$scope.getSlotDisplayValue = function(slot) {\n\t\tvar val = \"\";\n\t\tif (!slot)\n\t\t\treturn val;\n\t\tif (slot.hasOwnProperty(\"start\"))\n\t\t\tval = slot.start;\n\t\tif (slot.hasOwnProperty(\"end\"))\n\t\t\tval += \" - \" + slot.end;\n\t\treturn val;\n\t};\n\n\t$scope.getSlotAriaDisplayValue = function(slot) {\n\t\tif (!slot)\n\t\t\treturn;\n\t\tvar s = moment.utc(slot.start_date_utc_display, dateTimeFormat);\n\t\tvar e = moment.utc(slot.end_date_utc_display, dateTimeFormat);\n\t\tvar aria;\n\t\tif (s.tz(timezone).format(\"dddd DD MMMM YYYY\") === e.tz(timezone).format(\"dddd DD MMMM YYYY\"))\n\t\t\taria = s.tz(timezone).format(\"dddd DD MMMM YYYY\") + \" \" + $scope.messages[\"from_to\"].withValues([s.tz(timezone).format(timeFormat), e.tz(timezone).format(timeFormat)]);\n\t\telse\n\t\t\taria = $scope.messages[\"from_to\"].withValues([s.tz(timezone).format(\"dddd DD MMMM YYYY HH:mm:ss\"), e.tz(timezone).format(\"dddd DD MMMM YYYY HH:mm:ss\")]);\n\t\treturn aria;\n\t};\n\n\t$scope.hasSlots = function(col) {\n\t\tif (findSlot($scope.crossSlots, col)) return true;\n\t\tif (findSlot($scope.slots, col)) return true;\n\t\treturn false;\n\t};\n\n\t$scope.getStyles = function(slot, index) {\n\t\tif (!slot)\n\t\t\treturn;\n\t\tif (!slot.hasOwnProperty(\"startDate\") && $scope.hasSlots(slot))\n\t\t\treturn;\n\n\t\tvar row = (!slot.row) ? 1 : slot.row;\n\t\tvar colStart = (!slot.colStart) ? index + 1 : slot.colStart;\n\t\tvar colSpan = (!slot.colSpan) ? 1 : slot.colSpan;\n\n\t\tvar startRowStyle = \"grid-row-start: \" + row + \";\";\n\t\tvar startRowStyleIE = \"-ms-grid-row: \" + row + \";\";\n\n\t\tvar startColStyle = \"grid-column-start: \" + colStart + \";\";\n\t\tvar startColStyleIE = \"-ms-grid-column: \" + colStart + \";\";\n\n\t\tvar endColStyle = \"grid-column-end: span \" + colSpan + \";\";\n\t\tvar endColStyleIE = \"-ms-grid-column-span: \" + colSpan + \";\";\n\n\t\tvar result = startRowStyle + startRowStyleIE + startColStyle + startColStyleIE + endColStyle + endColStyleIE;\n\t\treturn result;\n\t};\n\n\t$scope.isSelected = function(slot, rowIndex) {\n\t\tif (Object.keys(slotSelected).length === 0)\n\t\t\treturn false;\n\t\tif (typeof rowIndex === \"number\")\n\t\t\tslot = slot[rowIndex];\n\t\tif (!slot)\n\t\t\treturn false;\n\t\treturn slot.start === slotSelected.start && slot.end === slotSelected.end &&\n\t\t\tslot.startDate === slotSelected.startDate && slot.endDate === slotSelected.endDate;\n\t};\n\n\t$scope.selectSlot = function(slot, $evt, rowIndex) {\n\t\t$evt = snCalendarNextAvailableTimeService.normalizeKeyCode($evt);\n\t\t// Ignore any other key that it's not Space or Enter\n\t\tif ($evt.type === \"keyup\" && ($evt.charCode !== NEXT_AVAILABLE_TIME.KEYS.SPACE && $evt.charCode !== NEXT_AVAILABLE_TIME.KEYS.ENTER))\n\t\t\treturn;\n\n\t\t$evt.preventDefault(); // This prevents scrolling when pressing Space bar\n\t\tif (typeof rowIndex === \"number\")\n\t\t\tslotSelected = slot[rowIndex];\n\t\telse\n\t\t\tslotSelected = slot;\n\n\t\tvar isEnterPressed = ($evt.type === \"keyup\" && $evt.charCode === NEXT_AVAILABLE_TIME.KEYS.ENTER) ||\n\t\t\t($evt.type === \"click\" && $evt.originalEvent && $evt.originalEvent.pointerType === \"\" && $evt.originalEvent.detail === 0) ||\n\t\t\t($evt.type === \"click\" && $evt.originalEvent && typeof $evt.originalEvent.pointerType === \"undefined\" && $evt.originalEvent.detail === 0);\n\t\tif (isEnterPressed)\n\t\t\t$scope.submit($evt);\n\t};\n\n\t$scope.disableSubmit = function() {\n\t\tif (!slotSelected || Object.keys(slotSelected).length === 0)\n\t\t\treturn true;\n\t\treturn false;\n\t};\n\n\t$scope.getCurrentDate = function() {\n\t\tif (!currentTime)\n\t\t\tcurrentTime = moment().tz(timezone);\n\t\treturn currentTime;\n\t};\n\n\t$scope.setCurrentDate = function(d) {\n\t\tcurrentTime = (d && d._isAMomentObject) ? d : getMomentDate(d);\n\t\tinit();\n\t};\n\n\t$scope.isToday = function(obj) {\n\t\treturn obj.isToday;\n\t};\n\n\t$scope.goThisWeek = function(event) {\n\t\tsetMinicalendar(moment().tz(timezone));\n\t};\n\n\t$scope.navigateWeek = function(value, event) {\n\t\tsetMinicalendar(currentTime.clone().add(value, \"week\"));\n\t};\n\n\t$scope.hasScrollbar = function(isCrossOverSlot) {\n\t\tif (navigator.userAgent.match(/iPad/i) !== null)\n\t\t\treturn false;\n\t\tvar el = (isCrossOverSlot) ? angular.element(\".cnat-crossover-wrapper\") : angular.element(\".cnat-slots-wrapper\");\n\t\tif ($window._isIE || ($window._isFF && !$window._isChrome))\n\t\t\tel.css(\"overflow-y\", \"auto\");\n\t\telse\n\t\t\tel.css(\"-ms-overflow-style\", \"-ms-autohiding-scrollbar\");\n\t\treturn el.get(0).scrollHeight > el.get(0).clientHeight + 1; // Add 1px to compensate the border\n\t};\n\n\t$scope.search = function() {\n\t\tcurrentTime = null;\n\t\tinit();\n\t};\n\n\t$scope.cancel = function() {\n\t\tif ($uibModalInstance)\n\t\t\t$uibModalInstance.dismiss(\"cancel\");\n\t\tif ($scope.form && $window && $window.parent && $window.parent.GlideModal)\n\t\t\tsetTimeout(function() {\n\t\t\t\tnew $window.parent.GlideModal().get(NEXT_AVAILABLE_TIME.FORM.MODAL).destroy();\n\t\t\t}, 0);\n\t};\n\n\t$scope.abort = function() {\n\t\tif (requestPromise !== null)\n\t\t\tsnCalendarNextAvailableTimeService.abort(requestPromise);\n\t\t$scope.cancel();\n\t};\n\n\t$scope.submit = function($evt) {\n\t\t$evt.preventDefault();\n\t\t$evt.stopPropagation();\n\t\tif (!$scope.form)\n\t\t\tsnCalendarNextAvailableTimeService.submit(chgId, slotSelected).then(function(result) {\n\t\t\t\tsnCalendarNextAvailableTimeService.broadcast(\"update\", result);\n\t\t\t});\n\t\tif ($scope.form && $window && $window.parent && $window.parent.g_form) {\n\t\t\tvar formWindow = $window.parent;\n\t\t\tformWindow.g_scratchpad.next_available_time = {};\n\t\t\tformWindow.g_scratchpad.next_available_time.start_date = slotSelected.start_date_display;\n\t\t\tformWindow.g_scratchpad.next_available_time.end_date = slotSelected.end_date_display;\n\t\t\tformWindow.g_form.clearMessages();\n\t\t\tformWindow.g_form.addInfoMessage($scope.messages[\"Scheduling conflict avoided. Save the form to schedule the change request.\"]);\n\t\t}\n\t\t$scope.cancel();\n\t};\n}","sys_class_name":"sys_ui_script","sys_id":"9a1f85485773130035ae4786cc94f971","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/3eb7af7f04b12210559073c06a02f7fb","value":"3eb7af7f04b12210559073c06a02f7fb"},"ui_type":"0","sys_update_name":"sys_ui_script_9a1f85485773130035ae4786cc94f971","sys_updated_by":"admin","sys_created_on":"2018-08-03 14:06:02","name":"change_calendar.nextAvailableTime","sys_name":"change_calendar.nextAvailableTime","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"0","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2018-02-02 14:33:59","sys_tags":"","script_name":"landing_notifications","script":"var app = angular.module(\"sn.chg_soc.landing\");\napp.directive(\"snLandingPinnedNotification\", function(getTemplateUrl) {\n    \"use strict\";\n    return {\n      replace : true,\n      restrict : \"E\",\n      templateUrl : getTemplateUrl(\"sn_chg_soc_landing_pinned_notification.xml\")\n    };\n});\n\t","sys_class_name":"sys_ui_script","sys_id":"9d2400e5c380130035ae3f52c1d3ae22","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"ui_type":"","sys_update_name":"sys_ui_script_9d2400e5c380130035ae3f52c1d3ae22","sys_updated_by":"admin","sys_created_on":"2018-02-02 14:33:59","name":"sn_chg_soc.landing_notifications","sys_name":"sn_chg_soc.landing_notifications","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"37","active":"true","description":"Service to handle dependency and cummunication between widgets in knowledge service portal.\r\nAlso handles data for all facet widgets instances.\r\n\r\nEach widget accepts an input event(refresh) and throws an output event(updated).\r\nThis service catches events from all widgets and decides which other widget to tigger change.","use_scoped_format":"false","global":"false","sys_updated_on":"2023-10-18 10:32:44","sys_tags":"","script_name":"Knowledge Portal Service","script":"angular.module(\"sn.app_knowledge\",[])\n\t.service(\"KnowledgeSearchService\", ['$rootScope', '$http','$timeout','$location', function($rootScope,$http,$timeout,$location){\n\n\t\tvar kbData = {};\n\t\tvar f = {};\n\t\tf.keyword = \"\";\n\t\tf.language = \"\";\n\t\tf.languageFilters = [];\n\t\tf.order = \"sys_view_count\";\n\t\tf.order_desc = true;\n\t\tf.pageID = \"\";\n\t\tf.paginationMinResCount = 0;\n\t\tf.article_count = \"\";\n\t\tf.cachedFacetData = null;\n\t\tf.hasURLParams = false;\n\t\tf.faceTypeMap = {};\n\t\tf.savedLanguagePreferranceValue =\"\";\n\n\t\tf.variableParams = {};\n\t\tf.queryParams = {};\n\t\tf.resource = \"\";\n\n\t\tf.urlActualParams = {};\n\t\tf.urlAltParams = {};\n\t\tf.urlParameterValues = {};\n\n\t\tf.breadcrumbFilters = [];\n\t\tf.facetData = {};\n\t\tf.requiredFacets = [];\n\t\tf.initData = null;\n\n\t\tf.selectionStack = [];\n\t\t$rootScope.facetSubscribed = false;\n\n\t\tvar width = $(window).width();\n\t\tif(width<=991){\n\t\t\t$rootScope.isMobile = true;\n\t\t}else if(width>991){\n\t\t\t$rootScope.isMobile = false;\n\t\t}\n\t\t$rootScope.showFacet = false;\n\t\t$rootScope.showLanguageFacet = false;\n\n\t\t//init search & lannguage param incase not subscribe;\n\t\tf.urlActualParams.query = \"query\";\n\t\tf.urlActualParams.language = \"language\";\n\t\tvar timeout, hasLanguageParam = false;\n\t\tangular.forEach($location.search(), function(value, key) {\n\t\t\tif(key != \"id\" && key != \"spa\" && key != \"sysparm_kb_search_table\" && key != \"query\"){\n\t\t\t\tf.requiredFacets.push(key);\n\t\t\t\tif(key == \"language\")\n\t\t\t\t\thasLanguageParam = true;\n\t\t\t}\n\t\t});\n\t\t\n\t\tif(!hasLanguageParam)\n\t\t\tf.requiredFacets.push(\"language\");\n\t\t\n\t\t//subscribe the available facets and initiate the respective objects based on type\n\t\tkbData.subscribe = function(data){\n\t\t\tif(data && data.element){\n\t\t\t\tif(data.element == 'facet'){\n\t\t\t\t\tif(data.kind){\n\t\t\t\t\t\tif(data.kind == 'query'){\n\t\t\t\t\t\t\tf.queryParams[data.name] = {};\n\t\t\t\t\t\t\tf.queryParams[data.name].filters = data.filters || \"\";\n\t\t\t\t\t\t\tf.queryParams[data.name].value = \"\";\n\t\t\t\t\t\t\tf.queryParams[data.name].dynamic = data.dynamic || false;\n\t\t\t\t\t\t\tf.queryParams[data.name].treeData = data.treeData || false;\n\t\t\t\t\t\t\tf.faceTypeMap[data.name] = data.type;\n\n\t\t\t\t\t\t\tf.urlActualParams[data.name] = data.name;\n\t\t\t\t\t\t\tif(data.alt_url_params){\n\t\t\t\t\t\t\t\tvar qParams =  data.alt_url_params.toString().split(\",\");\n\t\t\t\t\t\t\t\tqParams.forEach(function(key){\n\t\t\t\t\t\t\t\t\tf.urlAltParams[key] = data.name;\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tf.variableParams[data.name] = {};\n\t\t\t\t\t\t\tf.variableParams[data.name].value = [];\n\t\t\t\t\t\t\tf.variableParams[data.name].orderby = data.orderby;\n\t\t\t\t\t\t\tf.variableParams[data.name].table = data.table;\n\t\t\t\t\t\t\tf.variableParams[data.name].include_null = data.show_empty_value || false;\n\t\t\t\t\t\t\tf.variableParams[data.name].aggregate = data.aggregate_query || false;\n\t\t\t\t\t\t\tf.variableParams[data.name].title = data.title || \"\";\n\t\t\t\t\t\t\tf.variableParams[data.name].treeData = data.treeData || false;\n\t\t\t\t\t\t\tf.faceTypeMap[data.name] = data.type;\n\n\t\t\t\t\t\t\tf.urlActualParams[data.name] = data.name;\n\t\t\t\t\t\t\tif(data.alt_url_params){\n\t\t\t\t\t\t\t\tvar fParams =  data.alt_url_params.toString().split(\",\");\n\t\t\t\t\t\t\t\tfParams.forEach(function(key){\n\t\t\t\t\t\t\t\t\tf.urlAltParams[key] = data.name;\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$rootScope.facetSubscribed = true;\n\t\t\t\t\t}\n\t\t\t\t}else if(data.element == 'search'){\n\t\t\t\t\tif(data.alt_url_params){\n\t\t\t\t\t\tvar sParams =  data.alt_url_params.toString().split(\",\");\n\t\t\t\t\t\tsParams.forEach(function(key){\n\t\t\t\t\t\t\tf.urlAltParams[key] = \"query\";\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t}else if(data.element == 'language'){\n\t\t\t\t\tif(data.alt_url_params){\n\t\t\t\t\t\tvar lParams =  data.alt_url_params.toString().split(\",\");\n\t\t\t\t\t\tlParams.forEach(function(key){\n\t\t\t\t\t\t\tf.urlAltParams[key] = \"language\";\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tf.faceTypeMap[\"language\"] = data.type;\n\t\t\t\t}\n\n\t\t\t\tif(f.requiredFacets.length > 0){\n\t\t\t\t\tvar index = f.requiredFacets.indexOf(data.name);\n\t\t\t\t\tif(index != -1){\n\t\t\t\t\t\tf.requiredFacets.splice(index,1);\n\t\t\t\t\t}\n\t\t\t\t\tif(index == -1 && data.alt_url_params){\n\t\t\t\t\t\tf.requiredFacets.forEach(function(key, i){\n\t\t\t\t\t\t\tif(f.urlAltParams.hasOwnProperty(key)){\n\t\t\t\t\t\t\t\tf.requiredFacets.splice(i,1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t};\n\n\t\t$rootScope.$watch(\"f.requiredFacets\",function(){\n\t\t\tif(f.requiredFacets.length == 0 && f.initData && timeout){\n\t\t\t\t$timeout.cancel(timeout);\n\t\t\t\tf.initialize(f.initData);\n\t\t\t}\t\n\t\t});\n\n\t\t// logic to handle the back button. listen for location change events and skip on filter selection\n\t\tf.monitorLocationChange = function(){\n\t\t\tf.unRegLocationChange = $rootScope.$on('$locationChangeSuccess', function(e) {\n\t\t\t\tvar urlParams = $location.search();\n\t\t\t\tif( f.pageID && f.pageID != urlParams.id){\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif($rootScope.refreshKBPage && $rootScope.facetSubscribed){\n\t\t\t\t\tf.getInitFilterData();\n\t\t\t\t}\n\n\t\t\t\t$rootScope.refreshKBPage = true;\n\t\t\t});\n\t\t};\n\n\t\t//Handles first load of facets based on subscription\n\t\tf.getInitFilterData = function(){\n\t\t\tif($rootScope.facetSubscribed){\n\t\t\t\tf.cachedFacetData = null;\n\t\t\t\tf.restAllSelections();\n\t\t\t\tf.initWithURLParams();\n\t\t\t\tf.initLangaugeWithSavedPreferranceValue();\n\n\t\t\t\tif(kbData.getKeyword()!=\"\" || $rootScope.dafaultSortId != \"relevancy\"){\n\t\t\t\t\tkbData.setOrder($rootScope.dafaultSortId);\n\t\t\t\t\tkbData.setOrderDesc($rootScope.dafaultSortDesc);\n\t\t\t\t}else{\n\t\t\t\t\tkbData.setOrder('sys_view_count');\n\t\t\t\t\tkbData.setOrderDesc(true);\n\t\t\t\t}\n\t\t\t}\n\t\t\t$rootScope.$emit('sp.kb.refresh.result',kbData.getResultQueryData());\n\t\t\tif(kbData.getKeyword()!=\"\"){\n\t\t\t\t$rootScope.$emit('sp.kb.refresh.suggestion',{'keyword':kbData.getKeyword(), 'language':kbData.getLanguage()});\n\t\t\t}\n\t\t\tif($rootScope.facetSubscribed){\n\t\t\t\t$timeout(function(){\n\t\t\t\t\tkbData.fetchFilterData();\n\t\t\t\t},50);\t\n\t\t\t}\n\t\t\t\t\n\t\t\tif(angular.element('#kb_search_input'))\n\t\t\t\tangular.element('#kb_search_input').focus();\n\t\t};\n\n\t\tf.initLangaugeWithSavedPreferranceValue = function(){\n\n\t\t\tif(kbData.getLanguage()==\"\"){\n\t\t\t\tvar savedLang = f.savedLanguagePreferranceValue; \n\t\t\t\tif(savedLang){\n\t\t\t\t\tvar varlang = savedLang.toString().split(\",\");\n\t\t\t\t\tvarlang.forEach(function(v){\n\t\t\t\t\t\tf.languageFilters.push(v);\n\t\t\t\t\t});\n\t\t\t\t\tkbData.setLanguage();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\t//Get data for result widget\n\t\tkbData.getResultQueryData = function(){\n\t\t\tvar data = {};\n\t\t\tdata.keyword = kbData.getKeyword();\n\t\t\tdata.language = kbData.getLanguage();\n\t\t\tdata.variables =  kbData.getResultVariableParams();\n\t\t\tdata.resource = kbData.getResource() || \"\";\n\t\t\tdata.kb_query =  f.getEncodedQuery(\"kb_knowledge\") || \"\";\n\t\t\tdata.social_query =  f.getEncodedQuery(\"kb_social_qa_question\") || \"\";\n\t\t\tdata.category_as_tree =false;\n\t\t\tif(f.variableParams.kb_category){\n\t\t\t\tdata.category_as_tree = f.variableParams.kb_category.treeData;\n\t\t\t}\n\t\t\tdata.order = kbData.getOrder()+\",\"+kbData.isOrderDesc();\n\t\t\treturn data;\n\t\t};\n\n\t\t//Get all applied filters\n\t\tkbData.getAppliedFilters = function(categoryFiltered){\n\t\t\tvar data = {};\n\t\t\tdata.keyword = kbData.getKeyword();\n\t\t\tdata.language = kbData.getLanguage();\n\t\t\tdata.portal_suffix = $rootScope.portal ? $rootScope.portal.url_suffix : \"kb\";\n\t\t\tdata.variables =  angular.copy(kbData.getVariableParams());\n\t\t\tdata.query = kbData.getQueryParams();\n\t\t\tdata.order =  kbData.getOrder()+','+kbData.isOrderDesc();\n\t\t\tdata.paginationMinCount = kbData.getPaginationMinResCount();\n\t\t\tif(categoryFiltered && data.variables && data.variables.hasOwnProperty(\"kb_category\")){\n\t\t\t\tdata.variables.kb_category['categoryFiltered'] = true;\n\t\t\t}\n\t\t\treturn data;\n\t\t};\n\n\t\t//Get all facetData\n\t\tkbData.fetchFilterData = function(categoryFiltered){\n\t\t\tvar promise = f.excecuteFilterQuery(categoryFiltered);\n\t\t\tpromise.then(f.reqSuccess,f.reqFailled);\n\t\t};\n\n\t\tf.excecuteFilterQuery = function(categoryFiltered){\n\t\t\t//Call to Rest API\n\t\t\tvar request = $http.post(\"/api/now/v1/knowledge/search/facets\", {\n\t\t\t\tparams\t: kbData.getAppliedFilters(categoryFiltered),\n\t\t\t\ttimeout\t: {}\n\t\t\t});\n\n\t\t\treturn request;\n\t\t};\n\n\t\tf.reqSuccess = function(response){\n\t\t\tif(response.data){\n\t\t\t\tvar result = response.data.result;\n\t\t\t\tif(f.cachedFacetData == null && f.breadcrumbFilters.length == 0 && !f.hasURLParams && result && result.meta && result.meta.article_count != 0){\n\t\t\t\t\tf.cachedFacetData = angular.copy(result);\n\t\t\t\t}\n\t\t\t\tf.processFacetData(result);\n\t\t\t}\n\t\t};\n\n\t\tf.reqFailled = function(response){\n\t\t\tconsole.log('Facet request failed');\n\t\t};\n\n\t\tf.processFacetData = function(data){\n\t\t\tkbData.setFacetData(data);\n\n\t\t\tif(data.meta){\n\t\t\t\tvar count = 0;\n\t\t\t\t//Update the article count text\n\t\t\t\tif(data.meta.article_count)\n\t\t\t\t\tcount =  parseInt(data.meta.article_count);\n\t\t\t\tf.article_count = count;\n\n\t\t\t\tvar pageMinResultCount = 0;\n\t\t\t\tif(data.meta.results_count)\n\t\t\t\t\tpageMinResultCount = parseInt(data.meta.results_count);\n\n\n\t\t\t\tif(data.meta.has_more_results){\n\t\t\t\t\tif(count > 100)\n\t\t\t\t\t\tcount = Math.floor(count / 10) * 10;\n\t\t\t\t\tf.article_count = count + \"+\";\n\t\t\t\t}\n\n\t\t\t\tif(f.hasURLParams){\n\t\t\t\t\tf.initBreadcrumbData(kbData.getFacetData());\n\t\t\t\t}else{\n\t\t\t\t\t//Broadcast update in article count for filter breadcrumb\n\t\t\t\t\t$rootScope.$emit('sp.kb.refresh.filter',kbData.getBreadcrumbFilters());\n\t\t\t\t}\n\n\t\t\t\t//update all facets with new data\n\t\t\t\t$rootScope.$emit('sp.kb.refresh.facet',kbData.getFacetData());\n\t\t\t\t//Broadcast update in article count for refine lable\n\t\t\t\t$rootScope.$emit('sp.kb.updated.article.count',{'count':f.article_count, 'pagMinResCount':pageMinResultCount,'selections':kbData.getBreadcrumbFilters().length});\n\n\t\t\t}\n\t\t};\n\t\t//Set initial parameters and request init load\n\t\t$rootScope.$on('sp.kb.update.initialize',function(event,data){\n\t\t\tf.initData = data;\n\t\t\tif(f.requiredFacets.length == 0) f.initialize(data);\n\t\t\telse{\n\t\t\t\ttimeout = $timeout(function(){\n\t\t\t\t\tf.initialize(data);\n\t\t\t\t},200);\n\t\t\t}\n\t\t});\n\t\t\n\t\tf.initialize = function(data){\n\t\t\tif(!f.initData) return;\n\t\t\n\t\t\tf.initData = null;\n\t\t\tf.monitorLocationChange();//Initialize monitoring location change \n\t\t\tif(data){\n\t\t\t\tkbData.setOrder(data.order);\n\t\t\t\tkbData.setOrderDesc(data.order_desc);\n\t\t\t\tif(data.minResultCount && parseInt(data.minResultCount)>0)\n\t\t\t\t\tkbData.setPaginationMinResCount(data.minResultCount);\n\t\t\t\tf.getInitFilterData();\n\t\t\t\t$rootScope.$emit('sp.kb.refresh.sortorder',{'order':kbData.getOrder(),'order_desc':kbData.isOrderDesc()});\n\t\t\t}\t\n\t\t}\n\t\t//Event thrown by facet widget on change\n\t\t//Handle change based on type single/multiple\n\t\t//update breadcrumb, result and other facet widgets\n\t\t$rootScope.$on('sp.kb.updated.facet',function(event,data){\n\t\t\tvar publish = false;\n\t\t\tif(data){\n\t\t\t\tvar dataIndex = f.getBreadcrumbIndex(data);\n\t\t\t\t//if type multi then add/remove from breadcrumb\n\t\t\t\tif(data.type == 'multi_select'){\n\t\t\t\t\tif(dataIndex < 0 && data.id && data.name && data.selected){\n\t\t\t\t\t\t//update variable selecton stack\n\t\t\t\t\t\tf.selectionStack.push(data.name);\n\t\t\t\t\t\tf.variableParams[data.name].value.push(data.id);\n\n\t\t\t\t\t\tf.breadcrumbFilters.push(data);\n\t\t\t\t\t\tpublish = true;\n\n\t\t\t\t\t}else if(!data.selected){\n\t\t\t\t\t\t//remove last variable from selecton\n\t\t\t\t\t\tif(data.name == f.selectionStack[f.selectionStack.length-1])\n\t\t\t\t\t\t\tf.selectionStack.pop();\n\t\t\t\t\t\tvar queryIndex = f.vContains(f.variableParams[data.name].value,data.id);\n\t\t\t\t\t\tif(queryIndex > -1)\n\t\t\t\t\t\t\tf.variableParams[data.name].value.splice(queryIndex,1);\n\t\t\t\t\t\tf.breadcrumbFilters.splice(dataIndex,1);\n\t\t\t\t\t\tpublish = true;\n\t\t\t\t\t}\n\n\t\t\t\t}else{\n\t\t\t\t\t//Else if type is single do nothing if already exist in breadcrumb\n\t\t\t\t\tif(dataIndex == -1){\n\t\t\t\t\t\t//update variable selecton stack\n\t\t\t\t\t\tf.selectionStack.push(data.name);\n\t\t\t\t\t\tvar nameIndex = f.getBreadcrumbIndexByName(data.name);\n\t\t\t\t\t\tif(nameIndex > -1){\n\t\t\t\t\t\t\tf.breadcrumbFilters.splice(nameIndex,1);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(data.query){\n\t\t\t\t\t\t\tif(data.name == 'resources')\n\t\t\t\t\t\t\t\tkbData.setResource(data.query);\n\t\t\t\t\t\t\tf.queryParams[data.name].value = \"\";\n\t\t\t\t\t\t\tif(data.id && data.name){\n\t\t\t\t\t\t\t\tf.queryParams[data.name].value = data.id+'';\n\t\t\t\t\t\t\t\tf.breadcrumbFilters.push(data);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}else{\n\n\t\t\t\t\t\t\tf.variableParams[data.name].value = [];\n\t\t\t\t\t\t\tif(data.name){\n\t\t\t\t\t\t\t\tf.variableParams[data.name].value.push(data.id);\n\t\t\t\t\t\t\t\tf.breadcrumbFilters.push(data);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpublish = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif(publish){\n\t\t\t\t\t$rootScope.$emit('sp.kb.refresh.result',kbData.getResultQueryData());\n\t\t\t\t\t$rootScope.$emit('sp.kb.refresh.filter',kbData.getBreadcrumbFilters());\n\t\t\t\t\tif(data.categoryFiltered)\n\t\t\t\t\t\tkbData.fetchFilterData(data.categoryFiltered);\n\t\t\t\t\telse\n\t\t\t\t\t\tkbData.fetchFilterData();\n\t\t\t\t\tf.updateFacetSelections();\n\t\t\t\t\tf.updateURLParameters();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t//Event thrown by keyword widget on change\n\t\t//update Sort, result and facet widgets\n\t\t$rootScope.$on('sp.kb.updated.keyword',function(event,data){\n\t\t\tf.resetOnKeywordChange(data);\n\t\t});\n\n\t\tf.getLanguageFiltersIndex  = function(id){\n\t\t\tfor(var i = 0;i<f.languageFilters.length;i++){\n\t\t\t\tif(f.languageFilters[i] == id){\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\t\t//Event thrown by language picker widget on change\n\t\t//update result and facet widgets\n\t\t$rootScope.$on('sp.kb.updated.language',function(event,data){\n\t\t\tvar publish = false;\n\t\t\tif(data){\n\t\t\t\tvar dataIndex = f.getLanguageFiltersIndex(data.id);\n\t\t\t\t//if type multi then add/remove from languageFilters\n\t\t\t\tif(data.type == 'multi_select'){\n\t\t\t\t\tif(dataIndex < 0 && data.id && data.name){\n\t\t\t\t\t\tf.languageFilters.push(data.id);\n\t\t\t\t\t\tpublish = true;\n\t\t\t\t\t}else if(!data.selected){\n\t\t\t\t\t\tf.languageFilters.splice(dataIndex,1);\n\t\t\t\t\t\tpublish = true;\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\t//Else if type is single do nothing if already exist in breadcrumb\n\t\t\t\t\tif(dataIndex == -1){\n\t\t\t\t\t\tf.languageFilters = [];\n\t\t\t\t\t\tf.languageFilters.push(data.id);\n\t\t\t\t\t\tpublish = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(publish){\n\t\t\t\t\tf.cachedFacetData = null;\n\t\t\t\t\tf.facetData = null;\n\t\t\t\t\tkbData.setLanguage();\n\t\t\t\t\t$rootScope.$emit('sp.kb.refresh.result',kbData.getResultQueryData());\n\t\t\t\t\t$rootScope.$emit('sp.kb.refresh.filter',kbData.getBreadcrumbFilters());\n\t\t\t\t\tkbData.fetchFilterData();\n\t\t\t\t\tf.updateFacetSelections();\n\t\t\t\t\tf.updateURLParameters();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t//Event thrown by sort widget on change\n\t\t//Set order and direction\n\t\t//update result and facet widgets\n\t\t$rootScope.$on('sp.kb.updated.sortorder',function(event,data){\n\t\t\tif(data){\n\t\t\t\tkbData.setOrder(data.id);\n\t\t\t\tkbData.setOrderDesc(data.order_desc);\n\t\t\t\t$rootScope.$emit('sp.kb.refresh.result',kbData.getResultQueryData());\n\t\t\t\tkbData.fetchFilterData();\n\t\t\t}\n\t\t});\n\n\t\t//Event thrown by selected filters widget on change\n\t\t//update result and facet widgets\n\t\t$rootScope.$on('sp.kb.updated.filter',function(event,data){\n\t\t\tif(data){\n\t\t\t\t//Handle clear All selections\n\t\t\t\tif(data == 'clearall'){\n\t\t\t\t\tf.clearAllSelections();\n\t\t\t\t}else{\n\n\t\t\t\t\tif(data.name == f.selectionStack[f.selectionStack.length-1])\n\t\t\t\t\t\tf.selectionStack.pop();\n\t\t\t\t\t//Handle removal of muti select facet option\n\t\t\t\t\tif(data.type == 'multi_select'){\n\t\t\t\t\t\tif(f.variableParams[data.name]){\n\t\t\t\t\t\t\tvar item = f.variableParams[data.name].value;\n\t\t\t\t\t\t\titem.forEach(function(i,$index){\n\t\t\t\t\t\t\t\tif(i == data.id){\n\t\t\t\t\t\t\t\t\tf.variableParams[data.name].value.splice($index,1);\n\t\t\t\t\t\t\t\t\t//break;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\t//Handle removal of single select facet option\n\n\t\t\t\t\t\tif(data.query){\n\t\t\t\t\t\t\tf.queryParams[data.name].value = \"\";\n\t\t\t\t\t\t\tif(data.name == 'resources')\n\t\t\t\t\t\t\t\tkbData.setResource(\"\");\n\t\t\t\t\t\t}else\n\t\t\t\t\t\t\tf.variableParams[data.name].value = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tvar brIndex = f.getBreadcrumbIndex(data);\n\t\t\t\t\tif(brIndex != -1)\n\t\t\t\t\t\tf.breadcrumbFilters.splice(brIndex,1);\n\n\t\t\t\t\tkbData.fetchFilterData();\n\t\t\t\t}\n\n\t\t\t\t$rootScope.$emit('sp.kb.refresh.result',kbData.getResultQueryData());\n\t\t\t\tf.updateFacetSelections();\n\t\t\t\tf.updateURLParameters();\n\t\t\t}\n\t\t});\n\n\t\t//Event thrown by facets with clear link\n\t\t//update result and facet widgets and breadcrumbs\n\t\t$rootScope.$on('sp.kb.updated.facet.selection',function(event,data){\n\t\t\tif(data){\n\t\t\t\tf.clearFacetSelectionsByName(data.name);\n\t\t\t\tkbData.fetchFilterData();\n\t\t\t\t$rootScope.$emit('sp.kb.refresh.result',kbData.getResultQueryData());\n\t\t\t\t$rootScope.$emit('sp.kb.refresh.filter',kbData.getBreadcrumbFilters());\n\t\t\t\tf.updateURLParameters();\n\t\t\t}\n\t\t});\n\n\t\t//Event thrown by langauge facet to clear the language\n\t\t$rootScope.$on('sp.kb.updated.language.selection',function(event,data){\n\t\t\tif(data){\n\t\t\t\tf.cachedFacetData = null;\n\t\t\t\tf.facetData = null;\n\t\t\t\tf.languageFilters = [];\n\t\t\t\tkbData.setLanguage();\n\t\t\t\t$rootScope.$emit('sp.kb.refresh.result',kbData.getResultQueryData());\n\t\t\t\t$rootScope.$emit('sp.kb.refresh.filter',kbData.getBreadcrumbFilters());\n\t\t\t\tkbData.fetchFilterData();\n\t\t\t\tf.updateFacetSelections();\n\t\t\t\tf.updateURLParameters();\n\t\t\t}\n\t\t});\n\n\t\t//Event thrown by Suggestion Selection\n\t\t//update the keyword and fetch the results\n\t\t$rootScope.$on('sp.kb.updated.suggestion',function (event,data){\n\t\t\tif(data){\n\t\t\t\tf.resetOnKeywordChange(data);\n\t\t\t\t$rootScope.$emit('sp.kb.refresh.keyword',{'keyword':data.keyword});\n\t\t\t}\n\t\t});\n\n\t\t$rootScope.$on('sp.kb.update.language.preferrance',function(event,data){\n\t\t\tif(data){\n\t\t\t\tf.savedLanguagePreferranceValue = data.lang;\n\t\t\t}\n\t\t});\n\t\tf.resetOnKeywordChange = function(data){\n\t\t\tif(data){\n\t\t\t\tkbData.setKeyword(data.keyword);\n\t\t\t\tif(kbData.getKeyword()!=\"\" || $rootScope.dafaultSortId != \"relevancy\"){\n\t\t\t\t\tkbData.setOrder($rootScope.dafaultSortId);\n\t\t\t\t\tkbData.setOrderDesc($rootScope.dafaultSortDesc);\n\t\t\t\t}else{\n\t\t\t\t\tkbData.setOrder('sys_view_count');\n\t\t\t\t\tkbData.setOrderDesc(true);\n\t\t\t\t}\n\t\t\t\tf.cachedFacetData = null; //clear cache on query change\n\t\t\t\tf.clearAllSelections(); // clear all filter data\n\t\t\t\t$rootScope.$emit('sp.kb.refresh.suggestion',{'keyword':kbData.getKeyword(), 'language':kbData.getLanguage()});\n\t\t\t\t$rootScope.$emit('sp.kb.refresh.sortorder',{'order':kbData.getOrder(),'order_desc':kbData.isOrderDesc()});\n\t\t\t\tf.updateURLParameters();\n\t\t\t}\n\t\t};\n\t\t//Update selections to facets to show clear links\n\t\tf.updateFacetSelections = function(){\n\t\t\tvar selectionData = {};\n\t\t\tf.breadcrumbFilters.forEach(function(key){\n\t\t\t\tif(!selectionData[key.name])\n\t\t\t\t\tselectionData[key.name] = \"selected\";\n\t\t\t});\n\t\t\t$rootScope.$emit(\"sp.kb.refresh.facet.selection\",selectionData);\n\t\t};\n\n\t\t//Clear All Selections\n\t\tf.clearAllSelections = function(){\n\t\t\tf.breadcrumbFilters = [];\n\n\t\t\tangular.forEach(f.variableParams, function(obj, key) {\n\t\t\t\tif(obj.value.length > 0)\n\t\t\t\t\tf.variableParams[key].value = [];\n\t\t\t});\n\n\t\t\tangular.forEach(f.queryParams, function(obj, key) {\n\t\t\t\tif(obj.value != \"\")\n\t\t\t\t\tf.queryParams[key].value = \"\";\n\t\t\t});\n\n\t\t\tangular.forEach(f.facetData, function(value, key) {\n\t\t\t\tif(key != \"meta\")\n\t\t\t\t\tf.facetData[key] = [];\n\t\t\t});\n\n\t\t\tif(f.cachedFacetData != null){\n\t\t\t\tf.processFacetData(f.cachedFacetData);\n\t\t\t}else{\n\t\t\t\t//update all facets with new data\n\t\t\t\t$rootScope.$emit('sp.kb.refresh.facet',kbData.getFacetData());\n\t\t\t\t$rootScope.$emit('sp.kb.refresh.result',kbData.getResultQueryData());\n\n\t\t\t\tf.hasURLParams = false;\n\t\t\t\tkbData.fetchFilterData();\n\t\t\t\tf.updateFacetSelections();\n\t\t\t\t$rootScope.$emit('sp.kb.refresh.filter',kbData.getBreadcrumbFilters());\n\n\t\t\t\t//Broadcast update in article count for refine lable\n\t\t\t\t$rootScope.$emit('sp.kb.updated.article.count',{'count':'','loading':true});\n\t\t\t}\n\n\t\t\tf.selectionStack=[];\n\n\t\t\tkbData.setResource(\"\");\n\t\t};\n\n\t\t//Clear given facet Selections\n\t\tf.clearFacetSelectionsByName = function(name){\n\t\t\tf.breadcrumbFilters.slice().reverse().forEach(function(item, index, object) {\n\t\t\t\tif (item.name === name) {\n\t\t\t\t\tf.breadcrumbFilters.splice(object.length - 1 - index, 1);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif(f.selectionStack[f.selectionStack.length-1] == name){\n\t\t\t\tf.selectionStack.pop();\n\t\t\t}\n\n\t\t\tif(f.variableParams[name])\n\t\t\t\tf.variableParams[name].value = [];\n\t\t\tif(f.queryParams[name])\n\t\t\t\tf.queryParams[name].value = \"\";\n\n\t\t\tf.selectionStack.forEach(function(key, index, object){\n\t\t\t\tif(key == name)\n\t\t\t\t\tobject.slice(index,1);\n\t\t\t});\n\t\t\tif(name == 'resources'){\n\t\t\t\tkbData.setResource(\"\");\n\t\t\t}\n\t\t};\n\n\t\t//Reset All Selections\n\t\tf.restAllSelections = function(){\n\t\t\tf.breadcrumbFilters = [];\n\t\t\tf.urlParameterValues = {};\n\n\t\t\tangular.forEach(f.variableParams, function(obj, key) {\n\t\t\t\tif(obj.value.length > 0)\n\t\t\t\t\tf.variableParams[key].value = [];\n\t\t\t});\n\n\t\t\tangular.forEach(f.queryParams, function(obj, key) {\n\t\t\t\tif(obj.value != \"\")\n\t\t\t\t\tf.queryParams[key].value = \"\";\n\t\t\t});\n\n\t\t\tangular.forEach(f.facetData, function(value, key) {\n\t\t\t\tif(key != \"meta\")\n\t\t\t\t\tf.facetData[key] = [];\n\t\t\t});\n\n\t\t\tf.selectionStack=[];\n\t\t\tf.keyword = \"\";\n\t\t\tf.language = \"\";\n\t\t\tf.languageFilters = [];\n\t\t\tf.pageID = \"\";\n\n\t\t\tkbData.setResource(\"\");\n\t\t};\n\n\t\t//Resolves if given facet should refresh with new data based on recent selections\n\t\tkbData.canUpdateFacet = function(value,oldData,newData,isCurrentFacetFiltered){\n\t\t\tif(isCurrentFacetFiltered)\n\t\t\t\treturn false;\n\n\t\t\tif(newData.length == 0 || oldData.length < newData.length || f.selectionStack[f.selectionStack.length-1] != value)\n\t\t\t\treturn true;\n\n\t\t\treturn false;\n\t\t};\n\n\t\t//Used in facets to update their previous selection on change\n\t\tkbData.setSelections = function(items,dataSet){\n\t\t\tangular.forEach(items, function(iv, ik) {\n\t\t\t\tiv.selected = false;\n\t\t\t\tangular.forEach(dataSet, function(dv, dk) {\n\t\t\t\t\tif(iv.id == dv.id && dv.selected)\n\t\t\t\t\t\tiv.selected = true;\n\t\t\t\t});\n\t\t\t});\n\n\t\t\treturn items;\n\t\t};\n\n\t\tf.initWithURLParams = function(){\n\t\t\tvar urlParams = $location.search();\n\n\t\t\t//Set page id to validate change in page\n\t\t\tif(f.pageID == \"\")\n\t\t\t\tf.pageID = urlParams.id;\n\n\t\t\t//Only apply url changes if page is same\n\t\t\tif(f.pageID != urlParams.id)\n\t\t\t\treturn;\n\n\t\t\tangular.forEach(urlParams, function(value, key) {\n\n\t\t\t\tif(f.urlActualParams[key] || f.urlAltParams[key]){\n\t\t\t\t\tf.hasURLParams = true;\n\n\t\t\t\t\tif(f.urlAltParams[key]){\n\t\t\t\t\t\tf.urlActualParams[f.urlAltParams[key]] = key;\n\t\t\t\t\t\tkey = f.urlAltParams[key];\n\t\t\t\t\t}\n\n\t\t\t\t\tif(key == \"query\"){\n\t\t\t\t\t\tf.keyword = value;\n\t\t\t\t\t\t$rootScope.keyword = value;\n\n\t\t\t\t\t}else if(key == \"language\" && !f.variableParams[key]){\n\t\t\t\t\t\tif(value){\n\t\t\t\t\t\t\tvar varlang = value.toString().split(\",\");\n\t\t\t\t\t\t\tvarlang.forEach(function(v){\n\t\t\t\t\t\t\t\tf.languageFilters.push(v);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tkbData.setLanguage();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}else if(f.variableParams[key]){\n\t\t\t\t\t\tif(value){\n\t\t\t\t\t\t\tvar varVal = value.toString().split(\",\");\n\t\t\t\t\t\t\tf.urlParameterValues[key] = [];\n\t\t\t\t\t\t\tvarVal.forEach(function(v){\n\t\t\t\t\t\t\t\tif(v == \"-1\")\n\t\t\t\t\t\t\t\t\tv = 'NULL_VALUE';\n\n\t\t\t\t\t\t\t\tf.variableParams[key].value.push(v);\n\t\t\t\t\t\t\t\tf.urlParameterValues[key].push(v);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}else  if(f.queryParams[key]){\n\t\t\t\t\t\tif(value){\n\t\t\t\t\t\t\tvar varQry = value.toString().split(\",\");\n\t\t\t\t\t\t\tvarQry.forEach(function(v){\n\t\t\t\t\t\t\t\tf.queryParams[key].value = value;\n\t\t\t\t\t\t\t\tf.urlParameterValues[key] = value;\n\t\t\t\t\t\t\t\tif(key==\"resources\")\n\t\t\t\t\t\t\t\t\tf.resource = value;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//else if(key != \"id\" && key != \"spa\" && key != \"sysparm_kb_search_table\"){\n\t\t\t\t\t//$location.search(key,null);\n\t\t\t\t//}\n\t\t\t});\n\t\t};\n\n\t\tf.findElement = function(data,tarId){\n\t\t\tvar returnval = \"\";\n\t\t\tfor(var i=0;i<data.length;i++){\n\t\t\t\treturnval = f.findNestedElement(data[i],tarId);\n\t\t\t\tif(returnval!=\"\"){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn returnval;\n\t\t};\n\n\t\tf.findNestedElement = function(item,tarId){\n\t\t\tvar returnval = \"\";\n\t\t\tif(item.id==tarId.toLowerCase()){\n\t\t\t\treturnval=angular.copy(item);\n\t\t\t\treturnval.childs = [];\n\t\t\t}else if(item.childs.length>0){\n\t\t\t\tfor(var i=0;i<item.childs.length;i++){\n\t\t\t\t\treturnval = f.findNestedElement(item.childs[i],tarId);\n\t\t\t\t\tif(returnval!=\"\"){\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn returnval;\n\t\t};\n\t\tf.initBreadcrumbData = function(data){\n\t\t\tf.breadcrumbFilters = [];\n\t\t\tvar urlParmApplied = false;\n\t\t\tangular.forEach(f.urlParameterValues, function(value, key) {\n\t\t\t\tvar facetData = data[key];\n\t\t\t\tif(key == \"kb_category\" && f.variableParams[key].treeData == true ){\n\t\t\t\t\tfacetData = data.meta.categoryTree;\n\t\t\t\t}\n\t\t\t\turlParmApplied = true;\n\t\t\t\tif(facetData && facetData.length > 0){\n\t\t\t\t\tif(key == \"kb_category\" && f.variableParams[key].treeData ==true){\n\t\t\t\t\t\tif($.isArray(value)){\n\t\t\t\t\t\t\tvalue.forEach(function(v){\n\t\t\t\t\t\t\t\tvar catItem =  f.findElement(facetData,v);\n\t\t\t\t\t\t\t\tif(catItem!=\"\"){\n\t\t\t\t\t\t\t\t\tcatItem.name = key;\n\t\t\t\t\t\t\t\t\tcatItem.type = f.faceTypeMap[key];\n\t\t\t\t\t\t\t\t\tf.selectionStack.push(key);\n\t\t\t\t\t\t\t\t\tf.breadcrumbFilters.push(catItem);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\tfacetData.forEach(function(k) {\n\t\t\t\t\t\t\tvar fd = angular.copy(k);\n\t\t\t\t\t\t\tif($.isArray(value)){\n\t\t\t\t\t\t\t\tvalue.forEach(function(v){\n\t\t\t\t\t\t\t\t\tif(fd.id == v){\n\t\t\t\t\t\t\t\t\t\tif(v == \"NULL_VALUE\")\n\t\t\t\t\t\t\t\t\t\t\tfd.label = f.variableParams[key].title +\" \"+fd.label;\n\t\t\t\t\t\t\t\t\t\tfd.name = key;\n\t\t\t\t\t\t\t\t\t\tfd.type = f.faceTypeMap[key];\n\t\t\t\t\t\t\t\t\t\tf.selectionStack.push(key);\n\t\t\t\t\t\t\t\t\t\tf.breadcrumbFilters.push(fd);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tif(fd.id == value || (key==\"resources\" && fd.query == value)){\n\t\t\t\t\t\t\t\t\tif(value == \"NULL_VALUE\")\n\t\t\t\t\t\t\t\t\t\tfd.label = f.variableParams[key].title +\" \"+fd.label;\n\t\t\t\t\t\t\t\t\tfd.name = key;\n\t\t\t\t\t\t\t\t\tf.selectionStack.push(key);\n\t\t\t\t\t\t\t\t\tf.breadcrumbFilters.push(fd);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif(urlParmApplied && f.breadcrumbFilters.length == 0){\n\t\t\t\tvar urlFilter = [];\n\t\t\t\tvar obj = {};\n\t\t\t\tobj.label = 'kb_clear_url_filter';\n\t\t\t\tobj.id = \"kb_clear_url_filter\";\n\t\t\t\tobj.type = \"single_select\";\n\t\t\t\tobj.name = \"clear_all\";\n\t\t\t\turlFilter.push(obj);\n\t\t\t\t$rootScope.$emit('sp.kb.refresh.filter',urlFilter);\n\t\t\t}else{\n\t\t\t\t$rootScope.$emit('sp.kb.refresh.filter',kbData.getBreadcrumbFilters());\n\t\t\t}\n\t\t\tf.hasURLParams = false;\n\t\t\tf.updateFacetSelections();\n\t\t};\n\n\t\t//update url on facet selection\n\t\tf.updateURLParameters = function(){\n\t\t\t$location.search(\"spa\",\"1\");\n\t\t\t$rootScope.refreshKBPage = false;\n\n\t\t\tif(f.keyword){\n\t\t\t\t$location.search(f.urlActualParams[\"query\"],f.keyword);\n\t\t\t}else{\n\t\t\t\t$location.search(f.urlActualParams[\"query\"],null);\n\t\t\t}\n\n\t\t\tif(f.language){\n\t\t\t\t$location.search(f.urlActualParams[\"language\"],f.language);\n\t\t\t}else{\n\t\t\t\t$location.search(f.urlActualParams[\"language\"],null);\n\t\t\t}\n\n\t\t\tangular.forEach(f.variableParams, function(obj, key) {\n\t\t\t\tif(obj.value.length > 0){\n\t\t\t\t\t$location.search(f.urlActualParams[key],obj.value.join());\n\t\t\t\t}else{\n\t\t\t\t\t$location.search(f.urlActualParams[key],null);\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\tangular.forEach(f.queryParams, function(obj, key) {\n\t\t\t\tif(obj.value != \"\"){\n\t\t\t\t\t$location.search(f.urlActualParams[key],obj.value);\n\t\t\t\t}else{\n\t\t\t\t\t$location.search(f.urlActualParams[key],null);\n\t\t\t\t}\n\n\t\t\t});\n\t\t\tif (window && window.parent && window.parent.NOW && window.parent.NOW.CustomEvent && window.parent.NOW.CustomEvent.fireTop) {\n\t\t\t    window.parent.NOW.CustomEvent.fireTop(\n\t\t\t        'magellanNavigator.permalink.set', {\n\t\t\t            title: window.document.title,\n\t\t\t            relativePath: $location.$$url\n\t\t\t        }\n\t\t\t    );\n\t\t\t}\n\n\t\t};\n\n\t\t//validate breadcrumb object for new entry and return index if found\n\t\tf.getBreadcrumbIndex = function(entry){\n\n\t\t\tfor(var i = 0;i<f.breadcrumbFilters.length;i++){\n\t\t\t\tif(f.breadcrumbFilters[i].name == entry.name && f.breadcrumbFilters[i].label == entry.label && f.breadcrumbFilters[i].id == entry.id){\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\n\t\t//Validate breadcrumb object for new entry based on name only and return index if found\n\t\tf.getBreadcrumbIndexByName = function(key){\n\t\t\tfor(var i = 0;i<f.breadcrumbFilters.length;i++){\n\t\t\t\tif(f.breadcrumbFilters[i].name == key){\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\n\t\t//Check if object contains key\n\t\tf.vContains = function(data, id){\n\t\t\tfor(var i = 0;i<data.length;i++){\n\t\t\t\tif(data[i] == id){\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\n\t\t//Generate encoded query from qury paramets and return string\n\t\tf.getEncodedQuery = function(type){\n\t\t\tvar encodedeQuery = [];\n\t\t\tangular.forEach(f.queryParams, function(value, key) {\n\t\t\t\tif(key != 'resources' && value.value && value.filters){\n\t\t\t\t\tvalue.filters.forEach(function(v){\n\t\t\t\t\t\tif(value.value.toLowerCase() === v.id.toLowerCase()){\n\t\t\t\t\t\t\tv.query.forEach(function(qv){\n\t\t\t\t\t\t\t\tif(qv.table == \"\" || qv.table === type)\n\t\t\t\t\t\t\t\t\tencodedeQuery.push(qv.value);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn encodedeQuery.join(\"^\");\n\t\t};\n\n\t\t//return variable raram data for results\n\t\tkbData.getResultVariableParams = function(){\n\t\t\tvar obj = {};\n\t\t\tangular.forEach(kbData.getVariableParams(), function(value, key) {\n\t\t\t\tobj[key] = value.value;\n\t\t\t}, obj);\n\n\t\t\treturn obj;\n\t\t};\n\n\t\t//Getters & Setters for service variables\n\t\tkbData.getKeyword = function(){\n\t\t\treturn f.keyword;\n\t\t};\n\n\t\tkbData.getOrder = function(){\n\t\t\treturn f.order;\n\t\t};\n\n\t\tkbData.isOrderDesc = function(){\n\t\t\treturn f.order_desc;\n\t\t};\n\n\t\tkbData.getLanguage = function(){\n\n\t\t\treturn f.language;\n\t\t};\n\n\t\tkbData.getFacetData = function(){\n\t\t\treturn f.facetData;\n\t\t};\n\n\t\tkbData.getVariableParams = function(){\n\t\t\treturn f.variableParams;\n\t\t};\n\n\t\tkbData.getVariableParamsByID = function(value){\n\t\t\treturn f.variableParams[value];\n\t\t};\n\n\t\tkbData.getQueryParams = function(){\n\t\t\treturn f.queryParams;\n\t\t};\n\n\t\tkbData.getBreadcrumbFilters = function(){\n\t\t\treturn f.breadcrumbFilters;\n\t\t};\n\n\t\tkbData.setKeyword = function(value){\n\t\t\tf.keyword = value;\n\t\t};\n\n\t\tkbData.setOrder = function(value){\n\t\t\tf.order = value;\n\t\t};\n\n\t\tkbData.setOrderDesc = function(value){\n\t\t\tf.order_desc = value;\n\t\t};\n\n\t\tkbData.setLanguage = function(){\n\t\t\tvar langStr = \"\";\n\t\t\tif(f.languageFilters && f.languageFilters.length>0){\n\t\t\t\tlangStr = f.languageFilters.join(\",\");\n\t\t\t}\n\t\t\tf.language = langStr;\n\t\t};\n\n\t\tkbData.setFacetData = function(value){\n\t\t\tf.facetData = value;\n\t\t};\n\t\tkbData.getResource = function(){\n\t\t\treturn f.resource;\n\t\t};\n\t\tkbData.setResource = function(value){\n\t\t\tf.resource = value;\n\t\t};\n\t\tkbData.setPaginationMinResCount = function(value){\n\t\t\tf.paginationMinResCount = value;\n\t\t};\n\t\tkbData.getPaginationMinResCount = function(){\n\t\t\treturn f.paginationMinResCount;\n\t\t};\n\t\tkbData.unRegisterServiceEvents = function(){\n\t\t\tf.unRegLocationChange();\n\t\t};\n\n\t\treturn kbData;\n\n\t}]);","sys_class_name":"sys_ui_script","sys_id":"9e466496db00320099f93691f0b8f507","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/bab6dea3db20320099f93691f0b8f590","value":"bab6dea3db20320099f93691f0b8f590"},"ui_type":"0","sys_update_name":"sys_ui_script_9e466496db00320099f93691f0b8f507","sys_updated_by":"admin","sys_created_on":"2017-01-03 08:57:01","name":"sn_km_portal.Knowledge Portal Service","sys_name":"sn_km_portal.Knowledge Portal Service","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/bab6dea3db20320099f93691f0b8f590","value":"bab6dea3db20320099f93691f0b8f590"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"3","active":"true","description":"Function cancellablePromise.","use_scoped_format":"false","global":"false","sys_updated_on":"2022-09-27 13:43:40","sys_tags":"","script_name":"","script":"(function () {\n\t'use strict';\n\n\tangular.module('sn.itsm.vcab.common')\n\t.factory('cancellablePromise', function ($q) {\n\t\treturn function (promise) {\n\t\t\tvar cancelled = false;\n\t\t\tvar proxyPromise = $q(function (resolve, reject) {\n\t\t\t\tpromise.then(function (r) {\n\t\t\t\t\tif (!cancelled)\n\t\t\t\t\t\tresolve(r);\n\t\t\t\t}, function (r) {\n\t\t\t\t\tif (!cancelled)\n\t\t\t\t\t\treject(r);\n\t\t\t\t});\n\t\t\t});\n\t\t\tproxyPromise.cancel = function () {\n\t\t\t\tcancelled = true;\n\t\t\t};\n\t\t\treturn proxyPromise;\n\t\t};\n\t});\n} ());","sys_class_name":"sys_ui_script","sys_id":"9f1c4cec53ce1110a6f8ddeeff7b122a","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/3b83a3f304312210559073c06a02f788","value":"3b83a3f304312210559073c06a02f788"},"ui_type":"0","sys_update_name":"sys_ui_script_9f1c4cec53ce1110a6f8ddeeff7b122a","sys_updated_by":"admin","sys_created_on":"2022-09-16 16:09:41","name":"clone_calendar_vcom.cancellablePromise","sys_name":"clone_calendar_vcom.cancellablePromise","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"1","active":"true","description":"Proxy for \"g_scratchpad\" for server-side execution of client scripts","use_scoped_format":"false","global":"false","sys_updated_on":"2024-01-28 13:43:25","sys_tags":"","script_name":"GlideScratchpadProxy","script":"/**\n * Currently, the approach for proxying 'g_scratchpad' is this:\n * \n * Manually run the \"before_display\" business rules for a given collection (table). \n * We use GlideScopedEvaluator for this\n * Inject a temporary object named as 'g_scratchpad' in that evaluator context \n * When the display BRs execute, they (can) set data on our 'g_scratchpad' object\n * \n * However, this proxy 'g_scratchpad' isn't functionally same as the g_scratchpad you have on a Form.\n * Main difference is that the 'g_scratchpad' of a Form lives until the Form page is open, and this proxy\n * 'g_scratchpad' is only limited to the life of the current Glide transaction.\n * \n * In a Form page, multiple client scripts can access the same scratchpad object, share data by writing on it.\n * \n * But when executing the client scripts on the server, we only do that for a single action, \n * like \"onChange\" of a \"assigned_to\" field. This is a single transasction.\n * A 'g_scratchpad' can be built in the transaction, but it will only live in that transaction. \n * The next time you want to run some other client scripts, say \"onChange\" of \"state\", or \"onSubmit\",\n * we would do that in a new Glide transaction, where the same \"g_scratchpad\" object will not be available.\n */\nfunction ScratchpadProxy(tableName, sysId) {\n\tif (!tableName || !sysId) {\n\t\tthrow 'g_scratchpad proxy: tableName or sysId is missing';\n\t}\n\n\tvar BR_TABLE = 'sys_script';\n\tvar SCRIPT_FIELD = 'script';\n\n\tvar scratchpad = {};\n\n\tfunction executeDisplayBRs(dataRecord) {\n\t\tvar brRecord = new GlideRecord(BR_TABLE);\n\t\tbrRecord.addQuery('active', true);\n\t\tbrRecord.addQuery('advanced', true); // only advanced BRs will have script (i.e., g_scratchpad usage)\n\t\tbrRecord.addQuery('when', 'before_display');\n\t\tbrRecord.addQuery('collection', tableName);\n\t\tbrRecord.query();\n\t\twhile (brRecord.next()) {\n\t\t\t_execute_(dataRecord, brRecord);\n\t\t}\n\t}\n\n\tfunction _execute_(dataRecord, brRecord) {\n\t\tvar gse = new GlideScopedEvaluator();\n\t\tvar result = gse.evaluateScript(brRecord, SCRIPT_FIELD, {\n\t\t\tcurrent: dataRecord,\n\t\t\tprevious: dataRecord,\n\t\t\tg_scratchpad: scratchpad // display business rules will 'write' here\n\t\t});\n\t\treturn result;\n\t}\n\n\tfunction queryDataRecord() {\n\t\tvar gr = new GlideRecord(tableName);\n\t\tif (gr.get(sysId))\n\t\t\treturn gr;\n\t\treturn null;\n\t}\n\n\tvar dataGr = queryDataRecord();\n\tif (dataGr)\n\t\texecuteDisplayBRs(dataGr);\n\t\n\tvar self = this;\n\tObject.keys(scratchpad).forEach(function(k) {\n\t\tthis[k] = scratchpad[k];\n\t});\n}\n\n// var g_scratchpad = new ScratchpadProxy();\n\n// TBD - initialize 'g_scratchpad' on the global context\ncsGlobals['g_scratchpad'] = new ScratchpadProxy(csInputs.tableName, csInputs.sysId);","sys_class_name":"sys_ui_script","sys_id":"9f8cd9c043c40210d0526bdbd4b8f237","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/4c8e6ff304752210559073c06a02f7c4","value":"4c8e6ff304752210559073c06a02f7c4"},"ui_type":"10","sys_update_name":"sys_ui_script_9f8cd9c043c40210d0526bdbd4b8f237","sys_updated_by":"admin","sys_created_on":"2024-01-25 11:46:46","name":"global.GlideScratchpadProxy","sys_name":"global.GlideScratchpadProxy","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"14","active":"true","description":"Support for Ratings","use_scoped_format":"false","global":"false","sys_updated_on":"2025-06-05 05:18:18","sys_tags":"","script_name":"","script":"addLoadEvent(loadStars);\n\nfunction loadStars() {\n\tvar vote = document.getElementById('vote');\n\tif (vote) {\n\t\tstar1 = new Image();\n\t\tstar1.src = \"images/icons/kb_star_off.gifx\";\n\t\tstar2 = new Image();\n\t\tstar2.src = \"images/icons/kb_star_on.gifx\";\n\t\tstarFull = new Image();\n\t\tstarFull.src = \"images/icons/kb_star_full.gifx\";\n\t\tstarHalf = new Image();\n\t\tstarHalf.src = \"images/icons/kb_star_half.gifx\";\n\t}\n}\n\nfunction postUsed() {\n\tvar ajax = new GlideAjax(\"RatingUtilsAJAX\");\n\tajax.addParam(\"sysparm_name\",\"setRating\");\n\tajax.addParam(\"sysparm_table\", document.getElementById(\"table\").value);\n\tajax.addParam(\"sysparm_recordId\", document.getElementById(\"recordId\").value);\n\tajax.addParam(\"sysparm_userId\", document.getElementById(\"userId\").value);\n\tajax.addParam(\"sysparm_rating\", document.getElementById(\"rated_value\").value);\n\tajax.addParam(\"sysparm_comment\", document.getElementById(\"rated_comment\").value);\n\tajax.addParam(\"sysparm_like\", \"false\");\n\tajax.getXML(function(serverResponse) {});\n}\n\nvar answer = new GwtMessage().getMessages([\"Not rated\", \"Rated\", \"Rating\", \"by you\", \"average\", \"user rating\", \"user ratings\"]);\n\nfunction setStar(x) {\n\ta = x + \"\";\n\tset=true;\n\tgel('vote').innerHTML = answer[\"Rated\"] + \" \" + x + \"/5 \" + answer[\"by you\"];\n\tgel('rated_value').value = x;\n\tpostUsed();\n}\n\nfunction setComment() {\n\tset=true;\n\tgel('rated_value').value = document.getElementById(\"rating_value\").value;\n\tpostUsed();\n}\n\nvar set=false;\nvar v=0;\nvar a;\n\nfunction highlight(x) {\n\tfor (i=1;i<6;i++) {\n\t\tif (i < x * 1 + 1)\n\t\t\tdocument.getElementById(i).src = star2.src;\n\t\telse\n\t\t\tdocument.getElementById(i).src = star1.src;\n\t}\n\tdocument.getElementById('vote').innerHTML = answer[\"Rating\"] + \": \" + x + \"/5\";\n}\n\nfunction losehighlight() {\n\tvar vote = gel('vote');\n\tvar num = gel(\"num_ratings\").value * 1;\n\tvar rating = gel(\"rating_value\").value * 1;\n\tif (set == false) {\n\t\tfor (i=1;i<6;i++) {\n\t\t\tif (rating > i - 0.25)\n\t\t\t\tdocument.getElementById(i).src=starFull.src;\n\t\t\telse if (rating > i - 0.75)\n\t\t\t\tdocument.getElementById(i).src=starHalf.src;\n\t\t\telse\n\t\t\t\tdocument.getElementById(i).src=star1.src;\n\t\t}\n\t\tif (rating == 0)\n\t\t\tvote.innerHTML = answer[\"Not rated\"];\n\t\telse\n\t\t\tvote.innerHTML = answer[\"Rated\"] + \" \" + rating.toFixed(2);\n\t\tif (num == 1)\n\t\t\tvote.title = num + \" \" + answer[\"user rating\"];\n\t\telse\n\t\t\tvote.title = num + \" \" + answer[\"user ratings\"];\n\t} else {\n\t\tvar rated = gel(\"rated_value\").value * 1;\n\t\tfor (i=1;i<6;i++) {\n\t\t\tif (i <= rated)\n\t\t\t\tdocument.getElementById(i).src = star2.src;\n\t\t\telse\n\t\t\t\tdocument.getElementById(i).src = star1.src;\n\t\t}\n\t\tvote.innerHTML = answer[\"Rated\"] + \" \" + rated + \"/5 \" + answer[\"by you\"];\n\t\tvar totalScore = rating * num + rated;\n\t\tvar totalRatings = num * 1 + 1;\n\t\tif (totalRatings == 1)\n\t\t\tvote.title = (totalScore/totalRatings).toFixed(2) + \" \" + answer[\"average\"] + \", \" + totalRatings + \" \" + answer[\"user rating\"];\n\t\telse\n\t\t\tvote.title = (totalScore/totalRatings).toFixed(2) + \" \" + answer[\"average\"] + \", \" + totalRatings + \" \" + answer[\"user ratings\"];\n\t}\n}","sys_class_name":"sys_ui_script","sys_id":"a0de7331d7101100158ba6859e610329","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/3da7677f04b12210559073c06a02f701","value":"3da7677f04b12210559073c06a02f701"},"ui_type":"0","sys_update_name":"sys_ui_script_a0de7331d7101100158ba6859e610329","sys_updated_by":"system","sys_created_on":"2013-10-09 20:14:09","name":"RatingsFunctions","sys_name":"RatingsFunctions","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"2","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2023-03-20 12:39:34","sys_tags":"","script_name":"landing_tabs","script":"var app = angular.module(\"sn.chg_model_ui.landing\");\napp.directive(\"snLandingTabs\", function($window, urlTools) {\n    \"use strict\";\n    return {\n      replace : true,\n      restrict : \"E\",\n      templateUrl : urlTools.getPartialURL(\"sn_chg_model_ui_cmu_landing_tabs.xml\", \"v=\" + $window.NOW.macro_flush_stamp)\n    };\n});\n","sys_class_name":"sys_ui_script","sys_id":"a1248ebc53d350100999ddeeff7b12e3","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/bb9f15345332101034d1ddeeff7b12c8","value":"bb9f15345332101034d1ddeeff7b12c8"},"ui_type":"0","sys_update_name":"sys_ui_script_a1248ebc53d350100999ddeeff7b12e3","sys_updated_by":"admin","sys_created_on":"2020-09-14 14:06:29","name":"sn_chg_model_ui.landing_tabs","sys_name":"sn_chg_model_ui.landing_tabs","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/bb9f15345332101034d1ddeeff7b12c8","value":"bb9f15345332101034d1ddeeff7b12c8"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"227","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2025-06-05 05:18:18","sys_tags":"","script_name":"","script":"var CertificationTemplateUtils = {\n\tisNewUI: true,\n\tfilter: null,\n\tfieldName: \"condition\",\n\tdependent: \"table\",\n\tdependentTable: null,\n\tcertTemplateTable: null,\n\tdependentTableRelatedLists: null,\n\tdependentTableRelatedListsJSON: null,\n\trestrictedFields: null,\n\textendedOps: \"\",\n\tusageCtx: \"element_conditions\",\n\tsingleRow: \"true\",\n\tsysId: null,\n\tisRelationship: {},\n\trelTypeTable: {},\n\treverseRestriction: \"true\",\n\tallTables: [],\n\t_errorMessageShown: false,\n\t_editingRecordId: null,\n\t_editingTable: null,\n\t_relatedListTable: null,\n\t_updatedConds: {},\n\t_deletedConds: {},\n\t_newConds: {},\n\t_tempNewCond: null,\n\t_onAdds: [],\n\t_onDeletes: [],\n\t_onBeforeUnDeletes: [],\n\t_onUpdates: [],\n\t_operators: [],\n\t_relatedListSelectEl: null,\n\t_relatedListNotSelected: false,\n\tauditTypeTables: {\n\t\t'desired_state': [\n\t\t    'cert_attr_cond', \n\t\t    'cert_ci_rel_cond', \n\t\t    'cert_user_rel_cond', \n\t\t    'cert_group_rel_cond',\n\t\t\t'cert_related_list_cond'\n\t\t],\n\t\t'data_cert': ['cert_attr_cond'],\n\t\t'arch_cert': ['cert_attr_cond', 'cert_related_list_cond'],\n\t\t'comp_cert': ['cert_attr_cond', 'cert_related_list_cond']\n\t},\n\t\n\taddCondition: function(target, condTable) {\n\t\tthis.cancelFilter();\n\t\t\n\t\tvar newCondId = guid();\n\t\tthis._tempNewCond = condTable + \"_\" + newCondId;\n\t\ttarget.onclick = null;\n\t\tvar row = target.parentNode.parentNode;\n\t\t\n\t\tvar clone = row.cloneNode(true);\n\t\tthis._clone = clone;\n\t\tthis._observeInsert(condTable, false);\n\t\t\n\t\tvar filterSpan = this._createFilterDOM(row, condTable, newCondId);\n\t\tthis.editCondition(filterSpan, condTable, newCondId, true);\n\t},\n\t\n\tgetDescriptorPrefix: function(condTable) {\n\t\tvar result = '';\n\t\tswitch(condTable) {\n\t\t\tcase 'cert_user_rel_cond':\n\t\t\t\tresult = 'sys_user';\n\t\t\t\tbreak;\n\t\t\tcase 'cert_group_rel_cond':\n\t\t\t\tresult = 'sys_user_group';\n\t\t\t\tbreak;\n\t\t}\n\t\treturn result;\n\t},\n\t\n\t_getTargetTable: function(condTable) {\n\t\tvar result = '';\n\t\tswitch(condTable) {\n\t\t\tcase 'cert_user_rel_cond':\n\t\t\t\tresult = 'sys_user';\n\t\t\t\tbreak;\n\t\t\tcase 'cert_group_rel_cond':\n\t\t\t\tresult = 'sys_user_group';\n\t\t\t\tbreak;\n\t\t\tcase 'cert_ci_rel_cond':\n\t\t\t\tresult = 'cmdb_ci';\n\t\t\t\tbreak;\n\t\t}\n\t\treturn result;\n\t},\n\t\n\teditCondition: function(target, condTable, condId, addRelatedList) {\n\t\tif(this.filter || this._relatedListNotSelected)\n\t\t\tthis.cancelFilter();\n\n \t\t// to allow Related Fields \n\t\tfilterExpanded = true;\n\n\t\tthis._editingRecordId = condId;\n\t\tthis._editingTable = condTable;\n\t\t\n\t\tvar cond = target.getAttribute('data');\n\t\t\n\t\tvar field = condTable + \"_\" + condId;\n\t\tif(field in this._deletedConds)\n\t\t\treturn;\n\t\t\n\t\tvar selectWidgetEl = null;\n\t\tif(addRelatedList && condTable == 'cert_related_list_cond') {\n\t\t\tselectWidgetEl = this._createRelatedListSelectWidget();\n\t\t} else if(condTable != 'cert_related_list_cond' && this.certTemplateTable != null)\n\t\t\tthis.dependentTable = this.certTemplateTable;\n\t\t\n\t\tvar content = this._createWidget(condTable, cond);\n\t\tvar controls = this._createControls();\n\t\t\n\t\ttarget.style.display = \"none\";\n\t\tvar filterHolderId = \"cert_condition_filter_\" + condTable + \"_\" + condId;\n\t\tvar filterHolder = gel(filterHolderId);\n\t\tfilterHolder.appendChild(content);\n\t\tfilterHolder.style.display = \"\";\n\t\t\n\t\tvar controlHolderId = \"cert_condition_controls_\" + condTable + \"_\" + condId;\n\t\tvar controlHolder = gel(controlHolderId);\n\t\tcontrolHolder.appendChild(controls);\n\t\tcontrolHolder.style.display = \"\";\n\t\t\n\t\tvar descriptor = target.getAttribute('descriptor');\n\t\tvar prefix = this.getDescriptorPrefix(condTable);\n\t\tthis._createFilter(condTable, condId, cond, descriptor, prefix);\n\t\t\n\t\tif(addRelatedList && condTable == 'cert_related_list_cond') {\n\t\t\t//Add widget for related lists to the filter\n\t\t\tvar filterHolderId = \"cert_condition_filter_\" + this._editingTable + \"_\" + this._editingRecordId;\n\t\t\tvar filterHolderEl = gel(filterHolderId); \n\t\t\tvar parentFilterHolderEl = filterHolderEl.parentElement != null? (filterHolderEl.parentElement.parentElement) : null;\n\t\t\tif (parentFilterHolderEl != null && selectWidgetEl != null) {\n\t\t\t\tvar checked = target.getAttribute('checked');\n\t\t\t\tvar quantifier = this._createQuantifier(condId, checked);\n\t\t\t\tparentFilterHolderEl.insertBefore(quantifier, parentFilterHolderEl.firstChild);\n\t\t\t\tparentFilterHolderEl.insertBefore(selectWidgetEl, parentFilterHolderEl.firstChild);\n\t\t\t}\n\t\t\tthis._relatedListNotSelected = true;\n\t\t} \n\t},\n\t\n\t_createQuantifier: function(condId, checked) {\n\t    var wrapper = cel('td');\n\t    var span = cel('span');\n\t    wrapper.appendChild(span);\n\n\t    var checkBox = cel('input');\n\t    checkBox.type = 'checkbox';\n\t    var id = \"checkbox_\" + condId;\n\t    checkBox.id = id; \n\t    span.appendChild(checkBox);\n\t    // setting property must come after append due to IE8 issue\n\t    checkBox.checked = checked=='checked' ||\n\t\t\tchecked==='true' || checked===true ? 'checked':'';\n\n\t    // follow UI macro styling\n\t    var quantifierText = 'All';\n\t    var text = document.createTextNode(quantifierText);\n\t    if (!this.isNewUI) {\n\t    \tspan.appendChild(text);\n\t    \tcheckBox.className ='show-rel-cb';\n\t    } else {\n\t    \tvar label = cel('label');\n\t    \tlabel.className = 'checkbox-label';\n\t    \tlabel.setAttribute('for', id);\n\t    \tlabel.appendChild(text);\n\n\t    \tspan.className = 'input-group-checkbox';\n\t    \tspan.appendChild(label);\n\t    \tcheckBox.className = 'checkbox show-rel-cb';\n\t    }\n\n\t    this._relatedListQuantifierEl = wrapper;\n\t    return wrapper;\n\t},\n\n\t_quantifierChecked: function (checkBoxId) {\n\t    var quantifierCheckBox = $(checkBoxId);\n\t    return quantifierCheckBox && \n\t        quantifierCheckBox.checked==true?'true':'false';\n\t},\n\t\n\tdestroyQuantifierCheckBox: function() {\n\t\tif(this._relatedListQuantifierEl != null &&\n\t\t\t\tthis._relatedListQuantifierEl.parentElement != null)\n\t\t\tthis._relatedListQuantifierEl.parentElement.removeChild(this._relatedListQuantifierEl);\n\t\t\n\t\tthis._relatedListQuantifierEl = null;\n\t},\n\n\t_createRelatedListSelectWidget: function() {\n\t\tvar wrapper = cel('td');\n\t\tvar selectWidget = _createFilterSelect(\"200\", false);\n\t\tselectWidget.onchange = this._relatedListChange.bind(this);\n\t\tthis._relatedListSelectEl = selectWidget;\n\t\t\n\t\tvar key = null;\n\t\tvar value = null;\n\t\tvar obj = null;\n\t\tif(this.dependentTableRelatedListsJSON == null) {\n\t\t\tvar jsonObject = this.dependentTableRelatedLists.evalJSON();\n\t\t\tthis.dependentTableRelatedListsJSON = jsonObject['relatedLists'];\n\t\t}\n\t\t\n\t\tvar spanId = this._editingTable + '_' + this._editingRecordId;\n\t\tvar selectedFilterSpan = gel(spanId);\n\t\tvar relatedListId = (selectedFilterSpan != null)? selectedFilterSpan.getAttribute('related-list-table') : '';\n\t\tthis.dependentTable = (relatedListId != null && relatedListId != '')? relatedListId.split('.')[0] : '';\n\t\t// handle Relationship\n\t\tif (relatedListId != null && relatedListId.indexOf('REL:') != -1) {\n\t\t\trelatedListId = relatedListId.split('.')[1];\n\t\t}\n\n\t\tvar relatedListObj;\n\t\tvar relatedListLen = this.dependentTableRelatedListsJSON.length;\n\t\taddOption(selectWidget, 'CHOOSE_RELATED_LIST', getMessage('-- choose related list --'));\n\t\tfor(var index=0; index < relatedListLen; index++) {\n\t\t\trelatedListObj = this.dependentTableRelatedListsJSON[index];\n\t\t\taddOption(selectWidget, relatedListObj.key, relatedListObj.label, (relatedListObj.key == relatedListId)? true : false);\n\t\t}\n\t\t\n\t\twrapper.appendChild(selectWidget);\n\t\t\t\t\t\t\t\n\t\treturn wrapper;\n\t},\n\t\n\t_relatedListChange: function() {\n\t\tvar condTable = this._editingTable;\n\t\tvar condId = this._editingRecordId;\n\t\tvar spanId = condTable + '_' + condId;\n\t\tvar selectedFilterSpan = gel(spanId);\n\t\t\n\t\tthis.destroyFilter(true);\n\t\t\t\t\n\t\tvar relatedListTable = (this._relatedListSelectEl != null)? this._relatedListSelectEl.options[this._relatedListSelectEl.selectedIndex].value : '';\n\t\tvar targetTable = (relatedListTable != null)? relatedListTable.split('.')[0] : ''; \n\n\t\t// handle Relationship\n\t\tif (relatedListTable != null && relatedListTable.indexOf('REL:') == 0) {\n\t\t\ttargetTable = this._getRelTargetTable(relatedListTable);\n\t\t}\n\n\t\tthis.dependentTable = targetTable;\n\t\t\n\t\tthis._relatedListNotSelected = false;\n\t\tthis.editCondition(selectedFilterSpan, condTable, condId, false);\n\t},\n\t\n\t_getRelTargetTable: function (relationship) {\n\t\tvar relGr = new GlideRecord('sys_relationship');\n\t\trelGr.get(relationship.split(':')[1]);\n\t\treturn relGr.basic_query_from + '';\n\t},\n\t\n\tcancelFilter: function(tableName) {\n\t\ttableName = tableName || null;\n\t\tif(tableName && tableName != this._editingTable)\n\t\t\treturn;\n\t\t\n\t\t// if canceling a new row\n\t\tif(this._tempNewCond == this._editingTable + \"_\" + this._editingRecordId) {\n\t\t\tvar row = gel(\"condition_row_\" + this._editingTable + \"_\" + this._editingRecordId);\n\t\t\tvar parentNode = row.parentNode;\n\t\t\tparentNode.removeChild(row);\n\t\t\tif(this._clone != null) {\n\t\t\t\tparentNode.appendChild(this._clone);\n\t\t\t\tthis._observeInsert(this._editingTable, true);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis.restoreDisplay();\n\t\t}\n\t\tthis.destroyFilter();\n\t\tthis.destroyRelatedListSelector();\n\t\tthis.destroyQuantifierCheckBox();\n\t},\n\t\n\t_observeInsert: function(condTable, observe) {\n\t\tif (!this._clone)\n\t\t\treturn;\n\t\t\t\n\t\tvar _this = this;\n\t\t\n\t\tif (observe) {\n\t\t\t(function() {\n\t\t\t\tvar _condTable = condTable;\n\t\t\t\tvar cloneSpan = $(_this._clone).select('.insert-condition')[0];\n\t\t\t\t$(cloneSpan).observe('click', function(evt) {\n\t\t\t\t\tCertificationTemplateUtils.addCondition(evt.target, _condTable);\n\t\t\t\t});\n\t\t\t})();\n\t\t}\n\t\telse {\n\t\t\t(function() {\n\t\t\t\tvar cloneSpan = $(_this._clone).select('.insert-condition')[0];\n\t\t\t\t$(cloneSpan).stopObserving('click');\n\t\t\t})();\n\t\t}\n\t},\n\t    \n\t_validateValues: function(filterValue, value) {\n        if (value == '')\n            return false;\n            \n        if (filterValue.indexOf('BETWEEN') != -1)\n           if (value.substring(0,1) == '@' || value.substring(value.length-1) == '@' || value.split(\"@\").length > 2)\n\t\t\t   return false;\n\t\t\t\t            \n        if (filterValue.indexOf('RELATIVE') != -1)\n           if (value.substring(value.length-1) == '@')\n\t\t\t   return false;\n\t\t\n\t\treturn true;\n    },\n\t\n\tsaveFilter: function() {\n\t\tif (!this.filter)\n\t\t\treturn;\n\t\tvar filterValue = this.filter.getValue();\n\t\tif (filterValue.indexOf('EMPTY') == -1 && filterValue.indexOf('ANYTHING') == -1) {\n\t\t\tvar value = this.filter.sections[0].conditions[0].actionRow.handler.getValues();\n\t\t\n        \tif (!this._validateValues(filterValue, value)) {\n                alert(getMessage('Invalid condition'));\n\t\t\t    return;\n            }\n        }\n\t\t\n\t\tif (filterValue == null || filterValue == '') {\n\t\t\tthis.cancelFilter();\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t// if this is a new row\n\t\tvar isNew = false;\n\t\tif(this._tempNewCond == this._editingTable + \"_\" + this._editingRecordId) {\n\t\t\tisNew = true;\n\t\t\t// Show the delete button\n\t\t\tvar deleteId = \"cert_condition_delete_\" + this._editingTable + \"_\" + this._editingRecordId;\n\t\t\tvar deleteButton = gel(deleteId);\n\t\t\tif(deleteButton) {\n\t\t\t\tdeleteButton.style.visibility = \"\";\n\t\t\t}\n\t\t\t\n\t\t\t// add the clone\n\t\t\tvar table = gel(this._editingTable);\n\t\t\tif(this._clone != null) {\n\t\t\t\tvar body = table.getElementsByTagName('tbody');\n\t\t\t\tif (body && body.length > 0)\n\t\t\t\t\tbody[0].appendChild(this._clone);\n\t\t\t\telse\n\t\t\t\t\ttable.appendChild(this._clone);\n\t\t\t\tthis._observeInsert(this._editingTable, true);\n\t\t\t}\n\t\t\tthis.applyStyle(this._editingTable);\n\t\t\t\n\t\t\tthis._newConds[this._editingTable + \"_\" + this._editingRecordId] = true;\n\t\t}\n\t\tthis.updateValues(isNew);\n\t\tthis.restoreDisplay();\n\t\tvar spanId = this._editingTable + '_' + this._editingRecordId;\n\t\tvar selectedFilterSpan = gel(spanId);\n\t\tif (selectedFilterSpan != null) {\n\t\t\tvar relatedListTable = this._relatedListSelectEl != null? this._relatedListSelectEl.options[this._relatedListSelectEl.selectedIndex].value : \"\";\n\t\t\t// handle Relationship by getting back the '<joinTable>.<joinColumn>' form\n\t\t\tif (relatedListTable.indexOf('REL:') == 0) {\n\t\t\t\trelatedListTable = this.dependentTable + '.' + relatedListTable;  \n\t\t\t}\n\n\t\t\tselectedFilterSpan.setAttribute('related-list-table', relatedListTable);\n\t\t\tif (relatedListTable!='') {\n\t\t\t\tvar checked = this._quantifierChecked('checkbox_' + this._editingRecordId);\n\t\t\t\tselectedFilterSpan.setAttribute('checked', checked);\n\t\t\t}\n\t\t}\n\t\t\t\n\t\tif (!isNew && this._editingTable == 'cert_attr_cond')\n\t\t\tthis._checkValid($(spanId));\n\t\tthis.destroyFilter();\n\t\tthis.destroyRelatedListSelector();\n\t\tthis.destroyQuantifierCheckBox();\n\t},\n\t\n\ttoggleDeleteCondition: function(target, condTable, condId) {\n\t\tvar displayId = condTable + \"_\" + condId;\n\t\tvar display = gel(displayId);\n\t\tvar descriptor = display.getAttribute('descriptor');\n\t\tvar targetTable = this._getTargetTable(condTable);\n\t\tif(displayId in this._newConds) {\n\t\t\tdelete this._newConds[displayId];\n\t\t\tvar row = gel(\"condition_row_\" + displayId);\n\t\t\trow.parentNode.removeChild(row);\n\t\t\tthis.onDelete(display.getAttribute('data'), false, condTable, descriptor, targetTable);\n\t\t\tthis.applyStyle(condTable);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvar state = target.getAttribute('state');\n\t\tif(state == 'delete') {\n\t\t\tif (!this.isNewUI)\n\t\t\t\ttarget.setAttribute('src', 'images/undelete_row.gifx');\n\t\t\telse\n\t\t\t\ttarget.setStyle({color: '#CFCFCF'});\n\t\t\ttarget.setAttribute('state', 'undelete');\n\t\t\tdisplay.style.textDecoration = \"line-through\";\n\t\t\tif(displayId in this._updatedConds)\n\t\t\t\tdelete this._updatedConds[displayId];\n\t\t\tthis._deletedConds[displayId] = true;\n\t\t\tthis.onDelete(display.getAttribute('data'), false, condTable, descriptor, targetTable);\n\t\t}\n\t\telse {\n\t\t\tvar messages = this.onBeforeUnDelete(display.getAttribute('data'), condTable, descriptor, targetTable);\n\t\t\tif(messages.length == 0) {\n\t\t\t\tif (!this.isNewUI)\n\t\t\t\t\ttarget.setAttribute('src', 'images/delete_row.gifx');\n\t\t\t\telse\n\t\t\t\t\ttarget.setStyle({color: '#FF402C'});\n\t\t\t\ttarget.setAttribute('state', 'delete');\n\t\t\t\tvar original = display.getAttribute('original-data');\n\t\t\t\tvar data = display.getAttribute('data');\n\t\t\t\tif(original != data) {\n\t\t\t\t\tthis._updatedConds[displayId] = true;\n\t\t\t\t}\n\t\t\t\tdisplay.style.textDecoration = '';\n\t\t\t\tdelete this._deletedConds[displayId];\n\t\t\t\t\n\t\t\t\tthis.onDelete(display.getAttribute('data'), true, condTable, descriptor, targetTable);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfor(var i = 0; i < messages.length; i++) {\n\t\t\t\t\tg_form.addErrorMessage(getMessage(messages[i]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._evaluateDirty(condTable, condId, false);\n\t},\n\t\n\t_evaluateDirty: function(condTable, id, isFieldEdit) {\n\t\tvar field = condTable + \"_\" + id;\n\t\tvar dirtyId = \"cert_cond_dirty_\" + condTable + \"_\" + id;\n\t\tvar dirty = gel(dirtyId);\n\t\tvar linkId = \"cert_cond_link_\" + condTable + \"_\" + id;\n\t\tvar link = gel(linkId);\n\t\tvar rowId = \"condition_row_\" + condTable + \"_\" + id;\n\t\tvar row = gel(rowId);\n\t\tif(this._isDirty(field)) {\n\t\t\tif (!this.isNewUI)\n\t\t\t\tdirty.style.display = \"\";\n\t\t\telse if (isFieldEdit)\n\t\t\t\t$(row.getElementsByClassName('filter-td')[0]).addClassName('list_edit_dirty');\n\n\t\t\tif(link) \n\t\t\t\tlink.style.display = \"none\";\n\t\t}\n\t\telse {\n\t\t\tif (!this.isNewUI)\n\t\t\t\tdirty.style.display = \"none\";\n\t\t\telse if (isFieldEdit)\n\t\t\t\t$(row.getElementsByClassName('filter-td')[0]).removeClassName('list_edit_dirty');\n\t\t\t\n\t\t\tif(link) \n\t\t\t\tlink.style.display = \"\";\n\t\t}\n\t},\n\t\n\tupdateValues: function(isNew) {\n\t\tvar displayId = this._editingTable + \"_\" + this._editingRecordId;\n\t\tvar isUpdateOfNew = this._newConds[displayId] == true;\n\t\tvar display = gel(displayId);\n\t\tvar originalData = display.getAttribute('original-data');\n\t\tvar oldData = display.getAttribute('data');\n\t\tvar filterValue = this.filter.getValue();\n\t\tvar filterParts = filterValue.split(':');\n\t\tvar newData = filterValue; \n\t\tvar descriptor = '';\n\t\tvar relatedListLabel = this._relatedListSelectEl != null? this._relatedListSelectEl.options[this._relatedListSelectEl.selectedIndex].text : '';\n\t\t\n\t\tvar checkBoxChanged = false;\n\t\tvar quantifierDesc = '';\n\t\tif (relatedListLabel != null && relatedListLabel != '') {\n\t\t\tvar originalChecked= display.getAttribute('original-checked');\n\t\t\tvar newChecked = this._quantifierChecked('checkbox_' + this._editingRecordId);\n\t\t\tcheckBoxChanged = originalChecked != newChecked;\n\t\t\tquantifierDesc = newChecked == 'true'? ' for ALL' : '';\n\t\t}\n\n\t\tvar newDisplayValue = relatedListLabel != null && relatedListLabel != ''? relatedListLabel + ': ' + this.filter.getDisplayValue() + quantifierDesc : this.filter.getDisplayValue();\n\t\t\n\t\tif(this._editingTable != 'cert_attr_cond' && this._editingTable != 'cert_related_list_cond') {\n\t\t\tif(filterParts.length == 1) {\n\t\t\t\tdescriptor = '';\n\t\t\t\tnewData = filterParts[0];\n\t\t\t} else if(filterParts.length == 2) {\n\t\t\t\tdescriptor = filterParts[0];\n\t\t\t\tnewData = filterParts[1];\n\t\t\t} else if(filterParts.length == 3){\n\t\t\t\tdescriptor = filterParts[0];\n\t\t\t\tnewData = filterParts[2];\n\t\t\t}\n\t\t}\n\t\t\n\t\tdisplay.setAttribute('data', newData);\n\t\tdisplay.setAttribute('descriptor', descriptor);\n\t\tdisplay.innerHTML = newDisplayValue;\n\t\tif((originalData != newData || checkBoxChanged) && !isNew && !isUpdateOfNew)\n\t\t\tthis._updatedConds[this._editingTable + \"_\" + this._editingRecordId] = true;\n\t\telse\n\t\t\tdelete this._updatedConds[this._editingTable + \"_\" + this._editingRecordId];\n\t\tthis._evaluateDirty(this._editingTable, this._editingRecordId, true);\n\t\t\n\t\tvar targetTable = this._getTargetTable(this._editingTable);\n\t\tif(isNew)\n\t\t\tthis.onAdd(newData, this._editingTable, descriptor, targetTable);\n\t\telse\n\t\t\tthis.onUpdate(oldData, newData, this._editingTable, descriptor, targetTable);\n\t},\n\t\n\trestoreDisplay: function() {\n\t\tif(this._editingTable && this._editingRecordId) {\n\t\t\tvar displayId = this._editingTable + \"_\" + this._editingRecordId;\n\t\t\tvar display = gel(displayId);\n\t\t\tdisplay.style.display = \"\";\n\t\t}\n\t},\n\t\n\tdestroyFilter: function(preserveRow) {\n\t\tif(this.filter)\n\t\t\tthis.filter.destroy();\n\t\tthis.filter = null;\n\t\tfilterExpanded = false;\n\t\t\n\t\tif(this._editingRecordId && this._editingTable) {\n\t\t\tvar filterHolderId = \"cert_condition_filter_\" + this._editingTable + \"_\" + this._editingRecordId;\n\t\t\tvar filterHolder = gel(filterHolderId);\n\t\t\tif(filterHolder) {\n\t\t\t\tfilterHolder.innerHTML = \"\";\n\t\t\t\tfilterHolder.style.display = \"none\";\n\t\t\t}\n\t\t\t\n\t\t\tvar controlHolderId = \"cert_condition_controls_\" + this._editingTable + \"_\" + this._editingRecordId;\n\t\t\tvar controlHolder = gel(controlHolderId);\n\t\t\tif(controlHolder) {\n\t\t\t\tcontrolHolder.innerHTML = \"\";\n\t\t\t\tcontrolHolder.style.display = \"none\";\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis._editingRecordId = null;\n\t\tthis._editingTable = null;\n\t\t\n\t\tif(!preserveRow) {\n\t\t\tthis._tempNewCond = null;\n\t\t\tthis._clone = null;\n\t\t}\n\t},\n\t\n\tdestroyRelatedListSelector: function() {\n\t\tif(this._relatedListSelectEl != null && this._relatedListSelectEl.parentElement != null)\n\t\t\tthis._relatedListSelectEl.parentElement.removeChild(this._relatedListSelectEl);\n\t\t\n\t\tthis._relatedListSelectEl = null;\n\t\tthis._relatedListNotSelected = false;\n\t},\n\t\n\t_createInput: function(wrapper, table, value) {\n\t\tvar ref = table + '.' + this.fieldName;\n\t\tvar hiddenInput = cel(\"input\");\n\t\thiddenInput.id = ref;\n\t\thiddenInput.className = \"glide_destroy_filter\";\n\t\thiddenInput.name = ref;\n\t\thiddenInput.value = \"\";\n\t\thiddenInput.setAttribute('data-dependent', this.dependent);\n\t\thiddenInput.setAttribute('data-dependent_table', this.dependentTable);\n\t\tvar restrictedFields = this.restrictedFields[table].join(',');\n\t\thiddenInput.setAttribute('data-restricted_fields', restrictedFields);\n\t\thiddenInput.setAttribute('data-extended_operators', this.extendedOps);\n\t\thiddenInput.setAttribute('data-usage_context', this.usageCtx);\n\t\thiddenInput.setAttribute('single-row', this.singleRow);\n\t\thiddenInput.setAttribute('is-relationship', this.isRelationship[table]);\n\t\thiddenInput.setAttribute('rel-type-table', this.relTypeTable[table]);\n\t\thiddenInput.setAttribute('reverse-restriction', this.reverseRestriction);\n\t\thiddenInput.setAttribute('value', value);\n\t\thiddenInput.setAttribute('type', 'hidden');\n\t\twrapper.appendChild(hiddenInput);\n\t},\n\t\n\t_createTable: function(wrapper, tableName) {\n\t\tvar table = cel(\"table\", wrapper);\n\t\ttable.id = tableName +\".\" + this.fieldName + \"filters_table\";\n\t\ttable.className = 'filerTable';\n\t\tvar tbody = cel('tbody', table);\n\t\ttbody.id = tableName + \".\" + this.fieldName + \"gcond_filters\";\n\t},\n\t\n\t_createWidget: function(table, value) {\n\t\tvar wrapper = cel(\"span\");\n\t\tthis._createInput(wrapper, table, value);\n\t\tthis._createTable(wrapper, table);\n\t\treturn wrapper;\n\t},\n\t\n\t_createFilter: function(conditionTable, id, value, descriptor, prefix) {\n\t\tvar ref = conditionTable + '.' + this.fieldName;\n\t\tvar elem = gel(ref);\n\t\tvar table = resolveDependentValue(ref, elem.getAttribute('data-dependent'), elem.getAttribute('data-dependent_table'));\n\t\tvar fname = ref;\n\t\tvar sysId = id;\n\t\t\n\t\tif(table == null)\n\t\t\treturn;\n\t\t\n\t\tthis.filter = createCertCondFilter(table + \".\" + fname, value, fname, descriptor, prefix);\n\t\t\n\t\tvar filterTable = gel(conditionTable + \".\" + this.fieldName + \"filters_table\");\n\t\t$(filterTable).setStyle({\n\t\t\tbackgroundColor: 'transparent',\n\t\t\tborderCollapse: 'collapse'\n\t\t});\n\t\t\n\t\tvar filterTableBody = gel(conditionTable + \".\" + this.fieldName + \"gcond_filters\");\n\t\tvar innerTable = filterTableBody.firstChild.firstChild.firstChild;\n\t\t$(innerTable).setStyle({\n\t\t\tbackgroundColor: 'transparent'\n\t\t});\n\t},\n\t\n\t_createControls: function() {\n\t\tvar _this = this;\n\t\tvar saveButton;\n\t\tvar cancelButton;\n\t\tif (!this.isNewUI) {\n\t\t\tsaveButton = cel('img');\n\t\t\tsaveButton.src = 'images/workflow_approved.gifx';\n\t\t\t\n\t\t\tcancelButton = cel('img');\n\t\t\tcancelButton.src = 'images/workflow_approval_rejected.gifx';\n\t\t}\n\t\telse {\n\t\t\tsaveButton = cel('a');\n\t\t\tsaveButton.className = 'btn btn-icon icon-check-circle color-green';\n\t\t\t\n\t\t\tcancelButton = cel('a');\n\t\t\tcancelButton.className = 'btn btn-icon icon-cross-circle color-red';\n\t\t}\n\t\t\n\t\tsaveButton.title = getMessage('Save');\n\t\tsaveButton.alt = getMessage('Save');\n\t\tsaveButton.style.cursor = \"pointer\";\n\t\tsaveButton.onclick = function() {\n\t\t\t_this.saveFilter();\n\t\t};\n\t\t\n\t\t\n\t\tcancelButton.title = getMessage('Cancel');\n\t\tcancelButton.alt = getMessage('Cancel');\n\t\tcancelButton.style.cursor = \"pointer\";\n\t\tcancelButton.onclick = function() {\n\t\t\t_this.cancelFilter();\n\t\t};\n\t\t\n\t\tvar buttonHolder = cel('span');\n\t\tbuttonHolder.appendChild(saveButton);\n\t\tbuttonHolder.appendChild(cancelButton);\n\t\treturn buttonHolder;\n\t},\n\t\n\t_createFilterDOM: function(row, condTable, condId) {\n\t\tvar _this = this;\n\t\t\n\t\tvar deleteImg;\n\t\tif (!this.isNewUI) {\n\t\t\tdeleteImg = cel('img');\n\t\t\tdeleteImg.src = \"images/delete_row.gifx\";\n\t\t\tdeleteImg.style.cursor = \"pointer\";\t\n\t\t}\n\t\telse {\n\t\t\tdeleteImg = cel('i');\n\t\t\tdeleteImg.className = 'cond-delete-icon list_delete_row list_decoration clsshort button icon-cross btn';\n\t\t\tdeleteImg.style.color = '#FF402C';\t\n\t\t}\n\t\t\n\t\tdeleteImg.style.visibility = \"hidden\";\n\t\tdeleteImg.id = \"cert_condition_delete_\" + condTable + \"_\" + condId;\n\t\tdeleteImg.title = getMessage('Delete');\n\t\tdeleteImg.setAttribute('state', \"delete\");\n\t\tdeleteImg.onclick = function(evt) {\n\t\t\tevt = evt || window.event;\n\t\t\tvar target = evt.target || evt.srcElement;\n\t\t\t_this.toggleDeleteCondition(target, condTable, condId);\n\t\t};\n\t\t\n\t\tvar dirtyImg = cel('img');\n\t\tdirtyImg.id = \"cert_cond_dirty_\" + condTable + \"_\" + condId;\n\t\tdirtyImg.width = \"16\";\n\t\tdirtyImg.height = \"16\";\n\t\tdirtyImg.style.margin = \"2px 4px\";\n\t\tdirtyImg.style.display = \"none\";\n\t\tdirtyImg.src=\"images/dirty.gifx\";\n\t\t\n\t\tvar warningImg;\n\t\tif (!this.isNewUI) {\n\t\t\twarningImg = cel('img');\n\t\t\twarningImg.src='images/warning.gifx';\n\t\t}\n\t\telse {\n\t\t\twarningImg = cel('i');\n\t\t\twarningImg.className = 'icon-alert';\n\t\t\twarningImg.style.color  = '#FFCA1F';\n\t\t\twarningImg.style.fontSize = '20px';\n\t\t}\n\t\twarningImg.title = getMessage('Field for this condition is not applicable to the filter');\n\t\twarningImg.id = 'cert_condition_warning_' + condTable + '_' + condId;\n\t\twarningImg.className += ' condition-warning';\n\t\t$(warningImg).setStyle({\n\t\t\tvisibility: 'hidden'\n\t\t});\n\t\t\n\t\tvar displaySpan = cel(\"span\");\n\t\tdisplaySpan.id = condTable + \"_\" + condId;\n\t\tdisplaySpan.className = \"cert-cond-display-span\";\n\t\tdisplaySpan.setAttribute('table-name', condTable);\n\t\tdisplaySpan.setAttribute('sys-id', condId);\n\t\tdisplaySpan.setAttribute('data', '');\n\t\tdisplaySpan.setAttribute('descriptor', '');\n\t\tdisplaySpan.setAttribute('originalData', '');\n\t\tdisplaySpan.onclick = function(evt) {\n\t\t\tevt = evt || window.event;\n\t\t\tvar target = evt.target || evt.srcElement;\n\t\t\t_this.editCondition(target, condTable, condId, true);\n\t\t};\n\t\t$(displaySpan).setStyle({\n\t\t\t'float': 'left',\n\t\t\twidth: '100%'\n\t\t});\n\t\t\n\t\tvar filterSpan = cel(\"span\");\n\t\tfilterSpan.id = \"cert_condition_filter_\" + condTable + \"_\" + condId;\n\t\tfilterSpan.className = \"cert-cond-filter-span\";\n\t\tfilterSpan.style.display = \"none\";\n\t\t\n\t\tvar controlSpan = cel(\"span\");\n\t\tcontrolSpan.id = \"cert_condition_controls_\" + condTable + \"_\" + condId;\n\t\tcontrolSpan.className = \"cert-cond-filter-controls\";\n\t\tcontrolSpan.style.display = \"none\";\n\t\t\n\t\tvar tableWrapper = cel(\"table\");\n\t\tvar tableWrapperBody = cel(\"tbody\");\n\t\tvar tableTrWrapper = cel(\"tr\");\n\t\tvar tableFilterWrapper = cel(\"td\");\n\t\tvar tableControlWrapper = cel(\"td\");\n\t\ttableWrapper.appendChild(tableWrapperBody);\n\t\ttableWrapperBody.appendChild(tableTrWrapper);\n\t\ttableTrWrapper.appendChild(tableFilterWrapper);\n\t\ttableTrWrapper.appendChild(tableControlWrapper);\n\t\ttableFilterWrapper.appendChild(filterSpan);\n\t\ttableControlWrapper.appendChild(controlSpan);\n\t\t$(tableWrapper).setStyle({\n\t\t\tbackgroundColor: 'transparent'\n\t\t});\n\t\t\n\t\tvar rowControlsTd = $(row).select('.row-controls-td');\n\t\t\n\t\tif(rowControlsTd.length > 0) {\n\t\t\trowControlsTd = rowControlsTd[0];\n\t\t\trowControlsTd.innerHTML = '';\n\t\t\trowControlsTd.appendChild(deleteImg);\n\t\t\trowControlsTd.appendChild(warningImg);\n\t\t\trowControlsTd.appendChild(dirtyImg);\n\t\t}\n\t\t\n\t\tvar filterTd = row.getElementsByClassName('filter-td');\n\t\tif(filterTd.length > 0) {\n\t\t\tfilterTd = filterTd[0];\n\t\t\tfilterTd.innerHTML = '';\n\t\t\tfilterTd.appendChild(displaySpan);\n\t\t\tfilterTd.appendChild(tableWrapper);\n\t\t}\n\t\t\n\t\trow.id = \"condition_row_\" + condTable + \"_\" + condId;\n\t\treturn filterSpan;\n\t},\n\t\n\t_isDirty: function(field) {\n\t\tvar result =  (field in this._updatedConds) || (field in this._newConds) || (field in this._deletedConds);\n\t\treturn result;\n\t},\n\t\n\t_createFieldNode: function(name, modified, valueSet, dspSet, value) {\n\t\tvar nodeField = document.createElement('field');\n\t\tnodeField.setAttribute('name', name);\n\t\tnodeField.setAttribute('modified', modified);\n\t\tnodeField.setAttribute('value_set', valueSet);\n\t\tnodeField.setAttribute('dsp_set', dspSet);\n\t\tvar nodeValue = document.createElement('value');\n\t\tvar nodeValueText = document.createTextNode(value);\n\t\tnodeValue.appendChild(nodeValueText);\n\t\tnodeField.appendChild(nodeValue);\n\t\treturn nodeField;\n\t},\n\t\n\t_createRecordUpdateNode: function(table) {\n\t\tvar node = document.createElement('record_update');\n\t\tnode.setAttribute('table', table);\n\t\tnode.setAttribute('field', 'cert_template');\n\t\tnode.setAttribute('query', 'cert_template=' + this.sysId);\n\t\treturn node;\n\t},\n\t\n\t_createAddNode: function(id, cond, descriptor, display, joinTable, joinField, applies_to_all) {\n\t\tvar node = document.createElement('record');\n\t\tnode.setAttribute('sys_id', id);\n\t\tnode.setAttribute('operation', 'add');\n\t\t\n\t\tvar condField = this._createFieldNode('condition',\n\t\t'true', 'true', 'false', cond);\n\t\tnode.appendChild(condField);\n\t\t\n\t\tvar descriptorField = this._createFieldNode('descriptor',\n\t\t'true', 'true', 'false', descriptor);\n\t\tnode.appendChild(descriptorField);\n\t\t\n\t\tvar displayField = this._createFieldNode('condition_display',\n\t\t'true', 'true', 'false', display);\n\t\tnode.appendChild(displayField);\n\t\t\n\t\tvar templateField = this._createFieldNode('cert_template',\n\t\t'true', 'true', 'false', this.sysId);\n\t\tnode.appendChild(templateField);\n\t\t\n\t\tvar joinTableNode = this._createFieldNode('join_table',\n\t\t'true', 'true', 'false', joinTable);\n\t\tnode.appendChild(joinTableNode);\n\t\t\n\t\tvar joinFieldNode = this._createFieldNode('join_column',\n\t\t'true', 'true', 'false', joinField);\n\t\tnode.appendChild(joinFieldNode);\n\t\n\t\tif (applies_to_all) {\n\t\t\tvar quantifierNode = this._createFieldNode('applies_to_all',\n\t\t\t\t\t'true', 'true', 'false', applies_to_all);\n\t\t\tnode.appendChild(quantifierNode);\n\t\t}\n\t\t\n\t\treturn node;\n\t},\n\t\n\t_createUpdateNode: function(id, cond, descriptor, display, joinTable, joinField, applies_to_all) {\n\t\tvar node = document.createElement('record');\n\t\tnode.setAttribute('sys_id', id);\n\t\tnode.setAttribute('operation', 'update');\n\t\t\n\t\tvar condField = this._createFieldNode('condition',\n\t\t'true', 'true', 'false', cond);\n\t\tnode.appendChild(condField);\n\t\t\n\t\tvar descriptorField = this._createFieldNode('descriptor',\n\t\t'true', 'true', 'false', descriptor);\n\t\tnode.appendChild(descriptorField);\n\t\t\n\t\tvar displayField = this._createFieldNode('condition_display',\n\t\t'true', 'true', 'false', display);\n\t\tnode.appendChild(displayField);\n\t\t\n\t\tvar joinTableNode = this._createFieldNode('join_table',\n\t\t'true', 'true', 'false', joinTable);\n\t\tnode.appendChild(joinTableNode);\n\t\t\n\t\tvar joinFieldNode = this._createFieldNode('join_column',\n\t\t'true', 'true', 'false', joinField);\n\t\tnode.appendChild(joinFieldNode);\n\t\t\n\t\tif (applies_to_all) {\n\t\t\tvar quantifierNode = this._createFieldNode('applies_to_all',\n\t\t\t\t\t'true', 'true', 'false', applies_to_all);\n\t\t\tnode.appendChild(quantifierNode);\n\t\t}\n\t\t\n\t\treturn node;\n\t},\n\t\n\t_createDeleteNode: function(id, cond, descriptor, display, joinTable, joinField, applies_to_all) {\n\t\tvar node = document.createElement('record');\n\t\tnode.setAttribute('sys_id', id);\n\t\tnode.setAttribute('operation', 'delete');\n\t\t\n\t\tvar condField = this._createFieldNode('condition',\n\t\t'false', 'false', 'false', cond);\n\t\tnode.appendChild(condField);\n\t\t\n\t\tvar descriptorField = this._createFieldNode('descriptor',\n\t\t'false', 'false', 'false', descriptor);\n\t\tnode.appendChild(descriptorField);\n\t\t\n\t\tvar displayField = this._createFieldNode('condition_display',\n\t\t'false', 'false', 'false', display);\n\t\tnode.appendChild(displayField);\n\t\t\n\t\tvar joinTableNode = this._createFieldNode('join_table',\n\t\t'false', 'false', 'false', joinTable);\n\t\tnode.appendChild(joinTableNode);\n\t\t\n\t\tvar joinFieldNode = this._createFieldNode('join_column',\n\t\t'false', 'false', 'false', joinField);\n\t\tnode.appendChild(joinFieldNode);\n\t\t\n\t\tif (applies_to_all) {\n\t\t\tvar quantifierNode = this._createFieldNode('applies_to_all',\n\t\t\t\t\t'false', 'false', 'false', applies_to_all);\n\t\t\tnode.appendChild(quantifierNode);\n\t\t}\n\n\t\treturn node;\n\t},\n\t\n\t_getInfo: function(span) {\n\t\tvar relatedListTable = span.getAttribute('related-list-table');\n\t\tvar display = span.innerHTML.replace(/&gt;/g, '>');\n\t\tvar obj = {\n\t\t\t'tableName': span.getAttribute('table-name'),\n\t\t\t'id': span.getAttribute('sys-id'),\n\t\t\t'data': span.getAttribute('data'),\n\t\t\t'descriptor': span.getAttribute('descriptor'),\n\t\t\t'display': display\n\t\t};\n\t\t\n\t\tif(relatedListTable != null && relatedListTable != '') {\n\t\t\tvar relatedListTableParts = relatedListTable.split('.');\n\t\t\tif(relatedListTableParts.length === 2) {\n\t\t\t\tobj['relatedListJoinTable'] = relatedListTableParts[0];\n\t\t\t\tobj['relatedListJoinField'] = relatedListTableParts[1];\n\t\t\t}\n\n\t\t\t// handle Relationship\n\t\t\tif (relatedListTable.indexOf('REL:') == 0) {\n\t\t\t\tobj['relatedListJoinTable'] = this._getRelTargetTable(relatedListTable);\n\t\t\t\tobj['relatedListJoinField'] = relatedListTable;\n\t\t\t}\n\t\t\tobj['checked'] = span.getAttribute('checked'); // 'true'/'false'\n\t\t} \n\t\t\n\t\treturn obj;\n\t},\n\t\n\tgetListDisplayStatus: function() {\n        var status = {};\n        for(var i = 0; i < this.allTables.length; i++) {\n            var list = this.allTables[i];\n\t\t\tvar listRow = $(list + '_row');\n\t\t\t\n\t\t\tif (listRow != null) {\n            \tvar display = listRow.getStyle('display');\n            \tstatus[list] = (display != 'none');\n\t\t\t} else \n\t\t\t\tstatus[list] = false;\n        }\n\t\treturn status;\n    },\n    \n\tserialize: function() {\n\t\tvar displayStatus = this.getListDisplayStatus();\n        var isDisplayed = function(tName) {\n            return (tName in displayStatus && displayStatus[tName]);\n        };\n\t\t\n\t\tvar tableXML = {};\n\t\tvar updatedMembers = [\n\t\t['_newConds', '_createAddNode'],\n\t\t['_updatedConds', '_createUpdateNode'],\n\t\t['_deletedConds', '_createDeleteNode']\n\t\t];\n\t\t\n\t\tfor(var i = 0; i < updatedMembers.length; i++) {\n\t\t\tvar member = updatedMembers[i][0];\n\t\t\tvar createFunc = updatedMembers[i][1];\n\t\t\tfor(var key in this[member]) {\n\t\t\t\tvar span = gel(key);\n\t\t\t\tvar info = this._getInfo(span);\n                // Only serialize visible lists\n                if(!isDisplayed(info.tableName))\n                    continue;\n\t\t\t\t\n\t\t\t\tif(!tableXML[info.tableName]) {\n\t\t\t\t\ttableXML[info.tableName] = this._createRecordUpdateNode(info.tableName);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar rootXML = tableXML[info.tableName];\n\t\t\t\trootXML.appendChild(this[createFunc](info.id, info.data, info.descriptor, info.display, info.relatedListJoinTable, info.relatedListJoinField, info.checked));\n\t\t\t}\n\t\t}\n\t\treturn tableXML;\n\t},\n\t\n\tserializeToForm: function(form) {\n\t\tvar _toXMLStr = function(xmlNode) {\n\t\t\tif (typeof window.XMLSerializer != \"undefined\")\n\t\t\t\treturn (new window.XMLSerializer()).serializeToString(xmlNode);\n\t\t\telse if (typeof xmlNode.xml != \"undefined\")\n\t\t\t\treturn xmlNode.xml;\n\t\t\telse {\n\t\t\t\tvar dummy = document.createElement('dummy');\n\t\t\t\tdummy.appendChild(xmlNode);\n\t\t\t\treturn dummy.innerHTML + '';\n\t\t\t}\n\t\t};\n\t\tvar serialization = this.serialize();\n\t\tfor(var key in serialization) {\n\t\t\tvar k = 'ni.java.com.glide.ui_list_edit.ListEditFormatterAction[' + guid() + ']';\n\t\t\tvar v = _toXMLStr(serialization[key]);\n\t\t\taddHidden(form, k, v);\n\t\t}\n\t},\n\t\n\taddAddListener: function(f) {\n\t\tthis._onAdds.push(f);\n\t},\n\t\n\tremoveAddListener: function(f) {\n\t\tvar idx = this._onAdds.indexOf(f);\n\t\tthis._onAdds.splice(idx, 1);\n\t},\n\t\n\taddUpdateListener: function(f) {\n\t\tthis._onUpdates.push(f);\n\t},\n\t\n\tremoveUpdateListener: function(f) {\n\t\tvar idx = this._onUpdates.indexOf(f);\n\t\tthis._onUpdates.splice(idx, 1);\n\t},\n\t\n\taddDeleteListener: function(f) {\n\t\tthis._onDeletes.push(f);\n\t},\n\t\n\taddBeforeUnDeleteListener: function(f) {\n\t\tthis._onBeforeUnDeletes.push(f);\n\t},\n\t\n\tremoveDeleteListener: function(f) {\n\t\tvar idx = this._onDeletes.indexOf(f);\n\t\tthis._onDeletes.splice(idx, 1);\n\t},\n\t\n\tonAdd: function(cond, table, descriptor, targetTable) {\n\t\tfor(var i = 0; i < this._onAdds.length; i++) {\n\t\t\tthis._onAdds[i](cond, table, descriptor, targetTable);\n\t\t}\n\t},\n\t\n\tonUpdate: function(oldCond, newCond, table, descriptor, targetTable) {\n\t\tfor(var i = 0; i < this._onUpdates.length; i++) {\n\t\t\tthis._onUpdates[i](oldCond, newCond, table, descriptor, targetTable);\n\t\t}\n\t},\n\t\n\tonDelete: function(cond, isUndelete, table, descriptor, targetTable) {\n\t\tfor(var i = 0; i < this._onDeletes.length; i++) {\n\t\t\tthis._onDeletes[i](cond, isUndelete, table, descriptor, targetTable);\n\t\t}\n\t},\n\t\n\tonBeforeUnDelete: function(cond, table, descriptor, targetTable) {\n\t\tvar messages = [];\n\t\tfor(var i = 0; i < this._onBeforeUnDeletes.length; i++) {\n\t\t\tvar msg = this._onBeforeUnDeletes[i](cond, table, descriptor, targetTable);\n\t\t\tif(msg != null && msg !== undefined)\n\t\t\t\tmessages.push(msg);\n\t\t}\n\t\treturn messages;\n\t},\n\t\n\tapplyStyle: function(tableName) {\n\t\tvar tableNames;\n\t\tif(tableName)\n\t\t\ttableNames = [tableName];\n\t\telse\n\t\t\ttableNames = this.allTables;\n\t\t\n\t\tfor(var i = 0; i < tableNames.length; i++) {\n\t\t\tvar table = gel(tableNames[i]);\n\t\t\tvar rows = table.getElementsByClassName('list_row_compact');\n\t\t\tvar odd = true;\n\t\t\tfor(var j = 0; j < rows.length; j++) {\n\t\t\t\tif(odd) {\n\t\t\t\t\t$(rows[j]).removeClassName('list_even');\n\t\t\t\t\t$(rows[j]).addClassName('list_odd');\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t$(rows[j]).removeClassName('list_odd');\n\t\t\t\t\t$(rows[j]).addClassName('list_even');\n\t\t\t\t}\n\t\t\t\todd = !odd;\n\t\t\t}\n\t\t}\n\t},\n\t\n\tgetColumn:  function(q) {\n\t\tvar operators = this._operators;\n\t\tfor(var i = 0; i < operators.length; i++) {\n\t\t\tvar loc = q.indexOf(operators[i]);\n\t\t\tif(loc >= 0) {\n\t\t\t\treturn q.substring(0, loc);\n\t\t\t}\n\t\t}\n\t\treturn '';\n\t},\n\t\n    showConditionLists: function(auditType) {\n        // hide all tables\n        this._setConditionVisibility(this.allTables, \"none\");\n        if(auditType && auditType in this.auditTypeTables) {\n            // show relevant tables for the audit type\n            this._setConditionVisibility(this.auditTypeTables[auditType], \"\");\n        }\n\t},\n\t\n\t_setConditionVisibility: function(tables, v) {\n        for(var i = 0; i < tables.length; i++) {\n            var fieldRow = $(tables[i] + \"_row\");\n            $(fieldRow).setStyle({\n                display: v\n            });\n        }\n\t},\n\t\n\tcheckAttrCondValidity: function() {\n\t\tvar attrSpans = $$('span[table-name=\"cert_attr_cond\"]');\n\t\tvar allValid = true;\n\t\tfor(var i = 0; i < attrSpans.length; i++) {\n\t\t\tvar valid = this._checkValid(attrSpans[i]);\n\t\t\tallValid = allValid && valid;\n\t\t}\n\t\tif(!allValid) {\n\t\t\tif (!this._errorMessageShown) {\n\t\t\t\tvar warningMessage = \n\t\t\t\t\t'Some template conditions are incompatible with ' +\n\t\t\t\t\t'the selected filter. Incompatible conditions ' +\n\t\t\t\t\t'will not be used for auditing.';\n\t\t\t\tg_form.addErrorMessage(getMessage(warningMessage));\n\t\t\t\tthis._errorMessageShown = true;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tg_form.clearMessages();\n\t\t\tthis._errorMessageShown = false;\n\t\t}\n\t},\n\t\n\t_getQueryField: function(table, query) {\n\t\tvar ajax = new GlideAjax('QueryParseAjax');\n\t\tajax.addParam('sysparm_chars', query);\n\t\tajax.addParam('sysparm_name', table);\n\t\tajax.addParam('sysparm_version2', 'false');\n\t\tvar partsXML = ajax.getXMLWait();\n\t\tvar items = partsXML.getElementsByTagName('item');\n\t\tif (items.length > 0)\n\t\t\treturn items[0].getAttribute('field');\n\t\telse\n\t\t\treturn '';\n\t},\n\t\n\t_validateField: function (tableName, field) {\n\t\tvar ajax = new GlideAjax('ConditionUtilsAjax');\n\t\tajax.addParam('sysparm_name', 'validateField');\n\t\tajax.addParam('sysparm_table_name', tableName);\n\t\tajax.addParam('sysparm_field', field);\n\n\t\tvar result = ajax.getXMLWait();\n\t\tif(result && result.childNodes.length > 0) {\n\t\t\tresult = result.getElementsByTagName('result');\n\t\t\tif(result.length > 0)\n\t\t\t\tresult = result[0];\n\t\t\telse\n\t\t\t\tresult = null;\n\t\t\tif(result) {\n\t\t\t\treturn result.getAttribute('valid') == 'true';\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\t\n\t_checkValid: function(attrSpan) {\n\t\tvar tableName = this.dependentTable;\n\t\tvar tableRef = getTableReference(tableName);\n\t\tvar attrData = attrSpan.getAttribute('data');\n\t\tvar column = this._getQueryField(tableName, attrData);\n\t\tvar warningOn = !this._validateField(tableName, column) && column != '123TEXTQUERY321';\n\t\t\n\t\tvar conditionWarning = attrSpan\n\t\t\t.parentNode\n\t\t\t.parentNode\n\t\t\t.getElementsByClassName('vt row-controls-td')[0]\n\t\t\t.getElementsByClassName('condition-warning')[0];\n\t\t\n\t\tvar visibility = warningOn ? '' : 'hidden';\n\t\tvar fontStyle = warningOn ? 'italic': '';\n\t\t$(conditionWarning).setStyle({\n\t\t\t'visibility': visibility\n\t\t});\n\t\t$(attrSpan).setStyle({\n\t\t\t'fontStyle': fontStyle\n\t\t});\n\t\treturn !warningOn;\n\t}\n};\n\n(function() {\n\tvar setupListEventSubscribers = function() {\n\t\tvar getUniqueValue = function(value, descriptor, targetTable) {\n\t\t\tvar result;\n\t\t\tif(targetTable == '')\n\t\t\t\tresult = value;\n\t\t\telse if(targetTable == 'cmdb_ci')\n\t\t\t\tresult = descriptor + ':' + value;\n\t\t\telse\n\t\t\t\tresult = descriptor + ':' + targetTable + ':' + value;\n\t\t\treturn result;\n\t\t};\n\t\t\n\t\tvar updateRestrictionField = function(table, value, descriptor, targetTable, operation) {\n\t\t\tvar uniqueValue = getUniqueValue(value, descriptor, targetTable);\n\t\t\t\n\t\t\tvar restrictedFields = CertificationTemplateUtils.restrictedFields[table];\n            if(operation == 'delete') {\n\t\t\t\tvar loc = restrictedFields.indexOf(uniqueValue);\n\t\t\t\trestrictedFields.splice(loc, 1);\n            }\n            else if(operation == 'add') {\n\t\t\t\trestrictedFields.push(uniqueValue);\n            }\n        };\n        \n\t\tvar onDelete = function(query, isUnDelete, table, descriptor, targetTable) {\n            var value = CertificationTemplateUtils.getColumn(query);\n            if(!value)\n                return;\n            if(isUnDelete)\n\t\t\t\tupdateRestrictionField(table, value, descriptor, targetTable, 'add');\n            else\n\t\t\t\tupdateRestrictionField(table, value, descriptor, targetTable, 'delete');\n        };\n        \n\t\tvar onBeforeUnDelete = function(query, table, descriptor, targetTable) {\n            var value = CertificationTemplateUtils.getColumn(query);\n\t\t\tvar uniqueValue = getUniqueValue(value, descriptor, targetTable);\n\t\t\tif(CertificationTemplateUtils.restrictedFields[table].indexOf(uniqueValue) >= 0) {\n                var condType = 'relationship';\n                if(table == 'cert_attr_cond' || table == 'cert_related_list_cond')\n                    condType = 'attribute';    \n                return 'Cannot undelete. The ' + condType + ' is already being used.';\n            }\n            return;\n        };\n        \n\t\tvar onAdd = function(query, table, descriptor, targetTable) {\n            var value = CertificationTemplateUtils.getColumn(query);\n            if (value == null || value == '')\n                return;\n\t\t\t\n\t\t\tupdateRestrictionField(table, value, descriptor, targetTable, 'add');\n        };\n        \n\t\tvar onUpdate = function(oldQuery, newQuery, table, descriptor, targetTable) {\n            var oldValue = CertificationTemplateUtils.getColumn(oldQuery);\n            var newValue = CertificationTemplateUtils.getColumn(newQuery);\n            if(!oldValue || !newValue)\n                return;\n\t\t\tupdateRestrictionField(table, oldValue, descriptor, targetTable, 'delete');\n\t\t\tupdateRestrictionField(table, newValue, descriptor, targetTable, 'add');\n        };\n        CertificationTemplateUtils.addAddListener(onAdd);\n        CertificationTemplateUtils.addUpdateListener(onUpdate);\n        CertificationTemplateUtils.addDeleteListener(onDelete);\n        CertificationTemplateUtils.addBeforeUnDeleteListener(onBeforeUnDelete);\n\t};\n\t\n\tvar setupOperators = function() {\n\t\tvar operators = [];\n        for(var key in opersNS.opdef) {\n            if(key)\n                operators.push(opersNS.opdef[key][0]);\n        };\n        CertificationTemplateUtils._operators = operators;\n\t};\n\t\n\tvar setupOnSubmit = function() {\n\t\tvar thisForm = gel(g_form.getTableName() + '.do');\n        addOnSubmitEvent(thisForm, function() {\n            var form = gel(g_form.getTableName() + '.do');\n            if (!form) \n                return;\n\t\t\tif (CertificationTemplateUtils != null) \n            \tCertificationTemplateUtils.serializeToForm(form);\n        });\n\t};\n\t\n\tvar setupClickListeners = function() {\n\t\t// Setup show relationship checkboxes. W/o proper permissions\n\t\t// these are not on the DOM\n\t\tvar showRelationshipCbs = $$('.show-rel-cb');\n\t\tfor(var i = 0; i < showRelationshipCbs.length; i++) {\n\t\t\t(function() {\n\t\t\t\tvar cb = showRelationshipCbs[i];\n\t\t\t\tvar cbTbl = cb.getAttribute('table-name');\n\t\t\t\tcb.onclick = function() {\n\t\t\t\t\tCertificationTemplateUtils.cancelFilter(cbTbl);\n\t\t\t\t};\n\t\t\t})();\n\t\t}\n\t\t// setup delete icons. w delete permissions, these are \n\t\t// on the DOM\n\t\tvar deleteIcons = $$('.cond-delete-icon');\n\t\tfor(var i = 0; i < deleteIcons.length; i++) {\n\t\t\t(function() {\n\t\t\t\tvar delIcon = deleteIcons[i];\n\t\t\t\tvar table = delIcon.getAttribute('table-name');\n\t\t\t\tvar sysId = delIcon.getAttribute('sys-id');\n\t\t\t\tdelIcon.onclick = function(evt) {\n\t\t\t\t\tevt = evt || window.event;\n\t\t\t\t\tvar target = evt.target || evt.srcElement;\n\t\t\t\t\tCertificationTemplateUtils.toggleDeleteCondition(target, table, sysId);\n\t\t\t\t};\n\t\t\t})();\n\t\t}\n\t\t\n\t\t// setup span edits. w/ read permissions, these are on\n\t\t// the DOM\n\t\tvar activeSpans = $$('.cert-cond-display-span.active');\n\t\tfor(var i = 0; i < activeSpans.length; i++) {\n\t\t\t(function() {\n\t\t\t\tvar span = activeSpans[i];\n\t\t\t\tvar table = span.getAttribute('table-name');\n\t\t\t\tvar sysId = span.getAttribute('sys-id');\n\t\t\t\tspan.onclick = function(evt) {\n\t\t\t\t\tevt = evt || window.event;\n\t\t\t\t\tvar target = evt.target || evt.srcElement;\n\t\t\t\t\tCertificationTemplateUtils.editCondition(target, table, sysId, true);\n\t\t\t\t};\t\n\t\t\t})();\n\t\t}\n\t\t\n\t\t// setup the insert rows. w/ create permissions, these are on\n\t\t// the DOM\n\t\tvar inserts = $$('.insert-condition');\n\t\tfor(var i = 0; i < inserts.length; i++) {\n\t\t\t(function() {\n\t\t\t\tvar insert = inserts[i];\n\t\t\t\tvar table = insert.getAttribute('table-name-insert');\n\t\t\t\t$(insert).observe('click', function(evt) {\n\t\t\t\t\tCertificationTemplateUtils.addCondition(evt.target, table);\n\t\t\t\t});\n\t\t\t})();\n\t\t}\n\t\t\n\t};\n\t\n    addLoadEvent(function() {\n        setupOperators();\n        setupListEventSubscribers();\n\t\tsetupOnSubmit();\n\t\tsetupClickListeners();\n    });\n})();","sys_class_name":"sys_ui_script","sys_id":"a17f6991d7300100c11180f29e610360","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a057afbb04b12210559073c06a02f745","value":"a057afbb04b12210559073c06a02f745"},"ui_type":"0","sys_update_name":"sys_ui_script_a17f6991d7300100c11180f29e610360","sys_updated_by":"system","sys_created_on":"2013-04-16 20:53:48","name":"CertTemplateConditions","sys_name":"CertTemplateConditions","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"91","active":"true","description":"Client side javascript functions for the knowledge formless editing page","use_scoped_format":"false","global":"false","sys_updated_on":"2024-09-17 12:45:29","sys_tags":"","script_name":"","script":"/* Formless article editor.\n\n\n Accepted URI parameters:\n sysparm_stack = yes/no\n sysparm_context = popup\n sysparm_no_create = true/false\n sysparm_no_update = true/false\n sysparm_no_info = true/false\n sysparm_no_history = true/false\n sysparm_no_suggest = true/false\n sysparm_no_create_incident = true/false\n sysparm_no_rating = true/false\n */\n\nvar ArticleNotification = function () {\n\n\tfunction show(message, type) {\n\t\treset();\n\t\t$j('#messageType').addClass('outputmsg_' + type);\n\t\t$j('#messageType').addClass('notification-' + type);\n\t\t$j('#articleText').text(message);\n\t\t$j('#messageBox').show();\n\t}\n\n\tfunction hide() {\n\t\treset();\n\t\t$j('#messageBox').hide();\n\t}\n\n\tfunction reset() {\n\t\t$j('#articleText').text('');\n\t\t$j('#messageType').removeClass('outputmsg_error')\n\t\t\t.removeClass('notification-error')\n\t\t\t.removeClass('outputmsg_info')\n\t\t\t.removeClass('notification-info');\n\t}\n\n\treturn {\n\t\tshow: show,\n\t\thide: hide\n\t};\n};\n\nvar KbViewArticle = Class.create({\n\ttype: 'KbViewArticle',\n\tisQuirksMode: (document.compatMode !== 'CSS1Compat'),\n\tmessageBar: new ArticleNotification(),\n\trefreshDelay: 3000,\n\tcanContribute: false,\n\tgwtMessage: new GwtMessage(),\n\n\tsetUpArticleBannerAndAuthorInfo: function () {\n\t\t// Does the page have a large banner image on the top\n\t\tvar hasBannerImage = $j('#articleBanner').length > 0;\n\t\t// Determine how the author name should be styled\n\t\tvar authorName = $j('#authorName');\n\t\tif (authorName.length) {\n\t\t\tif (hasBannerImage) {\n\t\t\t\tauthorName.addClass('snc-article-header-author-name-white');\n\t\t\t\tif (this.isQuirksMode) {\n\t\t\t\t\tauthorName.addClass('snc-article-text-outline-text-ie-white');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tauthorName.addClass('snc-article-header-author-name-no-image');\n\t\t\t}\n\t\t}\n\t\t// Determine how the author ghost should be be styled\n\t\tvar authorGhost = $j('#authorGhost');\n\t\tif (authorGhost.length) {\n\t\t\tif (hasBannerImage)\n\t\t\t\tauthorGhost.addClass('snc-article-header-author-ghost-white');\n\t\t\telse\n\t\t\t\tauthorGhost.addClass('snc-article-header-author-ghost-black');\n\t\t}\n\t\t// Determine how the border around the author image should be styled\n\t\tvar authorImageBorder = $j('#authorImageBorder');\n\t\tif (authorImageBorder.length) {\n\t\t\tif (hasBannerImage)\n\t\t\t\tauthorImageBorder.addClass('snc-article-header-author-border-white');\n\t\t\telse\n\t\t\t\tauthorImageBorder.addClass('snc-article-header-author-border-black');\n\t\t}\n\t\t// Determine how the readonly version of the article title should be styled\n\t\tvar articleTitleReadonly = $j('#articleTitleReadonly');\n\t\tif (articleTitleReadonly.length) {\n\t\t\tif (hasBannerImage) {\n\t\t\t\tarticleTitleReadonly.addClass('snc-article-header-toolbar-title-white');\n\t\t\t\tif (this.isQuirksMode) {\n\t\t\t\t\tarticleTitleReadonly.addClass('snc-article-text-outline-text-ie-white');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tarticleTitleReadonly.addClass('snc-article-header-toolbar-title-no-image');\n\t\t\t}\n\t\t}\n\t},\n\n\t// partial initialisation of the page.\n\tonLoaded: function () {\n\t\t$j('#backButton').click(this.backButtonHandler.bind(this));\n\t\t$j('#editArticle').click(this.editArticleHandler.bind(this));\n\t\t$j('#attachToTask').click(this.attachToTaskHandler.bind(this));\n\t\t$j('#createIncident').click(this.incidentBtnHandler.bind(this));\n\t\t$j('#flagArticle').click(this.flagArticleHandler.bind(this));\n\t\tif($j('#articleVersioningInstalled').val() == 'true') {\n\t\t\t$j('#subscribeArticle').click(this.subscribeArticleHandler.bind(this));\n\t\t\t$j('#unsubscribeArticle').click(this.unsubscribeArticleHandler.bind(this));\n\t\t\t$j('#unsubscribeDialog').click(this.unsubscribeKBHandler.bind(this));\n\t\t}\n\t\t$j('#article').focus(this.focusHandler.bind(this))\n\t\t\t.blur(this.blurHandler.bind(this));\n\t\t//$j('#versionNumber').click(this.showVersionHistory.bind(this));\n\t\t$j('#versionNumber').click(function (event) {\n\t\t\tvar expanded = $j('#versionNumber').attr('aria-expanded');\n\t\t\t$j('#versionNumber').attr('aria-expanded', expanded === 'true' ? 'false' : 'true');\n\t\t}.bind(this));\n\n\t\t// Add load handler for article banner field\n\t\tthis.setUpArticleBannerAndAuthorInfo();\n\t\t// Show meta fields\n\t\t$j('#articleFooter').show();\n\t\tthis.setMetaDataVisibility();\n\t\t// Show feedback if viewing article content other than outdated\n\t\tif (!this.isOutdated()) {\n\t\t\t$j('#articleFooterSection').removeAttr('style'); // unhide\n\t\t}\n\t\t// Add event handler to article content placeholder field\n\t\t$j('#articlePlaceHolder').click(function (event) {\n\t\t\tif (tinymce.editors.length) {\n\t\t\t\ttinymce.activeEditor.focus();\n\t\t\t} else {\n\t\t\t\tvar elemId = (this.isWiki || this.isQuirksMode) ? '#articleWiki' : '#article';\n\t\t\t\t$j(elemId).focus();\n\t\t\t}\n\t\t}.bind(this));\n\t\t// Hide/Show Comments section\n\t\t$j('#user_feedback_div_show').click(this.showCommentsHandler.bind(this));\n\t\t$j('#user_feedback_div_hide').click(this.hideCommentsHandler.bind(this));\n\t\t\n\t\tif($j('#user_feedback_div_hide').is(':visible')) {\n\t\t\tthis.hideCommentsOnLoad();\n\t\t}\n\n\t\t   \t// Bind an event to window.onhashchange that, when the hash changes, scroll to exact bookmark in the KBA\n\t    $j(window).bind( 'hashchange', function(event){\n  \t\t    offSetScroll(window.location.hash);\n\t    });\n\t    \n    \t// Bind an event to window.load that, when the page loads changes, scroll to exact spot in the KBA if url contains any hash bookmarks\n\t    $j(window).bind('load', function(event) {\n\t        offSetScroll(window.location.hash);\n\t    });\t\n\t    \n\t    // Bind an event to anchor <a> link click that, when the link is clicked, scroll to exact bookmark in the KBA\n\t\t$j(\"a\").click(navigationBookmarkLinkHandler.bind(this));\n\t\tfunction navigationBookmarkLinkHandler(event) {\n\t\t\tvar href = Event.element(event)+'';\n\t\t\tif (href == undefined || href == null)\n\t\t\t\treturn;\n\t\t\t\n\t\t    var hash = href.substring(href.indexOf(\"#\"));\n\t        offSetScroll(hash);\n\t\t}\n\t    \n\t    // using the offset scroll to the right spot of the bookmark in the KBA\n\t    function offSetScroll(hash) {\n\t\t\t//Change this according to the height of the navigation bar\n\t\t    var fromTop = 50;\t// nav bar padding is set to 40px, leaving a 10px from top after scroll\n\t\t    // validate if the href starts with # ie a bookmark within the article\n\t\t    if (hash.indexOf('#') != 0)\n\t\t    \treturn;\n\t\t    \n\t\t    // getting elem by id\n\t\t\tvar elem = $j(hash);\t \n\t\t\tvar elemOffset = elem.offset();\n\t\t    if (elemOffset == undefined || elemOffset == null){\n\t\t\t\t// getting elem by name if not found by id\n\t \t\t\telem = $j('a[name=\"'+hash.substring(1)+'\"]');\t\n\t\t   \t\telemOffset = elem.offset();\n\t\t    }\n\t\t\tif (elemOffset == undefined || elemOffset == null)\n\t\t\t\treturn;\n\t\t\t\n\t\t\tvar targetOffset = elemOffset.top-fromTop;\n\t\t    $j('html, body').animate({scrollTop: targetOffset}, 500, function(e) {});\n\t\t}\n\t},\n\t\n\tshowIfPopulated: function (containerId, contentId) {\n\t\tif ($j('#' + contentId).html()) {\n\t\t\t$j('#' + containerId).show();\n\t\t}\n\t},\n\t\n\tupdateMetaField: function (containerId, valueId, value) {\n\t\tvar elem = $j('#' + valueId);\n\t\tif (!elem.length)\n\t\t\treturn;\n\n\t\telem.text(value);\n\t\tvar method = value ? 'show' : 'hide';\n\t\t$j('#' + containerId)[method]();\n\t},\n\n\tsetMetaDataContent: function (kbViewInfo) {\n\t\tvar knowledgeRecord = kbViewInfo.knowledgeRecord;\n\t\tthis.updateMetaField(\"articleVersion\", \"articleVersionValue\", kbViewInfo.knowledgeBaseVersion);\n\t\tthis.updateMetaField('articlePublished', 'articlePublishedValue', knowledgeRecord.published);\n\t\tthis.updateMetaField('articleNumber', 'articleNumberValue', knowledgeRecord.number);\n\t\tthis.updateMetaField('articlePermalink', 'articlePermalinkValue', kbViewInfo.permalink);\n\t\tthis.updateMetaField('articleCategory', 'articleCategoryValue', knowledgeRecord.category);\n\t\tif ($('articlePermalinkValue'))\n\t\t\t$j('#articlePermalinkValue').attr('href', kbViewInfo.permalink);\n\t\tthis.updateMetaField('articleAuthorName', 'articleAuthorNameValue', kbViewInfo.authorName);\n\t\tthis.updateMetaField('articleAuthorCompany', 'articleAuthorCompanyValue', kbViewInfo.authorCompany);\n\t\tthis.updateMetaField('articleAuthorDepartment', 'articleAuthorDepartmentValue', kbViewInfo.authorDepartment);\n\t\tthis.updateMetaField('articleAuthorTitle', 'articleAuthorTitleValue', kbViewInfo.authorTitle);\n\t},\n\n\tsetMetaDataVisibility: function () {\n\t\t$j('#attachments').hide();\n\t\tif ($j('#articleDisplayAttachments').val() === 'true')\n\t\t\tthis.showIfPopulated('attachments', 'attachments-content');\n\n\t\tthis.showIfPopulated(\"articleVersion\", \"articleVersionValue\");\n\t\tthis.showIfPopulated('articlePublished', 'articlePublishedValue');\n\t\tthis.showIfPopulated('articleNumber', 'articleNumberValue');\n\t\tthis.showIfPopulated('articlePermalink', 'articlePermalinkValue');\n\t\tthis.showIfPopulated('articleCategory', 'articleCategoryValue');\n\t\tthis.showIfPopulated('articleAuthorName', 'articleAuthorNameValue');\n\t\tthis.showIfPopulated('articleAuthorCompany', 'articleAuthorCompanyValue');\n\t\tthis.showIfPopulated('articleAuthorDepartment', 'articleAuthorDepartmentValue');\n\t\tthis.showIfPopulated('articleAuthorTitle', 'articleAuthorTitleValue');\n\t},\n\n\tisPublished: function () {\n\t\treturn this.isState('published');\n\t},\n\n\tisRetired: function () {\n\t\treturn this.isState('retired');\n\t},\n\n\tisDraft: function () {\n\t\treturn this.isState('draft');\n\t},\n\n\tisReview: function () {\n\t\treturn this.isState('review');\n\t},\n\n\tisOutdated: function () {\n\t\treturn this.isState('outdated');\n\t},\n\n\tisState: function (state) {\n\t\treturn state === $j('#articleWorkflowState').val();\n\t},\n\t\n\tisModified: function () {\n\t\treturn $j('#articleModified').val() === 'true';\n\t},\n\t\n\tisNew: function () {\n\t\treturn $j('#articleIsNew').val() === 'true';\n\t},\n\t\n\tcanShowKBFeedback: function () {\n\t\treturn $j('#canShowKBFeedback').val() === 'true';\n\t},\n\t\n\tisDisplayFromPopup: function () {\n\t\tif (self.opener && self.opener.document.getElementById(\"section_form_id\") != null) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\t\n\tisLiveFeedEnabled: function () {\n\t\treturn $j('#isLiveFeedEnabled').val() === 'true';\n\t},\n\t\n\tsetModified: function (value) {\n\t\t$j('#articleModified').val(value + '');\n\t},\n\t\n\tsetViewMode: function () {\n\t\t$j('#articleEditMode').val(false);\n\t},\n\n\tsetCanContribute: function (value) {\n\t\tthis.canContribute = value;\n\t},\n\n\tenableButtons: function (btnIds) {\n\t\t$j(btnIds).removeAttr('disabled');\n\t},\n\n\tdisableButtons: function (btnIds) {\n\t\t$j(btnIds).attr('disabled', 'true');\n\t},\n\n\tresetButtonState: function () {\n\t\t// Hide each item in toolbar\n\t\tvar buttons = $j('.snc-article-header-toolbar-button');\n\t\tif (!buttons.length) {\n\t\t\treturn;\n\t\t}\n\n\t\tbuttons.removeAttr('disabled').removeClass('btn-primary').addClass('btn-default').hide();\n\t\t// Get hidden field values to check state\n\t\tvar isDraft = this.isDraft();\n\t\tvar isReview = this.isReview();\n\t\tvar isPublished = this.isPublished();\n\t\tvar isRetired = this.isRetired();\n\t\tvar showKBCreateIncident = $j('#articleShowKBCreateIncident').val() === 'true';\n\t\t//Everyone should see it\n\t\t$j('#flagArticle').show();\n\t\tvar isDisplayFromPopup = this.isDisplayFromPopup();\n\t\tif (isDisplayFromPopup) {\n\t\t\t$j('#attachToTask').show();\n\t\t}\n\n\t\tif (!this.canContribute) { // Read only mode\n\t\t\tif (isPublished && showKBCreateIncident) {\n\t\t\t\t$j('#createIncident').show();\n\t\t\t}\n\t\t} else {\n\t\t\t$j('#editArticle').show();\n\t\t\tif (showKBCreateIncident) {\n\t\t\t\t$j('#createIncident').show();\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar visibleBtns = $j('#editArticle:visible');\n\t\tvisibleBtns.not(':disabled').last().removeClass('btn-default').addClass('btn-primary');\n\t},\n\n\tresetArticleFieldState: function () {\n\t\t$j('#articlePlaceHolder').hide();\n\t\t$j('#articleTitleReadonly').hide();\n\t\t$j('#articleNumberReadonly').hide();\n\t\t$j('#articleTitleEditable').hide();\n\t\t$j('#article').hide();\n\n\t},\n\n\tresetPage: function (kbViewInfo) {\n\t\tthis.setViewMode();\n\t\t// Hide any message that may be on display\n\t\tthis.messageBar.hide();\n\t\t// Set up hidden fields from kb_view_hidden_fields\n\t\tvar knowledgeRecord = kbViewInfo.knowledgeRecord;\n\t\t$j('#articleId').val(knowledgeRecord.sys_id);\n\t\tif (!kbViewInfo.isNewRecord && window.history.replaceState) {\n\t\t\twindow.history.replaceState('', knowledgeRecord.number, 'kb_view.do?sys_kb_id=' + knowledgeRecord.sys_id);\n\t\t}\n\n\t\t$j('#articleVersion').val(kbViewInfo.knowledgeBaseVersion);\n\t\t$j('#articleWorkflowState').val(knowledgeRecord.workflow_state);\n\t\t$j('#articleTitleReadonly').html(knowledgeRecord.short_description);\n\t\t$j('#articleNumberReadonly').html(knowledgeRecord.number);\n\t\t$j('#articleTextType').val(kbViewInfo.articleType);\n\t\t$j('#articleOriginal').val(knowledgeRecord.text);\n\t\t$j('#article').html(knowledgeRecord.text);\n\t\t//Set state for livefeed and comments\n\t\t$j('#isLiveFeedEnabled').val(kbViewInfo.isLiveFeedEnabled);\n\t\t$j('#canShowKBFeedback').val(kbViewInfo.showKBFeedback);\n\t\t// Set up state of article title and content fields\n\t\tthis.resetArticleFieldState();\n\t\t// Must update meta content fields\n\t\tthis.setMetaDataContent(kbViewInfo);\n\t\tthis.setMetaDataVisibility();\n\t\t// If viewing published content show feedback\n\t\tif (this.isPublished()) {\n\t\t\t$j('#articleFooterSection').removeAttr('style'); // unhide\n\t\t\t// If we're using live feed comments then ensure it's loaded with the correct ID\n\t\t\tvar attr = $j('#iframe_live_feed').attr('src');\n\t\t\tif (attr && attr.match(/sysparm_kb_id=[a-z0-9]{32}/)) {\n\t\t\t\t$j('#iframe_live_feed').attr('src', '$knowledge_feedback.do?sysparm_stack=no&sysparm_kb_id=' + knowledgeRecord.sys_id);\n\t\t\t}\n\t\t} else {\n\t\t\t$j('#articleFooterSection').css('display', 'none');\n\t\t}\n\t\t// Set up the initial state of buttons\n\t\tthis.resetButtonState();\n\t\t// Update Author Information\n\t\tthis.updateAuthorInfo(kbViewInfo);\n\t},\n\n\tupdateAuthorInfo: function (kbViewInfo) {\n\t\tvar $elem = $j('#authorName');\n\t\tif ($elem.length) {\n\t\t\t$elem.html(kbViewInfo.authorName);\n\t\t\t$j('#authorImage').attr('src', kbViewInfo.authorImage);\n\t\t}\n\t},\n\t\n\tsubscribeArticleHandler: function() {\n\t\tvar self = this;\n\t\tvar ajax = new GlideAjax('KnowledgeAjax');\n\t\tajax.addParam('sysparm_type', 'subscribeKbArticle');\n\t\tajax.addParam('sysparm_subs_obj_type_id', '7d8f537453003200fa9bd7b08cc5872c');\n\t\tajax.addParam('sysparm_article_id', $j('#articleId').val());\n\t\tajax.getXML(function () {\n\t\t\tvar msg = self.getL10N('You are now subscribed to {0}. You will be notified of any new activity according to your notification preferences.');\n\t\t\tmsg = msg.replace('{0}',$j('#articleNumber').val());\n\t\t\tself.messageBar.hide();\n\t\t\tself.messageBar.show(msg, 'info');\n\t\t});\n\t\t$j(\"#subscribeArticle\").hide();\n\t\t$j(\"#unsubscribeArticle\").show();\n\t\t$j(\"#unsubscribeArticle\").focus();\n\t},\n\t\n\tunsubscribeArticleHandler: function() {\n\t\tvar self = this;\n\t\tvar ajax = new GlideAjax('KnowledgeAjax');\n\t\tajax.addParam('sysparm_type', 'unsubscribeKbArticle');\n\t\tajax.addParam('sysparm_article_id', $j('#articleId').val());\n\t\tajax.getXML(function () {\n\t\t\tvar msg = self.getL10N('Your subscription to {0} has been removed.');\n\t\t\tmsg = msg.replace('{0}',$j('#articleNumber').val());\n\t\t\tself.messageBar.hide();\n\t\t\tself.messageBar.show(msg, 'info');\n\t\t});\n\t\t$j(\"#subscribeArticle\").show();\n\t\t$j(\"#subscribeArticle\").focus();\n\t\t$j(\"#unsubscribeArticle\").hide();\n\t},\n\t\n\tunsubscribeKBHandler: function() {\n\t\tvar self = this;\n\t\tvar ajax = new GlideAjax('KnowledgeAjax');\n\t\tajax.addParam('sysparm_type', 'unsubscribeKB');\n\t\tajax.addParam('sysparm_article_id', $j('#articleId').val());\n\t\tajax.addParam('sysparm_kb_id', $j('#articleKnowledgeBase').val());\n\t\tajax.getXML(function (response) {\n\t\t\tvar answer = response.responseXML.documentElement.getAttribute(\"answer\");\n\t\t\tvar msg;\n\t\t\tif(answer == \"Article\") {\n\t\t\t  \tmsg = self.getL10N('Your subscriptions to {0} Knowledge Base and {1} have been removed.');\n\t\t\t\tmsg = msg.replace('{0}',$j('#articleKnowledgeBaseName').val());\n\t\t\t\tmsg = msg.replace('{1}',$j('#articleNumber').val());\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmsg = self.getL10N('Your subscription to {0} Knowledge Base has been removed.');\n\t\t\t\tmsg = msg.replace('{0}',$j('#articleKnowledgeBaseName').val());\n\t\t\t}\n\t\t\tself.messageBar.hide();\n\t\t\tself.messageBar.show(msg, 'info');\n\t\t});\n\t\t$j(\"#subscribeArticle\").show();\n\t\t$j(\"#subscribeArticle\").focus();\n\t\t$j(\"#unsubscribeAtKb\").hide();\n    },\n\n\tflagArticleHandler: function () {\n\t\tvar self = this;\n\t\tvar overlay = new GlideOverlay({\n\t\t\tid: 'suggestChange',\n\t\t\ttitle: self.getL10N('Flag this article'),\n\t\t\twidth: '60%',\n\t\t\theight: 250,\n\t\t\tfadeInTime: 250,\n\t\t\tonAfterClose: function() {\n\t\t\t\t$j('#flagArticle').focus();\n\t\t\t},\n\t\t\tdraggable: false,\n\t\t\tiframe: 'kb_view_suggest.do?sys_id=-1&sysparm_nostack=yes&sysparm_popup=true',\n\t\t\tonAfterLoad: function () {\n\t\t\t\tthis.setHeight('250px');\n\t\t\t\tthis.autoPosition();\n\t\t\t\tvar doc = overlay.getIFrameElement().contentWindow.document;\n\t\t\t\tvar iframe = $j(overlay.getIFrameElement());\n\t\t\t\t$j('#suggestChange', iframe.contents()).click({dlg: overlay}, function(eventObj) {\n\t\t\t\t\tvar comments = doc.getElementById('suggestText').value;\n\t\t\t\t\tif (!comments) {\n\t\t\t\t\t\tdoc.getElementById('errorMsg').innerHTML = self.getL10N('Please provide a comment');\n\t\t\t\t\t\tdoc.getElementById('suggestText').focus();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdoc.getElementById(\"suggestChange\").setAttribute(\"disabled\", true);\n\t\t\t\t\t\tvar updateAriaLive = function(){\n\t\t\t\t\t\t\tvar elmnt = this.getElementById('messageType');\n\t\t\t\t\t\t\telmnt.setAttribute(\"tabindex\",\"0\");\n\t\t\t\t\t\t\telmnt.focus();\n\t\t\t\t\t\t\tthis.getElementById('articleText').setAttribute(\"aria-live\", \"polite\");\n\t\t\t\t\t\t}.bind(document);\n\n\t\t\t\t\t\tvar ajax = new GlideAjax('KBAjax');\n\t\t\t\t\t\tajax.addParam('sysparm_type', 'kbWriteComment');\n\t\t\t\t\t\tajax.addParam('sysparm_search', '');\n\t\t\t\t\t\tajax.addParam('sysparm_id', $j('#articleId').val());\n\t\t\t\t\t\tajax.addParam('sysparm_flag', true);\n\t\t\t\t\t\tajax.addParam('sysparm_feedback', escape(comments));\n\t\t\t\t\t\tajax.addParam('sysparm_isV3', true);\n\t\t\t\t\t\tvar kbId = document.getElementById('ts_queryId');\n\t\t\t\t\t\tif(kbId){\n\t\t\t\t\t\t\tajax.addParam('ts_queryId', kbId.value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tajax.getXMLAnswer(function(answer){\n\t\t\t\t\t\t\teventObj.data.dlg.close();\n\t\t\t\t\t\t\tvar data = answer.evalJSON(true);\n\t\t\t\t\t\t\tif(!data.success)\n\t\t\t\t\t\t\t\treturn kbViewArticle.showErrorMessage(data.message);\n\t\t\t\t\t\t\tkbViewArticle.messageBar.show(self.getL10N('Article has been flagged'), 'info');\n\t\t\t\t\t\t\tupdateAriaLive();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t$j('#suggestChangeCancel', iframe.contents()).click({dlg: overlay}, function(eventObj) {\n\t\t\t\t\teventObj.data.dlg.close();\n\t\t\t\t});\n\t\t\t\t$j(doc).on('keydown', {\n                    dlg: overlay\n                }, function(evt) {\n                    evt = evt || window.event;\n\t\t    // key code for Escape key\n                    if (evt.keyCode == 27) {\n                        evt.data.dlg.close();\n                    }\n                });\n\t\t\t}\n\t\t});\n\t\toverlay.render();\n\t},\n\t\n\tsetPageViewable: function () {\n\t\tthis.setViewMode();\n\t\t// fill hidden backup fields\n\t\t$j('#articleOriginal').val($j('#article').html());\n\t\t$j('#articleTitleOld').val($j('#articleTitleEditable').val());\n\t\t// Return if this is a new article (As there is nothing else to do for now)\n\t\t$j('#articlePlaceHolder').hide();\n\t\t$j('#articleTitleReadonly').show();\n\t\t$j('#articleNumberReadonly').show();\n\t\t$j('#article').css(\"display\", \"block\");\n\t\tthis.unfade('#articleFooter, #articleFooterSection');\n\t\t// Configure toolbar buttons\n\t\tthis.resetButtonState();\n\t},\n\n\t// accepts comma separated list of selectors\n\tfade: function (elemId) {\n\t\t$j(elemId).addClass('snc-faded');\n\t},\n\n\t// accepts comma separated list of selectors\n\tunfade: function (elemId) {\n\t\t$j(elemId).removeClass('snc-faded');\n\t},\n\t\n\tfocusHandler: function (event) {\n\t},\n\n\tblurHandler: function (event) {\n\t},\n\t\n\tmouseEnterHandler: function (event) {\n\t\tvar element = Event.element(event);\n\t\telement.removeClassName('snc-article-header-toolbar-button-blur');\n\t\telement.addClassName('snc-article-header-toolbar-button-focus');\n\t\telement.setStyle({color: 'black'});\n\t},\n\n\tmouseLeaveHandler: function (event) {\n\t\tvar element = Event.element(event);\n\t\telement.removeClassName('snc-article-header-toolbar-button-focus');\n\t\telement.addClassName('snc-article-header-toolbar-button-blur');\n\t\telement.setStyle({color: 'black'});\n\t},\n\n\tmouseUpHandler: function (event) {\n\t\tvar element = Event.element(event);\n\t\tvar isIconElement = element.hasClassName('snc-article-header-toolbar-button-icon');\n\t\tvar isTextElement = element.hasClassName('snc-article-header-toolbar-button-text');\n\t\tvar targetElement = (isIconElement || isTextElement) ? element.up() : element;\n\t\ttargetElement.setStyle({color: 'black'});\n\t},\n\n\tmouseDownHandler: function (event) {\n\t\tvar element = Event.element(event);\n\t\tvar isIconElement = element.hasClassName('snc-article-header-toolbar-button-icon');\n\t\tvar isTextElement = element.hasClassName('snc-article-header-toolbar-button-text');\n\t\tvar targetElement = (isIconElement || isTextElement) ? element.up() : element;\n\t\ttargetElement.setStyle({color: 'black'});\n\t},\n\n\ttouchStartHandler: function (event) {\n\t\tvar element = Event.element(event);\n\t\tvar isIconElement = element.hasClassName('snc-article-header-toolbar-button-icon');\n\t\tvar isTextElement = element.hasClassName('snc-article-header-toolbar-button-text');\n\t\tvar targetElement = (isIconElement || isTextElement) ? element.up() : element;\n\t\ttargetElement.removeClassName('snc-article-header-toolbar-button-blur');\n\t\ttargetElement.addClassName('snc-article-header-toolbar-button-focus');\n\t},\n\n\ttouchEndHandler: function (event) {\n\t\tvar element = Event.element(event);\n\t\tvar isIconElement = element.hasClassName('snc-article-header-toolbar-button-icon');\n\t\tvar isTextElement = element.hasClassName('snc-article-header-toolbar-button-text');\n\t\tvar targetElement = (isIconElement || isTextElement) ? element.up() : element;\n\t\ttargetElement.removeClassName('snc-article-header-toolbar-button-focus');\n\t\ttargetElement.addClassName('snc-article-header-toolbar-button-blur');\n\t},\n\n\tdiscardArticleChanges: function () {\n\t\tvar articleTitleOld = $j('#articleTitleOld').val();\n\t\t$j('#articleTitleEditable').val(articleTitleOld);\n\t\t$j('#articleTitleReadonly').html(articleTitleOld);\n\t\tvar content = $j('#articleOriginal').val();\n\t\t$j('#articleWiki').val(content);\n\t\t$j('#article').html(content);\n\t\tthis.setModified(false);\n\t\tthis.setPageViewable(false);\n\t\tthis.showInfoMessage(kbConfig.i18n.DISCARDED);\n\t},\n\n\tbackButtonHandler: function () {\n\t\tvar currentUrl = window.location.href;\n\t\tvar ajax = new GlideAjax('KBAjax');\n\t\tajax.addParam('sysparm_type', 'popOutFromStack');\n\t\tajax.addParam('sysparm_url',currentUrl);\n\t\tajax.getXML();\n\t\tif (window.history) {\n\t\t\twindow.history.go(-1);\n\t\t}\n\t},\n\t\n\teditArticleHandler:function(){\n\t\tvar revURL = new GlideURL(\"kb_knowledge.do\");\n\t\trevURL.addParam(\"sys_id\", $j('#articleId').val());\n\t\trevURL.addParam(\"sysparm_referring_url\",\"kb_view.do\");\n\t\t//set referring url ,so that update/retire UI actions works properly\n\t\tvar frame = top.gsft_main || top;\n\t\tframe.location = revURL.getURL();\n\t},\n\t\n\tattachToTaskHandler: function () {\n\t\tif (self.opener) {\n\t\t\tvar lastSaved = self.opener.document.getElementById(\"onLoad_sys_updated_on\").value;\n\t\t\tif (!lastSaved) {\n\t\t\t\tself.close();\n\t\t\t\tvar err = (gel('error_msg') != null) ? gel('error_msg').value : \"Invalid action: Record needs to be saved first\";\n\t\t\t\tself.opener.g_form.addErrorMessage(err);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar e = self.opener.document.getElementById(\"sys_uniqueValue\");\n\t\t\tvar task = e.value;\n\t\t}\n\n\t\tvar sysID = $j('#articleId').val();\n\t\tvar args = new Array();\n\t\targs.push(sysID);\n\t\targs.push($j('#attachFields').val());\n\n\t\tvar ajax = new GlideAjax(\"KnowledgeAjax\");\n\t\tajax.addParam(\"sysparm_type\", \"kbAttachArticle\");\n\t\tajax.addParam(\"sysparm_value\", sysID + \",\" + task);\n\t\tajax.getXML(kbReturnAttach2, \"\", args);\n\n\t\treturn false;\n\t},\n\t\n\tshowInfoMessage: function (message) {\n\t\tthis.messageBar.hide();\n\t\tthis.messageBar.show(this.getL10N(message), 'info');\n\t},\n\n\tshowWarningMessage: function (message) {\n\t\tthis.messageBar.show(this.getL10N(message), 'warning');\n\t},\n\n\tshowErrorMessage: function (message) {\n\t\tthis.messageBar.show(this.getL10N(message), 'error');\n\t},\n\n\tincidentBtnHandler: function (event) {\n\t\tvar loc = $j('#createIncidentLinkLocation').val();\n\t\tif (loc && loc.length) {\n\t\t\twindow.location = loc;\n\t\t}\n\t},\n\n\tsynchArticleTitle: function () {\n\t\tvar value = $j('#articleTitleEditable').val();\n\t\t$j('#articleTitleReadonly').val(value);\n\t\t$j('#articleTitleOld').val(value);\n\t},\n\n\tdisplayStateMessage: function () {\n\t\tvar workflowState = $j('#articleWorkflowState').val();\n\t\tif (workflowState === 'review' || workflowState === 'pending_retirement') {\n\t\t\tthis.showInfoMessage(this.getStateMessage(workflowState));\n\t\t}\n\t},\n\n\tgetStateMessage: function (state) {\n\t\treturn kbConfig.i18n.STATUS_MSG[state] || '';\n\t},\n\n\tgetL10N: function (message, array) {\n\t\tmessage = message || '';\n\t\tvar padded = ' ' + message + ' ';\n\t\tvar translated = getMessage(padded, array);\n\t\tvar trimmed = translated.trim();\n\t\treturn trimmed;\n\t},\n\t\n\thideConfirmationDlg: function () {\n\t\t$j('#kb_confirmationDlg').hide();\n\t},\n\n\tpopupConfirmationDlg: function (title, msg, callBack) {\n\t\tvar popup = $j('#kb_confirmationDlg');\n\t\tpopup.find('.modal-title').text(title);\n\t\tpopup.find('.modal-body p').text(msg);\n\t\tpopup.find('.kb-yes-btn').off('click').click(callBack);\n\t\tpopup.show();\n\t},\n\n\tshowCommentsHandler: function () {\n\t\t$j('#user_feedback_div_show').hide();\n\t\t$j('#user_feedback_div_hide').css(\"display\",\"inline-block\").focus();\n\t\t$j('#kbCommentsAndLiveFeedDisplay').css('visibility','visible');\n\t\t$j('#kbCommentsAndLiveFeedDisplay').css('height','');\n\t\t$j('#kbCommentsAndLiveFeedDisplay').css('position','');\n\t},\n\n\thideCommentsHandler: function () {\n\t\t$j('#user_feedback_div_hide').hide();\n\t\t$j('#user_feedback_div_show').css(\"display\",\"inline-block\").focus();\n\t\t$j('#kbCommentsAndLiveFeedDisplay').css('visibility','hidden');\n\t\t$j('#kbCommentsAndLiveFeedDisplay').css('height','0');\n\t\t$j('#kbCommentsAndLiveFeedDisplay').css('position','absolute');\n\t},\n\t\n\thideCommentsOnLoad: function() {\n\t\t$j('#user_feedback_div_hide').hide();\n\t\t$j('#user_feedback_div_show').css(\"display\",\"inline-block\");\n\t\t$j('#kbCommentsAndLiveFeedDisplay').css('visibility','hidden');\n\t\t$j('#kbCommentsAndLiveFeedDisplay').css('height','0');\n\t\t$j('#kbCommentsAndLiveFeedDisplay').css('position','absolute');\n\t},\n\n\tsetTitle: function (title) {\n\t\t$j(\".snc-article-header-toolbar h1.navbar-title\").html(title);\n\t},\n\t\n\tgetArticleStyle: function () {\n\t\treturn $j(\"#articleStyle\").val();\n\t},\n\t\n\tshowVersionHistory: function(){\n\t\t$j('#versions-list').removeAttr('style');\n\t\t$j('#versions-list').addClass('in');\n\t\t$j('#history-toggle').removeClass('collapsed');\n\t}\n});\n\n\nfunction kbFeedbackDone(response) {\n\t// Add the comment to the comments section\n\tvar result = response.responseXML.getElementsByTagName('item')[0];\n\tif(!result.getAttribute('id')){\n\t\t//If the comment has not been inserted into the kb_feedback table we need to show this error message.\n\t\twindow.scrollTo(0,0);\n\t\treturn kbViewArticle.showErrorMessage(kbViewArticle.getL10N('You have reached the daily limit for comments posted by a user.'));\n\t}\n\tvar name = result.getAttribute('name').escapeHTML();\n\tvar date = result.getAttribute('date');\n\tvar comment = result.getAttribute('comment');\n\tvar messages = getMessages(['Posted by', 'on', 'Feedback', 'Comments', 'comment']);\n\tvar commentElem = new Element('div', {'class': 'snc-kb-comment'});\n\tvar commentDetails = new Element('div', {'class': 'snc-kb-comment-by'});\n\tvar commentImg = new Element('img', {'src': 'images/icons/feedback.gifx', 'alt': messages['Feedback']});\n\tvar commentPostedBy = new Element('span', {'class': 'snc-kb-comment-by-title'});\n\tvar commentUser = new Element('span', {'class': 'snc-kb-comment-by-user'});\n\tvar commentOn = new Element('span', {'class': 'snc-kb-comment-by-title'});\n\tvar commentDate = new Element('span', {'class': 'snc-kb-comment-by-date'});\n\tvar commentText = new Element('span', {'class': 'snc-kb-comment-by-text'});\n\n\tcommentPostedBy.insert('&nbsp;' + messages['Posted by']);\n\tcommentUser.insert('&nbsp;' + name);\n\tcommentOn.insert('&nbsp;' + messages['on']);\n\tcommentDate.insert('&nbsp;' + date);\n\tcommentText.insert(comment.unescapeHTML());\n\tcommentDetails.insert(commentImg);\n\tcommentDetails.insert(commentPostedBy);\n\tcommentDetails.insert(commentUser);\n\tcommentDetails.insert(commentOn);\n\tcommentDetails.insert(commentDate);\n\tcommentElem.insert(commentDetails);\n\tcommentElem.insert(commentText);\n\tcommentElem.setAttribute('role','listitem');\n\tcommentElem.setAttribute('aria-label', name + ' ' + messages['comment']);\n\t$('comments_section').insert({top: commentElem});\n\t$('comments_section').setAttribute('role','list');\n\t$('comments_section').setAttribute('aria-label', messages['Comments']);\n\t// Scroll to the first comment (newly added one)\n\t$j('html, body').animate({ scrollTop: $j('#kbCommentsAndLiveFeedDisplay').offset().top }, 1000);\n}\n\nfunction kbFeedback2(name) {\n\tvar commentsdivempty=$('commentsdiv_empty');\n\tif(commentsdivempty){\n\t\tcommentsdivempty.hide();\n\t}\n\tvar comments = ($(name) ? $(name).value : '');\n\tif (comments == '' || comments.trim().length==0) {\n\t\t$j('#article_comments').addClass('snc-kb-comment-field-empty-border');\n\t\t$j('#article_comments').focus();\n\t\tshowObject(gel('commentsdiv_empty'));\n\t\treturn false;\n\t}\n    if($j('#article_comments').hasClass('snc-kb-comment-field-empty-border'))\n       $j('#article_comments').removeClass('snc-kb-comment-field-empty-border');\n\tvar sys_id = ($('articleId') ? $('articleId').value : '');\n\tvar flag = document.getElementById('article_flag');\n\tvar view_id = document.getElementById('view_id');\n\tvar query = document.getElementById('sysparm_search');\n\tvar ajax = new GlideAjax('KBAjax');\n\tajax.addParam('sysparm_type', 'kbWriteComment');\n\tajax.addParam('sysparm_search', escape(query.value));\n\tajax.addParam('sysparm_id', sys_id);\n\tif (flag)\n\t\tajax.addParam('sysparm_flag', flag.checked);\n\tajax.addParam('sysparm_feedback', escape(comments));\n\tajax.addParam('view_id', view_id.value);\n\tajax.getXML(kbFeedbackDone);\n\t$(name).value = '';\n\t$('commentsdiv_empty').hide();\n\tvar commentLinkDiv = $('comment_link_div');\n\tif (commentLinkDiv)\n\t\tcommentLinkDiv.hide();\n\n\treturn false;\n}\n\nfunction toggleSection(id) {\n\tvar header = gel(id).parentElement.getElementsByClassName('icon-chevron-up rotate')[0];\n\theader.classList.toggle('down');\n\t$j('#'+id).slideToggle(\"fast\");\n}\n\nfunction hideComments() {\n\tgel('commentsdiv').style.display = 'none';\n\tif (gel('commentsdiv_done').style.display == 'none') {\n\t\tgel('comment_link_div').style.display = '';\n\t\tgel('comment_link_div_cancel').style.display = 'none';\n\t\t$j('#comment_link_div').find('.pointerhand').focus();\n\t} else {\n\t\tgel('comment_link_div').style.display = 'none';\n\t\tgel('comment_link_div_cancel').style.display = 'none';\n\t}\n}\n\nfunction showComments() {\n\tif (gel('commentsdiv_done').style.display == 'none') {\n\t\tgel('commentsdiv').style.display = '';\n\t\tgel('comment_link_div').style.display = 'none';\n\t\tgel('comment_link_div_cancel').style.display = '';\n\t\tgel('article_comments').focus();\n\t}\n}\n\nfunction toggleArticleFlag(e) {\n\tvar msg = gel('commentsdiv_flagmsg');\n\tvar inputdiv = gel('commentsdiv');\n\tvar donemsg = gel('commentsdiv_done');\n\tvar input = gel('article_comments');\n\tif (e.checked) {\n\t\tshowObject(msg);\n\t\thideObject(donemsg);\n\t\topenFeedback();\n\t} else\n\t\thideObject(msg);\n}\n\nfunction openFeedback() {\n\tvar cmtdivdone = gel('commentsdiv_done');\n\tvar cmtdiv = gel('commentsdiv');\n\n\tif (cmtdivdone) {\n\t\tif (cmtdivdone.style.display != 'block') {\n\t\t\tvar commentsdiv = gel('commentsdiv');\n\t\t\tshowObject(commentsdiv);\n\t\t\twindow.scrollBy(0, 9999999);\n\t\t\tvar e = gel('article_comments');\n\t\t\tif (e)\n\t\t\t\te.focus();\n\t\t\twindow.scrollBy(0, -20);\n\t\t} else {\n\t\t\tcmtdivdone.style.display = 'none';\n\t\t\tvar feedBackText = gel('article_comments');\n\t\t\tfeedBackText.value = '';\n\t\t\tcmtdiv.style.display = 'block';\n\t\t}\n\t}\n}\n\nfunction postUsedDone(answer) {\n\tvar data = answer.evalJSON(true);\n\tif (!data) {\n\t\treturn kbViewArticle.showInfoMessage('Useful rating not submitted');\n\t}\n\tif (!data.success) {\n\t\treturn kbViewArticle.showInfoMessage(data.message);\n\t}\n\tkbViewArticle.showInfoMessage(data.message);\n}\n\nfunction postUsed(id, useful) {\n\tvar view = gel('view_id');\n\tvar query = gel('sysparm_search');\n\n\tif (id) {\n\t\tvar ajax = new GlideAjax('KBAjax');\n\t\tajax.addParam('sysparm_type', 'saveUseful');\n\t\tif (query)\n\t\t\tajax.addParam('sysparm_search', escape(query.value));\n\t\telse\n\t\t\tajax.addParam('sysparm_search', '');\n\t\tajax.addParam('sysparm_article_id', id);\n\t\tajax.addParam('sysparm_useful', useful);\n\t\tif (view)\n\t\t\tajax.addParam('sysparm_view_id', view.value);\n\t\tajax.getXMLAnswer(postUsedDone);\n\t}\n\tif (isNaN(useful)) {\n\t\tvar elem;\n\t\tif (useful == 'yes') {\n\t\t\thideObject(gel('noarticlerating'));\n\t\t\telem = gel('yesarticlerating');\n\t\t\tif (elem) {\n\t\t\t\telem.setAttribute('onclick', '');\n\t\t\t\telem.setAttribute('class', 'kb_link_disable');\n\t\t\t\telem.setAttribute('className', 'kb_link_disable');\n\t\t\t}\n\t\t} else if (useful == 'no') {\n\t\t\thideObject(gel('yesarticlerating'));\n\t\t\telem = gel('noarticlerating');\n\t\t\tif (elem) {\n\t\t\t\telem.setAttribute('onclick', '');\n\t\t\t\telem.setAttribute('class', 'kb_link_disable');\n\t\t\t\telem.setAttribute('className', 'kb_link_disable');\n\t\t\t}\n\t\t} else hideObject(gel('articlerating'));\n\n\t\tshowObject(gel('articleratingsubmitted'));\n\t}\n}\n\nfunction changeWasThisHelpfulToOn(element, sysId) {\n\telement.style.display = 'none';\n\tgel('wasThisHelpfulCheckedIcon').style.display = 'inline';\n\tpostUsed(sysId, 'yes');\n}\n\nfunction changeWasThisHelpfulToOff(element, sysId) {\n\telement.style.display = 'none';\n\tgel('wasThisHelpfulUncheckedIcon').style.display = 'inline';\n\tgel('articleratingsubmitted').style.display = 'none';\n\tpostUsed(sysId, '');\n}\n\n/*\n * Initialize the page after the DOM is fully loaded.\n */\n$j(function () {\n\twindow.kbViewArticle = new KbViewArticle();\n\tkbViewArticle.setCanContribute(kbConfig.canContribute);\n\tkbViewArticle.onLoaded();\n\tkbViewArticle.setPageViewable();\n\tif (kbViewArticle.isDisplayFromPopup()) {\n\t\t//enables to move attach to button to top right corner\n\t\t$j('.snc-article-header-toolbar').css(\"padding-right\", 0);\n\t}\n\t// DEF0173376: Keep the Image title if exists, in article content.\n\t$j(\".snc-article-content-text\").find(\"img\").attr(\"data-selector\",\"true\").attr(\"data-original-title\",\"\");\n\t/** Set focus on element on page load\n\t *\n\t*/\n\n\tsetTimeout(function(){\n\t\t$j('#backButton').focus();\n\t});\n\n\t// Remove hidden buttons wrecking page layout in RTL mode.\n\tif ($j('html').is('.rtl')) {\n\t\tvar inc = 0;\n\t\tvar fnc = function() {\n\t\t\tvar buttons = $j('button').filter(function () {\n\t\t\t\treturn this.style.left == '-9999px';\n\t\t\t});\n\t\t\tif (buttons.length) {\n\t\t\t\t// Delete useless hidden buttons which caused to stretch the page width.\n\t\t\t\tbuttons.remove();\n\t\t\t}\n\t\t\tif (++inc > 5) {\n\t\t\t\tclearInterval(window.cleanupBtns);\n\t\t\t}\n\t\t};\n\t\t// Timeout needed to catch hidden buttons and menus generated/injected after the page has loaded.\n\t\twindow.cleanupBtns = setInterval(fnc, 150); \n\t}\n\t\n\t//Fix for PRB702753 : Modify article's top margin according to change in Page Nav bar height\n\t(function(){\n\t\tvar $ = jQuery;\n\t\t\n\t\t//Set the margin on first page load\n\t\tsetTopMargin();\t\t\t\t\n\n\t\t//then watch for window re-size\n\t\t$(window).resize(function() {\n\t\t\tsetTopMargin();\n\t\t});\n\n\t\tfunction setTopMargin(){\n\t\t\tvar navBarHeight = $('.snc-article-header-toolbar').height(),\n\t\t\t\ttopMargin;\n\t\t\tif(navBarHeight < 40){\n\t\t\t\ttopMargin = 0;\n\t\t\t}if(navBarHeight < 80){\n\t\t\t\ttopMargin = navBarHeight * (2/3);\n\t\t\t}else{\n\t\t\t\ttopMargin = navBarHeight * (130/150);\t\t\t\t  \n\t\t\t}\n\t\t\t$('.kb-view-content-wrapper').css('margin-top', topMargin + 'px');\n\t\t}\n\t})();\t\n\n});\n\n\n","sys_class_name":"sys_ui_script","sys_id":"a5294c50d71321004792a1737e6103e0","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/2fe727ff04b12210559073c06a02f7dd","value":"2fe727ff04b12210559073c06a02f7dd"},"ui_type":"0","sys_update_name":"sys_ui_script_a5294c50d71321004792a1737e6103e0","sys_updated_by":"admin","sys_created_on":"2014-12-16 15:04:26","name":"KBViewArticle","sys_name":"KBViewArticle","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"12","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2020-10-13 03:40:51","sys_tags":"","script_name":"","script":"angular.module(\"sn.app_common.aisa.search\", [\"sn.app_common\"]);\nangular.module(\"sn.app_common.aisa.search\").service(\"aisaSearch\", [\"$http\", \"$q\", \"$log\", function($http, $q, $log) {\n\tvar aisaSearch = this;\n\n\tthis.AISA_SEARCH_ENDPOINT = \"/api/now/aisa/search\";\n\n\t// Definition of the client side SearchRequest\n\tvar SearchRequest = function(requestData) {\n\t\tvar searchRequest = {\n\t\t\tmethod: 'POST',\n\t\t\turl: aisaSearch.AISA_SEARCH_ENDPOINT,\n\t\t\theaders: {\n\t\t\t\t'Content-Type': \"application/json; charset=UTF-8\"\n\t\t\t},\n\t\t\tdata: {\n\t\t\t\t\t\"searchContextConfigId\":requestData.searchApp,\n\t\t\t\t\t\"requestedFields\": requestData.requestedFields,\n\t\t\t\t\t\"searchTerm\": requestData.searchTerm,\n\t\t\t\t\t\"rpSysId\": requestData.rpSysId\n\t\t\t}\n\t\t};\n\t\t// Deep copy of request.  Stops dot walking inadvertantly modifying different requests.\n\t\tangular.copy(searchRequest, this);\n\n\t\tthis.submit = function() {\n\t\t\treturn aisaSearch.submit(this);\n\t\t};\n\t};\n\n\t// Definition of the client side SearchResponse\n\tvar SearchResponse = function(responseData) {\n\t\tvar searchAPIResponse = {};\n\t\ttry {\n\t\t\tsearchAPIResponse = responseData.data.result;\n\t\t\tsearchAPIResponse.status = responseData.status;\n\t\t} catch (e) {\n\t\t\tsearchAPIResponse = {\n\t\t\t\tstatus: 500,\n\t\t\t\terror: \"Server Internal Error\"\n\t\t\t};\n\t\t} finally {\n\t\t\tangular.copy(searchAPIResponse, this);\n\t\t}\n\t};\n\n\taisaSearch.newSearchRequest = function(requestData) {\n\t\treturn new SearchRequest(requestData);\n\t};\n\n\taisaSearch.submit = function(searchRequest) {\n\t\tvar deferred = $q.defer();\n\t\t$http(searchRequest).then(\n\t\t\tfunction(response) {\n\t\t\t\tdeferred.resolve(new SearchResponse(response));\n\t\t\t},\n\t\t\tfunction(response) {\n\t\t\t\tdeferred.reject(response);\n\t\t\t}\n\t\t);\n\t\treturn deferred.promise;\n\t};\n}]);","sys_class_name":"sys_ui_script","sys_id":"a5412c2067031010b3d782f45685efb0","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/e4dd6b3304752210559073c06a02f70c","value":"e4dd6b3304752210559073c06a02f70c"},"ui_type":"0","sys_update_name":"sys_ui_script_a5412c2067031010b3d782f45685efb0","sys_updated_by":"admin","sys_created_on":"2020-09-01 02:00:44","name":"app_com.aisa.search","sys_name":"app_com.aisa.search","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"2","active":"true","description":"Validates whether end date is not before start date","use_scoped_format":"false","global":"true","sys_updated_on":"2025-06-05 05:18:18","sys_tags":"","script_name":"","script":"function validateStartEndDate(startDateField, endDateField, processErrorMsg){\n\tvar startDate = g_form.getValue(startDateField);\n\tvar endDate = g_form.getValue(endDateField);\n\n\tvar format = g_user_date_format;\n\n\tif (startDate === \"\" || endDate === \"\")\n\t\treturn true;\n\n\t// format the date using getDateFromFormat\n\tvar startDateFormat = getDateFromFormat(startDate, format);\n\tvar endDateFormat = getDateFromFormat(endDate, format);\n\t\n\tif (startDateFormat < endDateFormat)\n\t\treturn true;\n\t\n\t// 0 from \"getDateFormat\" means an invalid date string was passed to it\n\tif (startDateFormat === 0 || endDateFormat === 0){\n\t\tprocessErrorMsg(new GwtMessage().getMessage(\"{0} is invalid\", g_form.getLabelOf(startDate === 0? startDateField : endDateField)));\n\t\treturn false;\n\t}\n\n\tif (startDateFormat > endDateFormat){\n\t\tprocessErrorMsg(new GwtMessage().getMessage(\"{0} must be after {1}\", g_form.getLabelOf(endDateField), g_form.getLabelOf(startDateField)));\n\t\treturn false;\n\t}\n\t\n\treturn true;\n}","sys_class_name":"sys_ui_script","sys_id":"a839b6ed0b900300385e440ff6673ac7","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/e325237304712210559073c06a02f7be","value":"e325237304712210559073c06a02f7be"},"ui_type":"0","sys_update_name":"sys_ui_script_a839b6ed0b900300385e440ff6673ac7","sys_updated_by":"system","sys_created_on":"2017-07-31 17:58:18","name":"ValidateStartEndDates","sys_name":"ValidateStartEndDates","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"0","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2018-01-09 12:00:41","sys_tags":"","script_name":"landing_decoration","script":"angular.module(\"sn.chg_soc.landing\")\n.directive(\"snLandingDecoration\", function(getTemplateUrl) {\n\t\"use strict\";\n\treturn {\n\t\treplace : true,\n\t\trestrict : \"E\",\n\t\ttemplateUrl : getTemplateUrl(\"sn_chg_soc_landing_decoration.xml\")\n\t};\n});\n","sys_class_name":"sys_ui_script","sys_id":"a9eab72d57630300afc34786cc94f976","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"ui_type":"","sys_update_name":"sys_ui_script_a9eab72d57630300afc34786cc94f976","sys_updated_by":"admin","sys_created_on":"2018-01-09 12:00:41","name":"sn_chg_soc.landing_decoration","sys_name":"sn_chg_soc.landing_decoration","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"3","active":"true","description":"Directive snCabToggle","use_scoped_format":"false","global":"false","sys_updated_on":"2022-09-29 07:00:02","sys_tags":"","script_name":"","script":"(function () {\n\t'use strict';\n\tangular.module('sn.itsm.vcab.common').directive('snCabToggle', function () {\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\tscope: {\n\t\t\t\tname: '@',\n\t\t\t\tvalue: '=',\n\t\t\t\tidFor: '@'\n\t\t\t},\n\t\t\ttemplate: '<div class=\"input-switch\">'\n\t\t\t\t+'<input ng-attr-id=\"{{$id}}\" type=\"checkbox\" name=\"{{name}}\" ng-model=\"value\" ng-attr-aria-labelledby = \"{{idFor}}\"/>'\n\t\t\t\t+'<label aria-hidden=\"true\" class=\"switch\" ng-attr-for=\"{{$id}}\"></label>'\n\t\t\t+'</div>'\n\t\t};\n\t});\n}());","sys_class_name":"sys_ui_script","sys_id":"aa0dc42053025110a6f8ddeeff7b128a","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/3b83a3f304312210559073c06a02f788","value":"3b83a3f304312210559073c06a02f788"},"ui_type":"0","sys_update_name":"sys_ui_script_aa0dc42053025110a6f8ddeeff7b128a","sys_updated_by":"admin","sys_created_on":"2022-09-16 16:13:44","name":"clone_calendar_vcom.snCabToggle","sys_name":"clone_calendar_vcom.snCabToggle","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"1","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2022-01-05 14:16:52","sys_tags":"","script_name":"sn.app_itsm.now.iscroll","script":"angular.module(\"sn.app_itsm.now.iscroll\", [])\n.directive(\"iScroll\", [\"$rootScope\", \"$window\", \"$timeout\", function($rootScope, $window, $timeout) {\n\treturn {\n\t\tlink: function(scope, elem, attrs) {\n\t\t\tvar checkWhenEnabled, handler, scrollDistance, scrollEnabled, scrollElem;\n\t\t\t$window = angular.element($window);\n\n\t\t\tif (attrs.iScrollContainer)\n\t\t\t\tscrollElem = angular.element(attrs.iScrollContainer);\n\n\t\t\tscrollDistance = 0;\n\t\t\tif (attrs.iScrollDistance !== null) {\n\t\t\t\tscope.$watch(attrs.iScrollDistance, function(value) {\n\t\t\t\t\tscrollDistance = parseInt(value, 10);\n\t\t\t\t\treturn scrollDistance;\n\t\t\t\t});\n\t\t\t}\n\t\t\tscrollEnabled = true;\n\t\t\tcheckWhenEnabled = false;\n\t\t\tif (attrs.iScrollDisabled !== null) {\n\t\t\t\tattrs.$observe(\"iScrollDisabled\", function(value) {\n\t\t\t\t\tscrollEnabled = value === \"false\";\n\t\t\t\t\tif (scrollEnabled && checkWhenEnabled) {\n\t\t\t\t\t\tcheckWhenEnabled = false;\n\t\t\t\t\t\treturn handler();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tvar prevImmediateCheck = null;\n\t\t\tattrs.$observe(\"iScrollImmediateCheck\", function(iScrollImmediateCheck) {\n\t\t\t\tif (prevImmediateCheck !== null || iScrollImmediateCheck === \"false\") {\n\t\t\t\t\tprevImmediateCheck = iScrollImmediateCheck;\n\t\t\t\t\tif (iScrollImmediateCheck === \"true\")\n\t\t\t\t\t\thandler();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thandler = function() {\n\t\t\t\tvar elementBottom, remaining, shouldScroll, windowBottom;\n\t\t\t\tif (scrollElem)\n\t\t\t\t\twindowBottom = scrollElem.height() + scrollElem.scrollTop();\n\t\t\t\telse\n\t\t\t\t\twindowBottom = $window.height() + $window.scrollTop();\n\t\t\t\telementBottom = elem.offset().top + elem.height();\n\t\t\t\tremaining = elementBottom - windowBottom;\n\t\t\t\tshouldScroll = remaining <= $window.height() * scrollDistance;\n\t\t\t\tif (shouldScroll && scrollEnabled) {\n\t\t\t\t\tif ($rootScope.$$phase)\n\t\t\t\t\t\treturn scope.$eval(attrs.iScroll);\n\t\t\t\t\telse\n\t\t\t\t\t\treturn scope.$apply(attrs.iScroll);\n\t\t\t\t} else if (shouldScroll) {\n\t\t\t\t\tcheckWhenEnabled = true;\n\t\t\t\t\treturn checkWhenEnabled;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Attach handler to scroll event\n\t\t\tif (scrollElem)\n\t\t\t\tscrollElem.on(\"scroll\", handler);\n\t\t\telse\n\t\t\t\t$window.on(\"scroll\", handler);\n\n\t\t\tscope.$on(\"$destroy\", function() {\n\t\t\t\tif (scrollElem)\n\t\t\t\t\treturn scrollElem.off(\"scroll\", handler);\n\t\t\t\treturn $window.off(\"scroll\", handler);\n\t\t\t});\n\n\t\t\treturn $timeout(function() {\n\t\t\t\tif (attrs.iScrollImmediateCheck === \"true\")\n\t\t\t\t\tif (scope.$eval(attrs.iScrollImmediateCheck))\n\t\t\t\t\t\treturn handler();\n\t\t\t\t\telse\n\t\t\t\t\t\treturn handler();\n\t\t\t}, 0);\n\t\t}\n\t};\n}]);\n","sys_class_name":"sys_ui_script","sys_id":"ace817bc539b10100999ddeeff7b12fc","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/bb9f15345332101034d1ddeeff7b12c8","value":"bb9f15345332101034d1ddeeff7b12c8"},"ui_type":"0","sys_update_name":"sys_ui_script_ace817bc539b10100999ddeeff7b12fc","sys_updated_by":"admin","sys_created_on":"2020-09-14 20:16:41","name":"sn_chg_model_ui.sn.app_itsm.now.iscroll","sys_name":"sn_chg_model_ui.sn.app_itsm.now.iscroll","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/bb9f15345332101034d1ddeeff7b12c8","value":"bb9f15345332101034d1ddeeff7b12c8"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"4","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2025-06-05 05:18:18","sys_tags":"","script_name":"","script":"//! moment-timezone.js\n//! version : 0.5.0\n//! author : Tim Wood\n//! license : MIT\n//! github.com/moment/moment-timezone\n\n(function (root, factory) {\n\t\"use strict\";\n\n\t/*global define*/\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(['moment'], factory);                 // AMD\n\t} else if (typeof module === 'object' && module.exports) {\n\t\tmodule.exports = factory(require('moment')); // Node\n\t} else {\n\t\tfactory(root.moment);                        // Browser\n\t}\n}(this, function (moment) {\n\t\"use strict\";\n\n\t// Do not load moment-timezone a second time.\n\tif (moment.tz !== undefined) {\n\t\t//logError('Moment Timezone ' + moment.tz.version + ' was already loaded ' + (moment.tz.dataVersion ? 'with data from ' : 'without any data') + moment.tz.dataVersion);\n\t\treturn moment;\n\t}\n\n\tvar VERSION = \"0.5.0\",\n\t\tzones = {},\n\t\tlinks = {},\n\t\tnames = {},\n\t\tguesses = {},\n\t\tcachedGuess,\n\n\t\tmomentVersion = moment.version.split('.'),\n\t\tmajor = +momentVersion[0],\n\t\tminor = +momentVersion[1];\n\n\t// Moment.js version check\n\tif (major < 2 || (major === 2 && minor < 6)) {\n\t\tlogError('Moment Timezone requires Moment.js >= 2.6.0. You are using Moment.js ' + moment.version + '. See momentjs.com');\n\t}\n\n\t/************************************\n\t\tUnpacking\n\t************************************/\n\n\tfunction charCodeToInt(charCode) {\n\t\tif (charCode > 96) {\n\t\t\treturn charCode - 87;\n\t\t} else if (charCode > 64) {\n\t\t\treturn charCode - 29;\n\t\t}\n\t\treturn charCode - 48;\n\t}\n\n\tfunction unpackBase60(string) {\n\t\tvar i = 0,\n\t\t\tparts = string.split('.'),\n\t\t\twhole = parts[0],\n\t\t\tfractional = parts[1] || '',\n\t\t\tmultiplier = 1,\n\t\t\tnum,\n\t\t\tout = 0,\n\t\t\tsign = 1;\n\n\t\t// handle negative numbers\n\t\tif (string.charCodeAt(0) === 45) {\n\t\t\ti = 1;\n\t\t\tsign = -1;\n\t\t}\n\n\t\t// handle digits before the decimal\n\t\tfor (i; i < whole.length; i++) {\n\t\t\tnum = charCodeToInt(whole.charCodeAt(i));\n\t\t\tout = 60 * out + num;\n\t\t}\n\n\t\t// handle digits after the decimal\n\t\tfor (i = 0; i < fractional.length; i++) {\n\t\t\tmultiplier = multiplier / 60;\n\t\t\tnum = charCodeToInt(fractional.charCodeAt(i));\n\t\t\tout += num * multiplier;\n\t\t}\n\n\t\treturn out * sign;\n\t}\n\n\tfunction arrayToInt (array) {\n\t\tfor (var i = 0; i < array.length; i++) {\n\t\t\tarray[i] = unpackBase60(array[i]);\n\t\t}\n\t}\n\n\tfunction intToUntil (array, length) {\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tarray[i] = Math.round((array[i - 1] || 0) + (array[i] * 60000)); // minutes to milliseconds\n\t\t}\n\n\t\tarray[length - 1] = Infinity;\n\t}\n\n\tfunction mapIndices (source, indices) {\n\t\tvar out = [], i;\n\n\t\tfor (i = 0; i < indices.length; i++) {\n\t\t\tout[i] = source[indices[i]];\n\t\t}\n\n\t\treturn out;\n\t}\n\n\tfunction unpack (string) {\n\t\tvar data = string.split('|'),\n\t\t\toffsets = data[2].split(' '),\n\t\t\tindices = data[3].split(''),\n\t\t\tuntils  = data[4].split(' ');\n\n\t\tarrayToInt(offsets);\n\t\tarrayToInt(indices);\n\t\tarrayToInt(untils);\n\n\t\tintToUntil(untils, indices.length);\n\n\t\treturn {\n\t\t\tname       : data[0],\n\t\t\tabbrs      : mapIndices(data[1].split(' '), indices),\n\t\t\toffsets    : mapIndices(offsets, indices),\n\t\t\tuntils     : untils,\n\t\t\tpopulation : data[5] | 0\n\t\t};\n\t}\n\n\t/************************************\n\t\tZone object\n\t************************************/\n\n\tfunction Zone (packedString) {\n\t\tif (packedString) {\n\t\t\tthis._set(unpack(packedString));\n\t\t}\n\t}\n\n\tZone.prototype = {\n\t\t_set : function (unpacked) {\n\t\t\tthis.name       = unpacked.name;\n\t\t\tthis.abbrs      = unpacked.abbrs;\n\t\t\tthis.untils     = unpacked.untils;\n\t\t\tthis.offsets    = unpacked.offsets;\n\t\t\tthis.population = unpacked.population;\n\t\t},\n\n\t\t_index : function (timestamp) {\n\t\t\tvar target = +timestamp,\n\t\t\t\tuntils = this.untils,\n\t\t\t\ti;\n\n\t\t\tfor (i = 0; i < untils.length; i++) {\n\t\t\t\tif (target < untils[i]) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tparse : function (timestamp) {\n\t\t\tvar target  = +timestamp,\n\t\t\t\toffsets = this.offsets,\n\t\t\t\tuntils  = this.untils,\n\t\t\t\tmax     = untils.length - 1,\n\t\t\t\toffset, offsetNext, offsetPrev, i;\n\n\t\t\tfor (i = 0; i < max; i++) {\n\t\t\t\toffset     = offsets[i];\n\t\t\t\toffsetNext = offsets[i + 1];\n\t\t\t\toffsetPrev = offsets[i ? i - 1 : i];\n\n\t\t\t\tif (offset < offsetNext && tz.moveAmbiguousForward) {\n\t\t\t\t\toffset = offsetNext;\n\t\t\t\t} else if (offset > offsetPrev && tz.moveInvalidForward) {\n\t\t\t\t\toffset = offsetPrev;\n\t\t\t\t}\n\n\t\t\t\tif (target < untils[i] - (offset * 60000)) {\n\t\t\t\t\treturn offsets[i];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn offsets[max];\n\t\t},\n\n\t\tabbr : function (mom) {\n\t\t\treturn this.abbrs[this._index(mom)];\n\t\t},\n\n\t\toffset : function (mom) {\n\t\t\treturn this.offsets[this._index(mom)];\n\t\t}\n\t};\n\n\t/************************************\n\t\tCurrent Timezone\n\t************************************/\n\n\tfunction OffsetAt(at) {\n\t\tvar timeString = at.toTimeString();\n\t\tvar abbr = timeString.match(/\\(.+\\)/);\n\t\tif (abbr && abbr[0]) {\n\t\t\t// 17:56:31 GMT-0600 (CST)\n\t\t\t// 17:56:31 GMT-0600 (Central Standard Time)\n\t\t\tabbr = abbr[0].match(/[A-Z]/g).join('');\n\t\t} else {\n\t\t\t// 17:56:31 CST\n\t\t\tabbr = timeString.match(/[A-Z]{3,5}/g)[0];\n\t\t}\n\n\t\tif (abbr === 'GMT') {\n\t\t\tabbr = undefined;\n\t\t}\n\n\t\tthis.at = +at;\n\t\tthis.abbr = abbr;\n\t\tthis.offset = at.getTimezoneOffset();\n\t}\n\n\tfunction ZoneScore(zone) {\n\t\tthis.zone = zone;\n\t\tthis.offsetScore = 0;\n\t\tthis.abbrScore = 0;\n\t}\n\n\tZoneScore.prototype.scoreOffsetAt = function (offsetAt) {\n\t\tthis.offsetScore += Math.abs(this.zone.offset(offsetAt.at) - offsetAt.offset);\n\t\tif (this.zone.abbr(offsetAt.at).match(/[A-Z]/g).join('') !== offsetAt.abbr) {\n\t\t\tthis.abbrScore++;\n\t\t}\n\t};\n\n\tfunction findChange(low, high) {\n\t\tvar mid, diff;\n\n\t\twhile ((diff = ((high.at - low.at) / 12e4 | 0) * 6e4)) {\n\t\t\tmid = new OffsetAt(new Date(low.at + diff));\n\t\t\tif (mid.offset === low.offset) {\n\t\t\t\tlow = mid;\n\t\t\t} else {\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t}\n\n\t\treturn low;\n\t}\n\n\tfunction userOffsets() {\n\t\tvar startYear = new Date().getFullYear() - 2,\n\t\t\tlast = new OffsetAt(new Date(startYear, 0, 1)),\n\t\t\toffsets = [last],\n\t\t\tchange, next, i;\n\n\t\tfor (i = 1; i < 48; i++) {\n\t\t\tnext = new OffsetAt(new Date(startYear, i, 1));\n\t\t\tif (next.offset !== last.offset) {\n\t\t\t\tchange = findChange(last, next);\n\t\t\t\toffsets.push(change);\n\t\t\t\toffsets.push(new OffsetAt(new Date(change.at + 6e4)));\n\t\t\t}\n\t\t\tlast = next;\n\t\t}\n\n\t\tfor (i = 0; i < 4; i++) {\n\t\t\toffsets.push(new OffsetAt(new Date(startYear + i, 0, 1)));\n\t\t\toffsets.push(new OffsetAt(new Date(startYear + i, 6, 1)));\n\t\t}\n\n\t\treturn offsets;\n\t}\n\n\tfunction sortZoneScores (a, b) {\n\t\tif (a.offsetScore !== b.offsetScore) {\n\t\t\treturn a.offsetScore - b.offsetScore;\n\t\t}\n\t\tif (a.abbrScore !== b.abbrScore) {\n\t\t\treturn a.abbrScore - b.abbrScore;\n\t\t}\n\t\treturn b.zone.population - a.zone.population;\n\t}\n\n\tfunction addToGuesses (name, offsets) {\n\t\tvar i, offset;\n\t\tarrayToInt(offsets);\n\t\tfor (i = 0; i < offsets.length; i++) {\n\t\t\toffset = offsets[i];\n\t\t\tguesses[offset] = guesses[offset] || {};\n\t\t\tguesses[offset][name] = true;\n\t\t}\n\t}\n\n\tfunction guessesForUserOffsets (offsets) {\n\t\tvar offsetsLength = offsets.length,\n\t\t\tfilteredGuesses = {},\n\t\t\tout = [],\n\t\t\ti, j, guessesOffset;\n\n\t\tfor (i = 0; i < offsetsLength; i++) {\n\t\t\tguessesOffset = guesses[offsets[i].offset] || {};\n\t\t\tfor (j in guessesOffset) {\n\t\t\t\tif (guessesOffset.hasOwnProperty(j)) {\n\t\t\t\t\tfilteredGuesses[j] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (i in filteredGuesses) {\n\t\t\tif (filteredGuesses.hasOwnProperty(i)) {\n\t\t\t\tout.push(names[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn out;\n\t}\n\n\tfunction rebuildGuess () {\n\t\tvar offsets = userOffsets(),\n\t\t\toffsetsLength = offsets.length,\n\t\t\tguesses = guessesForUserOffsets(offsets),\n\t\t\tzoneScores = [],\n\t\t\tzoneScore, i, j;\n\n\t\tfor (i = 0; i < guesses.length; i++) {\n\t\t\tzoneScore = new ZoneScore(getZone(guesses[i]), offsetsLength);\n\t\t\tfor (j = 0; j < offsetsLength; j++) {\n\t\t\t\tzoneScore.scoreOffsetAt(offsets[j]);\n\t\t\t}\n\t\t\tzoneScores.push(zoneScore);\n\t\t}\n\n\t\tzoneScores.sort(sortZoneScores);\n\n\t\treturn zoneScores.length > 0 ? zoneScores[0].zone.name : undefined;\n\t}\n\n\tfunction guess (ignoreCache) {\n\t\tif (!cachedGuess || ignoreCache) {\n\t\t\tcachedGuess = rebuildGuess();\n\t\t}\n\t\treturn cachedGuess;\n\t}\n\n\t/************************************\n\t\tGlobal Methods\n\t************************************/\n\n\tfunction normalizeName (name) {\n\t\treturn (name || '').toLowerCase().replace(/\\//g, '_');\n\t}\n\n\tfunction addZone (packed) {\n\t\tvar i, name, split, normalized;\n\n\t\tif (typeof packed === \"string\") {\n\t\t\tpacked = [packed];\n\t\t}\n\n\t\tfor (i = 0; i < packed.length; i++) {\n\t\t\tsplit = packed[i].split('|');\n\t\t\tname = split[0];\n\t\t\tnormalized = normalizeName(name);\n\t\t\tzones[normalized] = packed[i];\n\t\t\tnames[normalized] = name;\n\t\t\tif (split[5]) {\n\t\t\t\taddToGuesses(normalized, split[2].split(' '));\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction getZone (name, caller) {\n\t\tname = normalizeName(name);\n\n\t\tvar zone = zones[name];\n\t\tvar link;\n\n\t\tif (zone instanceof Zone) {\n\t\t\treturn zone;\n\t\t}\n\n\t\tif (typeof zone === 'string') {\n\t\t\tzone = new Zone(zone);\n\t\t\tzones[name] = zone;\n\t\t\treturn zone;\n\t\t}\n\n\t\t// Pass getZone to prevent recursion more than 1 level deep\n\t\tif (links[name] && caller !== getZone && (link = getZone(links[name], getZone))) {\n\t\t\tzone = zones[name] = new Zone();\n\t\t\tzone._set(link);\n\t\t\tzone.name = names[name];\n\t\t\treturn zone;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tfunction getNames () {\n\t\tvar i, out = [];\n\n\t\tfor (i in names) {\n\t\t\tif (names.hasOwnProperty(i) && (zones[i] || zones[links[i]]) && names[i]) {\n\t\t\t\tout.push(names[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn out.sort();\n\t}\n\n\tfunction addLink (aliases) {\n\t\tvar i, alias, normal0, normal1;\n\n\t\tif (typeof aliases === \"string\") {\n\t\t\taliases = [aliases];\n\t\t}\n\n\t\tfor (i = 0; i < aliases.length; i++) {\n\t\t\talias = aliases[i].split('|');\n\n\t\t\tnormal0 = normalizeName(alias[0]);\n\t\t\tnormal1 = normalizeName(alias[1]);\n\n\t\t\tlinks[normal0] = normal1;\n\t\t\tnames[normal0] = alias[0];\n\n\t\t\tlinks[normal1] = normal0;\n\t\t\tnames[normal1] = alias[1];\n\t\t}\n\t}\n\n\tfunction loadData (data) {\n\t\taddZone(data.zones);\n\t\taddLink(data.links);\n\t\ttz.dataVersion = data.version;\n\t}\n\n\tfunction zoneExists (name) {\n\t\tif (!zoneExists.didShowError) {\n\t\t\tzoneExists.didShowError = true;\n\t\t\t\tlogError(\"moment.tz.zoneExists('\" + name + \"') has been deprecated in favor of !moment.tz.zone('\" + name + \"')\");\n\t\t}\n\t\treturn !!getZone(name);\n\t}\n\n\tfunction needsOffset (m) {\n\t\treturn !!(m._a && (m._tzm === undefined));\n\t}\n\n\tfunction logError (message) {\n\t\tif (typeof console !== 'undefined' && typeof console.error === 'function') {\n\t\t\tconsole.error(message);\n\t\t}\n\t}\n\n\t/************************************\n\t\tmoment.tz namespace\n\t************************************/\n\n\tfunction tz (input) {\n\t\tvar args = Array.prototype.slice.call(arguments, 0, -1),\n\t\t\tname = arguments[arguments.length - 1],\n\t\t\tzone = getZone(name),\n\t\t\tout  = moment.utc.apply(null, args);\n\n\t\tif (zone && !moment.isMoment(input) && needsOffset(out)) {\n\t\t\tout.add(zone.parse(out), 'minutes');\n\t\t}\n\n\t\tout.tz(name);\n\n\t\treturn out;\n\t}\n\n\ttz.version      = VERSION;\n\ttz.dataVersion  = '';\n\ttz._zones       = zones;\n\ttz._links       = links;\n\ttz._names       = names;\n\ttz.add          = addZone;\n\ttz.link         = addLink;\n\ttz.load         = loadData;\n\ttz.zone         = getZone;\n\ttz.zoneExists   = zoneExists; // deprecated in 0.1.0\n\ttz.guess        = guess;\n\ttz.names        = getNames;\n\ttz.Zone         = Zone;\n\ttz.unpack       = unpack;\n\ttz.unpackBase60 = unpackBase60;\n\ttz.needsOffset  = needsOffset;\n\ttz.moveInvalidForward   = true;\n\ttz.moveAmbiguousForward = false;\n\n\t/************************************\n\t\tInterface with Moment.js\n\t************************************/\n\n\tvar fn = moment.fn;\n\n\tmoment.tz = tz;\n\n\tmoment.defaultZone = null;\n\n\tmoment.updateOffset = function (mom, keepTime) {\n\t\tvar zone = moment.defaultZone,\n\t\t\toffset;\n\n\t\tif (mom._z === undefined) {\n\t\t\tif (zone && needsOffset(mom) && !mom._isUTC) {\n\t\t\t\tmom._d = moment.utc(mom._a)._d;\n\t\t\t\tmom.utc().add(zone.parse(mom), 'minutes');\n\t\t\t}\n\t\t\tmom._z = zone;\n\t\t}\n\t\tif (mom._z) {\n\t\t\toffset = mom._z.offset(mom);\n\t\t\tif (Math.abs(offset) < 16) {\n\t\t\t\toffset = offset / 60;\n\t\t\t}\n\t\t\tif (mom.utcOffset !== undefined) {\n\t\t\t\tmom.utcOffset(-offset, keepTime);\n\t\t\t} else {\n\t\t\t\tmom.zone(offset, keepTime);\n\t\t\t}\n\t\t}\n\t};\n\n\tfn.tz = function (name) {\n\t\tif (name) {\n\t\t\tthis._z = getZone(name);\n\t\t\tif (this._z) {\n\t\t\t\tmoment.updateOffset(this);\n\t\t\t} else {\n\t\t\t\tlogError(\"Moment Timezone has no data for \" + name + \". See http://momentjs.com/timezone/docs/#/data-loading/.\");\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tif (this._z) { return this._z.name; }\n\t};\n\n\tfunction abbrWrap (old) {\n\t\treturn function () {\n\t\t\tif (this._z) { return this._z.abbr(this); }\n\t\t\treturn old.call(this);\n\t\t};\n\t}\n\n\tfunction resetZoneWrap (old) {\n\t\treturn function () {\n\t\t\tthis._z = null;\n\t\t\treturn old.apply(this, arguments);\n\t\t};\n\t}\n\n\tfn.zoneName = abbrWrap(fn.zoneName);\n\tfn.zoneAbbr = abbrWrap(fn.zoneAbbr);\n\tfn.utc      = resetZoneWrap(fn.utc);\n\n\tmoment.tz.setDefault = function(name) {\n\t\tif (major < 2 || (major === 2 && minor < 9)) {\n\t\t\tlogError('Moment Timezone setDefault() requires Moment.js >= 2.9.0. You are using Moment.js ' + moment.version + '.');\n\t\t}\n\t\tmoment.defaultZone = name ? getZone(name) : null;\n\t\treturn moment;\n\t};\n\n\t// Cloning a moment should include the _z property.\n\tvar momentProperties = moment.momentProperties;\n\tif (Object.prototype.toString.call(momentProperties) === '[object Array]') {\n\t\t// moment 2.8.1+\n\t\tmomentProperties.push('_z');\n\t\tmomentProperties.push('_a');\n\t} else if (momentProperties) {\n\t\t// moment 2.7.0\n\t\tmomentProperties._z = null;\n\t}\n\n\tloadData({\n\t\t\"version\": \"2015g\",\n\t\t\"zones\": [\n\t\t\t\"Africa/Abidjan|GMT|0|0||48e5\",\n\t\t\t\"Africa/Khartoum|EAT|-30|0||51e5\",\n\t\t\t\"Africa/Algiers|CET|-10|0||26e5\",\n\t\t\t\"Africa/Lagos|WAT|-10|0||17e6\",\n\t\t\t\"Africa/Maputo|CAT|-20|0||26e5\",\n\t\t\t\"Africa/Cairo|EET EEST|-20 -30|010101010|1Cby0 Fb0 c10 8n0 8Nd0 gL0 e10 mn0|15e6\",\n\t\t\t\"Africa/Casablanca|WET WEST|0 -10|01010101010101010101010101010101010101010|1Cco0 Db0 1zd0 Lz0 1Nf0 wM0 co0 go0 1o00 s00 dA0 vc0 11A0 A00 e00 y00 11A0 uM0 e00 Dc0 11A0 s00 e00 IM0 WM0 mo0 gM0 LA0 WM0 jA0 e00 Rc0 11A0 e00 e00 U00 11A0 8o0 e00 11A0|32e5\",\n\t\t\t\"Europe/Paris|CET CEST|-10 -20|01010101010101010101010|1BWp0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|11e6\",\n\t\t\t\"Africa/Johannesburg|SAST|-20|0||84e5\",\n\t\t\t\"Africa/Tripoli|EET CET CEST|-20 -10 -20|0120|1IlA0 TA0 1o00|11e5\",\n\t\t\t\"Africa/Windhoek|WAST WAT|-20 -10|01010101010101010101010|1C1c0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 11B0|32e4\",\n\t\t\t\"America/Adak|HST HDT|a0 90|01010101010101010101010|1BR00 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|326\",\n\t\t\t\"America/Anchorage|AKST AKDT|90 80|01010101010101010101010|1BQX0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|30e4\",\n\t\t\t\"America/Santo_Domingo|AST|40|0||29e5\",\n\t\t\t\"America/Araguaina|BRT BRST|30 20|010|1IdD0 Lz0|14e4\",\n\t\t\t\"America/Argentina/Buenos_Aires|ART|30|0|\",\n\t\t\t\"America/Asuncion|PYST PYT|30 40|01010101010101010101010|1C430 1a10 1fz0 1a10 1fz0 1cN0 17b0 1ip0 17b0 1ip0 17b0 1ip0 19X0 1fB0 19X0 1fB0 19X0 1ip0 17b0 1ip0 17b0 1ip0|28e5\",\n\t\t\t\"America/Panama|EST|50|0||15e5\",\n\t\t\t\"America/Bahia|BRT BRST|30 20|010|1FJf0 Rb0|27e5\",\n\t\t\t\"America/Bahia_Banderas|MST CDT CST|70 50 60|01212121212121212121212|1C1l0 1nW0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|84e3\",\n\t\t\t\"America/Fortaleza|BRT|30|0||34e5\",\n\t\t\t\"America/Managua|CST|60|0||22e5\",\n\t\t\t\"America/Manaus|AMT|40|0||19e5\",\n\t\t\t\"America/Bogota|COT|50|0||90e5\",\n\t\t\t\"America/Denver|MST MDT|70 60|01010101010101010101010|1BQV0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|26e5\",\n\t\t\t\"America/Campo_Grande|AMST AMT|30 40|01010101010101010101010|1BIr0 1zd0 On0 1zd0 Rb0 1zd0 Lz0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1C10 Lz0 1C10 Lz0 1C10|77e4\",\n\t\t\t\"America/Cancun|CST CDT EST|60 50 50|010101010102|1C1k0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 Dd0|63e4\",\n\t\t\t\"America/Caracas|VET|4u|0||29e5\",\n\t\t\t\"America/Cayenne|GFT|30|0||58e3\",\n\t\t\t\"America/Cayman|EST EDT|50 40|01010101010|1Qtj0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|58e3\",\n\t\t\t\"America/Chicago|CST CDT|60 50|01010101010101010101010|1BQU0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|92e5\",\n\t\t\t\"America/Chihuahua|MST MDT|70 60|01010101010101010101010|1C1l0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|81e4\",\n\t\t\t\"America/Phoenix|MST|70|0||42e5\",\n\t\t\t\"America/Los_Angeles|PST PDT|80 70|01010101010101010101010|1BQW0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|15e6\",\n\t\t\t\"America/New_York|EST EDT|50 40|01010101010101010101010|1BQT0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|21e6\",\n\t\t\t\"America/Rio_Branco|AMT ACT|40 50|01|1KLE0|31e4\",\n\t\t\t\"America/Fort_Nelson|PST PDT MST|80 70 70|010101010102|1BQW0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0|39e2\",\n\t\t\t\"America/Halifax|AST ADT|40 30|01010101010101010101010|1BQS0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|39e4\",\n\t\t\t\"America/Godthab|WGT WGST|30 20|01010101010101010101010|1BWp0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|17e3\",\n\t\t\t\"America/Goose_Bay|AST ADT|40 30|01010101010101010101010|1BQQ1 1zb0 Op0 1zcX Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|76e2\",\n\t\t\t\"America/Grand_Turk|EST EDT AST|50 40 40|0101010101012|1BQT0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|37e2\",\n\t\t\t\"America/Guayaquil|ECT|50|0||27e5\",\n\t\t\t\"America/Guyana|GYT|40|0||80e4\",\n\t\t\t\"America/Havana|CST CDT|50 40|01010101010101010101010|1BQR0 1wo0 U00 1zc0 U00 1qM0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Rc0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0 Oo0 1zc0|21e5\",\n\t\t\t\"America/La_Paz|BOT|40|0||19e5\",\n\t\t\t\"America/Lima|PET|50|0||11e6\",\n\t\t\t\"America/Mexico_City|CST CDT|60 50|01010101010101010101010|1C1k0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|20e6\",\n\t\t\t\"America/Metlakatla|PST|80|0||14e2\",\n\t\t\t\"America/Miquelon|PMST PMDT|30 20|01010101010101010101010|1BQR0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|61e2\",\n\t\t\t\"America/Montevideo|UYST UYT|20 30|010101010101|1BQQ0 1ld0 14n0 1ld0 14n0 1o10 11z0 1o10 11z0 1o10 11z0|17e5\",\n\t\t\t\"America/Noronha|FNT|20|0||30e2\",\n\t\t\t\"America/North_Dakota/Beulah|MST MDT CST CDT|70 60 60 50|01232323232323232323232|1BQV0 1zb0 Oo0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0\",\n\t\t\t\"America/Paramaribo|SRT|30|0||24e4\",\n\t\t\t\"America/Port-au-Prince|EST EDT|50 40|0101010101010101010|1GI70 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|23e5\",\n\t\t\t\"America/Santa_Isabel|PST PDT|80 70|01010101010101010101010|1C1m0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0 14p0 1lb0 14p0 1nX0 11B0 1nX0 11B0 1nX0 14p0 1lb0 14p0 1lb0|23e3\",\n\t\t\t\"America/Santiago|CLST CLT CLT|30 40 30|010101010102|1C1f0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 1wn0|62e5\",\n\t\t\t\"America/Sao_Paulo|BRST BRT|20 30|01010101010101010101010|1BIq0 1zd0 On0 1zd0 Rb0 1zd0 Lz0 1C10 Lz0 1C10 On0 1zd0 On0 1zd0 On0 1zd0 On0 1C10 Lz0 1C10 Lz0 1C10|20e6\",\n\t\t\t\"America/Scoresbysund|EGT EGST|10 0|01010101010101010101010|1BWp0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|452\",\n\t\t\t\"America/St_Johns|NST NDT|3u 2u|01010101010101010101010|1BQPv 1zb0 Op0 1zcX Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Rd0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0 Op0 1zb0|11e4\",\n\t\t\t\"Antarctica/Casey|CAST AWST|-b0 -80|0101|1BN30 40P0 KL0|10\",\n\t\t\t\"Antarctica/Davis|DAVT DAVT|-50 -70|0101|1BPw0 3Wn0 KN0|70\",\n\t\t\t\"Antarctica/DumontDUrville|DDUT|-a0|0||80\",\n\t\t\t\"Antarctica/Macquarie|AEDT MIST|-b0 -b0|01|1C140|1\",\n\t\t\t\"Antarctica/Mawson|MAWT|-50|0||60\",\n\t\t\t\"Pacific/Auckland|NZDT NZST|-d0 -c0|01010101010101010101010|1C120 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00|14e5\",\n\t\t\t\"Antarctica/Rothera|ROTT|30|0||130\",\n\t\t\t\"Antarctica/Syowa|SYOT|-30|0||20\",\n\t\t\t\"Antarctica/Troll|UTC CEST|0 -20|01010101010101010101010|1BWp0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|40\",\n\t\t\t\"Antarctica/Vostok|VOST|-60|0||25\",\n\t\t\t\"Asia/Baghdad|AST|-30|0||66e5\",\n\t\t\t\"Asia/Almaty|ALMT|-60|0||15e5\",\n\t\t\t\"Asia/Amman|EET EEST|-20 -30|010101010101010101010|1BVy0 1qM0 11A0 1o00 11A0 4bX0 Dd0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0|25e5\",\n\t\t\t\"Asia/Anadyr|ANAT ANAST ANAT|-c0 -c0 -b0|0120|1BWe0 1qN0 WM0|13e3\",\n\t\t\t\"Asia/Aqtobe|AQTT|-50|0||27e4\",\n\t\t\t\"Asia/Ashgabat|TMT|-50|0||41e4\",\n\t\t\t\"Asia/Baku|AZT AZST|-40 -50|01010101010101010101010|1BWo0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|27e5\",\n\t\t\t\"Asia/Bangkok|ICT|-70|0||15e6\",\n\t\t\t\"Asia/Beirut|EET EEST|-20 -30|01010101010101010101010|1BWm0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0|22e5\",\n\t\t\t\"Asia/Bishkek|KGT|-60|0||87e4\",\n\t\t\t\"Asia/Brunei|BNT|-80|0||42e4\",\n\t\t\t\"Asia/Kolkata|IST|-5u|0||15e6\",\n\t\t\t\"Asia/Chita|YAKT YAKST YAKT IRKT|-90 -a0 -a0 -80|01023|1BWh0 1qM0 WM0 8Hz0|33e4\",\n\t\t\t\"Asia/Choibalsan|CHOT CHOST|-80 -90|0101010101010|1O8G0 1cJ0 1cP0 1cJ0 1cP0 1fx0 1cP0 1cJ0 1cP0 1cJ0 1cP0 1cJ0|38e3\",\n\t\t\t\"Asia/Shanghai|CST|-80|0||23e6\",\n\t\t\t\"Asia/Dhaka|BDT|-60|0||16e6\",\n\t\t\t\"Asia/Damascus|EET EEST|-20 -30|01010101010101010101010|1C0m0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0 WN0 1qL0 WN0 1qL0 11B0 1nX0 11B0 1nX0 11B0 1nX0 11B0 1qL0|26e5\",\n\t\t\t\"Asia/Dili|TLT|-90|0||19e4\",\n\t\t\t\"Asia/Dubai|GST|-40|0||39e5\",\n\t\t\t\"Asia/Dushanbe|TJT|-50|0||76e4\",\n\t\t\t\"Asia/Gaza|EET EEST|-20 -30|01010101010101010101010|1BVW1 SKX 1xd1 MKX 1AN0 1a00 1fA0 1cL0 1cN0 1nX0 1210 1nz0 1210 1nz0 14N0 1nz0 1210 1nz0 1210 1nz0 1210 1nz0|18e5\",\n\t\t\t\"Asia/Hebron|EET EEST|-20 -30|0101010101010101010101010|1BVy0 Tb0 1xd1 MKX bB0 cn0 1cN0 1a00 1fA0 1cL0 1cN0 1nX0 1210 1nz0 1210 1nz0 14N0 1nz0 1210 1nz0 1210 1nz0 1210 1nz0|25e4\",\n\t\t\t\"Asia/Hong_Kong|HKT|-80|0||73e5\",\n\t\t\t\"Asia/Hovd|HOVT HOVST|-70 -80|0101010101010|1O8H0 1cJ0 1cP0 1cJ0 1cP0 1fx0 1cP0 1cJ0 1cP0 1cJ0 1cP0 1cJ0|81e3\",\n\t\t\t\"Asia/Irkutsk|IRKT IRKST IRKT|-80 -90 -90|01020|1BWi0 1qM0 WM0 8Hz0|60e4\",\n\t\t\t\"Europe/Istanbul|EET EEST|-20 -30|01010101010101010101010|1BWp0 1qM0 Xc0 1qo0 WM0 1qM0 11A0 1o00 1200 1nA0 11A0 1tA0 U00 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|13e6\",\n\t\t\t\"Asia/Jakarta|WIB|-70|0||31e6\",\n\t\t\t\"Asia/Jayapura|WIT|-90|0||26e4\",\n\t\t\t\"Asia/Jerusalem|IST IDT|-20 -30|01010101010101010101010|1BVA0 17X0 1kp0 1dz0 1c10 1aL0 1eN0 1oL0 10N0 1oL0 10N0 1oL0 10N0 1rz0 W10 1rz0 W10 1rz0 10N0 1oL0 10N0 1oL0|81e4\",\n\t\t\t\"Asia/Kabul|AFT|-4u|0||46e5\",\n\t\t\t\"Asia/Kamchatka|PETT PETST PETT|-c0 -c0 -b0|0120|1BWe0 1qN0 WM0|18e4\",\n\t\t\t\"Asia/Karachi|PKT|-50|0||24e6\",\n\t\t\t\"Asia/Urumqi|XJT|-60|0||32e5\",\n\t\t\t\"Asia/Kathmandu|NPT|-5J|0||12e5\",\n\t\t\t\"Asia/Khandyga|VLAT VLAST VLAT YAKT YAKT|-a0 -b0 -b0 -a0 -90|010234|1BWg0 1qM0 WM0 17V0 7zD0|66e2\",\n\t\t\t\"Asia/Krasnoyarsk|KRAT KRAST KRAT|-70 -80 -80|01020|1BWj0 1qM0 WM0 8Hz0|10e5\",\n\t\t\t\"Asia/Kuala_Lumpur|MYT|-80|0||71e5\",\n\t\t\t\"Asia/Magadan|MAGT MAGST MAGT MAGT|-b0 -c0 -c0 -a0|01023|1BWf0 1qM0 WM0 8Hz0|95e3\",\n\t\t\t\"Asia/Makassar|WITA|-80|0||15e5\",\n\t\t\t\"Asia/Manila|PHT|-80|0||24e6\",\n\t\t\t\"Europe/Athens|EET EEST|-20 -30|01010101010101010101010|1BWp0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|35e5\",\n\t\t\t\"Asia/Novokuznetsk|KRAT NOVST NOVT NOVT|-70 -70 -60 -70|01230|1BWj0 1qN0 WM0 8Hz0|55e4\",\n\t\t\t\"Asia/Novosibirsk|NOVT NOVST NOVT|-60 -70 -70|01020|1BWk0 1qM0 WM0 8Hz0|15e5\",\n\t\t\t\"Asia/Omsk|OMST OMSST OMST|-60 -70 -70|01020|1BWk0 1qM0 WM0 8Hz0|12e5\",\n\t\t\t\"Asia/Oral|ORAT|-50|0||27e4\",\n\t\t\t\"Asia/Pyongyang|KST KST|-90 -8u|01|1P4D0|29e5\",\n\t\t\t\"Asia/Qyzylorda|QYZT|-60|0||73e4\",\n\t\t\t\"Asia/Rangoon|MMT|-6u|0||48e5\",\n\t\t\t\"Asia/Sakhalin|SAKT SAKST SAKT|-a0 -b0 -b0|01020|1BWg0 1qM0 WM0 8Hz0|58e4\",\n\t\t\t\"Asia/Tashkent|UZT|-50|0||23e5\",\n\t\t\t\"Asia/Seoul|KST|-90|0||23e6\",\n\t\t\t\"Asia/Singapore|SGT|-80|0||56e5\",\n\t\t\t\"Asia/Srednekolymsk|MAGT MAGST MAGT SRET|-b0 -c0 -c0 -b0|01023|1BWf0 1qM0 WM0 8Hz0|35e2\",\n\t\t\t\"Asia/Tbilisi|GET|-40|0||11e5\",\n\t\t\t\"Asia/Tehran|IRST IRDT|-3u -4u|01010101010101010101010|1BTUu 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0 1cN0 1dz0 1cp0 1dz0 1cp0 1dz0 1cp0 1dz0|14e6\",\n\t\t\t\"Asia/Thimphu|BTT|-60|0||79e3\",\n\t\t\t\"Asia/Tokyo|JST|-90|0||38e6\",\n\t\t\t\"Asia/Ulaanbaatar|ULAT ULAST|-80 -90|0101010101010|1O8G0 1cJ0 1cP0 1cJ0 1cP0 1fx0 1cP0 1cJ0 1cP0 1cJ0 1cP0 1cJ0|12e5\",\n\t\t\t\"Asia/Ust-Nera|MAGT MAGST MAGT VLAT VLAT|-b0 -c0 -c0 -b0 -a0|010234|1BWf0 1qM0 WM0 17V0 7zD0|65e2\",\n\t\t\t\"Asia/Vladivostok|VLAT VLAST VLAT|-a0 -b0 -b0|01020|1BWg0 1qM0 WM0 8Hz0|60e4\",\n\t\t\t\"Asia/Yakutsk|YAKT YAKST YAKT|-90 -a0 -a0|01020|1BWh0 1qM0 WM0 8Hz0|28e4\",\n\t\t\t\"Asia/Yekaterinburg|YEKT YEKST YEKT|-50 -60 -60|01020|1BWl0 1qM0 WM0 8Hz0|14e5\",\n\t\t\t\"Asia/Yerevan|AMT AMST|-40 -50|01010|1BWm0 1qM0 WM0 1qM0|13e5\",\n\t\t\t\"Atlantic/Azores|AZOT AZOST|10 0|01010101010101010101010|1BWp0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|25e4\",\n\t\t\t\"Europe/Lisbon|WET WEST|0 -10|01010101010101010101010|1BWp0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|27e5\",\n\t\t\t\"Atlantic/Cape_Verde|CVT|10|0||50e4\",\n\t\t\t\"Atlantic/South_Georgia|GST|20|0||30\",\n\t\t\t\"Atlantic/Stanley|FKST FKT|30 40|010|1C6R0 U10|21e2\",\n\t\t\t\"Australia/Sydney|AEDT AEST|-b0 -a0|01010101010101010101010|1C140 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|40e5\",\n\t\t\t\"Australia/Adelaide|ACDT ACST|-au -9u|01010101010101010101010|1C14u 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1cM0 1fA0 1cM0 1cM0 1cM0 1cM0|11e5\",\n\t\t\t\"Australia/Brisbane|AEST|-a0|0||20e5\",\n\t\t\t\"Australia/Darwin|ACST|-9u|0||12e4\",\n\t\t\t\"Australia/Eucla|ACWST|-8J|0||368\",\n\t\t\t\"Australia/Lord_Howe|LHDT LHST|-b0 -au|01010101010101010101010|1C130 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1cMu 1cLu 1fAu 1cLu 1cMu 1cLu 1cMu|347\",\n\t\t\t\"Australia/Perth|AWST|-80|0||18e5\",\n\t\t\t\"Pacific/Easter|EASST EAST EAST|50 60 50|010101010102|1C1f0 1fB0 1nX0 G10 1EL0 Op0 1zb0 Rd0 1wn0 Rd0 1wn0|30e2\",\n\t\t\t\"Europe/Dublin|GMT IST|0 -10|01010101010101010101010|1BWp0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|12e5\",\n\t\t\t\"Etc/GMT+1|GMT+1|10|0|\",\n\t\t\t\"Etc/GMT+10|GMT+10|a0|0|\",\n\t\t\t\"Etc/GMT+11|GMT+11|b0|0|\",\n\t\t\t\"Etc/GMT+12|GMT+12|c0|0|\",\n\t\t\t\"Etc/GMT+2|GMT+2|20|0|\",\n\t\t\t\"Etc/GMT+3|GMT+3|30|0|\",\n\t\t\t\"Etc/GMT+4|GMT+4|40|0|\",\n\t\t\t\"Etc/GMT+5|GMT+5|50|0|\",\n\t\t\t\"Etc/GMT+6|GMT+6|60|0|\",\n\t\t\t\"Etc/GMT+7|GMT+7|70|0|\",\n\t\t\t\"Etc/GMT+8|GMT+8|80|0|\",\n\t\t\t\"Etc/GMT+9|GMT+9|90|0|\",\n\t\t\t\"Etc/GMT-1|GMT-1|-10|0|\",\n\t\t\t\"Etc/GMT-10|GMT-10|-a0|0|\",\n\t\t\t\"Etc/GMT-11|GMT-11|-b0|0|\",\n\t\t\t\"Etc/GMT-12|GMT-12|-c0|0|\",\n\t\t\t\"Etc/GMT-13|GMT-13|-d0|0|\",\n\t\t\t\"Etc/GMT-14|GMT-14|-e0|0|\",\n\t\t\t\"Etc/GMT-2|GMT-2|-20|0|\",\n\t\t\t\"Etc/GMT-3|GMT-3|-30|0|\",\n\t\t\t\"Etc/GMT-4|GMT-4|-40|0|\",\n\t\t\t\"Etc/GMT-5|GMT-5|-50|0|\",\n\t\t\t\"Etc/GMT-6|GMT-6|-60|0|\",\n\t\t\t\"Etc/GMT-7|GMT-7|-70|0|\",\n\t\t\t\"Etc/GMT-8|GMT-8|-80|0|\",\n\t\t\t\"Etc/GMT-9|GMT-9|-90|0|\",\n\t\t\t\"Etc/UCT|UCT|0|0|\",\n\t\t\t\"Etc/UTC|UTC|0|0|\",\n\t\t\t\"Europe/London|GMT BST|0 -10|01010101010101010101010|1BWp0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|10e6\",\n\t\t\t\"Europe/Chisinau|EET EEST|-20 -30|01010101010101010101010|1BWo0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00|67e4\",\n\t\t\t\"Europe/Kaliningrad|EET EEST FET|-20 -30 -30|01020|1BWo0 1qM0 WM0 8Hz0|44e4\",\n\t\t\t\"Europe/Minsk|EET EEST FET MSK|-20 -30 -30 -30|01023|1BWo0 1qM0 WM0 8Hy0|19e5\",\n\t\t\t\"Europe/Moscow|MSK MSD MSK|-30 -40 -40|01020|1BWn0 1qM0 WM0 8Hz0|16e6\",\n\t\t\t\"Europe/Samara|SAMT SAMST SAMT|-40 -40 -30|0120|1BWm0 1qN0 WM0|12e5\",\n\t\t\t\"Europe/Simferopol|EET EEST MSK MSK|-20 -30 -40 -30|01010101023|1BWp0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11z0 1nW0|33e4\",\n\t\t\t\"Pacific/Honolulu|HST|a0|0||37e4\",\n\t\t\t\"Indian/Chagos|IOT|-60|0||30e2\",\n\t\t\t\"Indian/Christmas|CXT|-70|0||21e2\",\n\t\t\t\"Indian/Cocos|CCT|-6u|0||596\",\n\t\t\t\"Indian/Kerguelen|TFT|-50|0||130\",\n\t\t\t\"Indian/Mahe|SCT|-40|0||79e3\",\n\t\t\t\"Indian/Maldives|MVT|-50|0||35e4\",\n\t\t\t\"Indian/Mauritius|MUT|-40|0||15e4\",\n\t\t\t\"Indian/Reunion|RET|-40|0||84e4\",\n\t\t\t\"Pacific/Majuro|MHT|-c0|0||28e3\",\n\t\t\t\"MET|MET MEST|-10 -20|01010101010101010101010|1BWp0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00 11A0 1o00 11A0 1qM0 WM0 1qM0 WM0 1qM0 11A0 1o00 11A0 1o00\",\n\t\t\t\"Pacific/Chatham|CHADT CHAST|-dJ -cJ|01010101010101010101010|1C120 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00|600\",\n\t\t\t\"Pacific/Apia|SST SDT WSDT WSST|b0 a0 -e0 -d0|01012323232323232323232|1Dbn0 1ff0 1a00 CI0 AQ0 1cM0 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1a00 1fA0 1cM0 1fA0 1a00 1fA0 1a00|37e3\",\n\t\t\t\"Pacific/Bougainville|PGT BST|-a0 -b0|01|1NwE0|18e4\",\n\t\t\t\"Pacific/Chuuk|CHUT|-a0|0||49e3\",\n\t\t\t\"Pacific/Efate|VUT|-b0|0||66e3\",\n\t\t\t\"Pacific/Enderbury|PHOT|-d0|0||1\",\n\t\t\t\"Pacific/Fakaofo|TKT TKT|b0 -d0|01|1Gfn0|483\",\n\t\t\t\"Pacific/Fiji|FJST FJT|-d0 -c0|01010101010101010101010|1BWe0 1o00 Rc0 1wo0 Ao0 1Nc0 Ao0 1Q00 xz0 1SN0 uM0 1SM0 uM0 1VA0 s00 1VA0 uM0 1SM0 uM0 1SM0 uM0 1SM0|88e4\",\n\t\t\t\"Pacific/Funafuti|TVT|-c0|0||45e2\",\n\t\t\t\"Pacific/Galapagos|GALT|60|0||25e3\",\n\t\t\t\"Pacific/Gambier|GAMT|90|0||125\",\n\t\t\t\"Pacific/Guadalcanal|SBT|-b0|0||11e4\",\n\t\t\t\"Pacific/Guam|ChST|-a0|0||17e4\",\n\t\t\t\"Pacific/Kiritimati|LINT|-e0|0||51e2\",\n\t\t\t\"Pacific/Kosrae|KOST|-b0|0||66e2\",\n\t\t\t\"Pacific/Marquesas|MART|9u|0||86e2\",\n\t\t\t\"Pacific/Pago_Pago|SST|b0|0||37e2\",\n\t\t\t\"Pacific/Nauru|NRT|-c0|0||10e3\",\n\t\t\t\"Pacific/Niue|NUT|b0|0||12e2\",\n\t\t\t\"Pacific/Norfolk|NFT NFT|-bu -b0|01|1PoCu|25e4\",\n\t\t\t\"Pacific/Noumea|NCT|-b0|0||98e3\",\n\t\t\t\"Pacific/Palau|PWT|-90|0||21e3\",\n\t\t\t\"Pacific/Pohnpei|PONT|-b0|0||34e3\",\n\t\t\t\"Pacific/Port_Moresby|PGT|-a0|0||25e4\",\n\t\t\t\"Pacific/Rarotonga|CKT|a0|0||13e3\",\n\t\t\t\"Pacific/Tahiti|TAHT|a0|0||18e4\",\n\t\t\t\"Pacific/Tarawa|GILT|-c0|0||29e3\",\n\t\t\t\"Pacific/Tongatapu|TOT|-d0|0||75e3\",\n\t\t\t\"Pacific/Wake|WAKT|-c0|0||16e3\",\n\t\t\t\"Pacific/Wallis|WFT|-c0|0||94\"\n\t\t],\n\t\t\"links\": [\n\t\t\t\"Africa/Abidjan|Africa/Accra\",\n\t\t\t\"Africa/Abidjan|Africa/Bamako\",\n\t\t\t\"Africa/Abidjan|Africa/Banjul\",\n\t\t\t\"Africa/Abidjan|Africa/Bissau\",\n\t\t\t\"Africa/Abidjan|Africa/Conakry\",\n\t\t\t\"Africa/Abidjan|Africa/Dakar\",\n\t\t\t\"Africa/Abidjan|Africa/Freetown\",\n\t\t\t\"Africa/Abidjan|Africa/Lome\",\n\t\t\t\"Africa/Abidjan|Africa/Monrovia\",\n\t\t\t\"Africa/Abidjan|Africa/Nouakchott\",\n\t\t\t\"Africa/Abidjan|Africa/Ouagadougou\",\n\t\t\t\"Africa/Abidjan|Africa/Sao_Tome\",\n\t\t\t\"Africa/Abidjan|Africa/Timbuktu\",\n\t\t\t\"Africa/Abidjan|America/Danmarkshavn\",\n\t\t\t\"Africa/Abidjan|Atlantic/Reykjavik\",\n\t\t\t\"Africa/Abidjan|Atlantic/St_Helena\",\n\t\t\t\"Africa/Abidjan|Etc/GMT\",\n\t\t\t\"Africa/Abidjan|Etc/GMT+0\",\n\t\t\t\"Africa/Abidjan|Etc/GMT-0\",\n\t\t\t\"Africa/Abidjan|Etc/GMT0\",\n\t\t\t\"Africa/Abidjan|Etc/Greenwich\",\n\t\t\t\"Africa/Abidjan|GMT\",\n\t\t\t\"Africa/Abidjan|GMT+0\",\n\t\t\t\"Africa/Abidjan|GMT-0\",\n\t\t\t\"Africa/Abidjan|GMT0\",\n\t\t\t\"Africa/Abidjan|Greenwich\",\n\t\t\t\"Africa/Abidjan|Iceland\",\n\t\t\t\"Africa/Algiers|Africa/Tunis\",\n\t\t\t\"Africa/Cairo|Egypt\",\n\t\t\t\"Africa/Casablanca|Africa/El_Aaiun\",\n\t\t\t\"Africa/Johannesburg|Africa/Maseru\",\n\t\t\t\"Africa/Johannesburg|Africa/Mbabane\",\n\t\t\t\"Africa/Khartoum|Africa/Addis_Ababa\",\n\t\t\t\"Africa/Khartoum|Africa/Asmara\",\n\t\t\t\"Africa/Khartoum|Africa/Asmera\",\n\t\t\t\"Africa/Khartoum|Africa/Dar_es_Salaam\",\n\t\t\t\"Africa/Khartoum|Africa/Djibouti\",\n\t\t\t\"Africa/Khartoum|Africa/Juba\",\n\t\t\t\"Africa/Khartoum|Africa/Kampala\",\n\t\t\t\"Africa/Khartoum|Africa/Mogadishu\",\n\t\t\t\"Africa/Khartoum|Africa/Nairobi\",\n\t\t\t\"Africa/Khartoum|Indian/Antananarivo\",\n\t\t\t\"Africa/Khartoum|Indian/Comoro\",\n\t\t\t\"Africa/Khartoum|Indian/Mayotte\",\n\t\t\t\"Africa/Lagos|Africa/Bangui\",\n\t\t\t\"Africa/Lagos|Africa/Brazzaville\",\n\t\t\t\"Africa/Lagos|Africa/Douala\",\n\t\t\t\"Africa/Lagos|Africa/Kinshasa\",\n\t\t\t\"Africa/Lagos|Africa/Libreville\",\n\t\t\t\"Africa/Lagos|Africa/Luanda\",\n\t\t\t\"Africa/Lagos|Africa/Malabo\",\n\t\t\t\"Africa/Lagos|Africa/Ndjamena\",\n\t\t\t\"Africa/Lagos|Africa/Niamey\",\n\t\t\t\"Africa/Lagos|Africa/Porto-Novo\",\n\t\t\t\"Africa/Maputo|Africa/Blantyre\",\n\t\t\t\"Africa/Maputo|Africa/Bujumbura\",\n\t\t\t\"Africa/Maputo|Africa/Gaborone\",\n\t\t\t\"Africa/Maputo|Africa/Harare\",\n\t\t\t\"Africa/Maputo|Africa/Kigali\",\n\t\t\t\"Africa/Maputo|Africa/Lubumbashi\",\n\t\t\t\"Africa/Maputo|Africa/Lusaka\",\n\t\t\t\"Africa/Tripoli|Libya\",\n\t\t\t\"America/Adak|America/Atka\",\n\t\t\t\"America/Adak|US/Aleutian\",\n\t\t\t\"America/Anchorage|America/Juneau\",\n\t\t\t\"America/Anchorage|America/Nome\",\n\t\t\t\"America/Anchorage|America/Sitka\",\n\t\t\t\"America/Anchorage|America/Yakutat\",\n\t\t\t\"America/Anchorage|US/Alaska\",\n\t\t\t\"America/Argentina/Buenos_Aires|America/Argentina/Catamarca\",\n\t\t\t\"America/Argentina/Buenos_Aires|America/Argentina/ComodRivadavia\",\n\t\t\t\"America/Argentina/Buenos_Aires|America/Argentina/Cordoba\",\n\t\t\t\"America/Argentina/Buenos_Aires|America/Argentina/Jujuy\",\n\t\t\t\"America/Argentina/Buenos_Aires|America/Argentina/La_Rioja\",\n\t\t\t\"America/Argentina/Buenos_Aires|America/Argentina/Mendoza\",\n\t\t\t\"America/Argentina/Buenos_Aires|America/Argentina/Rio_Gallegos\",\n\t\t\t\"America/Argentina/Buenos_Aires|America/Argentina/Salta\",\n\t\t\t\"America/Argentina/Buenos_Aires|America/Argentina/San_Juan\",\n\t\t\t\"America/Argentina/Buenos_Aires|America/Argentina/San_Luis\",\n\t\t\t\"America/Argentina/Buenos_Aires|America/Argentina/Tucuman\",\n\t\t\t\"America/Argentina/Buenos_Aires|America/Argentina/Ushuaia\",\n\t\t\t\"America/Argentina/Buenos_Aires|America/Buenos_Aires\",\n\t\t\t\"America/Argentina/Buenos_Aires|America/Catamarca\",\n\t\t\t\"America/Argentina/Buenos_Aires|America/Cordoba\",\n\t\t\t\"America/Argentina/Buenos_Aires|America/Jujuy\",\n\t\t\t\"America/Argentina/Buenos_Aires|America/Mendoza\",\n\t\t\t\"America/Argentina/Buenos_Aires|America/Rosario\",\n\t\t\t\"America/Campo_Grande|America/Cuiaba\",\n\t\t\t\"America/Chicago|America/Indiana/Knox\",\n\t\t\t\"America/Chicago|America/Indiana/Tell_City\",\n\t\t\t\"America/Chicago|America/Knox_IN\",\n\t\t\t\"America/Chicago|America/Matamoros\",\n\t\t\t\"America/Chicago|America/Menominee\",\n\t\t\t\"America/Chicago|America/North_Dakota/Center\",\n\t\t\t\"America/Chicago|America/North_Dakota/New_Salem\",\n\t\t\t\"America/Chicago|America/Rainy_River\",\n\t\t\t\"America/Chicago|America/Rankin_Inlet\",\n\t\t\t\"America/Chicago|America/Resolute\",\n\t\t\t\"America/Chicago|America/Winnipeg\",\n\t\t\t\"America/Chicago|CST6CDT\",\n\t\t\t\"America/Chicago|Canada/Central\",\n\t\t\t\"America/Chicago|US/Central\",\n\t\t\t\"America/Chicago|US/Indiana-Starke\",\n\t\t\t\"America/Chihuahua|America/Mazatlan\",\n\t\t\t\"America/Chihuahua|Mexico/BajaSur\",\n\t\t\t\"America/Denver|America/Boise\",\n\t\t\t\"America/Denver|America/Cambridge_Bay\",\n\t\t\t\"America/Denver|America/Edmonton\",\n\t\t\t\"America/Denver|America/Inuvik\",\n\t\t\t\"America/Denver|America/Ojinaga\",\n\t\t\t\"America/Denver|America/Shiprock\",\n\t\t\t\"America/Denver|America/Yellowknife\",\n\t\t\t\"America/Denver|Canada/Mountain\",\n\t\t\t\"America/Denver|MST7MDT\",\n\t\t\t\"America/Denver|Navajo\",\n\t\t\t\"America/Denver|US/Mountain\",\n\t\t\t\"America/Fortaleza|America/Belem\",\n\t\t\t\"America/Fortaleza|America/Maceio\",\n\t\t\t\"America/Fortaleza|America/Recife\",\n\t\t\t\"America/Fortaleza|America/Santarem\",\n\t\t\t\"America/Halifax|America/Glace_Bay\",\n\t\t\t\"America/Halifax|America/Moncton\",\n\t\t\t\"America/Halifax|America/Thule\",\n\t\t\t\"America/Halifax|Atlantic/Bermuda\",\n\t\t\t\"America/Halifax|Canada/Atlantic\",\n\t\t\t\"America/Havana|Cuba\",\n\t\t\t\"America/Los_Angeles|America/Dawson\",\n\t\t\t\"America/Los_Angeles|America/Ensenada\",\n\t\t\t\"America/Los_Angeles|America/Tijuana\",\n\t\t\t\"America/Los_Angeles|America/Vancouver\",\n\t\t\t\"America/Los_Angeles|America/Whitehorse\",\n\t\t\t\"America/Los_Angeles|Canada/Pacific\",\n\t\t\t\"America/Los_Angeles|Canada/Yukon\",\n\t\t\t\"America/Los_Angeles|Mexico/BajaNorte\",\n\t\t\t\"America/Los_Angeles|PST8PDT\",\n\t\t\t\"America/Los_Angeles|US/Pacific\",\n\t\t\t\"America/Los_Angeles|US/Pacific-New\",\n\t\t\t\"America/Managua|America/Belize\",\n\t\t\t\"America/Managua|America/Costa_Rica\",\n\t\t\t\"America/Managua|America/El_Salvador\",\n\t\t\t\"America/Managua|America/Guatemala\",\n\t\t\t\"America/Managua|America/Regina\",\n\t\t\t\"America/Managua|America/Swift_Current\",\n\t\t\t\"America/Managua|America/Tegucigalpa\",\n\t\t\t\"America/Managua|Canada/East-Saskatchewan\",\n\t\t\t\"America/Managua|Canada/Saskatchewan\",\n\t\t\t\"America/Manaus|America/Boa_Vista\",\n\t\t\t\"America/Manaus|America/Porto_Velho\",\n\t\t\t\"America/Manaus|Brazil/West\",\n\t\t\t\"America/Metlakatla|Pacific/Pitcairn\",\n\t\t\t\"America/Mexico_City|America/Merida\",\n\t\t\t\"America/Mexico_City|America/Monterrey\",\n\t\t\t\"America/Mexico_City|Mexico/General\",\n\t\t\t\"America/New_York|America/Detroit\",\n\t\t\t\"America/New_York|America/Fort_Wayne\",\n\t\t\t\"America/New_York|America/Indiana/Indianapolis\",\n\t\t\t\"America/New_York|America/Indiana/Marengo\",\n\t\t\t\"America/New_York|America/Indiana/Petersburg\",\n\t\t\t\"America/New_York|America/Indiana/Vevay\",\n\t\t\t\"America/New_York|America/Indiana/Vincennes\",\n\t\t\t\"America/New_York|America/Indiana/Winamac\",\n\t\t\t\"America/New_York|America/Indianapolis\",\n\t\t\t\"America/New_York|America/Iqaluit\",\n\t\t\t\"America/New_York|America/Kentucky/Louisville\",\n\t\t\t\"America/New_York|America/Kentucky/Monticello\",\n\t\t\t\"America/New_York|America/Louisville\",\n\t\t\t\"America/New_York|America/Montreal\",\n\t\t\t\"America/New_York|America/Nassau\",\n\t\t\t\"America/New_York|America/Nipigon\",\n\t\t\t\"America/New_York|America/Pangnirtung\",\n\t\t\t\"America/New_York|America/Thunder_Bay\",\n\t\t\t\"America/New_York|America/Toronto\",\n\t\t\t\"America/New_York|Canada/Eastern\",\n\t\t\t\"America/New_York|EST5EDT\",\n\t\t\t\"America/New_York|US/East-Indiana\",\n\t\t\t\"America/New_York|US/Eastern\",\n\t\t\t\"America/New_York|US/Michigan\",\n\t\t\t\"America/Noronha|Brazil/DeNoronha\",\n\t\t\t\"America/Panama|America/Atikokan\",\n\t\t\t\"America/Panama|America/Coral_Harbour\",\n\t\t\t\"America/Panama|America/Jamaica\",\n\t\t\t\"America/Panama|EST\",\n\t\t\t\"America/Panama|Jamaica\",\n\t\t\t\"America/Phoenix|America/Creston\",\n\t\t\t\"America/Phoenix|America/Dawson_Creek\",\n\t\t\t\"America/Phoenix|America/Hermosillo\",\n\t\t\t\"America/Phoenix|MST\",\n\t\t\t\"America/Phoenix|US/Arizona\",\n\t\t\t\"America/Rio_Branco|America/Eirunepe\",\n\t\t\t\"America/Rio_Branco|America/Porto_Acre\",\n\t\t\t\"America/Rio_Branco|Brazil/Acre\",\n\t\t\t\"America/Santiago|Antarctica/Palmer\",\n\t\t\t\"America/Santiago|Chile/Continental\",\n\t\t\t\"America/Santo_Domingo|America/Anguilla\",\n\t\t\t\"America/Santo_Domingo|America/Antigua\",\n\t\t\t\"America/Santo_Domingo|America/Aruba\",\n\t\t\t\"America/Santo_Domingo|America/Barbados\",\n\t\t\t\"America/Santo_Domingo|America/Blanc-Sablon\",\n\t\t\t\"America/Santo_Domingo|America/Curacao\",\n\t\t\t\"America/Santo_Domingo|America/Dominica\",\n\t\t\t\"America/Santo_Domingo|America/Grenada\",\n\t\t\t\"America/Santo_Domingo|America/Guadeloupe\",\n\t\t\t\"America/Santo_Domingo|America/Kralendijk\",\n\t\t\t\"America/Santo_Domingo|America/Lower_Princes\",\n\t\t\t\"America/Santo_Domingo|America/Marigot\",\n\t\t\t\"America/Santo_Domingo|America/Martinique\",\n\t\t\t\"America/Santo_Domingo|America/Montserrat\",\n\t\t\t\"America/Santo_Domingo|America/Port_of_Spain\",\n\t\t\t\"America/Santo_Domingo|America/Puerto_Rico\",\n\t\t\t\"America/Santo_Domingo|America/St_Barthelemy\",\n\t\t\t\"America/Santo_Domingo|America/St_Kitts\",\n\t\t\t\"America/Santo_Domingo|America/St_Lucia\",\n\t\t\t\"America/Santo_Domingo|America/St_Thomas\",\n\t\t\t\"America/Santo_Domingo|America/St_Vincent\",\n\t\t\t\"America/Santo_Domingo|America/Tortola\",\n\t\t\t\"America/Santo_Domingo|America/Virgin\",\n\t\t\t\"America/Sao_Paulo|Brazil/East\",\n\t\t\t\"America/St_Johns|Canada/Newfoundland\",\n\t\t\t\"Asia/Aqtobe|Asia/Aqtau\",\n\t\t\t\"Asia/Ashgabat|Asia/Ashkhabad\",\n\t\t\t\"Asia/Baghdad|Asia/Aden\",\n\t\t\t\"Asia/Baghdad|Asia/Bahrain\",\n\t\t\t\"Asia/Baghdad|Asia/Kuwait\",\n\t\t\t\"Asia/Baghdad|Asia/Qatar\",\n\t\t\t\"Asia/Baghdad|Asia/Riyadh\",\n\t\t\t\"Asia/Bangkok|Asia/Ho_Chi_Minh\",\n\t\t\t\"Asia/Bangkok|Asia/Phnom_Penh\",\n\t\t\t\"Asia/Bangkok|Asia/Saigon\",\n\t\t\t\"Asia/Bangkok|Asia/Vientiane\",\n\t\t\t\"Asia/Dhaka|Asia/Dacca\",\n\t\t\t\"Asia/Dubai|Asia/Muscat\",\n\t\t\t\"Asia/Hong_Kong|Hongkong\",\n\t\t\t\"Asia/Jakarta|Asia/Pontianak\",\n\t\t\t\"Asia/Jerusalem|Asia/Tel_Aviv\",\n\t\t\t\"Asia/Jerusalem|Israel\",\n\t\t\t\"Asia/Kathmandu|Asia/Katmandu\",\n\t\t\t\"Asia/Kolkata|Asia/Calcutta\",\n\t\t\t\"Asia/Kolkata|Asia/Colombo\",\n\t\t\t\"Asia/Kuala_Lumpur|Asia/Kuching\",\n\t\t\t\"Asia/Makassar|Asia/Ujung_Pandang\",\n\t\t\t\"Asia/Seoul|ROK\",\n\t\t\t\"Asia/Shanghai|Asia/Chongqing\",\n\t\t\t\"Asia/Shanghai|Asia/Chungking\",\n\t\t\t\"Asia/Shanghai|Asia/Harbin\",\n\t\t\t\"Asia/Shanghai|Asia/Macao\",\n\t\t\t\"Asia/Shanghai|Asia/Macau\",\n\t\t\t\"Asia/Shanghai|Asia/Taipei\",\n\t\t\t\"Asia/Shanghai|PRC\",\n\t\t\t\"Asia/Shanghai|ROC\",\n\t\t\t\"Asia/Singapore|Singapore\",\n\t\t\t\"Asia/Tashkent|Asia/Samarkand\",\n\t\t\t\"Asia/Tehran|Iran\",\n\t\t\t\"Asia/Thimphu|Asia/Thimbu\",\n\t\t\t\"Asia/Tokyo|Japan\",\n\t\t\t\"Asia/Ulaanbaatar|Asia/Ulan_Bator\",\n\t\t\t\"Asia/Urumqi|Asia/Kashgar\",\n\t\t\t\"Australia/Adelaide|Australia/Broken_Hill\",\n\t\t\t\"Australia/Adelaide|Australia/South\",\n\t\t\t\"Australia/Adelaide|Australia/Yancowinna\",\n\t\t\t\"Australia/Brisbane|Australia/Lindeman\",\n\t\t\t\"Australia/Brisbane|Australia/Queensland\",\n\t\t\t\"Australia/Darwin|Australia/North\",\n\t\t\t\"Australia/Lord_Howe|Australia/LHI\",\n\t\t\t\"Australia/Perth|Australia/West\",\n\t\t\t\"Australia/Sydney|Australia/ACT\",\n\t\t\t\"Australia/Sydney|Australia/Canberra\",\n\t\t\t\"Australia/Sydney|Australia/Currie\",\n\t\t\t\"Australia/Sydney|Australia/Hobart\",\n\t\t\t\"Australia/Sydney|Australia/Melbourne\",\n\t\t\t\"Australia/Sydney|Australia/NSW\",\n\t\t\t\"Australia/Sydney|Australia/Tasmania\",\n\t\t\t\"Australia/Sydney|Australia/Victoria\",\n\t\t\t\"Etc/UCT|UCT\",\n\t\t\t\"Etc/UTC|Etc/Universal\",\n\t\t\t\"Etc/UTC|Etc/Zulu\",\n\t\t\t\"Etc/UTC|UTC\",\n\t\t\t\"Etc/UTC|Universal\",\n\t\t\t\"Etc/UTC|Zulu\",\n\t\t\t\"Europe/Athens|Asia/Nicosia\",\n\t\t\t\"Europe/Athens|EET\",\n\t\t\t\"Europe/Athens|Europe/Bucharest\",\n\t\t\t\"Europe/Athens|Europe/Helsinki\",\n\t\t\t\"Europe/Athens|Europe/Kiev\",\n\t\t\t\"Europe/Athens|Europe/Mariehamn\",\n\t\t\t\"Europe/Athens|Europe/Nicosia\",\n\t\t\t\"Europe/Athens|Europe/Riga\",\n\t\t\t\"Europe/Athens|Europe/Sofia\",\n\t\t\t\"Europe/Athens|Europe/Tallinn\",\n\t\t\t\"Europe/Athens|Europe/Uzhgorod\",\n\t\t\t\"Europe/Athens|Europe/Vilnius\",\n\t\t\t\"Europe/Athens|Europe/Zaporozhye\",\n\t\t\t\"Europe/Chisinau|Europe/Tiraspol\",\n\t\t\t\"Europe/Dublin|Eire\",\n\t\t\t\"Europe/Istanbul|Asia/Istanbul\",\n\t\t\t\"Europe/Istanbul|Turkey\",\n\t\t\t\"Europe/Lisbon|Atlantic/Canary\",\n\t\t\t\"Europe/Lisbon|Atlantic/Faeroe\",\n\t\t\t\"Europe/Lisbon|Atlantic/Faroe\",\n\t\t\t\"Europe/Lisbon|Atlantic/Madeira\",\n\t\t\t\"Europe/Lisbon|Portugal\",\n\t\t\t\"Europe/Lisbon|WET\",\n\t\t\t\"Europe/London|Europe/Belfast\",\n\t\t\t\"Europe/London|Europe/Guernsey\",\n\t\t\t\"Europe/London|Europe/Isle_of_Man\",\n\t\t\t\"Europe/London|Europe/Jersey\",\n\t\t\t\"Europe/London|GB\",\n\t\t\t\"Europe/London|GB-Eire\",\n\t\t\t\"Europe/Moscow|Europe/Volgograd\",\n\t\t\t\"Europe/Moscow|W-SU\",\n\t\t\t\"Europe/Paris|Africa/Ceuta\",\n\t\t\t\"Europe/Paris|Arctic/Longyearbyen\",\n\t\t\t\"Europe/Paris|Atlantic/Jan_Mayen\",\n\t\t\t\"Europe/Paris|CET\",\n\t\t\t\"Europe/Paris|Europe/Amsterdam\",\n\t\t\t\"Europe/Paris|Europe/Andorra\",\n\t\t\t\"Europe/Paris|Europe/Belgrade\",\n\t\t\t\"Europe/Paris|Europe/Berlin\",\n\t\t\t\"Europe/Paris|Europe/Bratislava\",\n\t\t\t\"Europe/Paris|Europe/Brussels\",\n\t\t\t\"Europe/Paris|Europe/Budapest\",\n\t\t\t\"Europe/Paris|Europe/Busingen\",\n\t\t\t\"Europe/Paris|Europe/Copenhagen\",\n\t\t\t\"Europe/Paris|Europe/Gibraltar\",\n\t\t\t\"Europe/Paris|Europe/Ljubljana\",\n\t\t\t\"Europe/Paris|Europe/Luxembourg\",\n\t\t\t\"Europe/Paris|Europe/Madrid\",\n\t\t\t\"Europe/Paris|Europe/Malta\",\n\t\t\t\"Europe/Paris|Europe/Monaco\",\n\t\t\t\"Europe/Paris|Europe/Oslo\",\n\t\t\t\"Europe/Paris|Europe/Podgorica\",\n\t\t\t\"Europe/Paris|Europe/Prague\",\n\t\t\t\"Europe/Paris|Europe/Rome\",\n\t\t\t\"Europe/Paris|Europe/San_Marino\",\n\t\t\t\"Europe/Paris|Europe/Sarajevo\",\n\t\t\t\"Europe/Paris|Europe/Skopje\",\n\t\t\t\"Europe/Paris|Europe/Stockholm\",\n\t\t\t\"Europe/Paris|Europe/Tirane\",\n\t\t\t\"Europe/Paris|Europe/Vaduz\",\n\t\t\t\"Europe/Paris|Europe/Vatican\",\n\t\t\t\"Europe/Paris|Europe/Vienna\",\n\t\t\t\"Europe/Paris|Europe/Warsaw\",\n\t\t\t\"Europe/Paris|Europe/Zagreb\",\n\t\t\t\"Europe/Paris|Europe/Zurich\",\n\t\t\t\"Europe/Paris|Poland\",\n\t\t\t\"Pacific/Auckland|Antarctica/McMurdo\",\n\t\t\t\"Pacific/Auckland|Antarctica/South_Pole\",\n\t\t\t\"Pacific/Auckland|NZ\",\n\t\t\t\"Pacific/Chatham|NZ-CHAT\",\n\t\t\t\"Pacific/Chuuk|Pacific/Truk\",\n\t\t\t\"Pacific/Chuuk|Pacific/Yap\",\n\t\t\t\"Pacific/Easter|Chile/EasterIsland\",\n\t\t\t\"Pacific/Guam|Pacific/Saipan\",\n\t\t\t\"Pacific/Honolulu|HST\",\n\t\t\t\"Pacific/Honolulu|Pacific/Johnston\",\n\t\t\t\"Pacific/Honolulu|US/Hawaii\",\n\t\t\t\"Pacific/Majuro|Kwajalein\",\n\t\t\t\"Pacific/Majuro|Pacific/Kwajalein\",\n\t\t\t\"Pacific/Pago_Pago|Pacific/Midway\",\n\t\t\t\"Pacific/Pago_Pago|Pacific/Samoa\",\n\t\t\t\"Pacific/Pago_Pago|US/Samoa\",\n\t\t\t\"Pacific/Pohnpei|Pacific/Ponape\"\n\t\t]\n\t});\n\n\n\treturn moment;\n}));\n","sys_class_name":"sys_ui_script","sys_id":"afc74dc1cb11120000f8d856634c9c07","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/69996b7b04f12210559073c06a02f7e2","value":"69996b7b04f12210559073c06a02f7e2"},"ui_type":"0","sys_update_name":"sys_ui_script_afc74dc1cb11120000f8d856634c9c07","sys_updated_by":"system","sys_created_on":"2016-01-30 00:47:22","name":"moment-timezone.js","sys_name":"moment-timezone.js","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"69","active":"true","description":"Support for the elevated roles, see elevated_privilege_dialoge ui page where it is used.","use_scoped_format":"false","global":"false","sys_updated_on":"2025-06-05 05:18:18","sys_tags":"","script_name":"","script":"var ElevatedRole = Class.create();\n\nElevatedRole.prototype = {\n\t\n\tinitialize: function(span_name) {\n\t\tthis.span_name = span_name;\n\t\tCustomEvent.observe('user.login', this.updateElevatedRoleForLogin.bind(this));\n\t},\n\t\n\t/*\n \t* Login handler\n \t*/\n\tupdateElevatedRoleForLogin: function(/* GlideUser */ user) {\n\t\tthis.elevatedRolesArray = user.getAvailableElevatedRoles();\n\t\tthis.activeElevatedRolesArray = user.getActiveElevatedRoles();\n\t\t\n\t\tif (this.activeElevatedRolesArray && this.activeElevatedRolesArray.length > 0) { //an elevated role exists\n\t\t\tCustomEvent.observe('glide:ui_notification.security', this.expireElevatedRole.bind(this));\n\t\t}\n\t\t\n\t\tvar span = gel(this.span_name);\n\t\tif (this.elevatedRolesArray.length <= 0) {\n\t\t\t// if there are no available elevated roles, hide the control\n\t\t\thideObject(span);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tshowObjectInlineBlock(span);\n\t},\n\t\n\texpireElevatedRole: function(/* UINotification*/ notification){\n\t\tif (this.activeElevatedRolesArray && this.activeElevatedRolesArray.length > 0) { //an elevated role exists\n\t\t\tvar dialogClass = GlideDialogWindow,\n\t\t\t\twidth;\n\t\t\tif (window.GlideModal) {\n\t\t\t\tdialogClass = GlideModal;\n\t\t\t\twidth = 400;\n\t\t\t}\n\t\t\t\n\t\t\tvar gDialog = new dialogClass(\"elevated_role_dialog\", false, width);\n\t\t\tgDialog.setPreference('activeElevatedRoles', this.activeElevatedRolesArray);\n\t\t\tgDialog.setPreference('activeElevatedRoles', this.activeElevatedRolesArray.join(', '));\n\t\t\tgDialog.setTitle(new GwtMessage().getMessage('Elevated Roles has Expired'));\n\t\t\tgDialog.render();\n\t\t}\n\t},\n\t\n\tselectElevatedRole: function() {\n\t\tvar dialogClass = GlideDialogWindow,\n\t\t\twidth;\n\t\tif (window.GlideModal) {\n\t\t\tdialogClass = GlideModal;\n\t\t\twidth = 400;\n\t\t}\t\n\t\tvar gDialog = new dialogClass(\"dialog_elevated_role\", false, width);\n\t\tgDialog.setPreference('table', 'elevated_role_dialog');\n\t\tgDialog.setPreference('elevatedRolesArray', this.elevatedRolesArray);\n\t\tgDialog.setTitle(new GwtMessage().getMessage('Activate an Elevated Privilege'));\n\t\tgDialog.render();\n\t}\n};","sys_class_name":"sys_ui_script","sys_id":"b7e52f090a0a0b7f2cb91e443a9f7702","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/8778afb304f12210559073c06a02f7f6","value":"8778afb304f12210559073c06a02f7f6"},"ui_type":"0","sys_update_name":"sys_ui_script_b7e52f090a0a0b7f2cb91e443a9f7702","sys_updated_by":"system","sys_created_on":"2010-05-20 22:46:09","name":"ElevatedRole","sys_name":"ElevatedRole","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"dloo","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"2","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2024-02-02 05:03:34","sys_tags":"","script_name":"","script":"/* moment.js proxy BEGIN */\n/* slightly modified version of https:// */\n/**\n * Minified by jsDelivr using Terser v5.19.2.\n * Original file: /npm/moment@2.30.1/moment.js\n *\n * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files\n */\n//! moment.js\n//! version : 2.30.1\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):e.moment=t()}(this,(function(){\"use strict\";var e,t;function n(){return e.apply(null,arguments)}function s(e){return e instanceof Array||\"[object Array]\"===Object.prototype.toString.call(e)}function i(e){return null!=e&&\"[object Object]\"===Object.prototype.toString.call(e)}function r(e,t){return Object.prototype.hasOwnProperty.call(e,t)}function a(e){if(Object.getOwnPropertyNames)return 0===Object.getOwnPropertyNames(e).length;var t;for(t in e)if(r(e,t))return!1;return!0}function o(e){return void 0===e}function u(e){return\"number\"==typeof e||\"[object Number]\"===Object.prototype.toString.call(e)}function l(e){return e instanceof Date||\"[object Date]\"===Object.prototype.toString.call(e)}function d(e,t){var n,s=[],i=e.length;for(n=0;n<i;++n)s.push(t(e[n],n));return s}function h(e,t){for(var n in t)r(t,n)&&(e[n]=t[n]);return r(t,\"toString\")&&(e.toString=t.toString),r(t,\"valueOf\")&&(e.valueOf=t.valueOf),e}function c(e,t,n,s){return Pt(e,t,n,s,!0).utc()}function f(e){return null==e._pf&&(e._pf={empty:!1,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:!1,invalidEra:null,invalidMonth:null,invalidFormat:!1,userInvalidated:!1,iso:!1,parsedDateParts:[],era:null,meridiem:null,rfc2822:!1,weekdayMismatch:!1}),e._pf}function m(e){var n=null,s=!1,i=e._d&&!isNaN(e._d.getTime());return i&&(n=f(e),s=t.call(n.parsedDateParts,(function(e){return null!=e})),i=n.overflow<0&&!n.empty&&!n.invalidEra&&!n.invalidMonth&&!n.invalidWeekday&&!n.weekdayMismatch&&!n.nullInput&&!n.invalidFormat&&!n.userInvalidated&&(!n.meridiem||n.meridiem&&s),e._strict&&(i=i&&0===n.charsLeftOver&&0===n.unusedTokens.length&&void 0===n.bigHour)),null!=Object.isFrozen&&Object.isFrozen(e)?i:(e._isValid=i,e._isValid)}function _(e){var t=c(NaN);return null!=e?h(f(t),e):f(t).userInvalidated=!0,t}t=Array.prototype.some?Array.prototype.some:function(e){var t,n=Object(this),s=n.length>>>0;for(t=0;t<s;t++)if(t in n&&e.call(this,n[t],t,n))return!0;return!1};var y=n.momentProperties=[],g=!1;function w(e,t){var n,s,i,r=y.length;if(o(t._isAMomentObject)||(e._isAMomentObject=t._isAMomentObject),o(t._i)||(e._i=t._i),o(t._f)||(e._f=t._f),o(t._l)||(e._l=t._l),o(t._strict)||(e._strict=t._strict),o(t._tzm)||(e._tzm=t._tzm),o(t._isUTC)||(e._isUTC=t._isUTC),o(t._offset)||(e._offset=t._offset),o(t._pf)||(e._pf=f(t)),o(t._locale)||(e._locale=t._locale),r>0)for(n=0;n<r;n++)o(i=t[s=y[n]])||(e[s]=i);return e}function p(e){w(this,e),this._d=new Date(null!=e._d?e._d.getTime():NaN),this.isValid()||(this._d=new Date(NaN)),!1===g&&(g=!0,n.updateOffset(this),g=!1)}function v(e){return e instanceof p||null!=e&&null!=e._isAMomentObject}function k(e){!1===n.suppressDeprecationWarnings&&\"undefined\"!=typeof console&&console.warn&&console.warn(\"Deprecation warning: \"+e)}function M(e,t){var s=!0;return h((function(){if(null!=n.deprecationHandler&&n.deprecationHandler(null,e),s){var i,a,o,u=[],l=arguments.length;for(a=0;a<l;a++){if(i=\"\",\"object\"==typeof arguments[a]){for(o in i+=\"\\n[\"+a+\"] \",arguments[0])r(arguments[0],o)&&(i+=o+\": \"+arguments[0][o]+\", \");i=i.slice(0,-2)}else i=arguments[a];u.push(i)}k(e+\"\\nArguments: \"+Array.prototype.slice.call(u).join(\"\")+\"\\n\"+(new Error).stack),s=!1}return t.apply(this,arguments)}),t)}var D,S={};function Y(e,t){null!=n.deprecationHandler&&n.deprecationHandler(e,t),S[e]||(k(t),S[e]=!0)}function O(e){return\"undefined\"!=typeof Function&&e instanceof Function||\"[object Function]\"===Object.prototype.toString.call(e)}function b(e,t){var n,s=h({},e);for(n in t)r(t,n)&&(i(e[n])&&i(t[n])?(s[n]={},h(s[n],e[n]),h(s[n],t[n])):null!=t[n]?s[n]=t[n]:delete s[n]);for(n in e)r(e,n)&&!r(t,n)&&i(e[n])&&(s[n]=h({},s[n]));return s}function T(e){null!=e&&this.set(e)}n.suppressDeprecationWarnings=!1,n.deprecationHandler=null,D=Object.keys?Object.keys:function(e){var t,n=[];for(t in e)r(e,t)&&n.push(t);return n};function x(e,t,n){var s=\"\"+Math.abs(e),i=t-s.length;return(e>=0?n?\"+\":\"\":\"-\")+Math.pow(10,Math.max(0,i)).toString().substr(1)+s}var N=/(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,W=/(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g,P={},R={};function C(e,t,n,s){var i=s;\"string\"==typeof s&&(i=function(){return this[s]()}),e&&(R[e]=i),t&&(R[t[0]]=function(){return x(i.apply(this,arguments),t[1],t[2])}),n&&(R[n]=function(){return this.localeData().ordinal(i.apply(this,arguments),e)})}function U(e,t){return e.isValid()?(t=H(t,e.localeData()),P[t]=P[t]||function(e){var t,n,s,i=e.match(N);for(t=0,n=i.length;t<n;t++)R[i[t]]?i[t]=R[i[t]]:i[t]=(s=i[t]).match(/\\[[\\s\\S]/)?s.replace(/^\\[|\\]$/g,\"\"):s.replace(/\\\\/g,\"\");return function(t){var s,r=\"\";for(s=0;s<n;s++)r+=O(i[s])?i[s].call(t,e):i[s];return r}}(t),P[t](e)):e.localeData().invalidDate()}function H(e,t){var n=5;function s(e){return t.longDateFormat(e)||e}for(W.lastIndex=0;n>=0&&W.test(e);)e=e.replace(W,s),W.lastIndex=0,n-=1;return e}var F={D:\"date\",dates:\"date\",date:\"date\",d:\"day\",days:\"day\",day:\"day\",e:\"weekday\",weekdays:\"weekday\",weekday:\"weekday\",E:\"isoWeekday\",isoweekdays:\"isoWeekday\",isoweekday:\"isoWeekday\",DDD:\"dayOfYear\",dayofyears:\"dayOfYear\",dayofyear:\"dayOfYear\",h:\"hour\",hours:\"hour\",hour:\"hour\",ms:\"millisecond\",milliseconds:\"millisecond\",millisecond:\"millisecond\",m:\"minute\",minutes:\"minute\",minute:\"minute\",M:\"month\",months:\"month\",month:\"month\",Q:\"quarter\",quarters:\"quarter\",quarter:\"quarter\",s:\"second\",seconds:\"second\",second:\"second\",gg:\"weekYear\",weekyears:\"weekYear\",weekyear:\"weekYear\",GG:\"isoWeekYear\",isoweekyears:\"isoWeekYear\",isoweekyear:\"isoWeekYear\",w:\"week\",weeks:\"week\",week:\"week\",W:\"isoWeek\",isoweeks:\"isoWeek\",isoweek:\"isoWeek\",y:\"year\",years:\"year\",year:\"year\"};function L(e){return\"string\"==typeof e?F[e]||F[e.toLowerCase()]:void 0}function V(e){var t,n,s={};for(n in e)r(e,n)&&(t=L(n))&&(s[t]=e[n]);return s}var G={date:9,day:11,weekday:11,isoWeekday:11,dayOfYear:4,hour:13,millisecond:16,minute:14,month:8,quarter:7,second:15,weekYear:1,isoWeekYear:1,week:5,isoWeek:5,year:1};var E,A=/\\d/,j=/\\d\\d/,I=/\\d{3}/,Z=/\\d{4}/,z=/[+-]?\\d{6}/,q=/\\d\\d?/,$=/\\d\\d\\d\\d?/,B=/\\d\\d\\d\\d\\d\\d?/,J=/\\d{1,3}/,Q=/\\d{1,4}/,X=/[+-]?\\d{1,6}/,K=/\\d+/,ee=/[+-]?\\d+/,te=/Z|[+-]\\d\\d:?\\d\\d/gi,ne=/Z|[+-]\\d\\d(?::?\\d\\d)?/gi,se=/[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i,ie=/^[1-9]\\d?/,re=/^([1-9]\\d|\\d)/;function ae(e,t,n){E[e]=O(t)?t:function(e,s){return e&&n?n:t}}function oe(e,t){return r(E,e)?E[e](t._strict,t._locale):new RegExp(ue(e.replace(\"\\\\\",\"\").replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g,(function(e,t,n,s,i){return t||n||s||i}))))}function ue(e){return e.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g,\"\\\\$&\")}function le(e){return e<0?Math.ceil(e)||0:Math.floor(e)}function de(e){var t=+e,n=0;return 0!==t&&isFinite(t)&&(n=le(t)),n}E={};var he={};function ce(e,t){var n,s,i=t;for(\"string\"==typeof e&&(e=[e]),u(t)&&(i=function(e,n){n[t]=de(e)}),s=e.length,n=0;n<s;n++)he[e[n]]=i}function fe(e,t){ce(e,(function(e,n,s,i){s._w=s._w||{},t(e,s._w,s,i)}))}function me(e,t,n){null!=t&&r(he,e)&&he[e](t,n._a,n,e)}function _e(e){return e%4==0&&e%100!=0||e%400==0}var ye=0,ge=1,we=2,pe=3,ve=4,ke=5,Me=6,De=7,Se=8;function Ye(e){return _e(e)?366:365}C(\"Y\",0,0,(function(){var e=this.year();return e<=9999?x(e,4):\"+\"+e})),C(0,[\"YY\",2],0,(function(){return this.year()%100})),C(0,[\"YYYY\",4],0,\"year\"),C(0,[\"YYYYY\",5],0,\"year\"),C(0,[\"YYYYYY\",6,!0],0,\"year\"),ae(\"Y\",ee),ae(\"YY\",q,j),ae(\"YYYY\",Q,Z),ae(\"YYYYY\",X,z),ae(\"YYYYYY\",X,z),ce([\"YYYYY\",\"YYYYYY\"],ye),ce(\"YYYY\",(function(e,t){t[ye]=2===e.length?n.parseTwoDigitYear(e):de(e)})),ce(\"YY\",(function(e,t){t[ye]=n.parseTwoDigitYear(e)})),ce(\"Y\",(function(e,t){t[ye]=parseInt(e,10)})),n.parseTwoDigitYear=function(e){return de(e)+(de(e)>68?1900:2e3)};var Oe,be=Te(\"FullYear\",!0);function Te(e,t){return function(s){return null!=s?(Ne(this,e,s),n.updateOffset(this,t),this):xe(this,e)}}function xe(e,t){if(!e.isValid())return NaN;var n=e._d,s=e._isUTC;switch(t){case\"Milliseconds\":return s?n.getUTCMilliseconds():n.getMilliseconds();case\"Seconds\":return s?n.getUTCSeconds():n.getSeconds();case\"Minutes\":return s?n.getUTCMinutes():n.getMinutes();case\"Hours\":return s?n.getUTCHours():n.getHours();case\"Date\":return s?n.getUTCDate():n.getDate();case\"Day\":return s?n.getUTCDay():n.getDay();case\"Month\":return s?n.getUTCMonth():n.getMonth();case\"FullYear\":return s?n.getUTCFullYear():n.getFullYear();default:return NaN}}function Ne(e,t,n){var s,i,r,a,o;if(e.isValid()&&!isNaN(n)){switch(s=e._d,i=e._isUTC,t){case\"Milliseconds\":return void(i?s.setUTCMilliseconds(n):s.setMilliseconds(n));case\"Seconds\":return void(i?s.setUTCSeconds(n):s.setSeconds(n));case\"Minutes\":return void(i?s.setUTCMinutes(n):s.setMinutes(n));case\"Hours\":return void(i?s.setUTCHours(n):s.setHours(n));case\"Date\":return void(i?s.setUTCDate(n):s.setDate(n));case\"FullYear\":break;default:return}r=n,a=e.month(),o=29!==(o=e.date())||1!==a||_e(r)?o:28,i?s.setUTCFullYear(r,a,o):s.setFullYear(r,a,o)}}function We(e,t){if(isNaN(e)||isNaN(t))return NaN;var n,s=(t%(n=12)+n)%n;return e+=(t-s)/12,1===s?_e(e)?29:28:31-s%7%2}Oe=Array.prototype.indexOf?Array.prototype.indexOf:function(e){var t;for(t=0;t<this.length;++t)if(this[t]===e)return t;return-1},C(\"M\",[\"MM\",2],\"Mo\",(function(){return this.month()+1})),C(\"MMM\",0,0,(function(e){return this.localeData().monthsShort(this,e)})),C(\"MMMM\",0,0,(function(e){return this.localeData().months(this,e)})),ae(\"M\",q,ie),ae(\"MM\",q,j),ae(\"MMM\",(function(e,t){return t.monthsShortRegex(e)})),ae(\"MMMM\",(function(e,t){return t.monthsRegex(e)})),ce([\"M\",\"MM\"],(function(e,t){t[ge]=de(e)-1})),ce([\"MMM\",\"MMMM\"],(function(e,t,n,s){var i=n._locale.monthsParse(e,s,n._strict);null!=i?t[ge]=i:f(n).invalidMonth=e}));var Pe=\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),Re=\"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec\".split(\"_\"),Ce=/D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/,Ue=se,He=se;function Fe(e,t,n){var s,i,r,a=e.toLocaleLowerCase();if(!this._monthsParse)for(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[],s=0;s<12;++s)r=c([2e3,s]),this._shortMonthsParse[s]=this.monthsShort(r,\"\").toLocaleLowerCase(),this._longMonthsParse[s]=this.months(r,\"\").toLocaleLowerCase();return n?\"MMM\"===t?-1!==(i=Oe.call(this._shortMonthsParse,a))?i:null:-1!==(i=Oe.call(this._longMonthsParse,a))?i:null:\"MMM\"===t?-1!==(i=Oe.call(this._shortMonthsParse,a))||-1!==(i=Oe.call(this._longMonthsParse,a))?i:null:-1!==(i=Oe.call(this._longMonthsParse,a))||-1!==(i=Oe.call(this._shortMonthsParse,a))?i:null}function Le(e,t){if(!e.isValid())return e;if(\"string\"==typeof t)if(/^\\d+$/.test(t))t=de(t);else if(!u(t=e.localeData().monthsParse(t)))return e;var n=t,s=e.date();return s=s<29?s:Math.min(s,We(e.year(),n)),e._isUTC?e._d.setUTCMonth(n,s):e._d.setMonth(n,s),e}function Ve(e){return null!=e?(Le(this,e),n.updateOffset(this,!0),this):xe(this,\"Month\")}function Ge(){function e(e,t){return t.length-e.length}var t,n,s,i,r=[],a=[],o=[];for(t=0;t<12;t++)n=c([2e3,t]),s=ue(this.monthsShort(n,\"\")),i=ue(this.months(n,\"\")),r.push(s),a.push(i),o.push(i),o.push(s);r.sort(e),a.sort(e),o.sort(e),this._monthsRegex=new RegExp(\"^(\"+o.join(\"|\")+\")\",\"i\"),this._monthsShortRegex=this._monthsRegex,this._monthsStrictRegex=new RegExp(\"^(\"+a.join(\"|\")+\")\",\"i\"),this._monthsShortStrictRegex=new RegExp(\"^(\"+r.join(\"|\")+\")\",\"i\")}function Ee(e,t,n,s,i,r,a){var o;return e<100&&e>=0?(o=new Date(e+400,t,n,s,i,r,a),isFinite(o.getFullYear())&&o.setFullYear(e)):o=new Date(e,t,n,s,i,r,a),o}function Ae(e){var t,n;return e<100&&e>=0?((n=Array.prototype.slice.call(arguments))[0]=e+400,t=new Date(Date.UTC.apply(null,n)),isFinite(t.getUTCFullYear())&&t.setUTCFullYear(e)):t=new Date(Date.UTC.apply(null,arguments)),t}function je(e,t,n){var s=7+t-n;return-((7+Ae(e,0,s).getUTCDay()-t)%7)+s-1}function Ie(e,t,n,s,i){var r,a,o=1+7*(t-1)+(7+n-s)%7+je(e,s,i);return o<=0?a=Ye(r=e-1)+o:o>Ye(e)?(r=e+1,a=o-Ye(e)):(r=e,a=o),{year:r,dayOfYear:a}}function Ze(e,t,n){var s,i,r=je(e.year(),t,n),a=Math.floor((e.dayOfYear()-r-1)/7)+1;return a<1?s=a+ze(i=e.year()-1,t,n):a>ze(e.year(),t,n)?(s=a-ze(e.year(),t,n),i=e.year()+1):(i=e.year(),s=a),{week:s,year:i}}function ze(e,t,n){var s=je(e,t,n),i=je(e+1,t,n);return(Ye(e)-s+i)/7}C(\"w\",[\"ww\",2],\"wo\",\"week\"),C(\"W\",[\"WW\",2],\"Wo\",\"isoWeek\"),ae(\"w\",q,ie),ae(\"ww\",q,j),ae(\"W\",q,ie),ae(\"WW\",q,j),fe([\"w\",\"ww\",\"W\",\"WW\"],(function(e,t,n,s){t[s.substr(0,1)]=de(e)}));function qe(e,t){return e.slice(t,7).concat(e.slice(0,t))}C(\"d\",0,\"do\",\"day\"),C(\"dd\",0,0,(function(e){return this.localeData().weekdaysMin(this,e)})),C(\"ddd\",0,0,(function(e){return this.localeData().weekdaysShort(this,e)})),C(\"dddd\",0,0,(function(e){return this.localeData().weekdays(this,e)})),C(\"e\",0,0,\"weekday\"),C(\"E\",0,0,\"isoWeekday\"),ae(\"d\",q),ae(\"e\",q),ae(\"E\",q),ae(\"dd\",(function(e,t){return t.weekdaysMinRegex(e)})),ae(\"ddd\",(function(e,t){return t.weekdaysShortRegex(e)})),ae(\"dddd\",(function(e,t){return t.weekdaysRegex(e)})),fe([\"dd\",\"ddd\",\"dddd\"],(function(e,t,n,s){var i=n._locale.weekdaysParse(e,s,n._strict);null!=i?t.d=i:f(n).invalidWeekday=e})),fe([\"d\",\"e\",\"E\"],(function(e,t,n,s){t[s]=de(e)}));var $e=\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),Be=\"Sun_Mon_Tue_Wed_Thu_Fri_Sat\".split(\"_\"),Je=\"Su_Mo_Tu_We_Th_Fr_Sa\".split(\"_\"),Qe=se,Xe=se,Ke=se;function et(e,t,n){var s,i,r,a=e.toLocaleLowerCase();if(!this._weekdaysParse)for(this._weekdaysParse=[],this._shortWeekdaysParse=[],this._minWeekdaysParse=[],s=0;s<7;++s)r=c([2e3,1]).day(s),this._minWeekdaysParse[s]=this.weekdaysMin(r,\"\").toLocaleLowerCase(),this._shortWeekdaysParse[s]=this.weekdaysShort(r,\"\").toLocaleLowerCase(),this._weekdaysParse[s]=this.weekdays(r,\"\").toLocaleLowerCase();return n?\"dddd\"===t?-1!==(i=Oe.call(this._weekdaysParse,a))?i:null:\"ddd\"===t?-1!==(i=Oe.call(this._shortWeekdaysParse,a))?i:null:-1!==(i=Oe.call(this._minWeekdaysParse,a))?i:null:\"dddd\"===t?-1!==(i=Oe.call(this._weekdaysParse,a))||-1!==(i=Oe.call(this._shortWeekdaysParse,a))||-1!==(i=Oe.call(this._minWeekdaysParse,a))?i:null:\"ddd\"===t?-1!==(i=Oe.call(this._shortWeekdaysParse,a))||-1!==(i=Oe.call(this._weekdaysParse,a))||-1!==(i=Oe.call(this._minWeekdaysParse,a))?i:null:-1!==(i=Oe.call(this._minWeekdaysParse,a))||-1!==(i=Oe.call(this._weekdaysParse,a))||-1!==(i=Oe.call(this._shortWeekdaysParse,a))?i:null}function tt(){function e(e,t){return t.length-e.length}var t,n,s,i,r,a=[],o=[],u=[],l=[];for(t=0;t<7;t++)n=c([2e3,1]).day(t),s=ue(this.weekdaysMin(n,\"\")),i=ue(this.weekdaysShort(n,\"\")),r=ue(this.weekdays(n,\"\")),a.push(s),o.push(i),u.push(r),l.push(s),l.push(i),l.push(r);a.sort(e),o.sort(e),u.sort(e),l.sort(e),this._weekdaysRegex=new RegExp(\"^(\"+l.join(\"|\")+\")\",\"i\"),this._weekdaysShortRegex=this._weekdaysRegex,this._weekdaysMinRegex=this._weekdaysRegex,this._weekdaysStrictRegex=new RegExp(\"^(\"+u.join(\"|\")+\")\",\"i\"),this._weekdaysShortStrictRegex=new RegExp(\"^(\"+o.join(\"|\")+\")\",\"i\"),this._weekdaysMinStrictRegex=new RegExp(\"^(\"+a.join(\"|\")+\")\",\"i\")}function nt(){return this.hours()%12||12}function st(e,t){C(e,0,0,(function(){return this.localeData().meridiem(this.hours(),this.minutes(),t)}))}function it(e,t){return t._meridiemParse}C(\"H\",[\"HH\",2],0,\"hour\"),C(\"h\",[\"hh\",2],0,nt),C(\"k\",[\"kk\",2],0,(function(){return this.hours()||24})),C(\"hmm\",0,0,(function(){return\"\"+nt.apply(this)+x(this.minutes(),2)})),C(\"hmmss\",0,0,(function(){return\"\"+nt.apply(this)+x(this.minutes(),2)+x(this.seconds(),2)})),C(\"Hmm\",0,0,(function(){return\"\"+this.hours()+x(this.minutes(),2)})),C(\"Hmmss\",0,0,(function(){return\"\"+this.hours()+x(this.minutes(),2)+x(this.seconds(),2)})),st(\"a\",!0),st(\"A\",!1),ae(\"a\",it),ae(\"A\",it),ae(\"H\",q,re),ae(\"h\",q,ie),ae(\"k\",q,ie),ae(\"HH\",q,j),ae(\"hh\",q,j),ae(\"kk\",q,j),ae(\"hmm\",$),ae(\"hmmss\",B),ae(\"Hmm\",$),ae(\"Hmmss\",B),ce([\"H\",\"HH\"],pe),ce([\"k\",\"kk\"],(function(e,t,n){var s=de(e);t[pe]=24===s?0:s})),ce([\"a\",\"A\"],(function(e,t,n){n._isPm=n._locale.isPM(e),n._meridiem=e})),ce([\"h\",\"hh\"],(function(e,t,n){t[pe]=de(e),f(n).bigHour=!0})),ce(\"hmm\",(function(e,t,n){var s=e.length-2;t[pe]=de(e.substr(0,s)),t[ve]=de(e.substr(s)),f(n).bigHour=!0})),ce(\"hmmss\",(function(e,t,n){var s=e.length-4,i=e.length-2;t[pe]=de(e.substr(0,s)),t[ve]=de(e.substr(s,2)),t[ke]=de(e.substr(i)),f(n).bigHour=!0})),ce(\"Hmm\",(function(e,t,n){var s=e.length-2;t[pe]=de(e.substr(0,s)),t[ve]=de(e.substr(s))})),ce(\"Hmmss\",(function(e,t,n){var s=e.length-4,i=e.length-2;t[pe]=de(e.substr(0,s)),t[ve]=de(e.substr(s,2)),t[ke]=de(e.substr(i))}));var rt=Te(\"Hours\",!0);var at,ot={calendar:{sameDay:\"[Today at] LT\",nextDay:\"[Tomorrow at] LT\",nextWeek:\"dddd [at] LT\",lastDay:\"[Yesterday at] LT\",lastWeek:\"[Last] dddd [at] LT\",sameElse:\"L\"},longDateFormat:{LTS:\"h:mm:ss A\",LT:\"h:mm A\",L:\"MM/DD/YYYY\",LL:\"MMMM D, YYYY\",LLL:\"MMMM D, YYYY h:mm A\",LLLL:\"dddd, MMMM D, YYYY h:mm A\"},invalidDate:\"Invalid date\",ordinal:\"%d\",dayOfMonthOrdinalParse:/\\d{1,2}/,relativeTime:{future:\"in %s\",past:\"%s ago\",s:\"a few seconds\",ss:\"%d seconds\",m:\"a minute\",mm:\"%d minutes\",h:\"an hour\",hh:\"%d hours\",d:\"a day\",dd:\"%d days\",w:\"a week\",ww:\"%d weeks\",M:\"a month\",MM:\"%d months\",y:\"a year\",yy:\"%d years\"},months:Pe,monthsShort:Re,week:{dow:0,doy:6},weekdays:$e,weekdaysMin:Je,weekdaysShort:Be,meridiemParse:/[ap]\\.?m?\\.?/i},ut={},lt={};function dt(e,t){var n,s=Math.min(e.length,t.length);for(n=0;n<s;n+=1)if(e[n]!==t[n])return n;return s}function ht(e){return e?e.toLowerCase().replace(\"_\",\"-\"):e}function ct(e){var t=null;if(void 0===ut[e]&&\"undefined\"!=typeof module&&module&&module.exports&&function(e){return!(!e||!e.match(\"^[^/\\\\\\\\]*$\"))}(e))try{t=at._abbr,require(\"./locale/\"+e),ft(t)}catch(t){ut[e]=null}return ut[e]}function ft(e,t){var n;return e&&((n=o(t)?_t(e):mt(e,t))?at=n:\"undefined\"!=typeof console&&console.warn&&console.warn(\"Locale \"+e+\" not found. Did you forget to load it?\")),at._abbr}function mt(e,t){if(null!==t){var n,s=ot;if(t.abbr=e,null!=ut[e])Y(\"defineLocaleOverride\",\"use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info.\"),s=ut[e]._config;else if(null!=t.parentLocale)if(null!=ut[t.parentLocale])s=ut[t.parentLocale]._config;else{if(null==(n=ct(t.parentLocale)))return lt[t.parentLocale]||(lt[t.parentLocale]=[]),lt[t.parentLocale].push({name:e,config:t}),null;s=n._config}return ut[e]=new T(b(s,t)),lt[e]&&lt[e].forEach((function(e){mt(e.name,e.config)})),ft(e),ut[e]}return delete ut[e],null}function _t(e){var t;if(e&&e._locale&&e._locale._abbr&&(e=e._locale._abbr),!e)return at;if(!s(e)){if(t=ct(e))return t;e=[e]}return function(e){for(var t,n,s,i,r=0;r<e.length;){for(t=(i=ht(e[r]).split(\"-\")).length,n=(n=ht(e[r+1]))?n.split(\"-\"):null;t>0;){if(s=ct(i.slice(0,t).join(\"-\")))return s;if(n&&n.length>=t&&dt(i,n)>=t-1)break;t--}r++}return at}(e)}function yt(e){var t,n=e._a;return n&&-2===f(e).overflow&&(t=n[ge]<0||n[ge]>11?ge:n[we]<1||n[we]>We(n[ye],n[ge])?we:n[pe]<0||n[pe]>24||24===n[pe]&&(0!==n[ve]||0!==n[ke]||0!==n[Me])?pe:n[ve]<0||n[ve]>59?ve:n[ke]<0||n[ke]>59?ke:n[Me]<0||n[Me]>999?Me:-1,f(e)._overflowDayOfYear&&(t<ye||t>we)&&(t=we),f(e)._overflowWeeks&&-1===t&&(t=De),f(e)._overflowWeekday&&-1===t&&(t=Se),f(e).overflow=t),e}var gt=/^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,wt=/^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d|))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,pt=/Z|[+-]\\d\\d(?::?\\d\\d)?/,vt=[[\"YYYYYY-MM-DD\",/[+-]\\d{6}-\\d\\d-\\d\\d/],[\"YYYY-MM-DD\",/\\d{4}-\\d\\d-\\d\\d/],[\"GGGG-[W]WW-E\",/\\d{4}-W\\d\\d-\\d/],[\"GGGG-[W]WW\",/\\d{4}-W\\d\\d/,!1],[\"YYYY-DDD\",/\\d{4}-\\d{3}/],[\"YYYY-MM\",/\\d{4}-\\d\\d/,!1],[\"YYYYYYMMDD\",/[+-]\\d{10}/],[\"YYYYMMDD\",/\\d{8}/],[\"GGGG[W]WWE\",/\\d{4}W\\d{3}/],[\"GGGG[W]WW\",/\\d{4}W\\d{2}/,!1],[\"YYYYDDD\",/\\d{7}/],[\"YYYYMM\",/\\d{6}/,!1],[\"YYYY\",/\\d{4}/,!1]],kt=[[\"HH:mm:ss.SSSS\",/\\d\\d:\\d\\d:\\d\\d\\.\\d+/],[\"HH:mm:ss,SSSS\",/\\d\\d:\\d\\d:\\d\\d,\\d+/],[\"HH:mm:ss\",/\\d\\d:\\d\\d:\\d\\d/],[\"HH:mm\",/\\d\\d:\\d\\d/],[\"HHmmss.SSSS\",/\\d\\d\\d\\d\\d\\d\\.\\d+/],[\"HHmmss,SSSS\",/\\d\\d\\d\\d\\d\\d,\\d+/],[\"HHmmss\",/\\d\\d\\d\\d\\d\\d/],[\"HHmm\",/\\d\\d\\d\\d/],[\"HH\",/\\d\\d/]],Mt=/^\\/?Date\\((-?\\d+)/i,Dt=/^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/,St={UT:0,GMT:0,EDT:-240,EST:-300,CDT:-300,CST:-360,MDT:-360,MST:-420,PDT:-420,PST:-480};function Yt(e){var t,n,s,i,r,a,o=e._i,u=gt.exec(o)||wt.exec(o),l=vt.length,d=kt.length;if(u){for(f(e).iso=!0,t=0,n=l;t<n;t++)if(vt[t][1].exec(u[1])){i=vt[t][0],s=!1!==vt[t][2];break}if(null==i)return void(e._isValid=!1);if(u[3]){for(t=0,n=d;t<n;t++)if(kt[t][1].exec(u[3])){r=(u[2]||\" \")+kt[t][0];break}if(null==r)return void(e._isValid=!1)}if(!s&&null!=r)return void(e._isValid=!1);if(u[4]){if(!pt.exec(u[4]))return void(e._isValid=!1);a=\"Z\"}e._f=i+(r||\"\")+(a||\"\"),Nt(e)}else e._isValid=!1}function Ot(e){var t=parseInt(e,10);return t<=49?2e3+t:t<=999?1900+t:t}function bt(e){var t,n,s,i,r,a,o,u,l=Dt.exec(e._i.replace(/\\([^()]*\\)|[\\n\\t]/g,\" \").replace(/(\\s\\s+)/g,\" \").replace(/^\\s\\s*/,\"\").replace(/\\s\\s*$/,\"\"));if(l){if(n=l[4],s=l[3],i=l[2],r=l[5],a=l[6],o=l[7],u=[Ot(n),Re.indexOf(s),parseInt(i,10),parseInt(r,10),parseInt(a,10)],o&&u.push(parseInt(o,10)),t=u,!function(e,t,n){return!e||Be.indexOf(e)===new Date(t[0],t[1],t[2]).getDay()||(f(n).weekdayMismatch=!0,n._isValid=!1,!1)}(l[1],t,e))return;e._a=t,e._tzm=function(e,t,n){if(e)return St[e];if(t)return 0;var s=parseInt(n,10),i=s%100;return(s-i)/100*60+i}(l[8],l[9],l[10]),e._d=Ae.apply(null,e._a),e._d.setUTCMinutes(e._d.getUTCMinutes()-e._tzm),f(e).rfc2822=!0}else e._isValid=!1}function Tt(e,t,n){return null!=e?e:null!=t?t:n}function xt(e){var t,s,i,r,a,o=[];if(!e._d){for(i=function(e){var t=new Date(n.now());return e._useUTC?[t.getUTCFullYear(),t.getUTCMonth(),t.getUTCDate()]:[t.getFullYear(),t.getMonth(),t.getDate()]}(e),e._w&&null==e._a[we]&&null==e._a[ge]&&function(e){var t,n,s,i,r,a,o,u,l;t=e._w,null!=t.GG||null!=t.W||null!=t.E?(r=1,a=4,n=Tt(t.GG,e._a[ye],Ze(Rt(),1,4).year),s=Tt(t.W,1),((i=Tt(t.E,1))<1||i>7)&&(u=!0)):(r=e._locale._week.dow,a=e._locale._week.doy,l=Ze(Rt(),r,a),n=Tt(t.gg,e._a[ye],l.year),s=Tt(t.w,l.week),null!=t.d?((i=t.d)<0||i>6)&&(u=!0):null!=t.e?(i=t.e+r,(t.e<0||t.e>6)&&(u=!0)):i=r);s<1||s>ze(n,r,a)?f(e)._overflowWeeks=!0:null!=u?f(e)._overflowWeekday=!0:(o=Ie(n,s,i,r,a),e._a[ye]=o.year,e._dayOfYear=o.dayOfYear)}(e),null!=e._dayOfYear&&(a=Tt(e._a[ye],i[ye]),(e._dayOfYear>Ye(a)||0===e._dayOfYear)&&(f(e)._overflowDayOfYear=!0),s=Ae(a,0,e._dayOfYear),e._a[ge]=s.getUTCMonth(),e._a[we]=s.getUTCDate()),t=0;t<3&&null==e._a[t];++t)e._a[t]=o[t]=i[t];for(;t<7;t++)e._a[t]=o[t]=null==e._a[t]?2===t?1:0:e._a[t];24===e._a[pe]&&0===e._a[ve]&&0===e._a[ke]&&0===e._a[Me]&&(e._nextDay=!0,e._a[pe]=0),e._d=(e._useUTC?Ae:Ee).apply(null,o),r=e._useUTC?e._d.getUTCDay():e._d.getDay(),null!=e._tzm&&e._d.setUTCMinutes(e._d.getUTCMinutes()-e._tzm),e._nextDay&&(e._a[pe]=24),e._w&&void 0!==e._w.d&&e._w.d!==r&&(f(e).weekdayMismatch=!0)}}function Nt(e){if(e._f!==n.ISO_8601)if(e._f!==n.RFC_2822){e._a=[],f(e).empty=!0;var t,s,i,r,a,o,u,l=\"\"+e._i,d=l.length,h=0;for(u=(i=H(e._f,e._locale).match(N)||[]).length,t=0;t<u;t++)r=i[t],(s=(l.match(oe(r,e))||[])[0])&&((a=l.substr(0,l.indexOf(s))).length>0&&f(e).unusedInput.push(a),l=l.slice(l.indexOf(s)+s.length),h+=s.length),R[r]?(s?f(e).empty=!1:f(e).unusedTokens.push(r),me(r,s,e)):e._strict&&!s&&f(e).unusedTokens.push(r);f(e).charsLeftOver=d-h,l.length>0&&f(e).unusedInput.push(l),e._a[pe]<=12&&!0===f(e).bigHour&&e._a[pe]>0&&(f(e).bigHour=void 0),f(e).parsedDateParts=e._a.slice(0),f(e).meridiem=e._meridiem,e._a[pe]=function(e,t,n){var s;if(null==n)return t;return null!=e.meridiemHour?e.meridiemHour(t,n):null!=e.isPM?((s=e.isPM(n))&&t<12&&(t+=12),s||12!==t||(t=0),t):t}(e._locale,e._a[pe],e._meridiem),null!==(o=f(e).era)&&(e._a[ye]=e._locale.erasConvertYear(o,e._a[ye])),xt(e),yt(e)}else bt(e);else Yt(e)}function Wt(e){var t=e._i,r=e._f;return e._locale=e._locale||_t(e._l),null===t||void 0===r&&\"\"===t?_({nullInput:!0}):(\"string\"==typeof t&&(e._i=t=e._locale.preparse(t)),v(t)?new p(yt(t)):(l(t)?e._d=t:s(r)?function(e){var t,n,s,i,r,a,o=!1,u=e._f.length;if(0===u)return f(e).invalidFormat=!0,void(e._d=new Date(NaN));for(i=0;i<u;i++)r=0,a=!1,t=w({},e),null!=e._useUTC&&(t._useUTC=e._useUTC),t._f=e._f[i],Nt(t),m(t)&&(a=!0),r+=f(t).charsLeftOver,r+=10*f(t).unusedTokens.length,f(t).score=r,o?r<s&&(s=r,n=t):(null==s||r<s||a)&&(s=r,n=t,a&&(o=!0));h(e,n||t)}(e):r?Nt(e):function(e){var t=e._i;o(t)?e._d=new Date(n.now()):l(t)?e._d=new Date(t.valueOf()):\"string\"==typeof t?function(e){var t=Mt.exec(e._i);null===t?(Yt(e),!1===e._isValid&&(delete e._isValid,bt(e),!1===e._isValid&&(delete e._isValid,e._strict?e._isValid=!1:n.createFromInputFallback(e)))):e._d=new Date(+t[1])}(e):s(t)?(e._a=d(t.slice(0),(function(e){return parseInt(e,10)})),xt(e)):i(t)?function(e){if(!e._d){var t=V(e._i),n=void 0===t.day?t.date:t.day;e._a=d([t.year,t.month,n,t.hour,t.minute,t.second,t.millisecond],(function(e){return e&&parseInt(e,10)})),xt(e)}}(e):u(t)?e._d=new Date(t):n.createFromInputFallback(e)}(e),m(e)||(e._d=null),e))}function Pt(e,t,n,r,o){var u,l={};return!0!==t&&!1!==t||(r=t,t=void 0),!0!==n&&!1!==n||(r=n,n=void 0),(i(e)&&a(e)||s(e)&&0===e.length)&&(e=void 0),l._isAMomentObject=!0,l._useUTC=l._isUTC=o,l._l=n,l._i=e,l._f=t,l._strict=r,(u=new p(yt(Wt(l))))._nextDay&&(u.add(1,\"d\"),u._nextDay=void 0),u}function Rt(e,t,n,s){return Pt(e,t,n,s,!1)}n.createFromInputFallback=M(\"value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.\",(function(e){e._d=new Date(e._i+(e._useUTC?\" UTC\":\"\"))})),n.ISO_8601=function(){},n.RFC_2822=function(){};var Ct=M(\"moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/\",(function(){var e=Rt.apply(null,arguments);return this.isValid()&&e.isValid()?e<this?this:e:_()})),Ut=M(\"moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/\",(function(){var e=Rt.apply(null,arguments);return this.isValid()&&e.isValid()?e>this?this:e:_()}));function Ht(e,t){var n,i;if(1===t.length&&s(t[0])&&(t=t[0]),!t.length)return Rt();for(n=t[0],i=1;i<t.length;++i)t[i].isValid()&&!t[i][e](n)||(n=t[i]);return n}var Ft=[\"year\",\"quarter\",\"month\",\"week\",\"day\",\"hour\",\"minute\",\"second\",\"millisecond\"];function Lt(e){var t=V(e),n=t.year||0,s=t.quarter||0,i=t.month||0,a=t.week||t.isoWeek||0,o=t.day||0,u=t.hour||0,l=t.minute||0,d=t.second||0,h=t.millisecond||0;this._isValid=function(e){var t,n,s=!1,i=Ft.length;for(t in e)if(r(e,t)&&(-1===Oe.call(Ft,t)||null!=e[t]&&isNaN(e[t])))return!1;for(n=0;n<i;++n)if(e[Ft[n]]){if(s)return!1;parseFloat(e[Ft[n]])!==de(e[Ft[n]])&&(s=!0)}return!0}(t),this._milliseconds=+h+1e3*d+6e4*l+1e3*u*60*60,this._days=+o+7*a,this._months=+i+3*s+12*n,this._data={},this._locale=_t(),this._bubble()}function Vt(e){return e instanceof Lt}function Gt(e){return e<0?-1*Math.round(-1*e):Math.round(e)}function Et(e,t){C(e,0,0,(function(){var e=this.utcOffset(),n=\"+\";return e<0&&(e=-e,n=\"-\"),n+x(~~(e/60),2)+t+x(~~e%60,2)}))}Et(\"Z\",\":\"),Et(\"ZZ\",\"\"),ae(\"Z\",ne),ae(\"ZZ\",ne),ce([\"Z\",\"ZZ\"],(function(e,t,n){n._useUTC=!0,n._tzm=jt(ne,e)}));var At=/([\\+\\-]|\\d\\d)/gi;function jt(e,t){var n,s,i=(t||\"\").match(e);return null===i?null:0===(s=60*(n=((i[i.length-1]||[])+\"\").match(At)||[\"-\",0,0])[1]+de(n[2]))?0:\"+\"===n[0]?s:-s}function It(e,t){var s,i;return t._isUTC?(s=t.clone(),i=(v(e)||l(e)?e.valueOf():Rt(e).valueOf())-s.valueOf(),s._d.setTime(s._d.valueOf()+i),n.updateOffset(s,!1),s):Rt(e).local()}function Zt(e){return-Math.round(e._d.getTimezoneOffset())}function zt(){return!!this.isValid()&&(this._isUTC&&0===this._offset)}n.updateOffset=function(){};var qt=/^(-|\\+)?(?:(\\d*)[. ])?(\\d+):(\\d+)(?::(\\d+)(\\.\\d*)?)?$/,$t=/^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;function Bt(e,t){var n,s,i,a=e,o=null;return Vt(e)?a={ms:e._milliseconds,d:e._days,M:e._months}:u(e)||!isNaN(+e)?(a={},t?a[t]=+e:a.milliseconds=+e):(o=qt.exec(e))?(n=\"-\"===o[1]?-1:1,a={y:0,d:de(o[we])*n,h:de(o[pe])*n,m:de(o[ve])*n,s:de(o[ke])*n,ms:de(Gt(1e3*o[Me]))*n}):(o=$t.exec(e))?(n=\"-\"===o[1]?-1:1,a={y:Jt(o[2],n),M:Jt(o[3],n),w:Jt(o[4],n),d:Jt(o[5],n),h:Jt(o[6],n),m:Jt(o[7],n),s:Jt(o[8],n)}):null==a?a={}:\"object\"==typeof a&&(\"from\"in a||\"to\"in a)&&(i=function(e,t){var n;if(!e.isValid()||!t.isValid())return{milliseconds:0,months:0};t=It(t,e),e.isBefore(t)?n=Qt(e,t):((n=Qt(t,e)).milliseconds=-n.milliseconds,n.months=-n.months);return n}(Rt(a.from),Rt(a.to)),(a={}).ms=i.milliseconds,a.M=i.months),s=new Lt(a),Vt(e)&&r(e,\"_locale\")&&(s._locale=e._locale),Vt(e)&&r(e,\"_isValid\")&&(s._isValid=e._isValid),s}function Jt(e,t){var n=e&&parseFloat(e.replace(\",\",\".\"));return(isNaN(n)?0:n)*t}function Qt(e,t){var n={};return n.months=t.month()-e.month()+12*(t.year()-e.year()),e.clone().add(n.months,\"M\").isAfter(t)&&--n.months,n.milliseconds=+t-+e.clone().add(n.months,\"M\"),n}function Xt(e,t){return function(n,s){var i;return null===s||isNaN(+s)||(Y(t,\"moment().\"+t+\"(period, number) is deprecated. Please use moment().\"+t+\"(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.\"),i=n,n=s,s=i),Kt(this,Bt(n,s),e),this}}function Kt(e,t,s,i){var r=t._milliseconds,a=Gt(t._days),o=Gt(t._months);e.isValid()&&(i=null==i||i,o&&Le(e,xe(e,\"Month\")+o*s),a&&Ne(e,\"Date\",xe(e,\"Date\")+a*s),r&&e._d.setTime(e._d.valueOf()+r*s),i&&n.updateOffset(e,a||o))}Bt.fn=Lt.prototype,Bt.invalid=function(){return Bt(NaN)};var en=Xt(1,\"add\"),tn=Xt(-1,\"subtract\");function nn(e){return\"string\"==typeof e||e instanceof String}function sn(e){return v(e)||l(e)||nn(e)||u(e)||function(e){var t=s(e),n=!1;t&&(n=0===e.filter((function(t){return!u(t)&&nn(e)})).length);return t&&n}(e)||function(e){var t,n,s=i(e)&&!a(e),o=!1,u=[\"years\",\"year\",\"y\",\"months\",\"month\",\"M\",\"days\",\"day\",\"d\",\"dates\",\"date\",\"D\",\"hours\",\"hour\",\"h\",\"minutes\",\"minute\",\"m\",\"seconds\",\"second\",\"s\",\"milliseconds\",\"millisecond\",\"ms\"],l=u.length;for(t=0;t<l;t+=1)n=u[t],o=o||r(e,n);return s&&o}(e)||null==e}function rn(e,t){if(e.date()<t.date())return-rn(t,e);var n=12*(t.year()-e.year())+(t.month()-e.month()),s=e.clone().add(n,\"months\");return-(n+(t-s<0?(t-s)/(s-e.clone().add(n-1,\"months\")):(t-s)/(e.clone().add(n+1,\"months\")-s)))||0}function an(e){var t;return void 0===e?this._locale._abbr:(null!=(t=_t(e))&&(this._locale=t),this)}n.defaultFormat=\"YYYY-MM-DDTHH:mm:ssZ\",n.defaultFormatUtc=\"YYYY-MM-DDTHH:mm:ss[Z]\";var on=M(\"moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.\",(function(e){return void 0===e?this.localeData():this.locale(e)}));function un(){return this._locale}var ln=1e3,dn=6e4,hn=36e5,cn=126227808e5;function fn(e,t){return(e%t+t)%t}function mn(e,t,n){return e<100&&e>=0?new Date(e+400,t,n)-cn:new Date(e,t,n).valueOf()}function _n(e,t,n){return e<100&&e>=0?Date.UTC(e+400,t,n)-cn:Date.UTC(e,t,n)}function yn(e,t){return t.erasAbbrRegex(e)}function gn(){var e,t,n,s,i,r=[],a=[],o=[],u=[],l=this.eras();for(e=0,t=l.length;e<t;++e)n=ue(l[e].name),s=ue(l[e].abbr),i=ue(l[e].narrow),a.push(n),r.push(s),o.push(i),u.push(n),u.push(s),u.push(i);this._erasRegex=new RegExp(\"^(\"+u.join(\"|\")+\")\",\"i\"),this._erasNameRegex=new RegExp(\"^(\"+a.join(\"|\")+\")\",\"i\"),this._erasAbbrRegex=new RegExp(\"^(\"+r.join(\"|\")+\")\",\"i\"),this._erasNarrowRegex=new RegExp(\"^(\"+o.join(\"|\")+\")\",\"i\")}function wn(e,t){C(0,[e,e.length],0,t)}function pn(e,t,n,s,i){var r;return null==e?Ze(this,s,i).year:(t>(r=ze(e,s,i))&&(t=r),vn.call(this,e,t,n,s,i))}function vn(e,t,n,s,i){var r=Ie(e,t,n,s,i),a=Ae(r.year,0,r.dayOfYear);return this.year(a.getUTCFullYear()),this.month(a.getUTCMonth()),this.date(a.getUTCDate()),this}C(\"N\",0,0,\"eraAbbr\"),C(\"NN\",0,0,\"eraAbbr\"),C(\"NNN\",0,0,\"eraAbbr\"),C(\"NNNN\",0,0,\"eraName\"),C(\"NNNNN\",0,0,\"eraNarrow\"),C(\"y\",[\"y\",1],\"yo\",\"eraYear\"),C(\"y\",[\"yy\",2],0,\"eraYear\"),C(\"y\",[\"yyy\",3],0,\"eraYear\"),C(\"y\",[\"yyyy\",4],0,\"eraYear\"),ae(\"N\",yn),ae(\"NN\",yn),ae(\"NNN\",yn),ae(\"NNNN\",(function(e,t){return t.erasNameRegex(e)})),ae(\"NNNNN\",(function(e,t){return t.erasNarrowRegex(e)})),ce([\"N\",\"NN\",\"NNN\",\"NNNN\",\"NNNNN\"],(function(e,t,n,s){var i=n._locale.erasParse(e,s,n._strict);i?f(n).era=i:f(n).invalidEra=e})),ae(\"y\",K),ae(\"yy\",K),ae(\"yyy\",K),ae(\"yyyy\",K),ae(\"yo\",(function(e,t){return t._eraYearOrdinalRegex||K})),ce([\"y\",\"yy\",\"yyy\",\"yyyy\"],ye),ce([\"yo\"],(function(e,t,n,s){var i;n._locale._eraYearOrdinalRegex&&(i=e.match(n._locale._eraYearOrdinalRegex)),n._locale.eraYearOrdinalParse?t[ye]=n._locale.eraYearOrdinalParse(e,i):t[ye]=parseInt(e,10)})),C(0,[\"gg\",2],0,(function(){return this.weekYear()%100})),C(0,[\"GG\",2],0,(function(){return this.isoWeekYear()%100})),wn(\"gggg\",\"weekYear\"),wn(\"ggggg\",\"weekYear\"),wn(\"GGGG\",\"isoWeekYear\"),wn(\"GGGGG\",\"isoWeekYear\"),ae(\"G\",ee),ae(\"g\",ee),ae(\"GG\",q,j),ae(\"gg\",q,j),ae(\"GGGG\",Q,Z),ae(\"gggg\",Q,Z),ae(\"GGGGG\",X,z),ae(\"ggggg\",X,z),fe([\"gggg\",\"ggggg\",\"GGGG\",\"GGGGG\"],(function(e,t,n,s){t[s.substr(0,2)]=de(e)})),fe([\"gg\",\"GG\"],(function(e,t,s,i){t[i]=n.parseTwoDigitYear(e)})),C(\"Q\",0,\"Qo\",\"quarter\"),ae(\"Q\",A),ce(\"Q\",(function(e,t){t[ge]=3*(de(e)-1)})),C(\"D\",[\"DD\",2],\"Do\",\"date\"),ae(\"D\",q,ie),ae(\"DD\",q,j),ae(\"Do\",(function(e,t){return e?t._dayOfMonthOrdinalParse||t._ordinalParse:t._dayOfMonthOrdinalParseLenient})),ce([\"D\",\"DD\"],we),ce(\"Do\",(function(e,t){t[we]=de(e.match(q)[0])}));var kn=Te(\"Date\",!0);C(\"DDD\",[\"DDDD\",3],\"DDDo\",\"dayOfYear\"),ae(\"DDD\",J),ae(\"DDDD\",I),ce([\"DDD\",\"DDDD\"],(function(e,t,n){n._dayOfYear=de(e)})),C(\"m\",[\"mm\",2],0,\"minute\"),ae(\"m\",q,re),ae(\"mm\",q,j),ce([\"m\",\"mm\"],ve);var Mn=Te(\"Minutes\",!1);C(\"s\",[\"ss\",2],0,\"second\"),ae(\"s\",q,re),ae(\"ss\",q,j),ce([\"s\",\"ss\"],ke);var Dn,Sn,Yn=Te(\"Seconds\",!1);for(C(\"S\",0,0,(function(){return~~(this.millisecond()/100)})),C(0,[\"SS\",2],0,(function(){return~~(this.millisecond()/10)})),C(0,[\"SSS\",3],0,\"millisecond\"),C(0,[\"SSSS\",4],0,(function(){return 10*this.millisecond()})),C(0,[\"SSSSS\",5],0,(function(){return 100*this.millisecond()})),C(0,[\"SSSSSS\",6],0,(function(){return 1e3*this.millisecond()})),C(0,[\"SSSSSSS\",7],0,(function(){return 1e4*this.millisecond()})),C(0,[\"SSSSSSSS\",8],0,(function(){return 1e5*this.millisecond()})),C(0,[\"SSSSSSSSS\",9],0,(function(){return 1e6*this.millisecond()})),ae(\"S\",J,A),ae(\"SS\",J,j),ae(\"SSS\",J,I),Dn=\"SSSS\";Dn.length<=9;Dn+=\"S\")ae(Dn,K);function On(e,t){t[Me]=de(1e3*(\"0.\"+e))}for(Dn=\"S\";Dn.length<=9;Dn+=\"S\")ce(Dn,On);Sn=Te(\"Milliseconds\",!1),C(\"z\",0,0,\"zoneAbbr\"),C(\"zz\",0,0,\"zoneName\");var bn=p.prototype;function Tn(e){return e}bn.add=en,bn.calendar=function(e,t){1===arguments.length&&(arguments[0]?sn(arguments[0])?(e=arguments[0],t=void 0):function(e){var t,n=i(e)&&!a(e),s=!1,o=[\"sameDay\",\"nextDay\",\"lastDay\",\"nextWeek\",\"lastWeek\",\"sameElse\"];for(t=0;t<o.length;t+=1)s=s||r(e,o[t]);return n&&s}(arguments[0])&&(t=arguments[0],e=void 0):(e=void 0,t=void 0));var s=e||Rt(),o=It(s,this).startOf(\"day\"),u=n.calendarFormat(this,o)||\"sameElse\",l=t&&(O(t[u])?t[u].call(this,s):t[u]);return this.format(l||this.localeData().calendar(u,this,Rt(s)))},bn.clone=function(){return new p(this)},bn.diff=function(e,t,n){var s,i,r;if(!this.isValid())return NaN;if(!(s=It(e,this)).isValid())return NaN;switch(i=6e4*(s.utcOffset()-this.utcOffset()),t=L(t)){case\"year\":r=rn(this,s)/12;break;case\"month\":r=rn(this,s);break;case\"quarter\":r=rn(this,s)/3;break;case\"second\":r=(this-s)/1e3;break;case\"minute\":r=(this-s)/6e4;break;case\"hour\":r=(this-s)/36e5;break;case\"day\":r=(this-s-i)/864e5;break;case\"week\":r=(this-s-i)/6048e5;break;default:r=this-s}return n?r:le(r)},bn.endOf=function(e){var t,s;if(void 0===(e=L(e))||\"millisecond\"===e||!this.isValid())return this;switch(s=this._isUTC?_n:mn,e){case\"year\":t=s(this.year()+1,0,1)-1;break;case\"quarter\":t=s(this.year(),this.month()-this.month()%3+3,1)-1;break;case\"month\":t=s(this.year(),this.month()+1,1)-1;break;case\"week\":t=s(this.year(),this.month(),this.date()-this.weekday()+7)-1;break;case\"isoWeek\":t=s(this.year(),this.month(),this.date()-(this.isoWeekday()-1)+7)-1;break;case\"day\":case\"date\":t=s(this.year(),this.month(),this.date()+1)-1;break;case\"hour\":t=this._d.valueOf(),t+=hn-fn(t+(this._isUTC?0:this.utcOffset()*dn),hn)-1;break;case\"minute\":t=this._d.valueOf(),t+=dn-fn(t,dn)-1;break;case\"second\":t=this._d.valueOf(),t+=ln-fn(t,ln)-1}return this._d.setTime(t),n.updateOffset(this,!0),this},bn.format=function(e){e||(e=this.isUtc()?n.defaultFormatUtc:n.defaultFormat);var t=U(this,e);return this.localeData().postformat(t)},bn.from=function(e,t){return this.isValid()&&(v(e)&&e.isValid()||Rt(e).isValid())?Bt({to:this,from:e}).locale(this.locale()).humanize(!t):this.localeData().invalidDate()},bn.fromNow=function(e){return this.from(Rt(),e)},bn.to=function(e,t){return this.isValid()&&(v(e)&&e.isValid()||Rt(e).isValid())?Bt({from:this,to:e}).locale(this.locale()).humanize(!t):this.localeData().invalidDate()},bn.toNow=function(e){return this.to(Rt(),e)},bn.get=function(e){return O(this[e=L(e)])?this[e]():this},bn.invalidAt=function(){return f(this).overflow},bn.isAfter=function(e,t){var n=v(e)?e:Rt(e);return!(!this.isValid()||!n.isValid())&&(\"millisecond\"===(t=L(t)||\"millisecond\")?this.valueOf()>n.valueOf():n.valueOf()<this.clone().startOf(t).valueOf())},bn.isBefore=function(e,t){var n=v(e)?e:Rt(e);return!(!this.isValid()||!n.isValid())&&(\"millisecond\"===(t=L(t)||\"millisecond\")?this.valueOf()<n.valueOf():this.clone().endOf(t).valueOf()<n.valueOf())},bn.isBetween=function(e,t,n,s){var i=v(e)?e:Rt(e),r=v(t)?t:Rt(t);return!!(this.isValid()&&i.isValid()&&r.isValid())&&((\"(\"===(s=s||\"()\")[0]?this.isAfter(i,n):!this.isBefore(i,n))&&(\")\"===s[1]?this.isBefore(r,n):!this.isAfter(r,n)))},bn.isSame=function(e,t){var n,s=v(e)?e:Rt(e);return!(!this.isValid()||!s.isValid())&&(\"millisecond\"===(t=L(t)||\"millisecond\")?this.valueOf()===s.valueOf():(n=s.valueOf(),this.clone().startOf(t).valueOf()<=n&&n<=this.clone().endOf(t).valueOf()))},bn.isSameOrAfter=function(e,t){return this.isSame(e,t)||this.isAfter(e,t)},bn.isSameOrBefore=function(e,t){return this.isSame(e,t)||this.isBefore(e,t)},bn.isValid=function(){return m(this)},bn.lang=on,bn.locale=an,bn.localeData=un,bn.max=Ut,bn.min=Ct,bn.parsingFlags=function(){return h({},f(this))},bn.set=function(e,t){if(\"object\"==typeof e){var n,s=function(e){var t,n=[];for(t in e)r(e,t)&&n.push({unit:t,priority:G[t]});return n.sort((function(e,t){return e.priority-t.priority})),n}(e=V(e)),i=s.length;for(n=0;n<i;n++)this[s[n].unit](e[s[n].unit])}else if(O(this[e=L(e)]))return this[e](t);return this},bn.startOf=function(e){var t,s;if(void 0===(e=L(e))||\"millisecond\"===e||!this.isValid())return this;switch(s=this._isUTC?_n:mn,e){case\"year\":t=s(this.year(),0,1);break;case\"quarter\":t=s(this.year(),this.month()-this.month()%3,1);break;case\"month\":t=s(this.year(),this.month(),1);break;case\"week\":t=s(this.year(),this.month(),this.date()-this.weekday());break;case\"isoWeek\":t=s(this.year(),this.month(),this.date()-(this.isoWeekday()-1));break;case\"day\":case\"date\":t=s(this.year(),this.month(),this.date());break;case\"hour\":t=this._d.valueOf(),t-=fn(t+(this._isUTC?0:this.utcOffset()*dn),hn);break;case\"minute\":t=this._d.valueOf(),t-=fn(t,dn);break;case\"second\":t=this._d.valueOf(),t-=fn(t,ln)}return this._d.setTime(t),n.updateOffset(this,!0),this},bn.subtract=tn,bn.toArray=function(){var e=this;return[e.year(),e.month(),e.date(),e.hour(),e.minute(),e.second(),e.millisecond()]},bn.toObject=function(){var e=this;return{years:e.year(),months:e.month(),date:e.date(),hours:e.hours(),minutes:e.minutes(),seconds:e.seconds(),milliseconds:e.milliseconds()}},bn.toDate=function(){return new Date(this.valueOf())},bn.toISOString=function(e){if(!this.isValid())return null;var t=!0!==e,n=t?this.clone().utc():this;return n.year()<0||n.year()>9999?U(n,t?\"YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]\":\"YYYYYY-MM-DD[T]HH:mm:ss.SSSZ\"):O(Date.prototype.toISOString)?t?this.toDate().toISOString():new Date(this.valueOf()+60*this.utcOffset()*1e3).toISOString().replace(\"Z\",U(n,\"Z\")):U(n,t?\"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]\":\"YYYY-MM-DD[T]HH:mm:ss.SSSZ\")},bn.inspect=function(){if(!this.isValid())return\"moment.invalid(/* \"+this._i+\" */)\";var e,t,n,s=\"moment\",i=\"\";return this.isLocal()||(s=0===this.utcOffset()?\"moment.utc\":\"moment.parseZone\",i=\"Z\"),e=\"[\"+s+'(\"]',t=0<=this.year()&&this.year()<=9999?\"YYYY\":\"YYYYYY\",\"-MM-DD[T]HH:mm:ss.SSS\",n=i+'[\")]',this.format(e+t+\"-MM-DD[T]HH:mm:ss.SSS\"+n)},false&&false&&(bn['Symbol.for(\"nodejs.util.inspect.custom\")']=function(){return\"Moment<\"+this.format()+\">\"}),bn.toJSON=function(){return this.isValid()?this.toISOString():null},bn.toString=function(){return this.clone().locale(\"en\").format(\"ddd MMM DD YYYY HH:mm:ss [GMT]ZZ\")},bn.unix=function(){return Math.floor(this.valueOf()/1e3)},bn.valueOf=function(){return this._d.valueOf()-6e4*(this._offset||0)},bn.creationData=function(){return{input:this._i,format:this._f,locale:this._locale,isUTC:this._isUTC,strict:this._strict}},bn.eraName=function(){var e,t,n,s=this.localeData().eras();for(e=0,t=s.length;e<t;++e){if(n=this.clone().startOf(\"day\").valueOf(),s[e].since<=n&&n<=s[e].until)return s[e].name;if(s[e].until<=n&&n<=s[e].since)return s[e].name}return\"\"},bn.eraNarrow=function(){var e,t,n,s=this.localeData().eras();for(e=0,t=s.length;e<t;++e){if(n=this.clone().startOf(\"day\").valueOf(),s[e].since<=n&&n<=s[e].until)return s[e].narrow;if(s[e].until<=n&&n<=s[e].since)return s[e].narrow}return\"\"},bn.eraAbbr=function(){var e,t,n,s=this.localeData().eras();for(e=0,t=s.length;e<t;++e){if(n=this.clone().startOf(\"day\").valueOf(),s[e].since<=n&&n<=s[e].until)return s[e].abbr;if(s[e].until<=n&&n<=s[e].since)return s[e].abbr}return\"\"},bn.eraYear=function(){var e,t,s,i,r=this.localeData().eras();for(e=0,t=r.length;e<t;++e)if(s=r[e].since<=r[e].until?1:-1,i=this.clone().startOf(\"day\").valueOf(),r[e].since<=i&&i<=r[e].until||r[e].until<=i&&i<=r[e].since)return(this.year()-n(r[e].since).year())*s+r[e].offset;return this.year()},bn.year=be,bn.isLeapYear=function(){return _e(this.year())},bn.weekYear=function(e){return pn.call(this,e,this.week(),this.weekday()+this.localeData()._week.dow,this.localeData()._week.dow,this.localeData()._week.doy)},bn.isoWeekYear=function(e){return pn.call(this,e,this.isoWeek(),this.isoWeekday(),1,4)},bn.quarter=bn.quarters=function(e){return null==e?Math.ceil((this.month()+1)/3):this.month(3*(e-1)+this.month()%3)},bn.month=Ve,bn.daysInMonth=function(){return We(this.year(),this.month())},bn.week=bn.weeks=function(e){var t=this.localeData().week(this);return null==e?t:this.add(7*(e-t),\"d\")},bn.isoWeek=bn.isoWeeks=function(e){var t=Ze(this,1,4).week;return null==e?t:this.add(7*(e-t),\"d\")},bn.weeksInYear=function(){var e=this.localeData()._week;return ze(this.year(),e.dow,e.doy)},bn.weeksInWeekYear=function(){var e=this.localeData()._week;return ze(this.weekYear(),e.dow,e.doy)},bn.isoWeeksInYear=function(){return ze(this.year(),1,4)},bn.isoWeeksInISOWeekYear=function(){return ze(this.isoWeekYear(),1,4)},bn.date=kn,bn.day=bn.days=function(e){if(!this.isValid())return null!=e?this:NaN;var t=xe(this,\"Day\");return null!=e?(e=function(e,t){return\"string\"!=typeof e?e:isNaN(e)?\"number\"==typeof(e=t.weekdaysParse(e))?e:null:parseInt(e,10)}(e,this.localeData()),this.add(e-t,\"d\")):t},bn.weekday=function(e){if(!this.isValid())return null!=e?this:NaN;var t=(this.day()+7-this.localeData()._week.dow)%7;return null==e?t:this.add(e-t,\"d\")},bn.isoWeekday=function(e){if(!this.isValid())return null!=e?this:NaN;if(null!=e){var t=function(e,t){return\"string\"==typeof e?t.weekdaysParse(e)%7||7:isNaN(e)?null:e}(e,this.localeData());return this.day(this.day()%7?t:t-7)}return this.day()||7},bn.dayOfYear=function(e){var t=Math.round((this.clone().startOf(\"day\")-this.clone().startOf(\"year\"))/864e5)+1;return null==e?t:this.add(e-t,\"d\")},bn.hour=bn.hours=rt,bn.minute=bn.minutes=Mn,bn.second=bn.seconds=Yn,bn.millisecond=bn.milliseconds=Sn,bn.utcOffset=function(e,t,s){var i,r=this._offset||0;if(!this.isValid())return null!=e?this:NaN;if(null!=e){if(\"string\"==typeof e){if(null===(e=jt(ne,e)))return this}else Math.abs(e)<16&&!s&&(e*=60);return!this._isUTC&&t&&(i=Zt(this)),this._offset=e,this._isUTC=!0,null!=i&&this.add(i,\"m\"),r!==e&&(!t||this._changeInProgress?Kt(this,Bt(e-r,\"m\"),1,!1):this._changeInProgress||(this._changeInProgress=!0,n.updateOffset(this,!0),this._changeInProgress=null)),this}return this._isUTC?r:Zt(this)},bn.utc=function(e){return this.utcOffset(0,e)},bn.local=function(e){return this._isUTC&&(this.utcOffset(0,e),this._isUTC=!1,e&&this.subtract(Zt(this),\"m\")),this},bn.parseZone=function(){if(null!=this._tzm)this.utcOffset(this._tzm,!1,!0);else if(\"string\"==typeof this._i){var e=jt(te,this._i);null!=e?this.utcOffset(e):this.utcOffset(0,!0)}return this},bn.hasAlignedHourOffset=function(e){return!!this.isValid()&&(e=e?Rt(e).utcOffset():0,(this.utcOffset()-e)%60==0)},bn.isDST=function(){return this.utcOffset()>this.clone().month(0).utcOffset()||this.utcOffset()>this.clone().month(5).utcOffset()},bn.isLocal=function(){return!!this.isValid()&&!this._isUTC},bn.isUtcOffset=function(){return!!this.isValid()&&this._isUTC},bn.isUtc=zt,bn.isUTC=zt,bn.zoneAbbr=function(){return this._isUTC?\"UTC\":\"\"},bn.zoneName=function(){return this._isUTC?\"Coordinated Universal Time\":\"\"},bn.dates=M(\"dates accessor is deprecated. Use date instead.\",kn),bn.months=M(\"months accessor is deprecated. Use month instead\",Ve),bn.years=M(\"years accessor is deprecated. Use year instead\",be),bn.zone=M(\"moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/\",(function(e,t){return null!=e?(\"string\"!=typeof e&&(e=-e),this.utcOffset(e,t),this):-this.utcOffset()})),bn.isDSTShifted=M(\"isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information\",(function(){if(!o(this._isDSTShifted))return this._isDSTShifted;var e,t={};return w(t,this),(t=Wt(t))._a?(e=t._isUTC?c(t._a):Rt(t._a),this._isDSTShifted=this.isValid()&&function(e,t,n){var s,i=Math.min(e.length,t.length),r=Math.abs(e.length-t.length),a=0;for(s=0;s<i;s++)(n&&e[s]!==t[s]||!n&&de(e[s])!==de(t[s]))&&a++;return a+r}(t._a,e.toArray())>0):this._isDSTShifted=!1,this._isDSTShifted}));var xn=T.prototype;function Nn(e,t,n,s){var i=_t(),r=c().set(s,t);return i[n](r,e)}function Wn(e,t,n){if(u(e)&&(t=e,e=void 0),e=e||\"\",null!=t)return Nn(e,t,n,\"month\");var s,i=[];for(s=0;s<12;s++)i[s]=Nn(e,s,n,\"month\");return i}function Pn(e,t,n,s){\"boolean\"==typeof e?(u(t)&&(n=t,t=void 0),t=t||\"\"):(n=t=e,e=!1,u(t)&&(n=t,t=void 0),t=t||\"\");var i,r=_t(),a=e?r._week.dow:0,o=[];if(null!=n)return Nn(t,(n+a)%7,s,\"day\");for(i=0;i<7;i++)o[i]=Nn(t,(i+a)%7,s,\"day\");return o}xn.calendar=function(e,t,n){var s=this._calendar[e]||this._calendar.sameElse;return O(s)?s.call(t,n):s},xn.longDateFormat=function(e){var t=this._longDateFormat[e],n=this._longDateFormat[e.toUpperCase()];return t||!n?t:(this._longDateFormat[e]=n.match(N).map((function(e){return\"MMMM\"===e||\"MM\"===e||\"DD\"===e||\"dddd\"===e?e.slice(1):e})).join(\"\"),this._longDateFormat[e])},xn.invalidDate=function(){return this._invalidDate},xn.ordinal=function(e){return this._ordinal.replace(\"%d\",e)},xn.preparse=Tn,xn.postformat=Tn,xn.relativeTime=function(e,t,n,s){var i=this._relativeTime[n];return O(i)?i(e,t,n,s):i.replace(/%d/i,e)},xn.pastFuture=function(e,t){var n=this._relativeTime[e>0?\"future\":\"past\"];return O(n)?n(t):n.replace(/%s/i,t)},xn.set=function(e){var t,n;for(n in e)r(e,n)&&(O(t=e[n])?this[n]=t:this[\"_\"+n]=t);this._config=e,this._dayOfMonthOrdinalParseLenient=new RegExp((this._dayOfMonthOrdinalParse.source||this._ordinalParse.source)+\"|\"+/\\d{1,2}/.source)},xn.eras=function(e,t){var s,i,r,a=this._eras||_t(\"en\")._eras;for(s=0,i=a.length;s<i;++s){if(\"string\"==typeof a[s].since)r=n(a[s].since).startOf(\"day\"),a[s].since=r.valueOf();switch(typeof a[s].until){case\"undefined\":a[s].until=1/0;break;case\"string\":r=n(a[s].until).startOf(\"day\").valueOf(),a[s].until=r.valueOf()}}return a},xn.erasParse=function(e,t,n){var s,i,r,a,o,u=this.eras();for(e=e.toUpperCase(),s=0,i=u.length;s<i;++s)if(r=u[s].name.toUpperCase(),a=u[s].abbr.toUpperCase(),o=u[s].narrow.toUpperCase(),n)switch(t){case\"N\":case\"NN\":case\"NNN\":if(a===e)return u[s];break;case\"NNNN\":if(r===e)return u[s];break;case\"NNNNN\":if(o===e)return u[s]}else if([r,a,o].indexOf(e)>=0)return u[s]},xn.erasConvertYear=function(e,t){var s=e.since<=e.until?1:-1;return void 0===t?n(e.since).year():n(e.since).year()+(t-e.offset)*s},xn.erasAbbrRegex=function(e){return r(this,\"_erasAbbrRegex\")||gn.call(this),e?this._erasAbbrRegex:this._erasRegex},xn.erasNameRegex=function(e){return r(this,\"_erasNameRegex\")||gn.call(this),e?this._erasNameRegex:this._erasRegex},xn.erasNarrowRegex=function(e){return r(this,\"_erasNarrowRegex\")||gn.call(this),e?this._erasNarrowRegex:this._erasRegex},xn.months=function(e,t){return e?s(this._months)?this._months[e.month()]:this._months[(this._months.isFormat||Ce).test(t)?\"format\":\"standalone\"][e.month()]:s(this._months)?this._months:this._months.standalone},xn.monthsShort=function(e,t){return e?s(this._monthsShort)?this._monthsShort[e.month()]:this._monthsShort[Ce.test(t)?\"format\":\"standalone\"][e.month()]:s(this._monthsShort)?this._monthsShort:this._monthsShort.standalone},xn.monthsParse=function(e,t,n){var s,i,r;if(this._monthsParseExact)return Fe.call(this,e,t,n);for(this._monthsParse||(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[]),s=0;s<12;s++){if(i=c([2e3,s]),n&&!this._longMonthsParse[s]&&(this._longMonthsParse[s]=new RegExp(\"^\"+this.months(i,\"\").replace(\".\",\"\")+\"$\",\"i\"),this._shortMonthsParse[s]=new RegExp(\"^\"+this.monthsShort(i,\"\").replace(\".\",\"\")+\"$\",\"i\")),n||this._monthsParse[s]||(r=\"^\"+this.months(i,\"\")+\"|^\"+this.monthsShort(i,\"\"),this._monthsParse[s]=new RegExp(r.replace(\".\",\"\"),\"i\")),n&&\"MMMM\"===t&&this._longMonthsParse[s].test(e))return s;if(n&&\"MMM\"===t&&this._shortMonthsParse[s].test(e))return s;if(!n&&this._monthsParse[s].test(e))return s}},xn.monthsRegex=function(e){return this._monthsParseExact?(r(this,\"_monthsRegex\")||Ge.call(this),e?this._monthsStrictRegex:this._monthsRegex):(r(this,\"_monthsRegex\")||(this._monthsRegex=He),this._monthsStrictRegex&&e?this._monthsStrictRegex:this._monthsRegex)},xn.monthsShortRegex=function(e){return this._monthsParseExact?(r(this,\"_monthsRegex\")||Ge.call(this),e?this._monthsShortStrictRegex:this._monthsShortRegex):(r(this,\"_monthsShortRegex\")||(this._monthsShortRegex=Ue),this._monthsShortStrictRegex&&e?this._monthsShortStrictRegex:this._monthsShortRegex)},xn.week=function(e){return Ze(e,this._week.dow,this._week.doy).week},xn.firstDayOfYear=function(){return this._week.doy},xn.firstDayOfWeek=function(){return this._week.dow},xn.weekdays=function(e,t){var n=s(this._weekdays)?this._weekdays:this._weekdays[e&&!0!==e&&this._weekdays.isFormat.test(t)?\"format\":\"standalone\"];return!0===e?qe(n,this._week.dow):e?n[e.day()]:n},xn.weekdaysMin=function(e){return!0===e?qe(this._weekdaysMin,this._week.dow):e?this._weekdaysMin[e.day()]:this._weekdaysMin},xn.weekdaysShort=function(e){return!0===e?qe(this._weekdaysShort,this._week.dow):e?this._weekdaysShort[e.day()]:this._weekdaysShort},xn.weekdaysParse=function(e,t,n){var s,i,r;if(this._weekdaysParseExact)return et.call(this,e,t,n);for(this._weekdaysParse||(this._weekdaysParse=[],this._minWeekdaysParse=[],this._shortWeekdaysParse=[],this._fullWeekdaysParse=[]),s=0;s<7;s++){if(i=c([2e3,1]).day(s),n&&!this._fullWeekdaysParse[s]&&(this._fullWeekdaysParse[s]=new RegExp(\"^\"+this.weekdays(i,\"\").replace(\".\",\"\\\\.?\")+\"$\",\"i\"),this._shortWeekdaysParse[s]=new RegExp(\"^\"+this.weekdaysShort(i,\"\").replace(\".\",\"\\\\.?\")+\"$\",\"i\"),this._minWeekdaysParse[s]=new RegExp(\"^\"+this.weekdaysMin(i,\"\").replace(\".\",\"\\\\.?\")+\"$\",\"i\")),this._weekdaysParse[s]||(r=\"^\"+this.weekdays(i,\"\")+\"|^\"+this.weekdaysShort(i,\"\")+\"|^\"+this.weekdaysMin(i,\"\"),this._weekdaysParse[s]=new RegExp(r.replace(\".\",\"\"),\"i\")),n&&\"dddd\"===t&&this._fullWeekdaysParse[s].test(e))return s;if(n&&\"ddd\"===t&&this._shortWeekdaysParse[s].test(e))return s;if(n&&\"dd\"===t&&this._minWeekdaysParse[s].test(e))return s;if(!n&&this._weekdaysParse[s].test(e))return s}},xn.weekdaysRegex=function(e){return this._weekdaysParseExact?(r(this,\"_weekdaysRegex\")||tt.call(this),e?this._weekdaysStrictRegex:this._weekdaysRegex):(r(this,\"_weekdaysRegex\")||(this._weekdaysRegex=Qe),this._weekdaysStrictRegex&&e?this._weekdaysStrictRegex:this._weekdaysRegex)},xn.weekdaysShortRegex=function(e){return this._weekdaysParseExact?(r(this,\"_weekdaysRegex\")||tt.call(this),e?this._weekdaysShortStrictRegex:this._weekdaysShortRegex):(r(this,\"_weekdaysShortRegex\")||(this._weekdaysShortRegex=Xe),this._weekdaysShortStrictRegex&&e?this._weekdaysShortStrictRegex:this._weekdaysShortRegex)},xn.weekdaysMinRegex=function(e){return this._weekdaysParseExact?(r(this,\"_weekdaysRegex\")||tt.call(this),e?this._weekdaysMinStrictRegex:this._weekdaysMinRegex):(r(this,\"_weekdaysMinRegex\")||(this._weekdaysMinRegex=Ke),this._weekdaysMinStrictRegex&&e?this._weekdaysMinStrictRegex:this._weekdaysMinRegex)},xn.isPM=function(e){return\"p\"===(e+\"\").toLowerCase().charAt(0)},xn.meridiem=function(e,t,n){return e>11?n?\"pm\":\"PM\":n?\"am\":\"AM\"},ft(\"en\",{eras:[{since:\"0001-01-01\",until:1/0,offset:1,name:\"Anno Domini\",narrow:\"AD\",abbr:\"AD\"},{since:\"0000-12-31\",until:-1/0,offset:1,name:\"Before Christ\",narrow:\"BC\",abbr:\"BC\"}],dayOfMonthOrdinalParse:/\\d{1,2}(th|st|nd|rd)/,ordinal:function(e){var t=e%10;return e+(1===de(e%100/10)?\"th\":1===t?\"st\":2===t?\"nd\":3===t?\"rd\":\"th\")}}),n.lang=M(\"moment.lang is deprecated. Use moment.locale instead.\",ft),n.langData=M(\"moment.langData is deprecated. Use moment.localeData instead.\",_t);var Rn=Math.abs;function Cn(e,t,n,s){var i=Bt(t,n);return e._milliseconds+=s*i._milliseconds,e._days+=s*i._days,e._months+=s*i._months,e._bubble()}function Un(e){return e<0?Math.floor(e):Math.ceil(e)}function Hn(e){return 4800*e/146097}function Fn(e){return 146097*e/4800}function Ln(e){return function(){return this.as(e)}}var Vn=Ln(\"ms\"),Gn=Ln(\"s\"),En=Ln(\"m\"),An=Ln(\"h\"),jn=Ln(\"d\"),In=Ln(\"w\"),Zn=Ln(\"M\"),zn=Ln(\"Q\"),qn=Ln(\"y\"),$n=Vn;function Bn(e){return function(){return this.isValid()?this._data[e]:NaN}}var Jn=Bn(\"milliseconds\"),Qn=Bn(\"seconds\"),Xn=Bn(\"minutes\"),Kn=Bn(\"hours\"),es=Bn(\"days\"),ts=Bn(\"months\"),ns=Bn(\"years\");var ss=Math.round,is={ss:44,s:45,m:45,h:22,d:26,w:null,M:11};function rs(e,t,n,s,i){return i.relativeTime(t||1,!!n,e,s)}var as=Math.abs;function os(e){return(e>0)-(e<0)||+e}function us(){if(!this.isValid())return this.localeData().invalidDate();var e,t,n,s,i,r,a,o,u=as(this._milliseconds)/1e3,l=as(this._days),d=as(this._months),h=this.asSeconds();return h?(e=le(u/60),t=le(e/60),u%=60,e%=60,n=le(d/12),d%=12,s=u?u.toFixed(3).replace(/\\.?0+$/,\"\"):\"\",i=h<0?\"-\":\"\",r=os(this._months)!==os(h)?\"-\":\"\",a=os(this._days)!==os(h)?\"-\":\"\",o=os(this._milliseconds)!==os(h)?\"-\":\"\",i+\"P\"+(n?r+n+\"Y\":\"\")+(d?r+d+\"M\":\"\")+(l?a+l+\"D\":\"\")+(t||e||u?\"T\":\"\")+(t?o+t+\"H\":\"\")+(e?o+e+\"M\":\"\")+(u?o+s+\"S\":\"\")):\"P0D\"}var ls=Lt.prototype;return ls.isValid=function(){return this._isValid},ls.abs=function(){var e=this._data;return this._milliseconds=Rn(this._milliseconds),this._days=Rn(this._days),this._months=Rn(this._months),e.milliseconds=Rn(e.milliseconds),e.seconds=Rn(e.seconds),e.minutes=Rn(e.minutes),e.hours=Rn(e.hours),e.months=Rn(e.months),e.years=Rn(e.years),this},ls.add=function(e,t){return Cn(this,e,t,1)},ls.subtract=function(e,t){return Cn(this,e,t,-1)},ls.as=function(e){if(!this.isValid())return NaN;var t,n,s=this._milliseconds;if(\"month\"===(e=L(e))||\"quarter\"===e||\"year\"===e)switch(t=this._days+s/864e5,n=this._months+Hn(t),e){case\"month\":return n;case\"quarter\":return n/3;case\"year\":return n/12}else switch(t=this._days+Math.round(Fn(this._months)),e){case\"week\":return t/7+s/6048e5;case\"day\":return t+s/864e5;case\"hour\":return 24*t+s/36e5;case\"minute\":return 1440*t+s/6e4;case\"second\":return 86400*t+s/1e3;case\"millisecond\":return Math.floor(864e5*t)+s;default:throw new Error(\"Unknown unit \"+e)}},ls.asMilliseconds=Vn,ls.asSeconds=Gn,ls.asMinutes=En,ls.asHours=An,ls.asDays=jn,ls.asWeeks=In,ls.asMonths=Zn,ls.asQuarters=zn,ls.asYears=qn,ls.valueOf=$n,ls._bubble=function(){var e,t,n,s,i,r=this._milliseconds,a=this._days,o=this._months,u=this._data;return r>=0&&a>=0&&o>=0||r<=0&&a<=0&&o<=0||(r+=864e5*Un(Fn(o)+a),a=0,o=0),u.milliseconds=r%1e3,e=le(r/1e3),u.seconds=e%60,t=le(e/60),u.minutes=t%60,n=le(t/60),u.hours=n%24,a+=le(n/24),o+=i=le(Hn(a)),a-=Un(Fn(i)),s=le(o/12),o%=12,u.days=a,u.months=o,u.years=s,this},ls.clone=function(){return Bt(this)},ls.get=function(e){return e=L(e),this.isValid()?this[e+\"s\"]():NaN},ls.milliseconds=Jn,ls.seconds=Qn,ls.minutes=Xn,ls.hours=Kn,ls.days=es,ls.weeks=function(){return le(this.days()/7)},ls.months=ts,ls.years=ns,ls.humanize=function(e,t){if(!this.isValid())return this.localeData().invalidDate();var n,s,i=!1,r=is;return\"object\"==typeof e&&(t=e,e=!1),\"boolean\"==typeof e&&(i=e),\"object\"==typeof t&&(r=Object.assign({},is,t),null!=t.s&&null==t.ss&&(r.ss=t.s-1)),s=function(e,t,n,s){var i=Bt(e).abs(),r=ss(i.as(\"s\")),a=ss(i.as(\"m\")),o=ss(i.as(\"h\")),u=ss(i.as(\"d\")),l=ss(i.as(\"M\")),d=ss(i.as(\"w\")),h=ss(i.as(\"y\")),c=r<=n.ss&&[\"s\",r]||r<n.s&&[\"ss\",r]||a<=1&&[\"m\"]||a<n.m&&[\"mm\",a]||o<=1&&[\"h\"]||o<n.h&&[\"hh\",o]||u<=1&&[\"d\"]||u<n.d&&[\"dd\",u];return null!=n.w&&(c=c||d<=1&&[\"w\"]||d<n.w&&[\"ww\",d]),(c=c||l<=1&&[\"M\"]||l<n.M&&[\"MM\",l]||h<=1&&[\"y\"]||[\"yy\",h])[2]=t,c[3]=+e>0,c[4]=s,rs.apply(null,c)}(this,!i,r,n=this.localeData()),i&&(s=n.pastFuture(+this,s)),n.postformat(s)},ls.toISOString=us,ls.toString=us,ls.toJSON=us,ls.locale=an,ls.localeData=un,ls.toIsoString=M(\"toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)\",us),ls.lang=on,C(\"X\",0,0,\"unix\"),C(\"x\",0,0,\"valueOf\"),ae(\"x\",ee),ae(\"X\",/[+-]?\\d+(\\.\\d{1,3})?/),ce(\"X\",(function(e,t,n){n._d=new Date(1e3*parseFloat(e))})),ce(\"x\",(function(e,t,n){n._d=new Date(de(e))})),\n//! moment.js\nn.version=\"2.30.1\",e=Rt,n.fn=bn,n.min=function(){return Ht(\"isBefore\",[].slice.call(arguments,0))},n.max=function(){return Ht(\"isAfter\",[].slice.call(arguments,0))},n.now=function(){return Date.now?Date.now():+new Date},n.utc=c,n.unix=function(e){return Rt(1e3*e)},n.months=function(e,t){return Wn(e,t,\"months\")},n.isDate=l,n.locale=ft,n.invalid=_,n.duration=Bt,n.isMoment=v,n.weekdays=function(e,t,n){return Pn(e,t,n,\"weekdays\")},n.parseZone=function(){return Rt.apply(null,arguments).parseZone()},n.localeData=_t,n.isDuration=Vt,n.monthsShort=function(e,t){return Wn(e,t,\"monthsShort\")},n.weekdaysMin=function(e,t,n){return Pn(e,t,n,\"weekdaysMin\")},n.defineLocale=mt,n.updateLocale=function(e,t){if(null!=t){var n,s,i=ot;null!=ut[e]&&null!=ut[e].parentLocale?ut[e].set(b(ut[e]._config,t)):(null!=(s=ct(e))&&(i=s._config),t=b(i,t),null==s&&(t.abbr=e),(n=new T(t)).parentLocale=ut[e],ut[e]=n),ft(e)}else null!=ut[e]&&(null!=ut[e].parentLocale?(ut[e]=ut[e].parentLocale,e===ft()&&ft(e)):null!=ut[e]&&delete ut[e]);return ut[e]},n.locales=function(){return D(ut)},n.weekdaysShort=function(e,t,n){return Pn(e,t,n,\"weekdaysShort\")},n.normalizeUnits=L,n.relativeTimeRounding=function(e){return void 0===e?ss:\"function\"==typeof e&&(ss=e,!0)},n.relativeTimeThreshold=function(e,t){return void 0!==is[e]&&(void 0===t?is[e]:(is[e]=t,\"s\"===e&&(is.ss=t-1),!0))},n.calendarFormat=function(e,t){var n=e.diff(t,\"days\",!0);return n<-6?\"sameElse\":n<-1?\"lastWeek\":n<0?\"lastDay\":n<1?\"sameDay\":n<2?\"nextDay\":n<7?\"nextWeek\":\"sameElse\"},n.prototype=bn,n.HTML5_FMT={DATETIME_LOCAL:\"YYYY-MM-DDTHH:mm\",DATETIME_LOCAL_SECONDS:\"YYYY-MM-DDTHH:mm:ss\",DATETIME_LOCAL_MS:\"YYYY-MM-DDTHH:mm:ss.SSS\",DATE:\"YYYY-MM-DD\",TIME:\"HH:mm\",TIME_SECONDS:\"HH:mm:ss\",TIME_MS:\"HH:mm:ss.SSS\",WEEK:\"GGGG-[W]WW\",MONTH:\"YYYY-MM\"},n}));\n/* moment.js proxy END */\n\ncsGlobals['moment'] = moment;","sys_class_name":"sys_ui_script","sys_id":"b8ae721f9ff33110a86b86e29a0a1c65","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/4c8e6ff304752210559073c06a02f7c4","value":"4c8e6ff304752210559073c06a02f7c4"},"ui_type":"0","sys_update_name":"sys_ui_script_b8ae721f9ff33110a86b86e29a0a1c65","sys_updated_by":"admin","sys_created_on":"2024-01-23 10:25:09","name":"global.momentProxy","sys_name":"global.momentProxy","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"1","active":"true","description":"detect browser platforms, versions, manufacturers and types based on the navigator.userAgent string.\r\nfrom: https://github.com/darcyclarke/Detect.js\r\nlicensed under a Dual MIT and GPL licence","use_scoped_format":"false","global":"false","sys_updated_on":"2025-06-05 05:18:18","sys_tags":"","script_name":"","script":"(function(e){Array.prototype.map||(Array.prototype.map=function(e,r){var a,o,i;if(null==this)throw new TypeError(\" this is null or not defined\");var n=Object(this),t=n.length>>>0;if(\"function\"!=typeof e)throw new TypeError(e+\" is not a function\");for(r&&(a=r),o=Array(t),i=0;t>i;){var l,d;i in n&&(l=n[i],d=e.call(a,l,i,n),o[i]=d),i++}return o});var r=e.detect=function(){var e=function(){},r={browser_parsers:[{regex:\"^(Opera)/(\\\\d+)\\\\.(\\\\d+) \\\\(Nintendo Wii\",family_replacement:\"Wii\",manufacturer:\"Nintendo\"},{regex:\"(SeaMonkey|Camino)/(\\\\d+)\\\\.(\\\\d+)\\\\.?([ab]?\\\\d+[a-z]*)\",family_replacement:\"Camino\",other:!0},{regex:\"(Pale[Mm]oon)/(\\\\d+)\\\\.(\\\\d+)\\\\.?(\\\\d+)?\",family_replacement:\"Pale Moon (Firefox Variant)\",other:!0},{regex:\"(Fennec)/(\\\\d+)\\\\.(\\\\d+)\\\\.?([ab]?\\\\d+[a-z]*)\",family_replacement:\"Firefox Mobile\"},{regex:\"(Fennec)/(\\\\d+)\\\\.(\\\\d+)(pre)\",family_replacment:\"Firefox Mobile\"},{regex:\"(Fennec)/(\\\\d+)\\\\.(\\\\d+)\",family_replacement:\"Firefox Mobile\"},{regex:\"Mobile.*(Firefox)/(\\\\d+)\\\\.(\\\\d+)\",family_replacement:\"Firefox Mobile\"},{regex:\"(Namoroka|Shiretoko|Minefield)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+(?:pre)?)\",family_replacement:\"Firefox ($1)\"},{regex:\"(Firefox)/(\\\\d+)\\\\.(\\\\d+)(a\\\\d+[a-z]*)\",family_replacement:\"Firefox Alpha\"},{regex:\"(Firefox)/(\\\\d+)\\\\.(\\\\d+)(b\\\\d+[a-z]*)\",family_replacement:\"Firefox Beta\"},{regex:\"(Firefox)-(?:\\\\d+\\\\.\\\\d+)?/(\\\\d+)\\\\.(\\\\d+)(a\\\\d+[a-z]*)\",family_replacement:\"Firefox Alpha\"},{regex:\"(Firefox)-(?:\\\\d+\\\\.\\\\d+)?/(\\\\d+)\\\\.(\\\\d+)(b\\\\d+[a-z]*)\",family_replacement:\"Firefox Beta\"},{regex:\"(Namoroka|Shiretoko|Minefield)/(\\\\d+)\\\\.(\\\\d+)([ab]\\\\d+[a-z]*)?\",family_replacement:\"Firefox ($1)\"},{regex:\"(Firefox).*Tablet browser (\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\",family_replacement:\"MicroB\",tablet:!0},{regex:\"(MozillaDeveloperPreview)/(\\\\d+)\\\\.(\\\\d+)([ab]\\\\d+[a-z]*)?\"},{regex:\"(Flock)/(\\\\d+)\\\\.(\\\\d+)(b\\\\d+?)\",family_replacement:\"Flock\",other:!0},{regex:\"(RockMelt)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\",family_replacement:\"Rockmelt\",other:!0},{regex:\"(Navigator)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\",family_replacement:\"Netscape\"},{regex:\"(Navigator)/(\\\\d+)\\\\.(\\\\d+)([ab]\\\\d+)\",family_replacement:\"Netscape\"},{regex:\"(Netscape6)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\",family_replacement:\"Netscape\"},{regex:\"(MyIBrow)/(\\\\d+)\\\\.(\\\\d+)\",family_replacement:\"My Internet Browser\",other:!0},{regex:\"(Opera Tablet).*Version/(\\\\d+)\\\\.(\\\\d+)(?:\\\\.(\\\\d+))?\",family_replacement:\"Opera Tablet\",tablet:!0},{regex:\"(Opera)/.+Opera Mobi.+Version/(\\\\d+)\\\\.(\\\\d+)\",family_replacement:\"Opera Mobile\"},{regex:\"Opera Mobi\",family_replacement:\"Opera Mobile\"},{regex:\"(Opera Mini)/(\\\\d+)\\\\.(\\\\d+)\",family_replacement:\"Opera Mini\"},{regex:\"(Opera Mini)/att/(\\\\d+)\\\\.(\\\\d+)\",family_replacement:\"Opera Mini\"},{regex:\"(Opera)/9.80.*Version/(\\\\d+)\\\\.(\\\\d+)(?:\\\\.(\\\\d+))?\",family_replacement:\"Opera\"},{regex:\"(OPR)/(\\\\d+)\\\\.(\\\\d+)(?:\\\\.(\\\\d+))?\",family_replacement:\"Opera\"},{regex:\"(webOSBrowser)/(\\\\d+)\\\\.(\\\\d+)\",family_replacement:\"webOS\"},{regex:\"(webOS)/(\\\\d+)\\\\.(\\\\d+)\",family_replacement:\"webOS\"},{regex:\"(wOSBrowser).+TouchPad/(\\\\d+)\\\\.(\\\\d+)\",family_replacement:\"webOS TouchPad\"},{regex:\"(luakit)\",family_replacement:\"LuaKit\",other:!0},{regex:\"(Lightning)/(\\\\d+)\\\\.(\\\\d+)([ab]?\\\\d+[a-z]*)\",family_replacement:\"Lightning\",other:!0},{regex:\"(Firefox)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+(?:pre)?) \\\\(Swiftfox\\\\)\",family_replacement:\"Swiftfox\",other:!0},{regex:\"(Firefox)/(\\\\d+)\\\\.(\\\\d+)([ab]\\\\d+[a-z]*)? \\\\(Swiftfox\\\\)\",family_replacement:\"Swiftfox\",other:!0},{regex:\"rekonq\",family_replacement:\"Rekonq\",other:!0},{regex:\"(conkeror|Conkeror)/(\\\\d+)\\\\.(\\\\d+)\\\\.?(\\\\d+)?\",family_replacement:\"Conkeror\",other:!0},{regex:\"(konqueror)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\",family_replacement:\"Konqueror\",other:!0},{regex:\"(WeTab)-Browser\",family_replacement:\"WeTab\",other:!0},{regex:\"(Comodo_Dragon)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\",family_replacement:\"Comodo Dragon\",other:!0},{regex:\"(YottaaMonitor)\",family_replacement:\"Yottaa Monitor\",other:!0},{regex:\"(Kindle)/(\\\\d+)\\\\.(\\\\d+)\",family_replacement:\"Kindle\"},{regex:\"(Symphony) (\\\\d+).(\\\\d+)\",family_replacement:\"Symphony\",other:!0},{regex:\"Minimo\",family_replacement:\"Minimo\",other:!0},{regex:\"(Edge)/(\\\\d+)\\\\.(\\\\d+)\",family_replacement:\"Edge\"},{regex:\"(CrMo)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\",family_replacement:\"Chrome Mobile\"},{regex:\"(CriOS)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\",family_replacement:\"Chrome Mobile iOS\"},{regex:\"(Chrome)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+) Mobile\",family_replacement:\"Chrome Mobile\"},{regex:\"(chromeframe)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\",family_replacement:\"Chrome Frame\"},{regex:\"(UC Browser)(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\",family_replacement:\"UC Browser\",other:!0},{regex:\"(SLP Browser)/(\\\\d+)\\\\.(\\\\d+)\",family_replacement:\"Tizen Browser\",other:!0},{regex:\"(Epiphany)/(\\\\d+)\\\\.(\\\\d+).(\\\\d+)\",family_replacement:\"Epiphany\",other:!0},{regex:\"(SE 2\\\\.X) MetaSr (\\\\d+)\\\\.(\\\\d+)\",family_replacement:\"Sogou Explorer\",other:!0},{regex:\"(Pingdom.com_bot_version_)(\\\\d+)\\\\.(\\\\d+)\",family_replacement:\"PingdomBot\",other:!0},{regex:\"(facebookexternalhit)/(\\\\d+)\\\\.(\\\\d+)\",family_replacement:\"FacebookBot\"},{regex:\"(Twitterbot)/(\\\\d+)\\\\.(\\\\d+)\",family_replacement:\"TwitterBot\"},{regex:\"(AdobeAIR|Chromium|FireWeb|Jasmine|ANTGalio|Midori|Fresco|Lobo|PaleMoon|Maxthon|Lynx|OmniWeb|Dillo|Camino|Demeter|Fluid|Fennec|Shiira|Sunrise|Chrome|Flock|Netscape|Lunascape|WebPilot|NetFront|Netfront|Konqueror|SeaMonkey|Kazehakase|Vienna|Iceape|Iceweasel|IceWeasel|Iron|K-Meleon|Sleipnir|Galeon|GranParadiso|Opera Mini|iCab|NetNewsWire|ThunderBrowse|Iron|Iris|UP\\\\.Browser|Bunjaloo|Google Earth|Raven for Mac)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\"},{regex:\"(Bolt|Jasmine|IceCat|Skyfire|Midori|Maxthon|Lynx|Arora|IBrowse|Dillo|Camino|Shiira|Fennec|Phoenix|Chrome|Flock|Netscape|Lunascape|Epiphany|WebPilot|Opera Mini|Opera|NetFront|Netfront|Konqueror|Googlebot|SeaMonkey|Kazehakase|Vienna|Iceape|Iceweasel|IceWeasel|Iron|K-Meleon|Sleipnir|Galeon|GranParadiso|iCab|NetNewsWire|Iron|Space Bison|Stainless|Orca|Dolfin|BOLT|Minimo|Tizen Browser|Polaris)/(\\\\d+)\\\\.(\\\\d+)\"},{regex:\"(iRider|Crazy Browser|SkipStone|iCab|Lunascape|Sleipnir|Maemo Browser) (\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\"},{regex:\"(iCab|Lunascape|Opera|Android|Jasmine|Polaris|BREW) (\\\\d+)\\\\.(\\\\d+)\\\\.?(\\\\d+)?\"},{regex:\"(Android) Donut\",v2_replacement:\"2\",v1_replacement:\"1\"},{regex:\"(Android) Eclair\",v2_replacement:\"1\",v1_replacement:\"2\"},{regex:\"(Android) Froyo\",v2_replacement:\"2\",v1_replacement:\"2\"},{regex:\"(Android) Gingerbread\",v2_replacement:\"3\",v1_replacement:\"2\"},{regex:\"(Android) Honeycomb\",v1_replacement:\"3\"},{regex:\"(IEMobile)[ /](\\\\d+)\\\\.(\\\\d+)\",family_replacement:\"IE Mobile\"},{regex:\"(MSIE) (\\\\d+)\\\\.(\\\\d+).*XBLWP7\",family_replacement:\"IE Large Screen\"},{regex:\"(Firefox)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\"},{regex:\"(Firefox)/(\\\\d+)\\\\.(\\\\d+)(pre|[ab]\\\\d+[a-z]*)?\"},{regex:\"(Obigo)InternetBrowser\",other:!0},{regex:\"(Obigo)\\\\-Browser\",other:!0},{regex:\"(Obigo|OBIGO)[^\\\\d]*(\\\\d+)(?:.(\\\\d+))?\",other:!0},{regex:\"(MAXTHON|Maxthon) (\\\\d+)\\\\.(\\\\d+)\",family_replacement:\"Maxthon\",other:!0},{regex:\"(Maxthon|MyIE2|Uzbl|Shiira)\",v1_replacement:\"0\",other:!0},{regex:\"(PLAYSTATION) (\\\\d+)\",family_replacement:\"PlayStation\",manufacturer:\"Sony\"},{regex:\"(PlayStation Portable)[^\\\\d]+(\\\\d+).(\\\\d+)\",manufacturer:\"Sony\"},{regex:\"(BrowseX) \\\\((\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\",other:!0},{regex:\"(POLARIS)/(\\\\d+)\\\\.(\\\\d+)\",family_replacement:\"Polaris\",other:!0},{regex:\"(Embider)/(\\\\d+)\\\\.(\\\\d+)\",family_replacement:\"Polaris\",other:!0},{regex:\"(BonEcho)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\",family_replacement:\"Bon Echo\",other:!0},{regex:\"(iPod).+Version/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\",family_replacement:\"Mobile Safari\",manufacturer:\"Apple\"},{regex:\"(iPod).*Version/(\\\\d+)\\\\.(\\\\d+)\",family_replacement:\"Mobile Safari\",manufacturer:\"Apple\"},{regex:\"(iPod)\",family_replacement:\"Mobile Safari\",manufacturer:\"Apple\"},{regex:\"(iPhone).*Version/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\",family_replacement:\"Mobile Safari\",manufacturer:\"Apple\"},{regex:\"(iPhone).*Version/(\\\\d+)\\\\.(\\\\d+)\",family_replacement:\"Mobile Safari\",manufacturer:\"Apple\"},{regex:\"(iPhone)\",family_replacement:\"Mobile Safari\",manufacturer:\"Apple\"},{regex:\"(iPad).*Version/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\",family_replacement:\"Mobile Safari\",tablet:!0,manufacturer:\"Apple\"},{regex:\"(iPad).*Version/(\\\\d+)\\\\.(\\\\d+)\",family_replacement:\"Mobile Safari\",tablet:!0,manufacturer:\"Apple\"},{regex:\"(iPad)\",family_replacement:\"Mobile Safari\",tablet:!0,manufacturer:\"Apple\"},{regex:\"(AvantGo) (\\\\d+).(\\\\d+)\",other:!0},{regex:\"(Avant)\",v1_replacement:\"1\",other:!0},{regex:\"^(Nokia)\",family_replacement:\"Nokia Services (WAP) Browser\",manufacturer:\"Nokia\"},{regex:\"(NokiaBrowser)/(\\\\d+)\\\\.(\\\\d+).(\\\\d+)\\\\.(\\\\d+)\",manufacturer:\"Nokia\"},{regex:\"(NokiaBrowser)/(\\\\d+)\\\\.(\\\\d+).(\\\\d+)\",manufacturer:\"Nokia\"},{regex:\"(NokiaBrowser)/(\\\\d+)\\\\.(\\\\d+)\",manufacturer:\"Nokia\"},{regex:\"(BrowserNG)/(\\\\d+)\\\\.(\\\\d+).(\\\\d+)\",family_replacement:\"NokiaBrowser\",manufacturer:\"Nokia\"},{regex:\"(Series60)/5\\\\.0\",v2_replacement:\"0\",v1_replacement:\"7\",family_replacement:\"NokiaBrowser\",manufacturer:\"Nokia\"},{regex:\"(Series60)/(\\\\d+)\\\\.(\\\\d+)\",family_replacement:\"Nokia OSS Browser\",manufacturer:\"Nokia\"},{regex:\"(S40OviBrowser)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\",family_replacement:\"Nokia Series 40 Ovi Browser\",manufacturer:\"Nokia\"},{regex:\"(Nokia)[EN]?(\\\\d+)\",manufacturer:\"Nokia\"},{regex:\"(PlayBook).+RIM Tablet OS (\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\",family_replacement:\"Blackberry WebKit\",tablet:!0,manufacturer:\"Nokia\"},{regex:\"(Black[bB]erry).+Version/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\",family_replacement:\"Blackberry WebKit\",manufacturer:\"RIM\"},{regex:\"(Black[bB]erry)\\\\s?(\\\\d+)\",family_replacement:\"Blackberry\",manufacturer:\"RIM\"},{regex:\"(OmniWeb)/v(\\\\d+)\\\\.(\\\\d+)\",other:!0},{regex:\"(Blazer)/(\\\\d+)\\\\.(\\\\d+)\",family_replacement:\"Palm Blazer\",manufacturer:\"Palm\"},{regex:\"(Pre)/(\\\\d+)\\\\.(\\\\d+)\",family_replacement:\"Palm Pre\",manufacturer:\"Palm\"},{regex:\"(Links) \\\\((\\\\d+)\\\\.(\\\\d+)\",other:!0},{regex:\"(QtWeb) Internet Browser/(\\\\d+)\\\\.(\\\\d+)\",other:!0},{regex:\"(Silk)/(\\\\d+)\\\\.(\\\\d+)(?:\\\\.([0-9\\\\-]+))?\",other:!0,tablet:!0},{regex:\"(AppleWebKit)/(\\\\d+)\\\\.?(\\\\d+)?\\\\+ .* Version/\\\\d+\\\\.\\\\d+.\\\\d+ Safari/\",family_replacement:\"WebKit Nightly\"},{regex:\"(Version)/(\\\\d+)\\\\.(\\\\d+)(?:\\\\.(\\\\d+))?.*Safari/\",family_replacement:\"Safari\"},{regex:\"(Safari)/\\\\d+\"},{regex:\"(OLPC)/Update(\\\\d+)\\\\.(\\\\d+)\",other:!0},{regex:\"(OLPC)/Update()\\\\.(\\\\d+)\",v1_replacement:\"0\",other:!0},{regex:\"(SEMC\\\\-Browser)/(\\\\d+)\\\\.(\\\\d+)\",other:!0},{regex:\"(Teleca)\",family_replacement:\"Teleca Browser\",other:!0},{regex:\"Trident(.*)rv.(\\\\d+)\\\\.(\\\\d+)\",family_replacement:\"IE\"},{regex:\"(MSIE) (\\\\d+)\\\\.(\\\\d+)\",family_replacement:\"IE\"}],os_parsers:[{regex:\"(Android) (\\\\d+)\\\\.(\\\\d+)(?:[.\\\\-]([a-z0-9]+))?\"},{regex:\"(Android)\\\\-(\\\\d+)\\\\.(\\\\d+)(?:[.\\\\-]([a-z0-9]+))?\"},{regex:\"(Android) Donut\",os_v2_replacement:\"2\",os_v1_replacement:\"1\"},{regex:\"(Android) Eclair\",os_v2_replacement:\"1\",os_v1_replacement:\"2\"},{regex:\"(Android) Froyo\",os_v2_replacement:\"2\",os_v1_replacement:\"2\"},{regex:\"(Android) Gingerbread\",os_v2_replacement:\"3\",os_v1_replacement:\"2\"},{regex:\"(Android) Honeycomb\",os_v1_replacement:\"3\"},{regex:\"(Silk-Accelerated=[a-z]{4,5})\",os_replacement:\"Android\"},{regex:\"(Windows Phone 6\\\\.5)\"},{regex:\"(Windows (?:NT 5\\\\.2|NT 5\\\\.1))\",os_replacement:\"Windows XP\"},{regex:\"(XBLWP7)\",os_replacement:\"Windows Phone OS\"},{regex:\"(Windows NT 6\\\\.1)\",os_replacement:\"Windows 7\"},{regex:\"(Windows NT 6\\\\.0)\",os_replacement:\"Windows Vista\"},{regex:\"(Windows 98|Windows XP|Windows ME|Windows 95|Windows CE|Windows 7|Windows NT 4\\\\.0|Windows Vista|Windows 2000)\"},{regex:\"(Windows NT 6\\\\.4|Windows NT 10\\\\.0)\",os_replacement:\"Windows 10\"},{regex:\"(Windows NT 6\\\\.2)\",os_replacement:\"Windows 8\"},{regex:\"(Windows Phone 8)\",os_replacement:\"Windows Phone 8\"},{regex:\"(Windows NT 5\\\\.0)\",os_replacement:\"Windows 2000\"},{regex:\"(Windows Phone OS) (\\\\d+)\\\\.(\\\\d+)\"},{regex:\"(Windows ?Mobile)\",os_replacement:\"Windows Mobile\"},{regex:\"(WinNT4.0)\",os_replacement:\"Windows NT 4.0\"},{regex:\"(Win98)\",os_replacement:\"Windows 98\"},{regex:\"(Tizen)/(\\\\d+)\\\\.(\\\\d+)\",other:!0},{regex:\"(Mac OS X) (\\\\d+)[_.](\\\\d+)(?:[_.](\\\\d+))?\",manufacturer:\"Apple\"},{regex:\"(?:PPC|Intel) (Mac OS X)\",manufacturer:\"Apple\"},{regex:\"(CPU OS|iPhone OS) (\\\\d+)_(\\\\d+)(?:_(\\\\d+))?\",os_replacement:\"iOS\",manufacturer:\"Apple\"},{regex:\"(iPhone|iPad|iPod); Opera\",os_replacement:\"iOS\",manufacturer:\"Apple\"},{regex:\"(iPad); Opera\",tablet:!0,manufacturer:\"Apple\"},{regex:\"(iPhone|iPad|iPod).*Mac OS X.*Version/(\\\\d+)\\\\.(\\\\d+)\",os_replacement:\"iOS\",manufacturer:\"Apple\"},{regex:\"(CrOS) [a-z0-9_]+ (\\\\d+)\\\\.(\\\\d+)(?:\\\\.(\\\\d+))?\",os_replacement:\"Chrome OS\"},{regex:\"(Debian)-(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(?:\\\\.(\\\\d+))?\",other:!0},{regex:\"(Linux Mint)(?:/(\\\\d+))?\",other:!0},{regex:\"(Mandriva)(?: Linux)?/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(?:\\\\.(\\\\d+))?\",other:!0},{regex:\"(Symbian[Oo][Ss])/(\\\\d+)\\\\.(\\\\d+)\",os_replacement:\"Symbian OS\"},{regex:\"(Symbian/3).+NokiaBrowser/7\\\\.3\",os_replacement:\"Symbian^3 Anna\"},{regex:\"(Symbian/3).+NokiaBrowser/7\\\\.4\",os_replacement:\"Symbian^3 Belle\"},{regex:\"(Symbian/3)\",os_replacement:\"Symbian^3\"},{regex:\"(Series 60|SymbOS|S60)\",os_replacement:\"Symbian OS\"},{regex:\"(MeeGo)\",other:!0},{regex:\"Symbian [Oo][Ss]\",os_replacement:\"Symbian OS\"},{regex:\"(Black[Bb]erry)[0-9a-z]+/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(?:\\\\.(\\\\d+))?\",os_replacement:\"BlackBerry OS\",manufacturer:\"RIM\"},{regex:\"(Black[Bb]erry).+Version/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(?:\\\\.(\\\\d+))?\",os_replacement:\"BlackBerry OS\",manufacturer:\"RIM\"},{regex:\"(RIM Tablet OS) (\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\",os_replacement:\"BlackBerry Tablet OS\",tablet:!0,manufacturer:\"RIM\"},{regex:\"(Play[Bb]ook)\",os_replacement:\"BlackBerry Tablet OS\",tablet:!0,manufacturer:\"RIM\"},{regex:\"(Black[Bb]erry)\",os_replacement:\"Blackberry OS\",manufacturer:\"RIM\"},{regex:\"(webOS|hpwOS)/(\\\\d+)\\\\.(\\\\d+)(?:\\\\.(\\\\d+))?\",os_replacement:\"webOS\"},{regex:\"(SUSE|Fedora|Red Hat|PCLinuxOS)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\",other:!0},{regex:\"(SUSE|Fedora|Red Hat|Puppy|PCLinuxOS|CentOS)/(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\",other:!0},{regex:\"(Ubuntu|Kindle|Bada|Lubuntu|BackTrack|Red Hat|Slackware)/(\\\\d+)\\\\.(\\\\d+)\"},{regex:\"(Windows|OpenBSD|FreeBSD|NetBSD|Ubuntu|Kubuntu|Android|Arch Linux|CentOS|WeTab|Slackware)\"},{regex:\"(Linux|BSD)\",other:!0}],mobile_os_families:[\"Windows Phone 6.5\",\"Windows CE\",\"Symbian OS\"],device_parsers:[{regex:\"HTC ([A-Z][a-z0-9]+) Build\",device_replacement:\"HTC $1\",manufacturer:\"HTC\"},{regex:\"HTC ([A-Z][a-z0-9 ]+) \\\\d+\\\\.\\\\d+\\\\.\\\\d+\\\\.\\\\d+\",device_replacement:\"HTC $1\",manufacturer:\"HTC\"},{regex:\"HTC_Touch_([A-Za-z0-9]+)\",device_replacement:\"HTC Touch ($1)\",manufacturer:\"HTC\"},{regex:\"USCCHTC(\\\\d+)\",device_replacement:\"HTC $1 (US Cellular)\",manufacturer:\"HTC\"},{regex:\"Sprint APA(9292)\",device_replacement:\"HTC $1 (Sprint)\",manufacturer:\"HTC\"},{regex:\"HTC ([A-Za-z0-9]+ [A-Z])\",device_replacement:\"HTC $1\",manufacturer:\"HTC\"},{regex:\"HTC-([A-Za-z0-9]+)\",device_replacement:\"HTC $1\",manufacturer:\"HTC\"},{regex:\"HTC_([A-Za-z0-9]+)\",device_replacement:\"HTC $1\",manufacturer:\"HTC\"},{regex:\"HTC ([A-Za-z0-9]+)\",device_replacement:\"HTC $1\",manufacturer:\"HTC\"},{regex:\"(ADR[A-Za-z0-9]+)\",device_replacement:\"HTC $1\",manufacturer:\"HTC\"},{regex:\"(HTC)\",manufacturer:\"HTC\"},{regex:\"SonyEricsson([A-Za-z0-9]+)/\",device_replacement:\"Ericsson $1\",other:!0,manufacturer:\"Sony\"},{regex:\"Android[\\\\- ][\\\\d]+\\\\.[\\\\d]+\\\\; [A-Za-z]{2}\\\\-[A-Za-z]{2}\\\\; WOWMobile (.+) Build\"},{regex:\"Android[\\\\- ][\\\\d]+\\\\.[\\\\d]+\\\\.[\\\\d]+; [A-Za-z]{2}\\\\-[A-Za-z]{2}\\\\; (.+) Build\"},{regex:\"Android[\\\\- ][\\\\d]+\\\\.[\\\\d]+\\\\-update1\\\\; [A-Za-z]{2}\\\\-[A-Za-z]{2}\\\\; (.+) Build\"},{regex:\"Android[\\\\- ][\\\\d]+\\\\.[\\\\d]+\\\\; [A-Za-z]{2}\\\\-[A-Za-z]{2}\\\\; (.+) Build\"},{regex:\"Android[\\\\- ][\\\\d]+\\\\.[\\\\d]+\\\\.[\\\\d]+; (.+) Build\"},{regex:\"NokiaN([0-9]+)\",device_replacement:\"Nokia N$1\",manufacturer:\"Nokia\"},{regex:\"Nokia([A-Za-z0-9\\\\v-]+)\",device_replacement:\"Nokia $1\",manufacturer:\"Nokia\"},{regex:\"NOKIA ([A-Za-z0-9\\\\-]+)\",device_replacement:\"Nokia $1\",manufacturer:\"Nokia\"},{regex:\"Nokia ([A-Za-z0-9\\\\-]+)\",device_replacement:\"Nokia $1\",manufacturer:\"Nokia\"},{regex:\"Lumia ([A-Za-z0-9\\\\-]+)\",device_replacement:\"Lumia $1\",manufacturer:\"Nokia\"},{regex:\"Symbian\",device_replacement:\"Nokia\",manufacturer:\"Nokia\"},{regex:\"(PlayBook).+RIM Tablet OS\",device_replacement:\"Blackberry Playbook\",tablet:!0,manufacturer:\"RIM\"},{regex:\"(Black[Bb]erry [0-9]+);\",manufacturer:\"RIM\"},{regex:\"Black[Bb]erry([0-9]+)\",device_replacement:\"BlackBerry $1\",manufacturer:\"RIM\"},{regex:\"(Pre)/(\\\\d+)\\\\.(\\\\d+)\",device_replacement:\"Palm Pre\",manufacturer:\"Palm\"},{regex:\"(Pixi)/(\\\\d+)\\\\.(\\\\d+)\",device_replacement:\"Palm Pixi\",manufacturer:\"Palm\"},{regex:\"(Touchpad)/(\\\\d+)\\\\.(\\\\d+)\",device_replacement:\"HP Touchpad\",manufacturer:\"HP\"},{regex:\"HPiPAQ([A-Za-z0-9]+)/(\\\\d+).(\\\\d+)\",device_replacement:\"HP iPAQ $1\",manufacturer:\"HP\"},{regex:\"Palm([A-Za-z0-9]+)\",device_replacement:\"Palm $1\",manufacturer:\"Palm\"},{regex:\"Treo([A-Za-z0-9]+)\",device_replacement:\"Palm Treo $1\",manufacturer:\"Palm\"},{regex:\"webOS.*(P160UNA)/(\\\\d+).(\\\\d+)\",device_replacement:\"HP Veer\",manufacturer:\"HP\"},{regex:\"(Kindle Fire)\",manufacturer:\"Amazon\"},{regex:\"(Kindle)\",manufacturer:\"Amazon\"},{regex:\"(Silk)/(\\\\d+)\\\\.(\\\\d+)(?:\\\\.([0-9\\\\-]+))?\",device_replacement:\"Kindle Fire\",tablet:!0,manufacturer:\"Amazon\"},{regex:\"(iPad) Simulator;\",manufacturer:\"Apple\"},{regex:\"(iPad);\",manufacturer:\"Apple\"},{regex:\"(iPod);\",manufacturer:\"Apple\"},{regex:\"(iPhone) Simulator;\",manufacturer:\"Apple\"},{regex:\"(iPhone);\",manufacturer:\"Apple\"},{regex:\"Nexus\\\\ ([A-Za-z0-9\\\\-]+)\",device_replacement:\"Nexus $1\"},{regex:\"acer_([A-Za-z0-9]+)_\",device_replacement:\"Acer $1\",manufacturer:\"Acer\"},{regex:\"acer_([A-Za-z0-9]+)_\",device_replacement:\"Acer $1\",manufacturer:\"Acer\"},{regex:\"Amoi\\\\-([A-Za-z0-9]+)\",device_replacement:\"Amoi $1\",other:!0,manufacturer:\"Amoi\"},{regex:\"AMOI\\\\-([A-Za-z0-9]+)\",device_replacement:\"Amoi $1\",other:!0,manufacturer:\"Amoi\"},{regex:\"Asus\\\\-([A-Za-z0-9]+)\",device_replacement:\"Asus $1\",manufacturer:\"Asus\"},{regex:\"ASUS\\\\-([A-Za-z0-9]+)\",device_replacement:\"Asus $1\",manufacturer:\"Asus\"},{regex:\"BIRD\\\\-([A-Za-z0-9]+)\",device_replacement:\"Bird $1\",other:!0},{regex:\"BIRD\\\\.([A-Za-z0-9]+)\",device_replacement:\"Bird $1\",other:!0},{regex:\"BIRD ([A-Za-z0-9]+)\",device_replacement:\"Bird $1\",other:!0},{regex:\"Dell ([A-Za-z0-9]+)\",device_replacement:\"Dell $1\",manufacturer:\"Dell\"},{regex:\"DoCoMo/2\\\\.0 ([A-Za-z0-9]+)\",device_replacement:\"DoCoMo $1\",other:!0},{regex:\"([A-Za-z0-9]+)\\\\_W\\\\;FOMA\",device_replacement:\"DoCoMo $1\",other:!0},{regex:\"([A-Za-z0-9]+)\\\\;FOMA\",device_replacement:\"DoCoMo $1\",other:!0},{regex:\"vodafone([A-Za-z0-9]+)\",device_replacement:\"Huawei Vodafone $1\",other:!0},{regex:\"i\\\\-mate ([A-Za-z0-9]+)\",device_replacement:\"i-mate $1\",other:!0},{regex:\"Kyocera\\\\-([A-Za-z0-9]+)\",device_replacement:\"Kyocera $1\",other:!0},{regex:\"KWC\\\\-([A-Za-z0-9]+)\",device_replacement:\"Kyocera $1\",other:!0},{regex:\"Lenovo\\\\-([A-Za-z0-9]+)\",device_replacement:\"Lenovo $1\",manufacturer:\"Lenovo\"},{regex:\"Lenovo\\\\_([A-Za-z0-9]+)\",device_replacement:\"Lenovo $1\",manufacturer:\"Levovo\"},{regex:\"LG/([A-Za-z0-9]+)\",device_replacement:\"LG $1\",manufacturer:\"LG\"},{regex:\"LG-LG([A-Za-z0-9]+)\",device_replacement:\"LG $1\",manufacturer:\"LG\"},{regex:\"LGE-LG([A-Za-z0-9]+)\",device_replacement:\"LG $1\",manufacturer:\"LG\"},{regex:\"LGE VX([A-Za-z0-9]+)\",device_replacement:\"LG $1\",manufacturer:\"LG\"},{regex:\"LG ([A-Za-z0-9]+)\",device_replacement:\"LG $1\",manufacturer:\"LG\"},{regex:\"LGE LG\\\\-AX([A-Za-z0-9]+)\",device_replacement:\"LG $1\",manufacturer:\"LG\"},{regex:\"LG\\\\-([A-Za-z0-9]+)\",device_replacement:\"LG $1\",manufacturer:\"LG\"},{regex:\"LGE\\\\-([A-Za-z0-9]+)\",device_replacement:\"LG $1\",manufacturer:\"LG\"},{regex:\"LG([A-Za-z0-9]+)\",device_replacement:\"LG $1\",manufacturer:\"LG\"},{regex:\"(KIN)\\\\.One (\\\\d+)\\\\.(\\\\d+)\",device_replacement:\"Microsoft $1\"},{regex:\"(KIN)\\\\.Two (\\\\d+)\\\\.(\\\\d+)\",device_replacement:\"Microsoft $1\"},{regex:\"(Motorola)\\\\-([A-Za-z0-9]+)\",manufacturer:\"Motorola\"},{regex:\"MOTO\\\\-([A-Za-z0-9]+)\",device_replacement:\"Motorola $1\",manufacturer:\"Motorola\"},{regex:\"MOT\\\\-([A-Za-z0-9]+)\",device_replacement:\"Motorola $1\",manufacturer:\"Motorola\"},{regex:\"Philips([A-Za-z0-9]+)\",device_replacement:\"Philips $1\",manufacturer:\"Philips\"},{regex:\"Philips ([A-Za-z0-9]+)\",device_replacement:\"Philips $1\",manufacturer:\"Philips\"},{regex:\"SAMSUNG-([A-Za-z0-9\\\\-]+)\",device_replacement:\"Samsung $1\",manufacturer:\"Samsung\"},{regex:\"SAMSUNG\\\\; ([A-Za-z0-9\\\\-]+)\",device_replacement:\"Samsung $1\",manufacturer:\"Samsung\"},{regex:\"Softbank/1\\\\.0/([A-Za-z0-9]+)\",device_replacement:\"Softbank $1\",other:!0},{regex:\"Softbank/2\\\\.0/([A-Za-z0-9]+)\",device_replacement:\"Softbank $1\",other:!0},{regex:\"(hiptop|avantgo|plucker|xiino|blazer|elaine|up.browser|up.link|mmp|smartphone|midp|wap|vodafone|o2|pocket|mobile|pda)\",device_replacement:\"Generic Smartphone\"},{regex:\"^(1207|3gso|4thp|501i|502i|503i|504i|505i|506i|6310|6590|770s|802s|a wa|acer|acs\\\\-|airn|alav|asus|attw|au\\\\-m|aur |aus |abac|acoo|aiko|alco|alca|amoi|anex|anny|anyw|aptu|arch|argo|bell|bird|bw\\\\-n|bw\\\\-u|beck|benq|bilb|blac|c55/|cdm\\\\-|chtm|capi|comp|cond|craw|dall|dbte|dc\\\\-s|dica|ds\\\\-d|ds12|dait|devi|dmob|doco|dopo|el49|erk0|esl8|ez40|ez60|ez70|ezos|ezze|elai|emul|eric|ezwa|fake|fly\\\\-|fly\\\\_|g\\\\-mo|g1 u|g560|gf\\\\-5|grun|gene|go.w|good|grad|hcit|hd\\\\-m|hd\\\\-p|hd\\\\-t|hei\\\\-|hp i|hpip|hs\\\\-c|htc |htc\\\\-|htca|htcg)\",device_replacement:\"Generic Feature Phone\"},{regex:\"^(htcp|htcs|htct|htc\\\\_|haie|hita|huaw|hutc|i\\\\-20|i\\\\-go|i\\\\-ma|i230|iac|iac\\\\-|iac/|ig01|im1k|inno|iris|jata|java|kddi|kgt|kgt/|kpt |kwc\\\\-|klon|lexi|lg g|lg\\\\-a|lg\\\\-b|lg\\\\-c|lg\\\\-d|lg\\\\-f|lg\\\\-g|lg\\\\-k|lg\\\\-l|lg\\\\-m|lg\\\\-o|lg\\\\-p|lg\\\\-s|lg\\\\-t|lg\\\\-u|lg\\\\-w|lg/k|lg/l|lg/u|lg50|lg54|lge\\\\-|lge/|lynx|leno|m1\\\\-w|m3ga|m50/|maui|mc01|mc21|mcca|medi|meri|mio8|mioa|mo01|mo02|mode|modo|mot |mot\\\\-|mt50|mtp1|mtv |mate|maxo|merc|mits|mobi|motv|mozz|n100|n101|n102|n202|n203|n300|n302|n500|n502|n505|n700|n701|n710|nec\\\\-|nem\\\\-|newg|neon)\",device_replacement:\"Generic Feature Phone\"},{regex:\"^(netf|noki|nzph|o2 x|o2\\\\-x|opwv|owg1|opti|oran|ot\\\\-s|p800|pand|pg\\\\-1|pg\\\\-2|pg\\\\-3|pg\\\\-6|pg\\\\-8|pg\\\\-c|pg13|phil|pn\\\\-2|pt\\\\-g|palm|pana|pire|pock|pose|psio|qa\\\\-a|qc\\\\-2|qc\\\\-3|qc\\\\-5|qc\\\\-7|qc07|qc12|qc21|qc32|qc60|qci\\\\-|qwap|qtek|r380|r600|raks|rim9|rove|s55/|sage|sams|sc01|sch\\\\-|scp\\\\-|sdk/|se47|sec\\\\-|sec0|sec1|semc|sgh\\\\-|shar|sie\\\\-|sk\\\\-0|sl45|slid|smb3|smt5|sp01|sph\\\\-|spv |spv\\\\-|sy01|samm|sany|sava|scoo|send|siem|smar|smit|soft|sony|t\\\\-mo|t218|t250|t600|t610|t618|tcl\\\\-|tdg\\\\-|telm|tim\\\\-|ts70|tsm\\\\-|tsm3|tsm5|tx\\\\-9|tagt)\",device_replacement:\"Generic Feature Phone\"},{regex:\"^(talk|teli|topl|tosh|up.b|upg1|utst|v400|v750|veri|vk\\\\-v|vk40|vk50|vk52|vk53|vm40|vx98|virg|vite|voda|vulc|w3c |w3c\\\\-|wapj|wapp|wapu|wapm|wig |wapi|wapr|wapv|wapy|wapa|waps|wapt|winc|winw|wonu|x700|xda2|xdag|yas\\\\-|your|zte\\\\-|zeto|aste|audi|avan|blaz|brew|brvw|bumb|ccwa|cell|cldc|cmd\\\\-|dang|eml2|fetc|hipt|http|ibro|idea|ikom|ipaq|jbro|jemu|jigs|keji|kyoc|kyok|libw|m\\\\-cr|midp|mmef|moto|mwbp|mywa|newt|nok6|o2im|pant|pdxg|play|pluc|port|prox|rozo|sama|seri|smal|symb|treo|upsi|vx52|vx53|vx60|vx61|vx70|vx80|vx81|vx83|vx85|wap\\\\-|webc|whit|wmlb|xda\\\\-|xda\\\\_)\",device_replacement:\"Generic Feature Phone\"},{regex:\"(bot|borg|google(^tv)|yahoo|slurp|msnbot|msrbot|openbot|archiver|netresearch|lycos|scooter|altavista|teoma|gigabot|baiduspider|blitzbot|oegp|charlotte|furlbot|http%20client|polybot|htdig|ichiro|mogimogi|larbin|pompos|scrubby|searchsight|seekbot|semanticdiscovery|silk|snappy|speedy|spider|voila|vortex|voyager|zao|zeal|fast\\\\-webcrawler|converacrawler|dataparksearch|findlinks)\",device_replacement:\"Spider\"}],mobile_browser_families:[\"Firefox Mobile\",\"Opera Mobile\",\"Opera Mini\",\"Mobile Safari\",\"webOS\",\"IE Mobile\",\"Playstation Portable\",\"Nokia\",\"Blackberry\",\"Palm\",\"Silk\",\"Android\",\"Maemo\",\"Obigo\",\"Netfront\",\"AvantGo\",\"Teleca\",\"SEMC-Browser\",\"Bolt\",\"Iris\",\"UP.Browser\",\"Symphony\",\"Minimo\",\"Bunjaloo\",\"Jasmine\",\"Dolfin\",\"Polaris\",\"BREW\",\"Chrome Mobile\",\"Chrome Mobile iOS\",\"UC Browser\",\"Tizen Browser\"]};e.parsers=[\"device_parsers\",\"browser_parsers\",\"os_parsers\",\"mobile_os_families\",\"mobile_browser_families\"],e.types=[\"browser\",\"os\",\"device\"],e.regexes=r||function(){var r={};return e.parsers.map(function(e){r[e]=[]}),r}(),e.families=function(){var r={};return e.types.map(function(e){r[e]=[]}),r}();var a=Array.prototype,o=(Object.prototype,Function.prototype,a.forEach);a.indexOf;var i=function(e,r){for(var a={},o=0;r.length>o&&!(a=r[o](e));o++);return a},n=function(e,r){t(e,function(e){t(r,function(r){delete e[r]})})},t=forEach=function(e,r,a){if(null!=e)if(o&&e.forEach===o)e.forEach(r,a);else if(e.length===+e.length)for(var i=0,n=e.length;n>i;i++)r.call(a,e[i],i,e);else for(var t in e)_.has(e,t)&&r.call(a,e[t],t,e)},l=function(e){return!(!e||e===undefined||null==e)},d=function(e){var r=\"\";return e=e||{},l(e)&&l(e.major)&&(r+=e.major,l(e.minor)&&(r+=\".\"+e.minor,l(e.patch)&&(r+=\".\"+e.patch))),r},c=function(e){e=e||{};var r=d(e);return r&&(r=\" \"+r),e&&l(e.family)?e.family+r:\"\"};return e.parse=function(r){var a=function(r){return e.regexes[r+\"_parsers\"].map(function(e){function a(r){var a=r.match(o);if(!a)return null;var t={};return t.family=(i?i.replace(\"$1\",a[1]):a[1])||\"other\",t.major=parseInt(n?n:a[2])||null,t.minor=a[3]?parseInt(a[3]):null,t.patch=a[4]?parseInt(a[4]):null,t.tablet=e.tablet,t.man=e.manufacturer||null,t}var o=RegExp(e.regex),i=e[(\"browser\"===r?\"family\":r)+\"_replacement\"],n=e.major_version_replacement;return a})},o=function(){},t=a(\"browser\"),m=a(\"os\"),p=a(\"device\"),s=new o;s.source=r,s.browser=i(r,t),l(s.browser)?(s.browser.name=c(s.browser),s.browser.version=d(s.browser)):s.browser={},s.os=i(r,m),l(s.os)?(s.os.name=c(s.os),s.os.version=d(s.os)):s.os={},s.device=i(r,p),l(s.device)?(s.device.name=c(s.device),s.device.version=d(s.device)):s.device={tablet:!1,family:\"Other\"};var g={};return e.regexes.mobile_browser_families.map(function(e){g[e]=!0}),e.regexes.mobile_os_families.map(function(e){g[e]=!0}),s.device.type=\"Spider\"===s.browser.family?\"Spider\":s.browser.tablet||s.os.tablet||s.device.tablet?\"Tablet\":g.hasOwnProperty(s.browser.family)?\"Mobile\":\"Desktop\",s.device.manufacturer=s.browser.man||s.os.man||s.device.man||null,n([s.browser,s.os,s.device],[\"tablet\",\"man\"]),s},e}();\"undefined\"!=typeof exports?(\"undefined\"!=typeof module&&module.exports&&(exports=module.exports=r),exports.detect=r):e.detect=r,\"function\"==typeof define&&define.amd&&define(function(){return r})})(window);","sys_class_name":"sys_ui_script","sys_id":"b8cf7016df802200ba13a4836bf26343","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/69996b7b04f12210559073c06a02f7e2","value":"69996b7b04f12210559073c06a02f7e2"},"ui_type":"0","sys_update_name":"sys_ui_script_b8cf7016df802200ba13a4836bf26343","sys_updated_by":"system","sys_created_on":"2016-06-18 14:18:51","name":"detect.js","sys_name":"detect.js","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"0","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2018-05-08 10:52:07","sys_tags":"","script_name":"duration","script":"angular.module(\"sn.chg_soc.duration\", [])\n\t.constant(\"DURATION\", {\n\t\tTIME: {\n\t\t\tSECONDS: \"seconds\",\n\t\t\tMINUTES: \"minutes\",\n\t\t\tHOURS: \"hours\",\n\t\t\tDAYS: \"days\",\n\t\t\tWEEKS: \"weeks\"\n\t\t}\n\t})\n\t.service(\"durationFormatter\", [\"i18n\", \"DURATION\", function(i18n, DURATION) {\n\t\tvar durationFormatter = this;\n\n\t\tfunction getUnitDurationDisplay(durations, unit) {\n\t\t\tif (durations[unit] === 0)\n\t\t\t\treturn \"\";\n\t\t\tvar displayUnit = unit;\n\t\t\tif (durations[unit] === 1)\n\t\t\t\tdisplayUnit = unit.substring(0, unit.length - 1);\n\t\t\treturn i18n.format(i18n.getMessage(\"{0} \" + displayUnit), durations[unit]);\n\t\t}\n\n\t\tfunction getDurationDisplay(durations, arrUnit) {\n\t\t\tvar display = \"\";\n\t\t\tvar displayObj = [];\n\n\t\t\t// If value exceeds a week and needs to be presented in days\n\t\t\tif (arrUnit.length === 1 && DURATION.TIME.DAYS === arrUnit[0])\n\t\t\t\treturn i18n.format(i18n.getMessage(\"{0} days\"), Math.floor(durations.asDays/60/60/24));\n\n\t\t\tarrUnit.forEach(function(unit) {\n\t\t\t\tif (durations[unit] === 0)\n\t\t\t\t\treturn;\n\t\t\t\tvar unitObj = {\n\t\t\t\t\tunitDisplay: unit,\n\t\t\t\t\tunitValue: durations[unit]\n\t\t\t\t};\n\t\t\t\tif (durations[unit] === 1)\n\t\t\t\t\tunitObj.unitDisplay = unit.substring(0, unit.length - 1);\n\t\t\t\tdisplayObj.push(unitObj);\n\t\t\t});\n\n\t\t\tvar displayUnitValues = [];\n\t\t\tfor (var i = 0; i < displayObj.length; i++) {\n\t\t\t\tdisplay += \"{\" + i + \"} \" + displayObj[i].unitDisplay + \", \";\n\t\t\t\tdisplayUnitValues.push(displayObj[i].unitValue);\n\t\t\t}\n\t\t\tdisplay = (display.endsWith(\", \")) ? display.substring(0, display.length - 2) : display;\n\n\t\t\treturn display ? i18n.format(i18n.getMessage(display), displayUnitValues) : \"\";\n\t\t}\n\n\t\tdurationFormatter.buildDurationDisplay = function(startDate, endDate) {\n\t\t\tvar duration = moment.duration(moment(endDate).diff(moment(startDate))).asSeconds();\n\t\t\tvar durations = {\n\t\t\t\tduration: duration,\n\t\t\t\tseconds: moment.duration(duration, DURATION.TIME.SECONDS).seconds(),\n\t\t\t\tminutes: moment.duration(duration, DURATION.TIME.SECONDS).minutes(),\n\t\t\t\thours: moment.duration(duration, DURATION.TIME.SECONDS).hours(),\n\t\t\t\tdays: moment.duration(duration, DURATION.TIME.SECONDS).days(),\n\t\t\t\tasDays: moment.duration(duration, DURATION.TIME.DAYS).asDays(),\n\t\t\t};\n\n\t\t\tif (duration < 1)\n\t\t\t\treturn i18n.format(i18n.getMessage(\"0 seconds\"));\n\t\t\t// Less than a minute\n\t\t\telse if (duration < 60)\n\t\t\t\treturn getDurationDisplay(durations, [DURATION.TIME.SECONDS]);\n\t\t\t// Less than an hour\n\t\t\telse if (duration < 3600)\n\t\t\t\treturn getDurationDisplay(durations, [DURATION.TIME.MINUTES]);\n\t\t\t// Less than a day\n\t\t\telse if (duration < 86400)\n\t\t\t\treturn getDurationDisplay(durations, [DURATION.TIME.HOURS, DURATION.TIME.MINUTES]);\n\t\t\t// Less than a week\n\t\t\telse if (duration < 604800)\n\t\t\t\treturn getDurationDisplay(durations, [DURATION.TIME.DAYS, DURATION.TIME.HOURS]);\n\t\t\telse\n\t\t\t\treturn getDurationDisplay(durations, [DURATION.TIME.DAYS]);\n\t\t};\n\t}]);","sys_class_name":"sys_ui_script","sys_id":"b95fd9ffc39303009f93dfdc64d3aecb","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"ui_type":"0","sys_update_name":"sys_ui_script_b95fd9ffc39303009f93dfdc64d3aecb","sys_updated_by":"admin","sys_created_on":"2018-01-03 14:17:36","name":"sn_chg_soc.duration","sys_name":"sn_chg_soc.duration","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"0","active":"true","description":"Directive snVcabModal.","use_scoped_format":"false","global":"false","sys_updated_on":"2016-10-13 14:57:25","sys_tags":"","script_name":"vmisc.snVcabModal","script":"(function ($) {\n\t'use strict';\n\n\tfunction getCtrlId (id) {\n\t\treturn 'vcabModal_' + id;\n\t}\n\n\tangular.module('sn.itsm.vcab.misc')\n\t.constant('VcabModalCloseReasons', {\n\t\tOK: 'ok',\n\t\tCANCEL: 'cancel',\n\t\tUNKNOWN: undefined\n\t})\n\t.controller('VcabModalInstanceCtrl', function ($scope, VcabModalCloseReasons, data) {\n\t\t$scope.title = data.title;\n\t\t$scope.okBtnLabel = data.okBtnLabel;\n\t\t$scope.cancelBtnLabel = data.cancelBtnLabel;\n\t\t$scope.instance = data.instance;\n\n\t\tvar Ctrl = data.ownerCtrl;\n\n\t\tfunction enableButtons() {\n\t\t\t$scope.enableButtons = true;\n\t\t}\n\t\tenableButtons();\n\n\t\t$scope.ok = function () {\n\t\t\t$scope.enableButtons = false;\n\t\t\tCtrl._canClose(VcabModalCloseReasons.OK).then(function () {\n\t\t\t\tCtrl.close(VcabModalCloseReasons.OK);\n\t\t\t\tenableButtons();\n\t\t\t}, enableButtons);\n\t\t};\n\t\t$scope.cancel = function () {\n\t\t\t$scope.enableButtons = false;\n\t\t\tCtrl._canClose(VcabModalCloseReasons.CANCEL).then(function () {\n\t\t\t\tCtrl.close(VcabModalCloseReasons.CANCEL);\n\t\t\t\tenableButtons();\n\t\t\t}, enableButtons);\n\t\t};\n\t})\n\t.directive('snVcabModal', function (getTemplateUrl, $uibModal, i18n, $rootScope, getController) {\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\tscope: {\n\t\t\t\tid: '@',\n\t\t\t\ttitle: '@',\n\t\t\t\tokBtnLabel: '@?',\n\t\t\t\tcancelBtnLabel: '@?',\n\t\t\t\twidgetData: '=',\n\t\t\t\topen: '=?'\n\t\t\t},\n\t\t\ttemplateUrl: getTemplateUrl('vcab_sn_vcab_modal.xml'),\n\t\t\tlink: function ($scope, el, attrs, Ctrl) {\n\t\t\t\tif (!$scope.okBtnLabel)\n\t\t\t\t\t$scope.okBtnLabel = i18n.getMessage('Ok');\n\t\t\t\tif (!$scope.cancelBtnLabel)\n\t\t\t\t\t$scope.cancelBtnLabel = i18n.getMessage('Cancel');\n\n\t\t\t\t$scope.$watch('open', function () {\n\t\t\t\t\tif ($scope.open)\n\t\t\t\t\t\tCtrl.open();\n\t\t\t\t});\n\t\t\t\t$scope.$on('$destroy', function () {\n\t\t\t\t\tgetController.deregister(getCtrlId($scope.id));\n\t\t\t\t});\n\t\t\t},\n\t\t\tcontroller: function ($scope, $q) {\n\t\t\t\tvar Ctrl = this;\n\t\t\t\tgetController.register(getCtrlId($scope.id), Ctrl);\n\t\t\t\tthis.open = function () {\n\t\t\t\t\tfunction onClose(reason) {\n\t\t\t\t\t\t$scope.mInstance = null;\n\t\t\t\t\t\t$scope.open = false;\n\t\t\t\t\t\t$rootScope.$broadcast('vcabmodal.closed', {id: $scope.id, reason: reason});\n\t\t\t\t\t}\n\t\t\t\t\tif (Ctrl.isOpen())\n\t\t\t\t\t\treturn;\n\t\t\t\t\t$scope.mInstance = $uibModal.open({\n\t\t\t\t\t\ttemplateUrl: 'vcab-modal.html',\n\t\t\t\t\t\tcontroller: 'VcabModalInstanceCtrl',\n\t\t\t\t\t\tresolve: {\n\t\t\t\t\t\t\tdata: function () {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\ttitle: $scope.title,\n\t\t\t\t\t\t\t\t\tokBtnLabel: $scope.okBtnLabel,\n\t\t\t\t\t\t\t\t\tcancelBtnLabel: $scope.cancelBtnLabel,\n\t\t\t\t\t\t\t\t\tinstance: $scope.widgetData,\n\t\t\t\t\t\t\t\t\townerCtrl: Ctrl\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\t$scope.mInstance.result.then(onClose, onClose);\n\t\t\t\t};\n\t\t\t\tthis.onBeforeClose = function (cb) {\n\t\t\t\t\tif (!$scope.onBeforeCloseL)\n\t\t\t\t\t\t$scope.onBeforeCloseL = [];\n\t\t\t\t\t$scope.onBeforeCloseL.push(cb);\n\t\t\t\t\treturn function dereg() {\n\t\t\t\t\t\t$scope.onBeforeCloseL.some(function (cb1, idx) {\n\t\t\t\t\t\t\tif (cb1 === cb) {\n\t\t\t\t\t\t\t\t$scope.onBeforeCloseL.splice(idx, 1);\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t\tthis._canClose = function (reason) {\n\t\t\t\t\tvar def = $q.defer();\n\t\t\t\t\tvar promisesCount = 0;\n\t\t\t\t\tvar resultsGotCount = 0;\n\t\t\t\t\tif ($scope.onBeforeCloseL)\n\t\t\t\t\t\t$scope.onBeforeCloseL.forEach(function (cb) {\n\t\t\t\t\t\t\tvar p = cb(reason);\n\t\t\t\t\t\t\tif (p) {\n\t\t\t\t\t\t\t\tpromisesCount++;\n\t\t\t\t\t\t\t\tp.then(function () {\n\t\t\t\t\t\t\t\t\tresultsGotCount++;\n\t\t\t\t\t\t\t\t\tif (promisesCount === resultsGotCount)\n\t\t\t\t\t\t\t\t\t\tdef.resolve();\n\t\t\t\t\t\t\t\t}, function () {\n\t\t\t\t\t\t\t\t\tdef.reject();\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\tif (promisesCount === 0)\n\t\t\t\t\t\tdef.resolve();\n\t\t\t\t\treturn def.promise;\n\t\t\t\t};\n\t\t\t\tthis.close = function (reason) {\n\t\t\t\t\tif ($scope.mInstance)\n\t\t\t\t\t\t$scope.mInstance.close(reason);\n\t\t\t\t};\n\t\t\t\tthis.isOpen = function () {\n\t\t\t\t\treturn !!$scope.mInstance;\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t})\n\t.factory('vcabModal', function (getController) {\n\t\treturn {\n\t\t\tgetInstanceCtrl: function (id) {\n\t\t\t\treturn getController(getCtrlId(id));\n\t\t\t}\n\t\t};\n\t});\n} (jQuery));","sys_class_name":"sys_ui_script","sys_id":"b9bae3b7d796220034d145bcce61030a","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"ui_type":"","sys_update_name":"sys_ui_script_b9bae3b7d796220034d145bcce61030a","sys_updated_by":"admin","sys_created_on":"2016-10-13 14:57:25","name":"sn_change_cab.vmisc.snVcabModal","sys_name":"sn_change_cab.vmisc.snVcabModal","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"84","active":"true","description":"Support for the impersonate button.","use_scoped_format":"false","global":"false","sys_updated_on":"2025-06-05 05:18:18","sys_tags":"","script_name":"","script":"var ImpersonateUser = Class.create();\n\nImpersonateUser.prototype = {\n\t\n\t/**\n \t* Pass in the id of the span that the impersonate user button is in along with the field\n \t* that will hold the impersonating user's name.\n \t*/\n\tinitialize: function(span_name, toggle_field_name) {\n\t\tthis.span_name = span_name;\n\t\tthis.toggle_field_name = toggle_field_name;\n\t\t\n\t\tCustomEvent.observe('user.login', this.updateImpersonateForLogin.bind(this));\n\t},\n\t\n\t/**\n \t* Login handler\n \t*/\n\tupdateImpersonateForLogin: function(/* GlideUser */ user) {\n\t\t// if you don't have the admin role and haven't previously impersonated, hide the button\n\t\tvar got_it = user.hasRole(\"impersonator\");\n\t\t\n\t\tvar toggle_field = gel(this.toggle_field_name);\n\t\tif (toggle_field.value != \"\")\n\t\t\tgot_it = true;\n\t\t\n\t\tvar span = gel(this.span_name);\n\t\tif (!got_it) {\n\t\t\thideObject(span);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tshowObjectInlineBlock(span);\n\t},\n\t\n\timpersonateUser: function() {\n\t\tvar dialogClass = GlideDialogWindow,\n\t\t\twidth;\n\t\tif (window.GlideModal) {\n\t\t\tdialogClass = GlideModal;\n\t\t\twidth = 400;\n\t\t}\n\t\tvar gDialog = new dialogClass('dialog_imp_user', false, width);\n\t\tgDialog.setPreference('table', 'impersonate_dialog');\n\t\tgDialog.setTitle(new GwtMessage().getMessage('Impersonate User'));\n\t\tgDialog.render();\n\t},\n\t\n\tunimpersonateUser: function() {\n\t\tvar dialogClass = GlideDialogWindow,\n\t\t\twidth;\n\t\tif (window.GlideModal) {\n\t\t\tdialogClass = GlideModal;\n\t\t\twidth = 400;\n\t\t}\n\t\t\n\t\tvar gDialog = new dialogClass('dialog_imp_user', false, width);\n\t\tgDialog.setPreference('table', 'unimpersonate_user');\n\t\tgDialog.setTitle(new GwtMessage().getMessage('Unimpersonate User'));\n\t\tgDialog.render();\n\t}\n};","sys_class_name":"sys_ui_script","sys_id":"bb370b000a0a0a7901cc2471149f32af","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/72532b7304312210559073c06a02f7c6","value":"72532b7304312210559073c06a02f7c6"},"ui_type":"0","sys_update_name":"sys_ui_script_bb370b000a0a0a7901cc2471149f32af","sys_updated_by":"system","sys_created_on":"2007-05-23 23:13:05","name":"ImpersonateButton","sys_name":"ImpersonateButton","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"glide.maint","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"0","active":"true","description":"Module to handle when the page is loading information","use_scoped_format":"false","global":"false","sys_updated_on":"2018-02-14 12:28:20","sys_tags":"","script_name":"loading","script":"/* Module to handle when the page is loading information */\nangular.module(\"sn.chg_soc.loading\", [])\n\t\t.service('xhrInterceptor', ['$q', '$rootScope', '$log', function($q, $rootScope, $log) {\n\t\t\t\t\"use strict\";\n\t\t\t\tvar xhrCreations = 0;\n\t\t\t\tvar xhrResolutions = 0;\n\n\t\t\t\tfunction isLoading() {\n\t\t\t\t\t\treturn xhrResolutions < xhrCreations;\n\t\t\t\t}\n\n\t\t\t\tfunction updateStatus() {\n\t\t\t\t\t\t$rootScope.loading = isLoading();\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\t\trequest: function (config) {\n\t\t\t\t\t\t\t\txhrCreations++;\n\t\t\t\t\t\t\t\tupdateStatus();\n\t\t\t\t\t\t\t\treturn config;\n\t\t\t\t\t\t},\n\t\t\t\t\t\trequestError: function (rejection) {\n\t\t\t\t\t\t\t\txhrResolutions++;\n\t\t\t\t\t\t\t\tupdateStatus();\n\t\t\t\t\t\t\t\t$log.error('Request error:', rejection);\n\t\t\t\t\t\t\t\treturn $q.reject(rejection);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tresponse: function (response) {\n\t\t\t\t\t\t\t\txhrResolutions++;\n\t\t\t\t\t\t\t\tupdateStatus();\n\t\t\t\t\t\t\t\treturn response;\n\t\t\t\t\t\t},\n\t\t\t\t\t\tresponseError: function (rejection) {\n\t\t\t\t\t\t\t\txhrResolutions++;\n\t\t\t\t\t\t\t\tupdateStatus();\n\t\t\t\t\t\t\t\t$log.error('Response error:', rejection);\n\t\t\t\t\t\t\t\treturn $q.reject(rejection);\n\t\t\t\t\t\t}\n\t\t\t\t};\n\t\t}]);\n","sys_class_name":"sys_ui_script","sys_id":"bef9d19d5798130035ae4786cc94f9a5","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"ui_type":"","sys_update_name":"sys_ui_script_bef9d19d5798130035ae4786cc94f9a5","sys_updated_by":"admin","sys_created_on":"2018-02-14 12:28:20","name":"sn_chg_soc.loading","sys_name":"sn_chg_soc.loading","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"73","active":"true","description":"SNC Color Picker","use_scoped_format":"false","global":"false","sys_updated_on":"2022-04-29 14:26:29","sys_tags":"","script_name":"snColorPicker","script":"angular.module(\"sn_chg_soc_cp.snColorPicker\", [\"ui.bootstrap\", \"ui.bootstrap.tooltip\", \"ui.bootstrap.popover\",\"sn.common.i18n\", \"sn.chg_soc.accessibility\"])\n.constant(\"VIEW\", {\n\t\"HSL\": \"hsl\",\n\t\"PALLET\" : \"pallet\",\n\t\"NONE\" : \"none\",\n\t\"KEYS\" : {\n\t\t\"TABKEY\"          : 9,\n\t\t\"ENTER\"           : 13,\n\t\t\"ESCAPE\"          : 27\n\t}\n})\n.directive(\"focusThis\", function($timeout) {\n    return {\n        scope: { trigger: \"@focusThis\" },\n        link: function(scope, element) {\n            scope.$watch(\"trigger\", function(value) {\n                if (value === \"true\")\n                    $timeout(function() { element[0].focus(); });\n            });\n        }\n    };\n})\n.directive(\"trapTabFocus\", [\"VIEW\", \"$timeout\", function (VIEW, $timeout) {\n\treturn {\n\t\trestrict: \"A\",\n\t\tlink: function ($scope, $element, $attr) {\n\t\t\t$element.on(\"keyup\", function(event) {\n\t\t\t\tif (event.keyCode === VIEW.KEYS.ESCAPE) {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t$timeout(function() { $scope.$parent.action.cancel(); });\n\t\t\t\t}\n\t\t\t});\n\t\t\t$element.on(\"keydown\", function(event) {\n\t\t\t\tif (event.keyCode === VIEW.KEYS.TABKEY) {\n\t\t\t\t\tvar tabEls = $element.find(\":tabbable\");\n\t\t\t\t\tvar firstEl = tabEls.first();\n\t\t\t\t\tvar lastEl = tabEls.last();\n\t\t\t\t\t// tab and last element then focus on first element\n\t\t\t\t\tif (!event.shiftKey && event.target === lastEl[0]) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\tfirstEl.focus();\n\t\t\t\t\t}\n\t\t\t\t\t// shift+tab and first element then focus on last element\n\t\t\t\t\tif (event.shiftKey && event.target === firstEl[0]) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\tlastEl.focus();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (event.keyCode === VIEW.KEYS.ESCAPE) {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n}])\n.run([\"$templateCache\", function($templateCache) {\n\t$templateCache.put(\"sn-cp-c63eae2d5710130034d169202d94f92f.html\",\n\t\t'<div sn-color-picker-control trap-tab-focus=\"\" class=\"cp-container\" ng-class=\"{' +\n\t\t\t\t\t\t\t\t\t'\\'alpha\\' : options.alpha && state.view != pallet,' +\n\t\t\t\t\t\t\t\t\t'\\'pallet\\': state.view == \\'pallet\\',' +\n\t\t\t\t\t\t\t\t\t'\\'rgb\\': options.compView && state.view == \\'hsl\\'' +\n\t\t\t\t\t\t\t\t\t'}\">' +\n\t\t\t'<sn-color-picker-tabs ng-if=\"options.tabs\"></sn-color-picker-tabs>' +\n\t\t\t'<sn-color-picker-hsl ng-style=\"state.view == \\'hsl\\' ? {} : {\\'display\\': \\'none\\'}\"></sn-color-picker-hsl>' +\n\t\t\t'<sn-color-picker-pallet ng-style=\"state.view == \\'pallet\\' ? {} : {\\'display\\': \\'none\\'}\"></sn-color-picker-pallet>' +\n\t\t\t'<sn-color-picker-save-cancel ng-if=\"options.saveCancel\"></sn-color-picker-save-cancel>' +\n\t\t'</div>'\n\t);\n}])\n.directive(\"afterRender\", [\"$timeout\", function ($timeout) {\n\treturn {\n\t\trestrict: 'A',\n\t\tterminal: true,\n\t\ttransclude: false,\n\t\tscope: {\n\t\t\tafterRender: '&'\n\t\t},\n\t\tlink: function (scope) {\n\t\t\t$timeout(function() {\n\t\t\t\tscope.afterRender();\n\t\t\t}, 0);\n\t\t}\n\t};\n}])\n.directive(\"snColorPicker\", [\"$compile\", \"$document\", \"$timeout\", \"VIEW\", \"i18n\", function($compile, $document, $timeout, VIEW, i18n) {\n\t/**\n\t * Represents a colour. Deals with colourspace translations etc.\n\t * @constructor\n\t */\n\tfunction Color() {\n\t\t// Default to a blue\n\t\tthis.r = 10;\n\t\tthis.g = 10;\n\t\tthis.b = 252;\n\t\tthis.a = 1;\n\t}\n\tColor.prototype = (function() {\n\t\t// Forward lookup of color names\n\t\tvar W3C_COLOR = {\n\t\t\t\"aliceblue\": \"#f0f8ff\",\n\t\t\t\"antiquewhite\": \"#faebd7\",\n\t\t\t\"aqua\": \"#00ffff\",\n\t\t\t\"aquamarine\": \"#7fffd4\",\n\t\t\t\"azure\": \"#f0ffff\",\n\t\t\t\"beige\": \"#f5f5dc\",\n\t\t\t\"bisque\": \"#ffe4c4\",\n\t\t\t\"black\": \"#000000\",\n\t\t\t\"blanchedalmond\": \"#ffebcd\",\n\t\t\t\"blue\": \"#0000ff\",\n\t\t\t\"blueviolet\": \"#8a2be2\",\n\t\t\t\"brown\": \"#a52a2a\",\n\t\t\t\"burlywood\": \"#deb887\",\n\t\t\t\"cadetblue\": \"#5f9ea0\",\n\t\t\t\"chartreuse\": \"#7fff00\",\n\t\t\t\"chocolate\": \"#d2691e\",\n\t\t\t\"coral\": \"#ff7f50\",\n\t\t\t\"cornflowerblue\": \"#6495ed\",\n\t\t\t\"cornsilk\": \"#fff8dc\",\n\t\t\t\"crimson\": \"#dc143c\",\n\t\t\t\"cyan\": \"#00ffff\",\n\t\t\t\"darkblue\": \"#00008b\",\n\t\t\t\"darkcyan\": \"#008b8b\",\n\t\t\t\"darkgoldenrod\": \"#b8860b\",\n\t\t\t\"darkgray\": \"#a9a9a9\",\n\t\t\t\"darkgreen\": \"#006400\",\n\t\t\t\"darkkhaki\": \"#bdb76b\",\n\t\t\t\"darkmagenta\": \"#8b008b\",\n\t\t\t\"darkolivegreen\": \"#556b2f\",\n\t\t\t\"darkorange\": \"#ff8c00\",\n\t\t\t\"darkorchid\": \"#9932cc\",\n\t\t\t\"darkred\": \"#8b0000\",\n\t\t\t\"darksalmon\": \"#e9967a\",\n\t\t\t\"darkseagreen\": \"#8fbc8f\",\n\t\t\t\"darkslateblue\": \"#483d8b\",\n\t\t\t\"darkslategray\": \"#2f4f4f\",\n\t\t\t\"darkturquoise\": \"#00ced1\",\n\t\t\t\"darkviolet\": \"#9400d3\",\n\t\t\t\"deeppink\": \"#ff1493\",\n\t\t\t\"deepskyblue\": \"#00bfff\",\n\t\t\t\"dimgray\": \"#696969\",\n\t\t\t\"dodgerblue\": \"#1e90ff\",\n\t\t\t\"firebrick\": \"#b22222\",\n\t\t\t\"floralwhite\": \"#fffaf0\",\n\t\t\t\"forestgreen\": \"#228b22\",\n\t\t\t\"fuchsia\": \"#ff00ff\",\n\t\t\t\"gainsboro\": \"#dcdcdc\",\n\t\t\t\"ghostwhite\": \"#f8f8ff\",\n\t\t\t\"gold\": \"#ffd700\",\n\t\t\t\"goldenrod\": \"#daa520\",\n\t\t\t\"gray\": \"#808080\",\n\t\t\t\"green\": \"#008000\",\n\t\t\t\"greenyellow\": \"#adff2f\",\n\t\t\t\"honeydew\": \"#f0fff0\",\n\t\t\t\"hotpink\": \"#ff69b4\",\n\t\t\t\"indianred\": \"#cd5c5c\",\n\t\t\t\"indigo\": \"#4b0082\",\n\t\t\t\"ivory\": \"#fffff0\",\n\t\t\t\"khaki\": \"#f0e68c\",\n\t\t\t\"lavender\": \"#e6e6fa\",\n\t\t\t\"lavenderblush\": \"#fff0f5\",\n\t\t\t\"lawngreen\": \"#7cfc00\",\n\t\t\t\"lemonchiffon\": \"#fffacd\",\n\t\t\t\"lightblue\": \"#add8e6\",\n\t\t\t\"lightcoral\": \"#f08080\",\n\t\t\t\"lightcyan\": \"#e0ffff\",\n\t\t\t\"lightgoldenrodyellow\": \"#fafad2\",\n\t\t\t\"lightgrey\": \"#d3d3d3\",\n\t\t\t\"lightgreen\": \"#90ee90\",\n\t\t\t\"lightpink\": \"#ffb6c1\",\n\t\t\t\"lightsalmon\": \"#ffa07a\",\n\t\t\t\"lightseagreen\": \"#20b2aa\",\n\t\t\t\"lightskyblue\": \"#87cefa\",\n\t\t\t\"lightslategray\": \"#778899\",\n\t\t\t\"lightsteelblue\": \"#b0c4de\",\n\t\t\t\"lightyellow\": \"#ffffe0\",\n\t\t\t\"lime\": \"#00ff00\",\n\t\t\t\"limegreen\": \"#32cd32\",\n\t\t\t\"linen\": \"#faf0e6\",\n\t\t\t\"magenta\": \"#ff00ff\",\n\t\t\t\"maroon\": \"#800000\",\n\t\t\t\"mediumaquamarine\": \"#66cdaa\",\n\t\t\t\"mediumblue\": \"#0000cd\",\n\t\t\t\"mediumorchid\": \"#ba55d3\",\n\t\t\t\"mediumpurple\": \"#9370d8\",\n\t\t\t\"mediumseagreen\": \"#3cb371\",\n\t\t\t\"mediumslateblue\": \"#7b68ee\",\n\t\t\t\"mediumspringgreen\": \"#00fa9a\",\n\t\t\t\"mediumturquoise\": \"#48d1cc\",\n\t\t\t\"mediumvioletred\": \"#c71585\",\n\t\t\t\"midnightblue\": \"#191970\",\n\t\t\t\"mintcream\": \"#f5fffa\",\n\t\t\t\"mistyrose\": \"#ffe4e1\",\n\t\t\t\"moccasin\": \"#ffe4b5\",\n\t\t\t\"navajowhite\": \"#ffdead\",\n\t\t\t\"navy\": \"#000080\",\n\t\t\t\"oldlace\": \"#fdf5e6\",\n\t\t\t\"olive\": \"#808000\",\n\t\t\t\"olivedrab\": \"#6b8e23\",\n\t\t\t\"orange\": \"#ffa500\",\n\t\t\t\"orangered\": \"#ff4500\",\n\t\t\t\"orchid\": \"#da70d6\",\n\t\t\t\"palegoldenrod\": \"#eee8aa\",\n\t\t\t\"palegreen\": \"#98fb98\",\n\t\t\t\"paleturquoise\": \"#afeeee\",\n\t\t\t\"palevioletred\": \"#d87093\",\n\t\t\t\"papayawhip\": \"#ffefd5\",\n\t\t\t\"peachpuff\": \"#ffdab9\",\n\t\t\t\"peru\": \"#cd853f\",\n\t\t\t\"pink\": \"#ffc0cb\",\n\t\t\t\"plum\": \"#dda0dd\",\n\t\t\t\"powderblue\": \"#b0e0e6\",\n\t\t\t\"purple\": \"#800080\",\n\t\t\t\"red\": \"#ff0000\",\n\t\t\t\"rosybrown\": \"#bc8f8f\",\n\t\t\t\"royalblue\": \"#4169e1\",\n\t\t\t\"saddlebrown\": \"#8b4513\",\n\t\t\t\"salmon\": \"#fa8072\",\n\t\t\t\"sandybrown\": \"#f4a460\",\n\t\t\t\"seagreen\": \"#2e8b57\",\n\t\t\t\"seashell\": \"#fff5ee\",\n\t\t\t\"sienna\": \"#a0522d\",\n\t\t\t\"silver\": \"#c0c0c0\",\n\t\t\t\"skyblue\": \"#87ceeb\",\n\t\t\t\"slateblue\": \"#6a5acd\",\n\t\t\t\"slategray\": \"#708090\",\n\t\t\t\"snow\": \"#fffafa\",\n\t\t\t\"springgreen\": \"#00ff7f\",\n\t\t\t\"steelblue\": \"#4682b4\",\n\t\t\t\"tan\": \"#d2b48c\",\n\t\t\t\"teal\": \"#008080\",\n\t\t\t\"thistle\": \"#d8bfd8\",\n\t\t\t\"tomato\": \"#ff6347\",\n\t\t\t\"turquoise\": \"#40e0d0\",\n\t\t\t\"violet\": \"#ee82ee\",\n\t\t\t\"wheat\": \"#f5deb3\",\n\t\t\t\"white\": \"#ffffff\",\n\t\t\t\"whitesmoke\": \"#f5f5f5\",\n\t\t\t\"yellow\": \"#ffff00\",\n\t\t\t\"yellowgreen\": \"#9acd32\"\n\t\t};\n\n\t\t// Reverse lookup of colour names\n\t\tvar REV_W3C_COLOR = {};\n\t\tfor (var key in W3C_COLOR)\n\t\t\tREV_W3C_COLOR[W3C_COLOR[key]] = key;\n\n\t\t/**\n\t\t * Pads single character hex color to double character e.g. F -> FF\n\t\t * @param {string} colorHex\n\t\t */\n\t\tfunction padColorHex(colorHex) {\n\t\t\treturn colorHex.length < 2 ? colorHex + colorHex : colorHex;\n\t\t}\n\n\t\t//Conversions for valid W3C CSS colour types\n\t\tvar CONVERT = {\n\t\t\t\"RGB_3\": {\n\t\t\t\tp: /^\\s*#([0-9a-f]{1})([0-9a-f]{1})([0-9a-f]{1})\\s*$/i,\n\t\t\t\tf: function(match) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tr: parseInt(padColorHex(match[1]), 16),\n\t\t\t\t\t\tg: parseInt(padColorHex(match[2]), 16),\n\t\t\t\t\t\tb: parseInt(padColorHex(match[3]), 16),\n\t\t\t\t\t\ta: 1\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"RGB_6\": {\n\t\t\t\tp: /^\\s*#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})\\s*$/i,\n\t\t\t\tf: function(match) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tr: parseInt(match[1], 16),\n\t\t\t\t\t\tg: parseInt(match[2], 16),\n\t\t\t\t\t\tb: parseInt(match[3], 16),\n\t\t\t\t\t\ta: 1\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"RGBA_4\": {\n\t\t\t\tp: /^\\s*#([0-9a-f]{1})([0-9a-f]{1})([0-9a-f]{1})([0-9a-f]{1})\\s*$/i,\n\t\t\t\tf: function(match){\n\t\t\t\t\treturn {\n\t\t\t\t\t\tr: parseInt(padColorHex(match[1]), 16),\n\t\t\t\t\t\tg: parseInt(padColorHex(match[2]), 16),\n\t\t\t\t\t\tb: parseInt(padColorHex(match[3]), 16),\n\t\t\t\t\t\ta: enforceNormalizedRange(parseInt(padColorHex(match[4]), 16)/255)\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"RGBA_8\": {\n\t\t\t\tp: /^\\s*#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})\\s*$/i,\n\t\t\t\tf: function(match) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tr: parseInt(match[1], 16),\n\t\t\t\t\t\tg: parseInt(match[2], 16),\n\t\t\t\t\t\tb: parseInt(match[3], 16),\n\t\t\t\t\t\ta: enforceNormalizedRange(parseInt(match[4], 16)/255)\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"RGB_CSS\" : {\n\t\t\t\tp: /^\\s*rgb\\s*\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*\\)\\s*$/,\n\t\t\t\tf: function(match){\n\t\t\t\t\treturn {\n\t\t\t\t\t\tr: enforce8BitRange(match[1]),\n\t\t\t\t\t\tg: enforce8BitRange(match[2]),\n\t\t\t\t\t\tb: enforce8BitRange(match[3]),\n\t\t\t\t\t\ta:1\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"RGBA_CSS\" : {\n\t\t\t\tp: /^\\s*rgba\\s*\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(1(\\.0)?|0(.\\d+)?)\\s*\\)\\s*$/,\n\t\t\t\tf: function(match) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tr: enforce8BitRange(match[1]),\n\t\t\t\t\t\tg: enforce8BitRange(match[2]),\n\t\t\t\t\t\tb: enforce8BitRange(match[3]),\n\t\t\t\t\t\ta: enforceNormalizedRange(match[4])\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"HSL_CSS\": {\n\t\t\t\tp: /^\\s*hsl\\s*\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})%\\s*,\\s*(\\d{1,3})%\\s*\\)\\s*$/,\n\t\t\t\tf: function(match) {\n\t\t\t\t\treturn hsl2rgb ({\n\t\t\t\t\t\th: enforceDegreeRange(match[1]),\n\t\t\t\t\t\ts: enforceNormalizedRange(match[2]/100),\n\t\t\t\t\t\tl: enforceNormalizedRange(match[3]/100),\n\t\t\t\t\t\ta: 1\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"HSLA_CSS\": {\n\t\t\t\tp: /^\\s*hsla\\s*\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})%\\s*,\\s*(\\d{1,3})%\\s*,\\s*(1(\\.0)?|0(.\\d+)?)\\s*\\)\\s*$/,\n\t\t\t\tf: function(match) {\n\t\t\t\t\treturn hsl2rgb ({\n\t\t\t\t\t\th: enforceDegreeRange(match[1]),\n\t\t\t\t\t\ts: enforceNormalizedRange(match[2]/100),\n\t\t\t\t\t\tl: enforceNormalizedRange(match[3]/100),\n\t\t\t\t\t\ta: enforceNormalizedRange(match[4])\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"evalOrder\" : [\"RGB_6\", \"RGB_3\", \"RGBA_CSS\", \"RGB_CSS\", \"RGBA_4\", \"RGBA_8\", \"HSL_CSS\", \"HSLA_CSS\"]\n\t\t};\n\n\n\t\t/**\n\t\t * Enforces an 8 Bit value range, 0-255\n\t\t *\n\t\t * @param {number} val\n\t\t */\n\t\tfunction enforce8BitRange(val) {\n\t\t\treturn Math.max(0, Math.min(255, Math.round(val)));\n\t\t}\n\n\t\t/**\n\t\t * Enforces hue degrees range, 0-360\n\t\t * @param {number} val\n\t\t */\n\t\tfunction enforceDegreeRange(val) {\n\t\t\treturn Math.max(0, Math.min(360, val));\n\t\t}\n\n\t\t/**\n\t\t * Enforces an normalised range, 0-1\n\t\t * @param {number} val\n\t\t */\n\t\tfunction enforceNormalizedRange(val) {\n\t\t\treturn Math.max(0, Math.min(1, val));\n\t\t}\n\n\t\t/**\n\t\t * Converts a normalised 0-1 based value to an 8 bit value 0-255\n\t\t * @param {number} val\n\t\t */\n\t\tfunction normalizedTo8Bit(val) {\n\t\t\treturn enforce8BitRange(val*255);\n\t\t}\n\n\t\tfunction hsl2rgb(hsl) {\n\t\t\tfunction toRGBVal(t1, t2, tCol) {\n\t\t\t\tif (tCol < 0) tCol += 1;\n\t\t\t\tif (tCol > 1) tCol -= 1;\n\n\t\t\t\tif (6 * tCol < 1)\n\t\t\t\t\treturn normalizedTo8Bit(t2 + (t1 - t2) * 6 * tCol);\n\t\t\t\tif (2 * tCol < 1)\n\t\t\t\t\treturn normalizedTo8Bit(t1);\n\n\t\t\t\t// 3*tCol < ~2.  Last one.  Could be over 2 due to rounding\n\t\t\t\treturn normalizedTo8Bit(t2 + (t1 - t2) * (2/3 - tCol) * 6);\n\t\t\t}\n\n\t\t\tif (hsl.s == 0) {  //Grey\n\t\t\t\tvar colVal = normalizedTo8Bit(hsl.l);\n\t\t\t\treturn {\n\t\t\t\t\tr: colVal,\n\t\t\t\t\tg: colVal,\n\t\t\t\t\tb: colVal,\n\t\t\t\t\ta: hsl.a || 1\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar t1 = hsl.l < 0.5 ? hsl.l * (1 + hsl.s) : (hsl.l + hsl.s) - (hsl.l * hsl.s);\n\t\t\tvar t2 = (2 * hsl.l) - t1;\n\n\t\t\tvar hue = hsl.h/360;\n\n\t\t\tvar tR = hue + (1/3);\n\t\t\tvar tG = hue;\n\t\t\tvar tB = hue - (1/3);\n\n\t\t\treturn {\n\t\t\t\tr: toRGBVal(t1, t2, tR),\n\t\t\t\tg: toRGBVal(t1, t2, tG),\n\t\t\t\tb: toRGBVal(t1, t2, tB),\n\t\t\t\ta: hsl.a || 1\n\t\t\t};\n\t\t}\n\n\t\tfunction rgb2hsl(rgb) {\n\t\t\tvar rgbMin = Math.min(rgb.r, rgb.g, rgb.b);\n\t\t\tvar rgbMax = Math.max(rgb.r, rgb.g, rgb.b);\n\t\t\tvar rgbDelta = rgbMax - rgbMin;\n\n\t\t\tvar l = (rgbMax + rgbMin) / 510;\n\n\t\t\t// Grey\n\t\t\tif (rgbDelta == 0)\n\t\t\t\treturn {\n\t\t\t\t\th: 0,\n\t\t\t\t\ts: 0,\n\t\t\t\t\tl: l,\n\t\t\t\t\ta: rgb.a || 1\n\t\t\t\t};\n\n\t\t\tvar s = l < 0.5 ? rgbDelta / (rgbMax + rgbMin) : rgbDelta / (510 - rgbMax - rgbMin);\n\n\t\t\tvar h = 0;\n\t\t\tif (rgb.r == rgbMax)\n\t\t\t\th = (rgb.g - rgb.b) / rgbDelta;\n\t\t\telse if (rgb.g == rgbMax)\n\t\t\t\th = 2 + (rgb.b - rgb.r) / rgbDelta;\n\t\t\telse\n\t\t\t\th = 4 + (rgb.r - rgb.g) / rgbDelta;\n\n\t\t\th *= 60; //To degrees\n\n\t\t\treturn {\n\t\t\t\t\"h\": h,\n\t\t\t\t\"s\": s,\n\t\t\t\t\"l\": l,\n\t\t\t\t\"a\": rgb.a || 1\n\t\t\t};\n\t\t}\n\n\t\t/**\n\t\t * Converts to a 2 character hex value\n\t\t * @param {number} decVal\n\t\t */\n\t\tfunction toHex(decVal) {\n\t\t\tdecVal = enforce8BitRange(decVal);\n\t\t\tvar hexVal = decVal.toString(16);\n\t\t\treturn hexVal.length < 2 ? \"0\" + hexVal : hexVal;\n\t\t}\n\n\t\tfunction rgbHexFormat(rgb) {\n\t\t\tvar retVal = \"#\" + toHex(rgb.r) + toHex(rgb.g) + toHex(rgb.b);\n\t\t\tif (rgb.a >= 0 && rgb.a < 1)\n\t\t\t\tretVal += toHex(rgb.a * 255);\n\t\t\treturn retVal;\n\t\t}\n\n\t\treturn {\n\t\t\t/**\n\t\t\t * Return a colour which can be used in browser\n\t\t\t * Very simple at the moment.  Needs to understand more.\n\t\t\t */\n\t\t\tgetColor: function() {\n\t\t\t\t// Default for colours with alpha is rgba (for IE support)\n\t\t\t\tif (this.a > 0 && this.a < 1)\n\t\t\t\t\treturn this.rgba();\n\n\t\t\t\t// Otherwise, to hex then check the for standard colours\n\t\t\t\tvar retVal = this.rgbHex();\n\n\t\t\t\tif (this.enumerateNames)\n\t\t\t\t\tretVal = REV_W3C_COLOR[retVal] || retVal;\n\n\t\t\t\treturn retVal;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Set the colour from an HTML color\n\t\t\t * Very simple at the moment.  Needs to understand more.\n\t\t\t */\n\t\t\tsetColor: function(color) {\n\t\t\t\tif (!color)\n\t\t\t\t\treturn;\n\n\t\t\t\t// Deal with named colours\n\t\t\t\tcolor = color.toLowerCase();\n\t\t\t\tcolor = W3C_COLOR[color] || color;\n\n\t\t\t\tvar colSep = null;\n\t\t\t\tCONVERT.evalOrder.some(function(key) {\n\t\t\t\t\tvar matchArr = CONVERT[key].p.exec(color);\n\t\t\t\t\tif (!matchArr)\n\t\t\t\t\t\treturn false;\n\n\t\t\t\t\tcolSep = CONVERT[key].f(matchArr);\n\n\t\t\t\t\tif (!colSep)\n\t\t\t\t\t\treturn false;\n\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\n\t\t\t\tif (!colSep)\n\t\t\t\t\treturn;\n\n\t\t\t\tthis.setRGB(colSep);\n\t\t\t},\n\t\t\t/**\n\t\t\t * Returns CSS rgba(r,g,b,a) format\n\t\t\t */\n\t\t\trgba: function() {\n\t\t\t\treturn \"rgba(\" + this.r + \",\" + this.g + \",\" + this.b + \",\" + this.a.toFixed(3) + \")\";\n\t\t\t},\n\t\t\t/**\n\t\t\t * Returns 6 or 8 byte hex rgb format depending on alpha value\n\t\t\t */\n\t\t\trgbHex: function() {\n\t\t\t\treturn rgbHexFormat(this);\n\t\t\t},\n\t\t\t/**\n\t\t\t * Returns the colour ignoring the alpha value\n\t\t\t */\n\t\t\trgbHexNoAlpha: function() {\n\t\t\t\tvar rgb = this.getRGB();\n\t\t\t\trgb.a = 1;\n\t\t\t\treturn rgbHexFormat(rgb);\n\t\t\t},\n\t\t\t/**\n\t\t\t * Sets the colour from an RGB values object.\n\t\t\t * r,g and b values should be in the range 0-255. a, 0-1\n\t\t\t * @param {{r:number,g:number,b:number, a:number}} rgb\n\t\t\t */\n\t\t\tsetRGB: function(rgb) {\n\t\t\t\tthis.r = enforce8BitRange(rgb.r);\n\t\t\t\tthis.g = enforce8BitRange(rgb.g);\n\t\t\t\tthis.b = enforce8BitRange(rgb.b);\n\t\t\t\tthis.a = enforceNormalizedRange(rgb.a || 1);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the color as an RGB object\n\t\t\t * @returns {{r: number, g: number, b: number, a:number}}\n\t\t\t */\n\t\t\tgetRGB: function() {\n\t\t\t\treturn {\n\t\t\t\t\tr: this.r,\n\t\t\t\t\tg: this.g,\n\t\t\t\t\tb: this.b,\n\t\t\t\t\ta: this.a\n\t\t\t\t};\n\t\t\t},\n\t\t\t/**\n\t\t\t * Sets the colour from an HSL values object.\n\t\t\t * Ranges: h: 0-360, s: 0-1, l: 0-1, a: 0-1\n\t\t\t * @param {{h:number,s:number,l:number,a:number}} hsl\n\t\t\t */\n\t\t\tsetHSL: function(hsl) {\n\t\t\t\tvar rgb = hsl2rgb(hsl);\n\t\t\t\tthis.r = rgb.r;\n\t\t\t\tthis.g = rgb.g;\n\t\t\t\tthis.b = rgb.b;\n\t\t\t\tthis.a = hsl.a || 1;\n\t\t\t},\n\n\t\t\tgetHSL: function() {\n\t\t\t\treturn rgb2hsl(this);\n\t\t\t},\n\t\t\t/**\n\t\t\t * Returns the hue base color (saturation=1, luminance=0.5, ignore alpha).\n\t\t\t * Uses color values unless hsl object is provided\n\t\t\t *\n\t\t\t * @param {{h:number,s:number,l:number}} hsl\n\t\t\t */\n\t\t\trgbBaseHue: function(hsl) {\n\t\t\t\tif (!hsl)\n\t\t\t\t\thsl = rgb2hsl(this);\n\t\t\t\treturn rgbHexFormat(hsl2rgb({h: hsl.h, s: 1, l: 0.5}));\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * If getColor should return W3C Color names.\n\t\t\t */\n\t\t\tenumerateW3CColorNames: function(enumerateNames) {\n\t\t\t\tthis.enumerateName = enumerateNames;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Colour utility functions\n\t\t\t */\n\t\t\tutils: {\n\t\t\t\t\"enforce8BitRange\": enforce8BitRange,\n\t\t\t\t\"enforceDegreeRange\": enforceDegreeRange,\n\t\t\t\t\"enforceNormalizedRange\":  enforceNormalizedRange,\n\t\t\t\t\"normalizedTo8Bit\": normalizedTo8Bit,\n\t\t\t\t\"hsl2rgb\": hsl2rgb,\n\t\t\t\t\"rgb2hsl\": rgb2hsl\n\t\t\t}\n\t\t};\n\t})();\n\n\t/**\n\t * The default options for the picker.  These should be overloaded using the picker-options attribute\n\t * @param {placement: string, alpha:boolean, view:string}\n\t */\n\tvar DEFAULT_OPTIONS = {\n\t\tplacement: \"auto bottom-right\", // Popover placement\n\t\talpha: false, // Include the alpha\n\t\tview: VIEW.HSL,  // Available views: hsl, pallet\n\t\ttoggle: false, // Toggle between views (instead of tabs.  Tabs wins)\n\t\ttabs: true, // Tabs for views\n\t\t//rgbField: false, //Show RGB Fields\n\t\thexField: true, // Show Hex Value field\n\t\tsaveCancel: false, // Show Save Cancel buttons\n\t\tw3cColors: false, //If true getColor will return the W3C name of the colour (if there is one)\n\t\tcompView: true,\n\t\tpallet: [\"#278EFC\", \"#6D79E8\", \"#289FBD\", \"#19C4D1\", \"#52DBA7\",\n\t\t\t\t\"#83BFFF\", \"#A0A8F1\", \"#74C2E8\", \"#68D9E1\", \"#8FE9C6\",\n\t\t\t\t\"#71E279\", \"#FCC742\", \"#FC8A3D\", \"#F84B4B\", \"#F95095\",\n\t\t\t\t\"#A4EDA8\", \"#FFDB85\", \"#FFB47D\", \"#F78181\", \"#FA8DB7\",\n\t\t\t\t\"#BDDCFC\", \"#BDC0C4\", \"#81878E\", \"#485563\", \"#343D47\"]\n\t};\n\n\treturn {\n\t\trestrict: \"A\",\n\t\treplace: false,\n\t\tterminal: true,\n\t\tpriority: 1001,\n\t\tscope: {\n\t\t\tpickerColor: \"=\",\n\t\t\tpickerLabel: \"@\",\n\t\t\tpickerOptions: \"=\",\n\t\t\tpickerSaveAction: \"&\",\n\t\t\tpickerCancelAction: \"&\"\n\t\t},\n\t\tlink: function(scope, element) {\n\n\t\t\tfunction outsideClickHandler(event) {\n\t\t\t\tvar tooltips = document.getElementsByClassName(\"sn-color-picker\");\n\t\t\t\tif (element[0] == event.target || (tooltips[0] && !tooltips[0].contains(event.target))) {\n\t\t\t\t\tregisterClosedListeners();\n\t\t\t\t\tdoCancel();\n\t\t\t\t\tscope.$apply();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction targetElementHandler(event) {\n\t\t\t\t//Reset origin colour each time the picker is opened\n\t\t\t\tscope.state.originColor = scope.pickerColor;\n\t\t\t\tif (scope.state.originColor)\n\t\t\t\t\tscope.color.setColor(scope.state.originColor);\n\t\t\t\tscope.state.open = true;\n\t\t\t\tevent.stopPropagation();\n\t\t\t\tregisterOpenListeners();\n\t\t\t\tscope.$apply();\n\t\t\t}\n\n\t\t\tfunction registerOpenListeners() {\n\t\t\t\telement.off(\"click\", targetElementHandler);\n\t\t\t\t$document.on(\"click\", outsideClickHandler);\n\t\t\t}\n\n\t\t\tfunction registerClosedListeners() {\n\t\t\t\t$document.off(\"click\", outsideClickHandler);\n\t\t\t\telement.on(\"click\", targetElementHandler);\n\t\t\t\telement.focus();\n\t\t\t}\n\n\t\t\tfunction doSave() {\n\t\t\t\tif (scope.options.saveCancel)\n\t\t\t\t\tscope.pickerSaveAction({color: scope.color});\n\n\t\t\t\tscope.state.open = false;\n\t\t\t}\n\n\t\t\tfunction doCancel() {\n\t\t\t\tif (scope.options.saveCancel) {\n\t\t\t\t\tscope.pickerColor = scope.state.originColor;\n\t\t\t\t\tscope.pickerCancelAction({color: scope.color});\n\t\t\t\t}\n\n\t\t\t\tscope.state.open = false;\n\t\t\t}\n\n\t\t\tscope.isOpen = function() {\n\t\t\t\treturn scope.state.open;\n\t\t\t};\n\n\t\t\tscope.action = {\n\t\t\t\tsave: function() {\n\t\t\t\t\tdoSave();\n\t\t\t\t\tregisterClosedListeners();\n\t\t\t\t},\n\n\t\t\t\tcancel: function() {\n\t\t\t\t\tdoCancel();\n\t\t\t\t\tregisterClosedListeners();\n\t\t\t\t},\n\t\t\t\tpalletView: function() {\n\t\t\t\t\tif (scope.state.view === VIEW.PALLET)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tscope.state.view = VIEW.PALLET;\n\t\t\t\t},\n\t\t\t\thslView: function() {\n\t\t\t\t\tif (scope.state.view === VIEW.HSL)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tscope.state.view = VIEW.HSL;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfunction configureOptions() {\n\t\t\t\tscope.options = angular.extend({}, DEFAULT_OPTIONS, scope.pickerOptions);\n\n\t\t\t\t//Setup options if tabs is selected\n\t\t\t\tif (scope.options.compView) {\n\t\t\t\t\tscope.options.alpha = false;\n\t\t\t\t\tscope.options.tabs = true;\n\t\t\t\t}\n\n\t\t\t\tif (scope.options.toggle && scope.options.tabs)\n\t\t\t\t\tscope.options.toggle = false;\n\n\t\t\t\t// Check the provided view\n\t\t\t\tif (scope.pickerOptions && scope.pickerOptions.view && !VIEW[scope.pickerOptions.view.toUpperCase()])\n\t\t\t\t\tscope.options.view = VIEW.HSL;\n\n\t\t\t\t// Default the pallet if it's invalid or a 0 length array\n\t\t\t\tif (scope.options.pallet.constructor !== Array || scope.options.pallet.length == 0)\n\t\t\t\t\tscope.options.pallet = DEFAULT_OPTIONS.pallet;\n\n\t\t\t\t// If the pallet is less than 25 colours we need to expand it to make it look OK.\n\t\t\t\t// Duplicate colours from the provided pallet to make up the deficite.\n\t\t\t\tif (scope.options.pallet.length < 25) {\n\t\t\t\t\tvar colCount = 0;\n\t\t\t\t\tfor (var pi = scope.options.pallet.length-1; pi < 25; pi++) {\n\t\t\t\t\t\tscope.options.pallet.push(scope.pickerOptions.pallet[colCount++]);\n\t\t\t\t\t\tif (colCount == scope.pickerOptions.pallet.length)\n\t\t\t\t\t\t\tcolCount = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tscope.color.enumerateW3CColorNames(scope.options.w3cColors);\n\n\t\t\t\t// Set up the display state\n\t\t\t\tscope.state = angular.extend({}, scope.state, {\n\t\t\t\t\topen: false,\n\t\t\t\t\tview: scope.options.view,\n\t\t\t\t\tmaxPalletColors: scope.options.toggle ? 24 : 25\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tscope.locale = {\n\t\t\t\tredChar: i18n.getMessage(\"rgba_red_field_character_label\"),\n\t\t\t\tgreenChar: i18n.getMessage(\"rgba_green_field_character_label\"),\n\t\t\t\tblueChar: i18n.getMessage(\"rgba_blue_field_character_label\"),\n\t\t\t\talphaChar: i18n.getMessage(\"rgba_alpha_field_character_label\"),\n\t\t\t\tcolorCode: i18n.getMessage(\"Color code\"),\n\t\t\t\tsave: i18n.getMessage(\"Save\"),\n\t\t\t\tcancel: i18n.getMessage(\"Cancel\"),\n\t\t\t\tpallet: i18n.getMessage(\"Pallet\"),\n\t\t\t\tadvanced: i18n.getMessage(\"Advanced\")\n\t\t\t};\n\n\t\t\t//watch picker options\n\t\t\tif (scope.pickerOptions)\n\t\t\t\tscope.$watch(\"pickerOptions\", function() {\n\t\t\t\t\tconfigureOptions();\n\t\t\t\t}, true);\n\n\t\t\t//Mount points for the trigger actions\n\t\t\telement.attr(\"uib-popover-template\", \"'sn-cp-c63eae2d5710130034d169202d94f92f.html'\");\n\t\t\telement.attr(\"popover-placement\", \"{{options.placement}}\");\n\t\t\telement.attr(\"popover-class\", \"sn-color-picker\");\n\t\t\telement.attr(\"popover-trigger\", \"'none'\");\n\t\t\telement.attr(\"popover-is-open\", \"isOpen()\");\n\t\t\telement.attr(\"popover-append-to-body\", true);\n\t\t\telement.attr(\"aria-label\", scope.pickerLabel);\n\n\t\t\telement.removeAttr(\"sn-color-picker\"); //Prevent compile loop\n\t\t\t$compile(element)(scope);\n\n\t\t\t// Create a colour object in scope\n\t\t\tscope.color = new Color();\n\n\t\t\tconfigureOptions();\n\t\t\tregisterClosedListeners();\n\n\t\t\tscope.$watchGroup([\"color.r\",\"color.g\",\"color.b\",\"color.a\"], function(newValue, oldValue) {\n\t\t\t\tif (newValue == oldValue)\n\t\t\t\t\treturn;\n\n\t\t\t\tscope.pickerColor = scope.color.getColor();\n\n\t\t\t}, true);\n\t\t}\n\t};\n}])\n.directive(\"snColorPickerTabs\", [function() {\n\treturn {\n\t\trestrict: \"E\",\n\t\treplace: true,\n\t\ttemplate:  '<div class=\"cp-control-group cp-tab-container\" role=\"tablist\">' +\n\t\t\t\t\t\t'<button id=\"cpPalletTab\" focus-this=\"true\" class=\"btn sn-navhub-btn sn-navhub-btn_text cp-tab\" ng-class=\"{\\'state-active\\': state.view == \\'pallet\\'}\" ng-click=\"action.palletView()\" role=\"tab\" aria-label=\"{{locale.pallet}}\" aria-controls=\"cpPalletPanel\"><span class=\"icon-cards dead-centre\"></span></button>' +\n\t\t\t\t\t\t'<button id=\"cpAdvancedTab\" class=\"btn sn-navhub-btn sn-navhub-btn_text cp-tab\" ng-class=\"{\\'state-active\\': state.view == \\'hsl\\'}\" ng-click=\"action.hslView()\" role=\"tab\" aria-label=\"{{locale.advanced}}\" aria-controls=\"cpAdvancedPanel\"><span ng-include=\"\\'styles/sn_chg_soc_cp/Fill-color.svg\\'\" class=\"icon-bucket dead-centre\"></span></button>' +\n\t\t\t\t\t'</div>'\n\t};\n}])\n.directive(\"snColorPickerSaveCancel\", function() {\n\treturn {\n\t\trestrict: \"E\",\n\t\treplace: true,\n\t\ttemplate: \t'<div class=\"cp-control-group save-cancel\">' +\n\t\t\t\t\t\t'<div class=\"cp-btn\"><button class=\"btn btn-default\" ng-click=\"action.cancel()\" aria-label=\"{{locale.cancel}}\">{{locale.cancel}}</button></div>' +\n\t\t\t\t\t\t'<div class=\"cp-btn\"><button class=\"btn btn-primary\" ng-click=\"action.save()\" aria-label=\"{{locale.save}}\">{{locale.save}}</button></div>' +\n\t\t\t\t\t'</div>'\n\t};\n})\n.directive(\"snColorPickerHsl\", function() {\n\treturn {\n\t\trestrict: \"E\",\n\t\treplace: true,\n\t\tcontroller: function() {\n\t\t\t//Blank controller for require\n\t\t},\n\t\ttemplate:\t'<div id=\"cpAdvancedPanel\" role=\"tabpanel\" aria-labelledby=\"cpAdvancedTab\">' +\n\t\t\t\t\t\t'<div class=\"cp-control-group hsl-group\">' +\n\t\t\t\t\t\t\t'<sn-color-picker-saturation-luminance></sn-color-picker-saturation-luminance>' +\n\t\t\t\t\t\t\t'<sn-color-picker-rgb-fields ng-if=\"options.compView\"></sn-color-picker-rgb-fields>' +\n\t\t\t\t\t\t\t'<sn-color-picker-hue ng-if=\"!options.compView\"></sn-color-picker-hue>' +\n\t\t\t\t\t\t\t'<sn-color-picker-alpha ng-if=\"options.alpha\"></sn-color-picker-alpha>' +\n\t\t\t\t\t\t'</div>' +\n\t\t\t\t\t\t'<div class=\"cp-control-group hsl-group\">' +\n\t\t\t\t\t\t\t'<sn-color-picker-hue orientation=\"horizontal\" ng-if=\"options.compView\"></sn-color-picker-hue>' +\n\t\t\t\t\t\t\t'<sn-color-picker-swatch></sn-color-picker-swatch>' +\n\t\t\t\t\t\t\t'<sn-color-picker-pallet-toggle ng-if=\"options.toggle\"></sn-color-picker-pallet-toggle>' +\n\t\t\t\t\t\t'</div>' +\n\t\t\t\t\t\t'<div class=\"cp-control-group\" ng-if=\"options.hexField\">' +\n\t\t\t\t\t\t\t'<sn-color-picker-hex-field></sn-color-picker-hex-field>' +\n\t\t\t\t\t\t'</div>' +\n\t\t\t\t\t'</div>',\n\t\tlink: function(scope) {\n\t\t\tscope.hsl = scope.color.getHSL();\n\t\t}\n\t};\n})\n.directive(\"snColorPickerSaturationLuminance\", function($log) {\n\t/**\n\t * Calculates the intersection between to lines a and b defined by 2 element array containing start and end coords\n\t * @param {Array.<{x:number,y:number}>} a\n\t * @param {Array.<{x:number,y:number}>} b\n\t * @return {Array.<{x:number,y:number}>}\n\t */\n\tfunction lineIntersect(a, b) {\n\t\tvar denom = (b[1].y - b[0].y) * (a[1].x - a[0].x) - (b[1].x - b[0].x) * (a[1].y - a[0].y);\n\t\tif (denom == 0)\n\t\t\treturn null;\n\n\t\tvar ua = ((b[1].x - b[0].x) * (a[0].y - b[0].y) - (b[1].y - b[0].y) * (a[0].x - b[0].x))/denom;\n\n\t\treturn {\n\t\t\tx: a[0].x + ua*(a[1].x - a[0].x),\n\t\t\ty: a[0].y + ua*(a[1].y - a[0].y)\n\t\t};\n\t}\n\n\t/**\n\t * Equivalent to Math.hypot (not supported by IE)\n\t * @param {number} x\n\t * @param {number} y\n\t */\n\tfunction hypot(x, y) {\n\t\treturn Math.sqrt(Math.pow(x,2) + Math.pow(y,2));\n\t}\n\n\treturn {\n\t\trestrict: \"E\",\n\t\treplace: true,\n\t\trequire: \"^snColorPickerHsl\",\n\t\ttemplate: '<div class=\"cp-control saturation-luminance\" ng-class=\"{\\'compact-lhs\\': options.compView}\"><i class=\"cp-hsl-lens\"></i></div>',\n\t\tlink: function(scope, element) {\n\n\t\t\t// Takes the coordinates from the event, works out the location on the SL plane and sets the values in the color picker accordingly\n\t\t\t// Some linear equations for the saturation and luminance values\n\t\t\tfunction setSLValue(event) {\n\t\t\t\tvar slPlane = element[0].getBoundingClientRect();\n\t\t\t\tvar slX = event.pageX - slPlane.left;\n\t\t\t\tvar slY = event.pageY - slPlane.top;\n\n\t\t\t\t//There has to be a better way to do this than linear equations\n\n\t\t\t\t// Slope for the saturation and luminance axis\n\t\t\t\tvar satM = (slPlane.width - 0)/(0 - slPlane.height);\n\t\t\t\tvar lumM = (slPlane.height - 0)/(slPlane.width - 0);\n\n\t\t\t\t// Find b (y intersect) for clicked point for given slope\n\t\t\t\tvar satB = (satM * slX - slY) * -1;\n\t\t\t\tvar lumB = (lumM * slX - slY) * -1;\n\n\t\t\t\tvar lumIntersectLine = [{x: 0, y: satB}, {x: slPlane.width, y: satM * slPlane.width + satB}];\n\t\t\t\tvar satIntersectLine = [{x: 0, y: lumB}, {x: slPlane.width, y: lumM * slPlane.width + lumB}];\n\n\t\t\t\tvar lumLine = [{x: 0, y: 0},{x: slPlane.width, y: slPlane.height}];\n\t\t\t\tvar satLine = [{x: slPlane.width, y: 0},{x: 0, y: slPlane.height}];\n\n\t\t\t\tvar axLen = hypot(slPlane.width, slPlane.height);\n\n\t\t\t\tvar lumIntersect = lineIntersect(lumLine, lumIntersectLine);\n\t\t\t\tvar lumHypot = hypot(lumIntersect.x, lumIntersect.y);\n\n\t\t\t\tvar satIntersect = lineIntersect(satLine, satIntersectLine);\n\t\t\t\tvar satHypot = hypot(slPlane.width - satIntersect.x, satIntersect.y);\n\n\t\t\t\t// Work out the locations as a percentage of the plane.\n\t\t\t\t// The plane is 100% luminance 0% saturation top left, 0% luminance, 100% saturation bottom right\n\t\t\t\tscope.hsl.l = scope.color.utils.enforceNormalizedRange(1 - (lumHypot/axLen));\n\t\t\t\tscope.hsl.s = scope.color.utils.enforceNormalizedRange(1 - (satHypot/axLen));\n\t\t\t\tscope.color.setHSL(scope.hsl);\n\t\t\t\tscope.$apply();\n\t\t\t}\n\n\t\t\tfunction setLensElementXY(lensX, lensY) {\n\t\t\t\tvar slPlane = element[0].getBoundingClientRect();\n\t\t\t\tvar lensElement = angular.element(element.find(\"i\")[0]);\n\t\t\t\tvar pW = Math.round(slPlane.width);\n\t\t\t\tvar pH = Math.round(slPlane.height);\n\t\t\t\tvar lH = Math.round(lensElement[0].getBoundingClientRect().height);\n\t\t\t\tvar lW = Math.round(lensElement[0].getBoundingClientRect().width);\n\n\t\t\t\t// Modify lens location for lens size\n\t\t\t\tlensX = lensX - lW/2;\n\t\t\t\tlensY = lensY - lH/2;\n\n\t\t\t\t// Check bounds\n\t\t\t\tif (lensX >= pW - Math.round(lW/2))\n\t\t\t\t\tlensX = pW - lW;\n\t\t\t\telse if (lensX <= 0)\n\t\t\t\t\tlensX = 0 - Math.round(lW/2);\n\n\t\t\t\tif (lensY >= pH - Math.round(lH/2))\n\t\t\t\t\tlensY = slPlane.height - lH;\n\t\t\t\telse if (lensY <= 0)\n\t\t\t\t\tlensY = 0 - Math.round(lH/2);\n\n\t\t\t\tlensElement[0].style.left = lensX;\n\t\t\t\tlensElement[0].style.top = lensY;\n\t\t\t}\n\n\t\t\t// Calculate the marker location\n\t\t\t// If there' no event, calculate (precision is not great) otherwise use event click\n\t\t\tfunction setLensLocation(event) {\n\t\t\t\tvar slPlane = element[0].getBoundingClientRect();\n\t\t\t\tif (event) {\n\t\t\t\t\tvar lensX = event.pageX - slPlane.left;\n\t\t\t\t\tvar lensY = event.pageY - slPlane.top;\n\t\t\t\t\tsetLensElementXY(lensX, lensY);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar slX = event.pageX - slPlane.left;\n\t\t\t\tvar slY = slPlane.height - (event.pageY - slPlane.top);\n\n\t\t\t\t// Slope for the saturation and luminance diagonal axis\n\t\t\t\tvar satM = slPlane.width/slPlane.height;\n\t\t\t\tvar lumM = satM * -1;\n\n\t\t\t\tvar axLen = hypot(slPlane.width, slPlane.height);\n\n\t\t\t\tvar satMRad = Math.atan(satM);\n\t\t\t\tvar lumMRad = Math.atan(lumM);\n\n\t\t\t\tvar satLen = axLen * scope.hsl.s;\n\t\t\t\tvar lumLen = axLen - (axLen * scope.hsl.l);\n\n\t\t\t\tvar satXY = {\n\t\t\t\t\tx: Math.cos(satMRad) * satLen,\n\t\t\t\t\ty: Math.sin(satMRad) * satLen\n\t\t\t\t};\n\n\t\t\t\tvar lumXY = {\n\t\t\t\t\tx: Math.cos(lumMRad) * lumLen,\n\t\t\t\t\ty: slPlane.height + Math.sin(lumMRad) * lumLen\n\t\t\t\t};\n\n\t\t\t\t//c = (mx - y) -1\n\t\t\t\t//(y - c) / m = x\n\n\t\t\t\t//var satC =\n\n\t\t\t\t//$log.debug(satXY);\n\t\t\t\t//$log.debug(lumXY);\n\n\t\t\t\t//c = (mx - y) * -1\n\t\t\t\t//y = mx + c\n\n\n\t\t\t\t/*\n\t\t\t\tvar satB = (satM * slX - slY) * -1;\n\t\t\t\tvar lumB = (lumM * slX - slY) * -1;\n\n\t\t\t\tvar lumIntersectLine = [{x: 0, y: satB}, {x: slPlane.width, y: satM * slPlane.width + satB}];\n\t\t\t\tvar satIntersectLine = [{x: 0, y: lumB}, {x: slPlane.width, y: lumM * slPlane.width + lumB}];\n\t\t\t\t*/\n\n\t\t\t\tvar lumLines = {\n\t\t\t\t\txAxis: [{x: lumXY.x, y:0},{x: lumXY.x, y: slPlane.height}],\n\t\t\t\t\tyAxis: [{x:0, y:lumXY.y},{x:slPlane.width, y:lumXY.y}]\n\t\t\t\t};\n\t\t\t\tvar satLines = {\n\t\t\t\t\txAxis: [{x:satXY.x, y:0},{x:satXY.x, y:slPlane.height}],\n\t\t\t\t\tyAxis: [{x: 0, y: satXY.y},{x: slPlane.width, y: satXY.y}]\n\t\t\t\t};\n\n\t\t\t\t//$log.debug(lineIntersect(lumLines.yAxis, satLines.xAxis));\n\t\t\t\t//$log.debug(lineIntersect(lumLines.xAxis, satLines.yAxis));\n\t\t\t\t//$log.debug(scope.hsl);\n\t\t\t}\n\n\t\t\tfunction mouseUpHandler(event) {\n\t\t\t\telement.off(\"mouseup\", mouseUpHandler);\n\t\t\t\telement.off(\"mousemove\", mouseDragHandler);\n\t\t\t\telement.off(\"mouseleave\", mouseLeaveHandler);\n\t\t\t\tsetSLValue(event);\n\t\t\t\tsetLensLocation(event);\n\t\t\t}\n\n\t\t\tfunction mouseDownHandler(event) {\n\t\t\t\telement.on(\"mouseup\", mouseUpHandler);\n\t\t\t\telement.on(\"mousemove\", mouseDragHandler);\n\t\t\t\telement.on(\"mouseleave\", mouseLeaveHandler);\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\n\t\t\tfunction mouseLeaveHandler(event) {\n\t\t\t\tmouseUpHandler(event);\n\t\t\t}\n\n\t\t\tfunction mouseDragHandler(event) {\n\t\t\t\tsetSLValue(event);\n\t\t\t}\n\n\t\t\telement.on(\"mousedown\", mouseDownHandler);\n\n\t\t\tscope.$watch(\"hsl.h\", function() {\n\t\t\t\telement.css(\"background-color\", scope.color.rgbBaseHue(scope.hsl));\n\t\t\t});\n\t\t}\n\t};\n})\n.directive(\"snColorPickerHue\", function($log) {\n\treturn {\n\t\trestrict: \"E\",\n\t\treplace: true,\n\t\trequire: \"^snColorPickerHsl\",\n\t\ttemplate: '<div after-render=\"setHueSliderLocation()\" class=\"cp-control hue\" ng-class=\"{\\'vertical\\' : vertical, \\'horizontal\\': !vertical}\"><i class=\"cp-hsl-slider\"></i></div>',\n\t\tlink: function(scope, element, attrs) {\n\t\t\tscope.vertical = true;\n\t\t\tif (attrs.orientation && attrs.orientation === \"horizontal\")\n\t\t\t\tscope.vertical = false;\n\n\t\t\tfunction setHueValue(event) {\n\t\t\t\tvar huePlane = element[0].getBoundingClientRect();\n\t\t\t\tvar hueY = event.pageY - huePlane.top;\n\t\t\t\tvar hueX = event.pageX - huePlane.left;\n\n\t\t\t\tif (scope.vertical) {\n\t\t\t\t\t// The hue plane is a vertical representation of the color wheel, 0deg at the top, 360deg at the bottom.\n\t\t\t\t\tscope.hsl.h = scope.color.utils.enforceDegreeRange((hueY/huePlane.height) * 360);\n\t\t\t\t} else {\n\t\t\t\t\t// The hue plane is a horisontal representation of the color wheel, 0deg left, 360deg right\n\t\t\t\t\tscope.hsl.h = scope.color.utils.enforceDegreeRange((hueX/huePlane.width) * 360);\n\t\t\t\t}\n\t\t\t\tscope.color.setHSL(scope.hsl);\n\t\t\t\tscope.$apply();\n\t\t\t}\n\n\t\t\tfunction setSliderElementXY(sliderX, sliderY) {\n\t\t\t\tvar huePlane = element[0].getBoundingClientRect();\n\t\t\t\tvar hueSlider = angular.element(element.find(\"i\"));\n\n\t\t\t\tvar sH = Math.round(hueSlider[0].getBoundingClientRect().height);\n\t\t\t\tvar sW = Math.round(hueSlider[0].getBoundingClientRect().width);\n\n\t\t\t\tvar pH = Math.round(huePlane.height);\n\t\t\t\tvar pW = Math.round(huePlane.width);\n\n\t\t\t\tif (scope.vertical) {\n\t\t\t\t\tsliderX  = 0;\n\t\t\t\t\tsliderY = sliderY - Math.round(sH/2);\n\t\t\t\t\tif (sliderY >= pH - sH)\n\t\t\t\t\t\tsliderY = huePlane.height - sH;\n\t\t\t\t\telse if (sliderY <= 0)\n\t\t\t\t\t\tsliderY = 0;\n\t\t\t\t} else {\n\t\t\t\t\tsliderY = 0;\n\t\t\t\t\tsliderX = sliderX - Math.round(sW/2);\n\t\t\t\t\tif (sliderX >= pW - sW)\n\t\t\t\t\t\tsliderX = pW - sW;\n\t\t\t\t\telse if (sliderX <= 0)\n\t\t\t\t\t\tsliderX = 0;\n\t\t\t\t}\n\n\t\t\t\thueSlider[0].style.top = Math.round(sliderY);\n\t\t\t\thueSlider[0].style.left = Math.round(sliderX);\n\t\t\t}\n\n\t\t\tfunction setSliderLocation(event) {\n\t\t\t\tvar huePlane = element[0].getBoundingClientRect();\n\t\t\t\tvar sliderX = 0;\n\t\t\t\tvar sliderY = 0;\n\t\t\t\tif (event) {\n\t\t\t\t\tsliderX = event.pageX - huePlane.left;\n\t\t\t\t\tsliderY = event.pageY - huePlane.top;\n\t\t\t\t\tsetSliderElementXY(sliderX, sliderY);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t//Calculate\n\t\t\t\tif (scope.vertical) {\n\t\t\t\t\tsliderY = Math.round(huePlane.height * (scope.hsl.h/360));\n\t\t\t\t} else {\n\t\t\t\t\tsliderX = Math.round(huePlane.width * (scope.hsl.h/360));\n\t\t\t\t}\n\t\t\t\tsetSliderElementXY(sliderX, sliderY);\n\t\t\t}\n\n\t\t\tvar mouseDown = false;\n\t\t\tfunction mouseUpHandler(event) {\n\t\t\t\telement.off(\"mouseup\", mouseUpHandler);\n\t\t\t\telement.off(\"mousemove\", mouseDragHandler);\n\t\t\t\telement.off(\"mouseleave\", mouseLeaveHandler);\n\t\t\t\tmouseDown = false;\n\t\t\t\tsetHueValue(event);\n\t\t\t\tsetSliderLocation(event);\n\t\t\t}\n\n\t\t\tfunction mouseDownHandler(event) {\n\t\t\t\tmouseDown=true;\n\t\t\t\telement.on(\"mouseup\", mouseUpHandler);\n\t\t\t\telement.on(\"mousemove\", mouseDragHandler);\n\t\t\t\telement.on(\"mouseleave\", mouseLeaveHandler);\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\n\t\t\tfunction mouseLeaveHandler(event) {\n\t\t\t\tmouseUpHandler(event);\n\t\t\t}\n\n\t\t\tfunction mouseDragHandler(event) {\n\t\t\t\tsetHueValue(event);\n\t\t\t}\n\n\t\t\telement.on(\"mousedown\", mouseDownHandler);\n\n\t\t\t//Scoped call for after-render\n\t\t\tscope.setHueSliderLocation = function() {\n\t\t\t\tsetSliderLocation();\n\t\t\t};\n\n\t\t\tscope.$watch(\"hsl.h\", function(newValue, oldValue) {\n\t\t\t\tif (newValue == oldValue || mouseDown)\n\t\t\t\t\treturn;\n\n\t\t\t\tsetSliderLocation();\n\t\t\t});\n\t\t}\n\t};\n})\n.directive(\"snColorPickerAlpha\", function() {\n\treturn {\n\t\trestrict: \"E\",\n\t\treplace: true,\n\t\trequire: \"^snColorPickerHsl\",\n\t\ttemplate: '<div class=\"cp-control alpha\"></div>',\n\t\tlink: function(scope, element) {\n\t\t\tfunction setAlphaValue(event) {\n\t\t\t\tvar alphaPlane = element[0].getBoundingClientRect();\n\t\t\t\tvar alphaY = event.pageY - alphaPlane.top;\n\n\t\t\t\t// The alpha plane represents opaque (1 at the top, transparent (0) at the bottom)\n\t\t\t\tscope.hsl.a = scope.color.utils.enforceNormalizedRange(1 - (alphaY/alphaPlane.height));\n\t\t\t\tscope.color.setHSL(scope.hsl);\n\t\t\t\tscope.$apply();\n\t\t\t}\n\n\t\t\tfunction mouseUpHandler(event) {\n\t\t\t\telement.off(\"mouseup\", mouseUpHandler);\n\t\t\t\telement.off(\"mousemove\", mouseDragHandler);\n\t\t\t\telement.off(\"mouseleave\", mouseLeaveHandler);\n\t\t\t\tsetAlphaValue(event);\n\t\t\t}\n\n\t\t\tfunction mouseDownHandler(event) {\n\t\t\t\telement.on(\"mouseup\", mouseUpHandler);\n\t\t\t\telement.on(\"mousemove\", mouseDragHandler);\n\t\t\t\telement.on(\"mouseleave\", mouseLeaveHandler);\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\n\t\t\tfunction mouseLeaveHandler(event) {\n\t\t\t\tmouseUpHandler(event);\n\t\t\t}\n\n\t\t\tfunction mouseDragHandler(event) {\n\t\t\t\tsetAlphaValue(event);\n\t\t\t}\n\n\t\t\telement.on(\"mousedown\", mouseDownHandler);\n\n\t\t\tscope.$watchGroup([\"color.r\",\"color.g\",\"color.b\"], function() {\n\t\t\t\telement.css(\"background-color\", scope.color.rgbHexNoAlpha());\n\t\t\t});\n\t\t}\n\t};\n})\n.directive(\"snColorPickerSwatch\", function() {\n\treturn {\n\t\trestrict: \"E\",\n\t\treplace: true,\n\t\trequire: \"^snColorPickerHsl\",\n\t\ttemplate: '<div class=\"cp-control swatch\" ng-class=\"{\\'no-toggle\\': options.toggle==false, \\'with-alpha\\': options.alpha==true, \\'compact-rhs\\': options.compView}\"></div>',\n\t\tlink: function(scope, element) {\n\t\t\tscope.$watchGroup([\"color.r\",\"color.g\",\"color.b\",\"color.a\"], function() {\n\t\t\t\telement.css('background-color', scope.color.getColor());\n\t\t\t});\n\t\t}\n\t};\n})\n.directive(\"snColorPickerRgbFields\", function() {\n\treturn {\n\t\trestrict: \"E\",\n\t\treplace: true,\n\t\trequire: \"^snColorPickerHsl\",\n\t\ttemplate: '<div class=\"cp-control rgb-field-container\">' +\n\t\t\t\t\t'<div class=\"rgb-field-element\"><label for=\"cprval\" class=\"rgb-label\">{{locale.redChar}}</label><input id=\"cprval\" class=\"rgb-field default-focus-outline\" ng-model=\"rgb.r\" ng-change=\"changeValue(\\'r\\')\" ng-model-options=\"{ debounce: 500 }\"/></div>' +\n\t\t\t\t\t'<div class=\"rgb-field-element\"><label for=\"cpgval\" class=\"rgb-label\">{{locale.greenChar}}</label><input id=\"cpgval\" class=\"rgb-field default-focus-outline\" ng-model=\"rgb.g\" ng-change=\"changeValue(\\'g\\')\" ng-model-options=\"{ debounce: 500 }\"/></div>' +\n\t\t\t\t\t'<div class=\"rgb-field-element\"><label for=\"cpbval\" class=\"rgb-label\">{{locale.blueChar}}</label><input id=\"cpbval\" class=\"rgb-field default-focus-outline\" ng-model=\"rgb.b\" ng-change=\"changeValue(\\'b\\')\" ng-model-options=\"{ debounce: 500 }\"/></div>' +\n\t\t\t\t\t'<div class=\"rgb-field-element\"><label for=\"cpaval\" class=\"rgb-label\">{{locale.alphaChar}}</label><input id=\"cpaval\" class=\"rgb-field default-focus-outline\" ng-model=\"rgb.a\" ng-change=\"changeValue(\\'a\\')\" ng-model-options=\"{ debounce: 500 }\"/></div>' +\n\t\t\t\t'</div>',\n\t\tlink: function(scope) {\n\t\t\tscope.rgb = scope.color.getRGB();\n\n\t\t\tscope.changeValue = function(key) {\n\t\t\t\tif (key == \"a\")\n\t\t\t\t\tscope.rgb[key] = scope.color.utils.enforceNormalizedRange(scope.rgb[key]);\n\t\t\t\telse\n\t\t\t\t\tscope.rgb[key] = scope.color.utils.enforce8BitRange(scope.rgb[key]);\n\n\t\t\t\tscope.color.setRGB(scope.rgb);\n\t\t\t\tif (scope.hsl) {\n\t\t\t\t\tvar hsl = scope.color.getHSL();\n\t\t\t\t\t[\"h\",\"s\",\"l\",\"a\"].forEach(function(key) {\n\t\t\t\t\t\tscope.hsl[key] = hsl[key];\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tscope.$watchGroup([\"color.r\",\"color.g\",\"color.b\",\"color.a\"], function() {\n\t\t\t\t['r','g','b','a'].forEach(function(key) {\n\t\t\t\t\tscope.rgb[key] = scope.color.getRGB()[key];\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t};\n})\n.directive(\"snColorPickerHexField\", function() {\n\treturn {\n\t\trestrict: \"E\",\n\t\treplace: true,\n\t\trequire: \"^snColorPickerHsl\",\n\t\ttemplate: '<div class=\"cp-control hex-field-container\" ><label for=\"cpcode\" class=\"hex-label\">{{locale.colorCode}}</label><input id=\"cpcode\" class=\"hex-field default-focus-outline\" ng-model=\"colorCode\" ng-model-options=\"{ debounce: 500 }\" ng-change=\"setColorFromCode()\" ng-blur=\"setHexFieldValue()\"></div>',\n\t\tlink: function(scope, element) {\n\t\t\tscope.colorCode = scope.color.getColor();\n\n\t\t\tscope.$watchGroup([\"color.r\",\"color.g\",\"color.b\",\"color.a\"], function() {\n\t\t\t\tif (scope.hexFieldChange) {\n\t\t\t\t\tscope.hexFieldChange = false;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tscope.colorCode = scope.color.getColor();\n\t\t\t});\n\n\t\t\tscope.setHexFieldValue = function() {\n\t\t\t\tscope.colorCode = scope.color.getColor();\n\t\t\t};\n\n\t\t\tscope.setColorFromCode = function() {\n\t\t\t\tscope.hexFieldChange = true;\n\t\t\t\tscope.color.setColor(scope.colorCode);\n\t\t\t\tif (scope.hsl) {\n\t\t\t\t\tvar hsl = scope.color.getHSL();\n\t\t\t\t\t[\"h\",\"s\",\"l\",\"a\"].forEach(function(key) {\n\t\t\t\t\t\tscope.hsl[key] = hsl[key];\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t};\n})\n.directive(\"snColorPickerPallet\", function() {\n\treturn {\n\t\trestrict: \"E\",\n\t\treplace: true,\n\t\tcontroller: function() {\n\t\t\t//Blank controller to satisfy the require.\n\t\t},\n\t\ttemplate: '<div id=\"cpPalletPanel\" role=\"tabpanel\" aria-labelledby=\"cpPalletTab\">' +\n\t\t\t\t\t'<div class=\"cp-control-group cp-pallet\" role=\"radiogroup\">' +\n\t\t\t\t\t'<sn-color-picker-pallet-color ng-repeat=\"palletColor in options.pallet | limitTo: state.maxPalletColors\"></sn-color-picker-pallet-color>' +\n\t\t\t\t\t'<sn-color-picker-pallet-toggle ng-if=\"options.toggle\"></sn-color-picker-pallet-toggle>' +\n\t\t\t\t'</div>' +\n\t\t'</div>'\n\t};\n})\n.directive(\"snColorPickerPalletColor\", function() {\n\treturn {\n\t\trestrict: \"E\",\n\t\trequire: \"^snColorPickerPallet\",\n\t\treplace: true,\n\t\ttemplate: '<button class=\"cp-control pallet-color default-focus-outline\" ng-style=\"{\\'background-color\\': palletColor}\" ng-click=\"selectColor()\" ng-class=\"{\\'selected\\': selected()}\" role=\"radio\" aria-label=\"{{palletColor}}\" aria-checked=\"{{selected()}}\"><span class=\"icon-check dead-centre selected-color\" ng-show=\"selected()\"></span></buton>',\n\t\tlink: function(scope) {\n\n\t\t\tscope.selected = function() {\n\t\t\t\tif (!scope.state.selectedColor || !scope.palletColor)\n\t\t\t\t\treturn false;\n\n\t\t\t\treturn scope.state.selectedColor.toLowerCase() === scope.palletColor.toLowerCase();\n\t\t\t};\n\n\t\t\tscope.selectColor = function() {\n\t\t\t\tscope.color.setColor(scope.palletColor);\n\t\t\t\tif (scope.hsl) {\n\t\t\t\t\tvar hsl = scope.color.getHSL();\n\t\t\t\t\t[\"h\",\"s\",\"l\",\"a\"].forEach(function(key) {\n\t\t\t\t\t\tscope.hsl[key] = hsl[key];\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tscope.$watchGroup([\"color.r\",\"color.g\",\"color.b\", \"color.a\"], function() {\n\t\t\t\tscope.state.selectedColor = scope.color.rgbHex();\n\t\t\t});\n\t\t}\n\t};\n})\n.directive(\"snColorPickerPalletToggle\", [\"VIEW\", function(VIEW) {\n\treturn {\n\t\trestrict: \"E\",\n\t\treplace: true,\n\t\ttemplate: '<button class=\"cp-control pallet-toggle\" ng-class=\"{\\'to-pallet\\': state.view==\\'hsl\\', \\'to-hsl\\': state.view==\\'pallet\\'}\"></button>',\n\t\tlink: function(scope, element) {\n\n\t\t\tfunction toggleView() {\n\t\t\t\tif (scope.state.view == VIEW.HSL)\n\t\t\t\t\tscope.action.palletView();\n\t\t\t\telse\n\t\t\t\t\tscope.action.hslView();\n\t\t\t}\n\n\t\t\telement.on(\"click\", function(event) {\n\t\t\t\tevent.stopPropagation();\n\t\t\t\ttoggleView();\n\t\t\t\tscope.$apply();\n\t\t\t});\n\n\t\t\tscope.$watch(\"state.selectedColor\", function() {\n\t\t\t\telement.css(\"background-color\", scope.color.rgbBaseHue());\n\t\t\t});\n\t\t}\n\t};\n}]);","sys_class_name":"sys_ui_script","sys_id":"bf0524295720130034d169202d94f9e0","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1ae06f355710130034d169202d94f92e","value":"1ae06f355710130034d169202d94f92e"},"ui_type":"0","sys_update_name":"sys_ui_script_bf0524295720130034d169202d94f9e0","sys_updated_by":"admin","sys_created_on":"2018-02-27 13:33:28","name":"sn_chg_soc_cp.snColorPicker","sys_name":"sn_chg_soc_cp.snColorPicker","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1ae06f355710130034d169202d94f92e","value":"1ae06f355710130034d169202d94f92e"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"1","active":"true","description":"Service meetingCalendar.  Retrieves CAB Meeting information.","use_scoped_format":"false","global":"false","sys_updated_on":"2016-10-12 11:13:43","sys_tags":"","script_name":"cal.meetingCalendar","script":"angular.module(\"sn.change_management.cab.calendar\")\n\t.service(\"meetingCalendar\", ['CAB', 'modelUtil', '$http', '$q', '$log', function(CAB, modelUtil, $http, $q, $log) {\n\t\tvar meetingCalendar = this;\n\t\t\n\t\tmeetingCalendar.getMeetingsBetween = function(startDateMs, endDateMs) {\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.get(CAB.SERVICE.MEETING_CALENDAR + startDateMs + \"/\" + endDateMs ).then(\n\t\t\t\tfunction(response){\n\t\t\t\t\tresponse.data.result.forEach(function(meeting){\n\t\t\t\t\t\tmodelUtil.addValueMSToAll(meeting);\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\treturn deferred.resolve(response.data.result);\n\t\t\t\t},\n\t\t\t\tfunction(response){\n\t\t\t\t\tmodelUtil.failNicely(response);\n\t\t\t\t\treturn deferred.reject(response);\n\t\t\t\t}\n\t\t\t);\n\t\t\t\n\t\t\treturn deferred.promise;\n\t\t};\n\t}]);","sys_class_name":"sys_ui_script","sys_id":"bf8fd157d752220034d145bcce61033b","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"ui_type":"","sys_update_name":"sys_ui_script_bf8fd157d752220034d145bcce61033b","sys_updated_by":"admin","sys_created_on":"2016-10-11 15:31:38","name":"sn_change_cab.cal.meetingCalendar","sys_name":"sn_change_cab.cal.meetingCalendar","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"14","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2024-06-10 15:39:38","sys_tags":"","script_name":"landing.app","script":"var app = angular.module(\"sn.chg_model_ui.landing\", [\"sn.common\",\n\t\"sn.common.glide\",\n\t\"sn.app_common\",\n\t\"ui.bootstrap\",\n\t\"ngAnimate\",\n\t\"sn.app_itsm.now.filter\",\n\t\"sn.app_itsm.now.accessibility\",\n\t\"sn.app_itsm.now.iscroll\",\n\t\"sn.chg_model_ui.tooltip_overflow\",\n\t\"sn.chg_model_ui.landing_splash_screens\",\n\t\"sn.chg_model_ui.notification\"\n]);\napp.controller(\"ChgModelLandingController\", [\"$scope\", \"$window\", \"userPreferences\", \"getTemplateUrl\", \"i18n\", \"$timeout\", \"$filter\", \"snConnectService\", \"chgModelService\", \"TextSearchService\", \"HighlightService\", \"ChgModelConstants\",\n\tfunction($scope, $window, userPreferences, getTemplateUrl, i18n, $timeout, $filter, snConnectService, chgModelService, TextSearchService, HighlightService, ChgModelConstants) {\n\n\t\tvar chgModelLandingCtrl = this;\n\t\tvar userPreferenceScheduleFilter = \"sn_chg_model_ui.landing_page.chg_model_filter\";\n\t\tvar debounceTimeout;\n\n\t\tchgModelLandingCtrl.isRTL = angular.element(\"html\").hasClass(\"rtl\");\n\t\tchgModelLandingCtrl.showChgModels = false;\n\t\tchgModelLandingCtrl.textSearchReadOnly = true;\n\t\tchgModelLandingCtrl.textSearch = \"\";\n\t\tchgModelLandingCtrl.scheduleOffset = 0;\n\t\tchgModelLandingCtrl.limitReached = false;\n\t\tchgModelLandingCtrl.showChgModelPinnedMsg = false;\n\t\tchgModelLandingCtrl.loading = true;\n\t\tchgModelLandingCtrl.searching = false;\n\t\tchgModelLandingCtrl.cardClicked = false;\n\t\tchgModelLandingCtrl.canCreateSchedule = ($window.NOW.chg_model_landing.canCreate === \"true\");\n\n\t\tchgModelLandingCtrl.filter = $window.NOW.chg_model_landing.chg_model_filter || \"pinned\";\n\t\tchgModelLandingCtrl.userID = $window.NOW.user_id;\n\t\tchgModelLandingCtrl.limit = parseInt($window.NOW.chg_model_landing.chg_model_limit || \"40\");\n\t\tchgModelLandingCtrl.maxChgModels = parseInt($window.NOW.chg_model_landing.max_chg_models || \"300\");\n\t\tchgModelLandingCtrl.notificationTimeout = parseInt($window.NOW.chg_model_landing.notification_timeout || \"4000\");\n\t\tchgModelLandingCtrl.isStdChgCatalogActive = ($window.NOW.chg_model_landing.isStdChgCatalogActive === \"true\");\n\t\tchgModelLandingCtrl.isAccessibilityEnabled = ($window.NOW.chg_model_landing.isAccessibilityEnabled === \"true\");\n\t\tchgModelLandingCtrl.showPinnedNotification = ($window.NOW.chg_model_landing.pinned_notification === \"true\");\n\n\t\t$scope.$on(\"textSearch\", function(event, textSearch) {\n\t\t\tchgModelLandingCtrl.textSearch = textSearch;\n\t\t\tchgModelLandingCtrl.searching = true;\n\t\t\tif (debounceTimeout)\n\t\t\t\t$timeout.cancel(debounceTimeout);\n\t\t\tdebounceTimeout = $timeout(function() {\n\t\t\t\t_reset();\n\t\t\t}, 1000);\n\t\t});\n\n\t\t$scope.$watch(\"selectedSort\", function(newValue, oldValue) {\n\t\t\tif (!newValue || !oldValue)\n\t\t\t\treturn;\n\n\t\t\t_reset();\n\t\t});\n\n\t\tfunction _isFiltered() {\n\t\t\treturn chgModelLandingCtrl.textSearch.trim() !== \"\";\n\t\t}\n\n\t\t$scope.isLoading = function() {\n\t\t\treturn chgModelLandingCtrl.loading;\n\t\t};\n\n\t\tchgModelLandingCtrl.isSearching = function() {\n\t\t\treturn chgModelLandingCtrl.searching;\n\t\t};\n\n\t\tfunction _showPinnedNotification(chgModel) {\n\t\t\tif (!chgModel || !chgModel.sys_id || !chgModel.name || !chgModelLandingCtrl.showPinnedNotification)\n\t\t\t\treturn;\n\n\t\t\tvar msg = chgModelLandingCtrl.isPinned(chgModel.sys_id.value) ? chgModelLandingCtrl.form.addTo : chgModelLandingCtrl.form.removeFrom;\n\n\t\t\tchgModelLandingCtrl.form.schedulePinnedMsg = i18n.format(msg, {\n\t\t\t\tname: chgModel.name.display_value,\n\t\t\t\tyourPinned: chgModelLandingCtrl.form.pinned.title\n\t\t\t});\n\n\t\t\tchgModelLandingCtrl.showChgModelPinnedMsg = true;\n\n\t\t\t$timeout(function() {\n\t\t\t\tchgModelLandingCtrl.showChgModelPinnedMsg = false;\n\t\t\t}, chgModelLandingCtrl.notificationTimeout);\n\n\t\t}\n\n\t\tfunction _splashScreenVisibility() {\n\t\t\tchgModelLandingCtrl.showSplashMsg = chgModelService.showSplashMsg(chgModelLandingCtrl.filter) && !_isFiltered();\n\t\t\tchgModelLandingCtrl.textSearchReadOnly = chgModelLandingCtrl.showSplashMsg;\n\t\t\tchgModelLandingCtrl.showChgModels = !chgModelLandingCtrl.showSplashMsg;\n\t\t}\n\n\t\tchgModelLandingCtrl.getTabs = function() {\n\t\t\tvar tabs = [\"pinned\", \"all\"];\n\t\t\tif (chgModelLandingCtrl.isStdChgCatalogActive) {\n\t\t\t\ttabs.push(\"preapproved\");\n\t\t\t\ttabs.push(\"change_models\");\n\t\t\t}\n\t\t\treturn tabs.join(\" \");\n\t\t};\n\n\t\tchgModelLandingCtrl.getTitle = function() {\n\t\t\treturn chgModelLandingCtrl.form[chgModelLandingCtrl.filter].splash_title || chgModelLandingCtrl.form[chgModelLandingCtrl.filter].title || \"\";\n\t\t};\n\n\t\tchgModelLandingCtrl.getDescription = function() {\n\t\t\treturn chgModelLandingCtrl.form[chgModelLandingCtrl.filter].description || \"\";\n\t\t};\n\n\t\tchgModelLandingCtrl.highlight = function(text, search) {\n\t\t\treturn HighlightService.highlight(text, search, \"change-model__highlight\");\n\t\t};\n\n\t\tchgModelLandingCtrl.clearFilters = function() {\n\t\t\tTextSearchService.clearFilters();\n\t\t};\n\n\t\tchgModelLandingCtrl.showClearFilters = function() {\n\t\t\treturn _isFiltered();\n\t\t};\n\n\t\tchgModelLandingCtrl.foundChangeModels = function() {\n\t\t\tvar filteredChgModels = TextSearchService.getFilteredArray(chgModelLandingCtrl.chgModelArray, chgModelLandingCtrl.textSearch);\n\t\t\treturn chgModelLandingCtrl.initialLoad || (_isFiltered() && filteredChgModels && filteredChgModels.length > 0);\n\t\t};\n\n\t\tchgModelLandingCtrl.showNoResultsFound = function() {\n\t\t\tif (!_isFiltered())\n\t\t\t\treturn false;\n\n\t\t\treturn !chgModelLandingCtrl.foundChangeModels() && !chgModelLandingCtrl.isSearching() && !$scope.isLoading() && !chgModelLandingCtrl.showSplashMsg;\n\t\t};\n\n\t\tchgModelLandingCtrl.isPinned = function(sysId) {\n\t\t\tif (!chgModelService.changeModels.hasOwnProperty(\"__struct\"))\n\t\t\t\treturn false;\n\n\t\t\treturn chgModelService.changeModels.__struct[\"pinned\"].sysIds.indexOf(sysId) !== -1;\n\t\t};\n\n\t\tchgModelLandingCtrl.isDisabled = function() {\n\t\t\tif (!chgModelService.changeModels || !chgModelService.changeModels.__struct || $scope.isLoading())\n\t\t\t\treturn true;\n\n\t\t\treturn chgModelService.changeModels.__struct[chgModelLandingCtrl.filter].sysIds.length === 0 && !_isFiltered();\n\t\t};\n\n\t\tchgModelLandingCtrl.setCardClicked = function() {\n\t\t\tchgModelLandingCtrl.cardClicked = true;\n\t\t};\n\n\t\tchgModelLandingCtrl.isCardClicked = function() {\n\t\t\treturn chgModelLandingCtrl.cardClicked;\n\t\t};\n\n\t\tchgModelLandingCtrl.togglePinned = function($event, chgModel) {\n\t\t\t$event.stopPropagation();\n\t\t\t$event.preventDefault();\n\n\t\t\tif (!chgModel || !chgModel.sys_id)\n\t\t\t\treturn;\n\n\t\t\tchgModelService.togglePinned(chgModel.sys_id.value);\n\t\t\t_showPinnedNotification(chgModel);\n\t\t\t_splashScreenVisibility();\n\t\t};\n\n\t\tchgModelLandingCtrl.immediateCheck = function() {\n\t\t\tif (!chgModelService.changeModels.hasOwnProperty(\"__struct\"))\n\t\t\t\treturn false;\n\n\t\t\treturn chgModelService.hasMoreChangeModels(chgModelLandingCtrl.filter);\n\t\t};\n\n\t\tchgModelLandingCtrl.getOrderBy = function() {\n\t\t\tif (!$scope.selectedSort)\n\t\t\t\treturn \"name\";\n\n\t\t\treturn $scope.selectedSort;\n\t\t};\n\n\t\tchgModelLandingCtrl.getPinA11yLabel = function(name, sysId) {\n\t\t\treturn chgModelLandingCtrl.isPinned(sysId) ?\n\t\t\t\ti18n.format(chgModelLandingCtrl.form.unpinChangeModelA11y, {\n\t\t\t\t\tname: name\n\t\t\t\t}) :\n\t\t\t\ti18n.format(chgModelLandingCtrl.form.pinChangeModelA11y, {\n\t\t\t\t\tname: name\n\t\t\t\t});\n\t\t};\n\n\t\tchgModelLandingCtrl.filterBy = function(filter) {\n\t\t\tif (chgModelLandingCtrl.filter === filter)\n\t\t\t\treturn;\n\n\t\t\tchgModelLandingCtrl.filter = filter;\n\t\t\t$window.NOW.chg_model_landing.chg_model_filter = filter;\n\t\t\t_splashScreenVisibility();\n\t\t\tchgModelService.hasReachedLimit(filter);\n\t\t\tuserPreferences.setPreference(userPreferenceScheduleFilter, filter);\n\t\t\tchgModelLandingCtrl.getChangeModels(chgModelLandingCtrl.textSearch);\n\t\t};\n\n\t\tchgModelLandingCtrl.getChgModelArray = function() {\n\t\t\tvar arr = [];\n\n\t\t\tif (!chgModelLandingCtrl.filter)\n\t\t\t\treturn arr;\n\n\t\t\tif (chgModelService.changeModels.hasOwnProperty(\"__struct\") && !chgModelLandingCtrl.searching) {\n\t\t\t\tvar arraySysIds = chgModelService.changeModels.__struct[chgModelLandingCtrl.filter].sysIds;\n\n\t\t\t\tfor (var i = 0; i < arraySysIds.length && i < chgModelLandingCtrl.maxChgModels; i++)\n\t\t\t\t\tarr.push(chgModelService.changeModels.chg_model[arraySysIds[i]]);\n\t\t\t}\n\t\t\treturn arr;\n\t\t};\n\n\t\tchgModelLandingCtrl.chgModelArray = [];\n\n\t\tfunction _getLimit() {\n\t\t\tif (!chgModelService.changeModels.__struct)\n\t\t\t\treturn chgModelLandingCtrl.limit;\n\t\t\tchgModelLandingCtrl.limit = chgModelService.changeModels.__struct[chgModelLandingCtrl.filter].limit; // Reset limit, just in case it's below minimum\n\t\t\tif (chgModelService.changeModels.__struct[chgModelLandingCtrl.filter].maxLimit - chgModelService.changeModels.__struct[chgModelLandingCtrl.filter].offset > chgModelLandingCtrl.limit)\n\t\t\t\treturn chgModelLandingCtrl.limit;\n\n\t\t\treturn chgModelService.changeModels.__struct[chgModelLandingCtrl.filter].maxLimit - chgModelService.changeModels.__struct[chgModelLandingCtrl.filter].offset;\n\t\t}\n\n\t\tchgModelLandingCtrl.getChangeModels = function() {\n\t\t\tif ($scope.isLoading() || chgModelService.hasReachedLimit(chgModelLandingCtrl.filter) || !chgModelService.hasMoreChangeModels(chgModelLandingCtrl.filter)) {\n\t\t\t\tchgModelLandingCtrl.chgModelArray = chgModelLandingCtrl.getChgModelArray();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Do not get more records if limit is zero or negative number\n\t\t\tif (chgModelService.changeModels.__struct[chgModelLandingCtrl.filter] && chgModelService.changeModels.__struct[chgModelLandingCtrl.filter].maxLimit < 1) {\n\t\t\t\tif (chgModelLandingCtrl.initialLoad)\n\t\t\t\t\t_splashScreenVisibility();\n\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t_getChangeModels();\n\t\t};\n\n\t\tfunction _getChangeModels() {\n\t\t\tvar offset = chgModelService.changeModels.__struct[chgModelLandingCtrl.filter].offset;\n\t\t\tchgModelLandingCtrl.loading = true;\n\t\t\tchgModelService.getChangeModels(chgModelLandingCtrl.filter, chgModelLandingCtrl.getOrderBy(), offset, _getLimit(), chgModelLandingCtrl.textSearch.trim())\n\t\t\t\t.then(function(changeModels) {\n\t\t\t\t\tchgModelLandingCtrl.initialLoad = false;\n\t\t\t\t\t_splashScreenVisibility();\n\t\t\t\t\tchgModelLandingCtrl.chgModelArray = chgModelLandingCtrl.getChgModelArray();\n\t\t\t\t\tchgModelLandingCtrl.loading = false;\n\t\t\t\t})\n\t\t\t\t.catch(function(response) {\n\t\t\t\t\tif (response.status === 401)\n\t\t\t\t\t\t$window.location.reload();\n\t\t\t\t});\n\t\t}\n\n\t\tfunction _reset() {\n\t\t\tchgModelLandingCtrl.loading = true;\n\t\t\tchgModelService.initialHit(chgModelLandingCtrl.filter, chgModelLandingCtrl.getOrderBy(), _getLimit(), chgModelLandingCtrl.textSearch.trim())\n\t\t\t\t.then(function(changeModels) {\n\t\t\t\t\tchgModelLandingCtrl.initialLoad = false;\n\t\t\t\t\t_splashScreenVisibility();\n\t\t\t\t\tchgModelLandingCtrl.searching = false;\n\t\t\t\t\tchgModelLandingCtrl.chgModelArray = chgModelLandingCtrl.getChgModelArray();\n\t\t\t\t\tchgModelLandingCtrl.loading = false;\n\t\t\t\t})\n\t\t\t\t.catch(function(response) {\n\t\t\t\t\tif (response.status === 401)\n\t\t\t\t\t\t$window.location.reload();\n\t\t\t\t});\n\t\t}\n\n\t\tchgModelLandingCtrl.initialHit = function() {\n\t\t\tchgModelLandingCtrl.loading = true;\n\t\t\tchgModelService.initialHit(chgModelLandingCtrl.filter, chgModelLandingCtrl.getOrderBy(), _getLimit())\n\t\t\t\t.then(function(changeModels) {\n\t\t\t\t\tchgModelLandingCtrl.initialLoad = false;\n\t\t\t\t\t_splashScreenVisibility();\n\t\t\t\t\tchgModelLandingCtrl.chgModelArray = chgModelLandingCtrl.getChgModelArray();\n\t\t\t\t\tchgModelLandingCtrl.loading = false;\n\t\t\t\t})\n\t\t\t\t.catch(function(response) {\n\t\t\t\t\tif (response.status === 401)\n\t\t\t\t\t\t$window.location.reload();\n\t\t\t\t});\n\t\t};\n\n\t\tchgModelLandingCtrl.init = function() {\n\t\t\tchgModelLandingCtrl.initialLoad = true;\n\t\t\tchgModelLandingCtrl.initialHit();\n\t\t};\n\n\t\tchgModelLandingCtrl.getStateModel = function(chgModel) {\n\t\t\tif (!chgModel || !chgModel.state_choices)\n\t\t\t\treturn i18n.getMessage(\"No state model defined\");\n\n\t\t\tvar msg = i18n.getMessage(\"State model: {states}\");\n\t\t\tvar states = chgModel.state_choices.map(function(state) { return state.label; }).join(\", \");\n\t\t\treturn i18n.format(msg, { states: states });\n\t\t};\n\n\t\tchgModelLandingCtrl.getAccentStyle = function(color) {\n\t\t\tif (!color)\n\t\t\t\treturn {};\n\n\t\t\treturn { \"background-color\": color };\n\t\t};\n\n\t\tchgModelLandingCtrl.form = {};\n\t\tchgModelLandingCtrl.messages = {\n\t\t\t\"Loading...\": i18n.getMessage(\"Loading...\"),\n\t\t\t\"Searching...\": i18n.getMessage(\"Searching...\"),\n\t\t\t\"Limit Reached\": i18n.getMessage(\"You have reached the limit of visible Change Request Models in this view.\"),\n\t\t\t\"No results found\": i18n.getMessage(\"No results found\")\n\t\t};\n\n\t\tchgModelLandingCtrl.form.title = i18n.getMessage(\"Create a change request\");\n\t\tchgModelLandingCtrl.form.clearFilters = i18n.getMessage(\"Clear Filters\");\n\t\tchgModelLandingCtrl.form.pinChangeModel = i18n.getMessage(\"Pin Change Model\");\n\t\tchgModelLandingCtrl.form.pinChangeModelA11y = i18n.getMessage(\"Pin Change Model - {name}\");\n\t\tchgModelLandingCtrl.form.unpinChangeModel = i18n.getMessage(\"Unpin Change Model\");\n\t\tchgModelLandingCtrl.form.unpinChangeModelA11y = i18n.getMessage(\"Unpin Change Model - {name}\");\n\t\tchgModelLandingCtrl.form.pin = i18n.getMessage(\"Pin\");\n\t\tchgModelLandingCtrl.form.icon = i18n.getMessage(\"icon\");\n\t\tchgModelLandingCtrl.form.schedulePinnedMsg = \"\";\n\t\tchgModelLandingCtrl.form.addTo = i18n.getMessage(\"'{name}' added to '{yourPinned}'\");\n\t\tchgModelLandingCtrl.form.removeFrom = i18n.getMessage(\"'{name}' removed from '{yourPinned}'\");\n\t\tchgModelLandingCtrl.form.close = i18n.getMessage(\"Close\");\n\t\tchgModelLandingCtrl.form.state_model = i18n.getMessage(\"State model\");\n\n\t\tchgModelLandingCtrl.form.pinned = {};\n\t\tchgModelLandingCtrl.form.pinned.title = i18n.getMessage(\"Pinned\");\n\t\tchgModelLandingCtrl.form.pinned.splash_title = i18n.getMessage(\"No pinned models\");\n\t\tchgModelLandingCtrl.form.pinned.description = i18n.getMessage(\"You have no pinned models. When you pin a model, the model will be shown in this tab and you can access it directly.\");\n\n\t\tchgModelLandingCtrl.form.change_models = {};\n\t\tchgModelLandingCtrl.form.change_models.title = i18n.getMessage(\"Models\");\n\t\tchgModelLandingCtrl.form.change_models.splash_title = chgModelLandingCtrl.form.change_models.title;\n\t\tchgModelLandingCtrl.form.change_models.description = i18n.getMessage(\"A subset of Change Request types which have a change model.\");\n\n\t\tchgModelLandingCtrl.form.preapproved = {};\n\t\tchgModelLandingCtrl.form.preapproved.title = i18n.getMessage(\"Preapproved\");\n\t\tchgModelLandingCtrl.form.preapproved.splash_title = chgModelLandingCtrl.form.preapproved.title;\n\t\tchgModelLandingCtrl.form.preapproved.description = i18n.getMessage(\"A subset of Change Request types which are preapproved.\");\n\n\t\tchgModelLandingCtrl.form.all = {};\n\t\tchgModelLandingCtrl.form.all.title = i18n.getMessage(\"All\");\n\t\tchgModelLandingCtrl.form.all.splash_title = chgModelLandingCtrl.form.all.title;\n\t\tchgModelLandingCtrl.form.all.description = i18n.getMessage(\"All includes all change models you have access right to view.\");\n\n\t\t$scope.form = chgModelLandingCtrl.form;\n\t}\n]);","sys_class_name":"sys_ui_script","sys_id":"c0730abc53d350100999ddeeff7b12c4","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/bb9f15345332101034d1ddeeff7b12c8","value":"bb9f15345332101034d1ddeeff7b12c8"},"ui_type":"0","sys_update_name":"sys_ui_script_c0730abc53d350100999ddeeff7b12c4","sys_updated_by":"admin","sys_created_on":"2020-09-14 14:03:23","name":"sn_chg_model_ui.landing.app","sys_name":"sn_chg_model_ui.landing.app","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/bb9f15345332101034d1ddeeff7b12c8","value":"bb9f15345332101034d1ddeeff7b12c8"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"75","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2025-06-05 05:18:18","sys_tags":"","script_name":"","script":"var ChannelClient = Class.create();\r\n\r\nChannelClient.prototype = {\r\n    initialize: function(iframe, autoCreate) {\r\n        this.iframe = iframe;\r\n        this.fdocument = this._getFrameDocument();\r\n        this.channelName = iframe.getAttribute(\"channel\");\r\n        this.autoCreate = autoCreate;\r\n    },\r\n\r\n    writeMsg: function(msg) {\r\n        var gaj = new GlideAjax(\"ChannelAjax\");\r\n        gaj.addParam(\"sysparm_name\", this.channelName);\r\n        gaj.addParam(\"sysparm_type\", \"write\");\r\n        gaj.addParam(\"sysparm_chars\", msg);\r\n        gaj.addParam(\"sysparm_silent_request\", \"true\");\r\n        gaj.getXML(doNothing);\r\n    },\r\n\r\n    stream: function() {\r\n        this._initUnloader();\r\n        this.streamChannel(0);\r\n    },\r\n\r\n    streamChannel: function(lastSeq) {\r\n        var gaj = new GlideAjax(\"ChannelAjax\");\r\n        gaj.addParam(\"sysparm_name\", this.channelName);\r\n        gaj.addParam(\"sysparm_type\", \"read\");\r\n        gaj.addParam(\"sysparm_value\", lastSeq);\r\n        gaj.addParam(\"sysparm_silent_request\", \"true\");\r\n        gaj.addParam(\"sysparm_express_transaction\", \"true\");\r\n\r\n        if (this.autoCreate)\r\n            gaj.addParam(\"sysparm_auto_create\", \"true\");\r\n\r\n        gaj.getXML(this.gotChannelMessages.bind(this));\r\n    },\r\n\r\n    gotChannelMessages: function(response) {\r\n        if (this.haveError(response))\r\n            return;\r\n\r\n        var lastSeq = response.responseXML.documentElement.getAttribute(\"channel_last_sequence\");\r\n        var items = response.responseXML.getElementsByTagName(\"item\");\r\n        jslog(\"response=\" + response.responseText);\r\n\r\n        for(var i = 0; i < items.length; i++) {\r\n            var item = items[i];\r\n            var msg = item.getAttribute('message');\r\n            var date = item.getAttribute('date');\r\n            var friendlyDate = new Date(parseInt(date));\r\n            this.newMsg(getFormattedDateAndTime(friendlyDate) + \" \" + msg);\r\n        }\r\n\r\n        if (lastSeq != null)\r\n           this.streamChannel(lastSeq);\r\n    },\r\n\r\n    newMsg: function(msg) {\r\n        var el = this.fdocument.createElement('pre');\r\n        el.innerHTML = htmlEscape(msg);\r\n        this.fdocument.body.appendChild(el);\r\n\r\n        this.scroll();\r\n    },\r\n\r\n    scroll: function() {\r\n        if (this.iframe.getAttribute(\"autoscroll\") == 'true')\r\n            this.fdocument.documentElement.scrollTop = this.fdocument.documentElement.scrollHeight;\r\n    },\r\n\r\n    haveError: function(response) {\r\n        if (!response) {\r\n            alert(\"invalid response!\");\r\n            return true;\r\n        }\r\n\r\n        var interrupted = response.responseXML.documentElement.getAttribute(\"interrupted\");\r\n        if (interrupted)\r\n            return true;\r\n\r\n        var error = response.responseXML.documentElement.getAttribute(\"error\");\r\n        if (error) {\r\n            alert(\"ERROR: \" + error);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    },\r\n\r\n    _initUnloader: function() {\r\n        Event.observe(window, 'beforeunload', this._forceUnload.bind(this), false);\r\n    },\r\n\r\n    _forceUnload: function() {\r\n        this.iframe.src = \"threads.do?sysparm_action=interrupt&sysparm_name=streaming_channel&sysparm_value=\" + this.channelName;\r\n    },\r\n\r\n    _getFrameDocument: function() {\r\n        if (this.iframe.contentDocument) {\r\n            return this.iframe.contentDocument;  // For NS6\r\n        } else if (this.iframe.contentWindow) {\r\n            return this.iframe.contentWindow.document; // For IE5.5 and IE6\r\n        } else if (this.iframe.document) {\r\n            return this.iframe.document; // For IE5\r\n        }\r\n    },\r\n\r\n    type: \"ChannelClient\"\r\n}","sys_class_name":"sys_ui_script","sys_id":"c1d4ad890a0a0b4b001c1b8b6c1c61b7","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/3fc7e7bf04b12210559073c06a02f74e","value":"3fc7e7bf04b12210559073c06a02f74e"},"ui_type":"0","sys_update_name":"sys_ui_script_c1d4ad890a0a0b4b001c1b8b6c1c61b7","sys_updated_by":"system","sys_created_on":"2009-06-08 21:44:49","name":"ChannelClient","sys_name":"ChannelClient","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"glide.maint","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"60","active":"true","description":"Helper class to handle workflow activities and post processing for Password Reset application.","use_scoped_format":"false","global":"false","sys_updated_on":"2024-03-18 12:48:11","sys_tags":"","script_name":"","script":"var PwdWfManager = Class.create();\n\nPwdWfManager.prototype = {\n    wfResult: {\n        bPass: false,\n        msg: \"\"\n    },\n    requestId: \"\",\n    processId: \"\",\n    // Error Message to display in case of workflow errors\n    errorMsg: \"\",\n    startTime: \"\",\n    wfCheckDoneFrequency: 500,\n    wfTimeOut: 300000,\n    wfContextSysId: \"\",\n    redirectUrl: \"\",\n\n    initialize: function(_wfCheckDoneFrequency, _wfTimeOut) {\n        this.wfCheckDoneFrequency = _wfCheckDoneFrequency;\n        this.wfTimeOut = _wfTimeOut;\n    },\n\n    startWfViaAjax: function(processId, requestId, password, redirectUrl) {\n        this.requestId = requestId;\n        this.processId = processId;\n        this.redirectUrl = redirectUrl;\n        this.startTime = new Date().getTime();\n\n        var ga = new GlideAjax('PwdAjaxWFRequestProcessor');\n\n        // These 4 params are required.\n        ga.addParam('sysparm_name', 'startWorkflow');\n        ga.addParam('sysparam_request_id', requestId);\n        if (password != undefined) {\n            ga.addParam('sysparam_new_password', password);\n            ga.addParam(\"ni.nolog.sysparam_new_password\", \"true\");\n        }\n        ga.addParam('sysparam_pwd_csrf_token', findCSRFElement().value);\n        ga.addParam(\"ni.truncate.sysparam_pwd_csrf_token\", \"true\");\n        ga.getXML(this.callBackForStartWf.bind(this));\n    },\n\n    callBackForStartWf: function(response, args) {\n        //Let's handle the security.\n        handleSecurityFrom(response);\n\n        var res = response.responseXML.getElementsByTagName(\"response\");\n        var status = res[0].getAttribute(\"status\");\n        var message = res[0].getAttribute(\"message\");\n        this.wfContextSysId = res[0].getAttribute(\"value\");\n        if (status.match(/failure/i)) {\n            var is_flow = this.isFlow().toString();\n            if (is_flow === 'true' && message === \"non_fatal_failure\")\n                submitWithOKAndSysParam('$pwd_new.do', 'sysparm_page_text', message);\n            else\n                this._onError(message);\n            return;\n        }\n        this.setTimeoutForRefresh();\n    },\n\n    setTimeoutForRefresh: function() {\n        window.setTimeout(this.checkWFProgress.bind(this), this.wfCheckDoneFrequency);\n    },\n\n    //To check if the execution is through workflow or flow\n    isFlow: function() {\n        var ga = new GlideAjax('PwdAjaxWFRequestProcessor');\n        ga.addParam('sysparm_name', 'isFlow');\n        ga.addParam('sysparm_process_id', this.processId);\n        ga.getXMLWait();\n        return ga.getAnswer();\n    },\n\n    checkWFProgress: function() {\n        var currTime = new Date().getTime();\n        if (currTime - this.startTime > this.wfTimeOut) {\n            this._onError(\"TIMEOUT\");\n            return;\n        }\n\n        var is_flow = this.isFlow().toString();\n\n        if (is_flow === 'true') {\n            var gaCheck = new GlideAjax('PwdAjaxWFRequestProcessor');\n            gaCheck.addParam('sysparm_name', 'checkMaximumAttempts');\n            gaCheck.addParam('sysparam_request_id', this.requestId);\n            gaCheck.getXML(this.callBackForCheckResetAttempts.bind(this));\n        } else {\n            var ga = new GlideAjax('PwdAjaxWFRequestProcessor');\n            ga.addParam('sysparm_name', 'getWorkflowStatus');\n            ga.addParam('sysparam_wf_context_sys_id', this.wfContextSysId);\n            // csrf token\n            ga.addParam('sysparam_pwd_csrf_token', findCSRFElement().value);\n            ga.getXMLWait();\n\n            handleSecurityFrom(ga.requestObject);\n            var state = ga.getAnswer();\n\n            if (!state.match(/finished/i)) {\n                this.setTimeoutForRefresh();\n                return;\n            } else if (state.match(/failure/i)) {\n                this._onError(\"An error occured in PwdWfManager UI Script : checkWFProgress()\");\n                return;\n            }\n\n            var gaResult = new GlideAjax('PwdAjaxWFRequestProcessor');\n            gaResult.addParam('sysparm_name', 'getWorkflowResult');\n            gaResult.addParam('sysparam_wf_context_sys_id', this.wfContextSysId);\n            gaResult.addParam('sysparam_request_id', this.requestId);\n            // csrf token\n            gaResult.addParam('sysparam_pwd_csrf_token', findCSRFElement().value);\n            gaResult.getXML(this.callBackForGetWfContext.bind(this));\n        }\n    },\n\n    callBackForCheckResetAttempts: function(response) {\n        this._postProcessSuccess();\n    },\n\n    callBackForGetWfContext: function(response) {\n        handleSecurityFrom(response);\n\n        this._alert(\"client: callBackForGetWfContext triggered!\");\n\n        var history = response.responseXML.getElementsByTagName('history');\n        var names = response.responseXML.getElementsByTagName('activity');\n        var bAllActivitiesSucceeded = true;\n        // An array of obj representing the state of an activity\n        var allActivitiesObj = [];\n\n\n        // Grab all the activities in the workflow and build an array of objects\n        for (var ii = 0; ii < history.length; ii++) {\n            var tmp = {};\n            tmp.name = names[ii].getAttribute(\"name\");\n            tmp.index = history[ii].getAttribute(\"activity_index\");\n\n            tmp.result = history[ii].getAttribute(\"activity_result\");\n            if (tmp.result == undefined) {\n                tmp.result = \"\";\n            }\n\n            tmp.faultDescription = history[ii].getAttribute(\"fault_description\");\n            if (tmp.faultDescription == undefined) {\n                tmp.faultDescription = \"\";\n            }\n\n            allActivitiesObj.push(tmp);\n\n            this._alert(\"Adding activity: \" + \"index=\" + tmp.index + \" : name=\" + tmp.name + \" : result=\" + tmp.result + \" : faultDescription=\" + tmp.faultDescription);\n        }\n\n        // Iterate through activity history list to find the first error\n        allActivitiesObj.sort(function(a, b) {\n            return b.index - a.index;\n        });\n        var failingActivityObj = {};\n        for (var jj in allActivitiesObj) {\n            var eachObj = allActivitiesObj[jj];\n\n            if (eachObj.result == undefined)\n                continue;\n\n            if (eachObj.result.match(/failure/i)) {\n                bAllActivitiesSucceeded = false;\n                this._alert(\"Found an error in activity history -> \" + eachObj.name);\n\n                // Check if faultDescription is an json object. If so, this was created via SNC.PwdWorkflowManager().creatError().\n                try {\n                    failingActivityObj = eval(\"(\" + eachObj.faultDescription + \")\");\n                    this._alert(\"Fault description created via new SNC.PwdWorkflowManager().getErrorJSONString(...): \\n* wfName=\" + failingActivityObj.wfName + \"\\n* activityName=\" + failingActivityObj.activityName + \" \\n* message=\" + failingActivityObj.message + \" \\n* isFatal=\" + failingActivityObj.isFatal);\n                } catch (e) {\n                    //The faultDescription was created manually, and not via new SNC.PwdWorkflowManager().getErrorJSONString(...)\n                    this._alert(\"Fault description created manually\");\n                    failingActivityObj.message = eachObj.faultDescription;\n                    failingActivityObj.isFatal = true;\n                }\n                break;\n            }\n        }\n\n        try {\n            var res = response.responseXML.getElementsByTagName(\"response\");\n        } catch (error) {\n            alert(\"PwdWfManager caught exception! \" + error.message);\n        }\n        var wfGeneralStatus = res[0].getAttribute(\"status\");\n        var message = res[0].getAttribute(\"message\");\n        var value = res[0].getAttribute(\"value\");\n\n        if (!wfGeneralStatus.match(/success/i) || (!bAllActivitiesSucceeded)) {\n            //Check failure via by workflow result\n            this.wfResult.bPass = false;\n            this.wfResult.msg = failingActivityObj.message || \"Password reset request failed.\";\n        } else { //pass\n            this.wfResult.bPass = true;\n        }\n\n        this._alert(\"Final: WFContext results:\\n bPass=\" + this.wfResult.bPass + \" \\n msg=\" + this.wfResult.msg);\n\n        if (this.wfResult.bPass) {\n            this._postProcessSuccess();\n        } else {\n            if (failingActivityObj) {\n                if (!failingActivityObj.isFatal) {\n                    var max_reset_attempts = response.responseXML.getElementsByTagName('max_reset_attempts');\n                    if (max_reset_attempts.length) {\n                        failingActivityObj.isFatal = true;\n                        this._postProcessError(max_reset_attempts[0].getAttribute(\"message\"));\n                    } else {\n                        var msg = failingActivityObj.message || \"non fatal failure\";\n                        this._alert(msg);\n                        submitWithOKAndSysParam('$pwd_new.do', 'sysparm_page_text', msg);\n                    }\n                } else {\n                    this._postProcessError(this.wfResult.msg);\n                }\n            } else {\n                this._postProcessError(this.wfResult.msg);\n            }\n        }\n    },\n\n    _postProcessSuccess: function() {\n        var ga = this._createPostProcessAjax(\"true\");\n        ga.getXML(this._onSuccess.bind(this));\n    },\n\n    _postProcessError: function(msg) {\n        this.errorMsg = msg;\n        var ga = this._createPostProcessAjax(\"false\");\n        // Need to use the callback because of the parameter errorMsg\n        ga.getXML(this.callBackForPostProcessOnError.bind(this));\n    },\n\n    callBackForPostProcessOnError: function(response) {\n        this._onError(this.errorMsg);\n    },\n\n    _createPostProcessAjax: function(isSuccess) {\n        var ga = new GlideAjax('PwdAjaxWFRequestProcessor');\n        ga.addParam('sysparm_name', 'runPostProcessor');\n        ga.addParam('sysparam_request_id', this.requestId);\n        ga.addParam('sysparam_process_id', this.processId);\n        ga.addParam('sysparam_workflow_status', isSuccess);\n        ga.addParam('sysparam_pwd_csrf_token', findCSRFElement().value);\n        return ga;\n    },\n\n    _alert: function(msg) {\n        var debug = false;\n        if (debug) {\n            alert(msg);\n        }\n    },\n    _onError: function(errorReason) {\n        submitWithBlock('$pwd_error.do', errorReason);\n    },\n    _onSuccess: function(response) {\n        handleSecurityFrom(response);\n        if (this.redirectUrl) {\n            // Check if a top frame exists, if so change the\n            // top frame to the redirect url\n            if (window.top)\n                window.top.location.href = this.redirectUrl;\n            else\n                window.location.href = this.redirectUrl;\n        } else {\n            submitWithOKAndSysParam('$pwd_success.do', 'sysparm_success', 'SUCCESS');\n        }\n    },\n\n    type: \"PwdWfManager\"\n};","sys_class_name":"sys_ui_script","sys_id":"c3a2a9b2d7032100b9bc43d60e610390","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/421beb3304352210559073c06a02f7ef","value":"421beb3304352210559073c06a02f7ef"},"ui_type":"0","sys_update_name":"sys_ui_script_c3a2a9b2d7032100b9bc43d60e610390","sys_updated_by":"admin","sys_created_on":"2014-09-13 00:29:41","name":"$PwdWfManager","sys_name":"$PwdWfManager","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":"read"},{"ignore_in_now_experience":"false","sys_mod_count":"79","active":"true","description":"Support for Knowledge Base v2 with KCS","use_scoped_format":"false","global":"false","sys_updated_on":"2025-06-05 05:18:18","sys_tags":"","script_name":"","script":"        addLoadEvent(loadStars);\n\n        function loadStars() {\n          var vote = document.getElementById('vote');\n          if (vote) {\n             star1 = new Image();\n             star1.src = \"images/icons/kb_star_off.gifx\";\n             star2 = new Image();\n             star2.src = \"images/icons/kb_star_on.gifx\";\n             starFull = new Image();\n             starFull.src = \"images/icons/kb_star_full.gifx\";\n             starHalf = new Image();\n             starHalf.src = \"images/icons/kb_star_half.gifx\";\n          }\n        }\n\n        function postUsed(id,used){         \n          var view = document.getElementById(\"view_id\");\n          var query = document.getElementById(\"sysparm_search\");\n          openFeedback();\n          if (id) {\n            var ajax = new GlideAjax(\"KnowledgeAjax\");\n            ajax.addParam(\"sysparm_type\",\"kbGetText\");\n            ajax.addParam(\"sysparm_search\",escape(query.value));\n            ajax.addParam(\"article_id\",id);\n            ajax.addParam(\"used\",used);\n            if (view)\n               ajax.addParam(\"view_id\",view.value);\n            ajax.getXML(doNothing);\n          }\n          if(isNaN(used)){\n            if (used == 'yes') {\n              hideObject(gel('noarticlerating'));\n              var e = document.getElementById('yesarticlerating');\n              if (e) {\n                 e.setAttribute(\"onclick\",\"\");\n                 e.setAttribute(\"class\",\"kb_link_disable\");\n                 e.setAttribute(\"className\",\"kb_link_disable\");\n              }\n            } else if (used == 'no') {\n              hideObject(gel('yesarticlerating'));\n              show(\"kb_create_incident_link\");\n              var e = document.getElementById('noarticlerating');\n              if (e) {\n                 e.setAttribute(\"onclick\",\"\");\n                 e.setAttribute(\"class\",\"kb_link_disable\");\n                 e.setAttribute(\"className\",\"kb_link_disable\");\n              }\n            } else hideObject(gel('articlerating'));\n\n            showObject(gel('articleratingsubmitted'));\n          }\n        }\n\n\nvar answer = new GwtMessage().getMessages([\"Not rated\", \"Rated\", \"Rating\", \"by you\", \"average\", \"user rating\", \"user ratings\"]);\n\nfunction setStar(x) {\n    a = x + \"\";\n    set=true;\n    gel('vote').innerHTML = answer[\"Rated\"] + \" \" + x + \"/5 \" + answer[\"by you\"];\n    gel('rated_value').value = x;\n    var id = gel('sys_id').value; \n    postUsed(id, x);\n}\n\nfunction toggleArticleFlag(e) {\n   var msg = document.getElementById(\"commentsdiv_flagmsg\");\n   var inputdiv = document.getElementById(\"commentsdiv\");\n   var donemsg = document.getElementById(\"commentsdiv_done\");\n   var input = document.getElementById(\"article_comments\");\n   if (e.checked) {\n      showObject(msg);\n      hideObject(donemsg);\n      openFeedback();\n   } else\n      hideObject(msg);\n}\n\nfunction openFeedback() { \n   var cmtdivdone = document.getElementById('commentsdiv_done');\n   var cmtdiv = document.getElementById('commentsdiv');\t\n   if (cmtdivdone.style.display != \"block\") {\n      var commentsdiv = document.getElementById('commentsdiv');\n      showObject(commentsdiv);\n      document.getElementById('commentsimg').src=\"images/filter_reveal.gifx\";\n      document.getElementById('commentsimg').alt=\"Collapse\";\n      window.scrollBy(0,9999999);\n      var e = document.getElementById('article_comments');\n      if (e)\n         e.focus();\n      window.scrollBy(0,-20);\n   } else {\n\t   cmtdivdone.style.display = \"none\";\n\t   var feedBackText = document.getElementById('article_comments');\n\t   feedBackText.value = \"\";\n\t   cmtdiv.style.display = \"block\";\n   }\n}\n\nvar set=false;\nvar v=0;\nvar a;\n\nfunction highlight(x) {\n      for (i=1;i<6;i++) {\n          if (i < x * 1 + 1)\n             document.getElementById(i).src = star2.src;\n          else\n             document.getElementById(i).src = star1.src;\n      }\n      document.getElementById('vote').innerHTML = answer[\"Rating\"] + \": \" + x + \"/5\";\n}\n\nfunction losehighlight() {\n   var vote = gel('vote');\n   var num = gel(\"num_ratings\").value * 1;\n   var rating = gel(\"rating_value\").value * 1;\n   if (set == false) {\n      for (i=1;i<6;i++) {\n         if (rating > i - 0.25)\n             document.getElementById(i).src=starFull.src;\n         else if (rating > i - 0.75)\n             document.getElementById(i).src=starHalf.src;\n         else\n             document.getElementById(i).src=star1.src;\n      }\n      if (rating == 0)\n         vote.innerHTML = answer[\"Not rated\"];\n      else\n         vote.innerHTML = answer[\"Rated\"] + \" \" + rating.toFixed(2);\n      if (num == 1)\n         vote.title = num + \" \" + answer[\"user rating\"];\n      else\n         vote.title = num + \" \" + answer[\"user ratings\"];\n   } else {\n      var rated = gel(\"rated_value\").value * 1;\n      for (i=1;i<6;i++) {\n          if (i <= rated)\n             document.getElementById(i).src = star2.src;\n          else\n             document.getElementById(i).src = star1.src;\n      }\n      vote.innerHTML = answer[\"Rated\"] + \" \" + rated + \"/5 \" + answer[\"by you\"];\n      var totalScore = rating * num + rated;\n      var totalRatings = num * 1 + 1;\n      if (totalRatings == 1)\n         vote.title = (totalScore/totalRatings).toFixed(2) + \" \" + answer[\"average\"] + \", \" + totalRatings + \" \" + answer[\"user rating\"];\n      else\n         vote.title = (totalScore/totalRatings).toFixed(2) + \" \" + answer[\"average\"] + \", \" + totalRatings + \" \" + answer[\"user ratings\"];\n   }\n}\n\n// attachIncident2 uses a Script Include, attachIncident uses an AJAX Script\nfunction attachIncident2(x, target) {\n\tif (self.opener) {\n\t\tvar lastSaved = self.opener.document.getElementById(\"onLoad_sys_updated_on\").value;\n\t\t\tif (!lastSaved){\n\t\t\t\tself.close();\n\t\t\t\tvar err = (gel('error_msg')!=null)?gel('error_msg').value:\"Invalid action: Record needs to be saved first\";\n\t\t\t\tself.opener.g_form.addErrorMessage(err);\n\t\t\t    return false;\n\t\t\t}\n\t\tvar e = self.opener.document.getElementById(\"sys_uniqueValue\")\n\t\tvar task = e.value;\n\t}\n\tvar f = x.form;\n\tvar sysID = f.sys_id.value;\n   if (typeof sysID == \"undefined\") {\n\t  sysID = f.sys_id[0].value;\n   }\n    var args = new Array();\n    args.push(sysID);\n    args.push(target);\n    \n    var ajax = new GlideAjax(\"KnowledgeAjax\");\n    ajax.addParam(\"sysparm_type\",\"kbAttachArticle\");\n    ajax.addParam(\"sysparm_value\",sysID + \",\" + task);\n    ajax.getXML(kbReturnAttach2, \"\", args);\n    \n\treturn false;\n}\n\n// kbReturnAttach2 uses a Script Include, kbReturnAttach uses an AJAX Script\nfunction kbReturnAttach2(AJAXResponse, args) {\n\tvar fieldName = self.opener.fillField;\n\tvar tableName = fieldName.split('.')[0];\n\tvar sourceID = args[0];\n\tvar targetFields = args[1];\n\n    var items = AJAXResponse.responseXML.getElementsByTagName(\"item\");\n    if (items.length > 0) {\n        var item = items[0];\n        var name = item.getAttribute(\"name\");\n        var value = item.getAttribute(\"value\");\n    }\n\n\tif (!(self.opener)) {\n\t\tself.close();\n\t\treturn;\n\t}\n\n\tvar names = new Array();\n    if (targetFields) {\n\t    var parts = targetFields.split(\",\");\n \t    for (var i = 0; i < parts.length; i++)\n   \t        names.push(parts[i]);\n    }\n\tnames.push('comments');\n\tnames.push('description');\n\tvar target = null;\n\tvar targetName = null;\n\tfor (var i =0; i<names.length; i++) {\n\t\ttargetName = names[i];\n\t\ttarget = self.opener.document.getElementById(tableName + \".\" + targetName);\n\t\tif (target)\n\t\t\tbreak;\n\t}\n\t\n\tif (target) {\n\t\tvar ed = self.opener.g_form.getGlideUIElement(targetName);\n\t\tif (ed && ed.type == 'reference') {\n\t\t\tself.opener.g_form.setValue(targetName, sourceID);\n\t\t} else {\n\t\t\tvar newValue = \"\";\n\t\t\tif (target.value == \"\")\n\t\t\t\tnewValue = value;\n\t\t\telse\n\t\t    \tnewValue = target.value + \"\\n\" + value;\n\t\t    self.opener.g_form.setValue(targetName, newValue);\n\t\t}\n\t}\n\n\tself.close();\n}\n\nfunction kbFeedback2(name) {\n\tvar comments = ($(name) ? $(name).value : \"\");\n\tif (comments == \"\") {\n\t\tshowObject(gel('commentsdiv_empty'));\n\t\treturn false;\n\t}\n\n\tvar sys_id = ($('sys_id') ? $('sys_id').value : \"\");\n\tvar flag = document.getElementById(\"article_flag\");\n\tvar view_id = document.getElementById(\"view_id\");\n\tvar query = document.getElementById(\"sysparm_search\");\n\t\n    var ajax = new GlideAjax(\"KnowledgeAjax\");\n    ajax.addParam(\"sysparm_type\",\"kbWriteComment\");\n    ajax.addParam(\"sysparm_search\",escape(query.value));\n    ajax.addParam(\"sysparm_id\",sys_id);\n    if (flag)\n        ajax.addParam(\"sysparm_flag\",flag.checked);\n    ajax.addParam(\"sysparm_feedback\",escape(comments));\n    ajax.addParam(\"view_id\",view_id.value)\n    ajax.getXML(kbFeedbackDone);\n    var commentLinkDiv = $(\"comment_link_div\");\n    if (commentLinkDiv)\n        commentLinkDiv.hide();\n\n    return false;\n}","sys_class_name":"sys_ui_script","sys_id":"c3a333630a0a0b41004f6e93ab84039e","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/2fe727ff04b12210559073c06a02f7dd","value":"2fe727ff04b12210559073c06a02f7dd"},"ui_type":"0","sys_update_name":"sys_ui_script_c3a333630a0a0b41004f6e93ab84039e","sys_updated_by":"system","sys_created_on":"2009-07-28 23:13:29","name":"KnowledgeFunctions","sys_name":"KnowledgeFunctions","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"glide.maint","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"11","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2020-09-04 13:28:05","sys_tags":"","script_name":"filter_control","script":"/* Module with modal with filter and sort controllers */\nangular.module(\"sn.chg_soc.filter_control\", [\"ui.bootstrap\", \"sn.filter_widget\"])\n.constant(\"FILTER_CONTROL\", {\n\tTRACKING_KEY: {\n\t\tDRY_RUN: \"Dry run Change Schedule filter\"\n\t},\n\tTABLE_NAME: \"change_request\"\n})\n.directive(\"snSocFilterControl\", function(i18n, getTemplateUrl, $uibModal) {\n\t\"use strict\";\n\treturn {\n\t\treplace: true,\n\t\trestrict: \"E\",\n\t\ttemplateUrl: getTemplateUrl(\"sn_chg_soc_snSocConditionBuilder.xml\"),\n\t\tlink: function($scope, $element, $attrs) {\n\t\t\t$scope.messages = {\n\t\t\t\t\"Filter\": i18n.getMessage(\"Filter\")\n\t\t\t};\n\n\t\t\t$scope.openFilterControl = function() {\n\t\t\t\tvar modalInstance = $uibModal.open({\n\t\t\t\t\tanimation: true,\n\t\t\t\t\ttemplateUrl: getTemplateUrl(\"sn_chg_soc_snSocConditionBuilderTemplate.xml\"),\n\t\t\t\t\tcontroller: \"ModalInstanceCtrl\",\n\t\t\t\t\tsize: \"lg\"\n\t\t\t\t});\n\t\t\t};\n\t\t},\n\t\tcontroller: function($scope) {\n\t\t\t$scope.$on(\"isLoading\", function(loadingElements) {\n\t\t\t\t$scope.loadingElements = loadingElements;\n\t\t\t});\n\t\t}\n\t};\n})\n.controller('ModalInstanceCtrl', [\"$window\", \"i18n\", \"$scope\", \"$uibModalInstance\", \"$timeout\", \"dataService\", \"clientService\", \"urlService\", \"ganttChart\", \"socNotification\", \"FILTER_CONTROL\",\nfunction ($window, i18n, $scope, $uibModalInstance, $timeout, dataService, clientService, urlService, ganttChart, socNotification, FILTER_CONTROL) {\n\t$scope.showFilter = false;\n\t$scope.table = FILTER_CONTROL.TABLE_NAME;\n\t$scope.filterConfig = {\n\t\tdotWalking\t: false,\n\t\ttestFilter  : false,\n\t\tcloseFilter : false,\n\t\trunFilter   : false,\n\t\tsaveFilter  : false,\n\t\tloadFilter  : false,\n\t\tsortFilter  : true,\n\t\tclearFilter : false,\n\t\toutputType  : \"encoded_query\",\n\t\tencodedQuery: clientService.filter.condition.value\n\t};\n\n\t$scope.condition = clientService.filter.condition.value;\n\n\t$scope.$on(\"snfilter:update_query\", function(currentScope, queryString) {\n\t\t$scope.condition = queryString.replace(\"^ORDERBYundefined\", \"\");\n\t});\n\n\t$scope.enableRun = function() {\n\t\tif (!$scope.condition)\n\t\t\treturn false;\n\t\treturn $scope.condition !== \"\" && !$scope.condition.startsWith(\"^ORDERBY\");\n\t};\n\n\t$scope.cancel = function() {\n\t\t$uibModalInstance.dismiss(\"cancel\");\n\t};\n\n\t$scope.run = function() {\n\t\t// Retain chgDefId to help recover from dataService.destroyData & REST error\n\t\tif (clientService.filter.sys_id && clientService.filter.sys_id.value)\n\t\t\t$scope.chgDefId = clientService.filter.sys_id.value;\n\n\t\tvar hasDynamicCondition = false;\n\t\tif (!clientService.filter.sys_id || clientService.filter.condition.value !== $scope.condition) {\n\t\t\tvar chgDefId = clientService.filter.sys_id && clientService.filter.sys_id.value ? clientService.filter.sys_id.value : $scope.chgDefId;\n\n\t\t\t// Validate the condition\n\t\t\tdataService.parseQuery($scope.condition).then(function(query) {\n\t\t\t\tquery.parsed_query.forEach(function(terms) {\n\t\t\t\t\tif (!hasDynamicCondition && terms.filter(function(term) { return term.operator === \"DYNAMIC\"; } ).length > 0)\n\t\t\t\t\t\thasDynamicCondition = true;\n\t\t\t\t});\n\t\t\t}).then(function() {\n\t\t\t\tif (hasDynamicCondition)\n\t\t\t\t\tsocNotification.show(\"error\", i18n.getMessage(\"is (dynamic) filter operators are not supported\"), 0, null, \".soc-condition-builder-modal-message\");\n\t\t\t\telse {\n\t\t\t\t\tdataService.destroyData();\n\t\t\t\t\tdataService.initPage(chgDefId, $scope.condition).then(function() {\n\t\t\t\t\t\tdataService.trackEvent(FILTER_CONTROL.TRACKING_KEY.DRY_RUN);\n\t\t\t\t\t\tclientService.filter.condition.dryRun = $scope.condition !== clientService.filter.condition.value;\n\t\t\t\t\t\tclientService.filter.condition.value = $scope.condition;\n\t\t\t\t\t\tvar tasks = dataService.tasks;\n\t\t\t\t\t\tganttChart.updateGanttData(urlService.socId, dataService.tasks);\n\t\t\t\t\t\t$uibModalInstance.dismiss(\"cancel\");\n\t\t\t\t\t}).catch(function(response) {\n\t\t\t\t\t\t// dataService.destroyData() causes data model to be corrupt if REST called by initPage fails. Page refresh needed\n\t\t\t\t\t\tsocNotification.show(\"error\", response.data.error.message, 0, null, \".soc-condition-builder-modal-message\");\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t} else\n\t\t\t$uibModalInstance.dismiss(\"cancel\");\n\t};\n\n\t$scope.messages = {\n\t\t\"Run\" : i18n.getMessage(\"Run\"),\n\t\t\"Cancel\" : i18n.getMessage(\"Cancel\"),\n\t\t\"Close\" : i18n.getMessage(\"Close\"),\n\t\t\"Title\" : i18n.getMessage(\"Adjust Schedule Condition\"),\n\t};\n}]);\n","sys_class_name":"sys_ui_script","sys_id":"c3a4a7ac5790130035ae4786cc94f9e2","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"ui_type":"0","sys_update_name":"sys_ui_script_c3a4a7ac5790130035ae4786cc94f9e2","sys_updated_by":"admin","sys_created_on":"2018-02-12 14:36:45","name":"sn_chg_soc.filter_control","sys_name":"sn_chg_soc.filter_control","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"0","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2018-02-22 13:17:18","sys_tags":"","script_name":"keyboard","script":"angular.module(\"sn.chg_soc.keyboard\", [\"sn.common\"])\n\t.directive(\"socAsideKeyboard\", [\"getTemplateUrl\", \"ganttChart\", \"dataService\", \"objectKeysLengthFilter\", \"SOC\", \"i18n\", function(getTemplateUrl, ganttChart, dataService, objectKeysLengthFilter, SOC, i18n) {\n\t\t\"use strict\";\n\t\treturn {\n\t\t\trestrict: \"A\",\n\t\t\ttemplateUrl: getTemplateUrl(\"sn_chg_soc_aside_keyboard_body.xml\"),\n\t\t\tscope: {\n\t\t\t\tsocDefId: \"=\"\n\t\t\t},\n\t\t\tcontroller: function($scope, objectKeysLengthFilter) {\n\t\t\t\t$scope.objectKeysLengthFilter = objectKeysLengthFilter;\n\t\t\t\t$scope.keyboardShortcuts = [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: i18n.getMessage(\"global\"),\n\t\t\t\t\t\tshortcuts: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: i18n.getMessage(\"shift + /\"),\n\t\t\t\t\t\t\t\tdesc: i18n.getMessage(\"Open or close Keyboard shortcuts panel\"),\n\t\t\t\t\t\t\t\tscreen_reader: i18n.getMessage(\"Press shift and forward slash\"),\n\t\t\t\t\t\t\t\ttemplate: \"\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: i18n.getMessage(\"tab\"),\n\t\t\t\t\t\t\t\tdesc: i18n.getMessage(\"Put focus on scheduler\"),\n\t\t\t\t\t\t\t\tscreen_reader: i18n.getMessage(\"Press tab\"),\n\t\t\t\t\t\t\t\ttemplate: \"\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: i18n.getMessage(\"esc\"),\n\t\t\t\t\t\t\t\tdesc: i18n.getMessage(\"Close popovers\"),\n\t\t\t\t\t\t\t\tscreen_reader: i18n.getMessage(\"Press escape\"),\n\t\t\t\t\t\t\t\ttemplate: \"\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: i18n.getMessage(\"scheduler\"),\n\t\t\t\t\t\tshortcuts: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: \"\",\n\t\t\t\t\t\t\t\tdesc: i18n.getMessage(\"Scroll horizontally\"),\n\t\t\t\t\t\t\t\tscreen_reader: i18n.getMessage(\"Press and hold alt and left or right keys\"),\n\t\t\t\t\t\t\t\ttemplate: i18n.getMessage(\"alt +\") + \" <span class='icon icon-arrow-left'></span> / <span class='icon icon-arrow-right'></span>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: \"\",\n\t\t\t\t\t\t\t\tdesc: i18n.getMessage(\"Scroll vertically\"),\n\t\t\t\t\t\t\t\tscreen_reader: i18n.getMessage(\"Press and hold alt and up or down keys\"),\n\t\t\t\t\t\t\t\ttemplate: i18n.getMessage(\"alt +\") + \" <span class='icon icon-arrow-up'></span> / <span class='icon icon-arrow-down'></span>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: \"\",\n\t\t\t\t\t\t\t\tdesc: i18n.getMessage(\"Scroll by record\"),\n\t\t\t\t\t\t\t\tscreen_reader: i18n.getMessage(\"Press up and down keys\"),\n\t\t\t\t\t\t\t\ttemplate: \"<span class='icon icon-arrow-up'></span> / <span class='icon icon-arrow-down'></span>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: \"\",\n\t\t\t\t\t\t\t\tdesc: i18n.getMessage(\"Show/hide child records\"),\n\t\t\t\t\t\t\t\tscreen_reader: i18n.getMessage(\"Press shift and right or left keys\"),\n\t\t\t\t\t\t\t\ttemplate: i18n.getMessage(\"shift +\") + \" <span class='icon icon-arrow-right'></span> / <span class='icon icon-arrow-left'></span>\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: i18n.getMessage(\"space\"),\n\t\t\t\t\t\t\t\tdesc: i18n.getMessage(\"Select record\"),\n\t\t\t\t\t\t\t\tscreen_reader: i18n.getMessage(\"Press space\"),\n\t\t\t\t\t\t\t\ttemplate: \"\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlabel: i18n.getMessage(\"enter\"),\n\t\t\t\t\t\t\t\tdesc: i18n.getMessage(\"Open more information popover for record\"),\n\t\t\t\t\t\t\t\tscreen_reader: i18n.getMessage(\"Press enter\"),\n\t\t\t\t\t\t\t\ttemplate: \"\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t];\n\t\t\t}\n\t\t};\n\t}]);","sys_class_name":"sys_ui_script","sys_id":"c510a0b4c34413009f93dfdc64d3aeaf","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"ui_type":"","sys_update_name":"sys_ui_script_c510a0b4c34413009f93dfdc64d3aeaf","sys_updated_by":"admin","sys_created_on":"2018-01-31 08:44:00","name":"sn_chg_soc.keyboard","sys_name":"sn_chg_soc.keyboard","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"2","active":"true","description":"Controller for Modal form popups in CAB Woekbench","use_scoped_format":"false","global":"false","sys_updated_on":"2019-08-13 14:09:59","sys_tags":"","script_name":"ModalCtrl","script":"angular.module('sn.change_management.cab')\n\t.controller('ModalCtrl', function ($scope, $uibModalInstance, data) {\n\t\t$scope.data = data;\n\t\t$('body').on('DismissCabwModal', function () {\n\t\t\t$scope.cancel();\n\t\t});\n\t\t$scope.modalName = $scope.data.cabwModalName;\n\t\t$scope.cancel = function() {\n\t\t\t$uibModalInstance.dismiss();\n\t\t};\n\t\t$scope.$on('$destroy', function () {\n\t\t\t$('body').off('DismissCabwModal');\n\t\t});\n\t});","sys_class_name":"sys_ui_script","sys_id":"c58619366710320034d1afa00585ef8b","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"ui_type":"0","sys_update_name":"sys_ui_script_c58619366710320034d1afa00585ef8b","sys_updated_by":"admin","sys_created_on":"2017-01-17 11:40:59","name":"sn_change_cab.ModalCtrl","sys_name":"sn_change_cab.ModalCtrl","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"6","active":"true","description":"Service timerService.  Allows creation of named timer models.  Calls for the same named timer model will return the same timer model instance.","use_scoped_format":"false","global":"false","sys_updated_on":"2016-10-13 14:20:58","sys_tags":"","script_name":"","script":"angular.module(\"sn.app_common.timers\")\n\t.service(\"timerService\", ['$interval', '$window', function($interval, $window) {\n\t\tvar timerService = this;\n\t\tvar timerInstance = {};\n\t\t\n\t\t/**\n\t\t * A Timer\n\t\t */\n\t\tfunction TimerModel(timerName, precision) {\n\t\t\t/* The precision of the timer.  Default to 1 second.\n\t\t\t * Safest interval for browsers which limit interval/timeout when page is not in focus.\n\t\t\t */\n\t\t\tprecision = precision && !isNaN(precision) ? precision : 1000;\n\t\t\tvar lastUpdate;  // Last timer update in MS used for setting timer updates.  Compensates for browser power saving.\n\t\t\tvar interval;\n\t\t\tthis.elapsed = 0;  //Elapsed in ms\n\t\t\tthis.duration = 0; //Duration in ms\n\t\t\tthis.running = false;\n\t\t\tthis.rootApply = false; // If $apply should be called on the root scope.  Default false.\n\t\t\t\t\n\t\t\tif (timerName)\n\t\t\t\tthis.name = timerName;\n\n\t\t\tfunction updateElapsed() {\n\t\t\t\tvar now = Date.now();\n\t\t\t\tthis.elapsed = this.elapsed + (now - this.lastUpdate);\n\t\t\t\tthis.lastUpdate = now;\n\t\t\t}\n\t\t\t\t\n\t\t\t/* Basic timer functions */\n\t\t\tthis.start = function() {\n\t\t\t\tif (this.running)\n\t\t\t\t\treturn;\n\t\t\t\tthis.running = true;\n\t\t\t\tthis.lastUpdate = Date.now();\n\t\t\t\tinterval = $interval(updateElapsed.bind(this), precision, this.rootApply);\n\t\t\t};\n\t\t\t\t\n\t\t\tthis.stop = function() {\n\t\t\t\tif (!this.running)\n\t\t\t\t\treturn;\n\t\t\t\tthis.running = false;\n\t\t\t\t$interval.cancel(interval);\n\t\t\t};\n\t\t\t\t\n\t\t\tthis.reset = function() {\n\t\t\t\tvar isRunning = this.running;\n\t\t\t\tif (isRunning)\n\t\t\t\t\tthis.stop();\n\t\t\t\tthis.elapsed = 0;\n\t\t\t\tif (isRunning)\n\t\t\t\t\tthis.start();\n\t\t\t};\n\t\t\t\t\n\t\t\t/**\n\t\t\t * Returns the remaining time in MS\n\t\t\t * Will return 0 if duration is 0 or hasn't been set\n\t\t\t */\n\t\t\tthis.remainingTime = function() {\n\t\t\t\tif (this.duration <= 0)\n\t\t\t\t\treturn 0;\n\n\t\t\t\treturn this.duration - this.elapsed;\n\t\t\t};\n\t\t\t\t\n\t\t\t/**\n\t\t\t * Returns the elapsed percentage\n\t\t\t * Will return 0 if duration is 0 or hasn't been set\n\t\t\t */\n\t\t\tthis.percentElapsed = function() {\n\t\t\t\tif (this.duration > 0)\n\t\t\t\t\treturn $window.Math.round(((this.duration - this.remainingTime())/this.duration) * 10000)/100;\n\t\t\t\t\t\n\t\t\t\treturn 0;\n\t\t\t};\n\t\t}\n\t\t\t\n\t\t/**\n\t\t * Gets a named timer instance.  Will return the same timer model for a given name\n\t\t */\n\t\ttimerService.getTimer = function(timerName, precision) {\n\t\t\tif (!timerName)\n\t\t\t\treturn new TimerModel();\n\n\t\t\tif (timerInstance[timerName])\n\t\t\t\treturn timerInstance[timerName];\n\t\t\t\t\n\t\t\ttimerInstance[timerName] = new TimerModel(timerName, precision);\n\t\t\treturn timerInstance[timerName];\n\t\t};\n\t\t\t\n\t\t/**\n\t\t * Clears the named timer\n\t\t */\n\t\ttimerService.clearTimer = function(timerName) {\n\t\t\t// Get rid of the timeout if it's running.\n\t\t\tif (timerInstance[timerName].running)\n\t\t\t\ttimerInstance[timerName].stop();\n\t\t\t\t\n\t\t\tdelete timerInstance[timerName];\n\t\t};\n\t\t\t\n\t\t/**\n\t\t * Clears all timers\n\t\t */\n\t\ttimerService.clearAllTimers = function() {\n\t\t\tfor (var tn in timerInstance)\n\t\t\t\tthis.clearTimer(tn);\n\t\t};\n\t}]);","sys_class_name":"sys_ui_script","sys_id":"c8629c57d712220034d145bcce61031e","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/39fbaf7704352210559073c06a02f71e","value":"39fbaf7704352210559073c06a02f71e"},"ui_type":"","sys_update_name":"sys_ui_script_c8629c57d712220034d145bcce61031e","sys_updated_by":"admin","sys_created_on":"2016-10-11 09:59:35","name":"app_com.timers.timerService","sys_name":"app_com.timers.timerService","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":"read"},{"ignore_in_now_experience":"false","sys_mod_count":"23","active":"true","description":"Directive snCabDateTimePicker.","use_scoped_format":"false","global":"false","sys_updated_on":"2019-04-19 10:09:05","sys_tags":"","script_name":"","script":"(function($, moment) {\n\t'use strict';\n\t/* Usage:\n\t * Date Time Picker:\n\t *\n\t * <span class='input-group' sn-cab-date-time-picker='' display-type='dateTime' date-value=\"dateValueInScope\" date-time-format=\"DD-MMM-YY hh:mm:ss a\">\n\t\t\t<input type='text' class=\"form-control\"></input>\n\t\t\t<span class=\"input-group-btn\">\n\t\t\t\t<a role=\"button\" class=\"btn btn-default btn-ref\">\n\t\t\t\t\t<span aria-hidden=\"true\" class=\"icon-calendar icon\"></span>\n\t\t\t\t\t<span class=\"sr-only\">${gs.getMessage('Select date and time')}</span>\n\t\t\t\t</a>\n\t\t\t</span>\n\t\t</span>\n\t *\n\t *\n\t */\n\tangular.module(\"sn.itsm.vcab.common\")\n\t.constant(\"MiniCalendarViewMode\", {\n\t\t\"DAY\": \"datepicker-days\",\n\t\t\"MONTH\": \"datepicker-months\",\n\t\t\"YEAR\": \"datepicker-years\",\n\t\t\"HOURS\": \"timepicker-hours\",\n\t\t\"MINUTES\": \"timepicker-minutes\"\n\t})\n\t.directive('snCabDateTimePicker', function($timeout, $document, $rootScope, $window, isMobile, Keys, MiniCalendarViewMode) {\n\t\t\treturn {\n\t\t\t\trestrict: \"A\",\n\t\t\t\tscope: {\n\t\t\t\t\tdisplayType: '@', //dateTime or date\n\t\t\t\t\tdateFormat: '@',\n\t\t\t\t\tdateTimeFormat: '@',\n\t\t\t\t\tdateValue: '=' // Should be a Date object\n\t\t\t\t},\n\t\t\t\tlink: function($scope, iEl, iAttrs) {\n\t\t\t\t\tvar lang = $(\"html\").attr(\"lang\");\n\t\t\t\t\tmoment.locale(lang);\n\t\t\t\t\tvar dateField = $('input', iEl);\n\t\t\t\t\tvar dateTimePicker;\n\t\t\t\t\tvar dateTimePickerObj;\n\t\t\t\t\tif (!$.fn.datetimepicker)\n\t\t\t\t\t\tthrow 'snCabDateTimePicker: datetimepicker plugin is required but not available.';\n\t\t\t\t\tif (!moment)\n\t\t\t\t\t\tthrow 'snCabDateTimePicker: moment js is required but not available.';\n\t\t\t\t\tvar currentFormat;\n\t\t\t\t\tvar config;\n\t\t\t\t\tfunction getDateStr() {\n\t\t\t\t\t\tif ($scope.dateValue)\n\t\t\t\t\t\t\treturn moment.tz($scope.dateValue, currentFormat, $window.g_tz);\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($scope.displayType === 'dateTime') {\n\t\t\t\t\t\tif (!$scope.dateTimeFormat)\n\t\t\t\t\t\t\tthrow 'dateTimeFormat not provided';\n\t\t\t\t\t\tcurrentFormat = $scope.dateTimeFormat;\n\t\t\t\t\t\tconfig = {\n\t\t\t\t\t\t\tlanguage: lang,\n\t\t\t\t\t\t\tsideBySide: !isMobile(),\n\t\t\t\t\t\t\ticons: {\n\t\t\t\t\t\t\t\tdate: \"icon-calendar icon\",\n\t\t\t\t\t\t\t\tup: \"icon-vcr-up icon\",\n\t\t\t\t\t\t\t\tdown: \"icon-vcr-down icon\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tdefaultDate: getDateStr(),\n\t\t\t\t\t\t\tformat: $scope.dateTimeFormat,\n\t\t\t\t\t\t\tdirection: 'up',\n\t\t\t\t\t\t\tuse24hours: $scope.dateTimeFormat.indexOf('a') < 0 && $scope.dateTimeFormat.indexOf('h') < 0\n\t\t\t\t\t\t};\n\t\t\t\t\t\tdateTimePicker = iEl.datetimepicker(config);\n\t\t\t\t\t\tdateTimePicker.on(\"dp.hide\", function(event) {\n\t\t\t\t\t\t\tvar dateTimePickerButton = $(event.currentTarget).find(\"button\");\n\t\t\t\t\t\t\tif (dateTimePickerButton.attr(\"aria-expanded\") === \"false\")\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\tdateTimePickerButton.attr(\"aria-expanded\", false);\n\t\t\t\t\t\t\tremoveTimePickerChangeViewHandler();\n\t\t\t\t\t\t\t$timeout(function() {\n\t\t\t\t\t\t\t\tdateTimePickerButton.focus();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t\tdateTimePickerObj = iEl.data('DateTimePicker');\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($scope.displayType === 'date') {\n\t\t\t\t\t\tif (!$scope.dateFormat)\n\t\t\t\t\t\t\tthrow 'dateFormat not provided';\n\t\t\t\t\t\tcurrentFormat = $scope.dateFormat;\n\t\t\t\t\t\tconfig = {\n\t\t\t\t\t\t\ticons: {\n\t\t\t\t\t\t\t\tdate: \"icon-calendar icon\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tdefaultDate: getDateStr(),\n\t\t\t\t\t\t\tformat: $scope.dateFormat //needs to be a date format not having time\n\t\t\t\t\t\t};\n\t\t\t\t\t\tdateTimePicker = iEl.datetimepicker(config);\n\t\t\t\t\t\tdateTimePickerObj = iEl.data('DateTimePicker');\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction setValue() {\n\t\t\t\t\t\tvar v = dateField.val();\n\t\t\t\t\t\tif (v)\n\t\t\t\t\t\t\t$scope.dateValue = moment.tz(v, currentFormat, $window.g_tz);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\t$scope.dateValue = null;\n\t\t\t\t\t}\n\t\t\t\t\tif (dateField) {\n\t\t\t\t\t\tdateField.on('change.cdp paste.cdp keyup.cdp', function() {\n\t\t\t\t\t\t\t$timeout(setValue);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tvar isDateTimePickerOpen = false;\n\t\t\t\t\tfunction hideDatePicker() {\n\t\t\t\t\t\tif (isDateTimePickerOpen && dateTimePickerObj)\n\t\t\t\t\t\t\tdateTimePickerObj.hide();\n\t\t\t\t\t}\n\t\t\t\t\t$rootScope.$on('dp.show', function($event, msgId) {\n\t\t\t\t\t\tif (msgId === 'dp_show_' + $scope.$id)\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\thideDatePicker();\n\t\t\t\t\t});\n\t\t\t\t\tfunction addTimePickerChangeViewHandler() {\n\t\t\t\t\t\t$(\".picker-open .timepicker-hour\").on(\"click\", handleTimePickerChangeView.bind(this, \"hour\"));\n\t\t\t\t\t\t$(\".picker-open .timepicker-minute\").on(\"click\", handleTimePickerChangeView.bind(this, \"minute\"));\n\t\t\t\t\t\t$(\".picker-open .timepicker-hour\").on(\"click\", handleTimePickerChangeView.bind(this, \"hour\"));\n\t\t\t\t\t\t$(\".picker-open .timepicker-hours\").on(\"click\", handleTimePickerChangeView.bind(this, \"hours\"));\n\t\t\t\t\t\t$(\".picker-open .timepicker-minutes\").on(\"click\", handleTimePickerChangeView.bind(this, \"minutes\"));\n\t\t\t\t\t}\n\t\t\t\t\tfunction removeTimePickerChangeViewHandler() {\n\t\t\t\t\t\t$(\".timepicker-hour\").off(\"click\");\n\t\t\t\t\t\t$(\".timepicker-minute\").off(\"click\");\n\t\t\t\t\t\t$(\".timepicker-hours\").off(\"click\");\n\t\t\t\t\t\t$(\".timepicker-minutes\").off(\"click\");\n\t\t\t\t\t}\n\t\t\t\t\tfunction handleTimePickerChangeView(view, event) {\n\t\t\t\t\t\t$timeout(function() {\n\t\t\t\t\t\t\tif (view === \"hour\" || view === \"minute\")\n\t\t\t\t\t\t\t\t$(\".picker-open .timepicker-hours:visible,.picker-open .timepicker-minutes:visible\").find(\"td:first\").focus();\n\t\t\t\t\t\t\telse if (view === \"hours\")\n\t\t\t\t\t\t\t\t$(\".picker-open .timepicker-hour\").focus();\n\t\t\t\t\t\t\telse if (view === \"minutes\")\n\t\t\t\t\t\t\t\t$(\".picker-open .timepicker-minute\").focus();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tfunction isKeySupported(evtKey) {\n\t\t\t\t\t\tswitch (evtKey) {\n\t\t\t\t\t\t\tcase Keys.ESCAPE:\n\t\t\t\t\t\t\tcase Keys.ENTER:\n\t\t\t\t\t\t\tcase Keys.SPACE:\n\t\t\t\t\t\t\tcase Keys.TABKEY:\n\t\t\t\t\t\t\tcase Keys.LEFT_ARROW:\n\t\t\t\t\t\t\tcase Keys.UP_ARROW:\n\t\t\t\t\t\t\tcase Keys.RIGHT_ARROW:\n\t\t\t\t\t\t\tcase Keys.DOWN_ARROW:\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tfunction handleDateTimePicker(evt) {\n\t\t\t\t\t\t// Only supported keys\n\t\t\t\t\t\tif (!isKeySupported(evt.which))\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\tif ($(\".datepicker td.day[tabindex]\").length === 0) { // Bootstrap removes tabindex attr when re-renders, so adding them back\n\t\t\t\t\t\t\t$dateTimePicker.find(\"th,td.day,span.month,span.year\").not(\"td[tabindex],th.dow\").attr(\"tabindex\", 0); // Add tabindex to date picker elements\n\t\t\t\t\t\t\t$dateTimePicker.find(\"td.hour,td.minute,span.timepicker-hour,span.timepicker-minute\").not(\"td[tabindex]\").attr(\"tabindex\", 0); // Add tabindex to time picker elements\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar index;\n\t\t\t\t\t\tvar next;\n\t\t\t\t\t\tvar focused = $(document.activeElement);\n\t\t\t\t\t\tvar list = $(\".bootstrap-datetimepicker-widget:visible\").find(\".prev:visible, .next:visible, [tabindex='0']:visible, td[class]:visible\").not(\".separator,span.icon,.datepicker-years .picker-switch\");\n\t\t\t\t\t\tif (typeof index === \"undefined\")\n\t\t\t\t\t\t\tindex = list.index(focused);\n\t\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\t\tevt.stopPropagation();\n\t\t\t\t\t\tswitch (evt.which) {\n\t\t\t\t\t\t\tcase Keys.TABKEY:\n\t\t\t\t\t\t\tcase Keys.LEFT_ARROW:\n\t\t\t\t\t\t\tcase Keys.RIGHT_ARROW:\n\t\t\t\t\t\t\t\tif ((evt.which === Keys.TABKEY && !evt.shiftKey) || evt.which === Keys.RIGHT_ARROW)\n\t\t\t\t\t\t\t\t\tindex = (index === list.length - 1) ? 0 : index + 1;\n\t\t\t\t\t\t\t\telse if ((evt.which === Keys.TABKEY && evt.shiftKey) || evt.which === Keys.LEFT_ARROW)\n\t\t\t\t\t\t\t\t\tindex = (index === 0) ? list.length - 1 : index - 1;\n\t\t\t\t\t\t\t\tnext = list.get(index);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase Keys.UP_ARROW:\n\t\t\t\t\t\t\t\tif (focused.hasClass(\"timepicker-minute\")) {\n\t\t\t\t\t\t\t\t\t$(\"a.btn[data-action=incrementMinutes]\").click();\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (focused.hasClass(\"timepicker-hour\")) {\n\t\t\t\t\t\t\t\t\t$(\"a.btn[data-action=incrementHours]\").click();\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (focused.hasClass(\"hour\") || focused.hasClass(\"minute\")) {\n\t\t\t\t\t\t\t\t\tvar noOfcols = 4;\n\t\t\t\t\t\t\t\t\tvar minicalView = $(\".timepicker > div:visible\");\n\t\t\t\t\t\t\t\t\tfocused = $(document.activeElement);\n\t\t\t\t\t\t\t\t\tlist = minicalView.find(\".hour:visible,.minute:visible\");\n\t\t\t\t\t\t\t\t\tindex = list.index(focused);\n\t\t\t\t\t\t\t\t\tindex = (index < 4) ? list.length - (noOfcols - index) : index - noOfcols;\n\t\t\t\t\t\t\t\t\tnext = list.get(index);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (focused.is(\"th\")) {\n\t\t\t\t\t\t\t\t\tnext = list.get(list.length - 3); // stay in datepicker\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tvar minicalView = $(\".datepicker > div:visible\");\n\t\t\t\t\t\t\t\tvar noOfcols = (minicalView.attr(\"class\") === MiniCalendarViewMode.DAY) ? 7 : 4;\n\t\t\t\t\t\t\t\tvar noOfHeaderElements = (minicalView.attr(\"class\") !== MiniCalendarViewMode.YEAR) ? 3 : 2;\n\t\t\t\t\t\t\t\tif (index === noOfHeaderElements)\n\t\t\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t\t\telse if (index > noOfHeaderElements && index < noOfHeaderElements + noOfcols - 1)\n\t\t\t\t\t\t\t\t\tindex = 1;\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\tindex -= noOfcols;\n\t\t\t\t\t\t\t\tnext = list.get(index);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase Keys.DOWN_ARROW:\n\t\t\t\t\t\t\t\tif (focused.hasClass(\"timepicker-minute\")) {\n\t\t\t\t\t\t\t\t\t$(\"a.btn[data-action=decrementMinutes]\").click();\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (focused.hasClass(\"timepicker-hour\")) {\n\t\t\t\t\t\t\t\t\t$(\"a.btn[data-action=decrementHours]\").click();\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (focused.hasClass(\"hour\") || focused.hasClass(\"minute\")) {\n\t\t\t\t\t\t\t\t\tvar noOfcols = 4;\n\t\t\t\t\t\t\t\t\tvar minicalView = $(\".timepicker > div:visible\");\n\t\t\t\t\t\t\t\t\tfocused = $(document.activeElement);\n\t\t\t\t\t\t\t\t\tlist = minicalView.find(\".hour:visible,.minute:visible\");\n\t\t\t\t\t\t\t\t\tindex = list.index(focused);\n\t\t\t\t\t\t\t\t\tindex = (index >= list.length - 4) ? index % 4 : index + 4;\n\t\t\t\t\t\t\t\t\tnext = list.get(index);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tvar minicalView = $(\".datepicker > div:visible\");\n\t\t\t\t\t\t\t\tif (focused.is(\"th\")) {\n\t\t\t\t\t\t\t\t\tvar noOfHeaderElements = (minicalView.attr(\"class\") !== MiniCalendarViewMode.YEAR) ? 3 : 2;\n\t\t\t\t\t\t\t\t\tnext = list.get(noOfHeaderElements);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tswitch (minicalView.attr(\"class\")) {\n\t\t\t\t\t\t\t\t\tcase MiniCalendarViewMode.DAY:\n\t\t\t\t\t\t\t\t\t\tindex = (index + 7 > list.length - 3) ? 0 : $(list[index + 7]).is(\".datepicker th\") || $(list[index + 7]).is(\".datepicker td\") ? index + 7 : 0;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase MiniCalendarViewMode.MONTH:\n\t\t\t\t\t\t\t\t\tcase MiniCalendarViewMode.YEAR:\n\t\t\t\t\t\t\t\t\t\tindex = (index + 3 > list.length - 3) ? 0 : $(list[index + 3]).is(\".datepicker th\") || $(list[index + 3]).is(\".datepicker span\") ? index + 3 : 0;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tnext = list.get(index);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase Keys.SPACE:\n\t\t\t\t\t\t\tcase Keys.ENTER:\n\t\t\t\t\t\t\t\tvar previousView = $(\".datepicker > div:visible\").attr(\"class\");\n\t\t\t\t\t\t\t\tfocused.click();\n\t\t\t\t\t\t\t\tif ($(\".datepicker td.day[tabindex]\").length === 0) { // Bootstrap removes tabindex attr when re-renders, so adding them back\n\t\t\t\t\t\t\t\t\t$dateTimePicker.find(\"th,td.day,span.month,span.year\").not(\"td[tabindex],th.dow\").attr(\"tabindex\", 0); // Add tabindex to date picker elements\n\t\t\t\t\t\t\t\t\t$dateTimePicker.find(\"td.hour,td.minute,span.timepicker-hour,span.timepicker-minute\").not(\"td[tabindex]\").attr(\"tabindex\", 0); // Add tabindex to time picker elements\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tvar currentView = $(\".datepicker > div:visible\").attr(\"class\");\n\t\t\t\t\t\t\t\tvar minicalView = $(\".datepicker > div:visible\");\n\t\t\t\t\t\t\t\tif (previousView !== currentView) {\n\t\t\t\t\t\t\t\t\tif (currentView === MiniCalendarViewMode.YEAR || (currentView === MiniCalendarViewMode.MONTH && previousView === MiniCalendarViewMode.YEAR))\n\t\t\t\t\t\t\t\t\t\tnext = $(\"span.active:visible\");\n\t\t\t\t\t\t\t\t\telse if (currentView === MiniCalendarViewMode.DAY && previousView === MiniCalendarViewMode.MONTH)\n\t\t\t\t\t\t\t\t\t\tnext = $(\"td.active:visible\");\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\tswitch (currentView) {\n\t\t\t\t\t\t\t\t\t\t\tcase MiniCalendarViewMode.DAY:\n\t\t\t\t\t\t\t\t\t\t\tcase MiniCalendarViewMode.MONTH:\n\t\t\t\t\t\t\t\t\t\t\t\tnext = $(\".picker-switch:visible\");\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\tcase MiniCalendarViewMode.YEAR:\n\t\t\t\t\t\t\t\t\t\t\t\tnext = $(\"span.active:visible\");\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t// Make it easier for keyboard navigation and once the date is selected, move to the timepicker\n\t\t\t\t\t\t\t\t\tnext = $(\".bootstrap-datetimepicker-widget:visible\").find(\".timepicker-picker:visible span.timepicker-hour, .timepicker-hours:visible td:first, .timepicker-minutes:visible td:first\");\n\t\t\t\t\t\t\t\t\tnext.focus();\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase Keys.ESCAPE:\n\t\t\t\t\t\t\t\thideDatePicker();\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tif (next)\n\t\t\t\t\t\t\tnext.focus();\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction onKeyDown($event) {\n\t\t\t\t\t\tif ($($event.target).parents(\".bootstrap-datetimepicker-widget\").length === 1) {\n\t\t\t\t\t\t\thandleDateTimePicker($event);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ($event.which !== Keys.ESCAPE)\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\thideDatePicker();\n\t\t\t\t\t\t$event.stopPropagation();\n\t\t\t\t\t\t$event.preventDefault();\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction onClickOverDatePicker($event) {\n\t\t\t\t\t\t$event.stopPropagation();\n\t\t\t\t\t\t$event.stopImmediatePropagation();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (dateTimePicker) {\n\t\t\t\t\t\tdateTimePicker.on('dp.change', function() {\n\t\t\t\t\t\t\t$timeout(setValue);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tvar $dateTimePicker;\n\t\t\t\t\t\tdateTimePicker.on(\"dp.hide\", function() {\n\t\t\t\t\t\t\tif ($dateTimePicker)\n\t\t\t\t\t\t\t\t$dateTimePicker.off(\"click\", onClickOverDatePicker);\n\t\t\t\t\t\t\tif ($(\"body > div.bootstrap-datetimepicker-widget.picker-open\").length === 0)\n\t\t\t\t\t\t\t\t$scope.$emit(\"dp.hide\");\n\t\t\t\t\t\t\tisDateTimePickerOpen = false;\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tdateTimePicker.on(\"dp.show\", function(event){\n\t\t\t\t\t\t\t$dateTimePicker = $(\"body > div.bootstrap-datetimepicker-widget.picker-open\");\n\t\t\t\t\t\t\tif ($dateTimePicker.length === 0) {\n\t\t\t\t\t\t\t\t$scope.$emit(\"dp.hide\");\n\t\t\t\t\t\t\t\tisDateTimePickerOpen = false;\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$dateTimePicker.off(\"keydown\");\n\t\t\t\t\t\t\t$dateTimePicker.on(\"keydown\", handleDateTimePicker);\n\t\t\t\t\t\t\t$(event.currentTarget).find(\"button\").attr(\"aria-expanded\", \"true\");\n\t\t\t\t\t\t\t$scope.$emit(\"dp.show\", [\"dp_show_\" + $scope.$id]);\n\t\t\t\t\t\t\tisDateTimePickerOpen = true;\n\t\t\t\t\t\t\t$dateTimePicker.off('click', onClickOverDatePicker);\n\t\t\t\t\t\t\t$dateTimePicker.on(\"click\", onClickOverDatePicker);\n\t\t\t\t\t\t\t$timeout(function() {\n\t\t\t\t\t\t\t\t$dateTimePicker.find(\"th,td.day,span.month,span.year\").not(\"td[tabindex],th.dow\").attr(\"tabindex\", 0); // Add tabindex to date picker elements\n\t\t\t\t\t\t\t\t$dateTimePicker.find(\"td.hour,td.minute,span.timepicker-hour,span.timepicker-minute\").not(\"td[tabindex]\").attr(\"tabindex\", 0); // Add tabindex to time picker elements\n\t\t\t\t\t\t\t\tremoveTimePickerChangeViewHandler();\n\t\t\t\t\t\t\t\taddTimePickerChangeViewHandler();\n\t\t\t\t\t\t\t\t$(\".datepicker .prev:visible\").focus();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\t$scope.$on('$destroy', function () {\n\t\t\t\t\t\tif ($dateTimePicker) {\n\t\t\t\t\t\t\t$dateTimePicker.off('click', onClickOverDatePicker);\n\t\t\t\t\t\t\tremoveTimePickerChangeViewHandler();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (dateField) {\n\t\t\t\t\t\t\tdateField.off('.cdp');\n\t\t\t\t\t\t\tdateField = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (dateTimePickerObj)\n\t\t\t\t\t\t\tdateTimePickerObj.destroy();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t});\n}(jQuery, moment));","sys_class_name":"sys_ui_script","sys_id":"c87f69160b2332005775aabcb4673aed","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/3eb7af7f04b12210559073c06a02f7fb","value":"3eb7af7f04b12210559073c06a02f7fb"},"ui_type":"0","sys_update_name":"sys_ui_script_c87f69160b2332005775aabcb4673aed","sys_updated_by":"admin","sys_created_on":"2017-06-26 13:36:56","name":"change_calendar_vcom.snCabDateTimePicker","sys_name":"change_calendar_vcom.snCabDateTimePicker","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"0","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2018-02-08 15:43:39","sys_tags":"","script_name":"change_soc_filter","script":"/** Filter for change_soc **/\nangular.module(\"sn.app_itsm.now.filter\", [\"sn.common\"])\n.directive(\"snSocFilter\", function(getTemplateUrl, i18n, TextSearchService) {\n\t\"use strict\";\n\treturn {\n\t\trestrict: \"E\",\n\t\ttemplateUrl: function(tElement, tAttrs) {\n\t\t\treturn getTemplateUrl(tAttrs.template);\n\t\t},\n\t\tscope: {\n\t\t\tconfiguration: \"=\",\n\t\t\tisDisabledFn: \"&\"\n\t\t},\n\t\tlink: function($scope) {\n\t\t\tTextSearchService.filterByArray = $scope.configuration.filterConditions;\n\t\t\t$scope.isLoading = function() {\n\t\t\t\treturn $scope.$parent.loading;\n\t\t\t};\n\t\t\t$scope.isDisabled = function() {\n\t\t\t\tif ($scope.isDisabledFn !== undefined)\n\t\t\t\t\treturn $scope.isLoading() || $scope.isDisabledFn();\n\t\t\t\treturn $scope.isLoading();\n\t\t\t};\n\t\t\t$scope.$watch(\"searchText\", function(newValue, oldValue) {\n\t\t\t\tif (newValue === undefined)\n\t\t\t\t\treturn;\n\t\t\t\t$scope.$emit(\"textSearch\", newValue);\n\t\t\t});\n\t\t},\n\t\tcontroller: function($scope) {\n\t\t\t$scope.placeholder = ($scope.configuration.placeholderText) ? $scope.configuration.placeholderText : i18n.getMessage(\"Filter\");\n\t\t\t$scope.ariaLabel = $scope.placeholder;\n\t\t}\n\t};\n})\n.filter(\"socfilter\", [\"TextSearchService\", function(TextSearchService) {\n\treturn function(arrayToFilter, textSearch) {\n\t\treturn TextSearchService.getFilteredArray(arrayToFilter, textSearch);\n\t};\n}])\n.service(\"TextSearchService\", [\"$filter\", function($filter) {\n\tvar textSearchService = this;\n\ttextSearchService.filterByArray = [];\n\n\tfunction convertToArray(objects) {\n\t\tvar arr = [];\n\t\tObject.keys(objects).forEach(function(key) {\n\t\t\tarr.push(objects[key]);\n\t\t});\n\t\treturn arr;\n\t}\n\n\tvar searchObject = function(object, searchPathArray, searchText) {\n\t\tfor (var i = 0; i < searchPathArray.length; i++) {\n\t\t\tvar path = searchPathArray[i].split(\".\");\n\t\t\tvar property = path[path.length - 1];\n\t\t\tvar obj = object;\n\t\t\tfor (var j = 0; j < path.length - 1; j++) {\n\t\t\t\tif (Array.isArray(obj[path[j]])) {\n\t\t\t\t\tvar res = false;\n\t\t\t\t\tvar subPath = searchPathArray.slice(i, i + 1);\n\t\t\t\t\tsubPath[0] = subPath[0].replace(path[j] + \".\", \"\");\n\t\t\t\t\tfor (var k = 0; k < obj[path[j]].length; k++)\n\t\t\t\t\t\tif (searchObject(obj[path[j]][k], subPath, searchText)) return true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tobj = obj[path[j]];\n\t\t\t}\n\t\t\tif (obj && obj[property])\n\t\t\t\tif (obj[property].toLowerCase().indexOf(searchText.toLowerCase()) > -1) return true;\n\t\t}\n\t\treturn false;\n\t};\n\ttextSearchService.getFilteredArray = function(arrayToFilter, textSearch) {\n\t\tif (!Array.isArray(arrayToFilter))\n\t\t\tarrayToFilter = convertToArray(arrayToFilter);\n\t\tif (!textSearch || textSearch === \"\")\n\t\t\treturn arrayToFilter;\n\t\tvar textFilteredSchedules = $filter(\"filter\")(arrayToFilter, function(obj) {\n\t\t\treturn searchObject(obj, textSearchService.filterByArray, textSearch);\n\t\t});\n\t\treturn textFilteredSchedules;\n\t};\n}])\n.service(\"HighlightService\", [\"$sanitize\", \"$sce\", function($sanitize, $sce) {\n\tvar highlightService = this;\n\n\tfunction escapeRegExp(str) {\n\t\treturn str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n\t}\n\n\tfunction getHTMLEntity(str) {\n\t\treturn angular.element(\"<div />\").text(str).html();\n\t}\n\n\thighlightService.highlight = function(text, highlightText, highlightClass) {\n\t\tif (!highlightText || !highlightClass || !text)\n\t\t\treturn getHTMLEntity(text);\n\t\tcleanHighlightText = getHTMLEntity(highlightText);\n\t\tcleanHighlightClass = getHTMLEntity(highlightClass);\n\t\tvar pattern = new RegExp(escapeRegExp(cleanHighlightText), \"gi\");\n\t\tvar replacedText = getHTMLEntity(text).replace(pattern, '<span class=\"' + cleanHighlightClass + '\">$&</span>');\n\t\treturn $sce.trustAsHtml(replacedText);\n\t};\n}]);","sys_class_name":"sys_ui_script","sys_id":"c8ad83575708130035ae4786cc94f923","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"ui_type":"","sys_update_name":"sys_ui_script_c8ad83575708130035ae4786cc94f923","sys_updated_by":"admin","sys_created_on":"2018-02-08 15:43:39","name":"sn_chg_soc.change_soc_filter","sys_name":"sn_chg_soc.change_soc_filter","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"0","active":"true","description":"angular-ellipsis.min.js","use_scoped_format":"false","global":"false","sys_updated_on":"2017-08-29 20:35:18","sys_tags":"","script_name":"","script":"angular.module(\"dibari.angular-ellipsis\",[]).directive(\"ellipsis\",[\"$timeout\",\"$window\",\"$sce\",function(a,b,c){var d=function(b){var c=null,d=[];this.remove=function(b){-1!==d.indexOf(b)&&(d.splice(d.indexOf(b),1),0===d.length&&(a.cancel(c),c=null))},this.add=function(e){-1===d.indexOf(e)&&d.push(e),c||(c=a(function(){var a=d.slice();c=null,d.length=0,a.forEach(function(a){a()})},b))}},e=new d(0),f=new d(75);return{restrict:\"A\",scope:{ngBind:\"=\",ngBindHtml:\"=\",ellipsisAppend:\"@\",ellipsisAppendClick:\"&\",ellipsisSymbol:\"@\",ellipsisSeparator:\"@\",useParent:\"@\",ellipsisSeparatorReg:\"=\"},compile:function(a,d,g){return function(a,d,g){function h(a){var b=0;return angular.forEach(a.parent().children(),function(c){c!=a[0]&&(b+=c.clientHeight)}),a.parent()[0].clientHeight-b}function i(){var b=a.ngBind||a.ngBindHtml,e=!1;if(c.isEnabled()&&angular.isObject(b)&&c.getTrustedHtml(b)&&(e=!0,b=c.getTrustedHtml(b)),b){var f=!a.ngBind&&!!a.ngBindHtml,i=0,k=\"undefined\"!=typeof g.ellipsisSymbol?g.ellipsisSymbol:\"&hellip;\",l=\"undefined\"!=typeof a.ellipsisSeparator?g.ellipsisSeparator:\" \",m=\"undefined\"!=typeof a.ellipsisSeparatorReg?a.ellipsisSeparatorReg:!1,n=\"undefined\"!=typeof a.ellipsisAppend&&\"\"!==a.ellipsisAppend?k+\"<span>\"+a.ellipsisAppend+\"</span>\":k,o=m?b.match(m):b.split(l);if(g.isTruncated=!1,f?d.html(b):d.text(b),j(d,a.useParent)){var p=o.length,q=a.useParent?h(d):d[0].clientHeight;for(f?d.html(b+n):d.text(b).html(d.html()+n),d.attr(\"data-overflowed\",\"true\");p>i;i++)if(o.pop(),f?d.html(o.join(l)+n):d.text(o.join(l)).html(d.html()+n),(a.useParent?d.parent()[0]:d[0]).scrollHeight<q||j(d,a.useParent)===!1){g.isTruncated=!0;break}k!=n&&\"undefined\"!=typeof a.ellipsisAppendClick&&\"\"!==a.ellipsisAppendClick&&d.find(\"span\").bind(\"click\",function(b){a.$apply(function(){a.ellipsisAppendClick.call(a,{event:b})})}),!e&&c.isEnabled()&&c.trustAsHtml(b)}}}function j(a,b){return a=b?a.parent():a,a[0].scrollHeight>a[0].clientHeight}function k(){(g.lastWindowResizeWidth!=window.innerWidth||g.lastWindowResizeHeight!=window.innerHeight)&&i(),g.lastWindowResizeWidth=window.innerWidth,g.lastWindowResizeHeight=window.innerHeight}function l(){f.add(k)}g.lastWindowResizeTime=0,g.lastWindowResizeWidth=0,g.lastWindowResizeHeight=0,g.lastWindowTimeoutEvent=null,g.isTruncated=!1,a.$watch(\"ngBind\",function(){e.add(i)}),a.$watch(\"ngBindHtml\",function(){e.add(i)}),a.$watch(\"ellipsisAppend\",function(){i()});var m=angular.element(b);m.bind(\"resize\",l),a.$on(\"$destroy\",function(){m.unbind(\"resize\",l),e.remove(i),f.remove(k)})}}}}]);","sys_class_name":"sys_ui_script","sys_id":"ca2534c3e730030075c2a117c2f6a9da","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/acc96bbb04f12210559073c06a02f7f9","value":"acc96bbb04f12210559073c06a02f7f9"},"ui_type":"","sys_update_name":"sys_ui_script_ca2534c3e730030075c2a117c2f6a9da","sys_updated_by":"admin","sys_created_on":"2017-08-29 20:35:18","name":"angular-ellipsis.min.js","sys_name":"angular-ellipsis.min.js","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"1","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2022-01-05 13:10:35","sys_tags":"","script_name":"sn.app_itsm.now.iscroll","script":"angular.module(\"sn.app_itsm.now.iscroll\", [])\n.directive(\"iScroll\", [\"$rootScope\", \"$window\", \"$timeout\", function($rootScope, $window, $timeout) {\n\treturn {\n\t\tlink: function(scope, elem, attrs) {\n\t\t\tvar checkWhenEnabled, handler, scrollDistance, scrollEnabled, scrollElem;\n\t\t\t$window = angular.element($window);\n\n\t\t\tif (attrs.iScrollContainer)\n\t\t\t\tscrollElem = angular.element(attrs.iScrollContainer);\n\n\t\t\tscrollDistance = 0;\n\t\t\tif (attrs.iScrollDistance !== null) {\n\t\t\t\tscope.$watch(attrs.iScrollDistance, function(value) {\n\t\t\t\t\tscrollDistance = parseInt(value, 10);\n\t\t\t\t\treturn scrollDistance;\n\t\t\t\t});\n\t\t\t}\n\t\t\tscrollEnabled = true;\n\t\t\tcheckWhenEnabled = false;\n\n\t\t\tif (attrs.iScrollDisabled !== null) {\n\t\t\t\tattrs.$observe(\"iScrollDisabled\", function(value) {\n\t\t\t\t\tscrollEnabled = value === \"false\";\n\t\t\t\t\tif (scrollEnabled && checkWhenEnabled) {\n\t\t\t\t\t\tcheckWhenEnabled = false;\n\t\t\t\t\t\treturn handler();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tvar prevImmediateCheck = null;\n\t\t\tattrs.$observe(\"iScrollImmediateCheck\", function(iScrollImmediateCheck) {\n\t\t\t\tif (prevImmediateCheck !== null || iScrollImmediateCheck === \"false\") {\n\t\t\t\t\tprevImmediateCheck = iScrollImmediateCheck;\n\t\t\t\t\tif (iScrollImmediateCheck === \"true\")\n\t\t\t\t\t\thandler();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thandler = function() {\n\t\t\t\tvar elementBottom, remaining, shouldScroll, windowBottom;\n\t\t\t\tif (scrollElem)\n\t\t\t\t\twindowBottom = scrollElem.height() + scrollElem.scrollTop();\n\t\t\t\telse\n\t\t\t\t\twindowBottom = $window.height() + $window.scrollTop();\n\t\t\t\telementBottom = elem.offset().top + elem.height();\n\t\t\t\tremaining = elementBottom - windowBottom;\n\t\t\t\tshouldScroll = remaining <= $window.height() * scrollDistance;\n\t\t\t\tif (shouldScroll && scrollEnabled) {\n\t\t\t\t\tif ($rootScope.$$phase)\n\t\t\t\t\t\treturn scope.$eval(attrs.iScroll);\n\t\t\t\t\telse\n\t\t\t\t\t\treturn scope.$apply(attrs.iScroll);\n\t\t\t\t} else if (shouldScroll) {\n\t\t\t\t\tcheckWhenEnabled = true;\n\t\t\t\t\treturn checkWhenEnabled;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Attach handler to scroll event\n\t\t\tif (scrollElem)\n\t\t\t\tscrollElem.on(\"scroll\", handler);\n\t\t\telse\n\t\t\t\t$window.on(\"scroll\", handler);\n\n\t\t\tscope.$on(\"$destroy\", function() {\n\t\t\t\tif (scrollElem)\n\t\t\t\t\treturn scrollElem.off(\"scroll\", handler);\n\t\t\t\treturn $window.off(\"scroll\", handler);\n\t\t\t});\n\n\t\t\treturn $timeout(function() {\n\t\t\t\tif (attrs.iScrollImmediateCheck === \"true\")\n\t\t\t\t\tif (scope.$eval(attrs.iScrollImmediateCheck))\n\t\t\t\t\t\treturn handler();\n\t\t\t\t\telse\n\t\t\t\t\t\treturn handler();\n\t\t\t}, 0);\n\t\t}\n\t};\n}]);\n","sys_class_name":"sys_ui_script","sys_id":"cc81e77757ef0300afc34786cc94f9c6","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"ui_type":"0","sys_update_name":"sys_ui_script_cc81e77757ef0300afc34786cc94f9c6","sys_updated_by":"admin","sys_created_on":"2018-01-16 09:57:32","name":"sn_chg_soc.sn.app_itsm.now.iscroll","sys_name":"sn_chg_soc.sn.app_itsm.now.iscroll","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"56","active":"true","description":"The Contextual Search module and service.","use_scoped_format":"false","global":"false","sys_updated_on":"2019-08-29 23:02:21","sys_tags":"","script_name":"","script":"angular.module(\"sn.app_common.cxs\", [\"sn.app_common.cxs.contextual_search\", \"sn.app_common.cxs.contextual_feedback\"]);\nangular.module(\"sn.app_common.cxs.contextual_search\", [\"sn.app_common\"]);\nangular.module(\"sn.app_common.cxs.contextual_search\")\n\t.service(\"contextualSearch\", [\"$http\", \"$q\", \"modelUtil\", \"$log\", function($http, $q, modelUtil, $log) {\n\t\tvar contextualSearch = this;\n\t\t\n\t\tvar CTX_SERVICE = \"/api/now/cxs/search\";\n\t\t\n\t\t// Definition of the client side SearchRequest\n\t\tvar SearchRequest = function(requestData) {\n\t\t\t// Deep copy of request.  Stops dot walking inadvertantly modifying different requests.\n\t\t\tif (requestData) {\n\t\t\t\tvar reqGF;\n\t\t\t\tif (requestData.g_form) {\n\t\t\t\t\treqGF = requestData.g_form;\n\t\t\t\t\tdelete requestData.g_form;\n\t\t\t\t}\n\t\t\t\tangular.copy(requestData, this);\n\t\t\t\tif (reqGF) {\n\t\t\t\t\trequestData.g_form = reqGF;\n\t\t\t\t\tthis.g_form = reqGF;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.query = {};\n\t\t\t\tthis.meta = {\n\t\t\t\t\twindow: {}\n\t\t\t\t};\n\t\t\t}\n\t\t\t\n\t\t\tthis.submit = function() {\n\t\t\t\treturn contextualSearch.submit(this);\n\t\t\t};\n\t\t};\n\t\t\n\t\t// Definition of the client side SearchResponse\n\t\tvar SearchResponse = function(responseData) {\n\t\t\tif (responseData) {\n\t\t\t\t// Shallow copy response.\n\t\t\t\tfor (var key in responseData)\n\t\t\t\t\tif(responseData.hasOwnProperty(key))\n\t\t\t\t\t\tthis[key] = responseData[key];\n\t\t\t\t\n\t\t\t\t// Create SearchRequest objects\n\t\t\t\tif (this.request) {\n\t\t\t\t\tthis.request = new SearchRequest(this.request);\n\t\t\t\t\t\n\t\t\t\t\tvar winDiff = this.request.meta.window.end - this.request.meta.window.start;\n\t\t\t\t\t\n\t\t\t\t\t// Inspect request and create prev_request and next_request;\n\t\t\t\t\tif (!this.request_next && this.meta.has_more_results) {\n\t\t\t\t\t\tthis.request_next = new SearchRequest(this.request);\n\t\t\t\t\t\tthis.request_next.meta.sources = this.meta.sources;\n\t\t\t\t\t\tthis.request_next.meta.window.start = this.request_next.meta.window.end;\n\t\t\t\t\t\tthis.request_next.meta.window.end += winDiff;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (!this.request_prev && this.request.meta.window.start > 0) {\n\t\t\t\t\t\tthis.request_prev = new SearchRequest(this.request);\n\t\t\t\t\t\tthis.request_prev.meta.sources = this.meta.sources;\n\t\t\t\t\t\tthis.request_prev.meta.window.end = this.request_prev.meta.window.start;\n\t\t\t\t\t\tthis.request_prev.meta.window.start =\n\t\t\t\t\t\t\twinDiff >= this.request_prev.meta.window.start ? 0 :  this.request_prev.meta.window.start - winDiff;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\t\n\t\tcontextualSearch.newSearchRequest = function(requestData) {\n\t\t\treturn new SearchRequest(requestData);\n\t\t};\n\t\t\n\t\t/* Converts sp g_form.serialize() to form g_form.serialize()\n\t\t * Not a 1:1 conversion, a 'good enough' conversion\n\t\t */\n\t\tfunction serializeForm(g_form) {\n\t\t\tvar fieldNames = g_form.getFieldNames();\n\n\t\t\tvar nvp=[];\n\t\t\tvar isFrm = false;\n\t\t\tfor (var i = 0; i < fieldNames.length; i++) {\n\t\t\t\t//PRB1295804: comply with change of platform field components from portal team. Field name in g_form now returns variable name, not sys_id.\n\t\t\t\t//PRB1350491: fieldNames in g_form now are variable name again.\n\t\t\t\tvar catVar = g_form.getField(fieldNames[i])._cat_variable;\n\t\t\t\tif (catVar === true || catVar === \"true\") {\n\t\t\t\t\tvar fieldId = \"IO:\" + g_form.getField(fieldNames[i]).sys_id;\n\t\t\t\t\tnvp.push(fieldId + \"=\" + g_form.getValue(fieldNames[i]));\n\t\t\t\t} else {\n\t\t\t\t\tisFrm = true;\n\t\t\t\t\tvar fldNm = g_form.getTableName() + \".\" + fieldNames[i];\n\t\t\t\t\tnvp.push(fldNm + \"=\" + g_form.getValue(fieldNames[i]));\n\t\t\t\t\tnvp.push(\"sys_display.\" + fldNm + \"=\" + g_form.getDisplayValue(fieldNames[i]));\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (isFrm) {\n\t\t\t\tnvp.push(\"sys_target=\" + g_form.getTableName());\n\t\t\t\tnvp.push(\"sys_uniqueValue=\" + g_form.getUniqueValue());\n\t\t\t}\n\t\t\treturn nvp.join(\"&\");\n\t\t}\n\t\t\n\t\tcontextualSearch.submit = function(searchRequest) {\n\t\t\t// Build the form information on submit\n\t\t\tif (searchRequest.g_form)\n\t\t\t\tsearchRequest.meta.form = {\n\t\t\t\t\ttn: searchRequest.g_form.getTableName() || \"ni-sp\",\n\t\t\t\t\tsys_id: searchRequest.g_form.getUniqueValue(),\n\t\t\t\t\tserialized: serializeForm(searchRequest.g_form)\n\t\t\t\t};\n\n\t\t\tvar deferred = $q.defer();\n\t\t\t\n\t\t\tvar reqGF;\n\t\t\tif (searchRequest.g_form) {\n\t\t\t\treqGF = searchRequest.g_form;\n\t\t\t\tdelete searchRequest.g_form;\n\t\t\t}\n\t\t\t\n\t\t\t$http.post(CTX_SERVICE, searchRequest).then(function(response) {\n\t\t\t\tdeferred.resolve(new SearchResponse(response.data.result));\n\t\t\t},\n\t\t\tfunction(response) {\n\t\t\t\tmodelUtil.failNicely(response);\n\t\t\t\tdeferred.reject(response);\n\t\t\t});\n\t\t\t\n\t\t\tif (reqGF)\n\t\t\t\tsearchRequest.g_form = reqGF;\n\t\t\t\n\t\t\treturn deferred.promise;\n\t\t};\n\t}]);\n\n\nangular.module(\"sn.app_common.cxs.contextual_feedback\", [\"sn.app_common\",\"sn.app_common.cxs.contextual_search\"]);\nangular.module(\"sn.app_common.cxs.contextual_feedback\")\n\t.service(\"contextualFeedback\", [\"$http\", \"$q\", \"modelUtil\", \"contextualSearch\", \"$log\", function($http, $q, modelUtil, contextualSearch, $log) {\n\t\tvar contextualFeedback = this;\n\n\t\tvar CTX_SERVICE = \"/api/now/cxs/feedback\";\n\t\tvar CTX_SERVICE_LINK = CTX_SERVICE + \"/link\";\n\n\t\t// Definition of the client side FeedbackRequest\n\t\tvar FeedbackRequest = function(requestData) {\n\t\t\tif (requestData) {\n\t\t\t\tangular.copy(requestData, this);\n\t\t\t\tif (this.search_request) {\n\t\t\t\t\tthis.search_request = contextualSearch.newSearchRequest(this.search_request);\n\t\t\t\t\tif (this.search_request.g_form)\n\t\t\t\t\t\tdelete (this.search_request.g_form);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.search_request = contextualSearch.newSearchRequest();\n\t\t\t\tthis.relevant_doc = \"\";\n\t\t\t\tthis.relevant_doc_url = \"\";\n\t\t\t\tthis.relevance = \"\";\n\t\t\t\tthis.relevant = false;\n\t\t\t}\n\t\t\t\t\n\n\t\t\t// Convenience method to submit this request\n\t\t\tthis.submit = function() {\n\t\t\t\treturn contextualFeedback.submit(this);\n\t\t\t};\n\t\t};\n\t\t\n\t\t// Definition of the client side FeedbackResponse\n\t\tvar FeedbackResponse = function(responseData) {\n\t\t\tif (responseData) {\n\t\t\t\t// Shallow copy response.\n\t\t\t\tfor (var key in responseData)\n\t\t\t\t\tif(responseData.hasOwnProperty(key))\n\t\t\t\t\t\tthis[key] = responseData[key];\n\t\t\t\t\n\t\t\t\t// Create a feedback request object\n\t\t\t\tif (this.request)\n\t\t\t\t\tthis.request = new FeedbackRequest(this.request);\n\t\t\t}\n\t\t};\n\n\t\tcontextualFeedback.newFeedbackRequest = function(requestData) {\n\t\t\treturn new FeedbackRequest(requestData);\n\t\t};\n\n\t\tcontextualFeedback.submit = function(feedbackRequest) {\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.post(CTX_SERVICE, feedbackRequest).then(function(response) {\n\t\t\t\tdeferred.resolve(new FeedbackResponse(response.data.result));\n\t\t\t},\n\t\t\tfunction(response) {\n\t\t\t\tmodelUtil.failNicely(response);\n\t\t\t\tdeferred.reject(response);\n\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\t\t\n\t\tcontextualFeedback.link = function(session, tableName, sysId) {\n\t\t\tvar deferred = $q.defer();\n\t\t\t$http.post(CTX_SERVICE_LINK, {\n\t\t\t\t\"session_id\" : session,\n\t\t\t\t\"sys_id\" : sysId,\n\t\t\t\t\"table\" : tableName\n\t\t\t}).then(function(response){\n\t\t\t\tdeferred.resolve(response);\n\t\t\t}, function(response){\n\t\t\t\tmodelUtil.failNicely(response);\n\t\t\t\tdeferred.reject(response);\n\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\t}]);","sys_class_name":"sys_ui_script","sys_id":"ce1b946bd7e6220034d145bcce610351","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/5209e3b704f12210559073c06a02f734","value":"5209e3b704f12210559073c06a02f734"},"ui_type":"0","sys_update_name":"sys_ui_script_ce1b946bd7e6220034d145bcce610351","sys_updated_by":"admin","sys_created_on":"2016-10-24 15:26:34","name":"app_com.cxs.contextual_search","sys_name":"app_com.cxs.contextual_search","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"3","active":"true","description":"Module sn.itsm.vcab.common","use_scoped_format":"false","global":"false","sys_updated_on":"2022-09-27 13:43:33","sys_tags":"","script_name":"","script":"(function ($) {\nangular.module('sn.itsm.vcab.common', ['sn.common.auth', 'ng.amb', 'sn.change_management.cab'])\n.constant('Tables', {\n\tMEETING: 'cab_meeting',\n\tAGENDA: 'cab_agenda_item',\n\tAGENDA_BASE: 'mtg_agenda_item',\n\tATTENDEE: 'cab_attendee',\n\tCHANGE: 'change_request'\n})\n.constant('CtrlIds', { // List of all controller ids which can be used to fetch respective controller's instances.\n\tMEETING_HEADER: 'mtg_header'\n}).\nvalue('isAccessibilityEnabled', function () {\n\treturn window.g_accessibility == 'true';\n}).\nvalue('isMobile', function() {\n\tvar ua = window.navigator.userAgent;\n\tif( ua.match(/Android/i) ||\n\t\tua.match(/webOS/i) ||\n\t\tua.match(/iPhone/i) ||\n\t\tua.match(/iPad/i) ||\n\t\tua.match(/iPod/i) ||\n\t\tua.match(/BlackBerry/i) ||\n\t\tua.match(/Windows Phone/i))\n\t\t\treturn true;\n\n\t\t\treturn false;\n})\n.directive('snCabFocusInOut', function ($timeout) {\n\treturn {\n\t\trestrict: 'A',\n\t\tscope: {\n\t\t\tsnCabFocusInOut: '&'\n\t\t},\n\t\tlink: function ($scope, el, attrs) {\n\t\t\tvar $el = $(el);\n\t\t\tvar fin = false, fout = false;\n\t\t\t$el.on('focusin.snCabFocusInOut', function () {\n\t\t\t\tcheckForEvent();\n\t\t\t\tfin = true;\n\t\t\t});\n\t\t\t$el.on('focusout.snCabFocusInOut', function () {\n\t\t\t\tcheckForEvent();\n\t\t\t\tfout = true;\n\t\t\t});\n\t\t\tvar timer;\n\t\t\tfunction checkForEvent() {\n\t\t\t\tfout = false;\n\t\t\t\tfin = false;\n\t\t\t\tif (timer)\n\t\t\t\t\t$timeout.cancel(timer);\n\t\t\t\ttimer = $timeout(function () {\n\t\t\t\t\tif (fout)\n\t\t\t\t\t\t$scope.snCabFocusInOut({$isFocusIn: false});\n\t\t\t\t\tif (fin)\n\t\t\t\t\t\t$scope.snCabFocusInOut({$isFocusIn: true});\n\t\t\t\t\tfin = false;\n\t\t\t\t\tfout = false;\n\t\t\t\t\ttimer = undefined;\n\t\t\t  }, 100);\n\t\t\t}\n\t\t\t$scope.$on('$destroy', function () {\n\t\t\t\t$el.off('.snCabFocusInOut');\n\t\t\t});\n\t\t}\n\t};\n})\n.directive('snFocusContainer', function () {\n\tvar TAB = 9;\n\treturn {\n\t\trestrict: 'A',\n\t\tscope: false,\n\t\tlink: function ($scope, el, attrs) {\n\t\t\tvar $el = $(el);\n\t\t\t$el.on('keydown.snFocusContainer', function (evt) {\n\t\t\t\tvar list = $(this).find('button, input').not(\"[tabindex='-1']\");\n\t\t\t\tvar focused = $(document.activeElement);\n\t\t\t\t// if calendar is not render, skips event handling\n\t\t\t\tif (list.length <= 1)\n\t\t\t\t\treturn;\n\t\t\t\tif (evt.keyCode === TAB) {\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\tvar index;\n\t\t\t\t\tvar next;\n\t\t\t\t\tif (typeof index == 'undefined')\n\t\t\t\t\t\tindex = list.index(focused);\n\t\t\t\t\tif (!evt.shiftKey)\n\t\t\t\t\t\tindex = (index === list.length - 1) ? 0 : index + 1;\n\t\t\t\t\telse if (evt.shiftKey)\n\t\t\t\t\t\tindex = (index === 0) ? list.length - 1: index - 1;\n\t\t\t\t\tnext = list.get(index);\n\t\t\t\t\tif (next)\n\t\t\t\t\t\tnext.focus();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$scope.$on('$destroy', function () {\n\t\t\t\t$el.off('.snFocusContainer');\n\t\t\t});\n\t\t}\n\t};\n});\n}(jQuery));","sys_class_name":"sys_ui_script","sys_id":"ce6b80ec53ce1110a6f8ddeeff7b12d8","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/3b83a3f304312210559073c06a02f788","value":"3b83a3f304312210559073c06a02f788"},"ui_type":"0","sys_update_name":"sys_ui_script_ce6b80ec53ce1110a6f8ddeeff7b12d8","sys_updated_by":"admin","sys_created_on":"2022-09-16 16:06:35","name":"clone_calendar_common","sys_name":"clone_calendar_common","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"8","active":"true","description":"Proxy for \"window.console\" API for the server-side client script executor","use_scoped_format":"false","global":"false","sys_updated_on":"2024-05-30 07:31:40","sys_tags":"","script_name":"Browser Console Proxy","script":"function BrowserConsole() {\n\tvar self = this;\n\t['info', 'error', 'debug', 'warn', 'log', 'clear', 'count', 'countReset', 'dir', 'dirxml', 'table']\n\t\t.forEach(function(method) {\n\t\tself[method] = function() {\n\t\t\t_notifications_.push({\n\t\t\t\ttype: 'browser-console-' + method,\n\t\t\t\tmessage: [].slice.apply(arguments).join()\n\t\t\t});\n\t\t};\n\t});\n}\n\nvar console = new BrowserConsole();\n\n// TBD - intiailize the proxy in a global context with necessary args/inputs if required\n// _globalProxyContext_['console'] = new BrowserConsole(inputs.url);\ncsGlobals['console'] = new BrowserConsole();\n","sys_class_name":"sys_ui_script","sys_id":"d010e48043040210d0526bdbd4b8f2bb","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/4c8e6ff304752210559073c06a02f7c4","value":"4c8e6ff304752210559073c06a02f7c4"},"ui_type":"10","sys_update_name":"sys_ui_script_d010e48043040210d0526bdbd4b8f2bb","sys_updated_by":"admin","sys_created_on":"2024-01-25 07:02:53","name":"global.Browser Console Proxy","sys_name":"global.Browser Console Proxy","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"8","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2023-08-24 15:19:07","sys_tags":"","script_name":"","script":"function multifactorSendOneTimePassword(factor, resend) {\n\tvar ajax = new GlideAjax(\"GlideOneTimePasswordGenerator\");\n    ajax.addParam(\"sysparm_name\", \"generateOneTimePassword\");\n\tajax.addParam(\"sysparm_factor\", factor);\n\tajax.addParam(\"sysparm_resend\", resend);\n    ajax.getXML(processMultifactorSendOneTimePasswordResponse.bind(this));\n\treturn false;\n}\n\nfunction processMultifactorSendOneTimePasswordResponse(response) {\n    var results = response.responseXML.getElementsByTagName(\"result\"); \n\tGlideUI.get().clearOutputMessages();\n    if(results && results.length >0) {\n        var msg = results[0].getAttribute(\"msg\");\t\n        GlideUI.get().addOutputMessage({msg: msg, type: \"info\", id: null});\n    } else {\n        var msg = response.responseXML.documentElement.getAttribute(\"error\");\n        GlideUI.get().addOutputMessage({msg: msg, type: \"error\", id: null});\n    }\n}","sys_class_name":"sys_ui_script","sys_id":"d20a5130933331003c5537ae867ffba5","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/d7152f3304712210559073c06a02f70f","value":"d7152f3304712210559073c06a02f70f"},"ui_type":"0","sys_update_name":"sys_ui_script_d20a5130933331003c5537ae867ffba5","sys_updated_by":"admin","sys_created_on":"2015-04-30 21:42:33","name":"MultiFactorAuthClientUtils","sys_name":"MultiFactorAuthClientUtils","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"1","active":"true","description":"Service getAllFocussableElements","use_scoped_format":"false","global":"false","sys_updated_on":"2017-01-04 19:57:52","sys_tags":"","script_name":"vmisc.getAllFocussableElements","script":"(function ($) {\n\t'use strict';\n\n\tangular.module('sn.itsm.vcab.misc').factory('getAllFocussableElements', function () {\n\t\tvar tabbableSelector = 'a[href], area[href], input:not([disabled]):not([tabindex=\\'-1\\']), '\n\t\t+ 'button:not([disabled]):not([tabindex=\\'-1\\']),select:not([disabled]):not([tabindex=\\'-1\\']),'\n\t\t+' textarea:not([disabled]):not([tabindex=\\'-1\\']), iframe, object, '\n\t\t+'embed, *[tabindex]:not([tabindex=\\'-1\\']), *[contenteditable=true]';\n\t\treturn function (searchInEl) {\n\t\t\treturn $(tabbableSelector, searchInEl);\n\t\t};\n\t});\n} (jQuery));","sys_class_name":"sys_ui_script","sys_id":"d34b44be9fc83200b18a7feea57fcfe3","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"ui_type":"","sys_update_name":"sys_ui_script_d34b44be9fc83200b18a7feea57fcfe3","sys_updated_by":"admin","sys_created_on":"2017-01-04 19:55:22","name":"sn_change_cab.vmisc.getAllFocussableElem","sys_name":"sn_change_cab.vmisc.getAllFocussableElem","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"8","active":"true","description":"Creates a highcharts configuration for a particular graph queried from the jrobin single graph rest API.","use_scoped_format":"false","global":"true","sys_updated_on":"2025-06-05 05:18:18","sys_tags":"","script_name":"","script":"var HighchartsBuilder = {\n\tgetChartConfig: function(chartOptions, tzOffset) {\n\t\tvar chartTitle = chartOptions.title.text,\n\t\t\txAxisTitle = chartOptions.xAxis.title.text,\n\t\t\txAxisCategories = chartOptions.xAxis.categories,\n\t\t\tyAxisTitle = chartOptions.yAxis.title.text,\n\t\t\tseries = chartOptions.series;\n\n\t\tthis.convertEpochtoMs(xAxisCategories);\n\t\tthis.formatDataSeries(xAxisCategories, series);\n\n\t\tvar config = {\n\t\t\tchart: {\n\t\t\t\ttype: 'area',\n\t\t\t\tzoomType: 'x'\n\t\t\t},\n\t\t\tcredits: {\n\t\t\t\tenabled: false\n\t\t\t},\n\t\t\ttitle: {\n\t\t\t\ttext: chartTitle\n\t\t\t},\n\t\t\txAxis: {\n\t\t\t\ttype: 'datetime',\n\t\t\t\ttitle: {\n\t\t\t\t\ttext: xAxisTitle,\n\t\t\t\t\tstyle: {textTransform: 'capitalize'}\n\t\t\t\t}\n\t\t\t},\n\t\t\tyAxis: {\n\t\t\t\treversedStacks: false,\n\t\t\t\ttitle: {\n\t\t\t\t\ttext: yAxisTitle,\n\t\t\t\t\tstyle: {textTransform: 'capitalize'}\n\t\t\t\t}\n\t\t\t},\n\t\t\tplotOptions: {\n\t\t\t\tarea: {\n\t\t\t\t\tstacking: 'normal'\n\t\t\t\t},\n\t\t\t\tseries: {\n\t\t\t\t\tmarker: {\n\t\t\t\t\t\tenabled: true,\n\t\t\t\t\t\tsymbol: 'circle',\n\t\t\t\t\t\tradius: 2\n\t\t\t\t\t},\n\t\t\t\t\tstep: 'center'\n\t\t\t\t}\n\t\t\t},\n\t\t\ttooltip: {\n\t\t\t\tvalueDecimals: 2,\n\t\t\t\tstyle: {\n\t\t\t\t\twhiteSpace: \"wrap\",\n\t\t\t\t\twidth: \"200px\"\n\t\t\t\t}\n\t\t\t},\n\t\t\tseries: series\n\t\t};\n\n\t\tvar convertedOffset = -1 * (tzOffset/60);\n\n\t\tHighcharts.setOptions({\n\t\t\tlang: {\n\t\t\t\tthousandsSep: ','\n\t\t\t},\n\t\t\tglobal: {\n\t\t\t\ttimezoneOffset: convertedOffset\n\t\t\t}\n\t\t});\n\n\t\treturn config;\n\t},\n\n    convertEpochtoMs: function(categories) {\n\t\tcategories.forEach(function(point, index, arr) {\n\t\t\tarr[index] *= 1000;\n\t\t});\n\t},\n\n\tformatDataSeries: function(categories, series) {\n\t\tseries.forEach(function(row, index, arr) {\n\t\t\tarr[index].data.forEach(function(innerRow, innerIndex, innerArr) {\n\t\t\t\tvar value = innerRow;\n\t\t\t\tif (value == \"NaN\") {\n\t\t\t\t\tvalue = 0;\n\t\t\t\t}\n\t\t\t    var xValue = categories[innerIndex];\n\t\t\t\tinnerArr[innerIndex] = [xValue, value];\n\t\t\t});\n\t\t});\n\t}\n};","sys_class_name":"sys_ui_script","sys_id":"da2dcec167513200ca27ebc172415a12","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/f6e7e3ff04b12210559073c06a02f7e8","value":"f6e7e3ff04b12210559073c06a02f7e8"},"ui_type":"0","sys_update_name":"sys_ui_script_da2dcec167513200ca27ebc172415a12","sys_updated_by":"system","sys_created_on":"2017-03-02 22:12:56","name":"pdb_HighchartsConfigBuilder","sys_name":"pdb_HighchartsConfigBuilder","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"141","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2025-06-05 05:18:18","sys_tags":"","script_name":"","script":"MESSAGES_CONDITION_RELATED_FILES.push('-- choose relationship --');\nRELATIONSHIP_OPERATORS = [[\"=\", \"is\"], [\"!=\", \"is not\"], [\"ISEMPTY\", \"is empty\"], [\"ISNOTEMPTY\", \"is not empty\"], [\"IN\", \"is one of\"], [\"NOT IN\", \"is not one of\"]];\nvar CertificationGlideFilter = Class.create(GlideFilter, {\n    initialize: function(name, options, callback) {\n        this.singleRow = false;\n        this.isRelationship = false;\n        this.relTypeTable = null;\n\t\tthis.descriptor = options.descriptor;\n\t\tthis.prefix = options.prefix;\n\t\t\n        GlideFilter.prototype.initialize.call(this, name, callback);\n    },\n    \n    setOptionsFromParmsElement: function(name) {\n        var p = name.split(\".\");\n\t\tvar elem = gel(p[1] + \".\" + p[2]);\n        var singleRow = elem.getAttribute(\"single-row\");\n\t\tif(singleRow)\n\t\t\tthis.singleRow = singleRow != 'false' ? true : false;\n\t\t\n\t\tvar isRelationship = elem.getAttribute(\"is-relationship\");\n\t\tif(isRelationship)\n\t\t\tthis.isRelationship = isRelationship != 'false' ? true : false\n\t\t\t\t\t\n\t\tvar relTypeTable = elem.getAttribute(\"rel-type-table\");\n\t\tif(relTypeTable)\n\t\t\tthis.relTypeTable = relTypeTable;\n\t\tthis.updateRestrictedFields();\n\t\tGlideFilter.prototype.setOptionsFromParmsElement.apply(this, arguments);\n    },\n\t\n\tupdateRestrictedFields: function() {\n\t\tvar filterObj = this;\n\t\ttry {\n\t\t\tdelete filterObj['onlyRestrictedFields'];\n\t\t\tObject.defineProperty(filterObj, 'onlyRestrictedFields', {\n\t\t\t\tget: function() {\n\t\t\t\t\t// thisObj.onlyRestricted fields is true if...\n\t\t\t\t\t// 1) The dependent table is not set OR\n\t\t\t\t\t// 2) We have already used the keywords field\n\t\t\t\t\t// If one of those two conditions are true, the \"Keywords\"\n\t\t\t\t\t// field will not be displayed\n\t\t\t\t\tvar tableEmpty = \n\t\t\t\t\t\t\tthis.tableName.startsWith('CHOOSE_RELATED_LIST') ||\n\t\t\t\t\t\t\tthis.tableName.startsWith('null');\n\t\t\t\t\tif (tableEmpty || (this.restrictedFields && this.restrictedFields[TEXTQUERY]))\n\t\t\t\t\t\treturn true;\n\t\t\t\t\telse\n\t\t\t\t\t\treturn false;\n\t\t\t\t},\n\t\t\t\tset: function() {\n\t\t\t\t\t// DO NOTHING\n\t\t\t\t}\n\t\t\t});\n\t\t} catch(e) {\n\t\t\tfilterObj.onlyRestrictedFields = false;\n\t\t}\n\t},\n    \n    setQuery: function(query) {\n        jslog(\"setQuery Synchronously:  \" + query);\n\t\tthis.glideQuery = new CertificationGlideEncodedQuery(this, this.tableName, query, this.isRelationship);\n\t\tthis.glideQuery.parse();\n\t\tthis.reset();\n\t\tthis.build();\n    },\n    \n    setQueryAsync: function(query) {\n\t\tjslog(\"setQuery Asynchronously:  \" + query);\n\t\tthis.glideQuery = new CertificationGlideEncodedQuery(this, this.tableName, query, this.isRelationship, this.setQueryCallback.bind(this));\n\t\tthis.glideQuery.parse();\n\t\tthis.queryProcessed = true;\n\t},\n\t\n\t// Add a new sort condition to the query\n\taddSortRow: function(field, oper) {\n\t\tif (this.sortSection == null)\n\t\t\tthis.sortSection = new CertificationGlideSortSection(this, this.singleRow);\n\t\tthis.sortSection.addField(field, oper);\n\t\tthis.addRunButton();\n\t},\n\t\n\t//\n\t// Add a new query section.  Each section represents a new set of query conditions\n\t//\n\taddSection: function() {\n        var section = new CertificationGlideFilterSection(this, this.singleRow, this.isRelationship);\n    \tqueryID = section._setup(this.sortSection == null, this.sections.length == 0);\n    \tthis.sections[this.sections.length] = section;\n    \tif (this.sections.length == 1)\n    \t\tsection.setFirst();\n    \t\t\n    \tif (this.sortSection != null) {\n\t\t\tvar sortRow = this.sortSection.getSection().getRow();\n    \t\tthis.fDiv.insertBefore(section.getRow(), sortRow);\n    \t}\n\t\tthis.addRunButton();\n    \treturn section;\n\t},\n\t\n\tgetDisplayValue: function() {\n\t\treturn !this.isRelationship ? \n\t\t\t\tgetFilterDisplay(this.tableName) : \n\t\t\t\tgetRelationshipFilterDisplay(this.tableName, this.relTypeTable);\n\t},\n\t\n\tfilterFields: function(item) {\n\t\tif (!this.restrictedFields)\n\t\t\treturn true;\n\t\t\n\t\tvar name = item.getName();\n\t\tif (name.indexOf(\".\")  >-1 )  \n\t\t\treturn false;\n\t\t\n\t\tif (!this.restrictedFields[name])\n\t\t\treturn true;\n\t\t\n\t\treturn false;\n\t}\n});\n\nvar CertificationGlideEncodedQuery = Class.create(GlideEncodedQuery, {\n    initialize: function(filter, name, query, isRelationship, callback) {\n        this.isRelationship = isRelationship;\n        GlideEncodedQuery.prototype.initialize.apply(this, [name, query, callback]);\n    },\n    \n    getEncodedParts: function() {\n\t\tif (typeof g_filter_description !='undefined' && this.tableName == g_filter_description.getName() && \n\t\t\t\tthis.encodedQuery == g_filter_description.getFilter()) {\n\t\t\tthis.partsXML = loadXML(g_filter_description.getParsedQuery());\n\t\t\tthis.parseXML();\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvar ajaxProcessor = !this.isRelationship ? 'QueryParseAjax' : 'RelationshipQueryParseAjax'; \n\t\tvar ajax = new GlideAjax(ajaxProcessor);\n\t\tajax.addParam('sysparm_chars', this.encodedQuery);\n\t\tajax.addParam('sysparm_name', this.tableName);\n\t\t\n\t\tif (this.callback)\n\t\t\tajax.getXML(this.getEncodedPartsResponse.bind(this));\n\t\telse {\n\t\t\tthis.partsXML = ajax.getXMLWait();\n\t\t\tthis.parseXML();\n\t\t}\n\t}\n});\n\nvar CertificationGlideSortSection = Class.create(GlideSortSection, {\n    initialize: function(filter, singleRow) {\n        this.singleRow = singleRow || false;\n        GlideSortSection.prototype.initialize.apply(this, arguments);\n    },\n    \n    locateSection: function() {\n\t\tthis.section = null;\n\t\tthis.rowTable = null;\n    \tvar divRows = this.filter.getDiv().getElementsByTagName(\"tr\");\n    \tfor (var i = 0; i < divRows.length; i++ ) {\n      \t\tvar rowTR = divRows[i];\n      \t\tif (rowTR.sortRow == 'true') {\n      \t\t\tthis.section = rowTR.rowObject;\n      \t\t\tthis.rowTable = this.section.getFilterTable();\n      \t\t\tthis.queryID = this.section.getQueryID();\n      \t\t\tbreak;\n      \t\t}\n    \t}\n    \tif (!this.section) {\n    \t\tsection = new CertificationGlideFilterSection(this.filter, this.singleRow);\n    \t\tsection.setSort(true);\n    \t\tthis.queryID = section._setup(true);\n    \t\tthis.section = section;\n    \t\tthis.rowTable = section.getFilterTable();\n    \t\tthis.section.getRow().sortRow = 'true';\n    \t}\n\t}\n});\n\nvar CertificationGlideFilterSection = Class.create(GlideFilterSection, {\n    initialize: function(filter, singleRow, isRelationship) {\n        GlideFilterSection.prototype.initialize.apply(this, arguments);\n        this.singleRow = singleRow || false;\n\t\tthis.isRelationship = isRelationship || false;\n    },\n    \n    addSortCondition: function() {\n    \tvar condition = new CertificationGlideSectionCondition(this, this.queryID, this.singleRow, this.isRelationship);\n\t\tthis.conditions[this.conditions.length] = condition;\n\t\tcondition.setOrWanted(false);\n\t\tif (this.runRow == null)\n\t\t\tcondition.build(this.tbody);\n\t\telse {\n\t\t\tcondition.build(null);\n            this.tbody.insertBefore(condition.getRow(), this.runRow);\n\t\t}\n\t\treturn condition;\n\t},\n\t\n\t//\n\t// Add a row at the bottom of the section for the \n\t// user to fill in if a new condition is wanted\n\t//\n\taddPlaceHolder: function(wantOR) {\n\t\t// WARNING: wantOR is not used\n\t\tthis.placeHolderCondition = new CertificationGlideSectionCondition(this, this.queryID, this.singleRow, this.isRelationship);\n\t\tthis.conditions[this.conditions.length] = this.placeHolderCondition;\n\t\tthis.placeHolderCondition.setPlaceHolder(true);\n\t\tthis.placeHolderCondition.setOrWanted(true);\n\t\tif (this.runRow == null)\n\t\t\tthis.placeHolderCondition.buildRow(this.tbody, this.PLACE_HOLDER_FIELD);\n\t\telse {\n\t\t\tthis.placeHolderCondition.buildRow(null, this.PLACE_HOLDER_FIELD);\n            this.tbody.insertBefore(this.placeHolderCondition.getRow(), this.runRow);\n\t\t}\n\t},\n\t\n\t//\n\t// Add a field=value type condition to the section\n\t//\n\taddCondition: function(wantOR, field, oper, value) {\n\t\tif (this.filter.getMaintainPlaceHolder())\n\t\t\treturn this.addConditionWithPlaceHolder(wantOR, field, oper, value);\n\t\t\n\t\tif (this.placeHolderCondition == null) {\n\t\t\tif (typeof field == \"undefined\" || field == '') {\n\t\t\t\tthis.newPlaceHolder();\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (typeof field == \"undefined\")\n\t\t\treturn null;\n\t\tvar condition = new CertificationGlideSectionCondition(this, this.queryID, this.singleRow, this.isRelationship);\n\t\tthis.conditions[this.conditions.length] = condition;\n\t\tcondition.setOrWanted(wantOR);\n\t\tif (this.runRow == null)\n\t\t\tcondition.buildRow(this.tbody, field, oper, value);\n\t\telse {\n\t\t\tcondition.buildRow(null, field, oper, value);\n            this.tbody.insertBefore(condition.getRow(), this.runRow);\n\t\t}\n\t\treturn condition;\n\t},\n\t\n\taddConditionWithPlaceHolder: function (wantOR, field, oper, value) {\n\t\tif (this.placeHolderCondition == null) {\n\t\t\tthis.newPlaceHolder();\n\t\t\tif (typeof field == \"undefined\")\n\t\t\t\treturn null;\n\t\t}\n\t\t\n\t\tif (typeof field == \"undefined\")\n\t\t\treturn null;\n\t\tvar condition = new CertificationGlideSectionCondition(this, this.queryID, this.singleRow, this.isRelationship);\n\t\tthis.conditions[this.conditions.length-1] = condition;\n\t\tthis.conditions[this.conditions.length] = this.placeHolderCondition;\n\t\tcondition.setOrWanted(wantOR);\n\t\tcondition.buildRow(null, field, oper, value);\n        this.tbody.insertBefore(condition.getRow(), this.placeHolderCondition.getRow());\n\t\treturn condition;\n\t},\n\t\n\taddRunButton: function() {\n\t\tif (this.runRow != null)\n\t\t\treturn;\n\t\tthis.runCondition = new CertificationGlideSectionCondition(this, this.queryID, this.singleRow, this.isRelationship);\n\t\tthis.runCondition.build(this.tbody);\n\t\tthis.runRow = this.runCondition.getRow();\n\t\tthis.runRow.basePart = '';\n\t\tthis.runCondition.setAsRunRow(this.PLACE_HOLDER_FIELD);\n\t},\n\t\n\t//\n\t// build all HTML necessary for the row\n\t//\n\tbuild: function(parent) {\n\t\ttrNew = celQuery('tr', parent, this.queryID);\n\t\tthis.row = trNew;\n\t\ttrNew.className = \"filter_row\";\n\t\ttrNew.basePart = 'true';\n\t\ttrNew.conditionObject = this;\n\t\t\n\t\tvar td = celQuery('td', trNew, this.queryID);\n    \ttd.style.width = \"100%\";\n\t\n\t\tvar table = celQuery('table', td, this.queryID);\t\t\n    \ttable.cellSpacing = \"0px\";\n    \ttable.cellPadding = \"1px\";\n    \ttable.border = DEFAULT_BORDER;\n\t\tif (!this.filter.getConditionsWanted())\n    \t\ttable.className = \"wide\";\n\t\n\t\tthis.tbody = celQuery('TBODY', table, this.queryID);\n\t\tthis.tbody.conditionObject = this;\n\t\tvar first = this.section.firstCondition(this) && !this.isPlaceHolder();\n\t    this.conditionRow = \n\t    \t!this.isRelationship ?\n\t    \t\t\tnew CertificationGlideConditionRow(this, this.queryID, this.wantOR, first, this.singleRow) :\n\t    \t\t\tnew CertificationGlideRelationshipConditionRow(this, this.queryID, this.wantOR, first, this.singleRow);\n\t\tvar tr = this.conditionRow.getRow();\n\t\tthis.tbody.appendChild(tr);\n\t\tthis.actionRow = tr;\n\t\ttr.conditionObject = this;\t\n\t},\n\t\n\t//\n\t// Add a new or condition \n\t//\n\taddNewSubCondition: function(field, oper, value) {\n\t\tif (field == null || typeof(field) == \"undefined\") {\n\t\t\tfield = this.conditionRow.getField();\n\t\t\toper = this.conditionRow.getOper();\n\t\t}\n\t\tvar sub = new CertificationGlideSubCondition(this, this.queryID, this.isRelationship, this.singleRow);\n\t\tsub.buildRow(this.tbody, field, oper, value);\n\t\tthis.subConditions[this.subConditions.length] = sub;\n\t\tvar select = sub.getFieldSelect();\n\t\tselect.style.marginLeft = \"10px\";\t\n\t}\n});\n\nvar CertificationGlideSectionCondition = Class.create(GlideSectionCondition, {\n    initialize: function(section, queryID, singleRow, isRelationship) {\n        this.singleRow = singleRow || false;\n\t\tthis.isRelationship = isRelationship || false;\n\t\tGlideSectionCondition.prototype.initialize.apply(this, arguments);\n    },\n    \n    //\n    // build all HTML necessary for the row\n    //\n    build: function(parent) {\n        trNew = celQuery('tr', parent, this.queryID);\n        this.row = trNew;\n        trNew.className = \"filter_row\";\n        trNew.basePart = 'true';\n        trNew.conditionObject = this;\n        \n        var td = celQuery('td', trNew, this.queryID);\n        td.style.width = \"100%\";\n    \n        var table = celQuery('table', td, this.queryID);\t\t\n        table.cellSpacing = \"0px\";\n        table.cellPadding = \"1px\";\n        table.border = DEFAULT_BORDER;\n        if (!this.filter.getConditionsWanted())\n            table.className = \"wide\";\n    \n        this.tbody = celQuery('TBODY', table, this.queryID);\n        this.tbody.conditionObject = this;\n        var first = this.section.firstCondition(this) && !this.isPlaceHolder();\n        this.conditionRow = \n            !this.isRelationship ?\n                    new CertificationGlideConditionRow(this, this.queryID, this.wantOR, first, this.singleRow) :\n                    new CertificationGlideRelationshipConditionRow(this, this.queryID, this.wantOR, first, this.singleRow);\n        var tr = this.conditionRow.getRow();\n        this.tbody.appendChild(tr);\n        this.actionRow = tr;\n        tr.conditionObject = this;\t\n    }\n});\n\nvar CertificationGlideConditionRow = Class.create(GlideConditionRow, {\n    initialize: function(condition, queryID, wantOr, first, singleRow) {\n        this.singleRow = singleRow || false;\n        GlideConditionRow.prototype.initialize.apply(this, arguments);\n    },\n    \n    addLeftButtons: function() {\n   \t    if (this.wantOr && !this.singleRow) {\n    \t\ttdAddOr = this.tdOrButton;\n\t\t\tvar fDiv = this.filter.getDiv().id.split(\"gcond_filters\", 1);\n\t\t\tvar andOnClick = \"addConditionSpec('\" + this.tableName + \"','\" + this.queryID + \"','','','','\" + fDiv + \"')\";\n\t\t\tvar orOnClick = \"newSubRow(this)\";\n       \t\ttdAddOr.innerHTML = this.getAndButtonHTML(andOnClick) + this.getOrButtonHTML(orOnClick);\n\t    \tif (this.condition.isPlaceHolder())\n\t    \t\ttdAddOr.style.visibility = 'hidden';\n\t\t}\n\t\t\n        var td = this.tdRemoveButton;    \n\t\tvar tdMessage = this.tdAndOrText;\n\t\tif (this.wantOr) {\n\t    \tif (this.first || this.condition.isPlaceHolder()) {\n\t    \t\ttdMessage.innerHTML = this.answer['and'];\n\t    \t\ttdMessage.style.color = tdMessage.style.backgroundColor;\n\t        \ttdMessage.style.visibility = 'hidden';\n\t\t\t} else\n\t\t\t\ttdMessage.innerHTML = this.answer['and']; \n\t\t} else if (td.parentNode.sortSpec != true)\n\t\t\ttdMessage.innerHTML = this.answer['or']; \n\t\telse\n\t    \ttdMessage.style.display = 'none';\n\n\t\ttdMessage.style.width = DEFAULT_WIDTH;\n        \n        // delete filter\n \t\ttd.style.width = DEFAULT_WIDTH;\n    \tvar id = 'r' + guid();\n    \ttd.id = id;\n        var deleteOnClick = \"deleteFilterByID('\" + this.getName() +\"','\" +id+ \"');\"\n    \ttd.innerHTML = this.getDeleteButtonHTML(id, deleteOnClick);\n        \n        td.childNodes[0].childNodes[0].onmouseover = swapImage(\"img_\" + id, this.DELETE_HOVER_IMAGE);\n        td.childNodes[0].childNodes[0].onmouseout = swapImage(\"img_\" + id, this.DELETE_IMAGE);\n        \n        if (!this.condition.isPlaceHolder())\n        \treturn;\n        \n        if (!this.filter.defaultPlaceHolder)\n        \treturn;\n        \t\n        if (this.filter.getMaintainPlaceHolder() || this.filter.singleCondition())\n    \t\ttd.style.visibility = 'hidden';\n\t}\n});\n\nvar CertificationGlideRelationshipConditionRow = Class.create(CertificationGlideConditionRow, {\n    build: function(field, oper, value) {\n\t\tthis.field = field;\n\t\tthis.oper = oper;\n\t\tthis.value = value;\n\t\tvar tableName = this.getName();\n\t\tvar tds = this.row.getElementsByTagName(\"td\");\n\n\t\t// populate field pull down\n\t\tthis.fieldSelect = _createFilterSelect();\n\t\tthis.fieldSelect.onchange = this.fieldOnChange.bind(this);\n\t\t\n\t\tvar parts = tableName.split(\".\");\n\t\tvar sname = parts[0];\n\t\tif (this.field != null)\n\t   \t\tsname = sname + \".\" + field;\n\t\t\n\t\tvar tableDef = null;\n\t\tif(parts.length == 2)\n\t\t\ttableDef = getTableReference(parts[0]);\n\t\telse if(parts.length == 3)\n\t\t\ttableDef = getTableReference(parts[1]);\n\t\t\n\t\tif(tableDef)\n\t\t\tthis.fieldSelect.relationshipTable = tableDef.elements['condition'].getNamedAttribute('rel_type_table');\n\t\t\n\t\tthis.filter.setFieldUsed(field);\n\t\tvar descriptor = this.filter.descriptor;\n\t\tvar prefix = this.filter.prefix;\n\t\taddRelationships(this.fieldSelect, sname, field, this.filter.filterFields.bind(this.filter), tableDef, descriptor, prefix);\n\t\tthis.tdName.appendChild(this.fieldSelect);\n\n\t\t// populate condition and value\n\n\t\tupdateRelationshipOperators(tableName, this.fieldSelect, oper, value);\n \t\tif (this.filter.isProtectedField(field))\n \t\t\tthis._setReadOnly();\n\n\t\t// populate the remove button\n\t\tcurrentTable = tableName;\n\t\tthis.addLeftButtons();\n\t\tif (window.seeIfItHasFilters)\n\t\t\tseeIfItHasFilters(tableName);\n \t\t\n\t\treturn tds;\n\t},\n\t\n\t//\n\t// Gets called when the selected relationship is changed\n\t//\n\tfieldOnChange: function() {\n\t\tthis.filter.setFieldUsed(this.getField());\n\t\tthis.filter.clearFieldUsed(this.field, this.condition);\n\t\tthis.field = this.getField();\n\t\tvar b = this.condition.isPlaceHolder();\n\t\tthis.condition.setPlaceHolder(false);\n\t\tupdateRelationshipOperators(this.getName(), this.fieldSelect, null, null);\n\t\tif (b) {\n\t\t\tthis.condition.setPlaceHolder(false);\n\t\t\tthis.showFields();\n\t\t\tthis.condition.clearPlaceHolder();\n\t\t\tif (this.condition.isFirst())\n\t\t\t\tthis.makeFirst();\n\t\t}\n\t\t//TODO: What does this do?\n\t\t//this.filter.refreshSelectList();\n\t}\n});\n\nvar CertificationGlideSubCondition = Class.create(GlideSubCondition, {\n    initialize: function(condition, queryID, isRelationship, singleRow) {\n\t\tthis.isRelationship = isRelationship || false;\n\t\tthis.singleRow = singleRow || false;\n\t\tGlideSubCondition.prototype.initialize.apply(this, arguments);\n\t},\n\t\n\tbuildRow: function(parent, field, oper, value) {\n\t\tthis.field = field;\n\t\tthis.oper = oper;\n\t    if (value)\n\t\t\tthis.value = value.replace(/${AMP}amp;amp;/g,'${AMP}amp;');\n\t\telse\n\t\t\tthis.value = value;\n\t\tthis.row =\n\t\t\t!this.isRelationship ? \n\t\t\t\t\tnew CertificationGlideConditionRow(this.condition, queryID, false, false, this.singleRow) :\n\t\t\t\t\tnew CertificationGlideRelationshipConditionRow(this.condition, queryID, false, false, this.singleRow);\n\t\tvar tr = this.row.getRow();\n\t\tparent.appendChild(tr);\n\t\ttr.conditionObject = this;\n\t\tthis.row.build(field, oper, this.value);\n\t}\n});\n\nvar GlideFilterList = Class.create(GlideFilterReference, {\n\t_build: function() {\n\t\tclearNodes(this.tr.tdValue);\n\t\tthis.inputCnt = 0;\n\t\tif (this._isEmptyOper())\n            return;\t\n\t\t\n\t\tvar op = this._getOperator();\t\n\t\tif(this._renderRightOperandAsFieldList(op)) {\n\t\t\t// populate the right operand with fields of the same type as the left one.\n\t\t\tthis._addSameAsLabels(this, op);\n\t\t\tthis._populateRightOperandChoices();\n\t\t\t\n\t\t} else {\n\t\t\tthis._buildWidget();\n\t\t}\n\t},\n\t\n\t_buildWidget: function() { \n\t\tvar _this = this;\n\t\tvar hInput = this._addTextInput(\"hidden\");\n\t\thInput.id = this.id;\n\t\tvar enclosingSpan = $j('<span>');\n\t\t$j(this.tr.tdValue).append(enclosingSpan);\n\t\t\n\t\tvar table = $j('<div>')\n\t\t\t.css('display', 'table')\n\t\t\t.attr('cellspacing', '1')\n\t\t\t.attr('cellpadding', '1')\n\t\t\t.attr('border', '0');\n\t\t\n\t\tvar topTr = $j('<div>')\n\t\t\t.css('display', 'table-row');\n\t\t\t\n\t\tvar selectTd = $j('<span>')\n\t\t\t.css({\n\t\t\t\tdisplay: 'table-cell',\n\t\t\t\tpadding: '1px'\n\t\t\t});\n\t\t\t\n\t\tvar select = $j('<select>')\n\t\t\t.attr('id', 'select_0' + this.id)\t\t\t\n\t\t\t.attr('size', '4')\n\t\t\t.attr('minwidth', '160')\n\t\t\t.attr('fixedwidth', '')\n\t\t\t.attr('multiple', 'yes')\n\t\t\t.attr('name', 'select_0' + this.id)\n\t\t\t.change(function() {\n\t\t\t\ttoggleGlideListIcons(_this.id, false);\n\t\t\t})\n\t\t\t.css('width', '160px');\n\t\t\t\n\t\tthis._select = select[0];\n\t\tselectTd.append(select);\n\t\ttopTr.append(selectTd);\n\t\t\n\t\tvar iconTd = $j('<span>')\n\t\t\t.css({\n\t\t\t\tdisplay: 'table-cell',\n\t\t\t\tpadding: '1px',\n\t\t\t\tverticalAlign: 'top'\n\t\t\t})\n\t\t\t.attr('class', 'bodySmall')\n\t\t\t.attr('width', '20px');\n\t\t\n\t\tvar iconTable = $j('<span>')\n\t\t\t.css('display', 'table')\n\t\t\t.attr('cellspacing', '0')\n\t\t\t.attr('cellpadding', '0')\n\t\t\t.attr('border', '0');\n\t\t\n\t\tvar iconRemoveTr = $j('<span>')\n\t\t\t.css('display', 'table-row');\n\n\t\tvar iconRemoveTd = $j('<span>')\n\t\t\t.css({\n\t\t\t\tdisplay: 'table-cell',\n\t\t\t\tpadding: '1px'\n\t\t\t});\n\t\t\n\t\tvar iconRemove = $j('<a>')\n\t\t\t.attr('data-ref', this.id)\n\t\t\t.attr('data-type', 'glide_list_remove');\n\t\t\t\n\t\tvar iconRemoveImg = $j('<img>')\n\t\t\t.attr('id', 'remove.' + this.id)\n\t\t\t.attr('width', '16')\n\t\t\t.attr('height', '16')\n\t\t\t.attr('title', getMessage('Remove selected item'))\n\t\t\t.attr('src', 'images/delete_edit_off.gifx')\n\t\t\t.attr('alt', getMessage('Remove selected item'))\n\t\t\t.attr('border', 0);\n\t\t\t\n\t\ticonRemove.append(iconRemoveImg);\n\t\ticonRemoveTd.append(iconRemove);\n\t\ticonRemoveTr.append(iconRemoveTd);\n\t\ticonTable.append(iconRemoveTr);\t\n\n\t\tvar iconRefTr = $j('<span>')\n\t\t\t.css('display', 'table-row');\n\t\t\t\n\t\tvar iconRefTd = $j('<span>')\n\t\t\t.css({\n\t\t\t\tdisplay: 'table-cell',\n\t\t\t\tpadding: '1px'\n\t\t\t});\n\t\t\t\n\t\tvar iconRef = $j('<a>')\n\t\t\t.attr('id', 'view2link.' + this.id)\n\t\t\t.click(this._referenceRedirect.bind(this));\n\n\t\tvar iconRefImg = $j('<img>')\n\t\t\t.attr('id', 'view2.' + this.id)\n\t\t\t.attr('name', 'view2.' + this.id)\n\t\t\t.attr('src', 'images/icons/hover_icon_small2_off.gifx')\n\t\t\t.attr('border', '0')\n\t\t\t.attr('alt', getMessage('View selected Item'))\n\t\t\t.attr('title', getMessage('View selected item'))\n\t\t\t.attr('width', '16')\n\t\t\t.attr('height', '16')\n\t\t\t.css({\n\t\t\t\t//align: 'left',\n\t\t\t\t//display: 'block'\n\t\t\t});\n\t\t\t\n\t\ticonRef.append(iconRefImg);\n\t\ticonRefTd.append(iconRef);\n\t\ticonRefTr.append(iconRefTd);\n\t\ticonTable.append(iconRefTr);\n\t\ticonTd.append(iconTable);\n\t\t\n\t\ttopTr.append(iconTd);\n\t\t\n\t\tvar bottomTr = $j('<span>')\n\t\t\t.css('display', 'table-row');\n\t\t\t\n\t\tvar refTd = $j('<span>')\n\t\t\t.css({\n\t\t\t\tdisplay: 'table-cell',\n\t\t\t\tpadding: '1px'\n\t\t\t});\n\t\t\t\n\t\tvar refInput = this._addTextInput();\n\t\trefInput.parentNode.removeChild(refInput);\n\t\t\n\t\trefInput = $j(refInput);\n\t\trefInput\n\t\t\t.attr('id', 'sys_display.' + this.id)\n\t\t\t.attr('name', 'sys_display.' + this.id)\n\t\t\t.attr('isList', \"true\")\n\t\t\t.attr('title', getMessage('Select target record'))\n\t\t\t.attr('ac_columns', '')\n\t\t\t.attr('ac_order_by', '')\n\t\t\t.attr('autocomplete','off')\n\t\t\t.attr('function', 'addGlideListReference(\"' + this.id + '\")')\n\t\t\t.val('')\n\t\t\t.css({\n\t\t\t\twidth: '160px',\n\t\t\t\tverticalAlign: 'top'\n\t\t\t})\n\t\t\t.focus(this._onFocus.bindAsEventListener(this))\n\t\t\t.keydown(this._onKeyDown.bindAsEventListener(this))\n\t\t\t.keypress(this._onKeyPress.bindAsEventListener(this))\n\t\t\t.keyup(this._onKeyUp.bindAsEventListener(this));\n\t\t\t\n\t\trefTd.append(refInput);\n\t\t\n\t\tvar refIconTd = $j('<span>')\n\t\t\t.css({\n\t\t\t\tdisplay: 'table-cell',\n\t\t\t\tpadding: '1px'\n\t\t\t});\n\t\tvar image = createImage(\"images/reference_list.gifx\", \"Lookup using list\", this, this._refListOpen);\n\t\timage.setAttribute(\"class\", \"filerTableAction\");\n\t\trefIconTd.append($j(image));\n\t\tbottomTr.append(refTd);\n\t\tbottomTr.append(refIconTd);\n\t\t\n\t\ttable.append(topTr);\n\t\ttable.append(bottomTr);\n\t\t\n\t\tenclosingSpan.append(table);\n\t\t\n\t\tif(this.values)\n\t\t\tthis._resolveReference();\n\t},\n\t\n\t_resolveReference: function() {\n\t\tif (this.values && this.values.length > 0) {\n\t\t\tvar ajax = new GlideAjax(\"ResolveRefMulti\");\n\t\t\tajax.addParam(\"sysparm_name\", this.tr.tableField);\n\t\t\tajax.addParam(\"sysparm_value\", this.values);\n\t\t\tajax.getXML(this._resolveReferenceResponse.bind(this));\n\t\t}\n\t},\n\t\n\t_resolveReferenceResponse: function(request) {\n\t\tif (!request)\n\t\t\treturn;\n\t\t\n\t\tvar xml = request.responseXML;\n\t\tif (!xml)\n\t\t\treturn;\n\t\t\t\n\t\tif (xml) {\n\t\t    var items = xml.getElementsByTagName(\"item\");\n\t\t    if (items && items.length > 0) {\n\t\t    \tfor (var i=0; i < items.length; i++) {\n\t\t    \t\tvar it = items[i];\n\t\t    \t\tvar opt = cel('option');\n\t\t    \t\topt.innerHTML = it.getAttribute('label');\n\t\t    \t\topt.value = it.getAttribute('name');\n\t\t    \t\tthis._select.appendChild(opt);\n\t\t    \t}\n\t\t    }\n\t\t}\n\t},\n\t\n\t_onFocus: function() {\n\t\tif (!this.inputs[1].ac) {\n\t\t\tvar partialSearchFilterTypes = ',STARTSWITH,ENDSWITH,LIKE,NOT LIKE,';\n\t\t\tvar tdOper = this.tr.tdOper;\n\t\t\t//ie doesn't like firstElementChild so check both\n\t\t\tvar currentFilterType = (tdOper.firstElementChild || tdOper.children[0] || {}).value;\n\t\t\tif (partialSearchFilterTypes.indexOf(','+currentFilterType+',') > -1)\n\t\t\t\tthis.inputs[1].setAttribute('is_filter_using_contains', 'true');\n\t\t\t\n\t\t\tthis.inputs[1].ac = new AJAXReferenceCompleter(this.inputs[1], this.id, '');\n\t\t\t// since the key field name does not match the table name in this case, \n\t\t\t// set the table/field name for the completer\n\t\t\t//\n\t\t\t// the id we use for the key element included a guid since we allow the same\n\t\t\t// element to appear multiple times in a filter\n\t\t\tthis.inputs[1].ac.elementName = this.tr.tableField;\n\t\t\t\n\t\t\t// do not clear any derived fields when building filters\n\t\t\tthis.inputs[1].ac.clearDerivedFields = true;\n\t\t}\n\t},\n\t\n\t_useDisplayValue: function(oper) {\n\t\treturn false; \n\t},\n\t\n\t_referenceRedirect: function() {\n\t\tvar tableField = this.tr.tableField;\n\t\tvar parts = tableField.split('.');\n\t\tvar table = parts[0];\n\t\tvar field = parts[1];\n\t\t\n\t\tvar tRef = getTableReference(table);\n\t\t\n\t\tvar element = tRef.getElement(field);\n\t\tif(!element) return;\n\t\t\n\t\tvar referenceTable = element.getReference();\n\t\tif(!referenceTable) return;\n\t\t\n\t\tvar currentTable = g_form.getTableName();\n\t\tglideListViewSelection(this.id, currentTable, referenceTable);\n\t}\n});\n\n//Handler for reference type that can be multiple or single (depending on the\n//operator). Extends GlideFilterList to handle multiple references. \n//Behaves as a multiple reference if the operator is 'IN' or 'NOT IN', otherwise\n//behaves as a single reference. \nvar GlideFilterRelationshipReference = Class.create(GlideFilterList, {\n\t_build: function() {\n\t\tthis._updateBehavior();\n\t\tthis.behavior.prototype._build.apply(this, arguments);\n\t},\n\t\n\t_getAdditionalQual: function() {\n\t    var targetTables = this.originalTableName.split(',');\n        var refQuals = [];\n        for(var i = 0; i < targetTables.length; i++) {\n            refQuals.push('sys_class_nameINSTANCEOF' + targetTables[i]);\n        }\n        var refQual = refQuals.join('^OR');\n\t\treturn refQual;\n\t},\n\t\n\t_onFocus: function() {\n\t\tthis.behavior.prototype._onFocus.apply(this, arguments);\n\t\t//set the ref qual if original table name is provided\n\t\tif(this.originalTableName) {\n\t\t    var refQual = this._getAdditionalQual();\n\t\t\tthis.inputs[1].ac.refQual = refQual;\n\t\t}\n\t},\n\t\n\t_resolveReference: function() {\n\t\tthis.behavior.prototype._resolveReference.apply(this, arguments);\n\t},\n\t\n\t_resolveReferenceResponse: function() {\n\t\tthis.behavior.prototype._resolveReferenceResponse.apply(this, arguments);\n\t},\n\t\n\t_initValues: function(values) {\n\t\tthis._updateBehavior();\n\t\treturn this.behavior.prototype._initValues.apply(this, arguments);\n\t},\n\t\n\t_updateBehavior: function() {\n\t\tvar oldBehavior = this.behavior;\n\t\tvar op = this._getOperator();\n\t\tif(op == 'IN' || op == 'NOT IN') {\n\t\t\tthis.behavior = GlideFilterList;\n\t\t\tthis.maxValues = 20;\n\t\t}\n\t\telse {\n\t\t\tthis.behavior = GlideFilterReference;\n\t\t\tthis.maxValues = 1;\n\t\t}\n\t\tif(oldBehavior != this.behavior)\n\t\t\tthis._clearValues();\n\t},\n\t\n\tgetValues: function() {\n\t\treturn this.behavior.prototype.getValues.apply(this, arguments);\n\t},\n\t\n\t_refListOpen: function() {\n\t    var refQual = null;\n\t    var originalTableName = this.originalTableName;\n\t    if(originalTableName != null && originalTableName.indexOf(',') > 0) {\n\t        originalTableName = 'cmdb_ci';\n\t        refQual = this._getAdditionalQual();\n\t    }\n        reflistOpen(this.id, \"\", originalTableName, null, null, null, refQual);\n        return false;\n    }\n});\n\nfunction addRelationships(s, target, fValue, filterMethod, tableDefinition, descriptor, prefix) {\n    filterMethod = filterMethod === undefined ? null : filterMethod;\n    \n    // If there is no relationship table, or if the relationship table is invalid\n    // return automatically\n    if (!(s.relationshipTable &&\n        (s.relationshipTable == 'cmdb_rel_type' || \n         s.relationshipTable == 'cmdb_rel_user_type' ||\n         s.relationshipTable == 'cmdb_rel_group_type')))\n        return s;\n\t\n    var relationshipTable = s.relationshipTable;\n    var messages = getMessages(MESSAGES_CONDITION_RELATED_FILES);\n    var parts = target.split(\".\");\n    if (parts.length > 1 && parts[1] != null && parts[1] != '' && parts[1] == PLACEHOLDERFIELD) {\n    \taddOption(s, PLACEHOLDER, messages['-- choose relationship --'], true);\n    }\n\n\tvar tableName = parts[0];\n\tvar ajax = new GlideAjax(\"AddRelationshipAjax\");\n\tajax.addParam(\"sysparm_type\", \"getRelationships\");\n\tajax.addParam(\"sysparm_table_name\", tableName);\n\tvar response = ajax.getXMLWait();\n\tthis.getRelationshipsResponse(s, fValue, filterMethod, tableDefinition, response, descriptor, prefix);\n\t//ajax.getXML(this.getRelationshipsResponse.bind(this, s, fValue, filterMethod, tableDefinition));\n\n\t\n    return s;\n}\n\nfunction getRelationshipsResponse(fieldSelect, fieldId, filterMethod, tableDefinition, response, descriptor, prefix) {\n    var PseudoElement = Class.create();\n    PseudoElement.prototype = {\n        initialize: function(name) {\n            this.name = name;\n        },\n        getName: function() {\n            return this.name;\n        }\n    };\n\n    var items = response.getElementsByTagName(\"item\");\n    \n    if (items.length == 0)\n        return;\n    \n    var select = fieldSelect;\n    if (!select)\n        return;\n    \n    this.original = new Array();\n\t\n\tvar fullFieldId = descriptor + ':';\n\tif(prefix != '')\n\t\tfullFieldId += prefix + ':' + fieldId;\n\telse\n\t\tfullFieldId += fieldId;\n\t\n\tvar showAllCheckbox = $(tableDefinition.tableName + '_show_all_relationships');\n    var showAllRelationships = showAllCheckbox.checked;\n\t\n    for (var i = 0; i < items.length; i++) {\n        var item = items[i];\n        var v = item.getAttribute('value');\n\t\tvar valueParts = v.split(':');\n\t\tvar filterItem = new PseudoElement(v);\n        if(!filterMethod || (filterMethod && filterMethod(filterItem)) || fullFieldId == filterItem.name) {\n\t\t\tif((tableDefinition.tableName == 'cert_ci_rel_cond' && valueParts[1] != 'sys_user' && valueParts[1] != 'sys_user_group') ||\n\t\t\t   (tableDefinition.tableName == 'cert_user_rel_cond' && valueParts[1] == 'sys_user') ||\n\t\t\t   (tableDefinition.tableName == 'cert_group_rel_cond' && valueParts[1] == 'sys_user_group')) {\n\t\t\t\tvar label = item.getAttribute('label');\n\t\t\t\tvar suggested = item.getAttribute('suggested');\n\t\t\t\t\n\t\t\t\tvar o = addOption(select, v, label, fullFieldId == v);\n\t\t\t\to.setAttribute('gsft_label', item.getAttribute('label'));\n\t\t\t\to.setAttribute('gsft_suggested', suggested);\n\t\t\t\to.table = select.relationshipTable;\n\t\t\t\t// Set the target table here\n\t\t\t\t// The auto complete and lookup will be limited\n\t\t\t\t// to records in this table\n\t\t\t\to.targetTable = item.getAttribute('dependent_class');\n\t\t\t\n\t\t\t\tthis.original.push(o);\n                 // show the relationship if it is suggested or if\n                 // the show all relationships checkbox is selected\n                 // for this table\n\t\t\t\tif (! (suggested == 'true' || showAllRelationships))\n\t\t\t\t\tselect.options.length = select.options.length -1;\n\t\t\t}\n        }\n    }\n}\n\nfunction updateRelationshipOperators(name, select, fOper, fValue) {\n    var row = select.parentNode.parentNode;\n    var operatorCell = row.tdOper;\n    operatorCell.innerHTML = '';\n    var operatorSelect = _createFilterSelect();\n    operatorCell.appendChild(operatorSelect);\n    row.operSel = operatorSelect;\n    var operators;\n    var isPlaceholder = select.selectedIndex < 0 || select.options[select.selectedIndex].value == PLACEHOLDER;\n    if(isPlaceholder) {\n        operators = sysopers['placeholder'];\n        operatorSelect.disabled = true;\n    }\n    else\n        operators = RELATIONSHIP_OPERATORS;\n    var numOps = operators.length;\n    var selectedIndex = -1;\n    for(var i = 0; i < numOps; i++) {\n        var option = document.createElement('option');\n        var operator = operators[i];\n        option.value = operator[0];\n        if(option.value == fOper)\n            selectedIndex = i;\n        option.innerHTML = getMessage(operator[1]);\n        operatorSelect.appendChild(option);\n    }\n        \n    if(row.handler) {\n        row.handler.destroy();\n        row.tdValue.innerHTML = '';\n    }\n    \n    if(selectedIndex >= 0) {\n        operatorSelect.selectedIndex = selectedIndex;\n    }\n    \n    var relationshipSelectedIndex = select.selectedIndex;\n    var selectedOption = select.options[relationshipSelectedIndex];\n    if(relationshipSelectedIndex >= 0 && selectedOption.value != PLACEHOLDER) {\n        if(selectedOption.table) {\n            var relationshipTable = null;\n            var targetTable = selectedOption.targetTable || null;\n            var elementName = null;\n            switch(selectedOption.table) {\n                case 'cmdb_rel_user_type':\n                    relationshipTable = 'cmdb_rel_person';\n                    targetTable = 'sys_user';\n                    elementName = 'user';\n                    break;\n                case 'cmdb_rel_group_type':\n                    relationshipTable = 'cmdb_rel_group';\n                    targetTable = 'sys_user_group';\n                    elementName = 'group'\n                    break;\n                case 'cmdb_rel_type':\n                    relationshipTable = 'cmdb_rel_ci';\n                    targetTable = targetTable || 'cmdb_ci';\n                    elementName = 'child';\n                    break;\n                    \n            }\n            if(relationshipTable != null && targetTable != null && elementName != null) {\n                row.tableField = relationshipTable + \".\" + elementName;\n                row.handler = new GlideFilterRelationshipReference(relationshipTable, getTableReference(relationshipTable).elements[elementName]);\n                row.handler.setOriginalTable(targetTable);\n                row.handler.create(row, fValue);\n            }\n        }\n    }\n    else {\n        row.handler = new GlideFilterString('cmdb_rel_ci', null);\n    }\n}\n\nfunction getQueryDisplay(tableName, query) {\n    var ajax = new GlideAjax('ConditionUtilsAjax');\n    ajax.addParam('sysparm_name', 'getQueryDisplay');\n    ajax.addParam('sysparm_table_name', tableName);\n    ajax.addParam('sysparm_query', query);\n\n    var result = ajax.getXMLWait();\n    if(result && result.childNodes.length > 0) {\n        result = result.getElementsByTagName('result');\n        if(result.length > 0)\n            result = result[0];\n        else\n            result = null;\n        if(result) {\n            return result.getAttribute('queryDisplay');\n        }\n    }\n    return '';\n}\n\nfunction getRelationshipQueryDisplay(relationshipTypeTable, query) {\n    var relationshipTargetTable;\n    switch(relationshipTypeTable) {\n        case 'cmdb_rel_type':\n            relationshipTargetTable = 'cmdb_ci';\n            break;\n        case 'cmdb_rel_user_type':\n            relationshipTargetTable = 'sys_user';\n            break;\n        case 'cmdb_rel_group_type':\n            relationshipTargetTable = 'sys_user_group';\n    }\n    \n    var ajax = new GlideAjax('ConditionUtilsAjax');\n    ajax.addParam('sysparm_name', 'getRelationshipQueryDisplay');\n    ajax.addParam('sysparm_rel_type_table', relationshipTypeTable);\n    ajax.addParam('sysparm_rel_target_table', relationshipTargetTable);\n    ajax.addParam('sysparm_query', query);\n    \n    var result = ajax.getXMLWait();\n    if(result && result.childNodes.length > 0) {\n        result = result.getElementsByTagName('result');\n        if(result.length > 0)\n            result = result[0];\n        else\n            result = null;\n        if(result) {\n            return result.getAttribute('queryDisplay');\n        }\n    }\n    return '';\n}\n\nfunction getRelationshipFilterDisplay(name, relationshipTypeTable) {\n    var value = getFilter(name, false);\n    return getRelationshipQueryDisplay(relationshipTypeTable, value);\n}\n\nfunction getFilterDisplay(name) {\n    var value = getFilter(name, false);\n    var tableName = name.split('.')[0];\n    return getQueryDisplay(tableName, value);\n}\n\nfunction createCertCondFilter (tname, query, fieldName, descriptor, prefix) {\n    if(!('CertificationGlideFilter' in window))\n        defineCertificationGlideFilter();\n    noOps = false;\n    noSort = false;\n    noGroup = true;\n    noConditionals = false;\n    useTextareas = false;\n\t\n\tvar callback = function(filterObj) {\n\t\tfilterObj.getDiv().initialQuery = query;\n\t\tfilterObj.setQuery(query);\n\t\tif(fieldName != null && fieldName !== undefined)\n\t\t\tg_form.registerHandler(fieldName, filterObj);\n\t};\n\t\n\tvar filterObj;\n\tif ('init2' in GlideFilter.prototype) {\n\t\t// New UI (2014) may build asynchronously\n\t\tfilterObj = new CertificationGlideFilter(tname, {\n\t\t\tdescriptor: descriptor,\n\t\t\tprefix: prefix\n\t\t}, callback);\n\t}\n\telse {\n\t\t// Legacy UI builds synchronously\n\t\tfilterObj = new CertificationGlideFilter(tname, {\n\t\t\tdescriptor: descriptor,\n\t\t\tprefix: prefix\n\t\t});\n\t    callback(filterObj);\n\t}\n\treturn filterObj;\n};\n\n(function() {\n    addUnloadEvent(function() {\n        var elems = $$('input.glide_destroy_cert_filter');\n        elems.each(function(elem, index) {\n            var ref = elem.id;\n            if (ref) {\n                var filterObj = getFilterForCondition(ref);\n                if (filterObj)\n                    filterObj.destroy();\n            }\n        });\t\n    });\t\n})();\n\n(function() {\n    addLoadEvent(function() {\n        \n        var numericTypes = {\n            \"auto_increment\": true,\n            \"decimal\": true,\n            \"domain_number\": true,\n            \"float\": true,\n            \"integer\": true\n\t    };\n        \n        GlideFilterString.prototype._initValues = function(values) {\n            this.values = [];\n            if (values)\n               this.values = values.split('@');\n        };\n        \n        GlideFilterCurrency.prototype._parseValue = function() {\n            if (this.inputs.length == 0)\n\t\t\t    return;\n\t\t\t\n\t\t\tvar sel = null;\n\t\t\t\n            var __parseValue = function(v) {\n                var sa = v.split(';');\n                var first = sa[0].split('\\'');\n                var currency = first[first.length - 1];\n                var price = sa[sa.length - 1];\n                var i = price.indexOf('\\'');\n                price = price.substring(0, i);\n                \n                return {'price': price, 'currency': currency};\n            };\n            \n            for(var i = 0; i < this.inputs.length; i++) {\n                var v = this.inputs[i].value;\n                if(!v || v.indexOf('javascript') < 0)\n                    break;\n                    \n                var parseResult = __parseValue(v);\n                this.inputs[i].value = parseResult.price;\n                \n                if(!sel) {\n                    sel = new Select(this.currency_widget);\n                    sel.selectValue(parseResult.currency);\n                }\n            }\n        };\n        \n        GlideFilterCurrency.prototype.getValues = function() {\n            this._clearValues();\n            \n            if (this.inputCnt == 0)\n                return \"\";\n                \n            for(var j = 0; j < this.inputs.length; j++) {\n                var input = this.inputs[j];\n                if(input.tagName.toLowerCase() != 'input')\n                    break;\n                this.values[j] = input.value;\n            }\n            \n            var tn = this.item.table.tableName;\n            var fn = this.item.name;\n            var _this = this;\n            var formatCurrency = function(v) {\n                return 'javascript:global.getCurrencyFilter(\\'' + tn + '\\',\\'' + fn +\n                    '\\', \\'' + _this.currency_widget.value + ';' + v + '\\')';\n            };\n            var results = [];\n            for(var i = 0; i < this.values.length; i++) {\n                results.push(formatCurrency(this.values[i]));\n            }\n            return results.join('@');\n        };\n    });\n})();\n\n\n(function() {\n    addLoadEvent(function() {\n        var elems = $$('input.glide_destroy_cert_filter');\n        elems.each(function(elem, index) {\n            var ref = elem.id;\n            if (ref) {\n                filterExpanded = true;\t\t\n                var table = resolveDependentValue(ref, elem.getAttribute('data-dependent'), elem.getAttribute('data-dependent_table'));\n                if (table != null) {\n                    var fname = ref;\n                    var hinput = $(fname);\n                    var xfilter = unescape(hinput.value);\n                    createCertCondFilter(table + \".\" + fname, xfilter, fname, elem); \n                }\n                addOnSubmitEvent(findParentByTag($(ref), \"FORM\"),\n                    function() {\n                        var hinput = $(ref);\n                        var cfilter = getFilter(ref);\n                        hinput.value = unescape(cfilter);\n                });\n            }\n        });\t\n    });\t\n})();","sys_class_name":"sys_ui_script","sys_id":"dacff7a7d7a00100c11180f29e6103a5","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a057afbb04b12210559073c06a02f745","value":"a057afbb04b12210559073c06a02f745"},"ui_type":"0","sys_update_name":"sys_ui_script_dacff7a7d7a00100c11180f29e6103a5","sys_updated_by":"system","sys_created_on":"2013-04-11 20:53:20","name":"AddRelationshipFilter","sys_name":"AddRelationshipFilter","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"5","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2024-02-19 08:58:25","sys_tags":"","script_name":"","script":"function jslog(message, src, dateTime) {\n    _notifications_.push({\n        type: \"jslog\",\n        message: message,\n        src: src,\n        dateTime: dateTime\n    });\n}\n\ncsGlobals['jslog'] = jslog;","sys_class_name":"sys_ui_script","sys_id":"dbbb11c0eb2002102b57e5306952288b","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/4c8e6ff304752210559073c06a02f7c4","value":"4c8e6ff304752210559073c06a02f7c4"},"ui_type":"10","sys_update_name":"sys_ui_script_dbbb11c0eb2002102b57e5306952288b","sys_updated_by":"admin","sys_created_on":"2024-02-19 07:39:54","name":"global.JSLogProxy","sys_name":"global.JSLogProxy","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"12","active":"true","description":"Service go.","use_scoped_format":"false","global":"false","sys_updated_on":"2021-08-31 18:27:00","sys_tags":"","script_name":"vcom.go","script":"(function () {\n\t'use strict';\n\n\tangular.module('sn.itsm.vcab.common')\n\t.factory('go', ['$window', '$location', 'spUtil', 'CAB', '$uibModal', function ($window, $location, spUtil, CAB, $uibModal) {\n\t\tfunction getPathBase() {\n\t\t\treturn spUtil.getHost() + $location.path();\n\t\t}\n\n\t\treturn {\n\t\t\ttoMeetingDashboard: function (meetingId) {\n\t\t\t\t$window.location.href = getPathBase() + '?id=' + CAB.WORKBENCH + '&sys_id=' + meetingId;\n\t\t\t},\n\t\t\ttoFormModal: function(table, sysId, data, templateUrl) {\n\t\t\t\tvar url = \"/$cab_workbench_external_url_handler.do?sysparm_clear_stack=true&sysparm_nameofstack=SNC_FORM_MODAL&sysparm_cabw_goto_url=\" + encodeURIComponent(\"/\" + table + \".do?sys_id=\" + sysId);\n\t\t\t\tvar sessStorage = $window.sessionStorage;\n\t\t\t\tsessStorage.setItem('cabw_external_redirect_param', 'true');\n\t\t\t\tif (!data)\n\t\t\t\t\tdata = {};\n\t\t\t\tdata = angular.extend({\n\t\t\t\t\tcabwModalName: \"CabwPopupModal\"\n\t\t\t\t}, data);\n\t\t\t\tdata.url = url;\n\t\t\t\tif (!templateUrl) {\n\t\t\t\t\ttemplateUrl = \"/partials/cab_workbench_form_modal.html\";\n\t\t\t\t\tif (!data.title)\n\t\t\t\t\t\tthrow 'Default template requires title attribute in data';\n\t\t\t\t}\n\t\t\t\treturn $uibModal.open ({\n\t\t\t\t\tcontroller: 'ModalCtrl',\n\t\t\t\t\ttemplateUrl: templateUrl,\n\t\t\t\t\tsize: 'lg',\n\t\t\t\t\tresolve: {\n\t\t\t\t\t\tdata: function() {\n\t\t\t\t\t\t\treturn data;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\ttoTaskFormModal: function(agendaItem) {\n\t\t\t\tvar data = { \"task\": agendaItem.task.record.sys_class_name.display_value };\n\t\t\t\treturn this.toFormModal(agendaItem.task.record.sys_class_name.value, agendaItem.task.record.sys_id.value, data, 'task_record.html');\n\t\t\t},\n\t\t};\n\t}]);\n} ());","sys_class_name":"sys_ui_script","sys_id":"dd8d1c18d722220034d145bcce61038b","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"ui_type":"0","sys_update_name":"sys_ui_script_dd8d1c18d722220034d145bcce61038b","sys_updated_by":"admin","sys_created_on":"2016-10-14 13:16:27","name":"sn_change_cab.vcom.go","sys_name":"sn_change_cab.vcom.go","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"5","active":"true","description":"Module sn_change_management.cab.agenda.  Contains components for managing the Agenda for the cab workbench.","use_scoped_format":"false","global":"false","sys_updated_on":"2016-10-12 16:29:42","sys_tags":"","script_name":"agenda","script":"angular.module(\"sn.change_management.cab.agenda\", ['ng.amb', 'sn.app_common', 'sn.change_management.cab.core', 'sn.change_management.cab.runtime_state']);","sys_class_name":"sys_ui_script","sys_id":"de91d193d752220034d145bcce61031f","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"ui_type":"","sys_update_name":"sys_ui_script_de91d193d752220034d145bcce61031f","sys_updated_by":"admin","sys_created_on":"2016-10-11 14:32:26","name":"sn_change_cab.agenda","sys_name":"sn_change_cab.agenda","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"128","active":"true","description":"Mobile / Service Portal field validation script executor","use_scoped_format":"false","global":"false","sys_updated_on":"2020-08-17 11:26:55","sys_tags":"","script_name":"","script":"(function() {\n\tvar _execute = function(key, validator, g_validation_script_field_count, g_form, NOW) {\n\t\t\n\t\tNOW.validationScriptState = NOW.validationScriptState || {};\n\t\tvar scriptState = NOW.validationScriptState[g_form.getSysId()] = NOW.validationScriptState[g_form.getSysId()] || {\n\t\t\tvalidated: {},\n\t\t\ttotalValidations: g_validation_script_field_count,\n\t\t\tpendingValidations: g_validation_script_field_count,\n\t\t\tfieldsProcessed: 0\n\t\t};\n\n\t\t// Preserve original ui action name so that we can use it on re-submit\n\t\tvar actionName = g_form.getActionName();\n\t\tif (actionName !== 'none') scriptState.actionName = actionName;\n\t\t\n\t\tvar fieldState = scriptState.validated[key];\n\t\tif (fieldState !== undefined) {\n\t\t\t/* handeling form re-submit */\n\t\t\t\n\t\t\t// return early if validation is still in progress\n\t\t\tif (fieldState.pending || scriptState.pendingValidations !== 0) {\n\t\t\t\t// This will show 'Invalid text' message on platform UI.\n\t\t\t\t// If you want to change this script's UI Type to \"All\", \n\t\t\t\t// please consider returning a proper string value as \n\t\t\t\t// a message to indicate that the validation is still in process.\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t\n\t\t\tvar returnValue = fieldState.valid ? true : fieldState.errorMsg;\n\t\t\tdelete scriptState.validated[key];\n\t\t\t\n\t\t\tscriptState.fieldsProcessed++;\n\t\t\t\n\t\t\t// reset when done with all field validations\n\t\t\tif (scriptState.fieldsProcessed === scriptState.totalValidations) {\n\t\t\t\tscriptState.fieldsProcessed = 0;\n\t\t\t\tscriptState.pendingValidations = scriptState.totalValidations;\n\t\t\t\tNOW.validationScriptState[g_form.getSysId()] = null; // reset NOW.validationScriptState as well\n\t\t\t}\n\t\t\t\n\t\t\treturn returnValue;\n\t\t}\n\t\t\n\t\t// If actionName is none, form has already been re-submitted.\n\t\t// No need to submit it the third time.\n\t\tif (actionName === 'none') { return false; }\n\t\t\n\t\tscriptState.validated[key] = { pending: true };\n\t\t\n\t\t// execute validation script and process results async\n\t\tvalidator(function(key, valid, errorMsg) {\n\t\t\tscriptState.validated[key] = {\n\t\t\t\tvalid: valid,\n\t\t\t\terrorMsg: errorMsg,\n\t\t\t\tpending: false\n\t\t\t};\n\t\t\t\n\t\t\tscriptState.pendingValidations--;\n\t\t\t\n\t\t\t// wait for any pending validations to complete before re-submitting form\n\t\t\t// to prevent race conditions and infinite loops\n\t\t\tif (scriptState.pendingValidations === 0) {\n\t\t\t\tg_form.submit(scriptState.actionName);\n\t\t\t}\n\t\t});\n\t\t\n\t\t// wait until async validation is processed\n\t\treturn false;\t\n\t};\n\t\n\treturn {\n\t\texecute: _execute\n\t};\n});","sys_class_name":"sys_ui_script","sys_id":"df652d52e7b21300b2888f49c2f6a9f6","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/69996b7b04f12210559073c06a02f7e2","value":"69996b7b04f12210559073c06a02f7e2"},"ui_type":"1","sys_update_name":"sys_ui_script_df652d52e7b21300b2888f49c2f6a9f6","sys_updated_by":"admin","sys_created_on":"2018-06-21 23:07:19","name":"sp.validation.executor","sys_name":"sp.validation.executor","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"6","active":"true","description":"Updates the filter lookups for certification templates and schedules to allow for inactive and active filters.","use_scoped_format":"false","global":"false","sys_updated_on":"2025-06-05 05:18:18","sys_tags":"","script_name":"","script":"(function() {\n\taddLoadEvent(function() {\n\t\t// Changing reflistOpen particularly for the filter lookup so that\n\t\t// the active query will be displayed at the top (and can be\n\t\t// changed by the user\n\t\twindow.reflistOpen = function(target, elementName, refTableName, dependent, useQBE, refQualElements, additionalQual, parentID){\n\t\t\tvar url = reflistOpenUrl(target, target, elementName, refTableName, dependent, useQBE, refQualElements, additionalQual, parentID);\n\t\t\t// If the target was the filter field, add the active query\n\t\t\tif(target == 'cert_template.filter' || target == 'cert_schedule.filter')\n\t\t\t\turl += '&sysparm_query=active%3Dtrue';\n\t\t\tpopupOpenStandard(url, \"lookup\");\n\t\t}\n\t\t\t\n\t});\n})();","sys_class_name":"sys_ui_script","sys_id":"e112f2e9df700100cd7da5f59bf2637d","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a057afbb04b12210559073c06a02f745","value":"a057afbb04b12210559073c06a02f745"},"ui_type":"0","sys_update_name":"sys_ui_script_e112f2e9df700100cd7da5f59bf2637d","sys_updated_by":"system","sys_created_on":"2013-04-17 20:22:21","name":"CertFilterLookup","sys_name":"CertFilterLookup","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"5","active":"true","description":"Function cancellablePromise.","use_scoped_format":"false","global":"false","sys_updated_on":"2025-06-05 05:18:18","sys_tags":"","script_name":"","script":"(function () {\n\t'use strict';\n\n\tangular.module('sn.itsm.vcab.common')\n\t.factory('cancellablePromise', function ($q) {\n\t\treturn function (promise) {\n\t\t\tvar cancelled = false;\n\t\t\tvar proxyPromise = $q(function (resolve, reject) {\n\t\t\t\tpromise.then(function (r) {\n\t\t\t\t\tif (!cancelled)\n\t\t\t\t\t\tresolve(r);\n\t\t\t\t}, function (r) {\n\t\t\t\t\tif (!cancelled)\n\t\t\t\t\t\treject(r);\n\t\t\t\t});\n\t\t\t});\n\t\t\tproxyPromise.cancel = function () {\n\t\t\t\tcancelled = true;\n\t\t\t};\n\t\t\treturn proxyPromise;\n\t\t};\n\t});\n} ());","sys_class_name":"sys_ui_script","sys_id":"e2cb6dd20b2332005775aabcb4673a1f","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/3eb7af7f04b12210559073c06a02f7fb","value":"3eb7af7f04b12210559073c06a02f7fb"},"ui_type":"0","sys_update_name":"sys_ui_script_e2cb6dd20b2332005775aabcb4673a1f","sys_updated_by":"system","sys_created_on":"2017-06-26 13:21:42","name":"change_calendar_vcom.cancellablePromise","sys_name":"change_calendar_vcom.cancellablePromise","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"21","active":"true","description":"","use_scoped_format":"false","global":"true","sys_updated_on":"2023-10-30 01:42:47","sys_tags":"","script_name":"","script":"var ActionLayoutItemColorHelper = Class.create();\n\nActionLayoutItemColorHelper.prototype = {\n\n    GROUP_TYPE_SPLIT_BUTTON: \"1\",\n    COLUMN_NAME_COLOR: \"color\",\n    COLUMN_NAME_VARIANT: \"variant\",\n    BUTTON_OPTIONS: [{\n            \"value\": \"primary\",\n            \"displayValue\": \"Primary\"\n        },\n        {\n            \"value\": \"primary-positive\",\n            \"displayValue\": \"Primary positive\"\n        },\n        {\n            \"value\": \"primary-negative\",\n            \"displayValue\": \"Primary negative\"\n        },\n        {\n            \"value\": \"secondary\",\n            \"displayValue\": \"Secondary\"\n        },\n        {\n            \"value\": \"secondary-positive\",\n            \"displayValue\": \"Secondary positive\"\n        },\n        {\n            \"value\": \"secondary-negative\",\n            \"displayValue\": \"Secondary negative\"\n        },\n        {\n            \"value\": \"tertiary\",\n            \"displayValue\": \"Tertiary\"\n        }\n    ],\n    MENU_OPTIONS: [{\n            \"value\": \"primary\",\n            \"displayValue\": \"Primary\"\n        },\n        {\n            \"value\": \"primary-selection\",\n            \"displayValue\": \"Primary selection\"\n        },\n        {\n            \"value\": \"secondary\",\n            \"displayValue\": \"Secondary\"\n        },\n        {\n            \"value\": \"secondary-selection\",\n            \"displayValue\": \"Secondary selection\"\n        },\n        {\n            \"value\": \"tertiary\",\n            \"displayValue\": \"Tertiary\"\n        },\n        {\n            \"value\": \"tertiary-selection\",\n            \"displayValue\": \"Tertiary selection\"\n        }\n    ],\n\n    initialize: function() {},\n\n    setButtonOptions: function(fieldName, initialValue) {\n        g_form.clearOptions(fieldName);\n        this.BUTTON_OPTIONS.forEach(option => {\n            g_form.addOption(fieldName, option.value, option.displayValue);\n        });\n        if (initialValue && this.BUTTON_OPTIONS.find(option => option.value === initialValue)) {\n            g_form.setValue(fieldName, initialValue);\n        }\n    },\n\n    setDropdownOptions: function(fieldName, initialValue) {\n        g_form.clearOptions(fieldName);\n        this.MENU_OPTIONS.forEach(option => {\n            g_form.addOption(fieldName, option.value, option.displayValue);\n        });\n        if (initialValue && this.MENU_OPTIONS.find(option => option.value === initialValue)) {\n            g_form.setValue(fieldName, initialValue);\n        }\n    },\n\n    loadVariantOptions: function(layoutItemSysId, initialValue) {\n        var layoutItem = new GlideRecord(\"sys_ux_form_action_layout_item\");\n        layoutItem.get(layoutItemSysId);\n        if (layoutItem.getValue(\"item_type\") === \"action\") {\n            this.setButtonOptions(this.COLUMN_NAME_VARIANT, initialValue);\n        } else {\n            var layoutGroup = new GlideRecord('sys_ux_form_action_layout_group');\n            layoutGroup.get(layoutItem.getValue(\"layout_group\"));\n            if (layoutGroup.getValue(\"type\") === this.GROUP_TYPE_SPLIT_BUTTON) {\n                this.setButtonOptions(this.COLUMN_NAME_VARIANT, initialValue);\n            } else {\n                this.setDropdownOptions(this.COLUMN_NAME_VARIANT, initialValue);\n            }\n        }\n    },\n\n    loadColorOptions: function(initialValue) {\n        if (g_form.getValue(\"item_type\") === \"action\") {\n            this.setButtonOptions(this.COLUMN_NAME_COLOR, initialValue);\n        } else {\n            var gr = new GlideRecord('sys_ux_form_action_layout_group');\n            gr.get(g_form.getValue(\"layout_group\"));\n            if (gr.getValue(\"type\") === this.GROUP_TYPE_SPLIT_BUTTON) {\n                this.setButtonOptions(this.COLUMN_NAME_COLOR, initialValue);\n            } else {\n                this.setDropdownOptions(this.COLUMN_NAME_COLOR, initialValue);\n            }\n        }\n    },\n\n    handleActionItemTypeChange: function(itemType) {\n        if (itemType === \"action\") {\n            this.setButtonOptions(this.COLUMN_NAME_COLOR);\n        }\n\t\tif (itemType === \"group\") {\n\t\t\t// Clear the options and wait for the user to select an action group to set the correct options\n\t\t\t// which is handled by handleActionItemGroupChange()\n            g_form.clearOptions(this.COLUMN_NAME_COLOR);\n        }\n    },\n\n    handleActionItemGroupChange: function(layoutGroupSysId) {\n        var gr = new GlideRecord('sys_ux_form_action_layout_group');\n        gr.get(layoutGroupSysId);\n        if (gr.getValue(\"type\") === this.GROUP_TYPE_SPLIT_BUTTON) {\n            this.setButtonOptions(this.COLUMN_NAME_COLOR);\n        } else {\n            this.setDropdownOptions(this.COLUMN_NAME_COLOR);\n        }\n    },\n\n    type: \"ActionLayoutItemColorHelper\"\n};","sys_class_name":"sys_ui_script","sys_id":"e3578394c3713110c42e978ef940dd0c","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/b2936bf304312210559073c06a02f759","value":"b2936bf304312210559073c06a02f759"},"ui_type":"0","sys_update_name":"sys_ui_script_e3578394c3713110c42e978ef940dd0c","sys_updated_by":"admin","sys_created_on":"2023-10-06 17:33:58","name":"ActionLayoutItemColorHelper","sys_name":"ActionLayoutItemColorHelper","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"2","active":"true","description":"Module sn.change_management.cab.approval.  Contains components for managing approvals from the CAB Workbench","use_scoped_format":"false","global":"false","sys_updated_on":"2016-10-12 11:15:59","sys_tags":"","script_name":"approval","script":"angular.module(\"sn.change_management.cab.approval\", ['ng.amb', 'ui.bootstrap.modal', 'sn.app_common', 'sn.change_management.cab.core', 'sn.change_management.cab.runtime_state']);","sys_class_name":"sys_ui_script","sys_id":"e35cd517d752220034d145bcce6103a0","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"ui_type":"","sys_update_name":"sys_ui_script_e35cd517d752220034d145bcce6103a0","sys_updated_by":"admin","sys_created_on":"2016-10-11 15:17:56","name":"sn_change_cab.approval","sys_name":"sn_change_cab.approval","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"0","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2018-02-05 11:58:18","sys_tags":"","script_name":"config","script":"angular.module(\"sn.chg_soc.config\", [\"sn.common\"])\n\t.service(\"configService\", [ \"dataService\", \"ganttChart\", \"urlService\", \"SOC\", function(dataService, ganttChart, urlService, SOC) {\n\t\tvar configService = this;\n\n\t\tconfigService.showConfigItem = true;\n\t\tconfigService.showDuration = true;\n\t\tconfigService.showBlackoutOption = true;\n\t\tconfigService.showBlackoutSchedules = true;\n\t\tconfigService.showMaintOption = true;\n\t\tconfigService.showMaintSchedules = true;\n\t\tconfigService.childRecords = {};\n\n\t\tconfigService.setChildRecords = function(childTables) {\n\t\t\tfor (var tableName in childTables)\n\t\t\t\tconfigService.childRecords[tableName] = {\n\t\t\t\t\tinputId: tableName + \"Option\",\n\t\t\t\t\tlabel: childTables[tableName].__label,\n\t\t\t\t\tname: tableName + \"Show\",\n\t\t\t\t\tshow: true,\n\t\t\t\t\tchange: updateChildRecords\n\t\t\t\t};\n\t\t};\n\n\t\tfunction updateChildRecords(tableName) {\n\t\t\tvar gantt = ganttChart.getGantt(urlService.socId);\n\t\t\tvar ganttTasks = gantt.getTaskByTime();\n\t\t\tfor (var i = 0; i < ganttTasks.length; i++)\n\t\t\t\tif (ganttTasks[i].parent && ganttTasks[i].table === tableName)\n\t\t\t\t\tganttTasks[i].__visible = configService.childRecords[tableName].show;\n\t\t\tgantt.attachEvent(\"onBeforeTaskDisplay\", function(id, task) {\n\t\t\t\tif (task.parent)\n\t\t\t\t\treturn task.__visible;\n\t\t\t\treturn true;\n\t\t\t});\n\t\t\tgantt.templates.grid_open = gridOpen;\n\t\t\tgantt.render();\n\t\t}\n\n\t\tfunction gridOpen(task) {\n\t\t\tvar gantt = ganttChart.getGantt(urlService.socId);\n\t\t\tvar children = gantt.getChildren(task.id);\n\n\t\t\tfor (var i = 0; i < children.length; i++) {\n\t\t\t\tvar childTask = gantt.getTask(children[i]);\n\t\t\t\tif (childTask.__visible)\n\t\t\t\t\treturn \"<div class='gantt_tree_icon gantt_\" + (task.$open ? \"close\" : \"open\") +\n\t\t\t\t\t\t\" icon-vcr-\" + (task.$open ? \"down\" : \"right\") + \"'></div>\";\n\t\t\t}\n\n\t\t\treturn \"<div class='gantt_tree_icon gantt_blank'></div>\";\n\t\t}\n\t}])\n\t.directive(\"socAsideConfig\", [\"getTemplateUrl\", \"configService\", \"ganttChart\", \"dataService\", \"objectKeysLengthFilter\", \"SOC\", \"i18n\", function(getTemplateUrl, configService, ganttChart, dataService, objectKeysLengthFilter, SOC, i18n) {\n\t\t\"use strict\";\n\t\treturn {\n\t\t\trestrict: \"A\",\n\t\t\ttemplateUrl: getTemplateUrl(\"sn_chg_soc_aside_config_body.xml\"),\n\t\t\tscope: {\n\t\t\t\tsocDefId: \"=\"\n\t\t\t},\n\t\t\tcontroller: function($scope, objectKeysLengthFilter) {\n\t\t\t\t$scope.showConfigItem = configService.showConfigItem;\n\t\t\t\t$scope.showDuration = configService.showDuration;\n\t\t\t\t$scope.showBlackoutOption = configService.showBlackoutOption;\n\t\t\t\t$scope.showBlackoutSchedules = configService.showBlackoutSchedules;\n\t\t\t\t$scope.showMaintOption = configService.showMaintOption;\n\t\t\t\t$scope.showMaintSchedules = configService.showMaintSchedules;\n\t\t\t\t$scope.childRecords = configService.childRecords;\n\t\t\t\t$scope.objectKeysLengthFilter = objectKeysLengthFilter;\n\t\t\t\t$scope.messages = {\n\t\t\t\t\t\"Child Records\": i18n.getMessage(\"Child Records\"),\n\t\t\t\t\t\"Columns\": i18n.getMessage(\"Columns\"),\n\t\t\t\t\t\"Configuration Item\": i18n.getMessage(\"Configuration Item\"),\n\t\t\t\t\t\"Duration\": i18n.getMessage(\"Duration\"),\n\t\t\t\t\t\"Related Records\": i18n.getMessage(\"Related Records\"),\n\t\t\t\t\t\"Schedules\": i18n.getMessage(\"Schedules\"),\n\t\t\t\t\t\"Blackout\": i18n.getMessage(\"Blackout\"),\n\t\t\t\t\t\"Maintenance\": i18n.getMessage(\"Maintenance\")\n\t\t\t\t};\n\n\t\t\t\t$scope.updateColumnLayout = function(columnId) {\n\t\t\t\t\tvar gantt = ganttChart.getGantt($scope.socDefId);\n\t\t\t\t\tvar column = gantt.getGridColumn(columnId);\n\t\t\t\t\tif (SOC.COLUMN.CONFIG_ITEM === columnId) {\n\t\t\t\t\t\tconfigService.showConfigItem = !configService.showConfigItem;\n\t\t\t\t\t\tcolumn.hide = !configService.showConfigItem;\n\t\t\t\t\t} else if (SOC.COLUMN.DURATION === columnId) {\n\t\t\t\t\t\tconfigService.showDuration = !configService.showDuration;\n\t\t\t\t\t\tcolumn.hide = !configService.showDuration;\n\t\t\t\t\t} else\n\t\t\t\t\t\treturn;\n\t\t\t\t\tgantt.render();\n\t\t\t\t};\n\n\t\t\t\tfunction getScheduleEvent (task, startDate, endDate, styleClass) {\n\t\t\t\t\tvar gantt = ganttChart.getGantt($scope.socDefId);\n\t\t\t\t\tstartDate = gantt.date.parseDate(startDate, \"xml_date\");\n\t\t\t\t\tendDate = gantt.date.parseDate(endDate, \"xml_date\");\n\t\t\t\t\tvar sizes = gantt.getTaskPosition(task, startDate, endDate);\n\t\t\t\t\tvar el = document.createElement(\"div\");\n\t\t\t\t\tel.className = \"schedule-bar \" + styleClass;\n\t\t\t\t\tel.style.left = sizes.left + \"px\";\n\t\t\t\t\tel.style.width = sizes.width + \"px\";\n\t\t\t\t\tel.style.top = sizes.top + \"px\";\n\t\t\t\t\treturn el;\n\t\t\t\t}\n\n\t\t\t\tvar scheduleTaskLayer = function(task) {\n\t\t\t\t\tif ((!this.show_blackout && !this.show_maint) || (task.blackout_spans.length === 0 && task.maint_spans.length === 0))\n\t\t\t\t\t\treturn;\n\t\t\t\t\tvar wrapper = document.createElement(\"div\");\n\t\t\t\t\tif (this.show_blackout && dataService.definition.show_blackout.value)\n\t\t\t\t\t\ttask.blackout_spans.forEach(function(blackoutSpan) {\n\t\t\t\t\t\t\twrapper.appendChild(getScheduleEvent(task, blackoutSpan.start, blackoutSpan.end, \"blackout\"));\n\t\t\t\t\t\t});\n\t\t\t\t\tif (this.show_maint && dataService.definition.show_maintenance.value)\n\t\t\t\t\t\ttask.maint_spans.forEach(function(maintSpan) {\n\t\t\t\t\t\t\twrapper.appendChild(getScheduleEvent(task, maintSpan.start, maintSpan.end, \"maint\"));\n\t\t\t\t\t\t});\n\t\t\t\t\treturn wrapper;\n\t\t\t\t};\n\n\t\t\t\t$scope.updateScheduleLayer = function() {\n\t\t\t\t\tconfigService.showBlackoutSchedules = $scope.showBlackoutSchedules;\n\t\t\t\t\tconfigService.showMaintSchedules = $scope.showMaintSchedules;\n\t\t\t\t\tvar ganttInstance = ganttChart.getInstance($scope.socDefId);\n\t\t\t\t\tganttInstance.removeTaskLayer();\n\n\t\t\t\t\tif ($scope.showBlackoutSchedules || $scope.showMaintSchedules) {\n\t\t\t\t\t\tganttInstance.addTaskLayer(scheduleTaskLayer.bind({\n\t\t\t\t\t\t\tshow_blackout: $scope.showBlackoutSchedules,\n\t\t\t\t\t\t\tshow_maint: $scope.showMaintSchedules\n\t\t\t\t\t\t}));\n\t\t\t\t\t\tganttInstance.gantt.render();\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t}]);","sys_class_name":"sys_ui_script","sys_id":"e3d75abd573703009f9379a18d94f973","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"ui_type":"","sys_update_name":"sys_ui_script_e3d75abd573703009f9379a18d94f973","sys_updated_by":"admin","sys_created_on":"2018-01-22 17:29:11","name":"sn_chg_soc.config","sys_name":"sn_chg_soc.config","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"0","active":"true","description":"Generic angular module to trap the focus within a given element.\r\n\r\nBy default, all visible buttons and all visible elements with tabindex that is not -1 will be tabbable (except disabled ones)\r\n\r\nInstructions:\r\n- Include the jsbx file, for example: <g:include_script src=\"sn.itsm.common.accessibility.jsdbx\" />\r\n- Inject the dependency in the application module\r\n- Add the attribute 'trap-tab-focus' (it is an angular attribute directive) to the root element, for example: <div id=\"cnat\" class=\"cnat-modal\" trap-tab-focus=\"true\">\r\n- It is possible to have a different CSS selectors for the tabbable elements to include and elements to exclude. It has to be passed via the parent scope in the object \"tabbable\", for example:\r\n\t\t\t$scope.tabbable = {\r\n\t\t\t\t\"include\": \"button:visible, [tabindex]:visible, select:visible, input:visible\",\r\n\t\t\t\t\"exclude\": \"[tabindex='-1'], [disabled='disabled']\"\r\n\t\t\t};\r\n\t\t","use_scoped_format":"false","global":"false","sys_updated_on":"2018-08-31 08:53:47","sys_tags":"","script_name":"","script":"angular.module(\"sn.itsm.common.accessibility\", [])\n.constant(\"KEYS\", {\n\t\"TABKEY\": 9\n})\n.directive(\"trapTabFocus\", [\"KEYS\", function (KEYS) {\n\treturn {\n\t\trestrict: \"A\",\n\t\tlink: function ($scope, $element, $attr) {\n\t\t\t$element.on(\"keydown\", function(event) {\n\t\t\t\tvar keyCode = event.charCode === 0 ? event.keyCode : event.charCode;\n\t\t\t\tif (keyCode === KEYS.TABKEY) {\n\t\t\t\t\tvar include = \"button:visible, [tabindex]:visible\";\n\t\t\t\t\tvar exclude = \"[tabindex='-1'], [disabled='disabled']\";\n\t\t\t\t\tif ($scope.tabbable && $scope.tabbable.hasOwnProperty(\"include\"))\n\t\t\t\t\t\tinclude = $scope.tabbable.include;\n\t\t\t\t\tif ($scope.tabbable && $scope.tabbable.hasOwnProperty(\"exclude\"))\n\t\t\t\t\t\texclude = $scope.tabbable.exclude;\n\t\t\t\t\tvar tabEls = $element.find(include).not(exclude);\n\t\t\t\t\tvar firstEl = tabEls.first();\n\t\t\t\t\tvar lastEl = tabEls.last();\n\t\t\t\t\t// tab and last element then focus on first element\n\t\t\t\t\tif (!event.shiftKey && event.target === lastEl[0]) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\tfirstEl.focus();\n\t\t\t\t\t}\n\t\t\t\t\t// shift+tab and first element then focus on last element\n\t\t\t\t\tif (event.shiftKey && event.target === firstEl[0]) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\tlastEl.focus();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n}]);","sys_class_name":"sys_ui_script","sys_id":"e4b3580957d0230035ae4786cc94f962","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/3eb7af7f04b12210559073c06a02f7fb","value":"3eb7af7f04b12210559073c06a02f7fb"},"ui_type":"0","sys_update_name":"sys_ui_script_e4b3580957d0230035ae4786cc94f962","sys_updated_by":"admin","sys_created_on":"2018-08-31 08:53:47","name":"sn.itsm.common.accessibility","sys_name":"trapTabFocus","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"2","active":"true","description":"Service agendaNotification.  Manages agenda item notification.","use_scoped_format":"false","global":"false","sys_updated_on":"2017-01-19 10:04:47","sys_tags":"","script_name":"agenda.agendaNotification","script":"angular.module(\"sn.change_management.cab.agenda\")\n\t.service(\"agendaNotification\", ['CAB', 'modelUtil', '$http', '$log', function(CAB, modelUtil, $http, $log) {\n\t\tvar agendaNotification = this;\n\t\t\t\n\t\tagendaNotification.notifyAvailable = function(agendaItem) {\n\t\t\tif (!agendaItem)\n\t\t\t\treturn false;\n\n\t\t\treturn agendaItem.state.value == \"pending\" && agendaItem.notification_sent.value != \"true\";\n\t\t};\n\t\t\t\n\t\tagendaNotification.alreadyBeingNotified = function(agendaItem, userId) {\n\t\t\t\t\n\t\t\tif (!agendaItem.notification_recipients.value || agendaItem.notification_recipients.value.length == 0)\n\t\t\t\treturn false;\n\t\t\t\t\n\t\t\treturn agendaItem.notification_recipients.value.indexOf(userId) >= 0;\n\t\t};\n\t\t\t\t\n\t\tagendaNotification.updateRecipients = function(agendaItem, userId, action, cb) {\n\t\t\tif (!agendaItem)\n\t\t\t\treturn;\n\n\t\t\t$http.post(\"/api/sn_change_cab/cab/agenda/item/\" + agendaItem.sys_id.value + \"/notification_recipients\",\n\t\t\t\t\t   {\"action\": action, \"userId\": userId})\n\t\t\t\t.then(function () {\n\t\t\t\tif (cb)\n\t\t\t\t\tcb();\n\t\t\t}, modelUtil.failNicely);\n\t\t};\n\t\t\t\n\t\tagendaNotification.cleanup = function() {\n\t\t\t// cleanup code.\n\t\t};\n\t}]);","sys_class_name":"sys_ui_script","sys_id":"e4e3d993d752220034d145bcce6103e7","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"ui_type":"","sys_update_name":"sys_ui_script_e4e3d993d752220034d145bcce6103e7","sys_updated_by":"christen.mitchell","sys_created_on":"2016-10-11 14:40:12","name":"sn_change_cab.agenda.agendaNotification","sys_name":"sn_change_cab.agenda.agendaNotification","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"0","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2024-02-13 16:19:56","sys_tags":"","script_name":"","script":"/* g_service_catalog Proxy */\nvar g_service_catalog = {\n\tisOrderGuide: function() {\n\t\treturn false;\n\t}\n};\n\ncsGlobals['g_service_catalog'] = g_service_catalog;","sys_class_name":"sys_ui_script","sys_id":"e519d8569fd40210a86b86e29a0a1c44","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/4c8e6ff304752210559073c06a02f7c4","value":"4c8e6ff304752210559073c06a02f7c4"},"ui_type":"10","sys_update_name":"sys_ui_script_e519d8569fd40210a86b86e29a0a1c44","sys_updated_by":"admin","sys_created_on":"2024-02-13 16:19:56","name":"global.GlideServiceCatalogProxy","sys_name":"global.GlideServiceCatalogProxy","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"5","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2023-04-15 12:24:27","sys_tags":"","script_name":"","script":"/**\n * Validate the form before submit.\n */\nvar lastSubmittedSoftPin = '';\nfunction softpin_on_submit(formId) {\n    var currForm = document.getElementById(formId);\n    var verificationId = currForm.elements['verification_id'].value;\n    var providedSoftPIN = currForm.elements['softpin_input'].value;\n    var mandatoryVerification = currForm.elements['mandatory'].value;\n    var pinChanged = currForm.elements['pin_changed'].value;\n    if (currForm == null)\n        return false;\n\n    if ((mandatoryVerification != 'true' && providedSoftPIN == '')\n        || (pinChanged != 'true' && providedSoftPIN != ''))\n        return true;\n\n    var providedPinElement = getSoftPIN(currForm);\n    var trimmedPIN = providedPinElement.value.trim();\n    var charRepetitionThreshold = currForm.elements['repetition_threshold_for_soft_pin'].value;\n    charRepetitionThreshold = parseInt(charRepetitionThreshold);\n    var charSequenceThreshold = currForm.elements['sequence_threshold_for_soft_pin'].value;\n    charSequenceThreshold = parseInt(charSequenceThreshold);\n    var SOFT_PIN_LENGTH = currForm.elements['pin_length_for_soft_pin'].value;\n    SOFT_PIN_LENGTH = parseInt(SOFT_PIN_LENGTH);\n    var errorMessage;\n\n    var digitPattern = new RegExp(\"^\\\\d{\" + SOFT_PIN_LENGTH + \"}$\");\n    if (!digitPattern.test(providedSoftPIN)) {\n        errorMessage = new GwtMessage().getMessage('Soft PIN should be {0} digits', SOFT_PIN_LENGTH);\n        handleInvalidForm(currForm, errorMessage);\n        return false;\n    }\n\n    //Validating softpin for repeated continuous digits\n    var repetitionsPattern = \"(\\\\d+)\";\n    for (var i = 0; i < charRepetitionThreshold; i++)\n        repetitionsPattern += \"\\\\1\";\n    var repetitionsPatternRegX = new RegExp(repetitionsPattern);\n    if (repetitionsPatternRegX.test(providedSoftPIN)) {\n        errorMessage = new GwtMessage().getMessage(\"Soft PIN cannot have more than {0} repeated digits/pattern\", charRepetitionThreshold);\n        handleInvalidForm(currForm, errorMessage);\n        return false;\n    }\n\n    //Validating softpin for sequence\n    if (this._checkForSequence(providedSoftPIN, charSequenceThreshold)) {\n        errorMessage = new GwtMessage().getMessage(\"Soft PIN cannot have more than {0} digits in sequence\", charSequenceThreshold);\n        handleInvalidForm(currForm, errorMessage);\n        return false;\n    }\n\n    return true;\n}\n\nfunction _checkForSequence(data, threshold) {\n    // Check for sequential numerical characters\n    var increasingSequence = '0123456789';\n    var decreasingSequence = '9876543210';\n    for (var i = 0; i < data.length - threshold; i++) {\n        var subData = data.substring(i, i + threshold + 1);\n        if ((increasingSequence.indexOf(subData) > -1) ||\n            (decreasingSequence.indexOf(subData) > -1)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nfunction getSoftPIN(currForm) {\n    var elements = currForm.elements;\n    for (var i = 0; i < elements.length; i++) {\n        var element = elements[i];\n        var name = element.name;\n\n        if (name.indexOf(\"softpin_input\") == -1) continue;\n        return element;\n    }\n}\n\n// If the form fails validation, this will show a message and focus the tab the form is on\nfunction handleInvalidForm(currForm, message) {\n    var tabId = 'tablabel' + currForm.elements['tab_index'].value;\n    var tab = gel(tabId);\n    tab.click();\n    if (message)\n        displayErrorMessage(message);\n}\n\nfunction clearSoftPINValue(element) {\n    if (element.defaultValue == element.value) {\n        element.value = '';\n    }\n}\n\nfunction restoreSoftPINValue(element) {\n    if ((element.defaultValue && element.value == '') || (element.value == element.defaultValue)) {\n        element.value = element.defaultValue;\n        var currForm = element.form;\n        currForm.elements['pin_changed'].value = false;\n    }\n}\n\n/**\n * Mark  the value of the passed element has changed.\n */\nfunction softPINChanged(currElm) {\n\tvar softPINValue = currElm.value;\n\tvar currForm = currElm.form;\n\tif (!/^\\**$/.test(softPINValue))\n\t    currForm.elements['pin_changed'].value = softPINValue != lastSubmittedSoftPin ? true : false;\n\n}","sys_class_name":"sys_ui_script","sys_id":"e5af4c415382011017c3ddeeff7b12c7","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/421beb3304352210559073c06a02f7ef","value":"421beb3304352210559073c06a02f7ef"},"ui_type":"0","sys_update_name":"sys_ui_script_e5af4c415382011017c3ddeeff7b12c7","sys_updated_by":"admin","sys_created_on":"2022-03-03 09:41:46","name":"$pwd_enroll_softpin_ui","sys_name":"$pwd_enroll_softpin_ui","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"12","active":"true","description":"UI script for enrollment submit event  for Password Reset ","use_scoped_format":"false","global":"false","sys_updated_on":"2015-08-31 17:35:35","sys_tags":"","script_name":"","script":"var onSubmitEventHandlers = [];\nvar onSubmitEventHandlerIndex = 0;\n\n/** Map of form ID to a value of true if the form is valid (otherwise undefined). Forms that are marked as valid will be \n\tsaved even if there are some required enrollments that are not filled out, or if some forms are not complete. \n\tThis allows for \"partial enrollment\" and the user can come back later to finish enrolling. \n */\nvar validFormsMap;\n\n/* Used to determine whether to redirect to the \"Success\" page after submission. If this number is less than the\n   length of onSubmitEventHandlers then there will be no page redirect and any validation errors will appear on the \n   current page.\n */\nvar validFormsCount;\n\nfunction addSubmitEvent(onSubmit, formId) {\n\tonSubmitEventHandlers[onSubmitEventHandlerIndex++] = {onSubmit: onSubmit, formId: formId};\n}\n/**\n * Process the form and submit for enrollment(s)\n */\nfunction onSubmit() {\n\tvalidFormsMap = {};\n\tvalidFormsCount = 0;\n\t\n\tif (executeOnSubmitEventHandlers())\n\t\tsendRequest(); // This is on the UI page client script (e.g. $pwd_enrollment_form_container)\n\t\n\treturn false;\n}\n\n/**\n * Execute the on submit event handlers in order and keep track of how many forms pass validation.\n * Returns true if at least one form is valid. \n */\nfunction executeOnSubmitEventHandlers() {\n\tvar handler;\t\n\tfor(var i = 0; i < onSubmitEventHandlerIndex; i++) {\n\t\t\n\t\thandler = onSubmitEventHandlers[i];\n\t\t\n\t\tif (!handler || !handler.onSubmit)\n\t\t\tcontinue;\n\t\t\n\t\ttry {\n\t\t\tvar result = handler.onSubmit();\n\t\t\tif (result) {\n\t\t\t\tvalidFormsMap[handler.formId] = true;\n\t\t\t\t++validFormsCount;\n\t\t\t}\n\t\t}\n\t\tcatch (err) {\n\t\t\talert(err.message);\n\t\t}\n\t}\n\treturn validFormsCount !== 0;\n}\n\n","sys_class_name":"sys_ui_script","sys_id":"e5eb8c999f3201005f345f29468ba3a6","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/421beb3304352210559073c06a02f7ef","value":"421beb3304352210559073c06a02f7ef"},"ui_type":"","sys_update_name":"sys_ui_script_e5eb8c999f3201005f345f29468ba3a6","sys_updated_by":"michael.riha","sys_created_on":"2013-07-24 23:44:01","name":"pwd_enrollment_submit_event","sys_name":"pwd_enrollment_submit_event","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":"read"},{"ignore_in_now_experience":"false","sys_mod_count":"33","active":"true","description":"Service meetingAttendees.  Manages display of meeting attencance for CAB Workbench","use_scoped_format":"false","global":"false","sys_updated_on":"2021-04-29 15:12:36","sys_tags":"","script_name":"att.meetingAttendees","script":"angular.module(\"sn.change_management.cab.attendees\")\n\t.service(\"meetingAttendees\", ['CAB', 'modelUtil', 'initialLoad', 'runtimeState', 'snPresence', 'cabWatcher', '$rootScope', '$http', '$q', function(CAB, modelUtil, initialLoad, runtimeState, snPresence, cabWatcher, $rootScope, $http, $q) {\n\t\tvar meetingAttendees = this;\n\t\t\t\n\t\tvar mId = null;\n\t\tvar defReq = null;\n\t\tvar presenceListener = null;\n\t\tvar attendees = [];\n\t\tvar inAttendance = [];\n\t\t\n\t\tfunction subscribeWatcher() {\n\t\t\tcabWatcher.watch(mId)\n\t\t\t.subscribe(function(message) {\n\t\t\t\t$rootScope.$applyAsync(function(scope) {\n\t\t\t\t\tif (message.data.table_name !== CAB.ATTENDEE)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tif (message.data.operation === \"insert\") {\n\t\t\t\t\t\tvar attendeeSysId = message.data.record.attendee.value;\n\t\t\t\t\t\tif (attendeeSysId && attendees.indexOf(attendeeSysId) === -1) {\n\t\t\t\t\t\t\tattendees.push(attendeeSysId);\n\t\t\t\t\t\t\tinAttendance.push(attendeeSysId);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tfunction subscribePresence() {\n\t\t\tif (presenceListener)\n\t\t\t\tpresenceListener();\n\t\t\t\n\t\t\tpresenceListener = $rootScope.$on(\"sn.presence\", function(event, presenceArray) {\n\t\t\t\tif (!presenceArray || presenceArray.length === 0)\n\t\t\t\t\treturn;\n\t\t\t\t\n\t\t\t\tpresenceArray.forEach(function(presenceItem) {\n\t\t\t\t\tif (presenceItem.status === \"online\") {\n\t\t\t\t\t\tvar attendeeIdx = attendees.indexOf(presenceItem.user);\n\t\t\t\t\t\tif (attendeeIdx !== -1 && inAttendance.indexOf(presenceItem.user) === -1)\n\t\t\t\t\t\t\tinAttendance.push(attendees[attendeeIdx]);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t\t\n\t\t\tsnPresence.init();\n\t\t} \n\t\t\n\t\tfunction init(meetingId) {\n\t\t\tmId = meetingId;\n\t\t\tdefReq = runtimeState.get(meetingId)\n\t\t\t.then(function(rs) {\n\t\t\t\treturn initialLoad.attendee(meetingId);\n\t\t\t})\n\t\t\t.then(\n\t\t\t\tfunction(response) {\n\t\t\t\t\tattendees = response.data.result;\n\t\t\t\t\tsubscribeWatcher();\n\t\t\t\t\tsubscribePresence();\n\t\t\t\t\tdefReq = null;\n\t\t\t\t\treturn attendees;\n\t\t\t\t},\n\t\t\t\tfunction(response) {\n\t\t\t\t\tmodelUtil.failNicely(response);\n\t\t\t\t\tdefReq = null;\n\t\t\t\t\treturn $q.reject(response);\n\t\t\t\t}\n\t\t\t);\n\t\t\treturn defReq.promise;\n\t\t}\n\t\t\n\t\tmeetingAttendees.get = function(meetingId) {\n\t\t\tif (mId === meetingId) { // If the same attendee info is being requested.\n\t\t\t\tif (defReq)\n\t\t\t\t\treturn defReq.promise;\n\n\t\t\t\treturn $q.resolve(attendees);\n\t\t\t}\n\t\t\treturn init(meetingId);\n\t\t};\n\t\t\n\t\t// Number of people currently attending the meeting\n\t\tmeetingAttendees.attendanceCount = function() {\n\t\t\treturn inAttendance.length;\n\t\t};\n\t\t\n\t\tmeetingAttendees.userJoinedMeeting = function(userId) {\n\t\t\tif (!userId || !mId)\n\t\t\t\treturn $q.reject(\"User sys_id and meeting sys_id required\");\n\n\t\t\treturn $http.get(CAB.SERVICE.ATTENDEE + \"joinedmeeting/\" + mId + \"/\" + userId)\n\t\t\t.then(\n\t\t\t\tnull,\n\t\t\t\tfunction(response) {\n\t\t\t\t\tmodelUtil.failNicely(response);\n\t\t\t\t\treturn $q.reject(response);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\t\t\n\t\t// Search Attendees\n\t\tmeetingAttendees.search = function(freetextQuery) {\n\t\t\tif (!mId)\n\t\t\t\treturn $q.reject(\"Meeing sys_id is required\");\n\t\t\t\n\t\t\tfreetextQuery = encodeURIComponent(freetextQuery);\n\t\t\t\n\t\t\treturn $http.get(CAB.SERVICE.ATTENDEE + mId + \"/search/\" + freetextQuery)\n\t\t\t.then (\n\t\t\t\tfunction(response) {\n\t\t\t\t\treturn response.data.result;\n\t\t\t\t},\n\t\t\t\tfunction(response) {\n\t\t\t\t\tmodelUtil.failNicely(response);\n\t\t\t\t\treturn $q.reject(response);\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\t\t\n\t\tmeetingAttendees.cleanup = function() {\n\t\t\tif (presenceListener)\n\t\t\t\tpresenceListener();\n\t\t};\n\t\t\n\t}]);","sys_class_name":"sys_ui_script","sys_id":"e73e9d17d752220034d145bcce6103a4","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"ui_type":"0","sys_update_name":"sys_ui_script_e73e9d17d752220034d145bcce6103a4","sys_updated_by":"admin","sys_created_on":"2016-10-11 15:25:44","name":"sn_change_cab.att.meetingAttendees","sys_name":"sn_change_cab.att.meetingAttendees","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"0","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2020-09-14 14:11:20","sys_tags":"","script_name":"landing_filter","script":"angular.module(\"sn.app_itsm.now.filter\", [\"sn.common\"])\n.directive(\"landingFilter\", function(getTemplateUrl, i18n, TextSearchService) {\n\t\"use strict\";\n\treturn {\n\t\trestrict: \"E\",\n\t\ttemplateUrl: function(tElement, tAttrs) {\n\t\t\treturn getTemplateUrl(tAttrs.template);\n\t\t},\n\t\tscope: {\n\t\t\tconfiguration: \"=\",\n\t\t\tisDisabledFn: \"&\"\n\t\t},\n\t\tlink: function($scope) {\n\t\t\t$scope.searchText = { value: \"\" };\n\t\t\tTextSearchService.searchText = $scope.searchText;\n\t\t\tTextSearchService.filterByArray = $scope.configuration.filterConditions;\n\n\t\t\t$scope.isLoading = function() {\n\t\t\t\treturn $scope.$parent.loading;\n\t\t\t};\n\n\t\t\t$scope.isDisabled = function() {\n\t\t\t\tif ($scope.isDisabledFn !== undefined)\n\t\t\t\t\treturn $scope.isLoading() || $scope.isDisabledFn();\n\n\t\t\t\treturn $scope.isLoading();\n\t\t\t};\n\n\t\t\t$scope.$watch(\"searchText.value\", function(newValue, oldValue) {\n\t\t\t\tif (newValue === undefined || newValue === oldValue)\n\t\t\t\t\treturn;\n\n\t\t\t\t$scope.$emit(\"textSearch\", newValue);\n\t\t\t});\n\t\t},\n\t\tcontroller: function($scope) {\n\t\t\t$scope.placeholder = ($scope.configuration.placeholderText) ? $scope.configuration.placeholderText : i18n.getMessage(\"Filter\");\n\t\t\t$scope.ariaLabel = $scope.placeholder;\n\t\t}\n\t};\n})\n.filter(\"chgModelFilter\", [\"TextSearchService\", function(TextSearchService) {\n\treturn function(arrayToFilter, textSearch) {\n\t\treturn TextSearchService.getFilteredArray(arrayToFilter, textSearch);\n\t};\n}])\n.service(\"TextSearchService\", [\"$filter\", function($filter) {\n\tvar textSearchService = this;\n\n\ttextSearchService.searchText = {};\n\ttextSearchService.filterByArray = [];\n\n\tfunction convertToArray(object) {\n\t\tvar arr = [];\n\t\tif (!object)\n\t\t\treturn arr;\n\n\t\tObject.keys(object).forEach(function(key) {\n\t\t\tarr.push(object[key]);\n\t\t});\n\n\t\treturn arr;\n\t}\n\n\tvar searchObject = function(object, searchPathArray, searchText) {\n\t\tfor (var i = 0; i < searchPathArray.length; i++) {\n\t\t\tvar path = searchPathArray[i].split(\".\");\n\t\t\tvar property = path[path.length - 1];\n\t\t\tvar obj = object;\n\t\t\tfor (var j = 0; j < path.length - 1; j++) {\n\t\t\t\tif (Array.isArray(obj[path[j]])) {\n\t\t\t\t\tvar res = false;\n\t\t\t\t\tvar subPath = searchPathArray.slice(i, i + 1);\n\t\t\t\t\tsubPath[0] = subPath[0].replace(path[j] + \".\", \"\");\n\t\t\t\t\tfor (var k = 0; k < obj[path[j]].length; k++)\n\t\t\t\t\t\tif (searchObject(obj[path[j]][k], subPath, searchText))\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tobj = obj[path[j]];\n\t\t\t}\n\t\t\tif (obj && obj[property])\n\t\t\t\tif (obj[property].toLowerCase().indexOf(searchText.toLowerCase()) > -1)\n\t\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\ttextSearchService.clearFilters = function() {\n\t\tif (textSearchService.searchText)\n\t\t\ttextSearchService.searchText.value = \"\";\n\t\t\n\t\tangular.element('.change-model-board-filter-search #search2').focus();\n\t};\n\n\ttextSearchService.getFilteredArray = function(arrayToFilter, textSearch) {\n\t\tif (!Array.isArray(arrayToFilter))\n\t\t\tarrayToFilter = convertToArray(arrayToFilter);\n\n\t\tif (!textSearch || textSearch === \"\")\n\t\t\treturn arrayToFilter;\n\n\t\tvar textFilteredChgModels = $filter(\"filter\")(arrayToFilter, function(obj) {\n\t\t\treturn searchObject(obj, textSearchService.filterByArray, textSearch);\n\t\t});\n\n\t\treturn textFilteredChgModels;\n\t};\n}])\n.service(\"HighlightService\", [\"$sanitize\", \"$sce\", function($sanitize, $sce) {\n\tvar highlightService = this;\n\n\tfunction escapeRegExp(str) {\n\t\treturn str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n\t}\n\n\tfunction getHTMLEntity(str) {\n\t\treturn angular.element('<div />').text(str).html();\n\t}\n\n\thighlightService.highlight = function(text, highlightText, highlightClass) {\n\t\tif (!highlightText || !highlightClass || !text)\n\t\t\treturn getHTMLEntity(text);\n\n\t\tcleanHighlightText = getHTMLEntity(highlightText);\n\t\tcleanHighlightClass = getHTMLEntity(highlightClass);\n\t\tvar pattern = new RegExp(escapeRegExp(cleanHighlightText), \"gi\");\n\t\tvar replacedText = getHTMLEntity(text).replace(pattern, '<span class=\"' + cleanHighlightClass + '\">$&</span>');\n\t\treturn $sce.trustAsHtml(replacedText);\n\t};\n}]);","sys_class_name":"sys_ui_script","sys_id":"e8450afc53d350100999ddeeff7b12b0","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/bb9f15345332101034d1ddeeff7b12c8","value":"bb9f15345332101034d1ddeeff7b12c8"},"ui_type":"0","sys_update_name":"sys_ui_script_e8450afc53d350100999ddeeff7b12b0","sys_updated_by":"admin","sys_created_on":"2020-09-14 14:11:20","name":"sn_chg_model_ui.landing_filter","sys_name":"sn_chg_model_ui.landing_filter","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/bb9f15345332101034d1ddeeff7b12c8","value":"bb9f15345332101034d1ddeeff7b12c8"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"3","active":"true","description":"Directive snCabDateTimePicker.","use_scoped_format":"false","global":"false","sys_updated_on":"2022-09-29 07:00:20","sys_tags":"","script_name":"","script":"(function($, moment) {\n\t'use strict';\n\t/* Usage:\n\t * Date Time Picker:\n\t *\n\t * <span class='input-group' sn-cab-date-time-picker='' display-type='dateTime' date-value=\"dateValueInScope\" date-time-format=\"DD-MMM-YY hh:mm:ss a\">\n\t\t\t<input type='text' class=\"form-control\"></input>\n\t\t\t<span class=\"input-group-btn\">\n\t\t\t\t<a role=\"button\" class=\"btn btn-default btn-ref\">\n\t\t\t\t\t<span aria-hidden=\"true\" class=\"icon-calendar icon\"></span>\n\t\t\t\t\t<span class=\"sr-only\">${gs.getMessage('Select date and time')}</span>\n\t\t\t\t</a>\n\t\t\t</span>\n\t\t</span>\n\t *\n\t *\n\t */\n\tangular.module(\"sn.itsm.vcab.common\")\n\t.constant(\"MiniCalendarViewMode\", {\n\t\t\"DAY\": \"datepicker-days\",\n\t\t\"MONTH\": \"datepicker-months\",\n\t\t\"YEAR\": \"datepicker-years\",\n\t\t\"HOURS\": \"timepicker-hours\",\n\t\t\"MINUTES\": \"timepicker-minutes\"\n\t})\n\t.directive('snCabDateTimePicker', function($timeout, $document, $rootScope, $window, isMobile, Keys, MiniCalendarViewMode) {\n\t\t\treturn {\n\t\t\t\trestrict: \"A\",\n\t\t\t\tscope: {\n\t\t\t\t\tdisplayType: '@', //dateTime or date\n\t\t\t\t\tdateFormat: '@',\n\t\t\t\t\tdateTimeFormat: '@',\n\t\t\t\t\tdateValue: '=' // Should be a Date object\n\t\t\t\t},\n\t\t\t\tlink: function($scope, iEl, iAttrs) {\n\t\t\t\t\tvar lang = $(\"html\").attr(\"lang\");\n\t\t\t\t\tmoment.locale(lang);\n\t\t\t\t\tvar dateField = $('input', iEl);\n\t\t\t\t\tvar dateTimePicker;\n\t\t\t\t\tvar dateTimePickerObj;\n\t\t\t\t\tif (!$.fn.datetimepicker)\n\t\t\t\t\t\tthrow 'snCabDateTimePicker: datetimepicker plugin is required but not available.';\n\t\t\t\t\tif (!moment)\n\t\t\t\t\t\tthrow 'snCabDateTimePicker: moment js is required but not available.';\n\t\t\t\t\tvar currentFormat;\n\t\t\t\t\tvar config;\n\t\t\t\t\tfunction getDateStr() {\n\t\t\t\t\t\tif ($scope.dateValue)\n\t\t\t\t\t\t\treturn moment.tz($scope.dateValue, currentFormat, $window.g_tz);\n\t\t\t\t\t\treturn '';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($scope.displayType === 'dateTime') {\n\t\t\t\t\t\tif (!$scope.dateTimeFormat)\n\t\t\t\t\t\t\tthrow 'dateTimeFormat not provided';\n\t\t\t\t\t\tcurrentFormat = $scope.dateTimeFormat;\n\t\t\t\t\t\tconfig = {\n\t\t\t\t\t\t\tlanguage: lang,\n\t\t\t\t\t\t\tsideBySide: !isMobile(),\n\t\t\t\t\t\t\ticons: {\n\t\t\t\t\t\t\t\tdate: \"icon-calendar icon\",\n\t\t\t\t\t\t\t\tup: \"icon-vcr-up icon\",\n\t\t\t\t\t\t\t\tdown: \"icon-vcr-down icon\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tdefaultDate: getDateStr(),\n\t\t\t\t\t\t\tformat: $scope.dateTimeFormat,\n\t\t\t\t\t\t\tdirection: 'up',\n\t\t\t\t\t\t\tuse24hours: $scope.dateTimeFormat.indexOf('a') < 0 && $scope.dateTimeFormat.indexOf('h') < 0\n\t\t\t\t\t\t};\n\t\t\t\t\t\tdateTimePicker = iEl.datetimepicker(config);\n\t\t\t\t\t\tdateTimePicker.on(\"dp.hide\", function(event) {\n\t\t\t\t\t\t\tvar dateTimePickerButton = $(event.currentTarget).find(\"button\");\n\t\t\t\t\t\t\tif (dateTimePickerButton.attr(\"aria-expanded\") === \"false\")\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\tdateTimePickerButton.attr(\"aria-expanded\", false);\n\t\t\t\t\t\t\tremoveTimePickerChangeViewHandler();\n\t\t\t\t\t\t\t$timeout(function() {\n\t\t\t\t\t\t\t\tdateTimePickerButton.focus();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t\tdateTimePickerObj = iEl.data('DateTimePicker');\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($scope.displayType === 'date') {\n\t\t\t\t\t\tif (!$scope.dateFormat)\n\t\t\t\t\t\t\tthrow 'dateFormat not provided';\n\t\t\t\t\t\tcurrentFormat = $scope.dateFormat;\n\t\t\t\t\t\tconfig = {\n\t\t\t\t\t\t\ticons: {\n\t\t\t\t\t\t\t\tdate: \"icon-calendar icon\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tdefaultDate: getDateStr(),\n\t\t\t\t\t\t\tformat: $scope.dateFormat //needs to be a date format not having time\n\t\t\t\t\t\t};\n\t\t\t\t\t\tdateTimePicker = iEl.datetimepicker(config);\n\t\t\t\t\t\tdateTimePickerObj = iEl.data('DateTimePicker');\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction setValue() {\n\t\t\t\t\t\tvar v = dateField.val();\n\t\t\t\t\t\tif (v)\n\t\t\t\t\t\t\t$scope.dateValue = moment.tz(v, currentFormat, $window.g_tz);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\t$scope.dateValue = null;\n\t\t\t\t\t}\n\t\t\t\t\tif (dateField) {\n\t\t\t\t\t\tdateField.on('change.cdp paste.cdp keyup.cdp', function() {\n\t\t\t\t\t\t\t$timeout(setValue);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tvar isDateTimePickerOpen = false;\n\t\t\t\t\tfunction hideDatePicker() {\n\t\t\t\t\t\tif (isDateTimePickerOpen && dateTimePickerObj)\n\t\t\t\t\t\t\tdateTimePickerObj.hide();\n\t\t\t\t\t}\n\t\t\t\t\t$rootScope.$on('dp.show', function($event, msgId) {\n\t\t\t\t\t\tif (msgId === 'dp_show_' + $scope.$id)\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\thideDatePicker();\n\t\t\t\t\t});\n\t\t\t\t\tfunction addTimePickerChangeViewHandler() {\n\t\t\t\t\t\t$(\".picker-open .timepicker-hour\").on(\"click\", handleTimePickerChangeView.bind(this, \"hour\"));\n\t\t\t\t\t\t$(\".picker-open .timepicker-minute\").on(\"click\", handleTimePickerChangeView.bind(this, \"minute\"));\n\t\t\t\t\t\t$(\".picker-open .timepicker-hour\").on(\"click\", handleTimePickerChangeView.bind(this, \"hour\"));\n\t\t\t\t\t\t$(\".picker-open .timepicker-hours\").on(\"click\", handleTimePickerChangeView.bind(this, \"hours\"));\n\t\t\t\t\t\t$(\".picker-open .timepicker-minutes\").on(\"click\", handleTimePickerChangeView.bind(this, \"minutes\"));\n\t\t\t\t\t}\n\t\t\t\t\tfunction removeTimePickerChangeViewHandler() {\n\t\t\t\t\t\t$(\".timepicker-hour\").off(\"click\");\n\t\t\t\t\t\t$(\".timepicker-minute\").off(\"click\");\n\t\t\t\t\t\t$(\".timepicker-hours\").off(\"click\");\n\t\t\t\t\t\t$(\".timepicker-minutes\").off(\"click\");\n\t\t\t\t\t}\n\t\t\t\t\tfunction handleTimePickerChangeView(view, event) {\n\t\t\t\t\t\t$timeout(function() {\n\t\t\t\t\t\t\tif (view === \"hour\" || view === \"minute\")\n\t\t\t\t\t\t\t\t$(\".picker-open .timepicker-hours:visible,.picker-open .timepicker-minutes:visible\").find(\"td:first\").focus();\n\t\t\t\t\t\t\telse if (view === \"hours\")\n\t\t\t\t\t\t\t\t$(\".picker-open .timepicker-hour\").focus();\n\t\t\t\t\t\t\telse if (view === \"minutes\")\n\t\t\t\t\t\t\t\t$(\".picker-open .timepicker-minute\").focus();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tfunction isKeySupported(evtKey) {\n\t\t\t\t\t\tswitch (evtKey) {\n\t\t\t\t\t\t\tcase Keys.ESCAPE:\n\t\t\t\t\t\t\tcase Keys.ENTER:\n\t\t\t\t\t\t\tcase Keys.SPACE:\n\t\t\t\t\t\t\tcase Keys.TABKEY:\n\t\t\t\t\t\t\tcase Keys.LEFT_ARROW:\n\t\t\t\t\t\t\tcase Keys.UP_ARROW:\n\t\t\t\t\t\t\tcase Keys.RIGHT_ARROW:\n\t\t\t\t\t\t\tcase Keys.DOWN_ARROW:\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tfunction handleDateTimePicker(evt) {\n\t\t\t\t\t\t// Only supported keys\n\t\t\t\t\t\tif (!isKeySupported(evt.which))\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\tif ($(\".datepicker td.day[tabindex]\").length === 0) { // Bootstrap removes tabindex attr when re-renders, so adding them back\n\t\t\t\t\t\t\t$dateTimePicker.find(\"th,td.day,span.month,span.year\").not(\"td[tabindex],th.dow\").attr(\"tabindex\", 0); // Add tabindex to date picker elements\n\t\t\t\t\t\t\t$dateTimePicker.find(\"td.hour,td.minute,span.timepicker-hour,span.timepicker-minute\").not(\"td[tabindex]\").attr(\"tabindex\", 0); // Add tabindex to time picker elements\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar index;\n\t\t\t\t\t\tvar next;\n\t\t\t\t\t\tvar focused = $(document.activeElement);\n\t\t\t\t\t\tvar list = $(\".bootstrap-datetimepicker-widget:visible\").find(\".prev:visible, .next:visible, [tabindex='0']:visible, td[class]:visible\").not(\".separator,span.icon,.datepicker-years .picker-switch\");\n\t\t\t\t\t\tif (typeof index === \"undefined\")\n\t\t\t\t\t\t\tindex = list.index(focused);\n\t\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\t\tevt.stopPropagation();\n\t\t\t\t\t\tswitch (evt.which) {\n\t\t\t\t\t\t\tcase Keys.TABKEY:\n\t\t\t\t\t\t\tcase Keys.LEFT_ARROW:\n\t\t\t\t\t\t\tcase Keys.RIGHT_ARROW:\n\t\t\t\t\t\t\t\tif ((evt.which === Keys.TABKEY && !evt.shiftKey) || evt.which === Keys.RIGHT_ARROW)\n\t\t\t\t\t\t\t\t\tindex = (index === list.length - 1) ? 0 : index + 1;\n\t\t\t\t\t\t\t\telse if ((evt.which === Keys.TABKEY && evt.shiftKey) || evt.which === Keys.LEFT_ARROW)\n\t\t\t\t\t\t\t\t\tindex = (index === 0) ? list.length - 1 : index - 1;\n\t\t\t\t\t\t\t\tnext = list.get(index);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase Keys.UP_ARROW:\n\t\t\t\t\t\t\t\tif (focused.hasClass(\"timepicker-minute\")) {\n\t\t\t\t\t\t\t\t\t$(\"a.btn[data-action=incrementMinutes]\").click();\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (focused.hasClass(\"timepicker-hour\")) {\n\t\t\t\t\t\t\t\t\t$(\"a.btn[data-action=incrementHours]\").click();\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (focused.hasClass(\"hour\") || focused.hasClass(\"minute\")) {\n\t\t\t\t\t\t\t\t\tvar noOfcols = 4;\n\t\t\t\t\t\t\t\t\tvar minicalView = $(\".timepicker > div:visible\");\n\t\t\t\t\t\t\t\t\tfocused = $(document.activeElement);\n\t\t\t\t\t\t\t\t\tlist = minicalView.find(\".hour:visible,.minute:visible\");\n\t\t\t\t\t\t\t\t\tindex = list.index(focused);\n\t\t\t\t\t\t\t\t\tindex = (index < 4) ? list.length - (noOfcols - index) : index - noOfcols;\n\t\t\t\t\t\t\t\t\tnext = list.get(index);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (focused.is(\"th\")) {\n\t\t\t\t\t\t\t\t\tnext = list.get(list.length - 3); // stay in datepicker\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tvar minicalView = $(\".datepicker > div:visible\");\n\t\t\t\t\t\t\t\tvar noOfcols = (minicalView.attr(\"class\") === MiniCalendarViewMode.DAY) ? 7 : 4;\n\t\t\t\t\t\t\t\tvar noOfHeaderElements = (minicalView.attr(\"class\") !== MiniCalendarViewMode.YEAR) ? 3 : 2;\n\t\t\t\t\t\t\t\tif (index === noOfHeaderElements)\n\t\t\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t\t\telse if (index > noOfHeaderElements && index < noOfHeaderElements + noOfcols - 1)\n\t\t\t\t\t\t\t\t\tindex = 1;\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\tindex -= noOfcols;\n\t\t\t\t\t\t\t\tnext = list.get(index);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase Keys.DOWN_ARROW:\n\t\t\t\t\t\t\t\tif (focused.hasClass(\"timepicker-minute\")) {\n\t\t\t\t\t\t\t\t\t$(\"a.btn[data-action=decrementMinutes]\").click();\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (focused.hasClass(\"timepicker-hour\")) {\n\t\t\t\t\t\t\t\t\t$(\"a.btn[data-action=decrementHours]\").click();\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (focused.hasClass(\"hour\") || focused.hasClass(\"minute\")) {\n\t\t\t\t\t\t\t\t\tvar noOfcols = 4;\n\t\t\t\t\t\t\t\t\tvar minicalView = $(\".timepicker > div:visible\");\n\t\t\t\t\t\t\t\t\tfocused = $(document.activeElement);\n\t\t\t\t\t\t\t\t\tlist = minicalView.find(\".hour:visible,.minute:visible\");\n\t\t\t\t\t\t\t\t\tindex = list.index(focused);\n\t\t\t\t\t\t\t\t\tindex = (index >= list.length - 4) ? index % 4 : index + 4;\n\t\t\t\t\t\t\t\t\tnext = list.get(index);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tvar minicalView = $(\".datepicker > div:visible\");\n\t\t\t\t\t\t\t\tif (focused.is(\"th\")) {\n\t\t\t\t\t\t\t\t\tvar noOfHeaderElements = (minicalView.attr(\"class\") !== MiniCalendarViewMode.YEAR) ? 3 : 2;\n\t\t\t\t\t\t\t\t\tnext = list.get(noOfHeaderElements);\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tswitch (minicalView.attr(\"class\")) {\n\t\t\t\t\t\t\t\t\tcase MiniCalendarViewMode.DAY:\n\t\t\t\t\t\t\t\t\t\tindex = (index + 7 > list.length - 3) ? 0 : $(list[index + 7]).is(\".datepicker th\") || $(list[index + 7]).is(\".datepicker td\") ? index + 7 : 0;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase MiniCalendarViewMode.MONTH:\n\t\t\t\t\t\t\t\t\tcase MiniCalendarViewMode.YEAR:\n\t\t\t\t\t\t\t\t\t\tindex = (index + 3 > list.length - 3) ? 0 : $(list[index + 3]).is(\".datepicker th\") || $(list[index + 3]).is(\".datepicker span\") ? index + 3 : 0;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tnext = list.get(index);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase Keys.SPACE:\n\t\t\t\t\t\t\tcase Keys.ENTER:\n\t\t\t\t\t\t\t\tvar previousView = $(\".datepicker > div:visible\").attr(\"class\");\n\t\t\t\t\t\t\t\tfocused.click();\n\t\t\t\t\t\t\t\tif ($(\".datepicker td.day[tabindex]\").length === 0) { // Bootstrap removes tabindex attr when re-renders, so adding them back\n\t\t\t\t\t\t\t\t\t$dateTimePicker.find(\"th,td.day,span.month,span.year\").not(\"td[tabindex],th.dow\").attr(\"tabindex\", 0); // Add tabindex to date picker elements\n\t\t\t\t\t\t\t\t\t$dateTimePicker.find(\"td.hour,td.minute,span.timepicker-hour,span.timepicker-minute\").not(\"td[tabindex]\").attr(\"tabindex\", 0); // Add tabindex to time picker elements\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tvar currentView = $(\".datepicker > div:visible\").attr(\"class\");\n\t\t\t\t\t\t\t\tvar minicalView = $(\".datepicker > div:visible\");\n\t\t\t\t\t\t\t\tif (previousView !== currentView) {\n\t\t\t\t\t\t\t\t\tif (currentView === MiniCalendarViewMode.YEAR || (currentView === MiniCalendarViewMode.MONTH && previousView === MiniCalendarViewMode.YEAR))\n\t\t\t\t\t\t\t\t\t\tnext = $(\"span.active:visible\");\n\t\t\t\t\t\t\t\t\telse if (currentView === MiniCalendarViewMode.DAY && previousView === MiniCalendarViewMode.MONTH)\n\t\t\t\t\t\t\t\t\t\tnext = $(\"td.active:visible\");\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\tswitch (currentView) {\n\t\t\t\t\t\t\t\t\t\t\tcase MiniCalendarViewMode.DAY:\n\t\t\t\t\t\t\t\t\t\t\tcase MiniCalendarViewMode.MONTH:\n\t\t\t\t\t\t\t\t\t\t\t\tnext = $(\".picker-switch:visible\");\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\tcase MiniCalendarViewMode.YEAR:\n\t\t\t\t\t\t\t\t\t\t\t\tnext = $(\"span.active:visible\");\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t// Make it easier for keyboard navigation and once the date is selected, move to the timepicker\n\t\t\t\t\t\t\t\t\tnext = $(\".bootstrap-datetimepicker-widget:visible\").find(\".timepicker-picker:visible span.timepicker-hour, .timepicker-hours:visible td:first, .timepicker-minutes:visible td:first\");\n\t\t\t\t\t\t\t\t\tnext.focus();\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase Keys.ESCAPE:\n\t\t\t\t\t\t\t\thideDatePicker();\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tif (next)\n\t\t\t\t\t\t\tnext.focus();\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction onKeyDown($event) {\n\t\t\t\t\t\tif ($($event.target).parents(\".bootstrap-datetimepicker-widget\").length === 1) {\n\t\t\t\t\t\t\thandleDateTimePicker($event);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ($event.which !== Keys.ESCAPE)\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\thideDatePicker();\n\t\t\t\t\t\t$event.stopPropagation();\n\t\t\t\t\t\t$event.preventDefault();\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction onClickOverDatePicker($event) {\n\t\t\t\t\t\t$event.stopPropagation();\n\t\t\t\t\t\t$event.stopImmediatePropagation();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (dateTimePicker) {\n\t\t\t\t\t\tdateTimePicker.on('dp.change', function() {\n\t\t\t\t\t\t\t$timeout(setValue);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tvar $dateTimePicker;\n\t\t\t\t\t\tdateTimePicker.on(\"dp.hide\", function() {\n\t\t\t\t\t\t\tif ($dateTimePicker)\n\t\t\t\t\t\t\t\t$dateTimePicker.off(\"click\", onClickOverDatePicker);\n\t\t\t\t\t\t\tif ($(\"body > div.bootstrap-datetimepicker-widget.picker-open\").length === 0)\n\t\t\t\t\t\t\t\t$scope.$emit(\"dp.hide\");\n\t\t\t\t\t\t\tisDateTimePickerOpen = false;\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tdateTimePicker.on(\"dp.show\", function(event){\n\t\t\t\t\t\t\t$dateTimePicker = $(\"body > div.bootstrap-datetimepicker-widget.picker-open\");\n\t\t\t\t\t\t\tif ($dateTimePicker.length === 0) {\n\t\t\t\t\t\t\t\t$scope.$emit(\"dp.hide\");\n\t\t\t\t\t\t\t\tisDateTimePickerOpen = false;\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$dateTimePicker.off(\"keydown\");\n\t\t\t\t\t\t\t$dateTimePicker.on(\"keydown\", handleDateTimePicker);\n\t\t\t\t\t\t\t$(event.currentTarget).find(\"button\").attr(\"aria-expanded\", \"true\");\n\t\t\t\t\t\t\t$scope.$emit(\"dp.show\", [\"dp_show_\" + $scope.$id]);\n\t\t\t\t\t\t\tisDateTimePickerOpen = true;\n\t\t\t\t\t\t\t$dateTimePicker.off('click', onClickOverDatePicker);\n\t\t\t\t\t\t\t$dateTimePicker.on(\"click\", onClickOverDatePicker);\n\t\t\t\t\t\t\t$timeout(function() {\n\t\t\t\t\t\t\t\t$dateTimePicker.find(\"th,td.day,span.month,span.year\").not(\"td[tabindex],th.dow\").attr(\"tabindex\", 0); // Add tabindex to date picker elements\n\t\t\t\t\t\t\t\t$dateTimePicker.find(\"td.hour,td.minute,span.timepicker-hour,span.timepicker-minute\").not(\"td[tabindex]\").attr(\"tabindex\", 0); // Add tabindex to time picker elements\n\t\t\t\t\t\t\t\tremoveTimePickerChangeViewHandler();\n\t\t\t\t\t\t\t\taddTimePickerChangeViewHandler();\n\t\t\t\t\t\t\t\t$(\".datepicker .prev:visible\").focus();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\t$scope.$on('$destroy', function () {\n\t\t\t\t\t\tif ($dateTimePicker) {\n\t\t\t\t\t\t\t$dateTimePicker.off('click', onClickOverDatePicker);\n\t\t\t\t\t\t\tremoveTimePickerChangeViewHandler();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (dateField) {\n\t\t\t\t\t\t\tdateField.off('.cdp');\n\t\t\t\t\t\t\tdateField = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (dateTimePickerObj)\n\t\t\t\t\t\t\tdateTimePickerObj.destroy();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t});\n}(jQuery, moment));","sys_class_name":"sys_ui_script","sys_id":"e85c8cec53ce1110a6f8ddeeff7b1255","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/3b83a3f304312210559073c06a02f788","value":"3b83a3f304312210559073c06a02f788"},"ui_type":"0","sys_update_name":"sys_ui_script_e85c8cec53ce1110a6f8ddeeff7b1255","sys_updated_by":"admin","sys_created_on":"2022-09-16 16:10:35","name":"clone_calendar_vcom.snCabDateTimePicker","sys_name":"clone_calendar_vcom.snCabDateTimePicker","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"3","active":"true","description":"Directive snCabLineClamp.","use_scoped_format":"false","global":"false","sys_updated_on":"2022-09-29 07:00:21","sys_tags":"","script_name":"","script":"(function ($) {\n\t'use strict';\n\tfunction removeLastWords(txt, count) {\n\t\tif (txt && count) {\n\t\t\ttxt = txt.replace(/[\\t\\n\\r\\s]+/g, ' ').trim();\n\t\t\tvar idx = txt.length;\n\t\t\tfor (var i = txt.length - 1; i >= 0; i--) {\n\t\t\t\tvar c = txt.charAt(i);\n\t\t\t\tif (c === ' ')\n\t\t\t\t\tcount--;\n\t\t\t\tif (count === 0) {\n\t\t\t\t\treturn txt.substring(0, i);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn txt;\n\t}\n\n\tangular.module('sn.itsm.vcab.common').directive('snCabLineClamp', function ($timeout) {\n\t\treturn {\n\t\t\trestrict: 'E',\n\t\t\tscope: {\n\t\t\t\ttext: '@',\n\t\t\t\tmaxLines: '@'\n\t\t\t},\n\t\t\ttemplate: '<div>{{truncatedText}}</div>',\n\t\t\tlink: function (scope, element, attrs) {\n\t\t\t\tvar maxLines = parseInt(scope.maxLines || 1);\n\t\t\t\tvar isClamped = false;\n\t\t\t\tvar $el = $(element).children('div');\n\t\t\t\tvar isWidthSet = false;\n\t\t\t\tif($(element).closest('.snc-common-calendar').length == 0)\n\t\t\t\t\tisWidthSet = true;\n\t\t\t\tfunction tryText() {\n\t\t\t\t\tif(!isWidthSet) {\n\t\t\t\t\t\tvar $calHeader = $('.dhx_cal_header > div > div:first-child');\n\t\t\t\t\t\tif($calHeader.length > 0) {\n\t\t\t\t\t\t\tisWidthSet = true;\n\t\t\t\t\t\t\tvar marginRight = 10;\n\t\t\t\t\t\t\tvar left = $calHeader.position().left;\n\t\t\t\t\t\t\tvar maxWidth = left - element.position().left - marginRight;\n\t\t\t\t\t\t\t$el.closest('td').css({\n\t\t\t\t\t\t\t\t'width': (left + 1) + 'px'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t$el.closest('p').css({\n\t\t\t\t\t\t\t\t'width': maxWidth + 'px',\n\t\t\t\t\t\t\t\t'margin-right': marginRight + 'px'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$timeout(function () {\n\t\t\t\t\t\tif ($el.get(0).scrollHeight > (scope.maxAllowedHt + 5)) {\n\t\t\t\t\t\t\tscope.truncatedText = removeLastWords(scope.text, ++scope.counter) + ' …';\n\t\t\t\t\t\t\t$el.attr('title', scope.text);\n\t\t\t\t\t\t\ttryText();\n\t\t\t\t\t\t} else if (scope.counter === 0) {\n\t\t\t\t\t\t\tscope.truncatedText = scope.text;\n\t\t\t\t\t\t\t$el.removeAttr('title');\n\t\t\t\t\t\t}\n\t\t\t\t\t}, 1);\n\t\t\t\t}\n\t\t\t\tfunction clamp () {\n\t\t\t\t\tif (!isClamped) {\n\t\t\t\t\t\tscope.maxAllowedHt = parseInt($el.css('line-height')) * maxLines;\n\t\t\t\t\t\t$el.css({\n\t\t\t\t\t\t\t'max-height': scope.maxAllowedHt + 'px',\n\t\t\t\t\t\t});\n\t\t\t\t\t\tisClamped = true;\n\t\t\t\t\t}\n\t\t\t\t\tscope.counter = 0;\n\t\t\t\t\tscope.truncatedText = scope.text;\n\t\t\t\t\ttryText();\n\t\t\t\t}\n\t\t\t\tscope.$watch('text', clamp);\n\t\t\t}\n\t\t};\n\t});\n}(jQuery));","sys_class_name":"sys_ui_script","sys_id":"e97c402053025110a6f8ddeeff7b1204","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/3b83a3f304312210559073c06a02f788","value":"3b83a3f304312210559073c06a02f788"},"ui_type":"0","sys_update_name":"sys_ui_script_e97c402053025110a6f8ddeeff7b1204","sys_updated_by":"admin","sys_created_on":"2022-09-16 16:11:12","name":"clone_calendar_vcom.snCabLineClamp","sys_name":"clone_calendar_vcom.snCabLineClamp","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"51","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2021-01-21 00:50:41","sys_tags":"","script_name":"","script":"angular.module(\"sn.app_common.aisa.feedback\", [\"sn.app_common\"]);\nangular.module(\"sn.app_common.aisa.feedback\").service(\"aisaFeedback\", [\"$rootScope\", \"snAnalytics\", \"i18n\", function($rootScope, snAnalytics, i18n) {\n\tvar aisaFeedback = this;\n\n\taisaFeedback.SEARCH_EVENT = 'SEARCH_EVENT';\n\taisaFeedback.SEARCH_RESULT_EVENT = 'SEARCH_RESULT_EVENT';\n\taisaFeedback.SEARCH_RESULT_EVENT_CLICK = 'CLICK';\n\taisaFeedback.NAV_NEXT = 'Next';\n\taisaFeedback.NAV_PREV = 'Previous';\n\taisaFeedback.DOMAIN = 'Domain';\n\t\n\tvar cleanTitle = function(title) {\n\t\treturn title.replace( /(<([^>]+)>)/ig, '');\n\t};\n\n\taisaFeedback.getCommonEventData = function(searchTerm, rpConfig) {\n\t\tvar commonData = {\n\t\t\t'searchContextConfigId': rpConfig.searchApp,\n\t\t\t'queryTerm': searchTerm\n\t\t};\n\t\treturn commonData;\n\t};\n\n\taisaFeedback.searchEvent = function(searchTerm, rpConfig, rawSearchResults, session) {\n\t\tvar GlideSignals = $rootScope.GlideSignals;\n\t\tvar feedbackData = aisaFeedback.getCommonEventData(searchTerm, rpConfig);\n\t\tvar searchResults = [];\n\t\tvar searchResultsPerSourceObj = {};\n\t\tvar searchResultsPerSource = [];\n\t\trawSearchResults.forEach(function(searchResult) {\n\t\t\tsearchResults.push({\n\t\t\t\t'tableName': searchResult.table,\n\t\t\t\t'recordId': searchResult.sysId,\n\t\t\t\t'resultType': \"REGULAR\"\n\t\t\t});\n\t\t\tif (!searchResultsPerSourceObj[searchResult.table])\n\t\t\t\tsearchResultsPerSourceObj[searchResult.table] = {\n\t\t\t\t\t'sourceId': searchResult.table,\n\t\t\t\t\t'numberOfResults': 0\n\t\t\t\t};\n\t\t\tsearchResultsPerSourceObj[searchResult.table].numberOfResults += 1;\n\t\t});\n\t\tfor (var table in searchResultsPerSourceObj)\n\t\t\tsearchResultsPerSource.push(searchResultsPerSourceObj[table]);\n\n\t\tfeedbackData.userId = session.userId;\n\t\tfeedbackData.language = session.language;\n\t\tfeedbackData.searchResults = searchResults;\n\t\tfeedbackData.searchResultsPerSource = searchResultsPerSource;\n\t\tGlideSignals.trackEvent(aisaFeedback.SEARCH_EVENT, GlideSignals.priority.INFO, feedbackData);\n\t};\n\n\taisaFeedback.searchResultEvent = function(searchTerm, rpConfig, result, signalType, signalValue) {\n\t\tvar GlideSignals = $rootScope.GlideSignals;\n\t\tvar feedbackData = aisaFeedback.getCommonEventData(searchTerm, rpConfig);\n\t\tfeedbackData.resultSysId = result.sysId;\n\t\tfeedbackData.labelDescription = cleanTitle(result.title);\n\t\tfeedbackData.sourceTable = result.table;\n\t\tfeedbackData.aisDocId = result.table + '_' + result.sysId;\n\t\tfeedbackData.signalType = signalType;\n\t\tfeedbackData.signalValue = signalValue;\n\t\tGlideSignals.trackEvent(aisaFeedback.SEARCH_RESULT_EVENT, GlideSignals.priority.INFO, feedbackData);\n\t};\n\t\n\taisaFeedback.sendSearchAppSeeEvent = function(searchTerm, rpSysId, responseTime, domain) {\n\t\tvar payload = {\n\t\t\tSearchTerm: searchTerm,\n\t\t\tResponseTime: responseTime,\n\t\t\tRecordProducer: rpSysId\n\t\t};\n\t\tif (domain)\n\t\t\tpayload[aisaFeedback.DOMAIN] = domain;\n\t\t\n\t\taisaFeedback.sendAppSeeEvent({\n\t\t\tname: 'Search Start AI Search Assist',\n\t\t\tdata: payload\n\t\t});\n\t};\n\t\n\taisaFeedback.sendSearchCompleteAppSeeEvent = function(resultRecord, rpSysId, link, actionId, domain) {\n\t\tvar payload = {\n\t\t\tActionID: actionId,\n\t\t\tDataSourceName: resultRecord.table,\n\t\t\tDocumentID: resultRecord.sysId,\n\t\t\tDocumentTitle: cleanTitle(resultRecord.title),\n\t\t\tLink: link,\n\t\t\tRecordProducer: rpSysId\n\t\t};\n\t\tif (domain)\n\t\t\tpayload[aisaFeedback.DOMAIN] = domain;\n\t\t\n\t\taisaFeedback.sendAppSeeEvent({\n\t\t\tname: 'Search Complete AI Search Assist',\n\t\t\tdata: payload\n\t\t});\n\t};\n\t\n\taisaFeedback.sendResultClickAppSeeEvent = function(resultRecord, rpSysId, position, domain) {\n\t\tvar payload = {\n\t\t\tClickPosition: position,\n\t\t\tDataSourceName: resultRecord.table,\n\t\t\tDocumentID: resultRecord.sysId,\n\t\t\tDocumentTitle: cleanTitle(resultRecord.title),\n\t\t\tRecordProducer: rpSysId\n\t\t};\n\t\tif (domain)\n\t\t\tpayload[aisaFeedback.DOMAIN] = domain;\n\t\t\n\t\taisaFeedback.sendAppSeeEvent({\n\t\t\tname: 'Search Result Click AI Search Assist',\n\t\t\tdata: payload\n\t\t});\n\t};\n\t\n\taisaFeedback.sendNavClickAppSeeEvent = function(navDirection, rpSysId, domain) {\n\t\tvar payload = {\n\t\t\tNavigationDirection: navDirection,\n\t\t\tRecordProducer: rpSysId\n\t\t};\n\t\tif (domain)\n\t\t\tpayload[aisaFeedback.DOMAIN] = domain;\n\t\t\n\t\taisaFeedback.sendAppSeeEvent({\n\t\t\tname: 'Search Result Navigation Click AI Search Assist',\n\t\t\tdata: payload\n\t\t});\n\t};\n\t\t\n\taisaFeedback.sendActionClickAppSeeEvent = function(resultRecord, rpSysId, actionInfo, domain) {\n\t\tvar payload = {\n\t\t\tActionID: actionInfo.actionId,\n\t\t\tDataSourceName: resultRecord.table,\n\t\t\tDocumentID: resultRecord.sysId,\n\t\t\tDocumentTitle: cleanTitle(resultRecord.title),\n\t\t\tRecordProducer: rpSysId\n\t\t};\n\t\t\n\t\tif (actionInfo.value)\n\t\t\tpayload['ActionValue'] = actionInfo.value;\n\t\tif (domain)\n\t\t\tpayload[aisaFeedback.DOMAIN] = domain;\n\t\t\n\t\taisaFeedback.sendAppSeeEvent({\n\t\t\tname: 'Search Result Action Click AI Search Assist',\n\t\t\tdata: payload\n\t\t});\n\t};\n\t\n\taisaFeedback.sendRPSubmitAppSeeEvent = function(searchTerm, rpSysId, domain) {\n\t\tvar payload = {\n\t\t\tSearchTerm: searchTerm,\n\t\t\tRecordProducerSysID: rpSysId,\n\t\t};\n\t\t\n\t\tif (domain)\n\t\t\tpayload[aisaFeedback.DOMAIN] = domain;\n\t\t\n\t\taisaFeedback.sendAppSeeEvent({\n\t\t\tname: 'Record Producer Submit AI Search Assist',\n\t\t\tdata: payload\n\t\t});\n\t};\n\t\n\taisaFeedback.sendAppSeeEvent = function(payload) {\n\t\tsnAnalytics.addEvent(payload);\n\t};\n}]);","sys_class_name":"sys_ui_script","sys_id":"ea448bdc6723101040f382f45685ef33","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/e4dd6b3304752210559073c06a02f70c","value":"e4dd6b3304752210559073c06a02f70c"},"ui_type":"0","sys_update_name":"sys_ui_script_ea448bdc6723101040f382f45685ef33","sys_updated_by":"admin","sys_created_on":"2020-09-25 15:46:45","name":"app_com.aisa.feedback","sys_name":"app_com.aisa.feedback","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"48","active":"true","description":"AngularJs directive to render the card in Change Model Landing Page","use_scoped_format":"false","global":"false","sys_updated_on":"2023-03-20 12:32:32","sys_tags":"","script_name":"landing_card","script":"angular.module(\"sn.chg_model_ui.landing\")\n\t.directive(\"snLandingCard\", function(urlTools, $window) {\n\t\t\"use strict\";\n\t\treturn {\n\t\t\treplace: true,\n\t\t\trestrict: \"E\",\n\t\t\ttemplateUrl: urlTools.getPartialURL(\"sn_chg_model_ui_cmu_landing_card.xml\", \"v=\" + $window.NOW.macro_flush_stamp),\n\t\t\tcontroller: function($scope) {\n\t\t\t\t$scope.createChangeRequest = function(link) {\n\t\t\t\t\tif ($scope.chgModelLandingCtrl.isCardClicked())\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t$scope.chgModelLandingCtrl.setCardClicked();\n\n\t\t\t\t\tvar urlParams = [];\n\n\t\t\t\t\tvar nowUrlParams = window.NOW.chg_model_landing.url_params;\n\n\t\t\t\t\tObject.keys(nowUrlParams).forEach(function(key) {\n\t\t\t\t\t\tvar value = nowUrlParams[key];\n\t\t\t\t\t\tif (!value)\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t//Special cases for url encoding in a param\n\t\t\t\t\t\tif (key === \"sysparm_stack\" || key === \"sysparm_referring_url\") {\n\t\t\t\t\t\t\t//Decode until fully decoded to prevent multiple encoding\n\t\t\t\t\t\t\twhile (value !== decodeURIComponent(value)) {\n\t\t\t\t\t\t\t\tvalue = decodeURIComponent(value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalue = encodeURIComponent(value);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\turlParams.push(key + \"=\" + value);\n\t\t\t\t\t});\n\n\t\t\t\t\t//Build the sysparm_stack if there isn't one.\n\t\t\t\t\tif (!nowUrlParams[\"sysparm_stack\"])\n\t\t\t\t\t\tif (nowUrlParams[\"sysparm_collection\"] && nowUrlParams[\"sysparm_collectionID\"])\n\t\t\t\t\t\t\turlParams.push(\"sysparm_stack=\" + encodeURIComponent(nowUrlParams[\"sysparm_collection\"] + \".do?sys_id=\" + nowUrlParams[\"sysparm_collectionID\"]));\n\n\t\t\t\t\t$window.location.href = link + (urlParams.length > 0 ? \"&\" + urlParams.join(\"&\") : \"\");\n\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t});\n","sys_class_name":"sys_ui_script","sys_id":"ea54cebc53d350100999ddeeff7b123b","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/bb9f15345332101034d1ddeeff7b12c8","value":"bb9f15345332101034d1ddeeff7b12c8"},"ui_type":"0","sys_update_name":"sys_ui_script_ea54cebc53d350100999ddeeff7b123b","sys_updated_by":"admin","sys_created_on":"2020-09-14 14:07:22","name":"sn_chg_model_ui.landing_card","sys_name":"sn_chg_model_ui.landing_card","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/bb9f15345332101034d1ddeeff7b12c8","value":"bb9f15345332101034d1ddeeff7b12c8"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"14","active":"true","description":"Service dataUtil.","use_scoped_format":"false","global":"false","sys_updated_on":"2021-04-01 15:21:06","sys_tags":"","script_name":"","script":"(function () {\n\t'use strict';\n\n\tvar monthNames = [\n\t\t\"Jan\", \"Feb\", \"Mar\",\n\t\t\"Apr\", \"May\", \"Jun\", \"Jul\",\n\t\t\"Aug\", \"Sep\", \"Oct\",\n\t\t\"Nov\", \"Dec\"\n    ];\n\n\tfunction getBrowserTzOffsetInMs(targetTimeInMs) {\n\t\tvar offset = new Date(targetTimeInMs).getTimezoneOffset();\n\t\treturn -offset * 60 * 1000;\n\t}\n\n\tfunction getZeroPadded(d) {\n\t\tif (d < 10)\n\t\t\treturn '0' + d;\n\t\treturn '' + d;\n\t}\n\n\tangular.module('sn.itsm.vcab.common')\n\t.provider('dataUtil', function () {\n\t\t// Default implementation gets it from global variables\n\t\t// but we can use angular config block to configure and\n\t\t// set our own offsets.\n\t\tvar tzOffset = window.g_tz_offset;\n\t\tvar firstDayOfWeek = window.g_first_day_of_week;\n\t\tvar dateTimeFormat = 'YYYY-MM-DD hh:mm:ss';\n\t\tvar timeFormat = '%h:%i';\n\t\tfunction getUserTzOffsetInMs(targetTimeInMs) {\n\t\t\tif (typeof tzOffset === 'undefined') {\n\t\t\t\t$log.warn('tzOffset not found falling back to browser timezone');\n\t\t\t\treturn getBrowserTzOffsetInMs(targetTimeInMs);\n\t\t\t}\n\t\t\treturn tzOffset;\n\t\t}\n\n\t\tfunction getBrowserTzDiffWithUserTzInMs(targetTimeInMs) {\n\t\t\treturn getBrowserTzOffsetInMs(targetTimeInMs) - getUserTzOffsetInMs(targetTimeInMs);\n\t\t}\n\n\t\tthis.setUserTzOffsetInMs = function (offset) {\n\t\t\ttzOffset = offset;\n\t\t};\n\t\tthis.setFirstDayOfWeek = function (fdw) {\n\t\t\tfirstDayOfWeek = fdw;\n\t\t};\n\n\t\tthis.$get = ['$log', 'i18n', 'calendarUtils', function ($log, i18n, calendarUtils) {\n\t\t\treturn {\n\n\t\t\t\tsetDateTimeFormat: function(newFormat) {\n\t\t\t\t\tdateTimeFormat = newFormat;\n\t\t\t\t},\n\n\t\t\t\tsetTimeFormat: function(newFormat) {\n\t\t\t\t\ttimeFormat = newFormat;\n\t\t\t\t},\n\n\t\t\t\tgetValue: function (o) {\n\t\t\t\t\tif (typeof o === 'object') {\n\t\t\t\t\t\tif ('value' in o)\n\t\t\t\t\t\t\treturn o.value;\n\t\t\t\t\t}\n\t\t\t\t\treturn o;\n\t\t\t\t},\n\t\t\t\tdateNowAsPerUserProfile: function () {\n\t\t\t\t\tvar n = Date.now();\n\t\t\t\t\treturn n - getBrowserTzDiffWithUserTzInMs(n);\n\t\t\t\t},\n\t\t\t\tcurrentDateAsPerUserProfile: function () {\n\t\t\t\t\tvar n = Date.now();\n\t\t\t\t\treturn new Date(n - getBrowserTzDiffWithUserTzInMs(n));\n\t\t\t\t},\n\t\t\t\t_adjustDueToDST: function(val) {\n\t\t\t\t\tvar mVal = moment.tz(val, dateTimeFormat, g_tz);\n\t\t\t\t\tif (mVal.isDST() && !moment().tz(g_tz).isDST())\n\t\t\t\t\t\treturn mVal.add(1, \"hours\").format(dateTimeFormat);\n\t\t\t\t\tif (!mVal.isDST() && moment().tz(g_tz).isDST())\n\t\t\t\t\t\treturn mVal.subtract(1, \"hours\").format(dateTimeFormat);\n\t\t\t\t\treturn val;\n\t\t\t\t},\n\t\t\t\twsToJsDate: function (d) {\n\t\t\t\t\tif (!d)\n\t\t\t\t\t\treturn null;\n\t\t\t\t\tif (d instanceof Date) // Already converted\n\t\t\t\t\t\treturn d;\n\t\t\t\t\tvar val = this.getValue(d);\n\t\t\t\t\tif (!val)\n\t\t\t\t\t\treturn null;\n\t\t\t\t\tvar m = /^([0-9]{4})-([0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2})$/.exec(val);\n\t\t\t\t\tif (!m) {\n\t\t\t\t\t\t$log.error('Unexpected. Date value format returned by REST is unrecognizable');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// We need to adjust the time if either date (today's and currently being processed) falls in DST\n\t\t\t\t\tval = this._adjustDueToDST(val);\n\t\t\t\t\t// We use value since it is guaranteed to return date time in internal format and 99% times it will be in UTC.\n\t\t\t\t\t// For the 1% need to file PRB against Table API to use getUTCValue() instead of getValue() for date fields.\n\t\t\t\t\t//.................................Y..............M.................D............H...............m...............s\n\t\t\t\t\tvar parsedDateMs = Date.UTC(parseInt(m[1]), parseInt(m[2]) - 1, parseInt(m[3]), parseInt(m[4]), parseInt(m[5]), parseInt(m[6]));\n\t\t\t\t\tvar actualDate = moment(parsedDateMs).tz(g_tz).format(dateTimeFormat);\n\t\t\t\t\treturn moment.tz(actualDate, dateTimeFormat, moment.tz.guess()).toDate();\n\t\t\t\t},\n\t\t\t\tjsToWsDate: function (d, factorGetRelatedWindows) {\n\t\t\t\t\tif (d) {\n\t\t\t\t\t\tvar dOffsetBefore = d.getTimezoneOffset();\n\t\t\t\t\t\tvar dtime =  d.getTime();\n\t\t\t\t\t\t// Do not manipulate provided date when getting date for getRelatedWindows request\n\t\t\t\t\t\tif (!factorGetRelatedWindows)\n\t\t\t\t\t\t\td = new Date(dtime - getUserTzOffsetInMs(dtime));\n\t\t\t\t\t\tvar dOffsetAfter = d.getTimezoneOffset();\n\t\t\t\t\t\t// Factor shift in DST when getting related windows\n\t\t\t\t\t\tif (factorGetRelatedWindows && (dOffsetBefore !== dOffsetAfter)) {\n\t\t\t\t\t\t\tvar offsetDiff = dOffsetBefore - dOffsetAfter;\n\t\t\t\t\t\t\td = new Date(d.getTime() - (offsetDiff * 60000));\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn d.getFullYear() + '-' + getZeroPadded(d.getMonth() + 1) + '-' + getZeroPadded(d.getDate())\n\t\t\t\t\t\t\t+ ' ' + getZeroPadded(d.getHours()) + ':' + getZeroPadded(d.getMinutes()) + ':' + getZeroPadded(d.getSeconds());\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tjsToM: function (d, timezone) {\n\t\t\t\t\t// Convert js Date object to momentJs object\n\t\t\t\t\tif (!d)\n\t\t\t\t\t\treturn null;\n\t\t\t\t\tif (d._isAMomentObject)\n\t\t\t\t\t\treturn d;\n\t\t\t\t\tif (typeof d === \"object\") {\n\t\t\t\t\t\td = d.getFullYear() + '-' + getZeroPadded(d.getMonth() + 1) + '-' + getZeroPadded(d.getDate()) + ' ' + getZeroPadded(d.getHours()) + ':' + getZeroPadded(d.getMinutes()) + ':' + getZeroPadded(d.getSeconds());\n\t\t\t\t\t\treturn moment.tz(d, \"YYYY-MM-DD HH:mm:ss\", timezone);\n\t\t\t\t\t}\n\t\t\t\t\treturn moment.tz(d, dateTimeFormat, timezone);\n\t\t\t\t},\n\t\t\t\tstrToNum: function (s, defaultVal) {\n\t\t\t\t\tif (!defaultVal)\n\t\t\t\t\t\tdefaultVal = 0;\n\t\t\t\t\treturn s ? s * 1 : defaultVal;\n\t\t\t\t},\n\t\t\t\tdateToFriendlyText: function (date) {\n\t\t\t\t\tif (date) {\n\t\t\t\t\t\tvar d = date.getDate();\n\t\t\t\t\t\tvar m = monthNames[date.getMonth()];\n\t\t\t\t\t\tvar h = getZeroPadded(date.getHours());\n\t\t\t\t\t\tvar min = getZeroPadded(date.getMinutes());\n\t\t\t\t\t\treturn i18n.getMessage(m) + \" \" + d + \" \" + calendarUtils.getScheduler().date.date_to_str(timeFormat)(date);\n\t\t\t\t\t}\n\t\t\t\t\treturn i18n.getMessage('Unbounded');\n\t\t\t\t},\n\t\t\t\tdateRangeToFriendlyText: function (startDate, endDate) {\n\t\t\t\t\tvar sUnbounded = !startDate;\n\t\t\t\t\tif (!sUnbounded) {\n\t\t\t\t\t\tvar sD = startDate.getDate();\n\t\t\t\t\t\tvar sM = monthNames[startDate.getMonth()];\n\t\t\t\t\t\tvar sH = getZeroPadded(startDate.getHours());\n\t\t\t\t\t\tvar sMin = getZeroPadded(startDate.getMinutes());\n\t\t\t\t\t}\n\n\t\t\t\t\tvar eUnbounded = !endDate;\n\t\t\t\t\tif (!eUnbounded) {\n\t\t\t\t\t\tvar eD = endDate.getDate();\n\t\t\t\t\t\tvar eM = monthNames[endDate.getMonth()];\n\t\t\t\t\t\tvar eH = getZeroPadded(endDate.getHours());\n\t\t\t\t\t\tvar eMin = getZeroPadded(endDate.getMinutes());\n\t\t\t\t\t}\n\n\t\t\t\t\tvar msg = i18n.getMessage(\"{0} to {1}\");\n\t\t\t\t\tvar a;\n\t\t\t\t\tvar b;\n\t\t\t\t\tif (!sUnbounded)\n\t\t\t\t\t\ta = i18n.getMessage(sM) + \" \" + sD + \" \" + calendarUtils.getScheduler().date.date_to_str(timeFormat)(startDate);\n\t\t\t\t\telse\n\t\t\t\t\t\ta = i18n.getMessage('Unbounded');\n\n\t\t\t\t\tif (!eUnbounded) {\n\t\t\t\t\t\tif (sUnbounded || sM !== eM || sD !== eD)\n\t\t\t\t\t\t\tb = i18n.getMessage(eM) + \" \" + eD + \" \" + calendarUtils.getScheduler().date.date_to_str(timeFormat)(endDate);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tb = calendarUtils.getScheduler().date.date_to_str(timeFormat)(endDate);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (sUnbounded) // When both unbounded then send a single 'Unbounded' msg.\n\t\t\t\t\t\t\treturn a;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tb = i18n.getMessage('Unbounded');\n\t\t\t\t\t}\n\t\t\t\t\treturn i18n.format(msg, [a, b]);\n\t\t\t\t},\n\t\t\t\tgetFirstDayOfWeek: function () {\n\t\t\t\t\tif (typeof firstDayOfWeek === 'undefined') {\n\t\t\t\t\t\t$log.warn('firstDayOfWeek not found falling back to 1');\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t}\n\t\t\t\t\treturn firstDayOfWeek;\n\t\t\t\t},\n\t\t\t\tmergeSortedArrays: function (a, b, comparator) {\n\t\t\t\t\tvar c = [];\n\t\t\t\t\tvar ca = 0;\n\t\t\t\t\tvar cb = 0;\n\t\t\t\t\tvar va;\n\t\t\t\t\tvar vb;\n\t\t\t\t\tvar aNotEmpty;\n\t\t\t\t\tvar bNotEmpty;\n\t\t\t\t\twhile (ca < a.length || cb < b.length) {\n\t\t\t\t\t\taNotEmpty = ca < a.length;\n\t\t\t\t\t\tbNotEmpty = cb < b.length;\n\t\t\t\t\t\tvar finalVal;\n\t\t\t\t\t\tif (aNotEmpty) {\n\t\t\t\t\t\t\tva = a[ca];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (bNotEmpty) {\n\t\t\t\t\t\t\tvb = b[cb];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (aNotEmpty && bNotEmpty) {\n\t\t\t\t\t\t\tif (comparator(va, vb) <= 0) {\n\t\t\t\t\t\t\t\tc.push(va);\n\t\t\t\t\t\t\t\tca++;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tc.push(vb);\n\t\t\t\t\t\t\t\tcb++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (aNotEmpty) {\n\t\t\t\t\t\t\tc.push(va);\n\t\t\t\t\t\t\tca++;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tc.push(vb);\n\t\t\t\t\t\t\tcb++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn c;\n\t\t\t\t}\n\t\t\t};\n\t\t}];\n\t})\n\t.filter('dateToFriendlyText', function (dataUtil, $log) {\n\t\treturn function (input) {\n\t\t\tif (!(input instanceof Date)) {\n\t\t\t\t$log.warn('dateToFriendlyText filter: Did not get date object as expected');\n\t\t\t\tinput = new Date(input);\n\t\t\t}\n\t\t\treturn dataUtil.dateToFriendlyText(input);\n\t\t};\n\t})\n\t.filter('dateRangeToFriendlyText', function (dataUtil, $log) {\n\t\treturn function (start, end) {\n\t\t\tif (!(start instanceof Date)) {\n\t\t\t\t$log.warn('dateRangeToFriendlyText filter: Did not get start date object as expected');\n\t\t\t\tstart = new Date(start);\n\t\t\t}\n\t\t\tif (!(end instanceof Date)) {\n\t\t\t\t$log.warn('dateRangeToFriendlyText filter: Did not get end date object as expected');\n\t\t\t\tend = new Date(end);\n\t\t\t}\n\t\t\treturn dataUtil.dateRangeToFriendlyText(start, end);\n\t\t};\n\t});\n\n} ());","sys_class_name":"sys_ui_script","sys_id":"eadd25160b2332005775aabcb4673a63","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/3eb7af7f04b12210559073c06a02f7fb","value":"3eb7af7f04b12210559073c06a02f7fb"},"ui_type":"0","sys_update_name":"sys_ui_script_eadd25160b2332005775aabcb4673a63","sys_updated_by":"admin","sys_created_on":"2017-06-26 13:29:18","name":"change_calendar_vcom.dataUtil","sys_name":"change_calendar_vcom.dataUtil","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"2","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2017-12-31 19:57:44","sys_tags":"","script_name":"popover","script":"angular.module(\"sn.chg_soc.popover\", [])\n\t.directive(\"snPopoverAccessibilityFocus\", [\"$parse\", \"SOC\", function ($parse, SOC) {\n\t\treturn {\n\t\t\trestrict: 'A',\n\t\t\tlink: function ($scope, $element, $attr) {\n\t\t\t\t$element.on('keydown', function(evt) {\n\t\t\t\t\tif (evt.keyCode === SOC.KEYS.TABKEY) {\n\t\t\t\t\t\tvar popover = angular.element(this);\n\t\t\t\t\t\tvar list = popover.find('button, div[tabindex]').not('[tabindex=\"-1\"]');\n\t\t\t\t\t\tvar focused = angular.element(document.activeElement);\n\t\t\t\t\t\tvar nav = focused.parents('[sn-popover-accessibility-focus]');\n\t\t\t\t\t\tif (nav.length) {\n\t\t\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\t\t\tvar index;\n\t\t\t\t\t\t\tvar next;\n\t\t\t\t\t\t\tif (typeof index == \"undefined\")\n\t\t\t\t\t\t\t\tindex = list.index(focused);\n\t\t\t\t\t\t\tif (!evt.shiftKey)\n\t\t\t\t\t\t\t\tindex = (index == list.length - 1) ? 0 : index + 1;\n\t\t\t\t\t\t\telse if (evt.shiftKey)\n\t\t\t\t\t\t\t\tindex = (index == 0) ? list.length - 1: index - 1;\n\t\t\t\t\t\t\tnext = list.get(index);\n\t\t\t\t\t\t\tif (next)\n\t\t\t\t\t\t\t\tnext.focus();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (evt.keyCode === SOC.KEYS.ESCAPE) {\n\t\t\t\t\t\tangular.element(\".popover\").popover(\"destroy\");\n\t\t\t\t\t\tangular.element(\"[soc-popover]\").focus();\n\t\t\t\t\t\tangular.element(\"[soc-popover]\").attr(\"aria-expanded\", \"false\");\n\t\t\t\t\t\tangular.element(\"[soc-popover]\").removeAttr(\"soc-popover\");\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t}]);","sys_class_name":"sys_ui_script","sys_id":"ed07527ac31303009f93dfdc64d3aeee","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"ui_type":"","sys_update_name":"sys_ui_script_ed07527ac31303009f93dfdc64d3aeee","sys_updated_by":"admin","sys_created_on":"2017-12-31 15:44:23","name":"sn_chg_soc.popover","sys_name":"sn_chg_soc.popover","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"0","active":"true","description":"Generic angularJs directive to check whether the text is overflowing","use_scoped_format":"false","global":"false","sys_updated_on":"2020-07-14 15:24:34","sys_tags":"","script_name":"","script":"angular.module('sn.itsm.change.overflow', [])\n    .directive('checkOverflow', ['$timeout', function($timeout) {\n        return {\n            restrict: 'A',\n            link: function(scope, element) {\n                var checked = false;\n\n                function setOverflowFlag(event) {\n                    scope.$applyAsync(function() {\n                        if (checked) {\n                            checked = false;\n                            return;\n                        }\n\n                        var visibleWidth = element[0].clientWidth;\n                        var contentWidth = element[0].scrollWidth;\n                        scope.overflows = contentWidth > visibleWidth;\n\n                        if (scope.overflows) {\n                            $timeout(function() {\n                                checked = true;\n                                element.triggerHandler('mouseenter', event);\n                            });\n                        }\n                    });\n                }\n                element.on('mouseenter', setOverflowFlag);\n            }\n        };\n    }]);","sys_class_name":"sys_ui_script","sys_id":"f0d2cbb0c302101035ae3f52c1d3ae51","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/32b7af7f04b12210559073c06a02f7fb","value":"32b7af7f04b12210559073c06a02f7fb"},"ui_type":"0","sys_update_name":"sys_ui_script_f0d2cbb0c302101035ae3f52c1d3ae51","sys_updated_by":"admin","sys_created_on":"2020-07-14 15:24:34","name":"sn.itsm.change.overflow","sys_name":"sn.itsm.checkOverflow.directive","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"0","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2018-01-26 09:42:50","sys_tags":"","script_name":"gantt","script":"angular.module(\"sn.chg_soc.gantt\", [])\n\t.service(\"ganttChart\", [\"$window\", \"SOC\", function($window, SOC) {\n\t\tvar ganttChart = this;\n\t\tvar ganttInstance = {};\n\n\t\tfunction GanttModel(id) {\n\t\t\tthis.id = id;\n\t\t\tthis.gantt = $window.Gantt.getGanttInstance(id);\n\t\t\tthis.taskLayerId = \"\";\n\n\t\t\tthis.addTaskLayer = function(taskLayerRenderer) {\n\t\t\t\tif (typeof taskLayerRenderer !== \"function\")\n\t\t\t\t\treturn;\n\n\t\t\t\tthis.taskLayerId = this.gantt.addTaskLayer(taskLayerRenderer);\n\t\t\t};\n\n\t\t\tthis.removeTaskLayer = function() {\n\t\t\t\tif (!this.taskLayerId)\n\t\t\t\t\treturn;\n\t\t\t\tthis.gantt.removeTaskLayer(this.taskLayerId);\n\t\t\t\tthis.taskLayerId = \"\";\n\t\t\t};\n\t\t}\n\n\t\tganttChart.getInstance = function(id) {\n\t\t\tif (ganttInstance[id])\n\t\t\t\treturn ganttInstance[id];\n\n\t\t\tganttInstance[id] = new GanttModel(id);\n\t\t\treturn ganttInstance[id];\n\t\t};\n\n\t\tganttChart.getGantt = function(id) {\n\t\t\tif (ganttInstance[id])\n\t\t\t\treturn ganttInstance[id].gantt;\n\n\t\t\treturn null;\n\t\t};\n\n\t\tganttChart.updateGanttData = function(id, data) {\n\t\t\tvar records = (data && data.data) ? records = data : { \"data\" : data, \"links\" : [] };\n\t\t\trecords.links = (data && data.links) ? data.links : [];\n\t\t\tvar gantt = ganttChart.getGantt(id);\n\t\t\tgantt.clearAll();\n\t\t\tganttChart.addNowMarker(id);\n\t\t\tgantt.parse(records, \"json\");\n\t\t};\n\n\t\tganttChart.updateMarkerInterval = function(id, markerId) {\n\t\t\tvar gantt = ganttChart.getGantt(id);\n\t\t\tvar dateToStr = gantt.date.date_to_str(gantt.config.task_date);\n\t\t\tvar today = gantt.getMarker(markerId);\n\t\t\ttoday.start_date = new Date();\n\t\t\ttoday.title = dateToStr(today.start_date);\n\t\t\tgantt.updateMarker(markerId);\n\t\t};\n\n\t\tganttChart.addNowMarker = function(id) {\n\t\t\tvar gantt = ganttChart.getGantt(id);\n\t\t\tvar dateToStr = gantt.date.date_to_str(gantt.config.task_date);\n\t\t\tvar markerId = gantt.addMarker({\n\t\t\t\tstart_date: new Date(),\n\t\t\t\tcss: \"today-marker\",\n\t\t\t\ttitle: dateToStr(new Date()),\n\t\t\t\ttext: \" \"\n\t\t\t});\n\t\t\tsetInterval(ganttChart.updateMarkerInterval(id, markerId), 1000*60);\n\t\t};\n\t}])\n\t.service(\"ganttScale\", [\"ganttChart\", \"urlService\", \"userPreferences\", \"SOC\", function(ganttChart, urlService, userPreferences, SOC) {\n\t\tvar ganttScale = this;\n\n\t\tvar getDateByRangeUnit = function(dateObject, rangeMember, rangeUnit) {\n\t\t\treturn moment(dateObject)[rangeMember](rangeUnit).toDate();\n\t\t};\n\n\t\tvar getScaleWidth = function() {\n\t\t\tvar width = 0;\n\t\t\tvar ganttScale = angular.element(\".gantt_task\");\n\t\t\tvar ganttVertScroll = angular.element(\".gantt_ver_scroll\");\n\t\t\tif (ganttScale) {\n\t\t\t\twidth = ganttScale.width();\n\t\t\t\tif (ganttVertScroll)\n\t\t\t\t\twidth -= ganttVertScroll.width();\n\t\t\t}\n\t\t\treturn width;\n\t\t};\n\n\t\tvar weekTemplate = function (date) {\n\t\t\t// Using gantt object attached to window as date translations only work\n\t\t\t// when locale is defined on this gantt object and not instance of gantt.\n\t\t\tvar dateFormatter = gantt.date.date_to_str(\"%j %M %Y\");\n\t\t\tvar mDate = moment(date);\n\n\t\t\tvar startOfWeek = dateFormatter(mDate.startOf(SOC.ISO_WEEK).toDate());\n\t\t\tvar endOfWeek = dateFormatter(mDate.endOf(SOC.ISO_WEEK).toDate());\n\t\t\treturn startOfWeek + \" - \" + endOfWeek;\n\t\t};\n\n\t\tganttScale.startDate = new Date();\n\t\tganttScale.endDate = new Date();\n\t\t// 10 levels in total, indexed from 0.\n\t\tganttScale.level = 6;\n\t\tganttScale.scales = [\n\t\t\t{// 1 year\n\t\t\t\tdate_scale: \"%Y\",\n\t\t\t\tscale_unit: \"year\",\n\t\t\t\tstep: 1,\n\t\t\t\tcolumns: 12,\n\t\t\t\tmin_column_width: 70,\n\t\t\t\tsubscales: [{ unit: \"month\", step: 1, date: \"%F\"}],\n\t\t\t\trange_unit: \"year\",\n\t\t\t\ttemplate: null\n\t\t\t},\n\t\t\t{// 6 months\n\t\t\t\tdate_scale: \"%Y\",\n\t\t\t\tscale_unit: \"month\",\n\t\t\t\tstep: 6,\n\t\t\t\tcolumns: 6,\n\t\t\t\tmin_column_width: 60,\n\t\t\t\tsubscales: [{ unit: \"month\", step: 1, date: \"%F\"}],\n\t\t\t\trange_unit: \"year\",\n\t\t\t\ttemplate: null\n\t\t\t},\n\t\t\t{// 3 months\n\t\t\t\tdate_scale: \"%Y\",\n\t\t\t\tscale_unit: \"month\",\n\t\t\t\tstep: 3,\n\t\t\t\tcolumns: 3,\n\t\t\t\tmin_column_width: 60,\n\t\t\t\tsubscales: [{ unit: \"month\", step: 1, date: \"%F\"}],\n\t\t\t\trange_unit: \"year\",\n\t\t\t\ttemplate: null\n\t\t\t},\n\t\t\t{// 1 month\n\t\t\t\tdate_scale: \"%F %Y\",\n\t\t\t\tscale_unit: \"month\",\n\t\t\t\tstep: 1,\n\t\t\t\tcolumns: 30,\n\t\t\t\tmin_column_width: 24,\n\t\t\t\tsubscales: [{ unit: \"day\", step: 1, date: \"%j\" }],\n\t\t\t\trange_unit: \"month\",\n\t\t\t\ttemplate: null\n\t\t\t},\n\t\t\t{// 2 weeks\n\t\t\t\tscale_unit: \"day\",\n\t\t\t\tstep: 7,\n\t\t\t\tcolumns: 14,\n\t\t\t\tmin_column_width: 60,\n\t\t\t\tsubscales: [{ unit:\"day\", step:1, date: \"%D, %j\" }],\n\t\t\t\trange_unit: SOC.ISO_WEEK,\n\t\t\t\ttemplate: weekTemplate\n\t\t\t},\n\t\t\t{// 1 week\n\t\t\t\tdate_scale: \"%j %M %Y\",\n\t\t\t\tscale_unit: \"day\",\n\t\t\t\tstep: 1,\n\t\t\t\tcolumns: 14,\n\t\t\t\tmin_column_width: 50,\n\t\t\t\tsubscales: [{ unit: \"hour\", step:12, date: \"%H:%i\" }],\n\t\t\t\trange_unit: \"day\",\n\t\t\t\ttemplate: null\n\t\t\t},\n\t\t\t{// 5 days - Default\n\t\t\t\tdate_scale: \"%j %M %Y\",\n\t\t\t\tscale_unit: \"day\",\n\t\t\t\tstep: 1,\n\t\t\t\tcolumns: 15,\n\t\t\t\tmin_column_width: 50,\n\t\t\t\tsubscales: [{ unit: \"hour\", step:8, date: \"%H:%i\" }],\n\t\t\t\trange_unit: \"day\",\n\t\t\t\ttemplate: null\n\t\t\t},\n\t\t\t{// 24 hours\n\t\t\t\tdate_scale: \"%j %M %Y\",\n\t\t\t\tscale_unit: \"hour\",\n\t\t\t\tstep: 12,\n\t\t\t\tcolumns: 24,\n\t\t\t\tmin_column_width: 50,\n\t\t\t\tsubscales: [{ unit: \"hour\", step:1, date: \"%H:%i\" }],\n\t\t\t\trange_unit: \"day\",\n\t\t\t\ttemplate: null\n\t\t\t},\n\t\t\t{// 16 hours\n\t\t\t\tdate_scale: \"%j %M %Y\",\n\t\t\t\tscale_unit: \"hour\",\n\t\t\t\tstep: 8,\n\t\t\t\tcolumns: 16,\n\t\t\t\tmin_column_width: 50,\n\t\t\t\tsubscales: [{ unit: \"hour\", step:1, date: \"%H:%i\" }],\n\t\t\t\trange_unit: \"day\",\n\t\t\t\ttemplate: null\n\t\t\t},\n\t\t\t{// 8 hours\n\t\t\t\tdate_scale: \"%j %M %Y\",\n\t\t\t\tscale_unit: \"hour\",\n\t\t\t\t// As this has a sub-scale, this step will be used to group the sub-scale\n\t\t\t\t// Each \"8\" hour block will hold 8 cells of 1 hour each\n\t\t\t\tstep: 8,\n\t\t\t\tcolumns: 8,\n\t\t\t\tmin_column_width: 50,\n\t\t\t\t// Sub-scale specifies that each sub-cell should represent 1 hour\n\t\t\t\tsubscales: [{ unit: \"hour\", step:1, date: \"%H:%i\" }],\n\t\t\t\trange_unit: \"day\",\n\t\t\t\ttemplate: null\n\t\t\t}\n\t\t];\n\t\tganttScale.scaleMax = ganttScale.scales.length - 1;\n\n\t\tganttScale.setDateRange = function(tasks) {\n\t\t\tvar gantt = ganttChart.getGantt(urlService.socId);\n\t\t\tangular.forEach(tasks, function(task) {\n\t\t\t\tvar startDate = gantt.date.parseDate(task.start_date, SOC.DATE_FORMAT);\n\t\t\t\tvar endDate = gantt.date.parseDate(task.end_date, SOC.DATE_FORMAT);\n\t\t\t\tif (startDate && ganttScale.startDate.getTime() > startDate.getTime())\n\t\t\t\t\tganttScale.startDate = startDate;\n\t\t\t\tif (endDate && ganttScale.endDate.getTime() < endDate.getTime())\n\t\t\t\t\tganttScale.endDate = endDate;\n\t\t\t});\n\t\t};\n\n\t\tganttScale.configureScale = function(level) {\n\t\t\tvar gantt = ganttChart.getGantt(urlService.socId);\n\t\t\tif (typeof level === \"number\" && !isNaN(level))\n\t\t\t\tganttScale.level = level;\n\t\t\tganttScale.level = ganttScale.level < 0 ? 0 : ganttScale.level;\n\t\t\tganttScale.level = ganttScale.level > ganttScale.scales.length - 1 ? ganttScale.scales.length - 1 : ganttScale.level;\n\t\t\tgantt.config.date_scale = ganttScale.scales[ganttScale.level].date_scale;\n\t\t\tgantt.config.scale_unit = ganttScale.scales[ganttScale.level].scale_unit;\n\t\t\tgantt.config.step = ganttScale.scales[ganttScale.level].step;\n\t\t\tgantt.config.subscales = ganttScale.scales[ganttScale.level].subscales;\n\t\t\tgantt.config.start_date = getDateByRangeUnit(ganttScale.startDate, \"startOf\", ganttScale.scales[ganttScale.level].range_unit);\n\t\t\tgantt.config.end_date = getDateByRangeUnit(ganttScale.endDate, \"endOf\", ganttScale.scales[ganttScale.level].range_unit);\n\t\t\tvar minWidth = getScaleWidth() / ganttScale.scales[ganttScale.level].columns;\n\t\t\tgantt.config.min_column_width = minWidth > ganttScale.scales[ganttScale.level].min_column_width ? minWidth : ganttScale.scales[ganttScale.level].min_column_width;\n\t\t\tgantt.templates.date_scale = ganttScale.scales[ganttScale.level].template;\n\t\t};\n\n\t\tganttScale.zoom = function(level, definitionId) {\n\t\t\tganttScale.configureScale(level);\n\t\t\tuserPreferences.setPreference(SOC.ZOOM_LEVEL_PREF, ganttScale.level);\n\t\t\tvar gantt = ganttChart.getGantt(urlService.socId);\n\t\t\tgantt.render();\n\t\t};\n\n\t\tganttScale.getLevel = function() {\n\t\t\treturn ganttScale.level;\n\t\t};\n\n\t\tganttScale.setLevel = function(level) {\n\t\t\tganttScale.level = level;\n\t\t};\n\n\t\t(function(definitionId) {\n\t\t\tuserPreferences.getPreference(SOC.ZOOM_LEVEL_PREF).then(\n\t\t\t\tfunction(scaleLevel) {\n\t\t\t\t\tvar userLevel = parseInt(scaleLevel, 10);\n\t\t\t\t\tif (typeof userLevel !== \"number\" || isNaN(userLevel))\n\t\t\t\t\t\treturn;\n\t\t\t\t\tganttScale.zoom(userLevel, definitionId);\n\t\t\t\t});\n\t\t})(urlService.socId);\n\t}])\n\t.directive(\"ganttFullSize\", [\"ganttScale\", \"$window\", function(ganttScale, $window) {\n\t\treturn {\n\t\t\trestrict: 'A',\n\t\t\tlink: function($scope, $element, $attrs) {\n\t\t\t\tvar parentSibling = $attrs.ganttFullSize;\n\t\t\t\tvar directiveId = '.ganttFullSize' + $scope.$id;\n\t\t\t\tfunction adjust(configure) {\n\t\t\t\t\tif (!configure)\n\t\t\t\t\t\tganttScale.configureScale();\n\t\t\t\t\tangular.element($element).css({\n\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\tbottom: 0,\n\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\ttop: (angular.element(parentSibling).offset().top + angular.element(parentSibling).outerHeight()) + 'px'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tadjust(true);\n\t\t\t\tangular.element($window).on('resize' + directiveId, function () {\n\t\t\t\t\tadjust();\n\t\t\t\t});\n\t\t\t\t$scope.$on('$destroy', function () {\n\t\t\t\t\tangular.element($window).off(directiveId);\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t}]);","sys_class_name":"sys_ui_script","sys_id":"f1101ef6c31303009f93dfdc64d3ae7c","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"ui_type":"","sys_update_name":"sys_ui_script_f1101ef6c31303009f93dfdc64d3ae7c","sys_updated_by":"admin","sys_created_on":"2017-12-31 15:18:35","name":"sn_chg_soc.gantt","sys_name":"sn_chg_soc.gantt","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"1","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2025-06-05 05:18:18","sys_tags":"","script_name":"","script":"(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\nm=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n})(window,document,'script','//www.google-analytics.com/analytics.js','ga');","sys_class_name":"sys_ui_script","sys_id":"f1b2c3045b011200e39fc7ad31f91a49","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/69996b7b04f12210559073c06a02f7e2","value":"69996b7b04f12210559073c06a02f7e2"},"ui_type":"0","sys_update_name":"sys_ui_script_f1b2c3045b011200e39fc7ad31f91a49","sys_updated_by":"system","sys_created_on":"2016-01-14 20:54:22","name":"Google Analytics","sys_name":"Google Analytics","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"13","active":"true","description":"UI script that initializes user upload directive.","use_scoped_format":"false","global":"false","sys_updated_on":"2018-03-09 18:47:15","sys_tags":"","script_name":"rec_upload_controller","script":"var recipient_list_detail = angular.module('RecipientListModule', ['sn.ngUserSelection']);\nrecipient_list_detail.controller('RecipientListContentController', function($scope, $attrs, $http) {\n\t\n\t$scope.setUpMethod = g_form.getValue('method');\n\t\n\tCustomEvent.observe(\"recipient_list.method.changed\", function(method){\n\t\t$scope.setUpMethod = method;\n\t\t$scope.$apply();\n\t});\n\t\n\t$scope.startingDirective = function(){\n\t\t\n\t};\n});","sys_class_name":"sys_ui_script","sys_id":"f423889187801300d99a8467a7cb0b59","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/0fdd6483d72302004f1e82285e61033a","value":"0fdd6483d72302004f1e82285e61033a"},"ui_type":"","sys_update_name":"sys_ui_script_f423889187801300d99a8467a7cb0b59","sys_updated_by":"admin","sys_created_on":"2018-02-01 19:53:49","name":"sn_publications.rec_upload_controller","sys_name":"sn_publications.rec_upload_controller","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/0fdd6483d72302004f1e82285e61033a","value":"0fdd6483d72302004f1e82285e61033a"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"4","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2020-08-14 15:09:53","sys_tags":"","script_name":"data","script":"angular.module(\"sn.chg_soc.data\", [])\n\t.service(\"dataService\", [\"$http\", \"$q\", \"$window\", \"i18n\", \"urlService\", \"ganttChart\", \"durationFormatter\", \"SOC\", \"$filter\", function($http, $q, $window, i18n, urlService, ganttChart, durationFormatter, SOC, $filter) {\n\t\tvar dataService = this;\n\n\t\tdataService.more = false;\n\t\tdataService.count = 0;\n\t\tdataService.child_table = {};\n\t\tdataService.definition = {};\n\t\tdataService.style = {\n\t\t\tchg_soc_style_rule: {},\n\t\t\tchg_soc_definition_style_rule: {},\n\t\t\tchg_soc_def_child_style_rule: {},\n\t\t\tstyle_sheet: \"\"\n\t\t};\n\t\tdataService.tasks = {\n\t\t\tdata: [],\n\t\t\tlinks: []\n\t\t};\n\t\tdataService.allRecords = {};\n\n\t\tfunction isValidDate(date) {\n\t\t\tif (Object.prototype.toString.call(date) === \"[object Date]\" && !isNaN(date.getTime()))\n\t\t\t\treturn true;\n\t\t\treturn false;\n\t\t}\n\n\t\tfunction buildFields(record, selectedFieldsList, tableMeta) {\n\t\t\tvar result = [];\n\t\t\tif (!selectedFieldsList)\n\t\t\t\treturn result;\n\t\t\tvar selectedFields = selectedFieldsList.split(\",\");\n\t\t\tselectedFields.forEach(function(fieldName) {\n\t\t\t\tif (fieldName && tableMeta[fieldName])\n\t\t\t\t\tresult.push({\n\t\t\t\t\t\tcolumn_name: fieldName,\n\t\t\t\t\t\tlabel: tableMeta[fieldName].label,\n\t\t\t\t\t\tdisplay_value: record[fieldName].display_value,\n\t\t\t\t\t\tvalue: record[fieldName].value,\n\t\t\t\t\t});\n\t\t\t});\n\t\t\treturn result;\n\t\t}\n\n\t\tfunction buildRecord(record, chgSocDef, tableMeta, styleRule, scheduleWindow) {\n\t\t\tvar ganttUtil = ganttChart.getGantt(urlService.socId);\n\t\t\tvar startDate = ganttUtil.date.parseDate(record[chgSocDef.start_date_field.value].display_value_internal, \"xml_date\");\n\t\t\tvar endDate = ganttUtil.date.parseDate(record[chgSocDef.end_date_field.value].display_value_internal, \"xml_date\");\n\t\t\t// Check start/end dates are valid before adding the task to gantt chart\n\t\t\tif (!isValidDate(startDate) || !isValidDate(endDate))\n\t\t\t\treturn;\n\n\t\t\tvar recordEvent = {\n\t\t\t\tid: record.sys_id ? record.sys_id.value : \"\",\n\t\t\t\ttext: record.number ? record.number.display_value : \"\",\n\t\t\t\tnumber: record.number ? record.number.display_value : \"\",\n\t\t\t\tchg_soc_def: chgSocDef.sys_id.value,\n\t\t\t\tconfig_item: record.cmdb_ci ? record.cmdb_ci.display_value : \"\",\n\t\t\t\tstart_date: startDate,\n\t\t\t\tend_date: endDate,\n\t\t\t\tdur_display: durationFormatter.buildDurationDisplay(startDate, endDate),\n\t\t\t\torder: 0,\n\t\t\t\tprogress: 0,\n\t\t\t\ttable: record.sys_class_name ? record.sys_class_name.value : chgSocDef.table_name.value,\n\t\t\t\tleft_fields: buildFields(record, chgSocDef.popover_left_col_fields.value, tableMeta),\n\t\t\t\tright_fields: buildFields(record, chgSocDef.popover_right_col_fields.value, tableMeta),\n\t\t\t\trecord: record,\n\t\t\t\tblackout_spans: [],\n\t\t\t\tmaint_spans: [],\n\t\t\t\tsys_id: record.sys_id ? record.sys_id.value : \"\",\n\t\t\t\t__visible: true\n\t\t\t};\n\n\t\t\tif (styleRule && styleRule.sys_id)\n\t\t\t\trecordEvent.style_class = SOC.STYLE_PREFIX + styleRule.sys_id;\n\n\t\t\tif (scheduleWindow) {\n\t\t\t\tif (chgSocDef.show_maintenance.value)\n\t\t\t\t\tangular.forEach(scheduleWindow.maintenance, function (schedule) {\n\t\t\t\t\t\tArray.prototype.push.apply(recordEvent.maint_spans, schedule.spans);\n\t\t\t\t\t});\n\t\t\t\tif (chgSocDef.show_blackout.value)\n\t\t\t\t\tangular.forEach(scheduleWindow.blackout, function (schedule) {\n\t\t\t\t\t\tArray.prototype.push.apply(recordEvent.blackout_spans, schedule.spans);\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\trecordEvent.id = chgSocDef.sys_id.value + \"_\" + recordEvent.id;\n\t\t\t\trecordEvent.parent = record[chgSocDef.reference_field.value].value;\n\t\t\t}\n\n\t\t\tdataService.allRecords[recordEvent.id] = {\n\t\t\t\tstyle_rule: styleRule,\n\t\t\t\tsys_id: record.sys_id ? record.sys_id.value : \"\",\n\t\t\t\ttable_name: record.sys_class_name ? record.sys_class_name.value : chgSocDef.table_name.value,\n\t\t\t\tchg_soc_def: chgSocDef.sys_id.value\n\t\t\t};\n\n\t\t\treturn recordEvent;\n\t\t}\n\n\t\tfunction buildItem(result, item) {\n\t\t\t// Build change_request record\n\t\t\tvar record = buildRecord(result[item.table_name][item.sys_id], result.chg_soc_definition, result[item.table_name].__table_meta, item.style, item.schedule_window);\n\t\t\tif (!record)\n\t\t\t\treturn;\n\n\t\t\tdataService.tasks.data.push(record);\n\n\t\t\t// Build related tasks\n\t\t\tif (item.related)\n\t\t\t\tfor (var childSocDefId in item.related) {\n\t\t\t\t\tvar childRecords = item.related[childSocDefId];\n\t\t\t\t\tfor (var i = 0; i < childRecords.length; i++) {\n\t\t\t\t\t\tvar childRecord = buildRecord(result[childRecords[i].table_name][childRecords[i].sys_id], result.chg_soc_definition.__child[childSocDefId], result[childRecords[i].table_name].__table_meta, childRecords[i].style);\n\t\t\t\t\t\tif (childRecord)\n\t\t\t\t\t\t\tdataService.tasks.data.push(childRecord);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t}\n\n\t\tdataService.buildData = function(result) {\n\t\t\tif (!result)\n\t\t\t\treturn;\n\n\t\t\tdataService.more = result.__more;\n\t\t\tdataService.count = result.__change_count;\n\n\t\t\t// Start with the definition object\n\t\t\tif (result.chg_soc_definition)\n\t\t\t\tdataService.definition = result.chg_soc_definition;\n\n\t\t\t// Ordered change requests with style and related records\n\t\t\tif (result.__struct)\n\t\t\t\tfor (var i = 0; i < result.__struct.length; i++)\n\t\t\t\t\tbuildItem(result, result.__struct[i]);\n\n\t\t\t// Find all child tables\n\t\t\tfor (var table in result)\n\t\t\t\tif (result[table].__has_children)\n\t\t\t\t\tdataService.child_table[table] = result[table].__table_meta;\n\n\t\t\t// Set style rules and style sheet to the model\n\t\t\tdataService.style.chg_soc_style_rule = result.chg_soc_style_rule;\n\t\t\tdataService.style.chg_soc_definition_style_rule = result.chg_soc_definition_style_rule;\n\t\t\tdataService.style.chg_soc_def_child_style_rule = result.chg_soc_def_child_style_rule;\n\t\t\tdataService.style.style_sheet = result._css;\n\t\t};\n\n\t\tdataService.addData = function(result) {\n\t\t\tdataService.more = result.__more;\n\t\t\tdataService.count = result.__change_count;\n\n\t\t\tif (result.__struct)\n\t\t\t\tfor (var i = 0; i < result.__struct.length; i++)\n\t\t\t\t\tbuildItem(result, result.__struct[i]);\n\n\t\t\tfor (var table in result)\n\t\t\t\tif (result[table].__has_children)\n\t\t\t\t\tdataService.child_table[table] = result[table].__table_meta;\n\t\t};\n\n\t\tdataService.initPage = function(chgSocDefId, condition) {\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar url = SOC.GET_CHANGE_SCHEDULE + chgSocDefId;\n\t\t\tvar config = {};\n\t\t\tconfig.params = {\n\t\t\t\tsysparm_ck: $window.g_ck\n\t\t\t};\n\t\t\tif (condition)\n\t\t\t\tconfig.params.condition = condition;\n\t\t\t$http.get(url, config).then(function(response){\n\t\t\t\tdeferred.resolve(dataService.buildData(response.data.result));\n\t\t\t}, function(response) {\n\t\t\t\tdeferred.reject(response);\n\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tdataService.getChanges = function() {\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar url = SOC.GET_CHANGE_SCHEDULE + dataService.definition.sys_id.value;\n\t\t\tvar config = {};\n\t\t\tconfig.params = {\n\t\t\t\tsysparm_ck: $window.g_ck,\n\t\t\t\tcount: dataService.count\n\t\t\t};\n\t\t\tif (dataService.definition.condition.dryRun)\n\t\t\t\tconfig.params.condition = dataService.definition.condition.value;\n\n\t\t\t$http.get(url, config).then(function(response){\n\t\t\t\tdeferred.resolve(dataService.addData(response.data.result));\n\t\t\t}, function(response) {\n\t\t\t\tdeferred.reject(response);\n\t\t\t});\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tdataService.getChildren = function(parentId) {\n\t\t\tvar res = $filter(\"filter\")(dataService.tasks.data, function(task) {\n\t\t\t\treturn task.parent === parentId;\n\t\t\t});\n\t\t\treturn res;\n\t\t};\n\n\t\tdataService.destroyData = function() {\n\t\t\tdataService.more = false;\n\t\t\tdataService.count = 0;\n\t\t\tdataService.child_table = {};\n\t\t\tdataService.definition = {};\n\t\t\tdataService.style = {\n\t\t\t\tchg_soc_style_rule: {},\n\t\t\t\tchg_soc_definition_style_rule: {},\n\t\t\t\tchg_soc_def_child_style_rule: {},\n\t\t\t\tstyle_sheet: \"\"\n\t\t\t};\n\t\t\tdataService.tasks = {\n\t\t\t\tdata: [],\n\t\t\t\tlinks: []\n\t\t\t};\n\t\t\tdataService.allRecords = {};\n\t\t};\n\n\t\tdataService.parseQuery = function(condition) {\n\t\t\tcondition = condition + \"\";\n\t\t\tvar deferred = $q.defer();\n\t\t\tvar url = SOC.GET_PARSE_QUERY + condition;\n\t\t\tvar config = {};\n\t\t\tconfig.params = {};\n\t\t\tconfig.params.sysparm_ck = $window.g_ck;\n\n\t\t\t$http.get(url, config).then(function(response) {\n\t\t\t\tdeferred.resolve(response.data.result);\n\t\t\t}, function(response) {\n\t\t\t\tdeferred.reject(response);\n\t\t\t});\n\n\t\t\treturn deferred.promise;\n\t\t};\n\n\t\tfunction checkSecurityObject() {\n\t\t\treturn dataService.definition && dataService.definition.__security;\n\t\t}\n\n\t\tdataService.canCreate = function() {\n\t\t\tif (checkSecurityObject() && dataService.definition.__security.canCreate)\n\t\t\t\treturn dataService.definition.__security.canCreate;\n\t\t\treturn false;\n\t\t};\n\n\t\tdataService.canRead = function() {\n\t\t\tif (checkSecurityObject() && dataService.definition.__security.canRead)\n\t\t\t\treturn dataService.definition.__security.canRead;\n\t\t\treturn false;\n\t\t};\n\n\t\tdataService.canWrite = function() {\n\t\t\tif (checkSecurityObject() && dataService.definition.__security.canWrite)\n\t\t\t\treturn dataService.definition.__security.canWrite;\n\t\t\treturn false;\n\t\t};\n\n\t\tdataService.canDelete = function() {\n\t\t\tif (checkSecurityObject() && dataService.definition.__security.canDelete)\n\t\t\t\treturn dataService.definition.__security.canDelete;\n\t\t\treturn false;\n\t\t};\n\n\t\tdataService.trackEvent = function(source) {\n\t\t\tif ($window.GlideWebAnalytics && $window.GlideWebAnalytics.trackEvent)\n\t\t\t\t$window.GlideWebAnalytics.trackEvent('com.snc.change_management.soc', 'Change Schedules', source, 0, 0);\n\t\t};\n\t}]);","sys_class_name":"sys_ui_script","sys_id":"f427288e57b703009f9379a18d94f911","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"ui_type":"0","sys_update_name":"sys_ui_script_f427288e57b703009f9379a18d94f911","sys_updated_by":"admin","sys_created_on":"2018-01-22 20:08:08","name":"sn_chg_soc.data","sys_name":"sn_chg_soc.data","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"1","active":"true","description":"Module sn.change_management.cab.runtime_state.  Contains components which manage the runtime state of the CAB Workbench.","use_scoped_format":"false","global":"false","sys_updated_on":"2016-10-12 11:12:34","sys_tags":"","script_name":"rt","script":"angular.module(\"sn.change_management.cab.runtime_state\", ['ng.amb', 'sn.app_common', 'sn.change_management.cab.core','sn.change_management.cab.agenda']);","sys_class_name":"sys_ui_script","sys_id":"f48591d3d752220034d145bcce610323","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"ui_type":"","sys_update_name":"sys_ui_script_f48591d3d752220034d145bcce610323","sys_updated_by":"admin","sys_created_on":"2016-10-11 14:48:21","name":"sn_change_cab.rt","sys_name":"sn_change_cab.rt","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"61","active":"true","description":"When the requestor_location or special_instructions values change then update the cart so the information will be passed to the Request during checkout.","use_scoped_format":"false","global":"false","sys_updated_on":"2025-06-05 05:18:18","sys_tags":"","script_name":"","script":"var cartAjaxProcessor = 'CartAjaxProcessorV2';\n\nfunction storeCartDeliveryAddress(sysId, name, action, cartName) {\n\tvar control = gel(name);\n\tif (!control || !action)\n\t\treturn;\n\tvar ga = new GlideAjax(cartAjaxProcessor);\n\tga.addParam('sysparm_action', action);\n\tga.addParam('sysparm_value', control.value);\n\tga.addParam('sysparm_sys_id', sysId);\n\tga.addParam('sysparm_cart_name', cartName);\n\tga.getXML(function(response){\n\t\tif (response && response.responseXML && $('requestor_location')) {\n\t\t\tresponseJSON = response.responseXML.getElementsByTagName('item')[0].getAttribute('delivery_address').evalJSON();\n\t\t\tvar address = responseJSON.delivery_address.trim();\n\t\t\t$('requestor_location').value = address;\n\t\t\t$('requestor_location').title = address;\n\t\t}\n\t}, null, null);\n}\n\nfunction catSpecialInstructions(sysId, name, cartName) {\n\tvar control = gel(name);\n\tif (!control)\n\t\treturn;\n\tvar ga = new GlideAjax(cartAjaxProcessor);\n\tga.addParam('sysparm_action', 'set_special_instructions');\n\tga.addParam('sysparm_value', control.value);\n\tga.addParam('sysparm_sys_id', sysId);\n\tga.addParam('sysparm_cart_name', cartName);\n\tga.getXMLAnswer(function(){}, null, null);\n}\n\nfunction catLocation(name, target) {\n\tvar control = gel(name);\n\tif (!control)\n\t\treturn;\n\tvar ga = new GlideAjax(cartAjaxProcessor);\n\tga.addParam('sysparm_action', 'location');\n\tga.addParam('sysparm_value', control.value);\n\tga.getXML(function(response){\n\t\tif (response && response.responseXML && $(target)) {\n\t\t\tvar address = response.responseXML.getElementsByTagName('item')[0].getAttribute('payload');\n\t\t\t$(target).value = address;\n\t\t\t$(target).title = address;\n\t\t}\n\t}, null, null);\n}\n\nfunction catReqFor(name, target, cartName) {\n\tvar control = gel(name);\n\tif (!control)\n\t\treturn;\n\tvar ga = new GlideAjax(cartAjaxProcessor);\n\tga.addParam('sysparm_action', 'req_for');\n\tga.addParam('sysparm_value', control.value);\n\tga.addParam('sysparm_cart_name', cartName);\n\tga.getXML(function(response){\n\t\tif (response && response.responseXML && $(target)) {\n\t\t\tresponseJSON = response.responseXML.getElementsByTagName('item')[0].getAttribute('delivery_address').evalJSON();\n\t\t\tvar address = responseJSON.delivery_address.trim();\n\t\t\t$(target).title = address;\n\t\t\t$(target).value = address;\n\t\t\tvar cont = gel('location_ref_field');\n\t\t\tvar cont1 = gel('sys_display.location_ref_field');\n\t\t\tif (cont && cont1) {\n\t\t\t\tif (responseJSON.location != null && responseJSON.location != undefined)\n\t\t\t\t\tcont.value = responseJSON.location.trim();\n\t\t\t\tif (responseJSON.location_display_value != null && responseJSON.location_display_value != undefined)\n\t\t\t\t\tcont1.value = responseJSON.location_display_value.trim();\n\t\t\t}\n\t\t}\n\t}, null, null);\n}","sys_class_name":"sys_ui_script","sys_id":"f6a39a23d7222100f2d224837e6103e1","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/3028ab3304f12210559073c06a02f7b7","value":"3028ab3304f12210559073c06a02f7b7"},"ui_type":"0","sys_update_name":"sys_ui_script_f6a39a23d7222100f2d224837e6103e1","sys_updated_by":"system","sys_created_on":"2014-08-21 15:27:49","name":"CartCheckoutFunctionsV2","sys_name":"CartCheckoutFunctionsV2","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"1","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2018-01-21 12:22:56","sys_tags":"","script_name":"landing_tabs","script":"angular.module(\"sn.app_itsm.now.accessibility\", [])\n.constant(\"COMMON\", {\n        \"KEYS\" : {\n            \"TABKEY\"          : 9,\n            \"ENTER\"           : 13,\n            \"ESCAPE\"          : 27\n        }\n    }\n)\n.directive(\"focusMe\", function($timeout) {\n    return {\n        scope: { trigger: \"@focusMe\" },\n        link: function(scope, element) {\n            scope.$watch(\"trigger\", function(value) {\n                if (value === \"true\")\n                    $timeout(function() { element[0].focus(); });\n            });\n        }\n    };\n})\n.directive(\"snPopoverAccessibilityFocus\", [\"$parse\", \"COMMON\", function ($parse, COMMON) {\n    return {\n        restrict: 'A',\n        link: function ($scope, $element, $attr) {\n            var id = $attr.snPopoverAccessibilityFocus;\n            function handler(id, $scope, $element, evt) {\n                if (evt.keyCode === COMMON.KEYS.TABKEY) {\n                    var popover = angular.element($element);\n                    var list = popover.find('button:visible, [tabindex]:visible, input:visible, select:visible').not('[tabindex=\"-1\"], [disabled=\"disabled\"]');\n                    var focused = angular.element(document.activeElement);\n                    var nav = focused.parents('[sn-popover-accessibility-focus]');\n                    if (nav.length) {\n                        evt.preventDefault();\n                        var index;\n                        var next;\n                        if (typeof index == \"undefined\")\n                            index = list.index(focused);\n                        if (!evt.shiftKey)\n                            index = (index == list.length - 1) ? 0 : index + 1;\n                        else if (evt.shiftKey)\n                            index = (index == 0) ? list.length - 1: index - 1;\n                        next = list.get(index);\n                        if (next)\n                            next.focus();\n                    }\n                }\n                if (evt.keyCode === COMMON.KEYS.ESCAPE) {\n                    angular.element(\"#\" + id + \".soc-card-component .user-avatar-wrapper .user-avatar\").focus();\n                }\n            }\n            $element.on('keydown', handler.bind(this, id, $scope, $element));\n        }\n    };\n}]);","sys_class_name":"sys_ui_script","sys_id":"f7223de957f30300afc34786cc94f9ff","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"ui_type":"","sys_update_name":"sys_ui_script_f7223de957f30300afc34786cc94f9ff","sys_updated_by":"admin","sys_created_on":"2018-01-21 12:19:04","name":"sn_chg_soc.landing_accessibility","sys_name":"sn_chg_soc.landing_accessibility","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"8","active":"true","description":"Module sn.app_common.timers.  Definition of the codule containg various timers and timing timing components","use_scoped_format":"false","global":"false","sys_updated_on":"2016-10-13 14:20:58","sys_tags":"","script_name":"","script":"angular.module(\"sn.app_common.timers\", ['sn.common.util', 'sn.app_common'])\n\t.constant(\"TIMER_DEFAULT\", {\n\t\tDURATION: 5*60*1000,\n\t\tSIZE: \"70px\"\n\t});","sys_class_name":"sys_ui_script","sys_id":"f7a1d857d712220034d145bcce61039e","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/39fbaf7704352210559073c06a02f71e","value":"39fbaf7704352210559073c06a02f71e"},"ui_type":"","sys_update_name":"sys_ui_script_f7a1d857d712220034d145bcce61039e","sys_updated_by":"admin","sys_created_on":"2016-10-11 09:53:17","name":"app_com.timers","sys_name":"app_com.timers","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":"read"},{"ignore_in_now_experience":"false","sys_mod_count":"0","active":"true","description":"Controller confirmSharing.  Confirms sharing of meeting minutes","use_scoped_format":"false","global":"false","sys_updated_on":"2016-10-13 14:50:35","sys_tags":"","script_name":"vmisc.confirmSharing","script":"\nangular.module(\"sn.itsm.vcab.misc\").controller('confirmSharing', ['$scope', '$uibModalInstance', function($scope, $uibModalInstance) {\n\t\n\t$scope.share = function() {\n\t\t$uibModalInstance.close();\n\t};\n\t\n\t$scope.cancel = function() {\n\t\t$uibModalInstance.dismiss('cancel');\n\t};\n\t\n}]);\n","sys_class_name":"sys_ui_script","sys_id":"f949ab77d796220034d145bcce6103cb","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"ui_type":"","sys_update_name":"sys_ui_script_f949ab77d796220034d145bcce6103cb","sys_updated_by":"admin","sys_created_on":"2016-10-13 14:50:35","name":"sn_change_cab.vmisc.confirmSharing","sys_name":"sn_change_cab.vmisc.confirmSharing","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"2","active":"true","description":"Calendar Notification","use_scoped_format":"false","global":"false","sys_updated_on":"2022-09-30 05:54:05","sys_tags":"","script_name":"","script":"(function() {\n    'use strict';\n\n    angular.module('sn.calendar')\n\t.service('calendarNotificationService', ['snNotification', function(snNotification) {\n\t\tvar calendarNotificationService = this;\n\t\tvar msgContainer = \".notification-container\";\n\t\tvar options = {\n\t\t\ttop: 20,\n\t\t\tgap: 10,\n\t\t\tduration: 0\n\t\t};\n\t\tsnNotification.setOptions(options);\n\n\t\tcalendarNotificationService.hide = function() {\n\t\t\tangular.element(msgContainer).find(\".close\").click();\n\t\t};\n\t\tcalendarNotificationService.show = function(message, type) {\n\t\t\tvar duration = options.duration;\n\t\t\tvar container = msgContainer;\n\t\t\t// Maintain a single message at a time.\n\t\t\tcalendarNotificationService.hide();\n\t\t\tsnNotification.show(type, message, duration, null, container);\n\t\t};\n\t}]);\n}());","sys_class_name":"sys_ui_script","sys_id":"f9fcdc2253421110a6f8ddeeff7b128a","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/3b83a3f304312210559073c06a02f788","value":"3b83a3f304312210559073c06a02f788"},"ui_type":"0","sys_update_name":"sys_ui_script_f9fcdc2253421110a6f8ddeeff7b128a","sys_updated_by":"admin","sys_created_on":"2022-09-23 06:37:51","name":"clone_request_calendar_notification","sys_name":"clone_request_calendar_notification","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"2","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2018-02-07 19:13:17","sys_tags":"","script_name":"snCreateNewInvite","script":"angular.module(\"sn.chg_soc.snCreateNewInvite\", [\"sn.common\"])\n\t.directive(\"snCreateNewInvite\", function($timeout, getTemplateUrl, i18n) {\n\t\t\"use strict\";\n\n\t\treturn {\n\t\t\trestrict: \"E\",\n\t\t\ttemplateUrl: getTemplateUrl(\"sn_chg_soc_sharing_invitation_search.xml\"),\n\t\t\treplace: true,\n\t\t\tlink: function(scope, elem, attrs, ctrl) {\n\n\t\t\t\tscope.focusOnInput = function() {\n\t\t\t\t\t$timeout(function() {\n\t\t\t\t\t\tangular.element(\"#recipient-input\").focus().css(\"cursor\", \"\");\n\t\t\t\t\t}, 100);\n\t\t\t\t};\n\n\t\t\t\tscope.scrollRecipientListToBottom = function() {\n\t\t\t\t\t$timeout(function() {\n\t\t\t\t\t\tvar recipientListElem = angular.element(\"#recipient-list\");\n\t\t\t\t\t\trecipientListElem.scrollTop = recipientListElem.scrollHeight;\n\t\t\t\t\t\tscope.focusOnInput();\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\tscope.$on(\"sn.aside.change_soc_side.open_share:opened\", scope.focusOnInput);\n\n\t\t\t},\n\t\t\tcontroller: function($scope) {\n\t\t\t\t$scope.messages = {\n\t\t\t\t\t\"To:\": i18n.getMessage(\"To:\"),\n\t\t\t\t\t\"Remove {0}\": i18n.getMessage(\"Remove {0}\")\n\t\t\t\t};\n\n\t\t\t\t$scope.ignoreList = function() {\n\t\t\t\t\treturn $scope.pendingRecipients.map(function(recipient) {\n\t\t\t\t\t\treturn recipient.sys_id;\n\t\t\t\t\t}).join(\",\");\n\t\t\t\t};\n\n\t\t\t\t$scope.selectMember = function(selectedSuggestion) {\n\t\t\t\t\tvar alreadyAdded = $scope.pendingRecipients.some(function(recipient) {\n\t\t\t\t\t\treturn angular.equals(recipient, selectedSuggestion);\n\t\t\t\t\t});\n\t\t\t\t\tif (!alreadyAdded)\n\t\t\t\t\t\t$scope.pendingRecipients.push(selectedSuggestion);\n\t\t\t\t\t$scope.suggestions.query = \"\";\n\t\t\t\t\t$scope.scrollRecipientListToBottom();\n\t\t\t\t};\n\n\t\t\t\t$scope.keyUp = function(event, index, identityDetails, suggestions) {\n\t\t\t\t\tif (event && event.keyCode === 40 && suggestions && index < (suggestions.length + 2)) {\n\t\t\t\t\t\tvar suggestion = suggestions[index + 1];\n\t\t\t\t\t\tif (suggestion && suggestion.sys_id)\n\t\t\t\t\t\t\tangular.element(\"#suggestion-\" + suggestion.sys_id).focus();\n\t\t\t\t\t}\n\t\t\t\t\telse if (event && event.keyCode === 38) {\n\t\t\t\t\t\tif (suggestions && index > 0)\n\t\t\t\t\t\t\tangular.element(\"#suggestion-\" + suggestions[index - 1].sys_id).focus();\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\t$scope.focusOnInput();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t$scope.i18n = i18n;\n\n\t\t\t\t$scope.removeRecipient = function(event, index) {\n\t\t\t\t\tif (event && event.keyCode === 9)\n\t\t\t\t\t\treturn;\n\t\t\t\t\t$scope.pendingRecipients.splice(index, 1);\n\t\t\t\t\t$scope.focusOnInput();\n\t\t\t\t};\n\n\t\t\t}\n\t\t};\n\t});\n","sys_class_name":"sys_ui_script","sys_id":"fba3324b57801300532c3da73d94f906","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"ui_type":"","sys_update_name":"sys_ui_script_fba3324b57801300532c3da73d94f906","sys_updated_by":"admin","sys_created_on":"2018-02-07 19:11:49","name":"sn_chg_soc.snCreateNewInvite","sys_name":"sn_chg_soc.snCreateNewInvite","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/cdcf033467020300b410afa00585ef2b","value":"cdcf033467020300b410afa00585ef2b"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"3","active":"true","description":"Email address validation utilities","use_scoped_format":"false","global":"false","sys_updated_on":"2022-08-29 16:10:00","sys_tags":"","script_name":"","script":"(function() {\n\tvar isDigit = function(thchar) {\n\t\treturn (thchar >= '0' && thchar <= '9');\n\t};\n\n\tvar isAlpha = function(thchar) {\n\t\treturn (thchar >= 'a' && thchar <= 'z\\uffff')\n\t\t\t|| (thchar >= 'A' && thchar <= 'Z\\uffff') || thchar == '_';\n\t};\n\n\tvar isAlphaNum = function(thchar) {\n\t\treturn isAlpha(thchar) || isDigit(thchar);\n\t};\n\n\tvar containsOnlyChars = function(validChars, sText) {\n\t\tif (!sText) { return true; } // blank is fine\n\n\t\tfor (var i = 0; i < sText.length; i++) {\n\t\t\tvar c = sText.charAt(i);\n\t\t\tif (validChars.indexOf(c) === -1) { return false; } // not a match\n\t\t}\n\n\t\treturn true;\n\t};\n\n\tvar containsPeriodsSideBySide = function(sText) {\n\t\tvar pattern = /\\.\\./g;\n\t\treturn pattern.test(sText);\n    };\n\n\tvar isEmailValidWithReason = function(value) {\n\t\tvar localPartChars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!#$%*/?|^{}`~&'+-=_.\";\n\t\tvar domainChars =    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_.\";\n\n\t\t// break into local part and domain\n\t\tif (value.indexOf(\"@\") === -1) { return \"missing @ sign\"; }\n\n\t\tvar s = value.split(\"@\");\n\t\tif (s.length != 2) { return \"too many at signs\"; }\n\n\t\t// check the local part of the address\n\t\tif (!containsOnlyChars(localPartChars, s[0])) { return \"invalid character before the at sign\"; }\n\t\tif (s[0].length < 1) { return \"at least one character must be before the at sign\"; }\n\t\tif (s[0].substr(0,1) === \".\") { return \"period cannot be the first character\"; }\n\t\tif (s[0].substr(s[0].length-1,1) === \".\") { return \"period cannot be the last character before the at sign\"; }\n\n\t\t// check the domain part of the address\n\t\tif (!containsOnlyChars(domainChars, s[1])) { return \"invalid character after the at sign\"; }\n\n\t\tvar periodIndex = s[1].indexOf(\".\");\n\t\tif (periodIndex === -1) { return \"missing period after the at sign\"; }\n\t\tif (periodIndex === 0) { return \"period cannot be the first character after the at sign\"; }\n\n\t\t//check whether periods are used side by side\n\t\tif(containsPeriodsSideBySide(s[0])) {return \"invalid usage of periods before @ sign\"; }\n\t\tif(containsPeriodsSideBySide(s[1])) {return \"invalid usage of periods after @ sign\"; }\n\n\t\tvar periods = s[1].split(\".\");\n\t\tvar lastPeriod = periods[periods.length-1];\n\t\tif (lastPeriod.length < 1) { return \"must be at least 1 character after the last period\"; }\n\t\tif (!isAlphaNum(s[1].substr(0,1))) { return \"the first character after the at sign must be alphanumeric\"; }\n\t\tif (!isAlphaNum(s[1].substr(s[1].length-1,1))) { return \"the last character must be alphanumeric\"; }\n\n\t\treturn \"\"; // address is OK\n\t};\n\n\tvar isEmailValid = function(value) {\n\t\treturn isEmailValidWithReason(value) === \"\";\n\t};\n\n\treturn {\n\t\tisEmailValid: isEmailValid\n\t};\n});","sys_class_name":"sys_ui_script","sys_id":"fc831d91e7321300b2888f49c2f6a9ff","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/69996b7b04f12210559073c06a02f7e2","value":"69996b7b04f12210559073c06a02f7e2"},"ui_type":"10","sys_update_name":"sys_ui_script_fc831d91e7321300b2888f49c2f6a9ff","sys_updated_by":"admin","sys_created_on":"2018-06-18 18:39:00","name":"utils.validators.email","sys_name":"utils.validators.email","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"46","active":"true","description":"Filter agendaItemFilter.  Controls filtering of agenda items in the CAB Workbench","use_scoped_format":"false","global":"false","sys_updated_on":"2019-09-10 15:41:41","sys_tags":"","script_name":"agenda.agendaItemFilter","script":"angular.module(\"sn.change_management.cab.agenda\")\n.filter(\"agendaItemFilter\", [\"CAB\", \"meetingAgenda\", \"$log\", function(CAB, meetingAgenda, $log) {\n\treturn function(items, filter, userId, pageNum) {\n\t\tif (!items || items.length === 0)\n\t\t\treturn [];\n\n\t\tif (!filter || CAB.VALID_FILTERS.indexOf(filter) === -1) \n\t\t\tfilter = CAB.ALL;\n\n\t\tif (isNaN(pageNum) || pageNum < 0)\n\t\t\tpageNum = 0;\n\n\t\tvar startAt = pageNum * CAB.AGENDA.PAGE_SIZE;\t\t\t\n\t\tvar result = [];\n\t\tvar pageCount = 0;\n\n\t\titems.some(function(item) {\t\n\t\t\tif (!meetingAgenda.agendaItemFilters[filter].call({\"userId\": userId}, item))\n\t\t\t\treturn;\n\t\t\t\n\t\t\tif (pageCount < startAt) {\n\t\t\t\tpageCount++;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\t\n\t\t\tresult.push(item);\n\t\t\t\t\n\t\t\t// If we have the complete page, no need to do any more\n\t\t\tif (result.length === CAB.AGENDA.PAGE_SIZE)\n\t\t\t\treturn true;\n\t\t});\n\t\t\t\n\t\treturn result;\n\t};\n}]);","sys_class_name":"sys_ui_script","sys_id":"fd539993d752220034d145bcce610335","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"ui_type":"0","sys_update_name":"sys_ui_script_fd539993d752220034d145bcce610335","sys_updated_by":"admin","sys_created_on":"2016-10-11 14:38:22","name":"sn_change_cab.agenda.agendaItemFilter","sys_name":"sn_change_cab.agenda.agendaItemFilter","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/18351d53eb32120034d1eeea1206fe79","value":"18351d53eb32120034d1eeea1206fe79"},"sys_created_by":"admin","sys_policy":""},{"ignore_in_now_experience":"false","sys_mod_count":"58","active":"true","description":"","use_scoped_format":"false","global":"false","sys_updated_on":"2021-10-19 04:42:17","sys_tags":"","script_name":"","script":"\t//\n    // THIS CODE IS USED WITHIN THE INDICATOR FORMS TO\n    // SELECT TAGS aka INDICATOR GROUPS\n    //\n\n    var IndicatorTagControl = Class.create({\n    initialize: function(container,indicatorId) {\n        this.container = container;\n        this.indicatorId = indicatorId;\n\n        var fldCol = document.createElement(\"div\");\n        fldCol.className = \"input-group-transparent\";\n\n        var searchIcon = document.createElement(\"span\");\n\t\tElement.extend(searchIcon);\n        searchIcon.addClassName(\"input-group-addon-transparent\");\n        searchIcon.addClassName(\"icon-search\");\n\n        var refComp = document.createElement(\"input\");\n        Element.extend(refComp);\n\t\trefComp.setAttribute(\"type\", \"search\");\n\t\trefComp.setAttribute(\"data-ref-dynamic\", \"true\");\n\t\trefComp.setAttribute(\"aria-label\", getMessage(\"Add Indicator Groups\"));\n        refComp.addClassName(\"indicatortag_complete\");\n        refComp.addClassName(\"form-control\");\n        refComp.addClassName(\"form-control-search\");\n        refComp.id=\"indicatortag_complete\";\n        refComp.autocomplete=\"off\";\n        refComp.maxlength=\"40\";\n        refComp.placeholder = IndicatorTagControl.FLD_MSG;\n        refComp.tabindex=\"-1\";\n\n        this.refComp = refComp;\n\n        var refCompHid = document.createElement(\"input\");\n        Element.extend(refCompHid);\n        refCompHid.type = \"hidden\";\n        refCompHid.id = refComp.id+\"_hidden\";\n\n        fldCol.appendChild(refComp);\n        fldCol.appendChild(searchIcon);\n        fldCol.appendChild(refCompHid);\n\n        //Keep a reference to the container for the tags\n        this.tagCol = document.createElement(\"div\");\n        this.tagCol.className = \"indicatortag_tags\";\n\n        var tagClear = document.createElement(\"div\");\n        tagClear.className = \"indicatortag_clear\";\n\n        // Build the top Indicator Group bar\n        this.container.appendChild(fldCol);\n        this.container.appendChild(this.tagCol);\n        this.container.appendChild(tagClear);\n\n        // Add the AJAX completer to the element.  Do this after it's in the DOM\n        var completer = new AJAXReferenceCompleter(refComp, refComp.id+'_hidden', 'null', '', 'pa_tags');\n        completer.enterSubmits = false;\n        refComp.ac.enterSubmits = false;\n\n        // Unregister old event handlers\n        refComp.stopObserving(\"keypress\");\n        refComp.stopObserving(\"keydown\");\n\t\trefComp.stopObserving(\"focus\");\n        refComp.stopObserving(\"blur\");\n\n        // Register new event handlers\n        refComp.observe(\"keypress\",this._keyPress.bind(this));\n        refComp.observe(\"keydown\",this._keyDown.bind(this));\n\t\trefComp.observe(\"focus\", this._focus.bind(this));\n        refComp.observe(\"blur\", this._blur.bind(this));\n\n        this._loadTags();\n    },\n\n    // Wrapper for keydown event handler\n    _keyDown: function(event) {\n        acReferenceKeyDown(this.refComp, event);\n    },\n\n    // Wrapper for keypress event handler\n    _keyPress: function(event) {\n\n        // Ref completer handler first\n        acReferenceKeyPress(this.refComp, event);\n\n        if (event.keyCode == Event.KEY_RETURN) {\n            if (this._addTag()) {\n                this.refComp.clear();\n\t\t\t\tthis.refComp.placeholder = '';\n                this.refComp.ac.clearKeyValue();\n            }\n\n            Event.stop(event);\n        }\n    },\n\n    _focus: function(event) {\n        if (this.refComp._cleared)\n            return;\n\n        this.refComp.clear();\n\t\tthis.refComp.placeholder = '';\n        this.refComp._cleared = true;\n    },\n    _blur: function(event) {\n        this.refComp.placeholder = IndicatorTagControl.FLD_MSG;\n        this.refComp._cleared = false;\n        Event.stop(event);\n    },\n\n    _loadTags: function() {\n        var tagAjax = new GlideAjax(\"IndicatorTagsAjax\");\n        tagAjax.addParam(\"sysparm_name\", \"getIndicatorTags\");\n        tagAjax.addParam(\"sysparm_indicatorid\", this.indicatorId);\n\n        tagAjax.getXML(this._loadTagsCallback.bind(this));\n    },\n\n    _loadTagsCallback: function(response) {\n        var resp = response.responseXML.getElementsByTagName(\"result\");\n\n        if (resp[0].getAttribute(\"value\") != \"success\")\n            return;\n\n        var jsonStr = response.responseXML.documentElement.getAttribute(\"answer\");\n        var tagData = jsonStr.evalJSON();\n\n        for (var i = 0; i < tagData.length; i++) {\n            this.tagCol.appendChild((new IndicatorTag(tagData[i].label,tagData[i].sys_id)).getTagElement());\n        }\n    },\n\n    _addTag: function() {\n        var label = this.refComp.value;\n\n        //Check we have a reasonable value\n        if (label.length < 2) {\n            alert(\"Indicator Groups must be 2 or more characters\");\n            return false;\n        }\n\n        //Send of the AJAX to see if it can add the Indicator Group\n        var tagsAjax = new GlideAjax(\"IndicatorTagsAjax\");\n        tagsAjax.addParam(\"sysparm_name\", \"addIndicatorTag\");\n        tagsAjax.addParam(\"sysparm_indicatorid\", this.indicatorId);\n        tagsAjax.addParam(\"sysparm_label\", label);\n\n        tagsAjax.getXML(this._addTagCallback.bind(this));\n        return true;\n    },\n\n    _addTagCallback: function(response) {\n        var resp = response.responseXML.getElementsByTagName(\"result\");\n\n        if (resp[0].getAttribute(\"value\") != \"success\")\n            return;\n\n        var jsonStr = response.responseXML.documentElement.getAttribute(\"answer\");\n        var tagData = jsonStr.evalJSON();\n\n        this.tagCol.appendChild((new IndicatorTag(tagData.label,tagData.sys_id)).getTagElement());\n    },\n\n    type: \"IndicatorTagControl\"\n});\n\nIndicatorTagControl.FLD_MSG = new GwtMessage().getMessage(\"Add Indicator Groups\");\n\n/**\n * IndicatorTag\n * Represents a Indicator Group that has been assigned to the record\n *\n * Handles it's own deletion but not creation as Indicator Group creation is handled via the above class.\n */\nvar IndicatorTag = Class.create({\n    initialize: function(label, sys_id) {\n        this.sys_id = sys_id;\n        this.label = label;\n    },\n\n    /**\n     * removeTag(event): AJAX handler for removing this Indicator Group\n     */\n    removeTag: function(event) {\n       // Create AJAX request that removes the Indicator Group.\n       var tagAjax = new GlideAjax(\"IndicatorTagsAjax\");\n       tagAjax.addParam(\"sysparm_name\",\"removeIndicatorTag\");\n       tagAjax.addParam(\"sysparm_sysid\",this.sys_id);\n       tagAjax.getXML(this.removeTagCallback.bind(this));\n    },\n\n    /**\n     *removeTagCallback(response): AJAX calback method for removing this Indicator Group\n     */\n    removeTagCallback: function(response) {\n        var answer = response.responseXML.documentElement.getAttribute(\"answer\");\n        var resp = response.responseXML.getElementsByTagName(\"result\");\n        if (resp[0].getAttribute(\"value\") != \"success\") {\n            alert(\"Failed to remove Indicator Group. Already Removed?\");\n            return;\n        }\n\n        this._tagEl.remove();\n    },\n\n    /**\n     * getTagElememt(): Returns a configured dom element for the Indicator Group\n     */\n    getTagElement: function() {\n        var tagEl = document.createElement(\"div\");\n        Element.extend(tagEl);\n        tagEl.addClassName(\"indicatortag_control_tag\");\n        tagEl.id = \"tag:\" + this.sys_id;\n\n        var tagLabel = document.createElement(\"span\");\n        Element.extend(tagLabel);\n        tagLabel.addClassName(\"indicatortag_tag_name\");\n        tagLabel.appendChild(document.createTextNode(this.label));\n\n        tagEl.appendChild(tagLabel);\n\n        var tagRm = document.createElement(\"a\");\n        Element.extend(tagRm);\n        tagRm.addClassName(\"indicatortag_delete_button\");\n        tagRm.setAttribute(\"role\", \"button\");\n        var removeTagMsg = getMessage('Remove tag: ')\n        tagRm.setAttribute(\"aria-label\", removeTagMsg + this.label);\n        tagRm.setAttribute(\"tabindex\", \"0\");\n        var tagRmIcon = document.createElement(\"span\");\n        Element.extend(tagRmIcon);\n        tagRmIcon.addClassName(\"text-icon icon-cross\");\n        tagRm.appendChild(tagRmIcon);\n\n        // Bind this object to a click on the X remove Indicator Group\n        tagRm.observe(\"click\", this.removeTag.bind(this));\n        tagEl.appendChild(tagRm);\n\n        // Cleaner than assigning at the beginning.\n        this._tagEl = tagEl;\n        return this._tagEl;\n    },\n\n    type: \"IndicatorTag\"\n});","sys_class_name":"sys_ui_script","sys_id":"ffa0fba8bf00110032a0854b3f07397c","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/539a23bf04f12210559073c06a02f7aa","value":"539a23bf04f12210559073c06a02f7aa"},"ui_type":"0","sys_update_name":"sys_ui_script_ffa0fba8bf00110032a0854b3f07397c","sys_updated_by":"admin","sys_created_on":"2013-09-23 11:44:40","name":"IndicatorTagControl","sys_name":"IndicatorTagControl","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/global","value":"global"},"sys_created_by":"admin","sys_policy":""}]}