{"result":[{"description":"","sys_updated_on":"2023-04-25 18:11:30","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"02025e1777922110f92a7a8c8c5a9977","recenter_handler":"function isRecenterRequired(selection, diagram, threshold, dispatch) {\n\t// Implement recenter handler\n\treturn true;\n}","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2023-04-24 21:26:04","sys_name":"Flow Try Node Container Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/5d3727d3530310100b0cddeeff7b12d7","value":"5d3727d3530310100b0cddeeff7b12d7"},"sys_mod_count":"3","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_02025e1777922110f92a7a8c8c5a9977","has_recenter_handler":"false","name":"Flow Try Node Container Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2023-05-11 21:11:01","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"023fe6804f762110ffc2fde0b1ce0b69","recenter_handler":"function isRecenterRequired(selection, diagram, threshold, dispatch) {\n\t// Implement recenter handler\n\treturn true;\n}","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2023-05-09 17:43:55","sys_name":"Flow Action Node Container Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/802a6f17530310100b0cddeeff7b1213","value":"802a6f17530310100b0cddeeff7b1213"},"sys_mod_count":"2","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_023fe6804f762110ffc2fde0b1ce0b69","has_recenter_handler":"false","name":"Flow Action Node Container Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2021-09-29 03:14:42","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"03fa6403b7fa3010388487c2de11a9fe","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2021-09-29 03:14:42","sys_name":"Flow Add a Node Node Shape Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"base","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/4416da03535710100b0cddeeff7b126c","value":"4416da03535710100b0cddeeff7b126c"},"sys_mod_count":"0","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_03fa6403b7fa3010388487c2de11a9fe","has_recenter_handler":"false","name":"Flow Add a Node Node Shape Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2021-10-27 11:20:45","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"057dce7d53822010b553ddeeff7b12cb","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2021-02-01 10:14:33","sys_name":"Node Name Container Panel Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/3ff9eb17530310100b0cddeeff7b12b4","value":"3ff9eb17530310100b0cddeeff7b12b4"},"sys_mod_count":"6","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_057dce7d53822010b553ddeeff7b12cb","has_recenter_handler":"false","name":"Node Name Container Panel Template","tab_click_handler":"","sys_policy":""},{"description":"","sys_updated_on":"2023-01-17 17:40:46","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"075cb10453a82110ffc2ddeeff7b12a9","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2023-01-17 17:40:46","sys_name":"Subflow InsOuts Node Left Label Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/3ff9eb17530310100b0cddeeff7b12b4","value":"3ff9eb17530310100b0cddeeff7b12b4"},"sys_mod_count":"0","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_075cb10453a82110ffc2ddeeff7b12a9","has_recenter_handler":"false","name":"Subflow InsOuts Node Left Label Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2021-10-27 11:20:45","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"085894bb538310100b0cddeeff7b12f2","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2020-09-11 03:42:11","sys_name":"Link Line","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/87c9ab17530310100b0cddeeff7b123d","value":"87c9ab17530310100b0cddeeff7b123d"},"sys_mod_count":"3","active":"true","sys_tags":"","script":"","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_085894bb538310100b0cddeeff7b12f2","has_recenter_handler":"false","name":"Link Line","tab_click_handler":"","sys_policy":""},{"description":"Node shape template for Flowlogics -- these shapes do not fill the rectangle","sys_updated_on":"2021-07-01 00:52:45","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"094e88ed777430104f27ceec8e5a99a1","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2021-06-16 23:13:06","sys_name":"Flow Logic Node Shape Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/5d3727d3530310100b0cddeeff7b12d7","value":"5d3727d3530310100b0cddeeff7b12d7"},"sys_mod_count":"4","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_094e88ed777430104f27ceec8e5a99a1","has_recenter_handler":"false","name":"Flow Logic Node Shape Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"Switch node template for Switch Case","sys_updated_on":"2022-12-15 10:15:28","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"0de2eb5077e21110b2e09dcc3c5a9951","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2022-10-11 09:41:34","sys_name":"Switch Node Shape Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"base","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/4416da03535710100b0cddeeff7b126c","value":"4416da03535710100b0cddeeff7b126c"},"sys_mod_count":"9","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_0de2eb5077e21110b2e09dcc3c5a9951","has_recenter_handler":"false","name":"Switch Node Shape Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2021-08-02 23:35:40","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"0f161668c3b130105c68006c2840dd45","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2021-08-02 23:35:40","sys_name":"Flow Path Broken Base Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"base","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/03775d6b5398a0100b0cddeeff7b129e","value":"03775d6b5398a0100b0cddeeff7b129e"},"sys_mod_count":"0","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_0f161668c3b130105c68006c2840dd45","has_recenter_handler":"false","name":"Flow Path Broken Base Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2021-06-28 17:48:25","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"0f30704077c1b010b2b4ddd9cf5a9952","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2021-06-24 20:05:37","sys_name":"Flow Trigger Node Main Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/3ff9eb17530310100b0cddeeff7b12b4","value":"3ff9eb17530310100b0cddeeff7b12b4"},"sys_mod_count":"1","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_0f30704077c1b010b2b4ddd9cf5a9952","has_recenter_handler":"false","name":"Flow Trigger Node Main Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2023-12-07 18:43:08","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"0f7a18fb538310100b0cddeeff7b12ac","recenter_handler":"function isRecenterRequired(selection, diagram, threshold, dispatch) {\t// Implement recenter handler\treturn true;}","sys_updated_by":"admin","tabbable":"true","sys_created_on":"2020-09-11 03:52:01","sys_name":"Add Node Button Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"advanced","sys_created_by":"admin","aria_label":"Add a node","shape":"","sys_mod_count":"43","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch, shapeTemplateUtilities, resolveThemeVariable) {\n    var forcedColorsDarkTheme = window.matchMedia('(forced-colors)').matches && window.matchMedia('(prefers-color-scheme: dark)');\n    return $(go.TextBlock, {\n        text: '+',\n        font: '15pt Lato, Helvetica, Arial, sans-serif',\n        stroke: forcedColorsDarkTheme ? 'ButtonText' : resolveThemeVariable('--now-datavis_color--blue-7'),\n        click: function(event, buttonObject) {\n            dispatch(\"GO_DIAGRAM#ADD_NODE_CLICKED\", event);\n        },\n        cursor: \"pointer\"\n    });\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_0f7a18fb538310100b0cddeeff7b12ac","has_recenter_handler":"false","name":"Add Node Button Template","tab_click_handler":"","sys_policy":""},{"description":"","sys_updated_on":"2022-12-31 08:32:12","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"116bfd0ec3c42110acabb4cdb840dde3","recenter_handler":"","sys_updated_by":"maint","tabbable":"false","sys_created_on":"2022-12-30 02:26:25","sys_name":"Selection Adornment Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/86dafd0ec3c42110acabb4cdb840dd3b","value":"86dafd0ec3c42110acabb4cdb840dd3b"},"sys_mod_count":"1","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_116bfd0ec3c42110acabb4cdb840dde3","has_recenter_handler":"false","name":"Selection Adornment Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2025-02-14 10:02:52","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"15ab022d973111102d264ae8f6890d9c","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2022-09-07 17:45:53","sys_name":"Schema View Node Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/f53f19bac362fa22ca2e93692d32f18f","value":"f53f19bac362fa22ca2e93692d32f18f"},"template_type":"advanced","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/6f46af93530310100b0cddeeff7b1269","value":"6f46af93530310100b0cddeeff7b1269"},"sys_mod_count":"824","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n    var NODE_WIDTH = 340;\n    var NODE_2_WIDTH = 200;\n    var OPEN_LINK_BUFFER = 30;\n    var ENTRY_HEIGHT = 40;\n    var SECTION_HEADER_HEIGHT = 24;\n    var FIELD_NAME_WIDTH = 120;\n    var FIELD_TYPE_WIDTH = 140;\n    var HEADER_HEIGHT = 32;\n    var MAX_TABLE_ENTRIES_SHOWN = 10;\n    var CHEVRON_ANGLE_RIGHT = 270;\n    var CHEVRON_ANGLE_DOWN = 0;\n    var CHEVRON_MARGIN_COLLAPSED = new go.Margin(0, 6, 0, 6);\n    var CHEVRON_MARGIN_EXPANDED = new go.Margin(0, 6, 0, 4);\n    var CHEVRON_GEOMETRY_STRING =\n        \"M6 7.29287L9.64645 3.64642L10.3536 4.35353L6 8.70708L1.64645 4.35353L2.35355 3.64642L6 7.29287Z\";\n    var DEFAULT_OUTLINE_COLOR = \"#D1D6D6\";\n    var ELLIPSIS_COLOR = \"#E9EAEB\";\n    var DEFAULT_STROKE_WIDTH = 0.5;\n    var ELLIPSIS_IMAGE_PATH = \"/images/@devsnc/sn-table-builder/ellipsis-v.svg\";\n    var DRAG_IMAGE_PATH_DARK = \"/images/@devsnc/sn-table-builder/dragIcon-dark.svg\";\n    var DRAG_IMAGE_PATH_LIGHT = \"/images/@devsnc/sn-table-builder/dragIcon-light.svg\";\n    var OPEN_LINK_IMAGE_PATH_DARK = \"/images/@devsnc/sn-table-builder/open-link-right-dark.svg\";\n    var OPEN_LINK_IMAGE_PATH_LIGHT = \"/images/@devsnc/sn-table-builder/open-link-right-light.svg\";\n    var TOOL_TIP_RECT_COLOR = \"#0F1213\";\n    var SCROLLBAR_COLOR = \"#BFC5C6\";\n    var TEXT_COLOR = \"#161B1C\";\n    var SECTION_HEADER_COLOR = \"#2C3537\";\n    var FIELD_COUNT_TEXT_COLOR = \"#425051\";\n    var NEUTRAL_COLOR_0 = \"#FFFFFF\";\n    var NEUTRAL_COLOR_1 = \"#F6F7F7\";\n    var NEUTRAL_COLOR_2 = \"#E4E6E7\";\n    var APP_TABLE_HEADER_COLOR = \"#99ABF4\";\n    var APP_TABLE_HEADER_COLOR_SELECTED = \"#3951B0\";\n    var SYS_TABLE_HEADER_COLOR = \"#EFDEFA\";\n    var SYS_TABLE_HEADER_COLOR_SELECTED = \"#6C4685\";\n    // ACTIONS\n    var SCHEMA_VIEW__ELLIPSIS_CLICKED = \"SCHEMA_VIEW#ELLIPSIS_CLICKED\";\n    var SCHEMA_VIEW__OPEN_LINK_CLICKED = \"SCHEMA_VIEW#OPEN_LINK_CLICKED\";\n    var SCHEMA_VIEW_NODE_CLICKED = \"SCHEMA_VIEW#NODE_CLICKED\";\n    var initialScrollPoint;\n    var initialScrollButtonPoint;\n\n    function openLinkClicked(e, obj) {\n        dispatch(SCHEMA_VIEW__OPEN_LINK_CLICKED, {\n            nodeDataObj: obj.part.data\n        });\n    }\n\n    function expanderButtonClicked(e, btn) {\n        e.handled = true;\n        btn.diagram.model.commit(function(m) {\n            var data = btn.part.data;\n            m.set(data, \"isExpanded\", !data.isExpanded);\n        }, \"expander button clicked in node\");\n    }\n\n    function ellipsisClicked(e, obj) {\n        var ellipse = obj.findObject(\"ELLIPSIS\");\n        var docPoint = ellipse.getDocumentPoint(go.Spot.Center);\n        var viewPoint = obj.diagram.transformDocToView(docPoint);\n        dispatch(SCHEMA_VIEW__ELLIPSIS_CLICKED, {\n            buttonPosition: {\n                x: viewPoint.x + 10, // Offset to display popover to the right of ellipsis\n                y: viewPoint.y + 35, // Offset to display popover at same height as ellipsis\n            },\n            nodeDataObj: obj.part.data,\n        });\n    }\n\n    function countVisibleRows(tableEntries, includeSectionHeader) {\n        return tableEntries.filter(function(x) {\n            return ((includeSectionHeader || !x.isSectionHeader) && (x.showExtended || !x.isExtended));\n        }).length;\n    }\n    // triggered when scroll bar button is pressed down on\n    function recordInitialScrollPoint(e, obj) {\n        initialScrollButtonPoint = obj.actualBounds.y;\n        initialScrollPoint = obj.panel.getLocalPoint(e.documentPoint);\n    }\n    // triggered when scroll bar button is dragged\n    function handleScroll(e, obj) {\n        var scrollbar = obj.panel; // the panel containing the scroll bar button aka the scrollbar\n        var local = scrollbar.getLocalPoint(e.documentPoint); // the mouse location within the scrollbar\n        var delta = local.y - initialScrollPoint.y;\n        var table = scrollbar.panel.findObject(\"TABLE\"); // table containig the entries to scroll through\n        var scrollbarButton = scrollbar.findObject(\"SCROLLBARBUTTON\");\n        if (table && scrollbarButton) {\n            var tableHeight = table.actualBounds.height;\n            var scrollbarButtonHeight = scrollbarButton.actualBounds.height;\n            // move scroll bar button\n            var scrollLocation = Math.min(\n                1,\n                Math.max(\n                    0,\n                    (initialScrollButtonPoint + delta) /\n                    (tableHeight - scrollbarButtonHeight)\n                )\n            );\n            scrollbarButton.alignment = new go.Spot(0.5, scrollLocation, 0, 0);\n            // get index to scroll to in table\n            var idx = Math.round(\n                Math.max(0, scrollLocation) * (table.itemArray.length - MAX_TABLE_ENTRIES_SHOWN)\n            );\n            if (table.topIndex !== idx) {\n                table.topIndex = Math.max(idx, 0);\n            }\n        }\n    }\n    // highlight all Links coming out of/going into a given Node\n    function nodeClicked(e, obj) {\n        var diagram = obj.diagram;\n        diagram.clearHighlighteds();\n        obj.isHighlighted = true;\n        obj.findLinksOutOf().each(function(l) {\n            l.isHighlighted = true;\n        });\n        obj.findLinksInto().each(function(l) {\n            l.isHighlighted = true;\n        });\n        dispatch(SCHEMA_VIEW_NODE_CLICKED, {\n            nodeDataObj: obj.part.data\n        });\n    }\n\n    function mouseEnteredNode(e, obj) {\n        var bar = obj.part.findObject(\"SCROLLBAR\");\n        var table = obj.part.findObject(\"TABLE\");\n        var shouldShowScrollbar = table.itemArray.length > MAX_TABLE_ENTRIES_SHOWN;\n        bar.visible = shouldShowScrollbar;\n        // set node strokeWidth to 2\n        var borderRectangle = obj.findObject(\"BORDER_RECTANGLE\");\n        borderRectangle.strokeWidth = 2;\n    }\n\n    function mouseLeftNode(e, obj) {\n        var bar = obj.part.findObject(\"SCROLLBAR\");\n        bar.visible = false;\n        // set node strokeWidth back to 1 unless it is selected\n        var borderRectangle = obj.findObject(\"BORDER_RECTANGLE\");\n        if (!obj.isHighlighted && !obj.isSelected) {\n            borderRectangle.strokeWidth = 1;\n        }\n    }\n\n    function resizeNode(v) {\n        // increment through tableEntries until we find an entry that is not a section header\n        var index = v.data.tableEntries.findIndex(function(elem) {\n            return !elem.isSectionHeader;\n        });\n        var showFieldType = ((index !== -1 && v.data.tableEntries[index].showFieldType) || false);\n        return (showFieldType ? NODE_WIDTH : NODE_2_WIDTH);\n    }\n\n    function createToolTip(originalText) {\n        return $(\n            go.Adornment,\n            \"Spot\",\n            new go.Binding(\"visible\", \"\", function(adorn) {\n                var textblockInfo = adorn.adornedObject.metrics;\n                return (\n                    textblockInfo.arrText[0] && textblockInfo.arrText[0].endsWith(\"...\")\n                );\n            }).ofObject(),\n            $(\n                go.Panel,\n                \"Auto\",\n                $(go.Shape, {\n                    figure: \"RoundedRectangle\",\n                    parameter1: 4, // border-radius\n                    fill: TOOL_TIP_RECT_COLOR,\n                    stroke: TOOL_TIP_RECT_COLOR,\n                }),\n                $(go.TextBlock, new go.Binding(\"text\", originalText), {\n                    font: \"12px Open Sans, sans-serif\",\n                    stroke: NEUTRAL_COLOR_0,\n                    maxSize: new go.Size(NODE_WIDTH, NaN),\n                    margin: new go.Margin(4, 8, 4, 8),\n                })\n            )\n        );\n    }\n    return $(\n        go.Node,\n        \"Auto\",\n        new go.Binding(\"visible\", \"isVisible\", function(v) {\n            return v;\n        }),\n        new go.Binding(\"location\", \"loc\", go.Point.parse).makeTwoWay(go.Point.stringify),\n        new go.Binding(\"isLayoutPositioned\", \"usesOverrideLoc\", function(v) {\n            return !v;\n        }), {\n            name: \"NODE\",\n            isShadowed: true,\n            shadowOffset: new go.Point(2, 2),\n            selectionAdorned: false,\n            cursor: \"pointer\",\n            click: nodeClicked,\n            //mouseEnter: mouseEnteredNode,\n            //mouseLeave: mouseLeftNode,\n        },\n        $(\n            go.Shape,\n            \"Rectangle\", {\n                name: \"BORDER_RECTANGLE\",\n                fill: DEFAULT_OUTLINE_COLOR,\n                shadowVisible: true,\n                strokeWidth: 1,\n            },\n            new go.Binding(\"width\", \"\", resizeNode).ofObject(\"\"),\n            new go.Binding(\"stroke\", \"\", function(v) {\n                if (v.isSelected || v.isHighlighted) {\n                    return v.data.isAppTable ?\n                        APP_TABLE_HEADER_COLOR_SELECTED :\n                        SYS_TABLE_HEADER_COLOR_SELECTED;\n                } else {\n                    return v.data.isAppTable ?\n                        APP_TABLE_HEADER_COLOR :\n                        SYS_TABLE_HEADER_COLOR;\n                }\n            }).ofObject(\"\")\n        ),\n        $(\n            go.Panel,\n            \"Table\",\n            $(\n                go.Panel,\n                \"Auto\", {\n                    row: 0,\n                },\n                $(\n                    go.Shape,\n                    \"Rectangle\", {\n                        stroke: \"transparent\",\n                        height: HEADER_HEIGHT,\n                        portId: \"\",\n                        toSpot: go.Spot.TopSide,\n                    },\n                    new go.Binding(\"width\", \"\", resizeNode).ofObject(\"\"),\n                    new go.Binding(\"fill\", \"\", function(v) {\n                        if (v.isSelected || v.isHighlighted) {\n                            return v.data.isAppTable ?\n                                APP_TABLE_HEADER_COLOR_SELECTED :\n                                SYS_TABLE_HEADER_COLOR_SELECTED;\n                        } else {\n                            return v.data.isAppTable ?\n                                APP_TABLE_HEADER_COLOR :\n                                SYS_TABLE_HEADER_COLOR;\n                        }\n                    }).ofObject(\"\")\n                ),\n                $(go.Picture, {\n                        margin: new go.Margin(10, 0, 11, 7),\n                        alignment: go.Spot.Left,\n                        desiredSize: new go.Size(5, 11),\n                        visible: false\n                    },\n                    new go.Binding(\"source\", \"\", function(v) {\n                        if (v.isSelected || v.isHighlighted) {\n                            return DRAG_IMAGE_PATH_LIGHT;\n                        } else {\n                            return DRAG_IMAGE_PATH_DARK;\n                        }\n                    }).ofObject(\"\")\n                ),\n                $(\n                    go.TextBlock, {\n                        alignment: go.Spot.Left,\n                        margin: new go.Margin(6, 0, 6, 5),\n                        textAlign: \"Left\",\n                        font: \"600 16px Open Sans, sans-serif\",\n                        overflow: go.TextBlock.OverflowEllipsis,\n                        shadowVisible: false,\n                        wrap: go.TextBlock.None,\n                        toolTip: createToolTip(\"label\"),\n                    },\n                    new go.Binding(\"width\", \"\", function(v) {\n                        return resizeNode(v) - OPEN_LINK_BUFFER;\n                    }).ofObject(\"\"),\n                    new go.Binding(\"stroke\", \"\", function(v) {\n                        if (v.isHighlighted || v.isSelected) {\n                            return NEUTRAL_COLOR_0;\n                        } else {\n                            return TEXT_COLOR;\n                        }\n                    }).ofObject(\"\"),\n                    new go.Binding(\"text\", \"label\")\n                ),\n                $(go.Panel, \"Auto\", {\n                        margin: new go.Margin(4, 4, 4, 0),\n                        alignment: go.Spot.Right,\n                        mouseEnter: function(e, obj) {\n                            var circle = obj.panel.findObject(\"OPEN_LINK_CIRCLE\");\n                            circle.fill = \"#FFFFFF\";\n                            circle.opacity = 0.1;\n                        },\n                        mouseLeave: function(e, obj) {\n                            var circle = obj.panel.findObject(\"OPEN_LINK_CIRCLE\");\n                            circle.fill = \"transparent\";\n                        },\n                        isActionable: true,\n                        actionDown: function(e, obj) {\n                            var circle = obj.panel.findObject(\"OPEN_LINK_CIRCLE\");\n                            circle.fill = \"#2C3537\";\n                            circle.opacity = 0.25;\n                        },\n                        actionUp: function(e, obj) {\n                            var circle = obj.panel.findObject(\"OPEN_LINK_CIRCLE\");\n                            circle.fill = \"transparent\";\n                        },\n                        click: openLinkClicked,\n                    },\n                    $(go.Shape, \"Circle\", {\n                        name: \"OPEN_LINK_CIRCLE\",\n                        desiredSize: new go.Size(24, 24),\n                        fill: \"transparent\",\n                        stroke: \"transparent\"\n                    }),\n                    $(go.Picture, {\n                            name: \"OPEN_LINK\",\n                            desiredSize: new go.Size(10, 10),\n                        },\n                        new go.Binding(\"source\", \"\", function(v) {\n                            if (v.isSelected || v.isHighlighted) {\n                                return OPEN_LINK_IMAGE_PATH_LIGHT;\n                            } else {\n                                return OPEN_LINK_IMAGE_PATH_DARK;\n                            }\n                        }).ofObject(\"\")\n                    ),\n                    new go.Binding(\"visible\", \"\", function(v) {\n                        return !v.data.isBaseTable;\n                    }).ofObject(\"\"))\n            ),\n            $(\n                go.Panel,\n                \"Auto\", {\n                    row: 1,\n                },\n                $(go.Shape, \"Rectangle\", {\n                        height: HEADER_HEIGHT,\n                        fill: NEUTRAL_COLOR_0,\n                        stroke: \"transparent\",\n                    },\n                    new go.Binding(\"width\", \"\", resizeNode).ofObject(\"\")),\n                $(\n                    \"Button\", {\n                        alignment: go.Spot.Left,\n                        click: expanderButtonClicked,\n                        \"ButtonBorder.fill\": \"transparent\",\n                        \"ButtonBorder.stroke\": \"transparent\",\n                        _buttonFillOver: \"transparent\",\n                        _buttonStrokeOver: \"transparent\",\n                        _buttonFillPressed: \"transparent\",\n                        _buttonStrokePressed: \"transparent\",\n                    },\n                    new go.Binding(\"margin\", \"\", function(v) {\n                        return v.data.isExpanded ? CHEVRON_MARGIN_EXPANDED : CHEVRON_MARGIN_COLLAPSED;\n                    }).ofObject(\"\"),\n                    $(go.Shape, {\n                            name: \"CHEVRON\",\n                            stroke: FIELD_COUNT_TEXT_COLOR,\n                            geometryString: CHEVRON_GEOMETRY_STRING,\n                        },\n                        new go.Binding(\"angle\", \"\", function(v) {\n                            return v.data.isExpanded ? CHEVRON_ANGLE_DOWN : CHEVRON_ANGLE_RIGHT;\n                        }).ofObject(\"\"))\n                ),\n                $(\n                    go.TextBlock, {\n                        alignment: go.Spot.Left,\n                        margin: new go.Margin(0, 0, 0, 20),\n                        font: \"400 16px Open Sans, sans-serif\",\n                        stroke: FIELD_COUNT_TEXT_COLOR\n                    },\n                    new go.Binding(\"text\", \"\", function(v) {\n                        var entries = countVisibleRows(v.data.tableEntries, false);\n                        return v.data.collapseNodeText + \" (\" + entries + \")\";\n                    }).ofObject(\"\")\n                ),\n                $(\n                    go.Panel,\n                    \"Auto\", {\n                        name: \"ELLIPSIS\",\n                        alignment: go.Spot.Right,\n                        click: ellipsisClicked,\n                        mouseEnter: function(e, obj) {\n                            var circle = obj.panel.findObject(\"ELLIPSIS_CIRCLE\");\n                            circle.fill = ELLIPSIS_COLOR;\n                        },\n                        mouseLeave: function(e, obj) {\n                            var circle = obj.panel.findObject(\"ELLIPSIS_CIRCLE\");\n                            circle.fill = \"transparent\";\n                        }\n                    },\n                    $(go.Shape, \"Circle\", {\n                        name: \"ELLIPSIS_CIRCLE\",\n                        margin: new go.Margin(0, 4, 0, 0),\n                        desiredSize: new go.Size(24, 24),\n                        fill: \"transparent\",\n                        stroke: \"transparent\",\n                    }),\n                    $(go.Picture, {\n                        desiredSize: new go.Size(12, 12),\n                        source: ELLIPSIS_IMAGE_PATH,\n                    })\n                )\n            ),\n            $(\n                go.Panel,\n                \"Table\", {\n                    row: 2,\n                }, {\n                    name: \"SCROLLING_TABLE\",\n                    stretch: go.GraphObject.Fill,\n                    defaultColumnSeparatorStroke: DEFAULT_OUTLINE_COLOR,\n                },\n                new go.Binding(\"width\", \"\", resizeNode).ofObject(\"\"),\n                new go.Binding(\"height\", \"tableEntries\", function(v) {\n                    var entriesAndHeaders = countVisibleRows(v, true);\n                    var justEntries = countVisibleRows(v, false);\n                    if (entriesAndHeaders <= MAX_TABLE_ENTRIES_SHOWN) {\n                        var numHeaders = entriesAndHeaders - justEntries;\n                        return (justEntries * ENTRY_HEIGHT) + (numHeaders * SECTION_HEADER_HEIGHT);\n                    } else {\n                        return MAX_TABLE_ENTRIES_SHOWN * ENTRY_HEIGHT + 10;\n                    }\n                }),\n                new go.Binding(\"visible\", \"\", function(v) {\n                    return v.data.isExpanded;\n                }).ofObject(\"\"),\n                $(\n                    go.Panel,\n                    \"Table\", {\n                        name: \"TABLE\",\n                        defaultRowSeparatorStroke: NEUTRAL_COLOR_2,\n                        column: 0,\n                        stretch: go.GraphObject.Fill,\n                        _updateScrollBar: true,\n                        itemTemplate: $(\n                            go.Panel,\n                            \"TableRow\",\n                            new go.Binding(\"portId\", \"key\"), {\n                                fromSpot: go.Spot.LeftRightSides, // links only go from the right side to the left side\n                                toSpot: go.Spot.LeftRightSides,\n                                defaultStretch: go.GraphObject.Horizontal,\n                            },\n                            $(go.TextBlock,\n                                // Section header styling\n                                {\n                                    height: SECTION_HEADER_HEIGHT,\n                                    verticalAlignment: go.Spot.Center,\n                                    margin: new go.Margin(0, 0, 0, 20),\n                                    font: \"400 12px Open Sans, sans-serif\",\n                                    stroke: SECTION_HEADER_COLOR,\n                                    stretch: go.GraphObject.Horizontal,\n                                    shadowVisible: false,\n                                },\n                                new go.Binding(\"visible\", \"\", function(v) {\n                                    return v.isSectionHeader;\n                                }),\n                                new go.Binding(\"text\", \"name\")\n                            ),\n                            $(\n                                go.Shape, {\n                                    // place type icon here\n                                    desiredSize: new go.Size(16, 16),\n                                    stroke: \"transparent\",\n                                    margin: new go.Margin(0, 6, 0, 20),\n                                    alignment: go.Spot.Left,\n                                    shadowVisible: false,\n                                },\n                                new go.Binding(\"geometryString\", \"icon_svg\"),\n                                new go.Binding(\"visible\", \"\", function(v) {\n                                    return (v.icon_svg && !v.isSectionHeader) ? true : false;\n                                })\n                            ),\n                            $(\n                                go.Picture, {\n                                    desiredSize: new go.Size(16, 16),\n                                    margin: new go.Margin(0, 6, 0, 20),\n                                    alignment: go.Spot.Left,\n                                    shadowVisible: false,\n                                },\n                                new go.Binding(\"source\", \"image_path\"),\n                                new go.Binding(\"visible\", \"\", function(v) {\n                                    return (v.image_path && !v.isSectionHeader) ? true : false;\n                                })\n                            ),\n                            $(\n                                go.TextBlock, {\n                                    height: ENTRY_HEIGHT,\n                                    width: FIELD_NAME_WIDTH,\n                                    margin: new go.Margin(0, 0, 0, 40),\n                                    verticalAlignment: go.Spot.Center,\n                                    textAlign: \"left\",\n                                    overflow: go.TextBlock.OverflowEllipsis,\n                                    shadowVisible: false,\n                                    wrap: go.TextBlock.None,\n                                    toolTip: createToolTip(\"name\"),\n                                    alignment: go.Spot.Left,\n                                    font: \"400 16px Open Sans, sans-serif\"\n                                },\n                                new go.Binding(\"text\", \"name\"),\n                                new go.Binding(\"visible\", \"\", function(v) {\n                                    return !v.isSectionHeader;\n                                })\n                            ),\n                            $(\n                                go.TextBlock, {\n                                    height: ENTRY_HEIGHT,\n                                    width: FIELD_TYPE_WIDTH,\n                                    margin: new go.Margin(0, 16, 0, 180),\n                                    verticalAlignment: go.Spot.Center,\n                                    font: \"400 16px Open Sans, sans-serif\",\n                                    textAlign: \"right\",\n                                    overflow: go.TextBlock.OverflowEllipsis,\n                                    wrap: go.TextBlock.None,\n                                    toolTip: createToolTip(\"type\"),\n                                    shadowVisible: false,\n                                },\n                                new go.Binding(\"text\", \"type\"),\n                                new go.Binding(\"visible\", \"\", function(v) {\n                                    return (v.showFieldType && !v.isSectionHeader);\n                                })\n                            ),\n                            new go.Binding(\"background\", \"\", function(i) {\n                                return i.isSectionHeader ? NEUTRAL_COLOR_1 : NEUTRAL_COLOR_0;\n                            })\n                        ),\n                    },\n                    new go.Binding(\"itemArray\", \"tableEntries\", function(v) {\n                        return v.filter(function(x) {\n                            return (x.showExtended || !x.isExtended);\n                        });\n                    })\n                ),\n                $(\n                    go.Panel,\n                    \"Auto\", {\n                        name: \"SCROLLBAR\",\n                        column: 0,\n                        stretch: go.GraphObject.Vertical,\n                        alignment: go.Spot.Right,\n                        visible: true,\n                    },\n                    $(go.Shape, {\n                        fill: NEUTRAL_COLOR_1,\n                        stroke: NEUTRAL_COLOR_2,\n                        strokeWidth: DEFAULT_STROKE_WIDTH,\n                        width: 15,\n                    }),\n                    $(\n                        go.Shape,\n                        \"RoundedRectangle\", {\n                            name: \"SCROLLBARBUTTON\",\n                            stretch: go.GraphObject.Horizontal,\n                            width: 8,\n                            margin: new go.Margin(2, 0, 2, 0),\n                            fill: SCROLLBAR_COLOR,\n                            stroke: \"transparent\",\n                            alignment: go.Spot.Top,\n                            alignmentFocus: go.Spot.Top,\n                            // mouseEnter: function(e, scrollBarButton) {\n                            //     scrollBarButton.stroke = SCROLLBAR_COLOR;\n                            // },\n                            // mouseLeave: function(e, scrollBarButton) {\n                            //     scrollBarButton.stroke = \"transparent\";\n                            // },\n                            cursor: \"pointer\",\n                            isActionable: true,\n                            actionDown: recordInitialScrollPoint,\n                            actionMove: handleScroll,\n                        },\n                        new go.Binding(\"height\", \"tableEntries\", function(v) {\n                            return (\n                                (MAX_TABLE_ENTRIES_SHOWN / countVisibleRows(v, true)) *\n                                (MAX_TABLE_ENTRIES_SHOWN * ENTRY_HEIGHT)\n                            );\n                        })\n                    )))));\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/f53f19bac362fa22ca2e93692d32f18f","value":"f53f19bac362fa22ca2e93692d32f18f"},"sys_update_name":"sn_diagram_builder_shape_template_15ab022d973111102d264ae8f6890d9c","has_recenter_handler":"false","name":"Schema View Node Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":"read"},{"description":"","sys_updated_on":"2024-10-10 09:07:46","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"1661396177261110cd4bf33edc5a9979","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2022-10-14 22:37:35","sys_name":"PD Automation Step Node","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1293c996ad48c7d88400c13afef3cdff","value":"1293c996ad48c7d88400c13afef3cdff"},"template_type":"advanced","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/6f46af93530310100b0cddeeff7b1269","value":"6f46af93530310100b0cddeeff7b1269"},"sys_mod_count":"565","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch, shapeTemplateUtilities, resolveThemeVariable) {\n    // the shared method among shape templates\n    var makeAddButton = go.go.PadCustomizationShared.makeAddButton;\n    var isEditMode = go.go.PadCustomizationShared.isEditMode;\n    var isPreviewMode = go.go.PadCustomizationShared.isPreviewMode;\n\n    var BOUNDING_BOX_EXTRA_HEIGHT = 72;\n    var BOUNDING_BOX_EXTRA_WIDTH = 60;\n    var NODE_WIDTH = 120;\n    var NODE_PROGRESS_GAP = 8;\n\n    var NODE_SIZE = 64;\n    var PORT_SIZE = 12;\n    var PORT_DOT_DIAMETER = 4;\n    var ADD_BUTTON_SIZE = 16;\n    var PORT_ADD_BUTTON_GAP = 6;\n\n    var defaultNodeFill = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.DATAVIS_YELLOW0);\n    var defaultNodeBorderColor = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.DATAVIS_YELLOW2);\n    var defaultNodeFillWithExpType = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.DATAVIS_BLUE0);\n    var defaultNodeBorderColorWithExpType = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.DATAVIS_BLUE1);\n\n    var COLOR_NEUTRAL_19 = go.go.PadCustomizationShared.COLORS.NEUTRAL19;\n    var colorPrimary1 = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.PRIMARY1);\n    var colorPrimary2 = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.PRIMARY2);\n    var colorPrimaryText = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.TEXT_PRIMARY);\n    var colorNeutral0 = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.NEUTRAL0);\n    var colorNeutral8 = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.NEUTRAL8);\n    var colorNeutral19 = resolveThemeVariable(COLOR_NEUTRAL_19);\n    var colorCritical2 = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.CRITICAL2);\n    var colorAlertHigh2 = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.HIGH2);\n    var colorSurfaceBrand1 = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.BRAND1);\n    var colorGroupedPurple0 = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.PURPLE0);\n    var colorGroupedPurple1 = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.PURPLE1);\n    var nodeShadowColor = \"rgba(\" + resolveThemeVariable(COLOR_NEUTRAL_19, false) + \", 0.2)\";\n    var placeholderBorderColor = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.BORDER_TERTIARY);\n    var iconsPlaceholderColor = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.BACKGROUND_PRIMARY);\n    var colorGroupedGray1 = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.GRAY1);\n\n    var ERROR_TEXT_BLOCK = 'ERROR_TEXT_BLOCK';\n    var OUTER_PORT_CIRCLE = 'OUTER_PORT_CIRCLE';\n    var INNER_PORT_CIRCLE = 'INNER_PORT_CIRCLE';\n    var INCOMING_DANGLE_INDICATOR = 'INCOMING_DANGLE_INDICATOR';\n    var OUTGOING_DANGLE_INDICATOR = 'OUTGOING_DANGLE_INDICATOR';\n    var ADD_BUTTON_LEFT = 'ADD_BUTTON_LEFT';\n    var ADD_BUTTON_RIGHT = 'ADD_BUTTON_RIGHT';\n\n    var OUTGOING_PORT_ALIGNMENT = new go.Spot(\n        0,\n        0,\n        BOUNDING_BOX_EXTRA_WIDTH / 2 + NODE_SIZE + 1,\n        BOUNDING_BOX_EXTRA_HEIGHT / 2 + NODE_SIZE / 2\n    );\n\n    var ACTIVITY_NODE_TYPE_EXPERIENCE = 'experience';\n    var ACTIVITY_NODE_TYPE_DECISION = 'decision';\n    var ACTIVITY_NODE_TYPE_PLACEHOLDER = 'placeholder';\n    var ACTIVITY_NODE_TYPE_DEFAULT = 'default';\n\n    var RESTART_RULE_RUN_ONLY_ONCE = 'RUN_ONLY_ONCE';\n\n    var buildChildShapeTemplate = shapeTemplateUtilities.buildChildShapeTemplate; // Function to build child shape templates\n    var children = shapeTemplateUtilities.children; // Array of children shape templates\n\n    function makeIconContainer({\n        icon,\n        getIsShow,\n        margin\n    }) {\n        if (typeof getIsShow !== 'function')\n            getIsShow = function() {\n                return false;\n            };\n\n        var backgroundShapeConfig = {\n            strokeWidth: 1,\n            parameter1: 2,\n            width: 90,\n            height: 22\n        };\n\n        return $(\n            go.Panel,\n            \"Spot\", {\n                margin: margin || new go.Margin(0, 2, 0, 2),\n            },\n            new go.Binding(\"visible\", \"\", function(data) {\n                return getIsShow(data);\n            }),\n            $(\n                go.Shape,\n                \"RoundedRectangle\", {\n                    stroke: placeholderBorderColor\n                },\n                backgroundShapeConfig,\n                new go.Binding(\"fill\", \"\",\n                    function(data) {\n                        return getIsShow(data) ?\n                            data.shouldFillGray && !isShowOverride(data) ?\n                            colorGroupedGray1 :\n                            iconsPlaceholderColor :\n                            'transparent';\n                    })\n            ),\n            $(\n                go.Panel,\n                \"Horizontal\",\n                makeIconWithBackground({\n                    icon: makeIcon({\n                        source: 'icon',\n                        objectSource: 'errors'\n                    }),\n                    toolTip: makeTooltip({\n                        textSource: 'errors',\n                        getTooltipText: function(textSourceValue) {\n                            return textSourceValue?.message;\n                        }\n                    }),\n                    getIsShow: function(data) {\n                        return dataHasError(data);\n                    }\n                }),\n                makeIconWithBackground({\n                    icon: makeIcon({\n                        source: 'icon',\n                        objectSource: 'restart'\n                    }),\n                    toolTip: makeTooltip({\n                        textSource: 'restart',\n                        getTooltipText: function(textSourceValue) {\n                            return textSourceValue?.rule?.displayValue;\n                        }\n                    }),\n                    getIsShow: function(data) {\n                        return isShowRestartRule(data);\n                    }\n                }),\n                makeIconWithBackground({\n                    icon: makeIcon({\n                        source: 'icon',\n                        objectSource: 'variant'\n                    }),\n                    toolTip: makeTooltip({\n                        textSource: 'variant',\n                        getTooltipText: function(textSourceValue) {\n                            return textSourceValue?.rule?.displayValue;\n                        }\n                    }),\n                    getIsShow: function(data) {\n                        return isShowVariant(data);\n                    }\n                }),\n                makeIconWithBackground({\n                    icon: makeIcon({\n                        source: 'icon',\n                        objectSource: 'override'\n                    }),\n                    toolTip: makeTooltip({\n                        textSource: 'override',\n                        getTooltipText: function(textSourceValue) {\n                            return textSourceValue?.rule?.displayValue;\n                        }\n                    }),\n                    getIsShow: function(data) {\n                        return isShowOverride(data);\n                    }\n                })\n            )\n        );\n    }\n\n\n    function makePort(portId, name, spot, alignment, alignmentFocus, output, input) {\n        return $(go.Shape, \"Circle\", {\n            name: name,\n            fill: null,\n            stroke: null,\n            desiredSize: new go.Size(0, 0),\n            alignment: alignment,\n            alignmentFocus: alignmentFocus,\n            portId: portId,\n            fromSpot: spot,\n            toSpot: spot,\n            fromLinkable: output,\n            toLinkable: input,\n            cursor: \"pointer\",\n        });\n    }\n\n    function makeIcon({\n        source,\n        objectSource,\n        addlProps\n    }) {\n        return $(\n            go.Shape,\n            new go.Binding(\"geometry\", '', function(data) {\n                var iconSVG = objectSource ? data[objectSource]?.[source] : data[source];\n\n                if (!iconSVG)\n                    return go.Geometry.parse('');\n                var geometryString = '';\n                // We pass in the entire SVG string from seismic. This way is better because we can use any properties on the SVG here\n                // instead of passing a bunch of different properties from the node data. for example, if there's a fill rule like 'evenodd', or any other properties.\n                var parsedSvg = new DOMParser().parseFromString(iconSVG, \"image/svg+xml\");\n                var paths = parsedSvg.getElementsByTagName(\"path\");\n                for (var i = 0; i < paths.length; i++) {\n                    var path = paths[i];\n                    var pathD = path.getAttribute(\"d\");\n                    var fillRule = path.getAttribute(\"fill-rule\");\n                    if (typeof pathD === \"string\") {\n                        if (fillRule === 'evenodd' || !fillRule) {\n                            if (objectSource === 'override')\n                                geometryString = geometryString.concat('F0 M0 0');\n                            else\n                                geometryString = geometryString.concat('F0');\n                        }\n\n                        geometryString = geometryString.concat(pathD);\n                    }\n                }\n                var geo = go.Geometry.parse(geometryString);\n                geo.normalize();\n                return geo;\n            }),\n            new go.Binding(\"fill\", \"\", function(data) {\n                return !data.shouldFillGray && dataHasError(data) && objectSource === 'errors' ?\n                    data?.errors?.iconColor :\n                    colorPrimaryText;\n            }),\n\n            {\n                stroke: null,\n                ...addlProps\n            }\n        );\n    }\n\n    function makeIconWithBackground({\n        icon,\n        toolTip,\n        getIsShow,\n        getBackgroundColor,\n        getBorderColor,\n        margin,\n        shouldHighlightOnHover = true\n    }) {\n        if (typeof getIsShow !== 'function')\n            getIsShow = function() {\n                return false;\n            };\n        if (typeof getBackgroundColor !== 'function') {\n            getBackgroundColor = function() {\n                return 'transparent';\n            };\n        }\n        if (typeof getBorderColor !== 'function') {\n            getBorderColor = function() {\n                return 'transparent';\n            };\n        }\n        var backgroundShapeConfig = {\n            strokeWidth: 1,\n            parameter1: 2,\n            width: 16,\n            height: 16,\n        };\n        if (shouldHighlightOnHover) {\n            backgroundShapeConfig = {\n                ...backgroundShapeConfig,\n                mouseEnter: function(e, shape, prev) {\n                    if (!isEditMode(e)) return;\n\n                    if (shape?.panel === prev?.panel)\n                        return;\n                    var fill = getBackgroundColor(shape?.part?.data);\n                    if (isValidHexColor(fill))\n                        shape.fill = shadeColor(fill, 10);\n                },\n                mouseLeave: function(e, shape, next) {\n                    if (shape?.panel === next?.panel)\n                        return;\n                    shape.fill = getBackgroundColor(shape?.part?.data);\n                }\n            };\n        }\n        return $(\n            go.Panel,\n            \"Auto\", {\n                margin: margin || new go.Margin(0, 2, 0, 2),\n                toolTip\n            },\n            new go.Binding(\"visible\", \"\", function(data) {\n                return getIsShow(data);\n            }),\n            $(\n                go.Shape,\n                \"RoundedRectangle\",\n                backgroundShapeConfig,\n                new go.Binding(\"fill\", \"\", function(data) {\n                    return getIsShow(data) ?\n                        getBackgroundColor(data) :\n                        'transparent';\n                }),\n                new go.Binding(\"stroke\", \"\", function(data) {\n                    return getIsShow(data) ?\n                        getBorderColor(data) :\n                        'transparent';\n                }),\n            ),\n            icon\n        );\n    }\n\n    /**\n     * Creates tooltip for text based source object\n     * @param {String} args.textSource - Source object name to attach tooltip to\n     * @param {String} [args.textBlockName] - Name of the textblock whose text needs to be\n     *      checked for truncation\n     * @returns {go.Adornment}\n     */\n    function getTooltipForText({\n        textSource,\n        textBlockName\n    }) {\n        return makeTooltip({\n            textSource,\n            getIsShow: function(obj) {\n                // If we're not checking if a textblock is truncated, then\n                // the tooltip is always visible\n                if (!textBlockName)\n                    return true;\n                // Only render if text ends with ellipsis\n                try {\n                    var nameTextBlock = obj.adornedPart.findObject(textBlockName);\n                    var textLines = nameTextBlock.metrics.arrText;\n                    var lastLine = textLines[textLines.length - 1];\n                    return !!lastLine.endsWith(\"...\");\n                } catch {\n                    return false;\n                }\n            }\n        });\n    }\n\n    function makeTooltip({\n        textSource,\n        getTooltipText,\n        getIsShow\n    }) {\n        if (!textSource)\n            return;\n        if (typeof getTooltipText !== 'function')\n            getTooltipText = function(sourceValue) {\n                return sourceValue;\n            };\n        if (typeof getIsShow !== 'function')\n            getIsShow = function() {\n                return true;\n            };\n        return $(\n            go.Adornment,\n            \"Spot\",\n            new go.Binding(\"visible\", \"\", function(obj) {\n                return getIsShow(obj);\n            }).ofObject(),\n            $(\n                go.Panel,\n                \"Auto\",\n                $(go.Shape, {\n                    name: \"toolTipBackground\",\n                    figure: \"RoundedRectangle\",\n                    // parameter1 is border-radius\n                    parameter1: 4,\n                    fill: colorNeutral19,\n                    stroke: colorNeutral19,\n                }),\n                $(\n                    go.TextBlock,\n                    new go.Binding(\"text\", textSource, getTooltipText), {\n                        stroke: colorNeutral0,\n                        maxSize: new go.Size(320, NaN),\n                        margin: new go.Margin(4, 8, 4, 8),\n                    }\n                )\n            )\n        );\n    }\n\n    function drawLink(e, obj) {\n        var node = obj.part.adornedPart;\n        var tool = e.diagram.toolManager.linkingTool;\n        var port = node.findObject(\"PORT_RIGHT\");\n        tool.startObject = port;\n        tool.temporaryToNode.location = e.diagram.lastInput.documentPoint;\n        e.diagram.currentTool = tool;\n        tool.doActivate();\n        tool.temporaryFromNode.ensureBounds();\n        tool.temporaryToNode.ensureBounds();\n        tool.temporaryFromPort = $(go.Shape, 'Circle', {\n            width: PORT_SIZE,\n            height: PORT_SIZE,\n            fill: colorPrimary1,\n            stroke: colorPrimary1,\n            segmentIndex: 0,\n        });\n    }\n\n    function renderPort(showPort) {\n        if (showPort) {\n            return $(\n                go.Panel,\n                \"Table\",\n                new go.Binding(\"mouseEnter\", \"\", function(adornment) {\n                    return function(e, obj) {\n                        if (!isEditMode(e)) return;\n\n                        var outerPortCircle = obj.part.findObject(OUTER_PORT_CIRCLE);\n                        var innerPortCircle = obj.part.findObject(INNER_PORT_CIRCLE);\n                        if (adornment.adornedPart.isSelected && adornment.data.hasOutgoing) {\n                            outerPortCircle.stroke = colorPrimary2;\n                            innerPortCircle.fill = colorPrimary2;\n                        } else {\n                            outerPortCircle.stroke = colorPrimary1;\n                            innerPortCircle.fill = colorPrimary1;\n                        }\n                        outerPortCircle.fill = colorSurfaceBrand1;\n                    };\n                }).ofObject(), {\n                    alignment: OUTGOING_PORT_ALIGNMENT,\n                    alignmentFocus: go.Spot.Center,\n                    cursor: \"pointer\",\n                    isActionable: true,\n                    actionMove: drawLink,\n                    mouseHover: function(e) {\n                        if (!isEditMode(e)) return;\n\n                        var eventClientX = e.event.clientX;\n                        var eventClientY = e.event.clientY;\n\n                        var tooltipLocation = {\n                            x: eventClientX,\n                            y: eventClientY,\n                        };\n\n                        dispatch(\"PAD#DIAGRAM_SHOW_TOOLTIP\", {\n                            type: \"node_connector\",\n                            location: tooltipLocation,\n                        });\n                    },\n                    mouseEnter: function(e, obj) {\n                        if (!isEditMode(e)) return;\n\n                        var outerPortCircle = obj.part.findObject(OUTER_PORT_CIRCLE);\n                        var innerPortCircle = obj.part.findObject(INNER_PORT_CIRCLE);\n                        outerPortCircle.stroke = colorPrimary1;\n                        outerPortCircle.fill = colorSurfaceBrand1;\n                        innerPortCircle.fill = colorPrimary1;\n                    },\n                    mouseLeave: function() {\n                        dispatch(\"PAD#DIAGRAM_HIDE_TOOLTIP\");\n                    },\n                },\n                $(\n                    go.Shape,\n                    \"Circle\",\n                    new go.Binding(\"stroke\", \"\", function(part) {\n                        if (part.data.hasOutgoing) {\n                            if (part.adornedPart.isSelected && isEditMode(part)) {\n                                return colorPrimary1;\n                            } else if (part.data.color) {\n                                return go.Brush.darkenBy(part.data.color, 0.4);\n                            } else if (part.data.activityNodeType === ACTIVITY_NODE_TYPE_PLACEHOLDER) {\n                                return placeholderBorderColor;\n                            } else if (part.data.activityNodeType === ACTIVITY_NODE_TYPE_EXPERIENCE) {\n                                return defaultNodeBorderColorWithExpType;\n                            } else {\n                                return defaultNodeBorderColor;\n                            }\n                        } else {\n                            return colorAlertHigh2;\n                        }\n                    }).ofObject(),\n                    new go.Binding(\"strokeWidth\", \"\", function(part) {\n                        return part.adornedPart.isSelected && part.data.hasOutgoing && isEditMode(part) ?\n                            2 :\n                            1;\n                    }).ofObject(), {\n                        name: OUTER_PORT_CIRCLE,\n                        stretch: go.GraphObject.Fill,\n                        fill: colorNeutral0,\n                        desiredSize: new go.Size(PORT_SIZE, PORT_SIZE),\n                    }\n                ),\n                $(\n                    go.Shape,\n                    \"Circle\",\n                    new go.Binding(\"fill\", \"hasOutgoing\", function(hasOutgoing) {\n                        return hasOutgoing ? colorPrimary1 : colorAlertHigh2;\n                    }), {\n                        name: INNER_PORT_CIRCLE,\n                        strokeWidth: 0,\n                        desiredSize: new go.Size(\n                            PORT_DOT_DIAMETER,\n                            PORT_DOT_DIAMETER\n                        ),\n                    }\n                )\n            );\n        } else {\n            return {};\n        }\n    }\n\n    function leftPortDisabled(data) {\n        return data.leftPortDisabled;\n    }\n\n    function disableCondition(data) {\n        return !data.activityBelongsToCurrentVariant && data.activityNodeType === ACTIVITY_NODE_TYPE_DECISION;\n    }\n\n    function formNodeHoverAdornment(showPort) {\n        return $(\n            go.Adornment,\n            \"Spot\",\n            $(\n                go.Panel,\n                \"Table\",\n                $(go.Shape, {\n                    fill: null,\n                    stroke: null\n                }),\n                $(go.Placeholder, {})\n            ),\n            renderPort(showPort),\n            makeAddButton(\n                $,\n                go,\n                dispatch,\n                resolveThemeVariable, {\n                    name: ADD_BUTTON_LEFT,\n                    label: \"+\",\n                    alignment: new go.Spot(0, 0, BOUNDING_BOX_EXTRA_WIDTH / 2 - (PORT_SIZE / 2 + PORT_ADD_BUTTON_GAP), BOUNDING_BOX_EXTRA_HEIGHT / 2 + NODE_SIZE / 2),\n                    alignmentFocus: go.Spot.Right,\n                    mode: \"standard\",\n                    disableCondition: leftPortDisabled,\n                    clickHandler: function(e, btn) {\n                        if (!isEditMode(btn)) return;\n\n                        dispatch(\"PAD#DIAGRAM_OPEN_BUTTON_TRAY\", {\n                            type: \"picker\",\n                            position: btn.getDocumentPoint(go.Spot.Center),\n                            nodeData: btn.part.data,\n                            nodeContext: 'addLeft'\n                        });\n                    }\n                }\n            ),\n            makeAddButton(\n                $,\n                go,\n                dispatch,\n                resolveThemeVariable, {\n                    name: ADD_BUTTON_RIGHT,\n                    label: \"+\",\n                    alignment: new go.Spot(0, 0, BOUNDING_BOX_EXTRA_WIDTH / 2 + NODE_SIZE + (PORT_SIZE / 2 + PORT_ADD_BUTTON_GAP + 2), BOUNDING_BOX_EXTRA_HEIGHT / 2 + NODE_SIZE / 2),\n                    alignmentFocus: go.Spot.Left,\n                    mode: \"standard\",\n                    disableCondition: disableCondition,\n                    clickHandler: function(e, btn) {\n                        if (!isEditMode(btn)) return;\n\n                        var data = btn.part.data;\n                        if (data.activityNodeType === ACTIVITY_NODE_TYPE_DECISION)\n                            dispatch(\"PAD#DECISION_BRANCH_ADDED\", {\n                                decisionId: data.key\n                            });\n                        else\n                            dispatch(\"PAD#DIAGRAM_OPEN_BUTTON_TRAY\", {\n                                type: \"picker\",\n                                position: btn.getDocumentPoint(go.Spot.Center),\n                                nodeData: data,\n                                nodeContext: 'addRight'\n                            });\n                    }\n                }\n            )\n        );\n    }\n\n    function showAdornmentWithPort(node) {\n        if (node) {\n            if (node.data.activityNodeType === ACTIVITY_NODE_TYPE_DECISION)\n                return false;\n\n            var linksOutOf = node.findLinksOutOf();\n            if (linksOutOf) {\n                return !linksOutOf.any(function(link) {\n                    return link.isSelected;\n                });\n            }\n        }\n        return true;\n    }\n\n    function getFillColor(data) {\n        if (data.activityNodeType === ACTIVITY_NODE_TYPE_PLACEHOLDER)\n            return colorNeutral0;\n        else if (data.color)\n            return data.color;\n        else if (data.activityNodeType === ACTIVITY_NODE_TYPE_EXPERIENCE)\n            return defaultNodeFillWithExpType;\n        else if (data.activityNodeType === ACTIVITY_NODE_TYPE_DECISION)\n            return colorGroupedPurple0;\n        else\n            return defaultNodeFill;\n    }\n\n    function getStrokeColor(part) {\n        if (part.isSelected && isEditMode(part))\n            return colorPrimary1;\n        else if (dataHasError(part.data))\n            return part.data?.errors?.borderColor;\n        else if (part.data.borderColor)\n            return resolveThemeVariable(part.data.borderColor);\n        else if (part.data.color)\n            return go.Brush.darkenBy(part.data.color, .4);\n        else if (part.data.activityNodeType === ACTIVITY_NODE_TYPE_PLACEHOLDER)\n            return placeholderBorderColor;\n        else if (part.data.activityNodeType === ACTIVITY_NODE_TYPE_EXPERIENCE)\n            return defaultNodeBorderColorWithExpType;\n        else if (part.data.activityNodeType === ACTIVITY_NODE_TYPE_DECISION)\n            return colorGroupedPurple1;\n        else\n            return defaultNodeBorderColor;\n    }\n\n    function handleMouseEnterAndHover(data) {\n        return function(e, node) {\n            var shape = node.findObject(\"MAIN_NODE_SHAPE\");\n            if (data.shouldFillGray && !data.hasParentError && !node.isSelected) {\n                shape.fill = getFillColor(data);\n                shape.stroke = getStrokeColor(node);\n            }\n            if (isPreviewMode(e)) {\n                shape.stroke = colorPrimary1;\n                node.isSelected = true;\n                dispatch(\"PAD#DIAGRAM_NODE_HIGHLIGHTED_VIEW_ONLY\", {\n                    node: node,\n                    diagram: e.diagram,\n                    highlight: true\n                });\n            } else {\n                var nodeHoverAdornment = formNodeHoverAdornment(showAdornmentWithPort(node));\n                dispatch(\"PAD#DIAGRAM_NODE_HIGHLIGHTED\", {\n                    node: node,\n                    diagram: e.diagram,\n                    adornment: nodeHoverAdornment,\n                    highlight: true\n                });\n            }\n        };\n    }\n\n    /**\n     * Creates shapes for concentric circle indicator\n     * @param args - Object containing name, alignment, color (for stroke and fill), and visibilityFunc\n     * @returns GoJS Panel\n     */\n    function makeDanglingIndicator(args) {\n        return $(go.Panel, \"Table\", new go.Binding(\"visible\", \"\", args.visibilityFunc), {\n                name: args.name,\n                alignment: args.alignment,\n                alignmentFocus: go.Spot.Center,\n            },\n            $(go.Shape, \"Circle\", {\n                stretch: go.GraphObject.Fill,\n                fill: colorNeutral0,\n                stroke: args.color,\n                strokeWidth: 1,\n                desiredSize: new go.Size(PORT_SIZE, PORT_SIZE),\n            }),\n            $(go.Shape, \"Circle\", {\n                fill: args.color,\n                stroke: args.color,\n                strokeWidth: 0,\n                desiredSize: new go.Size(PORT_DOT_DIAMETER, PORT_DOT_DIAMETER)\n            }));\n    }\n\n    function leaveNode(node, next) {\n        // two cases of the adornment as next.part, which indicates that the mouse does not leave the current node\n        if (next?.part instanceof go.Adornment) {\n            // 1. the adornment is part of the current node (the add button)\n            if (next.part.adornedObject === node) {\n                return false;\n            }\n            // 2. the adornment is part of the selected link to or from the current node\n            if (next.part.adornedObject.part instanceof go.Link) {\n                var link = next.part.adornedObject.part;\n                if (link.isSelected && (link.fromNode?.data?.key === node.data.key || link.toNode?.data?.key === node.data.key)) {\n                    return false;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    function dataHasError(data) {\n        return !!data?.errors?.hasErrors;\n    }\n\n    function isShowRestartRule(data) {\n        return (\n            !!data?.restart?.rule?.value &&\n            data.restart.rule.value !== RESTART_RULE_RUN_ONLY_ONCE\n        );\n    }\n\n\n    function isShowVariant(data) {\n        return (\n            data?.variant?.showVariant\n        );\n    }\n\n    function isShowOverride(data) {\n        return (\n            data?.override?.showOverride\n        );\n    }\n\n    function isShowIcons(data) {\n        return (isShowRestartRule(data) || isShowVariant(data) || dataHasError(data) || isShowOverride(data));\n    }\n\n    function isValidHexColor(color) {\n        return /^#[0-9A-F]{6}$/i.test(color);\n    }\n\n    function shadeColor(color, percent) {\n        var R = parseInt(color.substring(1, 3), 16);\n        var G = parseInt(color.substring(3, 5), 16);\n        var B = parseInt(color.substring(5, 7), 16);\n\n        R = parseInt(R * (100 - percent) / 100);\n        G = parseInt(G * (100 - percent) / 100);\n        B = parseInt(B * (100 - percent) / 100);\n\n        R = (R < 255) ? R : 255;\n        G = (G < 255) ? G : 255;\n        B = (B < 255) ? B : 255;\n\n        R = Math.round(R);\n        G = Math.round(G);\n        B = Math.round(B);\n\n        var RR = ((R.toString(16).length == 1) ? \"0\" + R.toString(16) : R.toString(16));\n        var GG = ((G.toString(16).length == 1) ? \"0\" + G.toString(16) : G.toString(16));\n        var BB = ((B.toString(16).length == 1) ? \"0\" + B.toString(16) : B.toString(16));\n\n        return \"#\" + RR + GG + BB;\n    }\n\n    return $(\n        go.Node,\n        \"Spot\",\n        new go.Binding(\"opacity\", \"isHidden\", function(isHidden) {\n            return isHidden === true ? 0.0 : 1.0;\n        }),\n        new go.Binding(\"cursor\", '', function(data, model) {\n            return data && (data.isHidden || !isEditMode(model)) === true ? \"default\" : \"pointer\";\n        }),\n        new go.Binding('selectable', '', function(data, model) {\n            return !data.isHidden && !data.hasParentError;\n        }),\n        new go.Binding('mouseEnter', '', handleMouseEnterAndHover),\n        new go.Binding('mouseHover', '', handleMouseEnterAndHover),\n        new go.Binding('mouseLeave', '', function(data) {\n            return function(e, node, next) {\n                var shape = node.findObject(\"MAIN_NODE_SHAPE\");\n                if (isPreviewMode(e)) {\n                    shape.stroke = null;\n                    node.isSelected = false;\n                    dispatch(\"PAD#DIAGRAM_NODE_HIGHLIGHTED_VIEW_ONLY\", {\n                        node: node,\n                        diagram: e.diagram,\n                        highlight: false\n                    });\n                    return;\n                }\n                if (!isEditMode(e)) return;\n                if (data.shouldFillGray && !node.isSelected) {\n                    shape.fill = colorGroupedGray1;\n                    shape.stroke = colorNeutral8;\n                }\n                if (leaveNode(node, next)) {\n                    dispatch(\"PAD#DIAGRAM_NODE_HIGHLIGHTED\", {\n                        node: node,\n                        diagram: e.diagram,\n                        highlight: false\n                    });\n                }\n            };\n        }), {\n            name: \"ActivityNode\",\n            layerName: \"Foreground\",\n            selectionAdorned: false,\n            isShadowed: false,\n            shadowColor: nodeShadowColor,\n            shadowOffset: new go.Point(0, 4),\n            shadowBlur: 8,\n            margin: 0,\n            minLocation: new go.Point(NaN, -Infinity),\n            maxLocation: new go.Point(NaN, Infinity),\n            mouseHold: function(e, node) {\n                if (!isEditMode(e)) return;\n\n                node.isShadowed = false;\n                var shape = node.findObject(\"MAIN_NODE_SHAPE\");\n                shape.strokeDashArray = null;\n                shape.stroke = colorPrimary1;\n            },\n        },\n        $(\n            go.Panel,\n            go.Panel.Position,\n            $(go.Shape, \"RoundedRectangle\",\n                new go.Binding(\"position\", \"isSelected\", function(isSelected) {\n                    // When the node is selected, the extra stroke width nudges it down and right a little\n                    // The extra 0.5 nudges it back up and left back to the center\n                    return isSelected ? new go.Point(\n                            -(BOUNDING_BOX_EXTRA_WIDTH / 2 - 0.5),\n                            -(BOUNDING_BOX_EXTRA_HEIGHT / 2 - 0.5)\n                        ) :\n                        new go.Point(\n                            -(BOUNDING_BOX_EXTRA_WIDTH / 2),\n                            -(BOUNDING_BOX_EXTRA_HEIGHT / 2)\n                        );\n                }).ofObject(), {\n                    fill: \"transparent\",\n                    width: NODE_SIZE + BOUNDING_BOX_EXTRA_WIDTH,\n                    height: NODE_SIZE + BOUNDING_BOX_EXTRA_HEIGHT,\n                    stroke: null,\n                }),\n            $(go.Panel, \"Spot\",\n                $(go.Shape, new go.Binding(\"figure\", \"\", function(data) {\n                        if (data.activityNodeType === ACTIVITY_NODE_TYPE_EXPERIENCE ||\n                            data.activityNodeType === ACTIVITY_NODE_TYPE_PLACEHOLDER)\n                            return \"RoundedRectangle\";\n                        else if (data.activityNodeType === ACTIVITY_NODE_TYPE_DECISION) {\n                            return \"RoundedDiamond\";\n                        } else\n                            return \"Circle\";\n                    }),\n                    new go.Binding(\"fill\", \"\", function(part) {\n                        if (part.data.shouldFillGray && !part.isSelected)\n                            return colorGroupedGray1;\n                        return getFillColor(part.data);\n                    }).ofObject(),\n                    new go.Binding(\"stroke\", \"\", function(part) {\n                        if (part.data.shouldFillGray && !part.isSelected && !isShowOverride(part.data))\n                            return colorNeutral8;\n                        return getStrokeColor(part);\n                    }).ofObject(),\n                    new go.Binding(\"strokeWidth\", \"\", function(part) {\n                        if ((part.isSelected && isEditMode(part)) || dataHasError(part?.data) || part.data.borderColor)\n                            return 2;\n                        else\n                            return 1;\n                    }).ofObject(),\n                    new go.Binding(\"strokeDashArray\", '', function(part) {\n                        if (!part.isSelected && part.data.incompleteActivity)\n                            return [4, 5];\n                    }).ofObject(), {\n                        name: \"MAIN_NODE_SHAPE\",\n                        width: NODE_SIZE,\n                        height: NODE_SIZE\n                    }),\n                makeIcon({\n                    source: 'nodeIcon',\n                    addlProps: {\n                        shadowVisible: false,\n                        // Used so hovering over icon does not change mouse cursor type\n                        pickable: false\n                    }\n                })\n            )\n        ),\n        $(\n            go.TextBlock,\n            new go.Binding(\"stroke\", \"\", function(part) {\n                if (part.isSelected && isEditMode(part))\n                    return colorPrimary1;\n                else\n                    return colorPrimaryText;\n            }).ofObject(),\n            new go.Binding(\"text\").makeTwoWay(),\n            new go.Binding(\"font\", \"labelFont\"), {\n                name: \"activityName\",\n                textAlign: \"center\",\n                overflow: go.TextBlock.OverflowEllipsis,\n                maxLines: 2,\n                alignment: new go.Spot(0, 0, BOUNDING_BOX_EXTRA_WIDTH / 2 + NODE_SIZE / 2, BOUNDING_BOX_EXTRA_HEIGHT / 2 + NODE_SIZE + 4),\n                alignmentFocus: go.Spot.TopCenter,\n                width: NODE_WIDTH,\n                height: 32,\n                margin: 0,\n                shadowVisible: false,\n                // Below are undocumented properties, used to adjust the spacing between lines\n                spacingAbove: 1,\n                editable: false,\n                background: \"transparent\",\n                toolTip: getTooltipForText({\n                    textSource: \"text\",\n                    textBlockName: \"activityName\",\n                })\n            }\n        ),\n        $(\n            go.Panel,\n            \"Horizontal\", {\n                alignment: go.Spot.BottomCenter,\n                alignmentFocus: go.Spot.TopCenter\n            },\n            makeIconContainer({\n                getIsShow: function(data) {\n                    return isShowIcons(data);\n                }\n            })\n        ),\n        makeDanglingIndicator({\n            name: INCOMING_DANGLE_INDICATOR,\n            alignment: new go.Spot(0, 0, BOUNDING_BOX_EXTRA_WIDTH / 2 + 1, BOUNDING_BOX_EXTRA_HEIGHT / 2 + NODE_SIZE / 2),\n            color: colorCritical2,\n            visibilityFunc: function(data) {\n                return !data.hasIncoming && !data.leftPortDisabled;\n            }\n        }),\n        makeDanglingIndicator({\n            name: OUTGOING_DANGLE_INDICATOR,\n            alignment: OUTGOING_PORT_ALIGNMENT,\n            color: colorAlertHigh2,\n            visibilityFunc: function(data) {\n                return !data.hasOutgoing;\n            }\n        }),\n        makePort(\n            \"c0bed67c535c20100b0cddeeff7b12fc\",\n            \"PORT_LEFT\",\n            go.Spot.Left,\n            new go.Spot(0, 0.5),\n            new go.Spot(0.5, 1, -BOUNDING_BOX_EXTRA_WIDTH / 2, 0),\n            false,\n            true\n        ),\n        makePort(\n            \"49de92bc535c20100b0cddeeff7b12f9\",\n            \"PORT_RIGHT\",\n            go.Spot.Right,\n            new go.Spot(1, 0.5),\n            new go.Spot(0.5, 1, BOUNDING_BOX_EXTRA_WIDTH / 2, 0),\n            true,\n            false\n        ),\n        $(go.Panel, \"Spot\", {\n                alignment: new go.Spot(0.5, 0, 0, NODE_SIZE / 2 - NODE_PROGRESS_GAP),\n            },\n            // Building the loading child template\n            buildChildShapeTemplate(children[0], {}),\n        )\n    );\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1293c996ad48c7d88400c13afef3cdff","value":"1293c996ad48c7d88400c13afef3cdff"},"sys_update_name":"sn_diagram_builder_shape_template_1661396177261110cd4bf33edc5a9979","has_recenter_handler":"false","name":"PD Automation Step Node","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n    // Implement click handler\n}","sys_policy":"read"},{"description":"Panel for toggle triangle. Separated out to create extra layer so that if toggle is invisible, the order remains visible","sys_updated_on":"2021-07-02 02:52:23","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"19403192b7c93010388487c2de11a983","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2021-07-02 00:31:47","sys_name":"Flow Parent Toggle Panel Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/5d3727d3530310100b0cddeeff7b12d7","value":"5d3727d3530310100b0cddeeff7b12d7"},"sys_mod_count":"1","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_19403192b7c93010388487c2de11a983","has_recenter_handler":"false","name":"Flow Parent Toggle Panel Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2023-01-17 18:08:58","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"1ae2ca4853a82110ffc2ddeeff7b123e","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2023-01-17 18:08:58","sys_name":"Subflow InsOuts Node Body Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/3ff9eb17530310100b0cddeeff7b12b4","value":"3ff9eb17530310100b0cddeeff7b12b4"},"sys_mod_count":"0","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_1ae2ca4853a82110ffc2ddeeff7b123e","has_recenter_handler":"false","name":"Subflow InsOuts Node Body Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"Condition node's output port for Then","sys_updated_on":"2021-10-27 11:20:45","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"1dbaeef253c020100b0cddeeff7b12da","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2020-10-28 04:53:06","sys_name":"If Node Then Output Port Shape Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/5d3727d3530310100b0cddeeff7b12d7","value":"5d3727d3530310100b0cddeeff7b12d7"},"sys_mod_count":"3","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_1dbaeef253c020100b0cddeeff7b12da","has_recenter_handler":"false","name":"If Node Then Output Port Shape Template","tab_click_handler":"","sys_policy":""},{"description":"","sys_updated_on":"2023-06-29 15:45:44","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"1dccb4e0437fe5109177f17dd9b8f2fb","recenter_handler":"function isRecenterRequired(selection, diagram, threshold, dispatch) {\n\t// Implement recenter handler\n\treturn true;\n}","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2023-06-29 15:43:53","sys_name":"Flow Try Node Header Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/802a6f17530310100b0cddeeff7b1213","value":"802a6f17530310100b0cddeeff7b1213"},"sys_mod_count":"3","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch, buildShapeTemplate, children) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_1dccb4e0437fe5109177f17dd9b8f2fb","has_recenter_handler":"false","name":"Flow Try Node Header Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2023-04-24 23:11:17","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"1f2aaa9777d22110f92a7a8c8c5a9935","recenter_handler":"function isRecenterRequired(selection, diagram, threshold, dispatch) {\n\t// Implement recenter handler\n\treturn true;\n}","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2023-04-24 23:11:17","sys_name":"Flow Try Node Body Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/802a6f17530310100b0cddeeff7b1213","value":"802a6f17530310100b0cddeeff7b1213"},"sys_mod_count":"0","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_1f2aaa9777d22110f92a7a8c8c5a9935","has_recenter_handler":"false","name":"Flow Try Node Body Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2024-10-03 16:20:02","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"1f9c0b866487e110f877f985001f1119","recenter_handler":"function isRecenterRequired(selection, diagram, threshold, dispatch) {\n\t// Implement recenter handler\n\treturn true;\n}","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2023-05-28 11:47:20","sys_name":"Flow Natlang Input Text","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"advanced","sys_created_by":"maint","aria_label":"","shape":"","sys_mod_count":"41","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch, shapeTemplateUtilities, resolveThemeVariable) {\n    var node = $(go.Panel, \"Auto\", {\n            background: resolveThemeVariable(\"--now-color_background--primary\") || \"#FFFFFF\",\n            shadowVisible: false,\n        },\n        $(\n            go.TextBlock, {\n                margin: new go.Margin(0, 0, 0, 0),\n                font: '12px \"Open Sans\", sans-serif',\n                textAlign: \"left\",\n                shadowVisible: false,\n                overflow: go.TextBlock.OverflowEllipsis,\n                width: 270,\n                maxSize: new go.Size(275, 35),\n                maxLines: 2,\n                stroke: resolveThemeVariable(\"--now-color_text--primary\") || \"#10171B\"\n            },\n            new go.Binding(\"text\", \"\", function(graphObject) {\n                if (graphObject.data && graphObject.data.conditionDisplay) {\n                    return graphObject.data.conditionDisplay;\n                }\n                return \"\";\n            })\n        ), {\n            // Tooltips are exempt from semantic variables because\n            // they don't change colors between themes\n            toolTip: $(go.Adornment, \"Auto\",\n                $(go.Panel, \"Auto\", {\n                        background: resolveThemeVariable(\"--now-color--neutral-19\") || \"#0E1116\",\n                    },\n                    $(go.TextBlock, {\n                            margin: 7,\n                            stroke: resolveThemeVariable(\"--now-color--neutral-0\") || \"#FFFFFF\",\n                            font: '10px \"Open Sans\", sans-serif',\n                            maxSize: new go.Size(175, NaN)\n                        },\n                        new go.Binding(\"text\", \"\", function(graphObject) {\n                            if (graphObject.data && graphObject.data.fullConditionDisplay) {\n                                return graphObject.data.fullConditionDisplay;\n                            }\n                            return \"\";\n                        })\n                    )\n                )\n            )\n        }\n    );\n\n\n    return node;\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_1f9c0b866487e110f877f985001f1119","has_recenter_handler":"false","name":"Flow Natlang Input Text","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2022-05-18 22:09:09","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"1fe596e9c3e301105c68006c2840dd6a","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2022-05-18 22:09:09","sys_name":"Flow Stage Node Body Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/3ff9eb17530310100b0cddeeff7b12b4","value":"3ff9eb17530310100b0cddeeff7b12b4"},"sys_mod_count":"0","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_1fe596e9c3e301105c68006c2840dd6a","has_recenter_handler":"false","name":"Flow Stage Node Body Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2023-04-19 18:19:07","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"2047ff21c35a2110acabb4cdb840ddeb","recenter_handler":"function isRecenterRequired(selection, diagram, threshold, dispatch) {\n\t// Implement recenter handler\n\treturn true;\n}","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2023-04-19 18:19:07","sys_name":"Tooltip Shape Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/86dafd0ec3c42110acabb4cdb840dd3b","value":"86dafd0ec3c42110acabb4cdb840dd3b"},"sys_mod_count":"0","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch,getDependentShapeTemplate) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_2047ff21c35a2110acabb4cdb840ddeb","has_recenter_handler":"false","name":"Tooltip Shape Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2023-05-17 21:45:34","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"2092b0b643ba21109177f17dd9b8f2a7","recenter_handler":"function isRecenterRequired(selection, diagram, threshold, dispatch) {\n\t// Implement recenter handler\n\treturn true;\n}","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2023-05-17 21:42:49","sys_name":"Flow Horizontal Line","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/e7a4a8bf531ce0100b0cddeeff7b129b","value":"e7a4a8bf531ce0100b0cddeeff7b129b"},"sys_mod_count":"2","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_2092b0b643ba21109177f17dd9b8f2a7","has_recenter_handler":"false","name":"Flow Horizontal Line","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2021-07-01 00:50:45","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"24e767fdb7813010388487c2de11a933","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2021-06-30 19:57:29","sys_name":"Flow Logic Node Main Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/3ff9eb17530310100b0cddeeff7b12b4","value":"3ff9eb17530310100b0cddeeff7b12b4"},"sys_mod_count":"2","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_24e767fdb7813010388487c2de11a933","has_recenter_handler":"false","name":"Flow Logic Node Main Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2021-06-24 19:59:57","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"25ce600077c1b010b2b4ddd9cf5a9982","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2021-06-24 19:59:57","sys_name":"Flow Action Node Main Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/3ff9eb17530310100b0cddeeff7b12b4","value":"3ff9eb17530310100b0cddeeff7b12b4"},"sys_mod_count":"0","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_25ce600077c1b010b2b4ddd9cf5a9982","has_recenter_handler":"false","name":"Flow Action Node Main Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2024-06-11 10:05:04","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"25fee410772521108188ceec8e5a9975","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2023-03-08 23:49:01","sys_name":"PD Lane Start Node Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1293c996ad48c7d88400c13afef3cdff","value":"1293c996ad48c7d88400c13afef3cdff"},"template_type":"advanced","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/5d3727d3530310100b0cddeeff7b12d7","value":"5d3727d3530310100b0cddeeff7b12d7"},"sys_mod_count":"145","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch, shapeTemplateUtilities, resolveThemeVariable) {\n    // the shared method among shape templates\n    var makeAddButton = go.go.PadCustomizationShared.makeAddButton;\n    var isEditMode = go.go.PadCustomizationShared.isEditMode;\n\n    var ADD_BUTTON_SIZE = 16;\n    var PORT_SIZE = 12;\n    var PORT_DOT_DIAMETER = 4;\n    var START_SHAPE_PORT_X_PADDING = 10;\n    var START_SHAPE_PORT_Y_PADDING = 2.5;\n    var START_SHAPE_WIDTH = 15;\n    var START_SHAPE_HEIGHT = 16;\n    var BOUNDING_BOX_WIDTH = 44;\n    var BOUNDING_BOX_HEIGHT = 18;\n    var PORT_ADD_BUTTON_GAP = 6;\n\n    var colorPrimary = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.PRIMARY1);\n    var colorWhite = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.NEUTRAL1);\n    var coloNeutral8 = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.NEUTRAL8);\n    var colorBorderSecondary = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.BORDER_SECONDARY);\n    var colorSurfaceBrand1 = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.BRAND1);\n    var colorAlertHigh2 = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.HIGH2);\n\n    var OUTER_PORT_CIRCLE = 'OUTER_PORT_CIRCLE';\n    var INNER_PORT_CIRCLE = 'INNER_PORT_CIRCLE';\n    var VIRTUAL_START_DRAG_HANDLE = 'VIRTUAL_START_DRAG_HANDLE';\n\n    function drawLink(e, obj) {\n        var node = obj.part;\n        var tool = e.diagram.toolManager.linkingTool;\n        var port = node.findObject(\"PORT_DRAW\");\n        tool.startObject = port;\n        tool.temporaryToNode.location = e.diagram.lastInput.documentPoint;\n        e.diagram.currentTool = tool;\n        tool.doActivate();\n        tool.temporaryFromNode.ensureBounds();\n        tool.temporaryToNode.ensureBounds();\n        tool.temporaryFromPort = $(go.Shape, 'Circle', {\n            width: PORT_SIZE,\n            height: PORT_SIZE,\n            fill: colorPrimary,\n            stroke: colorPrimary,\n            segmentIndex: 0,\n        });\n    }\n\n    function handleMouseEnterAndHover(e, node) {\n        if (!isEditMode(e)) return;\n\n        var nodeHoverAdornment = formNodeHoverAdornment();\n        dispatch(\"PAD#DIAGRAM_NODE_HIGHLIGHTED\", {\n            node: node,\n            diagram: e.diagram,\n            adornment: nodeHoverAdornment,\n            highlight: true\n        });\n    }\n\n    function leaveNode(node, next) {\n        // two cases of the adornment as next.part, which indicates that the mouse does not leave the current node\n        if (next?.part instanceof go.Adornment) {\n            // 1. the adornment is part of the current node (the add button)\n            if (next.part.adornedObject === node) {\n                return false;\n            }\n            // 2. the adornment is part of the selected link to or from the current node\n            if (next.part.adornedObject.part instanceof go.Link) {\n                var link = next.part.adornedObject.part;\n                if (link.isSelected && (link.fromNode?.data?.key === node.data.key || link.toNode?.data?.key === node.data.key)) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n\n    function handleMouseLeave(e, node, next) {\n        if (leaveNode(node, next)) {\n            dispatch(\"PAD#DIAGRAM_NODE_HIGHLIGHTED\", {\n                node: node,\n                diagram: e.diagram,\n                highlight: false\n            });\n        }\n    }\n\n    function formNodeHoverAdornment() {\n        return $(\n            go.Adornment,\n            \"Spot\", $(\n                go.Panel,\n                \"Auto\",\n                $(go.Shape, {\n                    fill: null,\n                    stroke: null\n                }),\n                $(go.Placeholder, {})\n            ),\n            makeAddButton(\n                $,\n                go,\n                dispatch,\n                resolveThemeVariable, {\n                    name: \"ADD_BUTTON_RIGHT\",\n                    label: \"+\",\n                    alignment: new go.Spot(0, 0, START_SHAPE_WIDTH + PORT_SIZE / 2 + PORT_ADD_BUTTON_GAP + 2, ADD_BUTTON_SIZE / 2 + 2),\n                    alignmentFocus: go.Spot.Left,\n                    mode: \"standard\",\n                    clickHandler: function(e, btn) {\n                        if (!isEditMode(btn)) return;\n\n                        dispatch(\"PAD#DIAGRAM_OPEN_BUTTON_TRAY\", {\n                            type: \"picker\",\n                            position: btn.getDocumentPoint(go.Spot.Center),\n                            nodeData: btn.part.data,\n                            nodeContext: 'addRight',\n                        });\n                    }\n                }\n            )\n        );\n    }\n\n    function makePort(portId, name, spot, alignment, alignmentFocus, output, input) {\n        return $(go.Shape, \"Circle\", {\n            name: name,\n            fill: null,\n            stroke: null,\n            desiredSize: new go.Size(0, 0),\n            alignment: alignment,\n            alignmentFocus: alignmentFocus,\n            portId: portId,\n            fromSpot: spot,\n            toSpot: spot,\n            fromLinkable: output,\n            toLinkable: input,\n            cursor: \"pointer\",\n        });\n    }\n\n    return $(\n        go.Node,\n        \"Spot\", {\n            selectionAdorned: false,\n            layerName: \"Foreground\",\n            mouseEnter: handleMouseEnterAndHover,\n            mouseHover: handleMouseEnterAndHover,\n            mouseLeave: handleMouseLeave,\n        },\n        $(\n            go.Panel,\n            \"Position\",\n            new go.Binding(\"opacity\", \"hasOutgoing\", function(hasOutgoing) {\n                return hasOutgoing ? 0 : 1;\n            }), {\n                name: VIRTUAL_START_DRAG_HANDLE\n            },\n            $(go.Shape, \"Rectangle\", {\n                name: VIRTUAL_START_DRAG_HANDLE,\n                width: BOUNDING_BOX_WIDTH,\n                height: BOUNDING_BOX_HEIGHT,\n                fill: \"transparent\",\n                stroke: null,\n            }),\n            $(go.Shape, \"RoundedHalfSemiCircle\", {\n                name: \"virtualStartShape\",\n                angle: 90,\n                width: START_SHAPE_WIDTH,\n                height: START_SHAPE_HEIGHT,\n                fill: coloNeutral8,\n                stroke: coloNeutral8,\n                margin: new go.Margin(1, 0, 0, 1)\n            }),\n            $(\n                go.Panel,\n                \"Table\",\n                new go.Binding(\"mouseLeave\", \"\", function(data) {\n                    return function(e, obj) {\n                        dispatch(\"PAD#DIAGRAM_HIDE_TOOLTIP\");\n\n                        var outerPortCircle = obj.part.findObject(OUTER_PORT_CIRCLE);\n                        var innerPortCircle = obj.part.findObject(INNER_PORT_CIRCLE);\n                        outerPortCircle.fill = colorWhite;\n\n                        if (data.hasOutgoing) {\n                            outerPortCircle.stroke = colorBorderSecondary;\n                            innerPortCircle.fill = colorPrimary;\n                        } else {\n                            outerPortCircle.stroke = colorAlertHigh2;\n                            innerPortCircle.fill = colorAlertHigh2;\n                        }\n                    };\n                }), {\n                    name: \"virtualStartPort\",\n                    position: new go.Point(START_SHAPE_PORT_X_PADDING, START_SHAPE_PORT_Y_PADDING),\n                    cursor: \"pointer\",\n                    isActionable: true,\n                    actionMove: drawLink,\n                    mouseHover: function(e) {\n                        if (!isEditMode(e)) return;\n\n                        var eventClientX = e.event.clientX;\n                        var eventClientY = e.event.clientY;\n                        var tooltipLocation = {\n                            x: eventClientX,\n                            y: eventClientY,\n                        };\n                        dispatch(\"PAD#DIAGRAM_SHOW_TOOLTIP\", {\n                            type: \"node_connector\",\n                            location: tooltipLocation,\n                        });\n                    },\n                    mouseEnter: function(e, obj) {\n                        if (!isEditMode(e)) return;\n\n                        var outerPortCircle = obj.part.findObject(OUTER_PORT_CIRCLE);\n                        var innerPortCircle = obj.part.findObject(INNER_PORT_CIRCLE);\n                        outerPortCircle.stroke = colorPrimary;\n                        outerPortCircle.fill = colorSurfaceBrand1;\n                        innerPortCircle.fill = colorPrimary;\n                    },\n                    mouseLeave: function(e, obj) {\n                        dispatch(\"PAD#DIAGRAM_HIDE_TOOLTIP\");\n                    },\n                },\n                $(go.Shape, \"Circle\",\n                    new go.Binding(\"stroke\", \"hasOutgoing\", function(hasOutgoing) {\n                        return hasOutgoing ? colorBorderSecondary : colorAlertHigh2;\n                    }), {\n                        name: OUTER_PORT_CIRCLE,\n                        fill: colorWhite,\n                        strokeWidth: 1,\n                        desiredSize: new go.Size(PORT_SIZE, PORT_SIZE),\n                    }),\n                $(go.Shape, \"Circle\",\n                    new go.Binding(\"fill\", \"hasOutgoing\", function(hasOutgoing) {\n                        return hasOutgoing ? colorPrimary : colorAlertHigh2;\n                    }), {\n                        name: INNER_PORT_CIRCLE,\n                        strokeWidth: 0,\n                        desiredSize: new go.Size(PORT_DOT_DIAMETER, PORT_DOT_DIAMETER),\n                    })\n            )\n        ),\n        makePort(\n            \"49de92bc535c20100b0cddeeff7b12f9\",\n            \"PORT_RIGHT\",\n            go.Spot.Right,\n            new go.Spot(1, 0.5),\n            new go.Spot(0.5, 1, BOUNDING_BOX_WIDTH + 1.5, 0),\n            true,\n            false\n        ),\n        makePort(\n            \"PORT_DRAW\",\n            \"PORT_DRAW\",\n            go.Spot.Right,\n            new go.Spot(0, 0.5),\n            new go.Spot(0, 0, -START_SHAPE_WIDTH - 1, 0.5),\n            true,\n            false\n        )\n    );\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1293c996ad48c7d88400c13afef3cdff","value":"1293c996ad48c7d88400c13afef3cdff"},"sys_update_name":"sn_diagram_builder_shape_template_25fee410772521108188ceec8e5a9975","has_recenter_handler":"false","name":"PD Lane Start Node Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n    // Implement click handler\n}","sys_policy":"read"},{"description":"","sys_updated_on":"2021-10-27 11:20:45","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"277a355953b92010b553ddeeff7b121d","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2021-01-18 09:18:43","sys_name":"Loop Node Body Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/3ff9eb17530310100b0cddeeff7b12b4","value":"3ff9eb17530310100b0cddeeff7b12b4"},"sys_mod_count":"5","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_277a355953b92010b553ddeeff7b121d","has_recenter_handler":"false","name":"Loop Node Body Template","tab_click_handler":"","sys_policy":""},{"description":"","sys_updated_on":"2024-08-05 06:57:33","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"27ec9ac6537342105124ddeeff7b12ca","recenter_handler":"function isRecenterRequired(selection, diagram, threshold, dispatch) {\n\t// Implement recenter handler\n\treturn true;\n}","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2024-08-05 06:57:33","sys_name":"Loader State Table Panel Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/a968024a537310100b0cddeeff7b1231","value":"a968024a537310100b0cddeeff7b1231"},"sys_mod_count":"0","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch, shapeTemplateUtilities, resolveThemeVariable) {\n    /*\n    // Sample code to reuse the child shape templates\n    var buildChildShapeTemplate = shapeTemplateUtilities.buildChildShapeTemplate; // Function to build child shape templates\n    var children = shapeTemplateUtilities.children; // Array of children shape templates\n\n    // To pass the props from parent to child shape template\n    var props = {\n        'stroke': 'blue',\n\t\t'fill': resolveThemeVariable('--now-color--primary-0'), // Syntax to retrieve the value associated with the specified theme variable\n\t\t'background': resolveThemeVariable('--now-color--primary-0', false) // Syntax to retrieve the rgb value associated with the specified color theme variable. By default, returns hex value\n    };\n\n    return $(go.Node, 'Auto',\n        buildChildShapeTemplate(children[0], props), // Build the first child shape template, if any.\n        buildChildShapeTemplate(children[1], props) // Build the second shape template, if any.\n    );\n\n    // Usage of the json props in child shape template that are passed from the parent\n    var jsonProps = shapeTemplateUtilities.jsonProps; // JSON props passed from the parent shape template\n\n    return $(go.Node, 'Auto',\n        buildChildShapeTemplate(children[0], jsonProps), // Build the first child shape template, if any.\n        buildChildShapeTemplate(children[1], jsonProps.stroke) // Build the second shape template, if any.\n    );\n\t*/\n\n    return $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_27ec9ac6537342105124ddeeff7b12ca","has_recenter_handler":"false","name":"Loader State Table Panel Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2021-06-03 22:37:43","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"28a9c5d5772cf010b2b4ddd9cf5a99c1","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2021-06-03 22:37:43","sys_name":"Flow Action Node Body Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/3ff9eb17530310100b0cddeeff7b12b4","value":"3ff9eb17530310100b0cddeeff7b12b4"},"sys_mod_count":"0","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_28a9c5d5772cf010b2b4ddd9cf5a99c1","has_recenter_handler":"false","name":"Flow Action Node Body Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"Dynamic ports item template panel shape template for each port","sys_updated_on":"2022-10-10 07:50:36","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"28dd35a977e11110b2e09dcc3c5a9984","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2022-08-26 06:29:10","sys_name":"Dynamic Port Auto Panel Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/5d3727d3530310100b0cddeeff7b12d7","value":"5d3727d3530310100b0cddeeff7b12d7"},"sys_mod_count":"3","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_28dd35a977e11110b2e09dcc3c5a9984","has_recenter_handler":"false","name":"Dynamic Port Auto Panel Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2021-07-30 00:51:58","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"29514257b7e13010388487c2de11a935","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2021-07-30 00:51:58","sys_name":"Blank Shape Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/5d3727d3530310100b0cddeeff7b12d7","value":"5d3727d3530310100b0cddeeff7b12d7"},"sys_mod_count":"0","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_29514257b7e13010388487c2de11a935","has_recenter_handler":"false","name":"Blank Shape Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2023-04-24 22:13:25","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"2bcc569f77922110f92a7a8c8c5a99ab","recenter_handler":"function isRecenterRequired(selection, diagram, threshold, dispatch) {\n\t// Implement recenter handler\n\treturn true;\n}","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2023-04-24 22:13:25","sys_name":"Flow Try Rounded Rectangle Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/8e182fd3530310100b0cddeeff7b124c","value":"8e182fd3530310100b0cddeeff7b124c"},"sys_mod_count":"0","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_2bcc569f77922110f92a7a8c8c5a99ab","has_recenter_handler":"false","name":"Flow Try Rounded Rectangle Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2021-11-19 06:25:56","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"2cbcc78ab7573010388487c2de11a9d1","recenter_handler":"","sys_updated_by":"admin","tabbable":"true","sys_created_on":"2021-10-21 08:58:25","sys_name":"Flow Link Add Button Panel Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"Add a node button","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/5d3727d3530310100b0cddeeff7b12d7","value":"5d3727d3530310100b0cddeeff7b12d7"},"sys_mod_count":"6","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_2cbcc78ab7573010388487c2de11a9d1","has_recenter_handler":"false","name":"Flow Link Add Button Panel Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"Root template for Make a Decision branch node. This is the node that appears at the top of each decision block indicating which decision the block is for.","sys_updated_on":"2022-08-19 21:11:04","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"2da0a06c77a11110b2b4ddd9cf5a99fe","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2022-08-22 21:11:04","sys_name":"Flow MAD Branch Node Base Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"base","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/4416da03535710100b0cddeeff7b126c","value":"4416da03535710100b0cddeeff7b126c"},"sys_mod_count":"0","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_2da0a06c77a11110b2b4ddd9cf5a99fe","has_recenter_handler":"false","name":"Flow MAD Branch Node Base Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2024-10-03 06:42:21","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"2e1248584f3a2110ffc2fde0b1ce0b0c","recenter_handler":"function isRecenterRequired(selection, diagram, threshold, dispatch) {\n\t// Implement recenter handler\n\treturn true;\n}","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2023-05-09 23:46:04","sys_name":"Flow Action Info Input Text","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"advanced","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/5d3727d3530310100b0cddeeff7b12d7","value":"5d3727d3530310100b0cddeeff7b12d7"},"sys_mod_count":"77","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch, shapeTemplateUtilities, resolveThemeVariable) {\n    var node = $(go.Panel, \"Horizontal\", {\n            shadowVisible: false,\n            stretch: go.GraphObject.Horizontal,\n        },\n\t\tnew go.Binding(\"minSize\", \"\", function(data) {\n                    if (data.instanceType === \"FlowLogicInstanceType\") {\n                        return new go.Size(270, NaN);\n                    }\n                    return new go.Size(290, NaN);\n                }),\n        new go.Binding(\"desiredSize\", \"\", function(data, panel) {\n            var parentPanelWidth = panel.panel.actualBounds.width;\n            // set the maximum width to be the width of the parent panel\n            // you may need to adjust this based on the layout of your node or part\n            return new go.Size(parentPanelWidth, 24);\n        }),\n        $(go.Panel, \"Position\", {\n                stretch: go.GraphObject.Horizontal,\n            },\n            new go.Binding(\"desiredSize\", \"\", function(data, panel) {\n                var parentPanelWidth = panel.panel.actualBounds.width;\n                // set the maximum width to be the width of the parent panel\n                // you may need to adjust this based on the layout of your node or part\n                return new go.Size(parentPanelWidth, 24);\n            }),\n            $(go.Shape, \"RoundedRectangle\", {\n                fill: resolveThemeVariable(\"--now-color_background--tertiary\") || \"#E1E4E6\",\n                stroke: null,\n                height: 24,\n                stretch: go.GraphObject.Horizontal\n            },\n\t\t\tnew go.Binding(\"minSize\", \"\", function(data) {\n                    if (data.instanceType === \"FlowLogicInstanceType\") {\n                        return new go.Size(270, NaN);\n                    }\n                    return new go.Size(290, NaN);\n                })\n\t\t\t),\n            $(go.Panel, \"Table\", {\n                    stretch: go.GraphObject.Fill,\n                },\n                new go.Binding(\"desiredSize\", \"\", function(data, panel) {\n                    var parentPanelWidth = panel.panel.actualBounds.width;\n                    var height = panel.panel.actualBounds.height;\n                    // set the maximum width to be the width of the parent panel\n                    // you may need to adjust this based on the layout of your node or part\n                    return new go.Size(parentPanelWidth, height);\n                }),\n                $(go.TextBlock, {\n                        stretch: go.GraphObject.Horizontal,\n                        font: '12px \"Open Sans\", sans-serif',\n\t\t\t\t\t\tstroke: resolveThemeVariable(\"--now-color_text--primary\") || \"#10171B\",\n                        textAlign: \"left\",\n                        editable: false,\n                        height: 24,\n                        overflow: go.TextBlock.OverflowEllipsis,\n                        maxLines: 1,\n                        row: 0,\n                        verticalAlignment: go.Spot.Center,\n                        name: \"AnnotationTextBlock\",\n                        isMultiline: false,\n                        wrap: go.TextBlock.WrapBreakAll\n                    },\n                    new go.Binding(\"margin\", \"\", function(data, panel) {\n                        // flow logics are slightly smaller, so we need to address the size\n                        if (data.instanceType === \"FlowLogicInstanceType\") {\n                            return new go.Margin(0, 8, 0, 8);\n                        }\n                        return new go.Margin(0, 8, 0, 8);\n                    }),\n                    new go.Binding(\"text\", \"comment\").makeTwoWay()\n                ), {\n                    toolTip: $(go.Adornment, \"Auto\",\n                        $(go.Panel, \"Auto\", {\n                                background: resolveThemeVariable(\"--now-color--neutral-19\") || \"#0E1116\"\n                            },\n                            $(go.TextBlock, {\n                                    margin: 7,\n                                    stroke: resolveThemeVariable(\"--now-color--neutral-0\") || \"#FFFFFF\",\n                                    font: '10px \"Open Sans\", sans-serif',\n                                },\n                                new go.Binding(\"maxSize\", \"\", function(data) {\n                                    if (data.instanceType === \"FlowLogicInstanceType\") {\n                                        return new go.Size(100, NaN);\n                                    }\n                                    return new go.Size(175, NaN);\n                                }),\n                                new go.Binding(\"text\", \"\", function(graphObject) {\n                                    if (graphObject.comment) {\n                                        return graphObject.comment;\n                                    }\n                                    return \"\";\n                                })\n                            )\n                        )\n                    )\n                }\n            )\n        )\n    );\n\n    return node;\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_2e1248584f3a2110ffc2fde0b1ce0b0c","has_recenter_handler":"false","name":"Flow Action Info Input Text","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2022-02-11 02:12:47","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"2e6e57dac32101105c68006c2840dd60","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2022-02-11 01:15:37","sys_name":"Flow Stage Main Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/3ff9eb17530310100b0cddeeff7b12b4","value":"3ff9eb17530310100b0cddeeff7b12b4"},"sys_mod_count":"4","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_2e6e57dac32101105c68006c2840dd60","has_recenter_handler":"false","name":"Flow Stage Main Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2021-10-27 11:20:45","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"2f20157353dc24100b0cddeeff7b12d3","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2020-11-12 11:04:21","sys_name":"Loop Node Port Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/5d3727d3530310100b0cddeeff7b12d7","value":"5d3727d3530310100b0cddeeff7b12d7"},"sys_mod_count":"3","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_2f20157353dc24100b0cddeeff7b12d3","has_recenter_handler":"false","name":"Loop Node Port Template","tab_click_handler":"","sys_policy":""},{"description":"A Table template with two rows - one for title and other for subtitle of an action","sys_updated_on":"2021-10-27 11:20:45","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"3378024a537310100b0cddeeff7b128f","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2020-10-13 08:10:09","sys_name":"Action Node Name Panel Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/a968024a537310100b0cddeeff7b1231","value":"a968024a537310100b0cddeeff7b1231"},"sys_mod_count":"5","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_3378024a537310100b0cddeeff7b128f","has_recenter_handler":"false","name":"Action Node Name Panel Template","tab_click_handler":"","sys_policy":""},{"description":"","sys_updated_on":"2022-05-18 22:17:44","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"35d7926dc3e301105c68006c2840dd17","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2022-05-18 22:17:44","sys_name":"Flow Stage Node Name Container Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/3ff9eb17530310100b0cddeeff7b12b4","value":"3ff9eb17530310100b0cddeeff7b12b4"},"sys_mod_count":"0","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_35d7926dc3e301105c68006c2840dd17","has_recenter_handler":"false","name":"Flow Stage Node Name Container Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2023-01-02 09:37:56","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"391efa0bc3c42110acabb4cdb840ddc0","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2023-01-02 09:37:56","sys_name":"Placeholder","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/6dd6e0fb535ce0100b0cddeeff7b125a","value":"6dd6e0fb535ce0100b0cddeeff7b125a"},"sys_mod_count":"0","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_391efa0bc3c42110acabb4cdb840ddc0","has_recenter_handler":"false","name":"Placeholder","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2021-08-03 20:39:45","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"39a6bab8c33530105c68006c2840dd4a","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2021-08-03 20:35:46","sys_name":"Flow Broken Body Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/3ff9eb17530310100b0cddeeff7b12b4","value":"3ff9eb17530310100b0cddeeff7b12b4"},"sys_mod_count":"1","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_39a6bab8c33530105c68006c2840dd4a","has_recenter_handler":"false","name":"Flow Broken Body Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2021-07-01 22:03:21","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"39b5ac487781b010b2b4ddd9cf5a9965","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2021-06-24 19:20:06","sys_name":"Flow Action Node Left Label Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/5d3727d3530310100b0cddeeff7b12d7","value":"5d3727d3530310100b0cddeeff7b12d7"},"sys_mod_count":"4","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_39b5ac487781b010b2b4ddd9cf5a9965","has_recenter_handler":"false","name":"Flow Action Node Left Label Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"Try Catch Shape Template","sys_updated_on":"2023-04-24 21:17:39","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"3affced377922110f92a7a8c8c5a9966","recenter_handler":"function isRecenterRequired(selection, diagram, threshold, dispatch) {\n\t// Implement recenter handler\n\treturn true;\n}","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2023-04-24 21:17:39","sys_name":"Flow Try Node Shape Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"base","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/03775d6b5398a0100b0cddeeff7b129e","value":"03775d6b5398a0100b0cddeeff7b129e"},"sys_mod_count":"0","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_3affced377922110f92a7a8c8c5a9966","has_recenter_handler":"false","name":"Flow Try Node Shape Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2023-04-24 23:19:54","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"3bdb261b77d22110f92a7a8c8c5a991e","recenter_handler":"function isRecenterRequired(selection, diagram, threshold, dispatch) {\n\t// Implement recenter handler\n\treturn true;\n}","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2023-04-24 23:19:54","sys_name":"Flow Try Group Node Placeholder Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/6dd6e0fb535ce0100b0cddeeff7b125a","value":"6dd6e0fb535ce0100b0cddeeff7b125a"},"sys_mod_count":"0","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_3bdb261b77d22110f92a7a8c8c5a991e","has_recenter_handler":"false","name":"Flow Try Group Node Placeholder Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2023-06-29 15:44:19","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"40aaa2d777d22110f92a7a8c8c5a9935","recenter_handler":"function isRecenterRequired(selection, diagram, threshold, dispatch) {\n\t// Implement recenter handler\n\treturn true;\n}","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2023-04-24 23:12:53","sys_name":"Flow Try Node Header Main Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/3ff9eb17530310100b0cddeeff7b12b4","value":"3ff9eb17530310100b0cddeeff7b12b4"},"sys_mod_count":"3","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_40aaa2d777d22110f92a7a8c8c5a9935","has_recenter_handler":"false","name":"Flow Try Node Header Main Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2023-07-04 07:44:02","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"42beb88643b321109177f17dd9b8f298","recenter_handler":"function isRecenterRequired(selection, diagram, threshold, dispatch) {\n\t// Implement recenter handler\n\treturn true;\n}","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2023-07-04 07:44:02","sys_name":"Flow Action Node Info Text Container","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/802a6f17530310100b0cddeeff7b1213","value":"802a6f17530310100b0cddeeff7b1213"},"sys_mod_count":"0","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch, buildShapeTemplate, children) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_42beb88643b321109177f17dd9b8f298","has_recenter_handler":"false","name":"Flow Action Node Info Text Container","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"Dynamic ports vertical panel shape template to hold ports","sys_updated_on":"2022-08-26 09:26:55","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"440cfd2977e11110b2e09dcc3c5a995b","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2022-08-26 06:21:47","sys_name":"Dynamic Port Vertical Panel Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/802a6f17530310100b0cddeeff7b1213","value":"802a6f17530310100b0cddeeff7b1213"},"sys_mod_count":"2","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_440cfd2977e11110b2e09dcc3c5a995b","has_recenter_handler":"false","name":"Dynamic Port Vertical Panel Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2021-06-17 00:25:51","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"44eed4a977f430104f27ceec8e5a996d","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2021-06-17 00:25:51","sys_name":"Flow Logic Node Body Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/3ff9eb17530310100b0cddeeff7b12b4","value":"3ff9eb17530310100b0cddeeff7b12b4"},"sys_mod_count":"0","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_44eed4a977f430104f27ceec8e5a996d","has_recenter_handler":"false","name":"Flow Logic Node Body Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2021-10-27 11:20:45","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"458864f7539ce0100b0cddeeff7b1223","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2020-11-12 08:10:58","sys_name":"Table Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/a968024a537310100b0cddeeff7b1231","value":"a968024a537310100b0cddeeff7b1231"},"sys_mod_count":"3","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_458864f7539ce0100b0cddeeff7b1223","has_recenter_handler":"false","name":"Table Template","tab_click_handler":"","sys_policy":""},{"description":"","sys_updated_on":"2023-05-17 17:27:10","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"45db6be9b7013010388487c2de11a996","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2021-06-30 02:04:26","sys_name":"Flow Logic Node Base Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"base","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/03775d6b5398a0100b0cddeeff7b129e","value":"03775d6b5398a0100b0cddeeff7b129e"},"sys_mod_count":"2","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_45db6be9b7013010388487c2de11a996","has_recenter_handler":"false","name":"Flow Logic Node Base Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2024-09-09 15:37:56","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"46c6efa953906110d67cddeeff7b12dd","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2023-01-10 07:00:27","sys_name":"PD Lane Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1293c996ad48c7d88400c13afef3cdff","value":"1293c996ad48c7d88400c13afef3cdff"},"template_type":"advanced","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/bfaaef17530310100b0cddeeff7b12e3","value":"bfaaef17530310100b0cddeeff7b12e3"},"sys_mod_count":"417","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch, shapeTemplateUtilities, resolveThemeVariable) {\n    // consistent with process-designer-configuration.constants.js's ENABLE_FEATURES.STAGES\n    var PROCESS_TYPE_CONFIGURATION_ENABLE_FEATURES_STAGES = 'stages';\n\n    // the shared method among shape templates\n    var makeAddButton = go.go.PadCustomizationShared.makeAddButton;\n    var isEditMode = go.go.PadCustomizationShared.isEditMode;\n\n    var LANE_NAME_TEXTBLOCK_PANEL = \"LANE_NAME_TEXTBLOCK_PANEL\";\n    var LANE_NODE_SHAPE = \"LANE_NODE_SHAPE\";\n    var LANE_LABEL = \"LANE_LABEL\";\n    var INCOMING_DANGLE_INDICATOR = \"INCOMING_DANGLE_INDICATOR\";\n    var OUTGOING_DANGLE_INDICATOR = \"OUTGOING_DANGLE_INDICATOR\";\n    var OUTER_PORT_CIRCLE = 'OUTER_PORT_CIRCLE';\n    var INNER_PORT_CIRCLE = 'INNER_PORT_CIRCLE';\n\n    var COLOR_NEUTRAL_19 = go.go.PadCustomizationShared.COLORS.NEUTRAL19;\n    var colorPrimary = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.PRIMARY1);\n    var colorPrimary2 = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.PRIMARY2);\n    var colorPrimaryText = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.TEXT_PRIMARY);\n    var colorWhite = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.NEUTRAL1);\n    var nodeShadowColor = \"rgba(\" + resolveThemeVariable(COLOR_NEUTRAL_19, false) + \", 0.2)\";\n    var colorNeutral0 = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.NEUTRAL0);\n    var colorNeutral19 = resolveThemeVariable(COLOR_NEUTRAL_19);\n\n    // Border config.\n    var BORDER_COLOR_DEFAULT = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.NEUTRAL6);\n    var BORDER_RADIUS_DEFAULT = 4;\n    var BORDER_WIDTH_DEFAULT = 1;\n    var BORDER_COLOR_SELECTED = colorPrimary;\n    var BORDER_WIDTH_SELECTED = 2;\n\n    var FILL_COLOR_DEFAULT = colorWhite;\n\n    // Label.\n    var LABEL_COLOR_SELECTED = colorPrimary;\n    var LABEL_MARGIN_BOTTOM = 4;\n    var LABEL_MARGIN_LEFT = 12;\n    var LABEL_MARGIN_RIGHT = 4;\n    var LABEL_MARGIN_TOP = 8;\n\n    // Lane sizes.\n    var LANE_DEFAULT_HEIGHT = 184;\n    var LANE_DEFAULT_WIDTH = 192;\n\n    // Port config.\n    var PORT_CIRCLE_COLOR_DEFAULT = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.BORDER_SECONDARY);\n    var PORT_CIRCLE_COLOR_HOVERED = colorPrimary;\n    var PORT_CIRCLE_COLOR_SELECTED = colorPrimary;\n    var PORT_CIRCLE_COLOR_SELECTED_HOVERED = colorPrimary2;\n    var PORT_CIRCLE_FILL_DEFAULT = colorNeutral0;\n    var PORT_CIRCLE_FILL_HOVERED = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.SECONDARY0);\n    var PORT_CIRCLE_FILL_SELECTED_HOVERED = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.BRAND1);\n    var PORT_CIRCLE_WIDTH_DEFAULT = 1;\n    var PORT_CIRCLE_WIDTH_SELECTED = 2;\n    var PORT_DOT_COLOR_DEFAULT = colorPrimary;\n    var PORT_DOT_COLOR_SELECTED = colorPrimary;\n    var PORT_DOT_DIAMETER_DEFAULT = 4;\n\n    // Danging indicator config.\n    var DANGLING_INDICATOR_CIRCLE_WIDTH = 1;\n    var DANGLING_INDICATOR_DOT_DIAMETER = 4;\n    var DANGLING_INDICATOR_INCOMING_COLOR = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.CRITICAL2);\n    var DANGLING_INDICATOR_OUTGOING_COLOR = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.HIGH2);\n\n    // Link config.\n    var LINK_DOT_COLOR = colorPrimary2;\n    var LINK_DOT_DIAMETER = 12;\n\n    var ADD_BUTTON_SIZE = 16;\n    var TITLE_HEIGHT = 28;\n    var PORT_SIZE = 12;\n    var BOUNDING_BOX_EXTRA_WIDTH = 60;\n    var PORT_ADD_BUTTON_GAP = 6;\n    var STAGE_TITLE_HEIGHT_INCLUDING_PADDING_AND_MARGIN =\n        TITLE_HEIGHT + LABEL_MARGIN_TOP + LABEL_MARGIN_BOTTOM;\n\n    var indicatorLayerName = \"Adornment\";\n    var RESTART_RULE_RUN_ONLY_ONCE = 'RUN_ONLY_ONCE';\n\n    // https://forum.nwoods.com/t/make-group-decorator-above-its-content/16306\n    function GroupWithIndicators() {\n        go.Group.call(this);\n    }\n\n    go.Diagram.inherit(GroupWithIndicators, go.Group);\n\n    GroupWithIndicators.prototype.updateAdornments = function() {\n        go.Group.prototype.updateAdornments.call(this);\n        if (GroupWithIndicators.incomingIndicator === null) return;\n        var adLeft = this.findAdornment(INCOMING_DANGLE_INDICATOR);\n        if (adLeft === null) {\n            // each Link must have its own copy of the labelTemplate\n            adLeft = GroupWithIndicators.incomingIndicator.copy();\n            adLeft.adornedObject = this;\n            this.addAdornment(INCOMING_DANGLE_INDICATOR, adLeft);\n        }\n        if (GroupWithIndicators.outgoingIndicator === null) return;\n        var adRight = this.findAdornment(OUTGOING_DANGLE_INDICATOR);\n        if (adRight === null) {\n            // each Link must have its own copy of the labelTemplate\n            adRight = GroupWithIndicators.outgoingIndicator.copy();\n            adRight.adornedObject = this;\n            this.addAdornment(OUTGOING_DANGLE_INDICATOR, adRight);\n        }\n    };\n\n    GroupWithIndicators.incomingIndicator = $(\n        go.Adornment,\n        \"Spot\", {\n            layerName: indicatorLayerName\n        },\n        $(go.Placeholder),\n        $(go.Panel, \"Table\",\n            new go.Binding(\"visible\", \"\", function(data) {\n                return !data.hasIncoming;\n            }), {\n                name: 'INDICATOR',\n                alignmentFocus: new go.Spot(0, 0.5, -(BOUNDING_BOX_EXTRA_WIDTH / 2 - PORT_SIZE / 2), 0.5)\n            },\n            $(go.Shape, \"Circle\", {\n                stretch: go.GraphObject.Fill,\n                fill: colorWhite,\n                stroke: DANGLING_INDICATOR_INCOMING_COLOR,\n                strokeWidth: DANGLING_INDICATOR_CIRCLE_WIDTH,\n                desiredSize: new go.Size(PORT_SIZE, PORT_SIZE),\n            }),\n            $(go.Shape, \"Circle\", {\n                fill: DANGLING_INDICATOR_INCOMING_COLOR,\n                stroke: DANGLING_INDICATOR_INCOMING_COLOR,\n                strokeWidth: 0,\n                desiredSize: new go.Size(DANGLING_INDICATOR_DOT_DIAMETER, DANGLING_INDICATOR_DOT_DIAMETER),\n            })\n        )\n    ).copyTemplate(true);\n\n    GroupWithIndicators.outgoingIndicator = $(\n        go.Adornment,\n        \"Spot\", {\n            layerName: indicatorLayerName\n        },\n        $(go.Placeholder),\n        $(go.Panel, \"Table\",\n            new go.Binding(\"visible\", \"\", function(data) {\n                return !(data.hasOutgoing);\n            }), {\n                name: 'INDICATOR',\n                alignmentFocus: new go.Spot(1, 0.5, BOUNDING_BOX_EXTRA_WIDTH / 2 - PORT_SIZE / 2 + 1, 0.5),\n            },\n            $(go.Shape, \"Circle\", {\n                stretch: go.GraphObject.Fill,\n                fill: colorWhite,\n                stroke: DANGLING_INDICATOR_OUTGOING_COLOR,\n                strokeWidth: DANGLING_INDICATOR_CIRCLE_WIDTH,\n                desiredSize: new go.Size(PORT_SIZE, PORT_SIZE),\n            }),\n            $(go.Shape, \"Circle\", {\n                fill: DANGLING_INDICATOR_OUTGOING_COLOR,\n                stroke: DANGLING_INDICATOR_OUTGOING_COLOR,\n                strokeWidth: 0,\n                desiredSize: new go.Size(DANGLING_INDICATOR_DOT_DIAMETER, DANGLING_INDICATOR_DOT_DIAMETER),\n            })\n        )\n    ).copyTemplate(true);\n\n    function PDGroupLayout() {\n        function AlignedLayeredDigraphVertex(net) {\n            go.LayeredDigraphVertex.call(this, net);\n        }\n        go.Diagram.inherit(AlignedLayeredDigraphVertex, go.LayeredDigraphVertex);\n        AlignedLayeredDigraphVertex.prototype.commit = function() {\n            var node = this.node;\n            if (node !== null) {\n                node.move(this.bounds.position);\n            }\n        }\n\n        function AlignedLayeredDigraphNetwork(lay) {\n            go.LayeredDigraphNetwork.call(this, lay);\n        }\n        go.Diagram.inherit(AlignedLayeredDigraphNetwork, go.LayeredDigraphNetwork);\n        AlignedLayeredDigraphNetwork.prototype.createVertex = function() {\n            return new AlignedLayeredDigraphVertex(this);\n        }\n\n        function AlignedLayeredDigraphLayout() {\n            go.LayeredDigraphLayout.call(this);\n        }\n        go.Diagram.inherit(AlignedLayeredDigraphLayout, go.LayeredDigraphLayout);\n        AlignedLayeredDigraphLayout.prototype.createNetwork = function() {\n            return new AlignedLayeredDigraphNetwork(this);\n        }\n        AlignedLayeredDigraphLayout.prototype.assignLayers = function() {\n            go.LayeredDigraphLayout.prototype.assignLayers.call(this);\n\n            // for every vertex, record the maximum vertex width or height for the vertex's layer\n            var maxsizes = [];\n            for (var it = this.network.vertexes.iterator; it.next();) {\n                var v = it.value;\n                var lay = v.layer;\n                var max = maxsizes[lay];\n                if (max === undefined) max = 0;\n                var sz = v.width;\n                if (sz > max) maxsizes[lay] = sz;\n            }\n            // now make sure every vertex has the maximum width or height according to which layer it is in,\n            // and aligned on the left (if horizontal) or the top (if vertical)\n            for (it = this.network.vertexes.iterator; it.next();) {\n                var v = it.value;\n                var node = v.node;\n                if (node === null) continue;\n                var lay = v.layer;\n                var max = maxsizes[lay];\n                v.focus = new go.Point(max / 2, v.focus.y);\n                v.width = max;\n            }\n            // from now on, the LayeredDigraphLayout will think that the Node is bigger than it really is\n            // (other than the ones that are the widest or tallest in their respective layer).\n        }\n\n        AlignedLayeredDigraphLayout.prototype.commitLinks = function() {\n            go.LayeredDigraphLayout.prototype.commitLinks.call(this);\n            this.network.edges.each((e) => {\n                var l = e.link;\n                if (!l) return;\n\n                l.updateRoute();\n                var pts = l.points.copy();\n                if (pts.count >= 6) {\n                    var p2 = pts.elt(pts.length - 4);\n                    var p3 = pts.elt(pts.length - 3);\n\n                    var nodeX = l.toNode.position.x;\n                    var x = nodeX - 25;\n                    pts.setElt(pts.length - 4, new go.Point(x, p2.y));\n                    pts.setElt(pts.length - 3, new go.Point(x, p3.y));\n                    l.points = pts;\n                }\n            });\n        }\n\n        return $(AlignedLayeredDigraphLayout, {\n            layerSpacing: 50,\n            linkSpacing: 20,\n            layeringOption: go.LayeredDigraphLayout.LayerLongestPathSource,\n            alignOption: go.LayeredDigraphLayout.AlignAll,\n        });\n    }\n\n    go.Diagram.inherit(PDGroupLayout, go.LayeredDigraphLayout);\n    PDGroupLayout.prototype.commitLinks = function() {\n        go.LayeredDigraphLayout.prototype.commitLinks.call(this);\n        this.network.edges.each((e) => {\n            var l = e.link;\n            if (!l) return;\n\n            l.updateRoute();\n            var pts = l.points.copy();\n            if (pts.count >= 6) {\n                var p2 = pts.elt(pts.length - 4);\n                var p3 = pts.elt(pts.length - 3);\n\n                var nodeX = l.toNode.position.x;\n                var x = nodeX - 25;\n                pts.setElt(pts.length - 4, new go.Point(x, p2.y));\n                pts.setElt(pts.length - 3, new go.Point(x, p3.y));\n                l.points = pts;\n            }\n        });\n    };\n\n    function makePort(args) {\n        return $(go.Shape, \"Circle\", {\n            name: args.name,\n            fill: null,\n            stroke: null,\n            desiredSize: new go.Size(0, 0),\n            alignment: args.alignment,\n            alignmentFocus: args.alignmentFocus,\n            portId: args.portId,\n            fromSpot: args.spot,\n            toSpot: args.spot,\n            fromLinkable: args.isOutgoing,\n            toLinkable: !args.isOutgoing,\n            cursor: \"pointer\",\n        });\n    }\n\n    function makeIcon({\n        source,\n        objectSource,\n        addlProps\n    }) {\n        return $(\n            go.Shape,\n            new go.Binding(\"geometry\", '', function(data) {\n                var iconSVG = objectSource ? data[objectSource]?.[source] : data[source];\n\n                if (!iconSVG)\n                    return go.Geometry.parse('');\n                var geometryString = '';\n                // We pass in the entire SVG string from seismic. This way is better because we can use any properties on the SVG here\n                // instead of passing a bunch of different properties from the node data. for example, if there's a fill rule like 'evenodd', or any other properties.\n                var parsedSvg = new DOMParser().parseFromString(iconSVG, \"image/svg+xml\");\n                var paths = parsedSvg.getElementsByTagName(\"path\");\n                for (var i = 0; i < paths.length; i++) {\n                    var path = paths[i];\n                    var pathD = path.getAttribute(\"d\");\n                    var fillRule = path.getAttribute(\"fill-rule\");\n                    if (typeof pathD === \"string\") {\n                        if (fillRule === 'evenodd' || !fillRule)\n                            geometryString = geometryString.concat('F0');\n                        geometryString = geometryString.concat(pathD);\n                    }\n                }\n                var geo = go.Geometry.parse(geometryString);\n                geo.normalize();\n                return geo;\n            }), {\n                stroke: null,\n                fill: colorPrimaryText,\n                ...addlProps\n            }\n        );\n    }\n\n    function makeIconWithBackground({\n        icon,\n        toolTip,\n        getIsShow,\n        getBackgroundColor,\n        getBorderColor,\n        margin,\n        shouldHighlightOnHover = true\n    }) {\n        if (typeof getIsShow !== 'function')\n            getIsShow = function() {\n                return false;\n            };\n        if (typeof getBackgroundColor !== 'function') {\n            getBackgroundColor = function() {\n                return 'transparent';\n            };\n        }\n        if (typeof getBorderColor !== 'function') {\n            getBorderColor = function() {\n                return 'transparent';\n            };\n        }\n        var backgroundShapeConfig = {\n            strokeWidth: 1,\n            parameter1: 2,\n            width: 16,\n            height: 16,\n        };\n        if (shouldHighlightOnHover) {\n            backgroundShapeConfig = {\n                ...backgroundShapeConfig,\n                mouseEnter: function(e, shape, prev) {\n                    if (!isEditMode(e)) return;\n\n                    if (shape?.panel === prev?.panel)\n                        return;\n                    var fill = getBackgroundColor(shape?.part?.data);\n                    if (isValidHexColor(fill))\n                        shape.fill = shadeColor(fill, 10);\n                },\n                mouseLeave: function(e, shape, next) {\n                    if (shape?.panel === next?.panel)\n                        return;\n                    shape.fill = getBackgroundColor(shape?.part?.data);\n                }\n            };\n        }\n        return $(\n            go.Panel,\n            \"Auto\", {\n                margin: margin || new go.Margin(0, 2, 0, 2),\n                toolTip\n            },\n            new go.Binding(\"visible\", \"\", function(data) {\n                return getIsShow(data);\n            }),\n            $(\n                go.Shape,\n                \"RoundedRectangle\",\n                backgroundShapeConfig,\n                new go.Binding(\"fill\", \"\", function(data) {\n                    return getIsShow(data) &&\n                        getBackgroundColor(data) ||\n                        'transparent';\n                }),\n                new go.Binding(\"stroke\", \"\", function(data) {\n                    return getIsShow(data) &&\n                        getBorderColor(data) ||\n                        'transparent';\n                })\n            ),\n            icon\n        );\n    }\n\n    function disableCondition(data, name) {\n        return !data.hasIncoming && name === \"ADD_BUTTON_LEFT\";\n    }\n\n    /**\n     * Creates tooltip for text based source object\n     * @param {String} args.textSource - Source object name to attach tooltip to\n     * @param {String} [args.textBlockName] - Name of the textblock whose text needs to be\n     * \t\tchecked for truncation\n     * @returns {go.Adornment}\n     */\n    function getTooltipForText({\n        textSource,\n        textBlockName\n    }) {\n        return makeTooltip({\n            textSource,\n            getIsShow: function(obj) {\n                // If we're not checking if a textblock is truncated, then\n                // the tooltip is always visible\n                if (!textBlockName)\n                    return true;\n                // Only render if text ends with ellipsis\n                try {\n                    var nameTextBlock = obj.adornedPart.findObject(textBlockName);\n                    var textLines = nameTextBlock.metrics.arrText;\n                    var lastLine = textLines[textLines.length - 1];\n                    return !!lastLine.endsWith(\"...\");\n                } catch {\n                    return false;\n                }\n            }\n        });\n    }\n\n    function makeTooltip({\n        textSource,\n        getTooltipText,\n        getIsShow\n    }) {\n        if (!textSource)\n            return;\n        if (typeof getTooltipText !== 'function')\n            getTooltipText = function(sourceValue) {\n                return sourceValue;\n            };\n        if (typeof getIsShow !== 'function')\n            getIsShow = function() {\n                return true;\n            };\n        return $(\n            go.Adornment,\n            \"Spot\",\n            new go.Binding(\"visible\", \"\", function(obj) {\n                return getIsShow(obj);\n            }).ofObject(),\n            $(\n                go.Panel,\n                \"Auto\",\n                $(go.Shape, {\n                    name: \"toolTipBackground\",\n                    figure: \"RoundedRectangle\",\n                    // parameter1 is border-radius\n                    parameter1: 4,\n                    fill: colorNeutral19,\n                    stroke: colorNeutral19,\n                }),\n                $(\n                    go.TextBlock,\n                    new go.Binding(\"text\", textSource, getTooltipText), {\n                        stroke: colorNeutral0,\n                        maxSize: new go.Size(320, NaN),\n                        margin: new go.Margin(4, 8, 4, 8),\n                    }\n                )\n            )\n        );\n    }\n\n    function drawLink(e, obj) {\n        var node = obj.part.adornedPart;\n        var tool = e.diagram.toolManager.linkingTool;\n        var port = node.findObject(\"PORT_RIGHT\");\n        tool.startObject = port;\n        tool.temporaryToNode.location = e.diagram.lastInput.documentPoint;\n        e.diagram.currentTool = tool;\n        tool.doActivate();\n        tool.temporaryFromNode.ensureBounds();\n        tool.temporaryToNode.ensureBounds();\n        tool.temporaryFromPort = $(go.Shape, 'Circle', {\n            width: LINK_DOT_DIAMETER,\n            height: LINK_DOT_DIAMETER,\n            fill: LINK_DOT_COLOR,\n            stroke: LINK_DOT_COLOR,\n            segmentIndex: 0,\n        });\n    }\n\n    function renderOutgoingPort(showPort, isSelected, portAlignment) {\n        if (showPort) {\n            return $(\n                go.Panel, \"Table\",\n                new go.Binding(\"mouseEnter\", \"\", function(adornment) {\n                    return function(e, obj) {\n                        if (!isEditMode(e)) return;\n\n                        var outerPortCircle = obj.part.findObject(OUTER_PORT_CIRCLE);\n                        var innerPortCircle = obj.part.findObject(INNER_PORT_CIRCLE);\n                        if (adornment.adornedPart.isSelected && adornment.data.hasOutgoing) {\n                            outerPortCircle.stroke = PORT_CIRCLE_COLOR_SELECTED_HOVERED;\n                            outerPortCircle.fill = PORT_CIRCLE_FILL_HOVERED;\n                            innerPortCircle.fill = PORT_CIRCLE_COLOR_SELECTED_HOVERED;\n                        } else {\n                            outerPortCircle.stroke = PORT_CIRCLE_COLOR_HOVERED;\n                            outerPortCircle.fill = PORT_CIRCLE_FILL_HOVERED;\n                            innerPortCircle.fill = PORT_CIRCLE_COLOR_HOVERED;\n                        }\n                    };\n                }).ofObject(), {\n                    alignment: portAlignment,\n                    alignmentFocus: new go.Spot(0, 0.5, BOUNDING_BOX_EXTRA_WIDTH / 2 + PORT_SIZE / 2 + 2.5, 0),\n                    cursor: \"pointer\",\n                    isActionable: true,\n                    actionMove: drawLink,\n                    mouseHover: function(e) {\n                        if (!isEditMode(e)) return;\n\n                        var eventClientX = e.event.clientX;\n                        var eventClientY = e.event.clientY;\n\n                        var tooltipLocation = {\n                            x: eventClientX,\n                            y: eventClientY\n                        };\n\n                        dispatch(\"PAD#DIAGRAM_SHOW_TOOLTIP\", {\n                            type: 'node_connector',\n                            location: tooltipLocation\n                        });\n                    },\n                    mouseLeave: function() {\n                        dispatch(\"PAD#DIAGRAM_HIDE_TOOLTIP\");\n                    }\n                },\n                $(go.Shape, \"Circle\",\n                    new go.Binding(\"stroke\", \"\", function(data) {\n                        if (!data.hasOutgoing) {\n                            return DANGLING_INDICATOR_OUTGOING_COLOR;\n                        } else if (isSelected) {\n                            return PORT_CIRCLE_COLOR_SELECTED;\n                        } else {\n                            return data.borderColor || PORT_CIRCLE_COLOR_DEFAULT;\n                        }\n                    }),\n                    new go.Binding(\"strokeWidth\", \"hasOutgoing\", function(hasOutgoing) {\n                        return isSelected && hasOutgoing ? PORT_CIRCLE_WIDTH_SELECTED : PORT_CIRCLE_WIDTH_DEFAULT;\n                    }), {\n                        name: OUTER_PORT_CIRCLE,\n                        stretch: go.GraphObject.Fill,\n                        fill: PORT_CIRCLE_FILL_DEFAULT,\n                        desiredSize: new go.Size(PORT_SIZE, PORT_SIZE),\n                    }),\n                $(go.Shape, \"Circle\", new go.Binding(\"fill\", \"hasOutgoing\", function(hasOutgoing) {\n                    return hasOutgoing ?\n                        isSelected ?\n                        PORT_DOT_COLOR_SELECTED :\n                        PORT_DOT_COLOR_DEFAULT :\n                        DANGLING_INDICATOR_OUTGOING_COLOR;\n                }), {\n                    name: INNER_PORT_CIRCLE,\n                    strokeWidth: 0,\n                    desiredSize: new go.Size(PORT_DOT_DIAMETER_DEFAULT, PORT_DOT_DIAMETER_DEFAULT),\n                })\n            );\n        } else {\n            return {};\n        }\n    }\n\n    function formNodeHoverAdornment(diagram, node, showPort) {\n        var portAlignment = new go.Spot(1, 0.5);\n        var leftButtonAlignment = new go.Spot(0, 0.5);\n        var rightButtonAlignment = new go.Spot(1, 0.5);\n\n        if (!node.data.empty) {\n            var laneKey = node.data.key;\n            var virtualStart = diagram.findNodeForKey(laneKey + '-virtual-start');\n            var virtualEnd = diagram.findNodeForKey(laneKey + '-virtual-end');\n            var laneBounds = node.actualBounds;\n            var startBounds = virtualStart.actualBounds;\n            var endBounds = virtualEnd.actualBounds;\n            var leftVerticalOffset = startBounds.y - laneBounds.y + startBounds.height / 2;\n            var rightVerticalOffset = endBounds.y - laneBounds.y + endBounds.height / 2;\n\n            portAlignment = new go.Spot(1, 0, 0, rightVerticalOffset);\n            leftButtonAlignment = new go.Spot(0, 0, 0, leftVerticalOffset);\n            rightButtonAlignment = new go.Spot(1, 0, 0, rightVerticalOffset);\n        }\n\n        var xOffset = BOUNDING_BOX_EXTRA_WIDTH / 2 - PORT_SIZE / 2 - PORT_ADD_BUTTON_GAP - ADD_BUTTON_SIZE;\n        return $(\n            go.Adornment,\n            \"Spot\",\n            $(\n                go.Panel,\n                \"Auto\",\n                $(go.Shape, {\n                    fill: null,\n                    stroke: null\n                }),\n                $(go.Placeholder, {})\n            ),\n            renderOutgoingPort(showPort, node.isSelected, portAlignment),\n            makeAddButton(\n                $,\n                go,\n                dispatch,\n                resolveThemeVariable, {\n                    name: \"ADD_BUTTON_LEFT\",\n                    label: \"+\",\n                    alignment: leftButtonAlignment,\n                    alignmentFocus: new go.Spot(0, 0.5, -xOffset, 0),\n                    mode: \"standard\",\n                    disableCondition: disableCondition,\n                    clickHandler: function(event, btn) {\n                        if (!isEditMode(btn)) return;\n\n                        dispatch(\"PAD#DIAGRAM_OPEN_BUTTON_TRAY\", {\n                            type: \"picker\",\n                            position: btn.getDocumentPoint(go.Spot.Center),\n                            nodeData: btn.part.data,\n                            nodeContext: {\n                                addType: 'addLeft',\n                                nodeType: 'lane'\n                            }\n                        });\n                    }\n                }\n            ),\n            makeAddButton(\n                $,\n                go,\n                dispatch,\n                resolveThemeVariable, {\n                    name: \"ADD_BUTTON_RIGHT\",\n                    label: \"+\",\n                    alignment: rightButtonAlignment,\n                    alignmentFocus: new go.Spot(1, 0.5, xOffset, 0),\n                    mode: \"standard\",\n                    disableCondition: disableCondition,\n                    clickHandler: function(event, btn) {\n                        if (!isEditMode(btn)) return;\n\n                        dispatch(\"PAD#DIAGRAM_OPEN_BUTTON_TRAY\", {\n                            type: \"picker\",\n                            position: btn.getDocumentPoint(go.Spot.Center),\n                            nodeData: btn.part.data,\n                            nodeContext: {\n                                addType: 'addRight',\n                                nodeType: 'lane'\n                            }\n                        });\n                    }\n                }\n            )\n        );\n    }\n\n    function showAdornmentWithPort(node) {\n        if (node) {\n            var linksOutOf = node.findLinksOutOf();\n            if (linksOutOf) {\n                return !linksOutOf.any(function(link) {\n                    return link.isSelected;\n                });\n            }\n        }\n        return true;\n    }\n\n    function supportStages(diagramModelData) {\n        return diagramModelData[PROCESS_TYPE_CONFIGURATION_ENABLE_FEATURES_STAGES]\n    }\n\n    function handleMouseEnterHoverAndClick(e, node) {\n        if (!isEditMode(e)) return;\n\n        if (supportStages(e.diagram.model.modelData)) {\n            var nodeHoverAdornment = formNodeHoverAdornment(e.diagram, node, showAdornmentWithPort(node));\n\n            dispatch(\"PAD#DIAGRAM_NODE_HIGHLIGHTED\", {\n                node: node,\n                adornment: nodeHoverAdornment,\n                diagram: e.diagram,\n                highlight: true\n            });\n        }\n\n        dispatch(\"PAD#DIAGRAM_LANE_START_HIGHLIGHTED\", {\n            node: node,\n            diagram: e.diagram,\n            highlight: true\n        });\n    }\n\n    function handleMouseLeave(e, node, next) {\n        if (leaveNode(node, next)) {\n            if (supportStages(e.diagram.model.modelData)) {\n                dispatch(\"PAD#DIAGRAM_NODE_HIGHLIGHTED\", {\n                    node: node,\n                    diagram: e.diagram,\n                    highlight: false\n                });\n            }\n\n            dispatch(\"PAD#DIAGRAM_LANE_START_HIGHLIGHTED\", {\n                node: node,\n                diagram: e.diagram,\n                highlight: false\n            });\n        }\n    }\n\n    function leaveNode(node, next) {\n        // two cases of the adornment as next.part, which indicates that the mouse does not leave the current node\n        if (next?.part instanceof go.Adornment) {\n            // 1. the adornment is part of the current node (the add button)\n            if (next.part.adornedObject === node) {\n                return false;\n            }\n            // 2. the adornment is part of the selected link to or from the current node\n            if (next.part.adornedObject.part instanceof go.Link) {\n                var link = next.part.adornedObject.part;\n                if (link.isSelected && (link.fromNode?.data?.key === node.data.key || link.toNode?.data?.key === node.data.key)) {\n                    return false;\n                }\n            }\n        }\n\n        // if hover a link inside the lane, do not consider as leaving the lane\n        if (next?.part instanceof go.Link) {\n            if (next.part?.fromNode?.data?.group === node.data.key && next.part?.toNode?.data?.group === node.data.key) {\n                return false;\n            }\n        }\n\n        // if hover the lane virtual start or end, do not consider as leaving the lane\n        var nextPartKey = next?.part?.data?.key;\n        if (nextPartKey === node.data.key + '-virtual-start' || nextPartKey === node.data.key + '-virtual-end') {\n            return false;\n        }\n\n        return true;\n    }\n\n    function dataHasError(data) {\n        return !!data?.errors?.hasErrors;\n    }\n\n    function isShowRestartRule(data) {\n        return (\n            !!data?.restart?.rule?.value &&\n            data.restart.rule.value !== RESTART_RULE_RUN_ONLY_ONCE\n        );\n    }\n\n    function isValidHexColor(color) {\n        return /^#[0-9A-F]{6}$/i.test(color);\n    }\n\n    function shadeColor(color, percent) {\n        var R = parseInt(color.substring(1, 3), 16);\n        var G = parseInt(color.substring(3, 5), 16);\n        var B = parseInt(color.substring(5, 7), 16);\n\n        R = parseInt(R * (100 - percent) / 100);\n        G = parseInt(G * (100 - percent) / 100);\n        B = parseInt(B * (100 - percent) / 100);\n\n        R = (R < 255) ? R : 255;\n        G = (G < 255) ? G : 255;\n        B = (B < 255) ? B : 255;\n\n        R = Math.round(R);\n        G = Math.round(G);\n        B = Math.round(B);\n\n        var RR = ((R.toString(16).length == 1) ? \"0\" + R.toString(16) : R.toString(16));\n        var GG = ((G.toString(16).length == 1) ? \"0\" + G.toString(16) : G.toString(16));\n        var BB = ((B.toString(16).length == 1) ? \"0\" + B.toString(16) : B.toString(16));\n\n        return \"#\" + RR + GG + BB;\n    }\n\n    return $(\n        GroupWithIndicators,\n        \"Spot\",\n        new go.Binding(\"isSubGraphExpanded\", \"empty\", function(value) {\n            return !value;\n        }),\n        new go.Binding(\"selectable\", \"\", function(data) {\n            return supportStages(data);\n        }).ofModel(), {\n            layout: $(PDGroupLayout, {\n                layerSpacing: 50,\n                linkSpacing: 20,\n                layeringOption: go.LayeredDigraphLayout.LayerLongestPathSource,\n                alignOption: go.LayeredDigraphLayout.AlignAll\n            }),\n            selectable: true,\n            selectionAdorned: false,\n            isShadowed: false,\n            shadowColor: nodeShadowColor,\n            shadowOffset: new go.Point(6, 6),\n            shadowBlur: 8,\n            click: handleMouseEnterHoverAndClick,\n            mouseEnter: handleMouseEnterHoverAndClick,\n            mouseHover: handleMouseEnterHoverAndClick,\n            mouseLeave: handleMouseLeave\n        },\n        $(go.Panel, \"Horizontal\",\n            $(go.Shape, \"Rectangle\", {\n                width: BOUNDING_BOX_EXTRA_WIDTH / 2,\n                fill: \"transparent\",\n                strokeWidth: 0,\n                stretch: go.GraphObject.Fill\n            }),\n            // The following panel and rounded rect provide a white background to heighten the color and mask the drop\n            // shadow since it shows through the semi-opaque background of the child rounded rect.\n            $(go.Panel, \"Auto\",\n                $(go.Shape, \"RoundedRectangle\", {\n                    parameter1: BORDER_RADIUS_DEFAULT,\n                    fill: \"white\",\n                    shadowVisible: true,\n                    strokeWidth: 0,\n                    spot1: go.Spot.TopLeft,\n                    spot2: go.Spot.BottomRight\n                }),\n                $(go.Panel, \"Auto\",\n                    // https://forum.nwoods.com/t/shape-strokewidth-change-without-affecting-its-size/16308\n                    // Make sure that changing the strokeWidth does not affect the size of the lane and thus does not affect the lane-level link routing\n                    $(go.Panel, \"Table\",\n                        $(go.Shape, \"RoundedRectangle\", // surrounds everything\n                            {\n                                parameter1: BORDER_RADIUS_DEFAULT,\n                                name: LANE_NODE_SHAPE,\n                                spot1: go.Spot.TopLeft,\n                                spot2: go.Spot.BottomRight,\n                                stretch: go.GraphObject.Fill\n                            },\n                            new go.Binding(\"fill\", \"\", function(data) {\n                                if (data.fillColor)\n                                    return data.fillColor;\n                                else\n                                    return FILL_COLOR_DEFAULT;\n                            }),\n                            new go.Binding(\"stroke\", \"\", function(part) {\n                                if (part.isSelected && isEditMode(part))\n                                    return BORDER_COLOR_SELECTED;\n                                else if (dataHasError(part.data))\n                                    return part.data?.errors?.borderColor;\n                                else if (part.data.borderColor)\n                                    return part.data.borderColor;\n                                else\n                                    return BORDER_COLOR_DEFAULT;\n                            }).ofObject(),\n                            new go.Binding(\"strokeWidth\", \"\", function(part) {\n                                if ((part.isSelected && isEditMode(part)) || dataHasError(part?.data))\n                                    return BORDER_WIDTH_SELECTED;\n                                else\n                                    return BORDER_WIDTH_DEFAULT;\n                            }).ofObject()\n                        ),\n                        // ** Stage Main Content **\n                        $(\n                            go.Panel,\n                            \"Table\",\n                            // Row 1 - Stage Title\n                            $(\n                                go.Panel, {\n                                    row: 1,\n                                    height: TITLE_HEIGHT,\n                                    name: LANE_NAME_TEXTBLOCK_PANEL,\n                                    padding: new go.Margin(\n                                        LABEL_MARGIN_TOP,\n                                        LABEL_MARGIN_RIGHT,\n                                        LABEL_MARGIN_BOTTOM,\n                                        LABEL_MARGIN_LEFT\n                                    ),\n                                    alignment: go.Spot.TopLeft,\n                                    stretch: go.GraphObject.Horizontal,\n                                },\n                                $(\n                                    go.TextBlock, // stage title near top, next to button\n                                    new go.Binding(\"text\", \"label\"),\n                                    new go.Binding(\"stroke\", \"\", function(part) {\n                                        if (part.isSelected && isEditMode(part))\n                                            return LABEL_COLOR_SELECTED;\n                                        else if (part.data.textColor)\n                                            return part.data.textColor;\n                                    }).ofObject(),\n                                    new go.Binding(\"font\", \"\", function(data) {\n                                        return data.labelFont;\n                                    }), {\n                                        name: LANE_LABEL,\n                                        overflow: go.TextBlock.OverflowEllipsis,\n                                        maxLines: 1,\n                                        toolTip: getTooltipForText({\n                                            textSource: \"label\",\n                                            textBlockName: LANE_LABEL,\n                                        })\n                                    }\n                                ),\n                            ),\n                            // Row 2 - Empty Stage\n                            $(\n                                go.Panel,\n                                \"Spot\", {\n                                    row: 2,\n                                    desiredSize: new go.Size(LANE_DEFAULT_WIDTH, LANE_DEFAULT_HEIGHT)\n                                },\n                                new go.Binding(\"visible\", \"empty\"),\n                                // need this Shape to put the add button in the center\n                                $(\n                                    go.Shape,\n                                    \"Rectangle\", {\n                                        desiredSize: new go.Size(LANE_DEFAULT_WIDTH, LANE_DEFAULT_HEIGHT),\n                                        fill: \"transparent\",\n                                        stroke: null\n                                    }\n                                ),\n                                makeAddButton(\n                                    $,\n                                    go,\n                                    dispatch,\n                                    resolveThemeVariable, {\n                                        name: \"ADD_BUTTON_CENTER\",\n                                        label: \"+\",\n                                        alignment: new go.Spot(0.5, 0.5),\n                                        alignmentFocus: go.Spot.Center,\n                                        mode: \"primary\",\n                                        disableCondition: disableCondition,\n                                        clickHandler: function(event, btn) {\n                                            if (!isEditMode(btn)) return;\n\n                                            var laneKey = btn.part.data.key;\n                                            dispatch(\"PAD#DIAGRAM_OPEN_BUTTON_TRAY\", {\n                                                type: \"picker\",\n                                                position: btn.getDocumentPoint(go.Spot.Center),\n                                                nodeData: {\n                                                    key: laneKey + '-virtual-start'\n                                                },\n                                                nodeContext: 'addRight'\n                                            });\n                                        }\n                                    }\n                                )\n                            ),\n                            // Row 2 - Stage with Activities\n                            $(\n                                go.Placeholder, // represents area for all member parts\n                                {\n                                    row: 2,\n                                    padding: new go.Margin(4, 0, 4, -6),\n                                    minSize: new go.Size(LANE_DEFAULT_WIDTH, LANE_DEFAULT_HEIGHT),\n                                },\n                                new go.Binding(\"visible\", \"empty\", function(value) {\n                                    return !value;\n                                }),\n                                new go.Binding(\"fill\", \"\", function(data) {\n                                    return data.fillColor || colorWhite;\n                                })\n                            ),\n                            // Row 3 - Additional height to offset Stage Title\n                            $(\n                                go.Panel,\n                                \"Auto\", {\n                                    row: 3,\n                                    height: STAGE_TITLE_HEIGHT_INCLUDING_PADDING_AND_MARGIN,\n                                    stretch: go.GraphObject.Fill\n                                }\n                            )\n                        ),\n                        // ** Stage icons **\n                        // Such as Errors and Restart Rule. This is strategically drawn\n                        // after and over the Stage Main Content. It's absolute positioned\n                        // so that it appears to be underneath the Stage Title without\n                        // taking up actual space that can increase the Stage height\n                        $(\n                            go.Panel,\n                            \"Horizontal\", {\n                                alignment: new go.Spot(\n                                    0,\n                                    0,\n                                    LABEL_MARGIN_LEFT,\n                                    TITLE_HEIGHT\n                                )\n                            },\n                            makeIconWithBackground({\n                                icon: makeIcon({\n                                    source: 'icon',\n                                    objectSource: 'errors'\n                                }),\n                                toolTip: makeTooltip({\n                                    textSource: 'errors',\n                                    getTooltipText: function(textSourceValue) {\n                                        return textSourceValue?.message;\n                                    }\n                                }),\n                                getIsShow: function(data) {\n                                    return dataHasError(data);\n                                },\n                                getBackgroundColor: function(data) {\n                                    return data?.errors?.color;\n                                },\n                                getBorderColor: function(data) {\n                                    return data?.errors?.borderColor;\n                                }\n                            }),\n                            makeIconWithBackground({\n                                icon: makeIcon({\n                                    source: 'icon',\n                                    objectSource: 'restart'\n                                }),\n                                toolTip: makeTooltip({\n                                    textSource: 'restart',\n                                    getTooltipText: function(textSourceValue) {\n                                        return textSourceValue?.rule?.displayValue;\n                                    }\n                                }),\n                                getIsShow: function(data) {\n                                    return isShowRestartRule(data);\n                                },\n                                getBackgroundColor: function(data) {\n                                    return data?.restart?.color;\n                                },\n                                getBorderColor: function(data) {\n                                    return data?.restart?.borderColor;\n                                }\n                            }),\n                        ),\n                    )\n                )\n            ),\n            $(go.Shape, \"Rectangle\", {\n                width: BOUNDING_BOX_EXTRA_WIDTH / 2,\n                fill: \"transparent\",\n                strokeWidth: 0,\n                stretch: go.GraphObject.Fill\n            })\n        ),\n        makePort({\n            portId: \"c0bed67c535c20100b0cddeeff7b12fc\",\n            name: \"PORT_LEFT\",\n            spot: go.Spot.Left,\n            alignment: new go.Spot(0, 0.5),\n            alignmentFocus: new go.Spot(0.5, 1, -(BOUNDING_BOX_EXTRA_WIDTH / 2), 0),\n            isOutgoing: false\n        }),\n        makePort({\n            portId: \"49de92bc535c20100b0cddeeff7b12f9\",\n            name: \"PORT_RIGHT\",\n            spot: go.Spot.Right,\n            alignment: new go.Spot(1, 0.5),\n            alignmentFocus: new go.Spot(0.5, 1, BOUNDING_BOX_EXTRA_WIDTH / 2 + 1, 0),\n            isOutgoing: true\n        })\n    );\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1293c996ad48c7d88400c13afef3cdff","value":"1293c996ad48c7d88400c13afef3cdff"},"sys_update_name":"sn_diagram_builder_shape_template_46c6efa953906110d67cddeeff7b12dd","has_recenter_handler":"false","name":"PD Lane Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":"read"},{"description":"","sys_updated_on":"2023-10-27 17:29:34","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"48fcbdbe37427110f77b4cd574924bea","recenter_handler":"function isRecenterRequired(selection, diagram, threshold, dispatch) {\n\t// Implement recenter handler\n\treturn true;\n}","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2023-10-26 16:31:48","sys_name":"Rounded Top Left Rectangle Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/437cf9be37427110f77b4cd574924b39","value":"437cf9be37427110f77b4cd574924b39"},"sys_mod_count":"4","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch, shapeTemplateUtilities, resolveThemeVariable) {\n    /*\n    // Sample code to reuse the child shape templates\n    var buildChildShapeTemplate = shapeTemplateUtilities.buildChildShapeTemplate; // Function to build child shape templates\n    var children = shapeTemplateUtilities.children; // Array of children shape templates\n\n    // To pass the props from parent to child shape template\n    var props = {\n        'stroke': 'blue',\n\t\t'fill': resolveThemeVariable('--now-color--primary-0'), // Syntax to retrieve the value associated with the specified theme variable\n    };\n\n    return $(go.Node, 'Auto',\n        buildChildShapeTemplate(children[0], props), // Build the first child shape template, if any.\n        buildChildShapeTemplate(children[1], props) // Build the second shape template, if any.\n    );\n\n    // Usage of the json props in child shape template that are passed from the parent\n    var jsonProps = shapeTemplateUtilities.jsonProps; // JSON props passed from the parent shape template\n\n    return $(go.Node, 'Auto',\n        buildChildShapeTemplate(children[0], jsonProps), // Build the first child shape template, if any.\n        buildChildShapeTemplate(children[1], jsonProps.stroke) // Build the second shape template, if any.\n    );\n\t*/\n\n    return $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_48fcbdbe37427110f77b4cd574924bea","has_recenter_handler":"false","name":"Rounded Top Left Rectangle Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2023-01-12 22:18:55","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"4a0cf76d53d06110d67cddeeff7b12d0","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2023-01-10 08:37:24","sys_name":"PD Lane End Node Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1293c996ad48c7d88400c13afef3cdff","value":"1293c996ad48c7d88400c13afef3cdff"},"template_type":"advanced","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/6f46af93530310100b0cddeeff7b1269","value":"6f46af93530310100b0cddeeff7b1269"},"sys_mod_count":"6","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\tvar BOUNDING_BOX_WIDTH = 42;\n\tvar BOUNDING_BOX_HEIGHT = 16;\n\n    function makePort(portId, name, spot, alignment, alignmentFocus, output, input) {\n        return $(go.Shape, \"Circle\", {\n            name: name,\n            fill: null,\n            stroke: null,\n            desiredSize: new go.Size(0, 0),\n            alignment: alignment,\n            alignmentFocus: alignmentFocus,\n            portId: portId,\n            fromSpot: spot,\n            toSpot: spot,\n            fromLinkable: output,\n            toLinkable: input,\n            cursor: \"pointer\",\n        });\n    }\n\n    return $(go.Node, 'Spot', {\n            selectionAdorned: false\n        },\n        $(go.Panel, \"Position\",\n            $(go.Shape, \"Rectangle\", {\n                width: BOUNDING_BOX_WIDTH,\n                height: BOUNDING_BOX_HEIGHT,\n                fill: \"transparent\",\n                stroke: null,\n            })\n        ),\n        makePort(\n            \"c0bed67c535c20100b0cddeeff7b12fc\",\n            \"PORT_LEFT\",\n            go.Spot.Left,\n            new go.Spot(1, 0.5),\n            new go.Spot(0.5, 1, 0, 0),\n            false,\n            true\n        )\n    )\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1293c996ad48c7d88400c13afef3cdff","value":"1293c996ad48c7d88400c13afef3cdff"},"sys_update_name":"sn_diagram_builder_shape_template_4a0cf76d53d06110d67cddeeff7b12d0","has_recenter_handler":"false","name":"PD Lane End Node Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":"read"},{"description":"Rounded rectangle with a label inside","sys_updated_on":"2021-07-06 18:17:53","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"4b8386f3770d30104f27ceec8e5a99d2","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2021-07-06 17:55:37","sys_name":"Rounded Flowlogic Label Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/5d3727d3530310100b0cddeeff7b12d7","value":"5d3727d3530310100b0cddeeff7b12d7"},"sys_mod_count":"2","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_4b8386f3770d30104f27ceec8e5a99d2","has_recenter_handler":"false","name":"Rounded Flowlogic Label Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2021-10-27 11:20:45","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"4eeb903f538310100b0cddeeff7b123e","recenter_handler":"","sys_updated_by":"admin","tabbable":"true","sys_created_on":"2020-09-11 03:57:48","sys_name":"Add Node Button Panel","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"extended","sys_created_by":"admin","aria_label":"Opens action picker to add a new node to the diagram","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/5d3727d3530310100b0cddeeff7b12d7","value":"5d3727d3530310100b0cddeeff7b12d7"},"sys_mod_count":"6","active":"true","sys_tags":"","script":"","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_4eeb903f538310100b0cddeeff7b123e","has_recenter_handler":"false","name":"Add Node Button Panel","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\t// Implement click handler}","sys_policy":""},{"description":"","sys_updated_on":"2021-09-29 01:17:19","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"4f2b07f2b7f63010388487c2de11a938","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2021-09-28 20:16:06","sys_name":"Flow Add a Trigger Node Shape Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"base","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/4416da03535710100b0cddeeff7b126c","value":"4416da03535710100b0cddeeff7b126c"},"sys_mod_count":"1","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_4f2b07f2b7f63010388487c2de11a938","has_recenter_handler":"false","name":"Flow Add a Trigger Node Shape Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2022-12-06 22:28:55","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"4f8be26a77af1110b2b4ddd9cf5a9990","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2022-12-06 22:28:55","sys_name":"Flow Link Highlight Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/87c9ab17530310100b0cddeeff7b123d","value":"87c9ab17530310100b0cddeeff7b123d"},"sys_mod_count":"0","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_4f8be26a77af1110b2b4ddd9cf5a9990","has_recenter_handler":"false","name":"Flow Link Highlight Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2023-10-23 11:58:30","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"4fa1a5f5c34e3d10b09bb4cdb840dd2a","recenter_handler":"function isRecenterRequired(selection, diagram, threshold, dispatch) {\n\t// Implement recenter handler\n\treturn true;\n}","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2023-10-23 11:58:30","sys_name":"Diamond Shape Node Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"base","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/4416da03535710100b0cddeeff7b126c","value":"4416da03535710100b0cddeeff7b126c"},"sys_mod_count":"0","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch, shapeTemplateUtilities, resolveThemeVariable) {\n    /*\n    // Sample code to reuse the child shape templates\n    var buildChildShapeTemplate = shapeTemplateUtilities.buildChildShapeTemplate; // Function to build child shape templates\n    var children = shapeTemplateUtilities.children; // Array of children shape templates\n\n    // To pass the props from parent to child shape template\n    var props = {\n        'stroke': 'blue',\n\t\t'fill': resolveThemeVariable('--now-color--primary-0'), // Syntax to retrieve the value associated with the specified theme variable\n    };\n\n    return $(go.Node, 'Auto',\n        buildChildShapeTemplate(children[0], props), // Build the first child shape template, if any.\n        buildChildShapeTemplate(children[1], props) // Build the second shape template, if any.\n    );\n\n    // Usage of the json props in child shape template that are passed from the parent\n    var jsonProps = shapeTemplateUtilities.jsonProps; // JSON props passed from the parent shape template\n\n    return $(go.Node, 'Auto',\n        buildChildShapeTemplate(children[0], jsonProps), // Build the first child shape template, if any.\n        buildChildShapeTemplate(children[1], jsonProps.stroke) // Build the second shape template, if any.\n    );\n\t*/\n\n    return $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_4fa1a5f5c34e3d10b09bb4cdb840dd2a","has_recenter_handler":"false","name":"Diamond Shape Node Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2023-07-06 01:23:34","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"4ff258e643b721109177f17dd9b8f219","recenter_handler":"function isRecenterRequired(selection, diagram, threshold, dispatch) {\n\t// Implement recenter handler\n\treturn true;\n}","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2023-07-05 17:49:00","sys_name":"Flow Action Node Info Text Container TRY","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/802a6f17530310100b0cddeeff7b1213","value":"802a6f17530310100b0cddeeff7b1213"},"sys_mod_count":"1","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch, buildShapeTemplate, children) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_4ff258e643b721109177f17dd9b8f219","has_recenter_handler":"false","name":"Flow Action Node Info Text Container TRY","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2021-06-03 23:02:37","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"502f0dd9772cf010b2b4ddd9cf5a9909","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2021-06-03 23:02:37","sys_name":"Flow Action Node Name Container Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/3ff9eb17530310100b0cddeeff7b12b4","value":"3ff9eb17530310100b0cddeeff7b12b4"},"sys_mod_count":"0","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_502f0dd9772cf010b2b4ddd9cf5a9909","has_recenter_handler":"false","name":"Flow Action Node Name Container Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2024-10-03 00:11:05","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"555bc376b7f63010388487c2de11a912","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2021-09-28 20:17:31","sys_name":"Flow Add a Trigger Advanced Shape","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"advanced","sys_created_by":"admin","aria_label":"","shape":"","sys_mod_count":"83","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch, shapeTemplateUtilities, resolveThemeVariable) {\n    var nowColorPrimary1 = resolveThemeVariable(\"--now-color--primary-1\") || \"#4C6CEB\";\n    var nowColorPrimary2 = resolveThemeVariable(\"--now-color--primary-2\") || \"#3449A0\";\n    var nowColorPrimary3 = resolveThemeVariable(\"--now-color--primary-3\") || \"#1B2652\";\n    var nowColorText = resolveThemeVariable(\"--now-color_text--primary-actionable\") || \"#FFFFFF\";\n    var nowOpacityLess = resolveThemeVariable(\"--now-opacity--less\") || \"0.25\";\n    // Shared between button and shape underneath so\n    // that when the button is set to have less opacity,\n    // the button will not be see through\n    var sharedProps = {\n        figure: \"RoundedRectangle\",\n        width: 264,\n        height: 32,\n        strokeWidth: 0,\n        parameter1: 6\n    };\n\n    return (\n        $(go.Panel, \"Spot\",\n            $(\"Shape\", {\n                ...sharedProps,\n                fill: nowColorText,\n                stroke: nowColorText,\n            }),\n            $(\"Button\",\n                new go.Binding(\"isEnabled\", \"_isReadOnly\", function(isReadOnly) {\n                    return !isReadOnly;\n                }).ofModel(),\n                new go.Binding(\"ButtonBorder.opacity\", \"_isReadOnly\", function(isReadOnly) {\n                    return isReadOnly ? nowOpacityLess : 1;\n                }).ofModel(), {\n                    // set properties on the border Shape of the \"Button\"\n                    \"ButtonBorder.figure\": sharedProps.figure,\n                    \"ButtonBorder.fill\": nowColorPrimary1,\n                    \"ButtonBorder.stroke\": nowColorPrimary1,\n                    \"ButtonBorder.strokeWidth\": sharedProps.strokeWidth,\n                    \"ButtonBorder.width\": sharedProps.width,\n                    \"ButtonBorder.height\": sharedProps.height,\n                    // parameter1 is similar (but not exact) to the border radius\n                    \"ButtonBorder.parameter1\": sharedProps.paramater1,\n                    // set properties on the \"Button\" itself used by its event handlers\n                    \"_buttonFillOver\": nowColorPrimary2,\n                    \"_buttonStrokeOver\": nowColorPrimary2,\n                    \"_buttonFillPressed\": nowColorPrimary3,\n                    \"_buttonStrokePressed\": nowColorPrimary3,\n                    \"_buttonFillDisabled\": nowColorPrimary1,\n                    \"_buttonFillNormal\": nowColorPrimary1,\n                    click: function(event, btn) {\n                        if (!btn.isEnabledObject()) return;\n                        dispatch(\"PICKER#SHOW_TRIGGER_CLICKED\", {\n                            event: event,\n                            buttonPosition: btn.getDocumentPoint(go.Spot.Center)\n                        });\n                    },\n                    mouseEnter: function(e, btn) {\n                        if (!btn.isEnabledObject()) return;\n                        var shape = btn.findObject('ButtonBorder'); // the border Shape\n                        if (shape instanceof go.Shape) {\n                            var brush = btn['_buttonFillOver'];\n                            btn['_buttonFillNormal'] = shape.fill;\n                            shape.fill = brush;\n                            brush = btn['_buttonStrokeOver'];\n                            shape.stroke = brush;\n                        }\n                    },\n                    mouseLeave: function(e, btn) {\n                        if (!btn.isEnabledObject()) return;\n                        var shape = btn.findObject('ButtonBorder'); // the border Shape\n                        if (shape instanceof go.Shape) {\n                            shape.fill = btn['_buttonFillNormal'];\n                        }\n                    }\n                },\n                $(go.Panel, \"Horizontal\",\n                    $(go.Picture, {\n                        source: \"images/circle-plus-md-white.svg\",\n                        height: 16,\n                        width: 16,\n                        margin: new go.Margin(0, 8, 0, 0)\n                    }),\n                    $(go.TextBlock,\n                        new go.Binding(\"text\", \"labelText\"), {\n                            stroke: nowColorText,\n                            font: \"16px 'Open Sans', sans-serif\",\n                            verticalAlignment: go.Spot.Center,\n                            margin: new go.Margin(2, 0, 0, 0),\n                            opacity: 1\n                        })\n                )\n            )\n        )\n    );\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_555bc376b7f63010388487c2de11a912","has_recenter_handler":"false","name":"Flow Add a Trigger Advanced Shape","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2021-10-27 11:20:45","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"5a0e547f538310100b0cddeeff7b123c","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2020-09-11 04:06:43","sys_name":"Link Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"base","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/41a9e717530310100b0cddeeff7b12d3","value":"41a9e717530310100b0cddeeff7b12d3"},"sys_mod_count":"4","active":"true","sys_tags":"","script":"","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_5a0e547f538310100b0cddeeff7b123c","has_recenter_handler":"false","name":"Link Template","tab_click_handler":"","sys_policy":""},{"description":"","sys_updated_on":"2021-10-27 11:20:45","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"5b403c2b530310100b0cddeeff7b125e","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2020-09-10 10:48:19","sys_name":"Text Block Shape Tempate","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/d9592717530310100b0cddeeff7b1287","value":"d9592717530310100b0cddeeff7b1287"},"sys_mod_count":"3","active":"true","sys_tags":"","script":"","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_5b403c2b530310100b0cddeeff7b125e","has_recenter_handler":"false","name":"Text Block Shape Tempate","tab_click_handler":"","sys_policy":""},{"description":"","sys_updated_on":"2021-10-27 11:20:46","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"5d163d1053f52010b553ddeeff7b122e","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2021-01-15 06:25:35","sys_name":"Loop Node Icon Panel Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/5d3727d3530310100b0cddeeff7b12d7","value":"5d3727d3530310100b0cddeeff7b12d7"},"sys_mod_count":"2","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_5d163d1053f52010b553ddeeff7b122e","has_recenter_handler":"false","name":"Loop Node Icon Panel Template","tab_click_handler":"","sys_policy":""},{"description":"Shapes the meat of the MAD Branch - main difference to most other flow logic shapes is that it does not contain an icon","sys_updated_on":"2022-08-19 21:43:02","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"5f68682477e11110b2b4ddd9cf5a99fa","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2022-08-22 21:43:02","sys_name":"Flow MAD Branch Node Body Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/3ff9eb17530310100b0cddeeff7b12b4","value":"3ff9eb17530310100b0cddeeff7b12b4"},"sys_mod_count":"0","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_5f68682477e11110b2b4ddd9cf5a99fa","has_recenter_handler":"false","name":"Flow MAD Branch Node Body Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2023-05-09 17:47:21","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"60dfee804f762110ffc2fde0b1ce0b3d","recenter_handler":"function isRecenterRequired(selection, diagram, threshold, dispatch) {\n\t// Implement recenter handler\n\treturn true;\n}","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2023-05-09 17:47:21","sys_name":"Flow Action Node Info Shape","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/802a6f17530310100b0cddeeff7b1213","value":"802a6f17530310100b0cddeeff7b1213"},"sys_mod_count":"0","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_60dfee804f762110ffc2fde0b1ce0b3d","has_recenter_handler":"false","name":"Flow Action Node Info Shape","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2021-09-27 23:05:46","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"643866eafff230104ef14ee9453bf1c1","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2021-09-27 23:05:46","sys_name":"Blank Node Shape Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"base","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/4416da03535710100b0cddeeff7b126c","value":"4416da03535710100b0cddeeff7b126c"},"sys_mod_count":"0","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_643866eafff230104ef14ee9453bf1c1","has_recenter_handler":"false","name":"Blank Node Shape Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2022-06-10 17:32:29","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"6523fbb460441110f877dd4d40bd074b","recenter_handler":"","sys_updated_by":"maint","tabbable":"false","sys_created_on":"2022-06-10 17:32:29","sys_name":"Flow Broken Main Text Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"maint","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/3ff9eb17530310100b0cddeeff7b12b4","value":"3ff9eb17530310100b0cddeeff7b12b4"},"sys_mod_count":"0","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_6523fbb460441110f877dd4d40bd074b","has_recenter_handler":"false","name":"Flow Broken Main Text Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2021-10-27 11:20:46","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"6afb1a8253b310100b0cddeeff7b12ad","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2020-10-13 09:34:43","sys_name":"Row Column Definition Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/01cb968253b310100b0cddeeff7b123b","value":"01cb968253b310100b0cddeeff7b123b"},"sys_mod_count":"3","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_6afb1a8253b310100b0cddeeff7b12ad","has_recenter_handler":"false","name":"Row Column Definition Template","tab_click_handler":"","sys_policy":""},{"description":"","sys_updated_on":"2021-10-27 11:20:46","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"6c07ecfb535ce0100b0cddeeff7b12db","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2020-11-12 08:04:22","sys_name":"Group Node Placeholder Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/6dd6e0fb535ce0100b0cddeeff7b125a","value":"6dd6e0fb535ce0100b0cddeeff7b125a"},"sys_mod_count":"4","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_6c07ecfb535ce0100b0cddeeff7b12db","has_recenter_handler":"false","name":"Group Node Placeholder Template","tab_click_handler":"","sys_policy":""},{"description":"","sys_updated_on":"2021-06-03 22:39:28","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"6c0a0dd5772cf010b2b4ddd9cf5a993b","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2021-06-03 22:39:28","sys_name":"Flow Action Node Color Panel Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/5d3727d3530310100b0cddeeff7b12d7","value":"5d3727d3530310100b0cddeeff7b12d7"},"sys_mod_count":"0","active":"false","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_6c0a0dd5772cf010b2b4ddd9cf5a993b","has_recenter_handler":"false","name":"Flow Action Node Color Panel Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2021-06-23 02:49:43","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"7036f637b7243010388487c2de11a9b8","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2021-06-12 00:56:59","sys_name":"Flow Link Line Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/87c9ab17530310100b0cddeeff7b123d","value":"87c9ab17530310100b0cddeeff7b123d"},"sys_mod_count":"4","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_7036f637b7243010388487c2de11a9b8","has_recenter_handler":"false","name":"Flow Link Line Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2023-01-17 17:40:56","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"70fb3dc053a82110ffc2ddeeff7b12fe","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2023-01-17 17:38:39","sys_name":"Subflow InsOuts Node Main Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/3ff9eb17530310100b0cddeeff7b12b4","value":"3ff9eb17530310100b0cddeeff7b12b4"},"sys_mod_count":"1","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_70fb3dc053a82110ffc2ddeeff7b12fe","has_recenter_handler":"false","name":"Subflow InsOuts Node Main Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"Action node template for RPA actions like Click Element, Input Text etc.,","sys_updated_on":"2021-10-27 11:20:46","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"71b18c4753d310100b0cddeeff7b12de","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2020-09-21 04:23:14","sys_name":"Action Node Shape Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"base","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/4416da03535710100b0cddeeff7b126c","value":"4416da03535710100b0cddeeff7b126c"},"sys_mod_count":"12","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Spot');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_71b18c4753d310100b0cddeeff7b12de","has_recenter_handler":"false","name":"Action Node Shape Template","tab_click_handler":"","sys_policy":""},{"description":"Inputs and outputs node template for Flow Designer's subflow inputs and outputs.","sys_updated_on":"2023-01-17 17:41:01","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"71f8354053a82110ffc2ddeeff7b1272","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2023-01-17 17:28:43","sys_name":"Subflow InsOuts Node Base Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"base","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/03775d6b5398a0100b0cddeeff7b129e","value":"03775d6b5398a0100b0cddeeff7b129e"},"sys_mod_count":"2","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_71f8354053a82110ffc2ddeeff7b1272","has_recenter_handler":"false","name":"Subflow InsOuts Node Base Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2021-10-27 11:20:46","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"73fc4e1953f92010b553ddeeff7b1258","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2021-01-18 10:39:22","sys_name":"Loop Node Container Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/5d3727d3530310100b0cddeeff7b12d7","value":"5d3727d3530310100b0cddeeff7b12d7"},"sys_mod_count":"2","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_73fc4e1953f92010b553ddeeff7b1258","has_recenter_handler":"false","name":"Loop Node Container Template","tab_click_handler":"","sys_policy":""},{"description":"Container for Left Rounded Rectangle Template and Top Left Rounded Rectangle Template","sys_updated_on":"2023-10-31 21:39:03","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"771338a053127110f77bddeeff7b1229","recenter_handler":"function isRecenterRequired(selection, diagram, threshold, dispatch) {\n\t// Implement recenter handler\n\treturn true;\n}","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2023-10-31 21:39:03","sys_name":"Icon Rounded Rectangle Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/3ff9eb17530310100b0cddeeff7b12b4","value":"3ff9eb17530310100b0cddeeff7b12b4"},"sys_mod_count":"0","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch, shapeTemplateUtilities, resolveThemeVariable) {\n    /*\n    // Sample code to reuse the child shape templates\n    var buildChildShapeTemplate = shapeTemplateUtilities.buildChildShapeTemplate; // Function to build child shape templates\n    var children = shapeTemplateUtilities.children; // Array of children shape templates\n\n    // To pass the props from parent to child shape template\n    var props = {\n        'stroke': 'blue',\n\t\t'fill': resolveThemeVariable('--now-color--primary-0'), // Syntax to retrieve the value associated with the specified theme variable\n    };\n\n    return $(go.Node, 'Auto',\n        buildChildShapeTemplate(children[0], props), // Build the first child shape template, if any.\n        buildChildShapeTemplate(children[1], props) // Build the second shape template, if any.\n    );\n\n    // Usage of the json props in child shape template that are passed from the parent\n    var jsonProps = shapeTemplateUtilities.jsonProps; // JSON props passed from the parent shape template\n\n    return $(go.Node, 'Auto',\n        buildChildShapeTemplate(children[0], jsonProps), // Build the first child shape template, if any.\n        buildChildShapeTemplate(children[1], jsonProps.stroke) // Build the second shape template, if any.\n    );\n\t*/\n\n    return $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_771338a053127110f77bddeeff7b1229","has_recenter_handler":"false","name":"Icon Rounded Rectangle Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2023-01-27 21:23:46","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"774fc65f53202110ffc2ddeeff7b120c","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2023-01-27 21:23:46","sys_name":"Subflow Add InsOuts Node Shape Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"base","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/4416da03535710100b0cddeeff7b126c","value":"4416da03535710100b0cddeeff7b126c"},"sys_mod_count":"0","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_774fc65f53202110ffc2ddeeff7b120c","has_recenter_handler":"false","name":"Subflow Add InsOuts Node Shape Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2021-06-24 20:09:42","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"79213c4077c1b010b2b4ddd9cf5a99a0","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2021-06-24 20:09:42","sys_name":"Flow Trigger Node Left Label Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/3ff9eb17530310100b0cddeeff7b12b4","value":"3ff9eb17530310100b0cddeeff7b12b4"},"sys_mod_count":"0","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_79213c4077c1b010b2b4ddd9cf5a99a0","has_recenter_handler":"false","name":"Flow Trigger Node Left Label Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2021-10-27 11:20:46","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"7932d24e537310100b0cddeeff7b1265","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2020-10-13 08:52:11","sys_name":"Action Node Body Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/3ff9eb17530310100b0cddeeff7b12b4","value":"3ff9eb17530310100b0cddeeff7b12b4"},"sys_mod_count":"6","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_7932d24e537310100b0cddeeff7b1265","has_recenter_handler":"false","name":"Action Node Body Template","tab_click_handler":"","sys_policy":""},{"description":"","sys_updated_on":"2023-04-25 18:11:57","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"796fae2f77122110f92a7a8c8c5a9999","recenter_handler":"function isRecenterRequired(selection, diagram, threshold, dispatch) {\n\t// Implement recenter handler\n\treturn true;\n}","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2023-04-25 18:11:57","sys_name":"Flow Try Node Main Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/3ff9eb17530310100b0cddeeff7b12b4","value":"3ff9eb17530310100b0cddeeff7b12b4"},"sys_mod_count":"0","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_796fae2f77122110f92a7a8c8c5a9999","has_recenter_handler":"false","name":"Flow Try Node Main Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"Small triangle toggle for flow diagramming nodes that have children. Only visible if node property \"allow_children\" is true","sys_updated_on":"2021-07-02 02:53:50","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"79a6ead5b7013010388487c2de11a904","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2021-06-29 01:56:15","sys_name":"Flow Parent Toggle Triangle Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/577a2f17530310100b0cddeeff7b1221","value":"577a2f17530310100b0cddeeff7b1221"},"sys_mod_count":"1","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_79a6ead5b7013010388487c2de11a904","has_recenter_handler":"false","name":"Flow Parent Toggle Triangle Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2024-10-03 00:07:43","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"79bf4e5f53202110ffc2ddeeff7b12a4","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2023-01-27 21:27:02","sys_name":"Subflow Add InsOuts Advanced Shape","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"advanced","sys_created_by":"admin","aria_label":"","shape":"","sys_mod_count":"10","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch, shapeTemplateUtilities, resolveThemeVariable) {\n    var nowColorPrimary1 = resolveThemeVariable(\"--now-color--primary-1\") || \"#4C6CEB\";\n    var nowColorPrimary2 = resolveThemeVariable(\"--now-color--primary-2\") || \"#3449A0\";\n    var nowColorPrimary3 = resolveThemeVariable(\"--now-color--primary-3\") || \"#1B2652\";\n    var nowColorText = resolveThemeVariable(\"--now-color_text--primary-actionable\") || \"#FFFFFF\";\n    var nowOpacityLess = resolveThemeVariable(\"--now-opacity--less\") || \"0.25\";\n    // Shared between button and shape underneath so\n    // that when the button is set to have less opacity,\n    // the button will not be see through\n    var sharedProps = {\n        figure: \"RoundedRectangle\",\n        width: 264,\n        height: 32,\n        strokeWidth: 0,\n        parameter1: 6\n    };\n\n    return (\n        $(go.Panel, \"Spot\",\n            $(\"Shape\", {\n                ...sharedProps,\n                fill: nowColorText,\n                stroke: nowColorText,\n            }),\n            $(\"Button\",\n                new go.Binding(\"isEnabled\", \"_isReadOnly\", function(isReadOnly) {\n                    return !isReadOnly;\n                }).ofModel(),\n                new go.Binding(\"ButtonBorder.opacity\", \"_isReadOnly\", function(isReadOnly) {\n                    return isReadOnly ? nowOpacityLess : 1;\n                }).ofModel(), {\n                    // set properties on the border Shape of the \"Button\"\n                    \"ButtonBorder.figure\": sharedProps.figure,\n                    \"ButtonBorder.fill\": nowColorPrimary1,\n                    \"ButtonBorder.stroke\": nowColorPrimary1,\n                    \"ButtonBorder.strokeWidth\": sharedProps.strokeWidth,\n                    \"ButtonBorder.width\": sharedProps.width,\n                    \"ButtonBorder.height\": sharedProps.height,\n                    // parameter1 is similar (but not exact) to the border radius\n                    \"ButtonBorder.parameter1\": sharedProps.paramater1,\n                    // set properties on the \"Button\" itself used by its event handlers\n                    \"_buttonFillOver\": nowColorPrimary2,\n                    \"_buttonStrokeOver\": nowColorPrimary2,\n                    \"_buttonFillPressed\": nowColorPrimary3,\n                    \"_buttonStrokePressed\": nowColorPrimary3,\n                    \"_buttonFillDisabled\": nowColorPrimary1,\n                    \"_buttonFillNormal\": nowColorPrimary1,\n                    click: function(event, btn) {\n                        dispatch(\"GO_DIAGRAM#NODE_SELECTED\", {\n                            event: event,\n                            buttonPosition: btn.getDocumentPoint(go.Spot.Center),\n                            instanceType: 'SubflowInputsOutputsType'\n                        });\n                    },\n                    mouseEnter: function(e, btn) {\n                        if (!btn.isEnabledObject()) return;\n                        var shape = btn.findObject('ButtonBorder'); // the border Shape\n                        if (shape instanceof go.Shape) {\n                            var brush = btn['_buttonFillOver'];\n                            btn['_buttonFillNormal'] = shape.fill;\n                            shape.fill = brush;\n                            brush = btn['_buttonStrokeOver'];\n                            shape.stroke = brush;\n                        }\n                    },\n                    mouseLeave: function(e, btn) {\n                        if (!btn.isEnabledObject()) return;\n                        var shape = btn.findObject('ButtonBorder'); // the border Shape\n                        if (shape instanceof go.Shape) {\n                            shape.fill = btn['_buttonFillNormal'];\n                            shape.stroke = btn['_buttonStrokeNormal'];\n                        }\n                        var plus = btn.part.findObject('addBtnPlus');\n                        if (plus) {\n                            plus.stroke = btn['_buttonStrokeNormal'];\n                        }\n                    }\n                },\n                $(go.Panel, \"Horizontal\",\n                    $(go.Picture, {\n                        source: \"images/circle-plus-md-white.svg\",\n                        height: 16,\n                        width: 16,\n                        margin: new go.Margin(0, 8, 0, 0)\n                    }),\n                    $(go.TextBlock,\n                        new go.Binding(\"text\", \"labelText\"), {\n                            stroke: nowColorText,\n                            font: \"16px 'Open Sans', sans-serif\",\n                            verticalAlignment: go.Spot.Center,\n                            margin: new go.Margin(2, 0, 0, 0),\n                            opacity: 1\n                        })\n                )\n            )\n        )\n    );\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_79bf4e5f53202110ffc2ddeeff7b12a4","has_recenter_handler":"false","name":"Subflow Add InsOuts Advanced Shape","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"Icon panel that appears on left most of if node, with an icon in it.","sys_updated_on":"2021-10-27 11:20:46","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"7b5b4a43533b14100b0cddeeff7b1223","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2020-10-16 10:55:46","sys_name":"If Node Color Panel Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/5d3727d3530310100b0cddeeff7b12d7","value":"5d3727d3530310100b0cddeeff7b12d7"},"sys_mod_count":"6","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_7b5b4a43533b14100b0cddeeff7b1223","has_recenter_handler":"false","name":"If Node Color Panel Template","tab_click_handler":"","sys_policy":""},{"description":"","sys_updated_on":"2023-12-07 18:46:48","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"7be1899c534f50100b0cddeeff7b12ad","recenter_handler":"function isRecenterRequired(selection, diagram, threshold, dispatch) {\t// Implement recenter handler\treturn true;}","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2020-08-31 09:45:02","sys_name":"Link Template for RPA","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"advanced","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/41a9e717530310100b0cddeeff7b12d3","value":"41a9e717530310100b0cddeeff7b12d3"},"sys_mod_count":"67","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch, shapeTemplateUtilities, resolveThemeVariable) {\n    return $(go.Link, {\n            selectionAdorned: false, // Disable default selection\t\n            routing: go.Link.AvoidsNodes // link route should avoid nodes\n        },\n        $(go.Shape, // Link line shape\n            {\n                strokeDashArray: [5, 3],\n                strokeWidth: 2,\n                stroke: resolveThemeVariable(\"--now-card--border-color\")\n            }\n        ),\n        $(go.Shape, // Link to arrow settings\n            {\n                toArrow: \"Triangle\",\n                stroke: resolveThemeVariable(\"--now-card--border-color\"),\n                fill: resolveThemeVariable(\"--now-card--border-color\")\n            }\n        ),\n        $(go.Panel, \"Auto\", // Panel to hold add node button\n            $(go.Shape, \"RoundedRectangle\", {\n                stroke: resolveThemeVariable(\"--now-datavis_color--blue-7\"),\n                width: 20,\n                height: 20,\n                fill: resolveThemeVariable(\"--now-color--neutral-0\")\n            }),\n            $(\"Button\", // Add node button\n                {\n                    margin: 1,\n                    click: function(event, data) {\n                        dispatch(\"GO_DIAGRAM#ADD_NODE_CLICKED\", event);\n                    }\n                },\n                $(go.TextBlock, {\n                    text: '+',\n                    font: '13pt Lato, Helvetica, Arial, sans-serif',\n                    stroke: resolveThemeVariable('--now-datavis_color--blue-7')\n                })\n            )\n        )\n    );\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_7be1899c534f50100b0cddeeff7b12ad","has_recenter_handler":"false","name":"Link Template for RPA","tab_click_handler":"","sys_policy":""},{"description":"Dynamic ports horizontal panel shape template to hold ports","sys_updated_on":"2022-08-26 09:26:45","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"7fab7d2977e11110b2e09dcc3c5a9954","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2022-08-26 06:21:00","sys_name":"Dynamic Port Horizontal Panel Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/3ff9eb17530310100b0cddeeff7b12b4","value":"3ff9eb17530310100b0cddeeff7b12b4"},"sys_mod_count":"2","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_7fab7d2977e11110b2e09dcc3c5a9954","has_recenter_handler":"false","name":"Dynamic Port Horizontal Panel Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2024-06-11 11:31:02","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"834d93b253421110d67cddeeff7b12cf","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2022-09-24 07:13:51","sys_name":"PD Branch Node","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1293c996ad48c7d88400c13afef3cdff","value":"1293c996ad48c7d88400c13afef3cdff"},"template_type":"advanced","sys_created_by":"admin","aria_label":"","shape":"","sys_mod_count":"26","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch, shapeTemplateUtilities, resolveThemeVariable) {\n    var colorPrimary1 = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.PRIMARY1);\n    var colorWhite = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.NEUTRAL1);\n    var colorGray = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.NEUTRAL6);\n\n\t// the shared method among shape templates\n    var isEditMode = go.go.PadCustomizationShared.isEditMode;\n\n    // the height of the current PD Automation Step Node: 64 + 88\n    var NODE_HEIGHT = 152;\n    var ADD_BUTTON_SIZE = 16;\n\n    // for v1 the branch node is only used by the parallel link\n    // therefore the port should be disabled\n    // and will be added back once the decision node is enabled.\n    // function showPort(node, show) {\n    //     var portRight = node.findObject(\"PORT_RIGHT\");\n    //     portRight.fill = show ? colorWhite : null;\n    //     portRight.stroke = show ? colorPrimary1 : null;\n    // }\n\n    function isProcessNode(data) {\n        return data.key === 'process-virtual-start';\n    }\n\n    function isLane(data) {\n        return data.isGroup || isProcessNode(data);\n    }\n\n    return $(go.Node,\n        new go.Binding(\"opacity\", \"\", function(data, model) {\n            return data.isHidden ? 0.0 : 1.0;\n        }), {\n            layerName: \"Foreground\",\n            selectionAdorned: false,\n            // for v1, no port in branch node\n            // mouseEnter: function(e, node) {\n            //     showPort(node, true);\n            // },\n            // mouseHover: function(e, node) {\n            //     showPort(node, true);\n            // },\n            // mouseLeave: function(e, node) {\n            //     showPort(node, false);\n            // }\n        },\n        $(\n            go.Panel,\n            \"Position\", {\n                desiredSize: new go.Size(ADD_BUTTON_SIZE + 2, NODE_HEIGHT),\n            },\n            $(go.Shape, \"Rectangle\", {\n                fill: \"transparent\",\n                stroke: null\n            }),\n            $(\n                \"Button\",\n\t\t\t\tnew go.Binding('visible', '', function (data, btn) {\n\t\t\t\t\treturn !isEditMode(btn) ? false : true;\n\t\t\t\t}),\n\t\t\t\tnew go.Binding('cursor', '', function (data, btn) {\n\t\t\t\t\treturn !isEditMode(btn) ? 'default' : 'pointer';\n\t\t\t\t}),\n\t\t\t\t{\n                    position: new go.Point(0, (NODE_HEIGHT - ADD_BUTTON_SIZE) / 2),\n                    // set properties on the border Shape of the \"Button\"\n                    \"ButtonBorder.figure\": \"Circle\",\n                    \"ButtonBorder.fill\": colorWhite,\n                    \"ButtonBorder.stroke\": colorGray,\n                    \"ButtonBorder.strokeWidth\": 1,\n                    \"ButtonBorder.width\": ADD_BUTTON_SIZE,\n                    \"ButtonBorder.height\": ADD_BUTTON_SIZE,\n                    // set properties on the \"Button\" itself used by its event handlers\n                    _buttonFillOver: colorPrimary1,\n                    _buttonStrokeOver: colorPrimary1,\n                    _buttonFillPressed: colorPrimary1,\n                    _buttonStrokePressed: colorPrimary1,\n                    mouseEnter: function(e, btn) {\n\t\t\t\t\t\tif (!isEditMode(btn)) return;\n                        if (!btn.isEnabledObject()) return;\n\n                        var shape = btn.findObject(\"ButtonBorder\"); // the border Shape\n                        if (shape instanceof go.Shape) {\n                            var brush = btn[\"_buttonFillOver\"];\n                            btn[\"_buttonFillNormal\"] = shape.fill;\n                            shape.fill = brush;\n                            brush = btn[\"_buttonStrokeOver\"];\n                            btn[\"_buttonStrokeNormal\"] = shape.stroke;\n                            shape.stroke = brush;\n                        }\n\n                        var plus = btn.findObject(\"ButtonText\");\n                        if (plus) {\n                            plus.stroke = colorWhite;\n                        }\n                    },\n                    mouseLeave: function(e, btn) {\n                        if (!btn.isEnabledObject()) return;\n                        var shape = btn.findObject(\"ButtonBorder\"); // the border Shape\n                        if (shape instanceof go.Shape) {\n                            shape.fill = btn[\"_buttonFillNormal\"];\n                            shape.stroke = btn[\"_buttonStrokeNormal\"];\n                        }\n\n                        var plus = btn.findObject(\"ButtonText\");\n                        if (plus) {\n                            plus.stroke = colorGray;\n                        }\n                    },\n                    click: function(e, btn) {\n\t\t\t\t\t\tif (!isEditMode(btn)) return;\n\n                        var currNode = btn.part;\n                        // for parallel edge, there is only one edge goes into this branch node\n                        var incomingEdge = currNode.findLinksInto().first();\n                        if (!incomingEdge) return;\n                        var fromData = incomingEdge.fromNode.data;\n\n                        dispatch(\"PAD#DIAGRAM_OPEN_BUTTON_TRAY\", {\n                            type: \"picker\",\n                            position: btn.getDocumentPoint(go.Spot.Center),\n                            nodeData: currNode.data,\n                            nodeContext: {\n                                addType: currNode.data.nodeContext,\n                                nodeType: isLane(fromData) ? 'lane' : 'activity'\n                            }\n                        });\n                    }\n                },\n                $(go.TextBlock, {\n                    name: \"ButtonText\",\n                    text: \"+\",\n                    stroke: colorGray,\n                })\n            ),\n            $(go.Shape, \"Rectangle\", {\n                fill: null,\n                stroke: null,\n                desiredSize: new go.Size(0, 0),\n                position: new go.Point(0, NODE_HEIGHT / 2),\n                portId: \"c0bed67c535c20100b0cddeeff7b12fc\",\n                fromSpot: go.Spot.Left,\n                toSpot: go.Spot.Left,\n                fromLinkable: false,\n                toLinkable: false,\n                cursor: \"pointer\",\n            }),\n            $(go.Shape,\n                new go.Binding(\"visible\", \"isParallel\", function(isParallel) {\n                    return !isParallel;\n                }),\n                \"Circle\", {\n                    name: \"PORT_RIGHT\",\n                    fill: null,\n                    stroke: null,\n                    desiredSize: new go.Size(0, 0),\n                    position: new go.Point(ADD_BUTTON_SIZE, NODE_HEIGHT / 2),\n                    portId: \"49de92bc535c20100b0cddeeff7b12f9\",\n                    fromSpot: go.Spot.Right,\n                    toSpot: go.Spot.Right,\n                    fromLinkable: true,\n                    toLinkable: false,\n                    cursor: \"pointer\",\n                })\n        ));\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1293c996ad48c7d88400c13afef3cdff","value":"1293c996ad48c7d88400c13afef3cdff"},"sys_update_name":"sn_diagram_builder_shape_template_834d93b253421110d67cddeeff7b12cf","has_recenter_handler":"false","name":"PD Branch Node","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":"read"},{"description":"Circle Shape Template","sys_updated_on":"2021-10-27 11:20:47","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"83866027530310100b0cddeeff7b1255","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2020-09-10 10:06:15","sys_name":"Circle Shape Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/bb266f93530310100b0cddeeff7b127c","value":"bb266f93530310100b0cddeeff7b127c"},"sys_mod_count":"3","active":"true","sys_tags":"","script":"","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_83866027530310100b0cddeeff7b1255","has_recenter_handler":"false","name":"Circle Shape Template","tab_click_handler":"","sys_policy":""},{"description":"","sys_updated_on":"2022-08-22 16:59:55","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"8432a8ec77a11110b2b4ddd9cf5a99a6","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2022-08-22 21:15:13","sys_name":"Flow MAD Branch Node Main Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/3ff9eb17530310100b0cddeeff7b12b4","value":"3ff9eb17530310100b0cddeeff7b12b4"},"sys_mod_count":"1","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_8432a8ec77a11110b2b4ddd9cf5a99a6","has_recenter_handler":"false","name":"Flow MAD Branch Node Main Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2024-08-29 08:36:09","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"84a9de75a3d412105d51b85de31e6104","recenter_handler":"function isRecenterRequired(selection, diagram, threshold, dispatch) {\n\t// Implement recenter handler\n\treturn true;\n}","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2024-08-29 08:36:09","sys_name":"Adornment Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"advanced","sys_created_by":"admin","aria_label":"","shape":"","sys_mod_count":"0","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch, shapeTemplateUtilities, resolveThemeVariable) {\n    var baseShape = shapeTemplateUtilities.jsonProps;\n    return $(go.Adornment, 'Spot',\n        $(go.Placeholder, {}),\n        $(go.Shape, baseShape.shape, baseShape.shapeProps),\n    );\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_84a9de75a3d412105d51b85de31e6104","has_recenter_handler":"false","name":"Adornment Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2022-02-11 02:20:16","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"87bbafd6c36101105c68006c2840dd6b","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2022-02-11 02:13:48","sys_name":"Flow Stage Main Body Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/5d3727d3530310100b0cddeeff7b12d7","value":"5d3727d3530310100b0cddeeff7b12d7"},"sys_mod_count":"2","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_87bbafd6c36101105c68006c2840dd6b","has_recenter_handler":"false","name":"Flow Stage Main Body Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2023-10-20 15:51:48","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"88b6763cc3ceb910b09bb4cdb840ddcc","recenter_handler":"function isRecenterRequired(selection, diagram, threshold, dispatch) {\n\t// Implement recenter handler\n\treturn true;\n}","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2023-10-20 15:51:48","sys_name":"Rounded Rectangle Port Shape Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/5d3727d3530310100b0cddeeff7b12d7","value":"5d3727d3530310100b0cddeeff7b12d7"},"sys_mod_count":"0","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch, shapeTemplateUtilities, resolveThemeVariable) {\n    /*\n    // Sample code to reuse the child shape templates\n    var buildChildShapeTemplate = shapeTemplateUtilities.buildChildShapeTemplate; // Function to build child shape templates\n    var children = shapeTemplateUtilities.children; // Array of children shape templates\n\n    // To pass the props from parent to child shape template\n    var props = {\n        'stroke': 'blue',\n\t\t'fill': resolveThemeVariable('--now-color--primary-0'), // Syntax to retrieve the value associated with the specified theme variable\n    };\n\n    return $(go.Node, 'Auto',\n        buildChildShapeTemplate(children[0], props), // Build the first child shape template, if any.\n        buildChildShapeTemplate(children[1], props) // Build the second shape template, if any.\n    );\n\n    // Usage of the json props in child shape template that are passed from the parent\n    var jsonProps = shapeTemplateUtilities.jsonProps; // JSON props passed from the parent shape template\n\n    return $(go.Node, 'Auto',\n        buildChildShapeTemplate(children[0], jsonProps), // Build the first child shape template, if any.\n        buildChildShapeTemplate(children[1], jsonProps.stroke) // Build the second shape template, if any.\n    );\n\t*/\n\n    return $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_88b6763cc3ceb910b09bb4cdb840ddcc","has_recenter_handler":"false","name":"Rounded Rectangle Port Shape Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2023-07-12 18:29:45","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"898918f44300b1109177f17dd9b8f27d","recenter_handler":"function isRecenterRequired(selection, diagram, threshold, dispatch) {\n\t// Implement recenter handler\n\treturn true;\n}","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2023-07-12 18:04:11","sys_name":"Flow Try Output Port Shape","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/5d3727d3530310100b0cddeeff7b12d7","value":"5d3727d3530310100b0cddeeff7b12d7"},"sys_mod_count":"2","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch, buildShapeTemplate, children) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_898918f44300b1109177f17dd9b8f27d","has_recenter_handler":"false","name":"Flow Try Output Port Shape","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2022-02-10 20:31:25","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"8a49c65ac32501105c68006c2840ddd2","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2022-02-10 19:04:05","sys_name":"Flow Stage Base Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"base","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/03775d6b5398a0100b0cddeeff7b129e","value":"03775d6b5398a0100b0cddeeff7b129e"},"sys_mod_count":"1","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_8a49c65ac32501105c68006c2840ddd2","has_recenter_handler":"false","name":"Flow Stage Base Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2021-10-27 11:20:47","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"8b046a9453392010b553ddeeff7b12fb","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2021-01-15 09:47:16","sys_name":"Loop Node Placeholder Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/5d3727d3530310100b0cddeeff7b12d7","value":"5d3727d3530310100b0cddeeff7b12d7"},"sys_mod_count":"7","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_8b046a9453392010b553ddeeff7b12fb","has_recenter_handler":"false","name":"Loop Node Placeholder Template","tab_click_handler":"","sys_policy":""},{"description":"","sys_updated_on":"2024-08-29 16:35:01","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"8c2b9e1fc3062110acabb4cdb840dd50","recenter_handler":"function isRecenterRequired(selection, diagram, threshold, dispatch) {\n\t// Implement recenter handler\n\treturn true;\n}","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2023-04-12 11:49:15","sys_name":"Terminal Node Shape Template Advanced","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"advanced","sys_created_by":"admin","aria_label":"","shape":"","sys_mod_count":"55","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch, shapeTemplateUtilities, resolveThemeVariable) {\n    var buildChildShapeTemplate = shapeTemplateUtilities.buildChildShapeTemplate;\n    var children = shapeTemplateUtilities.children;\n    var circleShapeProps = {\n        'stroke': resolveThemeVariable('--now-color--neutral-1'),\n        'strokeWidth': 1\n    };\n    var hoverShapeProps = {\n        'shape': 'Circle',\n        'shapeProps': {\n            'stroke': 'blue',\n            'strokeWidth': 1,\n            'width': 50,\n            'height': 50,\n            'fill': null\n        },\n    };\n    var nodeHoverAdornment = buildChildShapeTemplate(children[2], hoverShapeProps);\n    return $(go.Node, 'Auto', {\n            shadowColor: resolveThemeVariable('--now-datavis_color--teal-4'),\n            shadowBlur: 20,\n            selectionAdorned: false,\n            shadowOffset: new go.Point.parse(\"0 0\"),\n            mouseEnter: function(e, obj) {\n                var node = obj.part;\n                nodeHoverAdornment.adornedObject = node;\n                node.addAdornment('mouseEnter', nodeHoverAdornment);\n            },\n            mouseLeave: function(e, obj) {\n                var node = obj.part;\n                node.removeAdornment('mouseEnter');\n            }\n        },\n        new go.Binding(\"isShadowed\", \"isSelected\", function(v) {\n            return v;\n        }).ofObject(),\n        buildChildShapeTemplate(children[0], circleShapeProps),\n        buildChildShapeTemplate(children[1])\n    );\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_8c2b9e1fc3062110acabb4cdb840dd50","has_recenter_handler":"false","name":"Terminal Node Shape Template Advanced","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"Shape template with a nested circle and textblock to render terminal nodes like Start and End","sys_updated_on":"2021-10-27 11:20:47","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"8c72bc6b530310100b0cddeeff7b12a5","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2020-09-10 10:58:22","sys_name":"Terminal Node Shape Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"base","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/6f46af93530310100b0cddeeff7b1269","value":"6f46af93530310100b0cddeeff7b1269"},"sys_mod_count":"8","active":"true","sys_tags":"","script":"","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_8c72bc6b530310100b0cddeeff7b12a5","has_recenter_handler":"false","name":"Terminal Node Shape Template","tab_click_handler":"","sys_policy":""},{"description":"","sys_updated_on":"2021-10-27 11:20:47","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"8fca1cfb538310100b0cddeeff7b1226","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2020-09-11 03:52:46","sys_name":"Rounded Rectangle Shape Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/8e182fd3530310100b0cddeeff7b124c","value":"8e182fd3530310100b0cddeeff7b124c"},"sys_mod_count":"3","active":"true","sys_tags":"","script":"","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_8fca1cfb538310100b0cddeeff7b1226","has_recenter_handler":"false","name":"Rounded Rectangle Shape Template","tab_click_handler":"","sys_policy":""},{"description":"","sys_updated_on":"2023-12-11 19:32:23","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"90257cc753fe10100b0cddeeff7b12e3","recenter_handler":"function isRecenterRequired(selection, diagram, threshold, dispatch) {\t// Implement recenter handler\treturn true;}","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2020-08-27 12:04:47","sys_name":"Circle with Text Block","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"advanced","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/6f46af93530310100b0cddeeff7b1269","value":"6f46af93530310100b0cddeeff7b1269"},"sys_mod_count":"59","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch, shapeTemplateUtilities, resolveThemeVariable) {\n    return $(go.Node, \"Auto\", {\n            selectionAdorned: false, // Disable default selection for node\n            shadowColor: resolveThemeVariable(\"--now-datavis_color--teal-4\"), // Shadow settings when a node is selected\n            shadowBlur: 20,\n            shadowOffset: new go.Point.parse(\"0 0\")\n        },\n        new go.Binding(\"isShadowed\", \"isSelected\", function(v) {\n            return v;\n        }).ofObject(), // Add shadow only when a node is selected\n        $(go.Shape, \"Circle\", {\n            fill: resolveThemeVariable(\"--now-color--neutral-0\"),\n            stroke: resolveThemeVariable(\"--now-color--neutral-2\"),\n            strokeWidth: 1,\n            width: 50,\n            height: 50\n        }),\n        $(go.TextBlock, {\n                font: \"9pt Lato, Helvetica, Arial, sans-serif\",\n                stroke: resolveThemeVariable(\"--now-datavis_color--blue-7\")\n            },\n            new go.Binding(\"text\", \"name\")\n        )\n    );\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_90257cc753fe10100b0cddeeff7b12e3","has_recenter_handler":"false","name":"Circle with Text Block","tab_click_handler":"","sys_policy":""},{"description":"","sys_updated_on":"2023-05-17 17:39:56","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"90fa37a643f621109177f17dd9b8f2b8","recenter_handler":"function isRecenterRequired(selection, diagram, threshold, dispatch) {\n\t// Implement recenter handler\n\treturn true;\n}","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2023-05-17 17:39:56","sys_name":"Flow Logic Node Body Template Container","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/5d3727d3530310100b0cddeeff7b12d7","value":"5d3727d3530310100b0cddeeff7b12d7"},"sys_mod_count":"0","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_90fa37a643f621109177f17dd9b8f2b8","has_recenter_handler":"false","name":"Flow Logic Node Body Template Container","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"SN icon shape template to render images specified at a given source path, with a default set to the SNOW logo","sys_updated_on":"2021-06-07 19:01:01","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"92ecf46677a83410b2b4ddd9cf5a99fc","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2021-06-07 18:55:17","sys_name":"SN Icon Shape Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/577a2f17530310100b0cddeeff7b1221","value":"577a2f17530310100b0cddeeff7b1221"},"sys_mod_count":"1","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_92ecf46677a83410b2b4ddd9cf5a99fc","has_recenter_handler":"false","name":"SN Icon Shape Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2024-10-04 05:54:55","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"92f78b16530e1110d67cddeeff7b12c3","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2022-09-22 16:20:07","sys_name":"PD Start End Node","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1293c996ad48c7d88400c13afef3cdff","value":"1293c996ad48c7d88400c13afef3cdff"},"template_type":"advanced","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/6f46af93530310100b0cddeeff7b1269","value":"6f46af93530310100b0cddeeff7b1269"},"sys_mod_count":"116","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch, shapeTemplateUtilities, resolveThemeVariable) {\n    // consistent with process-designer-configuration.constants.js's ENABLE_FEATURES.STAGES\n    var PROCESS_TYPE_CONFIGURATION_ENABLE_FEATURES_STAGES = 'stages';\n\n    // the shared method among shape templates\n    var makeAddButton = go.go.PadCustomizationShared.makeAddButton;\n    var isEditMode = go.go.PadCustomizationShared.isEditMode;\n\n    var NODE_HEIGHT = 30;\n    var BOUNDING_BOX_EXTRA_HEIGHT = 16;\n    var BOUNDING_BOX_EXTRA_WIDTH = 60;\n    var ADD_BUTTON_SIZE = 16;\n    var PORT_SIZE = 12;\n    var PORT_ADD_BUTTON_GAP = 6;\n    var ERROR_TEXT_BLOCK = 'ERROR_TEXT_BLOCK';\n    var OUTER_PORT_CIRCLE = 'OUTER_PORT_CIRCLE';\n    var INNER_PORT_CIRCLE = 'INNER_PORT_CIRCLE';\n    var OUTGOING_DANGLE_INDICATOR = 'OUTGOING_DANGLE_INDICATOR';\n    var OUTGOING_PORT_ALIGNMENT = new go.Spot(\n        1,\n        0.5,\n        -BOUNDING_BOX_EXTRA_WIDTH / 2 + 1,\n        0\n    );\n\n    var colorBorderSecondary = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.BORDER_SECONDARY);\n    var colorPrimary1 = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.PRIMARY1);\n    var colorPrimary2 = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.PRIMARY2);\n    var colorPrimaryText = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.TEXT_PRIMARY);\n    var colorNeutral0 = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.NEUTRAL0);\n    var colorNeutral19 = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.NEUTRAL19);\n    var colorAlertHigh2 = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.HIGH2);\n    var colorSurfaceBrand1 = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.BRAND1);\n    var colorCritical2 = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.CRITICAL2);\n\n    function makePort(portId, name, spot, alignment, alignmentFocus, output, input) {\n        return $(go.Shape, \"Circle\", {\n            name: name,\n            fill: null,\n            stroke: null,\n            desiredSize: new go.Size(0, 0),\n            alignment: alignment,\n            alignmentFocus: alignmentFocus,\n            portId: portId,\n            fromSpot: spot,\n            toSpot: spot,\n            fromLinkable: output,\n            toLinkable: input,\n            cursor: \"pointer\",\n        });\n    }\n\n    function drawLink(e, obj) {\n        var node = obj.part.adornedPart;\n        var tool = e.diagram.toolManager.linkingTool;\n        var port = node.findObject(\"PORT_RIGHT\");\n        tool.startObject = port;\n        tool.temporaryToNode.location = e.diagram.lastInput.documentPoint;\n        e.diagram.currentTool = tool;\n        tool.doActivate();\n        tool.temporaryFromNode.ensureBounds();\n        tool.temporaryToNode.ensureBounds();\n        tool.temporaryFromPort = $(go.Shape, 'Circle', {\n            width: PORT_SIZE,\n            height: PORT_SIZE,\n            fill: colorPrimary1,\n            stroke: colorPrimary1,\n            segmentIndex: 0,\n        });\n    }\n\n    function showTooltipOnMouseEvent(type) {\n        return function(e) {\n            if (!isEditMode(e)) return;\n\n            var eventClientX = e.event.clientX;\n            var eventClientY = e.event.clientY;\n\n            var tooltipLocation = {\n                x: eventClientX,\n                y: eventClientY\n            };\n\n            dispatch(\"PAD#DIAGRAM_SHOW_TOOLTIP\", {\n                type,\n                location: tooltipLocation\n            });\n        };\n    }\n\n    function hideTooltip() {\n        dispatch(\"PAD#DIAGRAM_HIDE_TOOLTIP\");\n    }\n\n    function renderPort(showPort) {\n        if (showPort) {\n            return $(\n                go.Panel, \"Table\",\n                new go.Binding(\"mouseEnter\", \"\", function(adornment) {\n                    return function(e, obj) {\n                        if (!isEditMode(obj)) return;\n\n                        var outerPortCircle = obj.part.findObject(OUTER_PORT_CIRCLE);\n                        var innerPortCircle = obj.part.findObject(INNER_PORT_CIRCLE);\n                        if (adornment.adornedPart.isSelected && adornment.data.hasOutgoing) {\n                            outerPortCircle.stroke = colorPrimary2;\n                            innerPortCircle.fill = colorPrimary2;\n                        } else {\n                            outerPortCircle.stroke = colorPrimary1;\n                            innerPortCircle.fill = colorPrimary1;\n                        }\n                        outerPortCircle.fill = colorSurfaceBrand1;\n                    };\n                }).ofObject(),\n                new go.Binding('cursor', '', function(data, btn) {\n                    return !isEditMode(btn) ? 'default' : 'pointer';\n                }), {\n                    alignment: new go.Spot(\n                        1,\n                        0,\n                        -BOUNDING_BOX_EXTRA_WIDTH / 2,\n                        BOUNDING_BOX_EXTRA_HEIGHT / 2 + NODE_HEIGHT / 2\n                    ),\n                    alignmentFocus: go.Spot.Center,\n                    isActionable: true,\n                    actionMove: drawLink,\n                    mouseHover: showTooltipOnMouseEvent('node_connector'),\n                    mouseEnter: function(e, obj) {\n                        if (!isEditMode(e)) return;\n\n                        var outerPortCircle = obj.part.findObject(OUTER_PORT_CIRCLE);\n                        var innerPortCircle = obj.part.findObject(INNER_PORT_CIRCLE);\n                        outerPortCircle.stroke = colorPrimary1;\n                        outerPortCircle.fill = colorSurfaceBrand1;\n                        innerPortCircle.fill = colorPrimary1;\n                    },\n                    mouseLeave: hideTooltip\n                },\n                $(go.Shape, \"Circle\",\n                    new go.Binding(\"stroke\", \"\", function(part) {\n                        if (part.data.hasOutgoing) {\n                            if (part.data.color) {\n                                return go.Brush.darkenBy(part.data.color, 0.4);\n                            } else {\n                                return colorBorderSecondary;\n                            }\n                        } else {\n                            return colorAlertHigh2;\n                        }\n                    }).ofObject(), {\n                        name: OUTER_PORT_CIRCLE,\n                        stretch: go.GraphObject.Fill,\n                        fill: colorNeutral0,\n                        strokeWidth: 1,\n                        desiredSize: new go.Size(PORT_SIZE, PORT_SIZE),\n                    }),\n                $(go.Shape, \"Circle\",\n                    new go.Binding(\"fill\", \"hasOutgoing\", function(hasOutgoing) {\n                        return hasOutgoing ? colorPrimary1 : colorAlertHigh2;\n                    }), {\n                        name: INNER_PORT_CIRCLE,\n                        strokeWidth: 0,\n                        desiredSize: new go.Size(PORT_SIZE / 3, PORT_SIZE / 3),\n                    })\n            );\n        } else {\n            return {};\n        }\n    }\n\n    function makeIcon({\n        source,\n        objectSource,\n        addlProps\n    }) {\n        return $(\n            go.Shape,\n            new go.Binding(\"geometry\", '', function(data) {\n                var iconSVG = objectSource ? data[objectSource]?.[source] : data[source];\n\n                if (!iconSVG)\n                    return go.Geometry.parse('');\n                var geometryString = '';\n                // We pass in the entire SVG string from seismic. This way is better because we can use any properties on the SVG here\n                // instead of passing a bunch of different properties from the node data. for example, if there's a fill rule like 'evenodd', or any other properties.\n                var parsedSvg = new DOMParser().parseFromString(iconSVG, \"image/svg+xml\");\n                var paths = parsedSvg.getElementsByTagName(\"path\");\n                for (var i = 0; i < paths.length; i++) {\n                    var path = paths[i];\n                    var pathD = path.getAttribute(\"d\");\n                    var fillRule = path.getAttribute(\"fill-rule\");\n                    if (typeof pathD === \"string\") {\n                        if (fillRule === 'evenodd' || !fillRule)\n                            geometryString = geometryString.concat('F0');\n                        geometryString = geometryString.concat(pathD);\n                    }\n                }\n                var geo = go.Geometry.parse(geometryString);\n                geo.normalize();\n                return geo;\n            }),\n            new go.Binding(\"fill\", \"\", function(data) {\n                if (dataHasError(data) && objectSource === 'errors') return colorNeutral0;\n                else if (objectSource === 'startIcon' && data.isStart) return colorNeutral0;\n                else return colorPrimaryText;\n            }), {\n                stroke: null,\n                ...addlProps\n            }\n        );\n    }\n\n    function makeIconWithBackground({\n        icon,\n        toolTip,\n        getIsShow,\n        getBackgroundColor,\n        getBorderColor,\n        margin,\n        shouldHighlightOnHover = true\n    }) {\n        if (typeof getIsShow !== 'function')\n            getIsShow = function() {\n                return false;\n            };\n        if (typeof getBackgroundColor !== 'function') {\n            getBackgroundColor = function() {\n                return 'transparent';\n            };\n        }\n        if (typeof getBorderColor !== 'function') {\n            getBorderColor = function() {\n                return 'transparent';\n            };\n        }\n        var backgroundShapeConfig = {\n            strokeWidth: 1,\n            parameter1: 2,\n            width: 16,\n            height: 16,\n        };\n        if (shouldHighlightOnHover) {\n            backgroundShapeConfig = {\n                ...backgroundShapeConfig,\n                mouseEnter: function(e, shape, prev) {\n                    if (!isEditMode(e)) return;\n\n                    if (shape?.panel === prev?.panel)\n                        return;\n                    var fill = getBackgroundColor(shape?.part?.data);\n                    if (isValidHexColor(fill))\n                        shape.fill = shadeColor(fill, 10);\n                },\n                mouseLeave: function(e, shape, next) {\n                    if (shape?.panel === next?.panel)\n                        return;\n                    shape.fill = getBackgroundColor(shape?.part?.data);\n                }\n            };\n        }\n        return $(\n            go.Panel,\n            \"Auto\", {\n                margin: margin || new go.Margin(0, 2, 0, 2),\n                toolTip\n            },\n            new go.Binding(\"visible\", \"\", function(data) {\n                return getIsShow(data);\n            }),\n            $(\n                go.Shape,\n                \"RoundedRectangle\",\n                backgroundShapeConfig,\n                new go.Binding(\"fill\", \"\", function(data) {\n                    return getIsShow(data) ?\n                        getBackgroundColor(data) :\n                        'transparent';\n                }),\n                new go.Binding(\"stroke\", \"\", function(data) {\n                    return getIsShow(data) ?\n                        getBorderColor(data) :\n                        'transparent';\n                })\n            ),\n            icon\n        );\n    }\n\n    function formNodeHoverAdornment(showPort) {\n        return $(\n            go.Adornment,\n            \"Spot\",\n            $(\n                go.Panel,\n                \"Auto\",\n                $(go.Shape, {\n                    fill: null,\n                    stroke: null\n                }),\n                $(go.Placeholder, {})\n            ),\n            renderPort(showPort),\n            makeAddButton(\n                $,\n                go,\n                dispatch,\n                resolveThemeVariable, {\n                    name: \"ADD_BUTTON_RIGHT\",\n                    label: \"+\",\n                    alignment: new go.Spot(1, 0, -BOUNDING_BOX_EXTRA_WIDTH / 2 + PORT_SIZE / 2 + PORT_ADD_BUTTON_GAP, BOUNDING_BOX_EXTRA_HEIGHT / 2 + NODE_HEIGHT / 2),\n                    alignmentFocus: go.Spot.Left,\n                    mode: \"standard\",\n                    clickHandler: function(e, btn) {\n                        if (!isEditMode(btn)) return;\n\n                        dispatch(\"PAD#DIAGRAM_OPEN_BUTTON_TRAY\", {\n                            type: \"picker\",\n                            position: btn.getDocumentPoint(go.Spot.Center),\n                            nodeData: btn.part.data,\n                            nodeContext: {\n                                addType: 'addRight',\n                                nodeType: 'lane'\n                            }\n                        });\n                    }\n                }\n            )\n        );\n    }\n\n    function supportStages(diagramModelData) {\n        return diagramModelData[PROCESS_TYPE_CONFIGURATION_ENABLE_FEATURES_STAGES];\n    }\n\n    function showAdornmentWithPort(node) {\n        if (node) {\n            var linksOutOf = node.findLinksOutOf();\n            if (linksOutOf) {\n                return !linksOutOf.any(function(link) {\n                    return link.isSelected;\n                });\n            }\n        }\n        return true;\n    }\n\n    var showStartDisabledTooltip = showTooltipOnMouseEvent('variant_process_start_node');\n\n    function handleMouseEnterAndHover(e, node) {\n        if (!supportStages(e.diagram.model.modelData))\n            return;\n\n        if (node.data.key.endsWith('end')) return;\n\n        if (!isEditMode(e)) return;\n\n        var nodeHoverAdornment = formNodeHoverAdornment(showAdornmentWithPort(node));\n        dispatch(\"PAD#DIAGRAM_NODE_HIGHLIGHTED\", {\n            node: node,\n            diagram: e.diagram,\n            adornment: nodeHoverAdornment,\n            highlight: true\n        });\n\n        if (node.data.isVariantSelected) {\n            showStartDisabledTooltip(e);\n        }\n    }\n\n    /**\n     * Creates shapes for concentric circle indicator\n     * @param args - Object containing name, alignment, color (for stroke and fill), and visibilityFunc\n     * @returns GoJS Panel\n     */\n    function makeDanglingIndicator(args) {\n        return $(go.Panel, \"Table\", new go.Binding(\"visible\", \"\", args.visibilityFunc), {\n                name: args.name,\n                alignment: args.alignment,\n                alignmentFocus: go.Spot.Center,\n            },\n            $(go.Shape, \"Circle\", {\n                stretch: go.GraphObject.Fill,\n                fill: colorNeutral0,\n                stroke: args.color,\n                strokeWidth: 1,\n                desiredSize: new go.Size(PORT_SIZE, PORT_SIZE),\n            }),\n            $(go.Shape, \"Circle\", {\n                fill: args.color,\n                stroke: args.color,\n                strokeWidth: 0,\n                desiredSize: new go.Size(PORT_SIZE / 3, PORT_SIZE / 3)\n            }));\n    }\n\n    function leaveNode(node, next) {\n        // two cases of the adornment as next.part, which indicates that the mouse does not leave the current node\n        if (next?.part instanceof go.Adornment) {\n            // 1. the adornment is part of the current node (the add button)\n            if (next.part.adornedObject === node) {\n                return false;\n            }\n            // 2. the adornment is part of the selected link to or from the current node\n            if (next.part.adornedObject.part instanceof go.Link) {\n                var link = next.part.adornedObject.part;\n                if (link.isSelected && (link.fromNode?.data?.key === node.data.key || link.toNode?.data?.key === node.data.key)) {\n                    return false;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    function handleMouseLeave(e, node, next) {\n        if (!isEditMode(e)) return;\n\n        if (!supportStages(e.diagram.model.modelData))\n            return;\n\n        if (node.data.key.endsWith('end')) return;\n\n        if (leaveNode(node, next)) {\n            dispatch(\"PAD#DIAGRAM_NODE_HIGHLIGHTED\", {\n                node: node,\n                diagram: e.diagram,\n                highlight: false\n            });\n        }\n\n        hideTooltip();\n    }\n\n    function makeTooltip({\n        textSource,\n        getTooltipText,\n        getIsShow\n    }) {\n        if (!textSource)\n            return;\n        if (typeof getTooltipText !== 'function')\n            getTooltipText = function(sourceValue) {\n                return sourceValue;\n            };\n        if (typeof getIsShow !== 'function')\n            getIsShow = function() {\n                return true;\n            };\n        return $(\n            go.Adornment,\n            \"Spot\",\n            new go.Binding(\"visible\", \"\", function(obj) {\n                return getIsShow(obj);\n            }).ofObject(),\n            $(\n                go.Panel,\n                \"Auto\",\n                $(go.Shape, {\n                    name: \"toolTipBackground\",\n                    figure: \"RoundedRectangle\",\n                    // parameter1 is border-radius\n                    parameter1: 4,\n                    fill: colorNeutral19,\n                    stroke: colorNeutral19,\n                }),\n                $(\n                    go.TextBlock,\n                    new go.Binding(\"text\", textSource, getTooltipText), {\n                        stroke: colorNeutral0,\n                        maxSize: new go.Size(320, NaN),\n                        margin: new go.Margin(4, 8, 4, 8),\n                    }\n                )\n            )\n        );\n    }\n\n    function dataHasError(data) {\n        return !!data?.errors?.hasErrors;\n    }\n\n    function isValidHexColor(color) {\n        return /^#[0-9A-F]{6}$/i.test(color);\n    }\n\n    function shadeColor(color, percent) {\n        var R = parseInt(color.substring(1, 3), 16);\n        var G = parseInt(color.substring(3, 5), 16);\n        var B = parseInt(color.substring(5, 7), 16);\n\n        R = parseInt(R * (100 - percent) / 100);\n        G = parseInt(G * (100 - percent) / 100);\n        B = parseInt(B * (100 - percent) / 100);\n\n        R = (R < 255) ? R : 255;\n        G = (G < 255) ? G : 255;\n        B = (B < 255) ? B : 255;\n\n        R = Math.round(R);\n        G = Math.round(G);\n        B = Math.round(B);\n\n        var RR = ((R.toString(16).length == 1) ? \"0\" + R.toString(16) : R.toString(16));\n        var GG = ((G.toString(16).length == 1) ? \"0\" + G.toString(16) : G.toString(16));\n        var BB = ((B.toString(16).length == 1) ? \"0\" + B.toString(16) : B.toString(16));\n\n        return \"#\" + RR + GG + BB;\n    }\n\n    return $(\n        go.Node,\n        \"Spot\", {\n            layerName: \"Foreground\",\n            selectionAdorned: false,\n            mouseEnter: handleMouseEnterAndHover,\n            mouseHover: handleMouseEnterAndHover,\n            mouseLeave: handleMouseLeave\n        },\n        $(go.Panel, \"Horizontal\",\n            $(go.Shape, \"Rectangle\", {\n                height: NODE_HEIGHT + BOUNDING_BOX_EXTRA_HEIGHT,\n                width: BOUNDING_BOX_EXTRA_WIDTH / 2,\n                fill: \"transparent\",\n                strokeWidth: 0,\n                stretch: go.GraphObject.Fill\n            }),\n            $(\n                go.Panel,\n                \"Auto\",\n                $(\n                    go.Shape,\n                    \"RoundedCornerRectangle\",\n                    new go.Binding(\"fill\", \"color\"),\n                    new go.Binding('stroke', '', function(data) {\n                        return data?.errors?.borderColor ?? null;\n                    }),\n                    new go.Binding('strokeWidth', '', function(data) {\n                        return data?.errors?.hasErrors ? 2 : 0;\n                    })\n                ),\n                $(\n                    go.Panel,\n                    \"Horizontal\", {\n                        margin: new go.Margin(9, 12, 9, 12),\n                    },\n                    makeIconWithBackground({\n                        icon: makeIcon({\n                            source: 'icon',\n                            objectSource: 'startIcon'\n                        }),\n                        getIsShow: function(data) {\n                            return data?.isStart;\n                        }\n                    }),\n                    $(go.TextBlock, new go.Binding(\"text\", \"label\"),\n                        new go.Binding('cursor', '', function(data, btn) {\n                            return !isEditMode(btn) ? 'default' : 'pointer';\n                        }), {\n                            stroke: \"white\",\n                            textAlign: \"center\",\n                        }, new go.Binding(\"font\", \"labelFont\"))\n                )\n            ),\n            $(go.Shape, \"Rectangle\", {\n                height: NODE_HEIGHT + BOUNDING_BOX_EXTRA_HEIGHT,\n                width: BOUNDING_BOX_EXTRA_WIDTH / 2,\n                fill: \"transparent\",\n                strokeWidth: 0,\n                stretch: go.GraphObject.Fill\n            })\n        ),\n        makeDanglingIndicator({\n            name: OUTGOING_DANGLE_INDICATOR,\n            alignment: OUTGOING_PORT_ALIGNMENT,\n            color: colorAlertHigh2,\n            visibilityFunc: function(data) {\n                return data.isStart && !data.hasOutgoing;\n            }\n        }),\n        makePort(\n            \"c0bed67c535c20100b0cddeeff7b12fc\",\n            \"PORT_LEFT\",\n            go.Spot.Left,\n            new go.Spot(0, 0.5),\n            new go.Spot(0.5, 1, -BOUNDING_BOX_EXTRA_WIDTH / 2, 0),\n            false,\n            true\n        ),\n        makePort(\n            \"49de92bc535c20100b0cddeeff7b12f9\",\n            \"PORT_RIGHT\",\n            go.Spot.Right,\n            OUTGOING_PORT_ALIGNMENT,\n            go.Spot.Center,\n            true,\n            false\n        ),\n        $(\n            go.Panel,\n            \"Horizontal\", {\n                alignment: go.Spot.BottomCenter,\n                alignmentFocus: go.Spot.TopCenter\n            },\n            makeIconWithBackground({\n                icon: makeIcon({\n                    source: 'icon',\n                    objectSource: 'errors'\n                }),\n                toolTip: makeTooltip({\n                    textSource: 'errors',\n                    getTooltipText: function(textSourceValue) {\n                        return textSourceValue?.message;\n                    }\n                }),\n                getIsShow: function(data) {\n                    return dataHasError(data);\n                },\n                getBackgroundColor: function(data) {\n                    return colorCritical2;\n                }\n            })\n        ),\n    );\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1293c996ad48c7d88400c13afef3cdff","value":"1293c996ad48c7d88400c13afef3cdff"},"sys_update_name":"sn_diagram_builder_shape_template_92f78b16530e1110d67cddeeff7b12c3","has_recenter_handler":"false","name":"PD Start End Node","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":"read"},{"description":"","sys_updated_on":"2023-10-23 10:47:24","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"972f8d35c30e3d10b09bb4cdb840dd06","recenter_handler":"function isRecenterRequired(selection, diagram, threshold, dispatch) {\n\t// Implement recenter handler\n\treturn true;\n}","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2023-10-23 10:47:24","sys_name":"Circle Shape Node Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"base","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/4416da03535710100b0cddeeff7b126c","value":"4416da03535710100b0cddeeff7b126c"},"sys_mod_count":"0","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch, shapeTemplateUtilities, resolveThemeVariable) {\n    /*\n    // Sample code to reuse the child shape templates\n    var buildChildShapeTemplate = shapeTemplateUtilities.buildChildShapeTemplate; // Function to build child shape templates\n    var children = shapeTemplateUtilities.children; // Array of children shape templates\n\n    // To pass the props from parent to child shape template\n    var props = {\n        'stroke': 'blue',\n\t\t'fill': resolveThemeVariable('--now-color--primary-0'), // Syntax to retrieve the value associated with the specified theme variable\n    };\n\n    return $(go.Node, 'Auto',\n        buildChildShapeTemplate(children[0], props), // Build the first child shape template, if any.\n        buildChildShapeTemplate(children[1], props) // Build the second shape template, if any.\n    );\n\n    // Usage of the json props in child shape template that are passed from the parent\n    var jsonProps = shapeTemplateUtilities.jsonProps; // JSON props passed from the parent shape template\n\n    return $(go.Node, 'Auto',\n        buildChildShapeTemplate(children[0], jsonProps), // Build the first child shape template, if any.\n        buildChildShapeTemplate(children[1], jsonProps.stroke) // Build the second shape template, if any.\n    );\n\t*/\n\n    return $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_972f8d35c30e3d10b09bb4cdb840dd06","has_recenter_handler":"false","name":"Circle Shape Node Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2021-10-27 11:20:47","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"994ff2a053a310100b0cddeeff7b1277","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2020-09-26 10:02:25","sys_name":"Rounded Top Rectangle Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/77416c6b534310100b0cddeeff7b12b3","value":"77416c6b534310100b0cddeeff7b12b3"},"sys_mod_count":"3","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_994ff2a053a310100b0cddeeff7b1277","has_recenter_handler":"false","name":"Rounded Top Rectangle Template","tab_click_handler":"","sys_policy":""},{"description":"","sys_updated_on":"2024-04-01 21:34:47","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"9b9dc599772cf010b2b4ddd9cf5a995c","recenter_handler":"","sys_updated_by":"admin","tabbable":"true","sys_created_on":"2021-06-03 22:55:06","sys_name":"Flow Context Menu Shape Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"Opens current node's context menu","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/5d3727d3530310100b0cddeeff7b12d7","value":"5d3727d3530310100b0cddeeff7b12d7"},"sys_mod_count":"4","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_9b9dc599772cf010b2b4ddd9cf5a995c","has_recenter_handler":"false","name":"Flow Context Menu Shape Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n\tdiagram.commandHandler.showContextMenu(item.part);\n}","sys_policy":""},{"description":"","sys_updated_on":"2021-10-27 11:20:47","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"9bb64923533d20100b0cddeeff7b12a7","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2021-01-25 05:19:29","sys_name":"Invalid Node Indicator Shape Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/5d3727d3530310100b0cddeeff7b12d7","value":"5d3727d3530310100b0cddeeff7b12d7"},"sys_mod_count":"2","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_9bb64923533d20100b0cddeeff7b12a7","has_recenter_handler":"false","name":"Invalid Node Indicator Shape Template","tab_click_handler":"","sys_policy":""},{"description":"","sys_updated_on":"2021-06-24 16:30:47","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"9c1f73f37770b010b2b4ddd9cf5a993d","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2021-06-24 16:30:47","sys_name":"Flow Action Node Base Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"base","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/03775d6b5398a0100b0cddeeff7b129e","value":"03775d6b5398a0100b0cddeeff7b129e"},"sys_mod_count":"0","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_9c1f73f37770b010b2b4ddd9cf5a993d","has_recenter_handler":"false","name":"Flow Action Node Base Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2021-07-01 15:16:15","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"9d01b74eb7853010388487c2de11a97b","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2021-07-01 15:16:15","sys_name":"Flow Rounded Rectangle Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/8e182fd3530310100b0cddeeff7b124c","value":"8e182fd3530310100b0cddeeff7b124c"},"sys_mod_count":"0","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_9d01b74eb7853010388487c2de11a97b","has_recenter_handler":"false","name":"Flow Rounded Rectangle Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2021-08-18 05:32:17","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"9fb7b461b7027010388487c2de11a90a","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2021-08-18 05:32:17","sys_name":"Blank Shape From Bottom Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/5d3727d3530310100b0cddeeff7b12d7","value":"5d3727d3530310100b0cddeeff7b12d7"},"sys_mod_count":"0","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_9fb7b461b7027010388487c2de11a90a","has_recenter_handler":"false","name":"Blank Shape From Bottom Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"If Nodes evaluate a condition and go one of two ways based on the condition.\r\n\r\nIf nodes have two outcomes: Then and Else\r\nThen is when the condition evaluates to True. Else is when the condition evaluates to false.\r\n\r\nThese nodes are different than standard Action nodes because these make a decision based on a condition.","sys_updated_on":"2021-10-27 11:20:47","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"9fb9b987537314100b0cddeeff7b1259","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2020-10-16 09:39:55","sys_name":"If Node Shape Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"base","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/4416da03535710100b0cddeeff7b126c","value":"4416da03535710100b0cddeeff7b126c"},"sys_mod_count":"6","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_9fb9b987537314100b0cddeeff7b1259","has_recenter_handler":"false","name":"If Node Shape Template","tab_click_handler":"","sys_policy":""},{"description":"","sys_updated_on":"2021-06-04 21:55:58","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"a189022977203410b2b4ddd9cf5a99ba","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2021-06-04 21:55:58","sys_name":"Flow Action Node Icon Panel Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/5d3727d3530310100b0cddeeff7b12d7","value":"5d3727d3530310100b0cddeeff7b12d7"},"sys_mod_count":"0","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_a189022977203410b2b4ddd9cf5a99ba","has_recenter_handler":"false","name":"Flow Action Node Icon Panel Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2021-10-27 11:20:47","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"a324968b53fb14100b0cddeeff7b1213","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2020-10-16 11:34:27","sys_name":"Diamond Shape Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/7c04964b53fb14100b0cddeeff7b1231","value":"7c04964b53fb14100b0cddeeff7b1231"},"sys_mod_count":"4","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_a324968b53fb14100b0cddeeff7b1213","has_recenter_handler":"false","name":"Diamond Shape Template","tab_click_handler":"","sys_policy":""},{"description":"Port template for Switch Node","sys_updated_on":"2022-10-11 09:33:09","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"a4f0a71077e21110b2e09dcc3c5a99a7","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2022-10-11 09:33:09","sys_name":"Switch Node Port Shape Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/5d3727d3530310100b0cddeeff7b12d7","value":"5d3727d3530310100b0cddeeff7b12d7"},"sys_mod_count":"0","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_a4f0a71077e21110b2e09dcc3c5a99a7","has_recenter_handler":"false","name":"Switch Node Port Shape Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"Link template for Flow Diagramming","sys_updated_on":"2021-06-23 02:57:01","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"a5d8b2b7b7243010388487c2de11a98c","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2021-06-12 01:08:24","sys_name":"Flow Link Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"base","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/41a9e717530310100b0cddeeff7b12d3","value":"41a9e717530310100b0cddeeff7b12d3"},"sys_mod_count":"2","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_a5d8b2b7b7243010388487c2de11a98c","has_recenter_handler":"false","name":"Flow Link Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2024-06-09 09:08:06","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"a6d0d0afa3d031108125474446fcda97","recenter_handler":"function isRecenterRequired(selection, diagram, threshold, dispatch) {\n\t// Implement recenter handler\n\treturn true;\n}","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2023-08-02 16:44:54","sys_name":"PD Decision Branch Node","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1293c996ad48c7d88400c13afef3cdff","value":"1293c996ad48c7d88400c13afef3cdff"},"template_type":"advanced","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/6f46af93530310100b0cddeeff7b1269","value":"6f46af93530310100b0cddeeff7b1269"},"sys_mod_count":"132","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch, shapeTemplateUtilities, resolveThemeVariable) {\n    // the shared method among shape templates\n    var makeAddButton = go.go.PadCustomizationShared.makeAddButton;\n    var isEditMode = go.go.PadCustomizationShared.isEditMode;\n\n    var BOUNDING_BOX_EXTRA_WIDTH = 72;\n    var NODE_SIZE = 115;\n    var NODE_HEIGHT = 152;\n    var PORT_SIZE = 12;\n    var PORT_DOT_DIAMETER = 4;\n    var ADD_BUTTON_SIZE = 16;\n    var PORT_ADD_BUTTON_GAP = 8;\n\n    var COLOR_NEUTRAL_19 = go.go.PadCustomizationShared.COLORS.NEUTRAL19;\n    var colorPrimary1 = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.PRIMARY1);\n    var colorPrimary2 = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.PRIMARY2);\n    var colorPrimaryText = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.TEXT_PRIMARY);\n    var colorNeutral19 = resolveThemeVariable(COLOR_NEUTRAL_19);\n    var colorNeutral0 = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.NEUTRAL0);\n    var colorSurfaceBrand1 = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.BRAND1);\n    var colorBorderSecondary = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.BORDER_SECONDARY);\n    var nodeShadowColor = \"rgba(\" + resolveThemeVariable(COLOR_NEUTRAL_19, false) + \", 0.2)\";\n    var OUTER_PORT_CIRCLE = 'OUTER_PORT_CIRCLE';\n    var INNER_PORT_CIRCLE = 'INNER_PORT_CIRCLE';\n    var MAIN_NODE_SHAPE = 'MAIN_NODE_SHAPE';\n\n    function makePort(portId, name, spot, alignment, alignmentFocus, output, input) {\n        return $(go.Shape, \"Circle\", {\n            name: name,\n            fill: null,\n            stroke: null,\n            desiredSize: new go.Size(0, 0),\n            alignment: alignment,\n            alignmentFocus: alignmentFocus,\n            portId: portId,\n            fromSpot: spot,\n            toSpot: spot,\n            fromLinkable: output,\n            toLinkable: input,\n            cursor: \"pointer\",\n        });\n    }\n\n    function makeToolTip(args) {\n        if (!args.textSource) {\n            return;\n        }\n\n        return $(\n            go.Adornment,\n            \"Spot\",\n            new go.Binding(\"visible\", \"\", function(obj) {\n                // If we're not checking if a textblock is truncated, then\n                // the tooltip is always visible\n                if (!args.textBlockName) {\n                    return true;\n                }\n\n                // This tooltip is only visible if the TextBlock metrics show that\n                // the display text ends with ellipsis\n                var nameTextBlock =\n                    obj &&\n                    obj.adornedPart &&\n                    obj.adornedPart.findObject(args.textBlockName);\n                var textLines = nameTextBlock.metrics.arrText;\n                var lastLine = textLines[textLines.length - 1];\n                return lastLine.endsWith(\"...\");\n            }).ofObject(),\n            $(\n                go.Panel,\n                \"Auto\",\n                $(go.Shape, {\n                    name: \"toolTipBackground\",\n                    figure: \"RoundedRectangle\",\n                    // paramter1 is border-radius\n                    parameter1: 4,\n                    fill: colorNeutral19,\n                    stroke: colorNeutral19,\n                }),\n                $(go.TextBlock, new go.Binding(\"text\", args.textSource, function(sourceValue) {\n                    return args.objSourceAttribute ?\n                        sourceValue[args.objSourceAttribute] :\n                        sourceValue;\n                }), {\n                    stroke: colorNeutral0,\n                    maxSize: new go.Size(320, NaN),\n                    margin: new go.Margin(4, 8, 4, 8),\n                })\n            )\n        );\n    }\n\n    function drawLink(e, obj) {\n        var node = obj.part.adornedPart;\n        var tool = e.diagram.toolManager.linkingTool;\n        var port = node.findObject(\"PORT_RIGHT\");\n        tool.startObject = port;\n        tool.temporaryToNode.location = e.diagram.lastInput.documentPoint;\n        e.diagram.currentTool = tool;\n        tool.doActivate();\n        tool.temporaryFromNode.ensureBounds();\n        tool.temporaryToNode.ensureBounds();\n        tool.temporaryFromPort = $(go.Shape, 'Circle', {\n            width: PORT_SIZE,\n            height: PORT_SIZE,\n            fill: colorPrimary1,\n            stroke: colorPrimary1,\n            segmentIndex: 0,\n        });\n    }\n\n    function renderPort(showPort, portAlignment) {\n        if (showPort) {\n            return $(\n                go.Panel,\n                \"Table\",\n                new go.Binding(\"mouseEnter\", \"\", function(adornment) {\n                    return function(e, obj) {\n                        if (!isEditMode(e)) return;\n\n                        var outerPortCircle = obj.part.findObject(OUTER_PORT_CIRCLE);\n                        var innerPortCircle = obj.part.findObject(INNER_PORT_CIRCLE);\n                        if (adornment.adornedPart.isSelected) {\n                            outerPortCircle.stroke = colorPrimary2;\n                            innerPortCircle.fill = colorPrimary2;\n                        } else {\n                            outerPortCircle.stroke = colorPrimary1;\n                            innerPortCircle.fill = colorPrimary1;\n                        }\n                        outerPortCircle.fill = colorSurfaceBrand1;\n                    };\n                }).ofObject(), {\n                    alignment: portAlignment,\n                    alignmentFocus: go.Spot.Left,\n                    cursor: \"pointer\",\n                    isActionable: true,\n                    actionMove: drawLink,\n                    mouseHover: function(e) {\n                        if (!isEditMode(e)) return;\n\n                        var eventClientX = e.event.clientX;\n                        var eventClientY = e.event.clientY;\n\n                        var tooltipLocation = {\n                            x: eventClientX,\n                            y: eventClientY,\n                        };\n\n                        dispatch(\"PAD#DIAGRAM_SHOW_TOOLTIP\", {\n                            type: \"node_connector\",\n                            location: tooltipLocation,\n                        });\n                    },\n                    mouseEnter: function(e, obj) {\n                        if (!isEditMode(e)) return;\n\n                        var outerPortCircle = obj.part.findObject(OUTER_PORT_CIRCLE);\n                        var innerPortCircle = obj.part.findObject(INNER_PORT_CIRCLE);\n                        outerPortCircle.stroke = colorPrimary1;\n                        outerPortCircle.fill = colorSurfaceBrand1;\n                        innerPortCircle.fill = colorPrimary1;\n                    },\n                    mouseLeave: function() {\n                        dispatch(\"PAD#DIAGRAM_HIDE_TOOLTIP\");\n                    },\n                },\n                $(\n                    go.Shape,\n                    \"Circle\",\n                    new go.Binding(\"stroke\", \"\", function(part) {\n                        if (part.adornedPart.isSelected && isEditMode(part)) {\n                            return colorPrimary1;\n                        } else {\n                            return colorBorderSecondary;\n                        }\n\n                    }).ofObject(),\n                    new go.Binding(\"strokeWidth\", \"\", function(part) {\n                        return part.adornedPart.isSelected && isEditMode(part)?\n                            2 :\n                            1;\n                    }).ofObject(), {\n                        name: OUTER_PORT_CIRCLE,\n                        stretch: go.GraphObject.Fill,\n                        fill: colorNeutral0,\n                        desiredSize: new go.Size(PORT_SIZE, PORT_SIZE),\n                    }\n                ),\n                $(\n                    go.Shape,\n                    \"Circle\", {\n                        name: INNER_PORT_CIRCLE,\n                        strokeWidth: 0,\n                        fill: colorPrimary1,\n                        desiredSize: new go.Size(\n                            PORT_DOT_DIAMETER,\n                            PORT_DOT_DIAMETER\n                        ),\n                    }\n                )\n            );\n        } else {\n            return {};\n        }\n    }\n\n    function formNodeHoverAdornment(showPort, node) {\n        var nodeBounds = node.actualBounds;\n        var rightPortHorizontalOffset = nodeBounds.width - BOUNDING_BOX_EXTRA_WIDTH / 2;\n        var portAlignment = new go.Spot(0, 0, rightPortHorizontalOffset, NODE_HEIGHT / 2);\n        var rightButtonHorizontalOffset = rightPortHorizontalOffset + PORT_SIZE + PORT_ADD_BUTTON_GAP;\n        return $(\n            go.Adornment,\n            \"Spot\",\n            $(\n                go.Panel,\n                \"Table\",\n                $(go.Shape, {\n                    fill: null,\n                    stroke: null\n                }),\n                $(go.Placeholder, {})\n            ),\n            renderPort(showPort, portAlignment),\n            makeAddButton(\n                $,\n                go,\n                dispatch,\n                resolveThemeVariable, {\n                    name: \"ADD_BUTTON_RIGHT\",\n                    label: \"+\",\n                    alignment: new go.Spot(0, 0, rightButtonHorizontalOffset, NODE_HEIGHT / 2),\n                    alignmentFocus: go.Spot.Left,\n                    mode: \"standard\",\n                    clickHandler: function(event, btn) {\n                        if (!isEditMode(btn)) return;\n\n                        var currNode = btn.part;\n                        // for parallel edge, there is only one edge goes into this branch node\n                        // var incomingEdge = currNode.findLinksInto().first();\n                        // if (!incomingEdge) return;\n                        // var fromData = incomingEdge.fromNode.data;\n                        dispatch(\"PAD#DIAGRAM_OPEN_BUTTON_TRAY\", {\n                            type: \"picker\",\n                            position: btn.getDocumentPoint(go.Spot.Center),\n                            nodeData: currNode.data,\n                            nodeContext: {\n                                addType: currNode.data.nodeContext,\n                                nodeType: 'activity'\n                            }\n                        });\n                    }\n                }\n            )\n        );\n    }\n\n    function showAdornmentWithPort(node) {\n        if (node) {\n            var linksOutOf = node.findLinksOutOf();\n            if (linksOutOf) {\n                return !linksOutOf.any(function(link) {\n                    return link.isSelected;\n                });\n            }\n        }\n        return true;\n    }\n\n    function handleMouseEnterAndHover(e, node) {\n        if (!isEditMode(e)) return;\n\n        var nodeHoverAdornment = formNodeHoverAdornment(showAdornmentWithPort(node), node);\n        dispatch(\"PAD#DIAGRAM_NODE_HIGHLIGHTED\", {\n            node: node,\n            diagram: e.diagram,\n            adornment: nodeHoverAdornment,\n            highlight: true\n        });\n    }\n\n    function leaveNode(node, next) {\n        // two cases of the adornment as next.part, which indicates that the mouse does not leave the current node\n        if (next.part instanceof go.Adornment) {\n            // 1. the adornment is part of the current node (the add button)\n            if (next.part.adornedObject === node) {\n                return false;\n            }\n            // 2. the adornment is part of the selected link to or from the current node\n            if (next.part.adornedObject.part instanceof go.Link) {\n                var link = next.part.adornedObject.part;\n                if (link.isSelected && (link.fromNode.data.key === node.data.key || link.toNode.data.key === node.data.key)) {\n                    return false;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    return $(\n        go.Node,\n        \"Auto\",\n        new go.Binding(\"opacity\", \"isHidden\", function(isHidden) {\n            return isHidden === true ? 0.0 : 1.0;\n        }), {\n            name: \"DecisionBranchNode\",\n            layerName: \"Foreground\",\n            selectionAdorned: false,\n            isShadowed: false,\n            shadowColor: nodeShadowColor,\n            shadowOffset: new go.Point(0, 4),\n            shadowBlur: 8,\n            margin: 0,\n            cursor: 'pointer',\n            mouseEnter: handleMouseEnterAndHover,\n            mouseHover: handleMouseEnterAndHover,\n            mouseLeave: function(e, node, next) {\n                if (leaveNode(node, next)) {\n                    dispatch(\"PAD#DIAGRAM_NODE_HIGHLIGHTED\", {\n                        node: node,\n                        diagram: e.diagram,\n                        highlight: false\n                    });\n                }\n            },\n            mouseHold: function(e, node) {\n                if (!isEditMode(e)) return;\n\n                node.isShadowed = false;\n                var shape = node.findObject(MAIN_NODE_SHAPE);\n                shape.strokeDashArray = null;\n                shape.stroke = colorPrimary1;\n            },\n        },\n        $(\n            go.Panel,\n            \"Auto\", {\n                background: 'transparent',\n                padding: new go.Margin(0, BOUNDING_BOX_EXTRA_WIDTH / 2),\n            },\n            $(go.Shape, \"Rectangle\", {\n                fill: 'transparent',\n                position: new go.Point(0, 0),\n                height: NODE_HEIGHT,\n                stroke: null\n            }),\n            $(\n                go.TextBlock,\n                new go.Binding(\"stroke\", \"\", function(part) {\n                    if (part.isSelected && isEditMode(part))\n                        return colorPrimary1;\n                    else\n                        return colorPrimaryText;\n                }).ofObject(),\n                new go.Binding(\"text\", \"branchLabel\"),\n                new go.Binding(\"font\", \"fontLabel\"), {\n                    name: MAIN_NODE_SHAPE,\n                    textAlign: \"center\",\n                    margin: 8,\n                    overflow: go.TextBlock.OverflowEllipsis,\n                    maxLines: 2,\n                    maxSize: new go.Size(NODE_SIZE, NODE_SIZE),\n                    alignment: go.Spot.Center,\n                    alignmentFocus: go.Spot.Center,\n                    shadowVisible: false,\n                    // Below are undocumented properties, used to adjust the spacing between lines\n                    spacingAbove: -1,\n                    spacingBelow: -1,\n                    editable: false,\n                    toolTip: makeToolTip({\n                        textSource: \"branchLabel\",\n                        textBlockName: MAIN_NODE_SHAPE,\n                    })\n                }\n            ),\n            makePort(\n                \"c0bed67c535c20100b0cddeeff7b12fc\",\n                \"PORT_LEFT\",\n                go.Spot.Left,\n                new go.Spot(0, 0.5),\n                new go.Spot(0, 0, -BOUNDING_BOX_EXTRA_WIDTH / 2, 0),\n                false,\n                true\n            ),\n            makePort(\n                \"49de92bc535c20100b0cddeeff7b12f9\",\n                \"PORT_RIGHT\",\n                go.Spot.Right,\n                new go.Spot(1, 0.5),\n                new go.Spot(0, 0, BOUNDING_BOX_EXTRA_WIDTH / 2, 0),\n                true,\n                false\n            )\n        ));\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1293c996ad48c7d88400c13afef3cdff","value":"1293c996ad48c7d88400c13afef3cdff"},"sys_update_name":"sn_diagram_builder_shape_template_a6d0d0afa3d031108125474446fcda97","has_recenter_handler":"false","name":"PD Decision Branch Node","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":"read"},{"description":"","sys_updated_on":"2024-07-17 05:40:30","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"aa190456537c20100b0cddeeff7b12fa","recenter_handler":"function isRecenterRequired(selection, diagram, threshold, dispatch) {\t// Implement recenter handler\treturn true;}","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2020-12-02 10:34:11","sys_name":"Replace Node Button Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/5d3727d3530310100b0cddeeff7b12d7","value":"5d3727d3530310100b0cddeeff7b12d7"},"sys_mod_count":"30","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch, shapeTemplateUtilities, resolveThemeVariable) {\n    return $(go.TextBlock, {\n            text: '+',\n            font: '15pt Lato, Helvetica, Arial, sans-serif',\n            stroke: resolveThemeVariable('--now-datavis_color--blue-7'),\n            cursor: \"pointer\"\n        },\n        new go.Binding(\"click\", \"\", function(node) {\n            return function(event, buttonObject) {\n                dispatch(\"GO_DIAGRAM#REPLACE_NODE_CLICKED\", {\n                    key: node.data.key,\n                    group: node.data.group\n                });\n            };\n        }).ofObject());\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_aa190456537c20100b0cddeeff7b12fa","has_recenter_handler":"false","name":"Replace Node Button Template","tab_click_handler":"","sys_policy":""},{"description":"","sys_updated_on":"2021-10-27 11:20:48","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"ab21706b530310100b0cddeeff7b12dd","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2020-09-10 10:53:01","sys_name":"Panel with Circle and TextBlock","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/8ce7a7d3530310100b0cddeeff7b1291","value":"8ce7a7d3530310100b0cddeeff7b1291"},"sys_mod_count":"3","active":"true","sys_tags":"","script":"","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_ab21706b530310100b0cddeeff7b12dd","has_recenter_handler":"false","name":"Panel with Circle and TextBlock","tab_click_handler":"","sys_policy":""},{"description":"Trigger node template for Flow Designer triggers","sys_updated_on":"2021-06-22 22:15:20","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"ac9a729b77f07010b2b4ddd9cf5a991d","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2021-06-22 22:15:20","sys_name":"Flow Trigger Node Base Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"base","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/03775d6b5398a0100b0cddeeff7b129e","value":"03775d6b5398a0100b0cddeeff7b129e"},"sys_mod_count":"0","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_ac9a729b77f07010b2b4ddd9cf5a991d","has_recenter_handler":"false","name":"Flow Trigger Node Base Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2021-10-27 11:21:40","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"b28ebe6053a310100b0cddeeff7b12f0","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2020-09-26 09:59:41","sys_name":"Action Node Color Panel Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/5d3727d3530310100b0cddeeff7b12d7","value":"5d3727d3530310100b0cddeeff7b12d7"},"sys_mod_count":"6","active":"false","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_b28ebe6053a310100b0cddeeff7b12f0","has_recenter_handler":"false","name":"Action Node Color Panel Template","tab_click_handler":"","sys_policy":""},{"description":"","sys_updated_on":"2022-02-11 03:21:46","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"b2b9835ec3e501105c68006c2840ddbe","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2022-02-10 23:45:15","sys_name":"Flow Stage Close Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/5d3727d3530310100b0cddeeff7b12d7","value":"5d3727d3530310100b0cddeeff7b12d7"},"sys_mod_count":"2","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_b2b9835ec3e501105c68006c2840ddbe","has_recenter_handler":"false","name":"Flow Stage Close Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2021-06-03 20:00:04","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"b3b4685177e8f010b2b4ddd9cf5a996d","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2021-06-03 20:00:04","sys_name":"Rounded Left Rectangle Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/fc54645177e8f010b2b4ddd9cf5a99e6","value":"fc54645177e8f010b2b4ddd9cf5a99e6"},"sys_mod_count":"0","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_b3b4685177e8f010b2b4ddd9cf5a996d","has_recenter_handler":"false","name":"Rounded Left Rectangle Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2024-10-03 00:11:00","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"b469e4cfb7ba3010388487c2de11a961","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2021-09-29 03:13:57","sys_name":"Flow Add a Node Advanced Shape","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"advanced","sys_created_by":"admin","aria_label":"","shape":"","sys_mod_count":"27","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch, shapeTemplateUtilities, resolveThemeVariable) {\n    var nowColorPrimary1 = resolveThemeVariable(\"--now-color--primary-1\") || \"#4C6CEB\";\n    var nowColorPrimary2 = resolveThemeVariable(\"--now-color--primary-2\") || \"#3449A0\";\n    var nowColorPrimary3 = resolveThemeVariable(\"--now-color--primary-3\") || \"#1B2652\";\n    var nowColorText = resolveThemeVariable(\"--now-color_text--primary-actionable\") || \"#FFFFFF\";\n    var nowOpacityLess = resolveThemeVariable(\"--now-opacity--less\") || \"0.25\";\n    // Shared between button and shape underneath so\n    // that when the button is set to have less opacity,\n    // the button will not be see through\n    var sharedProps = {\n        figure: \"RoundedRectangle\",\n        width: 264,\n        height: 32,\n        strokeWidth: 0,\n        parameter1: 6\n    };\n\n    return (\n        $(go.Panel, \"Spot\",\n            $(\"Shape\", {\n                ...sharedProps,\n                fill: nowColorText,\n                stroke: nowColorText,\n            }),\n            $(\"Button\",\n                new go.Binding(\"isEnabled\", \"_isReadOnly\", function(isReadOnly) {\n                    return !isReadOnly;\n                }).ofModel(),\n                new go.Binding(\"ButtonBorder.opacity\", \"_isReadOnly\", function(isReadOnly) {\n                    return isReadOnly ? nowOpacityLess : 1;\n                }).ofModel(), {\n                    // set properties on the border Shape of the \"Button\"\n                    \"ButtonBorder.figure\": sharedProps.figure,\n                    \"ButtonBorder.fill\": nowColorPrimary1,\n                    \"ButtonBorder.stroke\": nowColorPrimary1,\n                    \"ButtonBorder.strokeWidth\": sharedProps.strokeWidth,\n                    \"ButtonBorder.width\": sharedProps.width,\n                    \"ButtonBorder.height\": sharedProps.height,\n                    // parameter1 is similar (but not exact) to the border radius\n                    \"ButtonBorder.parameter1\": sharedProps.paramater1,\n                    // set properties on the \"Button\" itself used by its event handlers\n                    \"_buttonFillOver\": nowColorPrimary2,\n                    \"_buttonStrokeOver\": nowColorPrimary2,\n                    \"_buttonFillPressed\": nowColorPrimary3,\n                    \"_buttonStrokePressed\": nowColorPrimary3,\n                    \"_buttonFillDisabled\": nowColorPrimary1,\n                    \"_buttonFillNormal\": nowColorPrimary1,\n                    click: function(event, btn) {\n                        dispatch(\"FLOW_DIAGRAM#ADD_NODE_CLICKED\", {\n                            event: event,\n                            buttonPosition: btn.getDocumentPoint(go.Spot.Center),\n                            isLastNode: true\n                        });\n                    },\n                    mouseEnter: function(e, btn) {\n                        if (!btn.isEnabledObject()) return;\n                        var shape = btn.findObject('ButtonBorder'); // the border Shape\n                        if (shape instanceof go.Shape) {\n                            var brush = btn['_buttonFillOver'];\n                            btn['_buttonFillNormal'] = shape.fill;\n                            shape.fill = brush;\n                            brush = btn['_buttonStrokeOver'];\n                            shape.stroke = brush;\n                        }\n                    },\n                    mouseLeave: function(e, btn) {\n                        if (!btn.isEnabledObject()) return;\n                        var shape = btn.findObject('ButtonBorder'); // the border Shape\n                        if (shape instanceof go.Shape) {\n                            shape.fill = btn['_buttonFillNormal'];\n                        }\n                    }\n                },\n                $(go.Panel, \"Horizontal\",\n                    $(go.Picture, {\n                        source: \"images/circle-plus-md-white.svg\",\n                        height: 16,\n                        width: 16,\n                        margin: new go.Margin(0, 8, 0, 0)\n                    }),\n                    $(go.TextBlock,\n                        new go.Binding(\"text\", \"name\"), {\n                            stroke: nowColorText,\n                            font: \"16px 'Open Sans', sans-serif\",\n                            verticalAlignment: go.Spot.Center,\n                            margin: new go.Margin(2, 0, 0, 0),\n                            opacity: 1\n                        })\n                )\n            )\n        )\n    );\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_b469e4cfb7ba3010388487c2de11a961","has_recenter_handler":"false","name":"Flow Add a Node Advanced Shape","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2021-09-02 18:48:02","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"b4bdf4aaeb1630100aefaaed035228eb","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2021-09-02 18:48:02","sys_name":"Blank Shape From Right Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/5d3727d3530310100b0cddeeff7b12d7","value":"5d3727d3530310100b0cddeeff7b12d7"},"sys_mod_count":"0","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_b4bdf4aaeb1630100aefaaed035228eb","has_recenter_handler":"false","name":"Blank Shape From Right Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2021-06-12 01:05:30","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"b5e73a77b7243010388487c2de11a9b6","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2021-06-12 01:05:30","sys_name":"Flow Link To Arrow Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/87c9ab17530310100b0cddeeff7b123d","value":"87c9ab17530310100b0cddeeff7b123d"},"sys_mod_count":"0","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_b5e73a77b7243010388487c2de11a9b6","has_recenter_handler":"false","name":"Flow Link To Arrow Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2023-12-07 17:36:51","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"b964ceca53f43110de44ddeeff7b12c7","recenter_handler":"function isRecenterRequired(selection, diagram, threshold, dispatch) {\n\t// Implement recenter handler\n\treturn true;\n}","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2023-08-23 05:52:31","sys_name":"Circle Shape Template Advanced","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"advanced","sys_created_by":"admin","aria_label":"","shape":"","sys_mod_count":"8","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch, shapeTemplateUtilities, resolveThemeVariable) {\n    var jsonProps = shapeTemplateUtilities.jsonProps || {}; // JSON props passed from the parent shape template\n\tvar forcedColorsDarkTheme = window.matchMedia('(forced-colors)').matches && window.matchMedia('(prefers-color-scheme: dark)');\n\tfunction getFillColor() {\n\t\treturn forcedColorsDarkTheme ? 'ButtonFace' : resolveThemeVariable('--now-color--neutral-0');\n\t}\n\n\tfunction getHighlightedFillColor() {\n\t\treturn forcedColorsDarkTheme ? 'Highlight' : resolveThemeVariable('--now-datavis_color--yellow-1');\n\t}\n\n    return $(go.Shape, \"Circle\", {\n        fill: forcedColorsDarkTheme ? \"ButtonFace\": resolveThemeVariable('--now-color--neutral-0'),\n        stroke: jsonProps.stroke ? jsonProps.stroke : resolveThemeVariable('--now-color--neutral-2'),\n        strokeWidth: jsonProps.strokeWidth ? jsonProps.strokeWidth : 1,\n        width: 50,\n        height: 50,\n        opacity: 1\n    }, new go.Binding(\"fill\", \"isHighlighted\", function(h) { return h ? getHighlightedFillColor() : getFillColor(); }).ofObject());\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_b964ceca53f43110de44ddeeff7b12c7","has_recenter_handler":"false","name":"Circle Shape Template Advanced","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"Generic template which acts as a placeholder to replace it with actual action template. This becomes quite handy while working with nodes like if.","sys_updated_on":"2021-10-27 11:20:48","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"bbb7f994534c60100b0cddeeff7b1256","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2020-10-20 06:44:27","sys_name":"Placeholder Node Shape Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"base","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/6f46af93530310100b0cddeeff7b1269","value":"6f46af93530310100b0cddeeff7b1269"},"sys_mod_count":"6","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_bbb7f994534c60100b0cddeeff7b1256","has_recenter_handler":"false","name":"Placeholder Node Shape Template","tab_click_handler":"","sys_policy":""},{"description":"Input port's shape template for Condition node","sys_updated_on":"2021-10-27 11:20:48","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"c166e2ba534020100b0cddeeff7b125d","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2020-10-28 04:32:52","sys_name":"Diamond within Diamond Shape Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/5d3727d3530310100b0cddeeff7b12d7","value":"5d3727d3530310100b0cddeeff7b12d7"},"sys_mod_count":"3","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_c166e2ba534020100b0cddeeff7b125d","has_recenter_handler":"false","name":"Diamond within Diamond Shape Template","tab_click_handler":"","sys_policy":""},{"description":"Action node template for Flow Designer actions","sys_updated_on":"2021-06-24 16:31:06","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"c3654d15772cf010b2b4ddd9cf5a99f9","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2021-06-03 22:19:49","sys_name":"Flow Action Node Shape Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/5d3727d3530310100b0cddeeff7b12d7","value":"5d3727d3530310100b0cddeeff7b12d7"},"sys_mod_count":"1","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_c3654d15772cf010b2b4ddd9cf5a99f9","has_recenter_handler":"false","name":"Flow Action Node Shape Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2023-12-07 18:48:53","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"c4ba2c7953f03110de44ddeeff7b1207","recenter_handler":"function isRecenterRequired(selection, diagram, threshold, dispatch) {\n\t// Implement recenter handler\n\treturn true;\n}","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2023-08-22 04:39:44","sys_name":"Tooltip Shape Template Advanced","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"advanced","sys_created_by":"admin","aria_label":"","shape":"","sys_mod_count":"10","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch, shapeTemplateUtilities, resolveThemeVariable) {\n    var jsonProps = shapeTemplateUtilities.jsonProps || {}; // Shape template properties passed from the parent shape template\n\n    return $(go.Adornment,\n        $(go.Panel, \"Auto\", {\n            background: jsonProps.background ? jsonProps.background : resolveThemeVariable('--now-color--neutral-21'),\n        }, $(go.TextBlock, {\n                margin: 7,\n                stroke: resolveThemeVariable(\"--now-color--neutral-0\"),\n                font: \"10px Poppins\",\n                maxSize: new go.Size(175, NaN)\n            },\n            new go.Binding(\"text\", \"name\")))\n    );\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_c4ba2c7953f03110de44ddeeff7b1207","has_recenter_handler":"false","name":"Tooltip Shape Template Advanced","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2024-06-18 10:45:19","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"c63727d2970211102d264ae8f6890df5","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2022-09-22 18:36:41","sys_name":"Schema View Link Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/f53f19bac362fa22ca2e93692d32f18f","value":"f53f19bac362fa22ca2e93692d32f18f"},"template_type":"advanced","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/41a9e717530310100b0cddeeff7b12d3","value":"41a9e717530310100b0cddeeff7b12d3"},"sys_mod_count":"168","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n    /* CONSTANTS */\n    // Widths and Lengths\n    var CORNER = 10;\n    var FROM_END_SEGMENT_LENGTH = 50;\n    var TO_END_SEGMENT_LENGTH = 50;\n    var SHORT_LENGTH = 1;\n    var STROKE_WIDTH = 2;\n    var HOVER_STROKE_WIDTH = 12;\n    var ARROWHEAD_STROKE_WIDTH = 1;\n    var ARROWHEAD_SCALE = 2;\n\n    // Segment Fractions\n    var ONE_TO_MANY_SEGMENT_FRACTION = 0;\n    var ONE_TO_ONE_SEGMENT_FRACTION = 0.25;\n\n    // Colors\n    var NEUTRAL_7 = \"#849196\";\n    var GREEN_COLOR = \"#4EA800\";\n    var HOVER_COLOR = \"#CCE3B9\";\n\n    //Actions\n    var SCHEMA_VIEW_EDGE_CLICKED = \"SCHEMA_VIEW#EDGE_CLICKED\";\n\n    /* EVENT HANDLERS */\n    // a mouse-over highlights the link by changing the first main path shape's stroke:\n    function handleMouseEnter(e, obj) {\n        obj.elt(0).stroke = HOVER_COLOR;\n    }\n\n    function handleMouseLeave(e, obj) {\n        obj.elt(0).stroke = \"transparent\";\n    }\n\n    // a mouse-click highlights the link and it's source and destination nodes\n    function handleMouseClick(e, obj) {\n        var diagram = obj.diagram;\n        diagram.clearHighlighteds();\n        obj.toNode.isHighlighted = true;\n        obj.fromNode.isHighlighted = true;\n        dispatch(SCHEMA_VIEW_EDGE_CLICKED, {\n            edgeDataObj: obj.part.data\n        });\n    }\n\n    return $(\n        go.Link, {\n            routing: go.Link.AvoidsNodes,\n            corner: CORNER,\n            fromEndSegmentLength: FROM_END_SEGMENT_LENGTH,\n            toEndSegmentLength: TO_END_SEGMENT_LENGTH,\n            toShortLength: SHORT_LENGTH,\n            fromShortLength: SHORT_LENGTH,\n            selectionAdorned: true,\n            cursor: \"pointer\",\n            mouseEnter: handleMouseEnter,\n            mouseLeave: handleMouseLeave,\n            click: handleMouseClick\n        }, {\n            selectionAdornmentTemplate: $(\n                go.Adornment,\n                $(go.Shape, {\n                    isPanelMain: true,\n                    stroke: GREEN_COLOR,\n                    strokeWidth: STROKE_WIDTH,\n                    cursor: \"pointer\",\n                })\n            ), // end Adornment\n        },\n        $(go.Shape, {\n            isPanelMain: true,\n            stroke: \"transparent\",\n            strokeWidth: HOVER_STROKE_WIDTH,\n        }), // thick undrawn path\n        $(\n            go.Shape, // Link line shape\n            new go.Binding(\"stroke\", \"isHighlighted\", function(h) {\n                return h ? GREEN_COLOR : NEUTRAL_7;\n            }).ofObject(), {\n                name: \"LINK_LINE\",\n                isPanelMain: true,\n                strokeWidth: STROKE_WIDTH,\n                stroke: null,\n                fill: NEUTRAL_7,\n            }\n        ),\n        $(\n            go.Shape, {\n                stroke: NEUTRAL_7,\n                strokeWidth: ARROWHEAD_STROKE_WIDTH,\n                scale: ARROWHEAD_SCALE,\n            },\n            new go.Binding(\"toArrow\", \"\", function(data) {\n                return data.type === \"glide_list\" ? \"LineFork\" : \"Line\";\n            }),\n            new go.Binding(\"segmentFraction\", \"\", function(data) {\n                return data.type === \"glide_list\" ?\n                    ONE_TO_MANY_SEGMENT_FRACTION :\n                    ONE_TO_ONE_SEGMENT_FRACTION;\n            }),\n            new go.Binding(\"stroke\", \"\", function(h) {\n                return (h.isHighlighted || h.isSelected) ? GREEN_COLOR : NEUTRAL_7;\n            }).ofObject()\n        ), // Link toArrow\n        $(go.Shape, {\n                strokeWidth: ARROWHEAD_STROKE_WIDTH,\n                scale: ARROWHEAD_SCALE,\n                segmentFraction: ONE_TO_ONE_SEGMENT_FRACTION,\n                fromArrow: \"Line\",\n            },\n            new go.Binding(\"stroke\", \"\", function(h) {\n                return (h.isHighlighted || h.isSelected) ? GREEN_COLOR : NEUTRAL_7;\n            }).ofObject()\n        ) // Link fromArrow\n    );\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/f53f19bac362fa22ca2e93692d32f18f","value":"f53f19bac362fa22ca2e93692d32f18f"},"sys_update_name":"sn_diagram_builder_shape_template_c63727d2970211102d264ae8f6890df5","has_recenter_handler":"false","name":"Schema View Link Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2021-10-27 11:20:48","has_tab_handler":"true","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"c6765025536d20100b0cddeeff7b12bc","recenter_handler":"","sys_updated_by":"admin","tabbable":"true","sys_created_on":"2021-01-06 10:24:19","sys_name":"Context Menu Shape Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"extended","sys_created_by":"admin","aria_label":"Opens current node's context menu","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/5d3727d3530310100b0cddeeff7b12d7","value":"5d3727d3530310100b0cddeeff7b12d7"},"sys_mod_count":"10","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_c6765025536d20100b0cddeeff7b12bc","has_recenter_handler":"false","name":"Context Menu Shape Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n\tdiagram.commandHandler.showContextMenu(item.part);\n}","sys_policy":""},{"description":"Port template for Action Node","sys_updated_on":"2021-10-27 11:20:48","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"c885ae76534020100b0cddeeff7b12e4","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2020-10-28 04:27:54","sys_name":"Action Node Port Shape Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/5d3727d3530310100b0cddeeff7b12d7","value":"5d3727d3530310100b0cddeeff7b12d7"},"sys_mod_count":"5","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_c885ae76534020100b0cddeeff7b12e4","has_recenter_handler":"false","name":"Action Node Port Shape Template","tab_click_handler":"","sys_policy":""},{"description":"","sys_updated_on":"2023-04-24 23:17:34","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"c98b6ed777d22110f92a7a8c8c5a99c6","recenter_handler":"function isRecenterRequired(selection, diagram, threshold, dispatch) {\n\t// Implement recenter handler\n\treturn true;\n}","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2023-04-24 23:17:34","sys_name":"Flow Try Node Placeholder Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/5d3727d3530310100b0cddeeff7b12d7","value":"5d3727d3530310100b0cddeeff7b12d7"},"sys_mod_count":"0","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_c98b6ed777d22110f92a7a8c8c5a99c6","has_recenter_handler":"false","name":"Flow Try Node Placeholder Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2022-09-26 20:23:09","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"cb40ad13b7950110388487c2de11a957","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2022-02-01 08:23:08","sys_name":"PD Group Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1293c996ad48c7d88400c13afef3cdff","value":"1293c996ad48c7d88400c13afef3cdff"},"template_type":"advanced","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/bfaaef17530310100b0cddeeff7b12e3","value":"bfaaef17530310100b0cddeeff7b12e3"},"sys_mod_count":"45","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n    return $(\n        go.Group,\n        \"Auto\", {\n            layerName: \"Background\",\n            movable: false,\n            copyable: false,\n            locationObjectName: \"PLACEHOLDER\",\n            layout: null,\n            avoidable: false,\n            selectable: false,\n        },\n        $(\n            go.Panel,\n            \"Auto\",\n            $(go.Shape, {\n                    name: \"PLACEHOLDER\",\n                    fill: \"transparent\",\n                    stroke: null,\n                    strokeWidth: 0,\n                },\n                new go.Binding(\"fill\", \"highlight\", function(v) {\n                    return v ? \"#e5eef0\" : \"transparent\";\n                })\n            )\n        )\n    );\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1293c996ad48c7d88400c13afef3cdff","value":"1293c996ad48c7d88400c13afef3cdff"},"sys_update_name":"sn_diagram_builder_shape_template_cb40ad13b7950110388487c2de11a957","has_recenter_handler":"false","name":"PD Group Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":"read"},{"description":"","sys_updated_on":"2021-06-03 22:47:59","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"cefbc559772cf010b2b4ddd9cf5a9990","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2021-06-03 22:47:59","sys_name":"Flow Action Node Content Panel Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/3ff9eb17530310100b0cddeeff7b12b4","value":"3ff9eb17530310100b0cddeeff7b12b4"},"sys_mod_count":"0","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_cefbc559772cf010b2b4ddd9cf5a9990","has_recenter_handler":"false","name":"Flow Action Node Content Panel Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2022-01-27 14:00:00","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"cf0fef33b75f3010388487c2de11a919","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2021-10-26 22:26:23","sys_name":"Flow Link Add Button Advanced","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"advanced","sys_created_by":"admin","aria_label":"Add a node","shape":"","sys_mod_count":"58","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n    var colorPrimary = \"#01778E\";\n    var colorWhite = \"#F6F7F7\";\n    var colorGray = \"#637274\";\n\n    return (\n        $(\"Button\", \n\t\t\tnew go.Binding(\"visible\", \"\", function(graphObject) {\n\t\t\t\treturn !graphObject.data.addBtnText;\n\t\t\t}).ofObject(), {\n                // set properties on the border Shape of the \"Button\"\n                \"ButtonBorder.figure\": \"Circle\",\n                \"ButtonBorder.fill\": colorWhite,\n                \"ButtonBorder.stroke\": colorGray,\n                \"ButtonBorder.strokeWidth\": 1,\n                \"ButtonBorder.width\": 15,\n                \"ButtonBorder.height\": 15,\n                // set properties on the \"Button\" itself used by its event handlers\n                \"_buttonFillOver\": colorPrimary,\n                \"_buttonStrokeOver\": colorPrimary,\n                \"_buttonFillPressed\": colorPrimary,\n                \"_buttonStrokePressed\": colorPrimary,\n                \"name\": \"linkAddButton\",\n                \"cursor\": \"pointer\",\n                mouseEnter: function(e, btn) {\n                    if (!btn.isEnabledObject()) return;\n                    var shape = btn.findObject('ButtonBorder'); // the border Shape\n                    if (shape instanceof go.Shape) {\n                        var brush = btn['_buttonFillOver'];\n                        btn['_buttonFillNormal'] = shape.fill;\n                        shape.fill = brush;\n                        brush = btn['_buttonStrokeOver'];\n                        btn['_buttonStrokeNormal'] = shape.stroke;\n                        shape.stroke = brush;\n                    }\n\n                    var plus = btn.part.findObject('addBtnPlus');\n                    if (plus) {\n                        plus.stroke = colorWhite;\n                    }\n                },\n                mouseLeave: function(e, btn) {\n                    if (!btn.isEnabledObject()) return;\n                    var shape = btn.findObject('ButtonBorder'); // the border Shape\n                    if (shape instanceof go.Shape) {\n                        shape.fill = btn['_buttonFillNormal'];\n                        shape.stroke = btn['_buttonStrokeNormal'];\n                    }\n\n                    var plus = btn.part.findObject('addBtnPlus');\n                    if (plus) {\n                        plus.stroke = colorGray;\n                    }\n                },\n                click: function(event, btn) {\n                    var link = btn.part.findObject('linkMain');\n                    if (link) {\n                        btn.diagram.select(link);\n                    }\n\n                    dispatch(\"FLOW_DIAGRAM#ADD_NODE_CLICKED\", {\n                        event: event,\n                        buttonPosition: btn.getDocumentPoint(go.Spot.Center)\n                    });\n                }\n            },\n            $(go.TextBlock, {\n                name: \"addBtnPlus\",\n                text: \"+\",\n                stroke: colorGray,\n            })\n        )\n    );\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_cf0fef33b75f3010388487c2de11a919","has_recenter_handler":"false","name":"Flow Link Add Button Advanced","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2023-05-17 17:18:41","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"d1f53b2243f621109177f17dd9b8f2d8","recenter_handler":"function isRecenterRequired(selection, diagram, threshold, dispatch) {\n\t// Implement recenter handler\n\treturn true;\n}","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2023-05-17 17:18:41","sys_name":"Flow Logic Node Body Container","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/802a6f17530310100b0cddeeff7b1213","value":"802a6f17530310100b0cddeeff7b1213"},"sys_mod_count":"0","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_d1f53b2243f621109177f17dd9b8f2d8","has_recenter_handler":"false","name":"Flow Logic Node Body Container","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"Generic shape template to render images specified at a give source path.","sys_updated_on":"2021-10-27 11:20:48","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"d47d766053a310100b0cddeeff7b12f0","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2020-09-26 09:54:50","sys_name":"Icon shape template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/577a2f17530310100b0cddeeff7b1221","value":"577a2f17530310100b0cddeeff7b1221"},"sys_mod_count":"6","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_d47d766053a310100b0cddeeff7b12f0","has_recenter_handler":"false","name":"Icon shape template","tab_click_handler":"","sys_policy":""},{"description":"","sys_updated_on":"2024-06-10 06:08:01","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"d4915191b7110110388487c2de11a9ce","recenter_handler":"function isRecenterRequired(selection, diagram, threshold, dispatch) {\t// Implement recenter handler\treturn true;}","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2022-01-26 02:10:36","sys_name":"PD Link Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1293c996ad48c7d88400c13afef3cdff","value":"1293c996ad48c7d88400c13afef3cdff"},"template_type":"advanced","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/41a9e717530310100b0cddeeff7b12d3","value":"41a9e717530310100b0cddeeff7b12d3"},"sys_mod_count":"126","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch, shapeTemplateUtilities, resolveThemeVariable) {\n    // consistent with process-designer-configuration.constants.js's ENABLE_FEATURES.STAGES\n    var PROCESS_TYPE_CONFIGURATION_ENABLE_FEATURES_STAGES = 'stages';\n    var isEditMode = go.go.PadCustomizationShared.isEditMode;\n\n    var colorWhite = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.NEUTRAL1);\n    var colorBorderPrimary = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.BORDER_PRIMARY);\n    var colorBorderSecondary = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.BORDER_SECONDARY);\n    var colorBorderTertiary = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.BORDER_TERTIARY);\n    var colorBackgroundTertiary = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.BACKGROUND_TERTIARY);\n    var colorPrimary1 = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.PRIMARY1);\n    var colorSecondary0 = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.SECONDARY0);\n    var colorAlertHigh0 = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.HIGH0);\n    var colorAlertHigh2 = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.HIGH2);\n    var END_SEGMENT_LENGTH = 40;\n    var PORT_SIZE = 12;\n    var ORIENTATION_VERTICAL = 'VERTICAL';\n    var ORIENTATION_HORIZONTAL = 'HORIZONTAL';\n    var TOOLBAR_TYPE_CONNECTOR = 'connectorToolbar';\n    var BUTTON_TRAY_HEIGHT = 24;\n    var POPOVER_VERTICAL_OFFSET = BUTTON_TRAY_HEIGHT / 2;\n    var POPOVER_CLOSENESS_OFFSET = 4;\n    var LINK_HIGHLIGHT = \"LinkHighlight\";\n    var LINK_ADORNMENT_HIGHLIGHT = \"LinkAdornmentHighlight\";\n\n    // if drawLinkTo is true, the start point of the link is dragged;\n    // else, the end point of the link is dragged.\n    function drawLink(e, obj, drawLinkTo) {\n        var edge = obj.part.adornedPart;\n        var tool = e.diagram.toolManager.relinkingTool;\n        tool.originalLink = edge;\n        tool.isForwards = !drawLinkTo;\n        if (drawLinkTo) {\n            tool.temporaryFromNode.location = e.diagram.lastInput.documentPoint;\n        } else {\n            tool.temporaryToNode.location = e.diagram.lastInput.documentPoint;\n        }\n        e.diagram.currentTool = tool;\n        tool.doActivate();\n        tool.temporaryFromNode.ensureBounds();\n        tool.temporaryToNode.ensureBounds();\n\n        if (drawLinkTo) {\n            tool.temporaryToPort = $(go.Shape, 'Circle', {\n                width: PORT_SIZE,\n                height: PORT_SIZE,\n                fill: colorPrimary1,\n                stroke: colorPrimary1,\n                segmentIndex: -1,\n            });\n        } else {\n            tool.temporaryFromPort = $(go.Shape, 'Circle', {\n                width: PORT_SIZE,\n                height: PORT_SIZE,\n                fill: colorPrimary1,\n                stroke: colorPrimary1,\n                segmentIndex: 0,\n            });\n        }\n    }\n\n    function computeHitboxesFromLinkPoints(linkPoints, linkThiccness) {\n        // linkPoints must be ordered starting from the beginning of link\n        // to the end of link\n        linkPoints = linkPoints || [];\n        var halfThiccness = linkThiccness / 2;\n        var hitboxes = [];\n        var cornerSquareHitBoxes = [];\n        linkPoints.forEach(function(currLinkPoint, idx, linkPoints) {\n            var prevLinkPoint = linkPoints[idx - 1];\n            if (!prevLinkPoint)\n                return;\n            /*\n                                       ^\n                                       |\n                                      top\n                                       |\n                                       V\n            <---------- left --------> ---------------------------               ^\n                                      |                           |              |\n                                      |   This is a hitbox        |        halfThickness\n                                      |   constructed from two    |              |\n            This is a linkPoint ----> *   linkPoints, this area   * <-----       V\n            with x,y coordinates      |   will be used to test    |       |\n                                      |   if a random point can   |     This is a 2nd linkPoint with x,y coordiantes.\n                                      |   exist here              |     If y equals the previous linkPoint (1st)'s y,\n                                      |                           |     we can use this linkPoint and the previous\n                                       ---------------------------      linkPoint and the thickness of the link to\n                                                                        construct a new hitbox\n\n                                                                  * <--- This is a 3rd linkPoint with x,y coordiantes.\n                                                                         If x equals the previous linkPoint (2nd)'s\n                                                                         x, we can construct a new hitbox with these\n                                                                         two linkPoints and the thickness of the link.\n                                                                         This link has turned right. If this linkPoint's\n                                                                         y is smaller than previous linkPoint's y then\n                                                                         we say this link has turned left.\n            */\n            var prevX = prevLinkPoint.x;\n            var prevY = prevLinkPoint.y;\n            var currX = currLinkPoint.x;\n            var currY = currLinkPoint.y;\n            if (currY === prevY) { // two points are horizontally aligned\n                hitboxes.push({\n                    top: prevY - halfThiccness,\n                    left: Math.min(prevX, currX),\n                    length: Math.abs(currX - prevX),\n                    height: linkThiccness,\n                    orientation: ORIENTATION_HORIZONTAL\n                });\n            } else if (currX === prevX) { // two points are vertically aligned\n                /* adding a square hitbox to cover the joints\n                 ---------\n                |         |   <--- need to cover this corner space\n                |     ----*----\n                |    |    |    |\n                 ---------     |\n                     |         |\n                      ----*----\n                Or\n                      ----*----\n                     |         |\n                 ---------     |\n                |    |    |    |\n                |     ----*----\n                |         |   <--- need to cover this corner space\n                 ---------\n                */\n                cornerSquareHitBoxes.push({\n                    top: prevY - halfThiccness,\n                    left: prevX - halfThiccness,\n                    length: linkThiccness,\n                    height: linkThiccness,\n                    orientation: ORIENTATION_VERTICAL\n                });\n                if (currY > prevY) {\n                    // link turns right\n                    hitboxes.push({\n                        top: prevY,\n                        left: prevX - halfThiccness,\n                        length: currY - prevY,\n                        height: linkThiccness,\n                        orientation: ORIENTATION_VERTICAL\n                    });\n                } else {\n                    // link turns left\n                    hitboxes.push({\n                        top: currY,\n                        left: currX - halfThiccness,\n                        length: prevY - currY,\n                        height: linkThiccness,\n                        orientation: ORIENTATION_VERTICAL\n                    });\n                }\n                // adding a square hitbox after the turn because\n                // the next point after currLinkPoint will be\n                // horizontal to currLinkPoint\n                cornerSquareHitBoxes.push({\n                    top: currY - halfThiccness,\n                    left: currX - halfThiccness,\n                    length: linkThiccness,\n                    height: linkThiccness,\n                    orientation: ORIENTATION_VERTICAL\n                });\n            }\n        });\n        cornerSquareHitBoxes = cornerSquareHitBoxes.map(function(square) {\n            square.isCorner = true;\n            square.centerX = square.left + halfThiccness + (BUTTON_TRAY_HEIGHT / 2);\n            square.centerY = square.top + halfThiccness + (BUTTON_TRAY_HEIGHT / 2);\n            return square;\n        });\n        // corner hitboxes take precedence over other hitboxes\n        return cornerSquareHitBoxes.concat(hitboxes);\n    }\n\n    function getHitboxContainingPoint(pointToCheck, hitboxes) {\n        for (var i = 0; i < hitboxes.length; i++) {\n            var rect = hitboxes[i];\n            var x = pointToCheck.x;\n            var y = pointToCheck.y;\n            if (\n                rect.orientation === ORIENTATION_HORIZONTAL &&\n                x >= rect.left &&\n                x <= rect.left + rect.length &&\n                y >= rect.top &&\n                y <= rect.top + rect.height\n            )\n                return rect;\n            if (\n                rect.orientation === ORIENTATION_VERTICAL &&\n                x >= rect.left &&\n                x <= rect.left + rect.height &&\n                y >= rect.top &&\n                y <= rect.top + rect.length\n            )\n                return rect;\n        }\n        return null;\n    }\n\n    function showToolbar(e, link, callback) {\n        if (isLaneLinkWithoutStages(link))\n            return;\n\n        var payload = {\n            type: TOOLBAR_TYPE_CONNECTOR,\n            position: undefined,\n            linkData: undefined\n        };\n        try {\n            payload.linkData = {\n                isLaneLink: link.data.isLaneLink,\n                from: link.data.from,\n                to: link.data.to,\n                orientation: undefined,\n                isDecisionEdge: link.data.isDecisionEdge,\n                callback: typeof callback === 'function' ? callback : function() {}\n            };\n            var linkThiccness = link.computeThickness();\n            // link.points API returns ordered collection of points\n            // starting from beginning of link to end of link\n            var linkPoints = link.points.toArray();\n            // Step 1 - Create hitboxes from a list of points along this link\n            var hitboxes = computeHitboxesFromLinkPoints(linkPoints, linkThiccness);\n            // Step 2 - Loop through hitboxes to see if the pointToCheck\n            // can exist in one of the hitboxes\n            var pointToCheck = {\n                x: e.documentPoint.x,\n                y: e.documentPoint.y\n            };\n            var rect = getHitboxContainingPoint(pointToCheck, hitboxes);\n            if (!rect)\n                return;\n            payload.linkData.orientation = rect.orientation;\n            if (rect.isCorner) {\n                payload.position = {\n                    x: rect.centerX,\n                    y: rect.centerY\n                };\n            } else if (payload.linkData.orientation === ORIENTATION_HORIZONTAL) {\n                payload.position = {\n                    x: pointToCheck.x,\n                    y: rect.top + POPOVER_CLOSENESS_OFFSET\n                };\n            } else if (payload.linkData.orientation === ORIENTATION_VERTICAL) {\n                payload.position = {\n                    // now-popover should slightly overlap with the thickness of the\n                    // link so not to trigger mouseLeave event so easily\n                    x: rect.left + POPOVER_CLOSENESS_OFFSET,\n                    // now-popover doesn't quite horizontally align its vertical center\n                    // with the y coordinate of the event so we need a small offset\n                    y: pointToCheck.y + POPOVER_VERTICAL_OFFSET\n                };\n            }\n        } catch (e) {}\n        if (payload.position && payload.linkData)\n            dispatch('PAD#DIAGRAM_OPEN_BUTTON_TRAY', payload);\n    }\n\n    function closeToolbar() {\n        dispatch('PAD#DIAGRAM_BUTTON_TRAY_CLOSED', {\n            type: TOOLBAR_TYPE_CONNECTOR\n        });\n    }\n\n    function removeAllLinkAdornments(linkKey, diagram) {\n        try {\n            var link = diagram.findLinkForKey(linkKey);\n            // Deselecting the link will automatically remove all adornments.\n            // This seems to be the best way because Part.clearAdornments and\n            // Part.removeAdornment do not seem to work consistently\n            link.isSelected = false;\n        } catch (err) {\n            // Do nothing, not end of world if the adornments are\n            // still there, they will be gone on refresh or\n            // when another link is selected\n        }\n    }\n\n    function getLinkColor(isRedundant, isLaneLink) {\n        if (isRedundant) {\n            return colorAlertHigh2;\n        } else if (isLaneLink) {\n            return colorBorderPrimary;\n        } else {\n            return colorBorderSecondary;\n        }\n    }\n\n    function isLaneLinkWithoutStages(link) {\n        return !link.diagram.model.modelData[PROCESS_TYPE_CONFIGURATION_ENABLE_FEATURES_STAGES] && link.data.isLaneLink;\n    }\n\n    return $(\n        go.Link,\n        go.Link.Orthogonal,\n        new go.Binding('opacity', 'isHidden', function(isHidden) {\n            return isHidden ? 0.0 : 1.0;\n        }),\n        new go.Binding('selectable', '', function(data, link) {\n            if (!isEditMode(link))\n                return false;\n\n            if (data.isHidden)\n                return false;\n\n            if (isLaneLinkWithoutStages(link))\n                return false;\n\n            return true;\n        }),\n        new go.Binding('layerName', 'isLaneLink', function(isLaneLink) {\n            return isLaneLink ? 'Background' : '';\n        }),\n        new go.Binding('mouseHover', '', function(data) {\n            return function(e, link) {\n                if (!isEditMode(link)) return;\n\n                if (!data.isHidden) {\n                    showToolbar(e, link);\n                }\n            }\n        }), {\n            routing: go.Link.AvoidsNodes,\n            relinkableFrom: true,\n            relinkableTo: true,\n            corner: 16,\n            toShortLength: 8,\n            fromEndSegmentLength: END_SEGMENT_LENGTH,\n            toEndSegmentLength: END_SEGMENT_LENGTH,\n            mouseEnter: function(e, link) {\n                if (!isEditMode(link)) return;\n\n                if (isLaneLinkWithoutStages(link))\n                    return;\n\n                if (link.data.isLaneLink) {\n                    link.findObject(LINK_HIGHLIGHT).stroke = colorBorderTertiary;\n                } else if (link.data.isRedundant) {\n                    link.findObject(LINK_HIGHLIGHT).stroke = colorAlertHigh0;\n                } else {\n                    link.findObject(LINK_HIGHLIGHT).stroke = colorBackgroundTertiary;\n                }\n            },\n            mouseLeave: function(e, link) {\n                if (isLaneLinkWithoutStages(link))\n                    return;\n\n                link.findObject(LINK_HIGHLIGHT).stroke = \"transparent\";\n                closeToolbar();\n            }\n        },\n        $(go.Shape, {\n            isPanelMain: true,\n            name: LINK_HIGHLIGHT,\n            strokeWidth: 12,\n            stroke: \"transparent\",\n        }),\n        $(go.Shape,\n            new go.Binding(\"strokeDashArray\", \"isRedundant\", function(isRedundant) {\n                return isRedundant ? [5, 3] : null;\n            }),\n            new go.Binding(\"stroke\", \"\", function(data) {\n                return getLinkColor(data.isRedundant, data.isLaneLink);\n\n            }), {\n                isPanelMain: true,\n                strokeWidth: 2\n            }\n        ),\n        $(go.Shape,\n            new go.Binding(\"fill\", \"\", function(data) {\n                return getLinkColor(data.isRedundant, data.isLaneLink);\n            }), {\n                toArrow: \"Triangle\",\n                stroke: null\n            }), {\n            selectionAdornmentTemplate: $(\n                go.Adornment,\n                \"Link\", {\n                    mouseEnter: function(e, adornment) {\n                        if (!isEditMode(e)) return;\n\n                        adornment.findObject(LINK_ADORNMENT_HIGHLIGHT).stroke = colorSecondary0;\n                    },\n                    mouseLeave: function(e, adornment) {\n                        adornment.findObject(LINK_ADORNMENT_HIGHLIGHT).stroke = \"transparent\";\n                        closeToolbar();\n                    },\n                    mouseHover: function(e, adornment) {\n                        if (!isEditMode(e)) return;\n\n                        var link = adornment.adornedPart;\n                        // We can't save 'link' object reference here to be used later, it seems\n                        // to be cleared immediately after this mouseHover call. However e.diagram\n                        // does not, so we can use link.key (string) + e.diagram + Diagram.findLinkForKey\n                        // to find the link again at a later time\n                        var callback = removeAllLinkAdornments.bind(this, link.key, e.diagram);\n                        showToolbar(e, link, callback);\n                    }\n                },\n                $(go.Shape, {\n                    isPanelMain: true,\n                    name: LINK_ADORNMENT_HIGHLIGHT,\n                    strokeWidth: 6,\n                    stroke: \"transparent\",\n                }),\n                $(go.Shape,\n                    new go.Binding(\"strokeDashArray\", \"isRedundant\", function(isRedundant) {\n                        return isRedundant ? [5, 3] : null;\n                    }), {\n                        isPanelMain: true,\n                        stroke: colorPrimary1,\n                        strokeWidth: 2\n                    }),\n                $(\n                    go.Shape, // the arrowhead\n                    {\n                        toArrow: \"Triangle\",\n                        fill: colorPrimary1,\n                        stroke: null\n                    }\n                ),\n                $(go.Shape, 'Circle', {\n                    width: PORT_SIZE,\n                    height: PORT_SIZE,\n                    fill: colorWhite,\n                    stroke: colorPrimary1,\n                    strokeWidth: 2,\n                    segmentIndex: 0,\n                    isActionable: true,\n                    actionMove: function(e, obj) {\n                        drawLink(e, obj, true);\n                    }\n                }),\n                $(go.Shape, 'Circle', {\n                    width: PORT_SIZE,\n                    height: PORT_SIZE,\n                    fill: colorWhite,\n                    stroke: colorPrimary1,\n                    strokeWidth: 2,\n                    segmentIndex: -1,\n                    isActionable: true,\n                    actionMove: function(e, obj) {\n                        drawLink(e, obj, false);\n                    }\n                })\n            )\n        }\n    );\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1293c996ad48c7d88400c13afef3cdff","value":"1293c996ad48c7d88400c13afef3cdff"},"sys_update_name":"sn_diagram_builder_shape_template_d4915191b7110110388487c2de11a9ce","has_recenter_handler":"false","name":"PD Link Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":"read"},{"description":"","sys_updated_on":"2023-07-06 06:26:38","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"d510b2c04f762110ffc2fde0b1ce0bca","recenter_handler":"function isRecenterRequired(selection, diagram, threshold, dispatch) {\n\t// Implement recenter handler\n\treturn true;\n}","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2023-05-09 17:50:23","sys_name":"Flow Action Node Annotation Shape","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/3ff9eb17530310100b0cddeeff7b12b4","value":"3ff9eb17530310100b0cddeeff7b12b4"},"sys_mod_count":"5","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_d510b2c04f762110ffc2fde0b1ce0bca","has_recenter_handler":"false","name":"Flow Action Node Annotation Shape","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2024-08-14 15:16:38","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"d6098d74a3cc52106cf78fc4441e61d8","recenter_handler":"function isRecenterRequired(selection, diagram, threshold, dispatch) {\n\t// Implement recenter handler\n\treturn true;\n}","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2024-08-13 14:02:16","sys_name":"Flow Loading Icon Container","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/8ce7a7d3530310100b0cddeeff7b1291","value":"8ce7a7d3530310100b0cddeeff7b1291"},"sys_mod_count":"3","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch, shapeTemplateUtilities, resolveThemeVariable) {\n    /*\n    // Sample code to reuse the child shape templates\n    var buildChildShapeTemplate = shapeTemplateUtilities.buildChildShapeTemplate; // Function to build child shape templates\n    var children = shapeTemplateUtilities.children; // Array of children shape templates\n\n    // To pass the props from parent to child shape template\n    var props = {\n        'stroke': 'blue',\n\t\t'fill': resolveThemeVariable('--now-color--primary-0'), // Syntax to retrieve the value associated with the specified theme variable\n\t\t'background': resolveThemeVariable('--now-color--primary-0', false) // Syntax to retrieve the rgb value associated with the specified color theme variable. By default, returns hex value\n    };\n\n    return $(go.Node, 'Auto',\n        buildChildShapeTemplate(children[0], props), // Build the first child shape template, if any.\n        buildChildShapeTemplate(children[1], props) // Build the second shape template, if any.\n    );\n\n    // Usage of the json props in child shape template that are passed from the parent\n    var jsonProps = shapeTemplateUtilities.jsonProps; // JSON props passed from the parent shape template\n\n    return $(go.Node, 'Auto',\n        buildChildShapeTemplate(children[0], jsonProps), // Build the first child shape template, if any.\n        buildChildShapeTemplate(children[1], jsonProps.stroke) // Build the second shape template, if any.\n    );\n\t*/\n\n    return $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_d6098d74a3cc52106cf78fc4441e61d8","has_recenter_handler":"false","name":"Flow Loading Icon Container","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2024-07-19 05:53:31","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"d94be2a837270610512433e734924bcd","recenter_handler":"function isRecenterRequired(selection, diagram, threshold, dispatch) {\n\t// Implement recenter handler\n\treturn true;\n}","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2024-07-19 05:53:31","sys_name":"Loader Animation Icon Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/577a2f17530310100b0cddeeff7b1221","value":"577a2f17530310100b0cddeeff7b1221"},"sys_mod_count":"0","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch, shapeTemplateUtilities, resolveThemeVariable) {\n    /*\n    // Sample code to reuse the child shape templates\n    var buildChildShapeTemplate = shapeTemplateUtilities.buildChildShapeTemplate; // Function to build child shape templates\n    var children = shapeTemplateUtilities.children; // Array of children shape templates\n\n    // To pass the props from parent to child shape template\n    var props = {\n        'stroke': 'blue',\n\t\t'fill': resolveThemeVariable('--now-color--primary-0'), // Syntax to retrieve the value associated with the specified theme variable\n\t\t'background': resolveThemeVariable('--now-color--primary-0', false) // Syntax to retrieve the rgb value associated with the specified color theme variable. By default, returns hex value\n    };\n\n    return $(go.Node, 'Auto',\n        buildChildShapeTemplate(children[0], props), // Build the first child shape template, if any.\n        buildChildShapeTemplate(children[1], props) // Build the second shape template, if any.\n    );\n\n    // Usage of the json props in child shape template that are passed from the parent\n    var jsonProps = shapeTemplateUtilities.jsonProps; // JSON props passed from the parent shape template\n\n    return $(go.Node, 'Auto',\n        buildChildShapeTemplate(children[0], jsonProps), // Build the first child shape template, if any.\n        buildChildShapeTemplate(children[1], jsonProps.stroke) // Build the second shape template, if any.\n    );\n\t*/\n\n    return $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_d94be2a837270610512433e734924bcd","has_recenter_handler":"false","name":"Loader Animation Icon Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2021-10-19 05:28:36","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"dd390c25b7d73010388487c2de11a977","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2021-10-19 05:28:36","sys_name":"Label Rounded Rectangle Shape Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/8e182fd3530310100b0cddeeff7b124c","value":"8e182fd3530310100b0cddeeff7b124c"},"sys_mod_count":"0","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_dd390c25b7d73010388487c2de11a977","has_recenter_handler":"false","name":"Label Rounded Rectangle Shape Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"Switch Node Shape Template for  Dynamic Ports","sys_updated_on":"2022-10-11 10:34:18","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"defeebd877e21110b2e09dcc3c5a990e","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2022-10-11 10:34:18","sys_name":"Switch Node Dynamic Port Shape Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/5d3727d3530310100b0cddeeff7b12d7","value":"5d3727d3530310100b0cddeeff7b12d7"},"sys_mod_count":"0","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_defeebd877e21110b2e09dcc3c5a990e","has_recenter_handler":"false","name":"Switch Node Dynamic Port Shape Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2021-10-27 11:20:49","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"e0fd330653172010b553ddeeff7b1217","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2021-04-05 16:22:32","sys_name":"Action Node Content Panel Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/3ff9eb17530310100b0cddeeff7b12b4","value":"3ff9eb17530310100b0cddeeff7b12b4"},"sys_mod_count":"2","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_e0fd330653172010b553ddeeff7b1217","has_recenter_handler":"false","name":"Action Node Content Panel Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"A Table template with one row - which shows condition's user friendly name","sys_updated_on":"2021-10-27 11:20:49","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"e1205e0353bb14100b0cddeeff7b123b","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2020-10-16 11:16:38","sys_name":"If Node Content Panel Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/3ff9eb17530310100b0cddeeff7b12b4","value":"3ff9eb17530310100b0cddeeff7b12b4"},"sys_mod_count":"7","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_e1205e0353bb14100b0cddeeff7b123b","has_recenter_handler":"false","name":"If Node Content Panel Template","tab_click_handler":"","sys_policy":""},{"description":"","sys_updated_on":"2023-10-23 10:26:34","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"e1570ab4c38eb910b09bb4cdb840dd17","recenter_handler":"function isRecenterRequired(selection, diagram, threshold, dispatch) {\n\t// Implement recenter handler\n\treturn true;\n}","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2023-10-20 12:09:26","sys_name":"Rounded Rectangle Node Shape Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"base","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/4416da03535710100b0cddeeff7b126c","value":"4416da03535710100b0cddeeff7b126c"},"sys_mod_count":"4","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch, shapeTemplateUtilities, resolveThemeVariable) {\n    /*\n    // Sample code to reuse the child shape templates\n    var buildChildShapeTemplate = shapeTemplateUtilities.buildChildShapeTemplate; // Function to build child shape templates\n    var children = shapeTemplateUtilities.children; // Array of children shape templates\n\n    // To pass the props from parent to child shape template\n    var props = {\n        'stroke': 'blue',\n\t\t'fill': resolveThemeVariable('--now-color--primary-0'), // Syntax to retrieve the value associated with the specified theme variable\n    };\n\n    return $(go.Node, 'Auto',\n        buildChildShapeTemplate(children[0], props), // Build the first child shape template, if any.\n        buildChildShapeTemplate(children[1], props) // Build the second shape template, if any.\n    );\n\n    // Usage of the json props in child shape template that are passed from the parent\n    var jsonProps = shapeTemplateUtilities.jsonProps; // JSON props passed from the parent shape template\n\n    return $(go.Node, 'Auto',\n        buildChildShapeTemplate(children[0], jsonProps), // Build the first child shape template, if any.\n        buildChildShapeTemplate(children[1], jsonProps.stroke) // Build the second shape template, if any.\n    );\n\t*/\n\n    return $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_e1570ab4c38eb910b09bb4cdb840dd17","has_recenter_handler":"false","name":"Rounded Rectangle Node Shape Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"Node shape template for Make a Decision","sys_updated_on":"2022-08-22 16:59:48","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"e207a4e077e11110b2b4ddd9cf5a99e4","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2022-08-22 21:36:49","sys_name":"Flow MAD Branch Node Shape Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/5d3727d3530310100b0cddeeff7b12d7","value":"5d3727d3530310100b0cddeeff7b12d7"},"sys_mod_count":"2","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_e207a4e077e11110b2b4ddd9cf5a99e4","has_recenter_handler":"false","name":"Flow MAD Branch Node Shape Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2024-10-03 10:11:13","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"e3e86048c34311108fa1cb03b940dd49","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2022-11-03 22:01:25","sys_name":"PD Link with button template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1293c996ad48c7d88400c13afef3cdff","value":"1293c996ad48c7d88400c13afef3cdff"},"template_type":"advanced","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/41a9e717530310100b0cddeeff7b12d3","value":"41a9e717530310100b0cddeeff7b12d3"},"sys_mod_count":"22","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch, shapeTemplateUtilities, resolveThemeVariable) {\n    // Edges have the same styling as PD Link Template\n    var colorWhite = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.NEUTRAL1);\n    var colorPrimary1 = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.PRIMARY1);\n    var linkColorPrimary = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.NEUTRAL7);\n    var colorGray = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.NEUTRAL6);\n    var colorBorderPrimary = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.BORDER_PRIMARY);\n    var colorBorderTertiary = resolveThemeVariable(go.go.PadCustomizationShared.COLORS.BORDER_TERTIARY);\n    var END_SEGMENT_LENGTH = 40;\n    var LINK_HIGHLIGHT = \"LinkHighlight\";\n\n    var isEditMode = go.go.PadCustomizationShared.isEditMode;\n\n    function makeButton(name, label, alignment, alignmentFocus, clickHandler) {\n        return $(\n            \"Button\",\n            new go.Binding(\"visible\", '', function(data, btn) {\n                return !isEditMode(btn) ? false : true;\n            }),\n            new go.Binding(\"cursor\", '', function(data, btn) {\n                return !isEditMode(btn) ? \"default\" : \"pointer\";\n            }), {\n                alignment: alignment,\n                alignmentFocus: alignmentFocus,\n                name: name,\n                \"ButtonBorder.figure\": \"Circle\",\n                \"ButtonBorder.fill\": colorPrimary1,\n                \"ButtonBorder.stroke\": colorPrimary1,\n                \"ButtonBorder.strokeWidth\": 1,\n                \"ButtonBorder.width\": 16,\n                \"ButtonBorder.height\": 16,\n                // set properties on the \"Button\" itself used by its event handlers\n                _buttonFillOver: colorPrimary1,\n                _buttonStrokeOver: colorPrimary1,\n                _buttonFillPressed: colorPrimary1,\n                _buttonStrokePressed: colorPrimary1,\n                click: clickHandler,\n                mouseEnter: function(e, btn) {\n                    if (!btn.isEnabledObject()) return;\n\n                    if (!isEditMode(btn)) return;\n\n                    var shape = btn.findObject(\"ButtonBorder\"); // the border Shape\n                    if (shape instanceof go.Shape) {\n                        var brush = btn[\"_buttonFillOver\"];\n                        btn[\"_buttonFillNormal\"] = shape.fill;\n                        shape.fill = brush;\n                        brush = btn[\"_buttonStrokeOver\"];\n                        btn[\"_buttonStrokeNormal\"] = shape.stroke;\n                        shape.stroke = brush;\n                    }\n\n                    var plus = btn.part.findObject(name + \"btn\");\n                    if (plus) {\n                        plus.stroke = colorWhite;\n                    }\n                },\n                mouseLeave: function(e, btn) {\n                    if (!btn.isEnabledObject()) return;\n\n                    var shape = btn.findObject(\"ButtonBorder\"); // the border Shape\n                    if (shape instanceof go.Shape) {\n                        shape.fill = btn[\"_buttonFillNormal\"];\n                        shape.stroke = btn[\"_buttonStrokeNormal\"];\n                    }\n\n                    var plus = btn.part.findObject(name + \"btn\");\n                    if (plus) {\n                        plus.stroke = colorWhite;\n                    }\n                },\n            },\n            $(go.TextBlock, {\n                name: name + \"btn\",\n                text: label,\n                stroke: colorWhite\n            })\n        );\n    }\n\n    return $(\n        go.Link,\n        go.Link.Orthogonal, {\n            selectable: false,\n            corner: 16,\n            toShortLength: 8,\n            fromEndSegmentLength: END_SEGMENT_LENGTH,\n            toEndSegmentLength: END_SEGMENT_LENGTH,\n            mouseEnter: function(e, link) {\n                if (!isEditMode(link)) return;\n\n                link.findObject(LINK_HIGHLIGHT).stroke = colorBorderTertiary;\n            },\n            mouseLeave: function(e, link) {\n                link.findObject(LINK_HIGHLIGHT).stroke = \"transparent\";\n            }\n        },\n        $(go.Shape, {\n            isPanelMain: true,\n            name: LINK_HIGHLIGHT,\n            strokeWidth: 12,\n            stroke: \"transparent\"\n        }),\n        $(go.Shape, {\n            isPanelMain: true,\n            strokeWidth: 2,\n            stroke: linkColorPrimary\n        }),\n        $(go.Shape, {\n            toArrow: \"Triangle\",\n            fill: colorBorderPrimary,\n            stroke: null\n        }),\n        makeButton(\"ADD_BUTTON_RIGHT\", \"+\", new go.Spot(0, 0, 0, 0), new go.Spot(0.4, 0.5, 0, 0), function(event, btn) {\n            if (!isEditMode(btn)) return;\n\n            dispatch(\"PAD#DIAGRAM_OPEN_BUTTON_TRAY\", {\n                type: \"picker\",\n                position: btn.getDocumentPoint(go.Spot.Center),\n                nodeData: {\n                    key: btn.part.data.from\n                },\n                nodeContext: {\n                    addType: 'addRight',\n                    nodeType: 'lane'\n                }\n            });\n        })\n    );\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1293c996ad48c7d88400c13afef3cdff","value":"1293c996ad48c7d88400c13afef3cdff"},"sys_update_name":"sn_diagram_builder_shape_template_e3e86048c34311108fa1cb03b940dd49","has_recenter_handler":"false","name":"PD Link with button template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":"read"},{"description":"","sys_updated_on":"2021-08-18 05:32:40","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"e6d7f461b7027010388487c2de11a93f","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2021-08-18 05:32:40","sys_name":"Blank Shape To Right Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/5d3727d3530310100b0cddeeff7b12d7","value":"5d3727d3530310100b0cddeeff7b12d7"},"sys_mod_count":"0","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_e6d7f461b7027010388487c2de11a93f","has_recenter_handler":"false","name":"Blank Shape To Right Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2021-10-27 11:20:49","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"e8711ec753bb14100b0cddeeff7b12de","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2020-10-16 11:22:19","sys_name":"If Node Body Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/3ff9eb17530310100b0cddeeff7b12b4","value":"3ff9eb17530310100b0cddeeff7b12b4"},"sys_mod_count":"6","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_e8711ec753bb14100b0cddeeff7b12de","has_recenter_handler":"false","name":"If Node Body Template","tab_click_handler":"","sys_policy":""},{"description":"","sys_updated_on":"2022-10-11 09:49:28","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"eac42fd077e21110b2e09dcc3c5a99aa","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2022-10-11 09:49:28","sys_name":"Switch Node Body Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/3ff9eb17530310100b0cddeeff7b12b4","value":"3ff9eb17530310100b0cddeeff7b12b4"},"sys_mod_count":"0","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_eac42fd077e21110b2e09dcc3c5a99aa","has_recenter_handler":"false","name":"Switch Node Body Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2022-05-19 19:03:28","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"eb775e2dc3e301105c68006c2840ddaf","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2022-05-18 22:15:53","sys_name":"Flow Stage Node Content Panel Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/802a6f17530310100b0cddeeff7b1213","value":"802a6f17530310100b0cddeeff7b1213"},"sys_mod_count":"3","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_eb775e2dc3e301105c68006c2840ddaf","has_recenter_handler":"false","name":"Flow Stage Node Content Panel Template","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"","sys_updated_on":"2023-05-16 21:44:21","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"ed5923d243f221109177f17dd9b8f2dd","recenter_handler":"function isRecenterRequired(selection, diagram, threshold, dispatch) {\n\t// Implement recenter handler\n\treturn true;\n}","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2023-05-16 21:44:21","sys_name":"Flow Action Node Natlang Shape","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/5d3727d3530310100b0cddeeff7b12d7","value":"5d3727d3530310100b0cddeeff7b12d7"},"sys_mod_count":"0","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_ed5923d243f221109177f17dd9b8f2dd","has_recenter_handler":"false","name":"Flow Action Node Natlang Shape","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""},{"description":"Condition node's output port for Else","sys_updated_on":"2021-10-27 11:20:49","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"ee339b3e530820100b0cddeeff7b122a","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2020-10-28 07:46:55","sys_name":"If Node Else Output Port Shape Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/5d3727d3530310100b0cddeeff7b12d7","value":"5d3727d3530310100b0cddeeff7b12d7"},"sys_mod_count":"5","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_ee339b3e530820100b0cddeeff7b122a","has_recenter_handler":"false","name":"If Node Else Output Port Shape Template","tab_click_handler":"","sys_policy":""},{"description":"","sys_updated_on":"2021-10-27 11:20:49","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"f19d6e9b53e12010b553ddeeff7b1264","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2021-01-12 07:54:22","sys_name":"Rectangle Shape Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/e7a4a8bf531ce0100b0cddeeff7b129b","value":"e7a4a8bf531ce0100b0cddeeff7b129b"},"sys_mod_count":"2","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_f19d6e9b53e12010b553ddeeff7b1264","has_recenter_handler":"false","name":"Rectangle Shape Template","tab_click_handler":"","sys_policy":""},{"description":"","sys_updated_on":"2024-10-03 19:54:55","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"f241af70b7510110f92afd31ae11a9c0","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2022-01-24 23:22:12","sys_name":"Flow Link Add Text Button Advanced","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"advanced","sys_created_by":"admin","aria_label":"Add a text button","shape":"","sys_mod_count":"32","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch, shapeTemplateUtilities, resolveThemeVariable) {\n    var nowColorBackgroundPrimary = resolveThemeVariable(\"--now-color_background--primary\") || \"#FFFFFF\";\n    var nowColorBackgroundSecondary = resolveThemeVariable(\"--now-color_background--secondary\") || \"#F5F6F7\";\n    var nowColorBackgroundSecondaryActionable = resolveThemeVariable(\"--now-color_background--secondary-actionable\") || \"#32343A\";\n    var nowColorBorderPrimary = resolveThemeVariable(\"--now-color_border--primary\") || \"#717E84\";\n    var nowColorBorderSecondary = resolveThemeVariable(\"--now-color_border--secondary\") || \"#A9B2B7\";\n    var nowColorTextPrimary = resolveThemeVariable(\"--now-color_text--primary\") || \"#10171B\";\n    var nowColorTextTertiary = resolveThemeVariable(\"--now-color_text--tertiary\") || \"#36444B\";\n    var nowOpacityLeast = resolveThemeVariable(\"--now-opacity--least\") || 0.1;\n    var nowOpacityLess = resolveThemeVariable(\"--now-opacity--less\") || 0.25;\n    var nowOpacityLeastBase16 = Math.floor(nowOpacityLeast * 255).toString(16).padStart(2, '0');\n    var nowOpacityLessBase16 = Math.floor(nowOpacityLess * 255).toString(16).padStart(2, '0');\n    var nowColorBGSecActLeast = nowColorBackgroundSecondaryActionable + nowOpacityLeastBase16;\n    var nowColorBGSecActLess = nowColorBackgroundSecondaryActionable + nowOpacityLessBase16;\n\n    return (\n        $(go.Panel, \"Spot\",\n            // Matches attributes between button and shape underneath so\n            // that when the button is set to have less opacity,\n            // the button will not be see through\n            $(\"Shape\", new go.Binding(\"figure\", \"addBtnText\", function(addBtnText) {\n                    return addBtnText !== '' ? \"RoundedRectangle\" : \"Circle\";\n                }),\n                new go.Binding(\"width\", \"addBtnText\", function(addBtnText) {\n                    return addBtnText !== '' ? 98 : 15;\n                }),\n                new go.Binding(\"height\", \"addBtnText\", function(addBtnText) {\n                    return addBtnText !== '' ? 24 : 15;\n                }), {\n                    fill: \"white\",\n                    stroke: \"white\"\n                }),\n            $(\"Button\",\n                new go.Binding(\"isEnabled\", '', function(linkData, linkObj) {\n                    if (linkData.addBtnText) {\n                        linkObj._buttonStrokeOver = nowColorBorderPrimary;\n                        linkObj._buttonStrokePressed = nowColorBorderPrimary;\n                        linkObj._buttonFillOver = nowColorBGSecActLeast;\n                        linkObj._buttonFillNormal = nowColorBackgroundSecondary;\n                    } else {\n                        linkObj._buttonStrokeOver = nowColorBorderSecondary;\n                        linkObj._buttonStrokePressed = nowColorBorderSecondary;\n                        linkObj._buttonFillOver = nowColorBGSecActLess;\n                        linkObj._buttonFillNormal = nowColorBackgroundPrimary;\n                    }\n                    return true;\n                }),\n                new go.Binding(\"ButtonBorder.figure\", \"addBtnText\", function(addBtnText) {\n                    return addBtnText !== '' ? \"RoundedRectangle\" : \"Circle\";\n                }),\n                new go.Binding(\"ButtonBorder.width\", \"addBtnText\", function(addBtnText) {\n                    return addBtnText !== '' ? 98 : 15;\n                }),\n                new go.Binding(\"ButtonBorder.height\", \"addBtnText\", function(addBtnText) {\n                    return addBtnText !== '' ? 24 : 15;\n                }),\n                new go.Binding(\"ButtonBorder.fill\", \"addBtnText\", function(addBtnText) {\n                    return addBtnText !== '' ? nowColorBackgroundSecondary : nowColorBackgroundPrimary;\n                }),\n                new go.Binding(\"ButtonBorder.stroke\", \"addBtnText\", function(addBtnText) {\n                    return addBtnText !== '' ? nowColorBorderPrimary : nowColorBorderSecondary;\n                }), {\n                    // set properties on the border Shape of the \"Button\"\n                    \"ButtonBorder.strokeWidth\": 1,\n                    // parameter1 is similar (but not exact) to the border radius\n                    \"ButtonBorder.parameter1\": 6,\n                    // set properties on the \"Button\" itself used by its event handlers\n                    \"_buttonFillPressed\": nowColorBGSecActLess,\n                    \"name\": \"linkAddButton\",\n                    \"cursor\": \"pointer\",\n                    click: function(event, btn) {\n                        var link = btn.part.findObject('linkMain');\n                        dispatch(\"FLOW_DIAGRAM#ADD_NODE_CLICKED\", {\n                            event: event,\n                            buttonPosition: btn.getDocumentPoint(go.Spot.Center),\n                            link: link\n                        });\n                    }\n                },\n                $(go.Panel, \"Horizontal\",\n                    $(go.Picture,\n                        new go.Binding(\"visible\", '', function(linkData, linkObj) {\n                            if (!linkData.addBtnText) {\n                                return false;\n                            } else {\n                                linkObj.source = 'images/circle-plus-md-black.svg';\n                                return true;\n                            }\n                        }), {\n                            height: 11,\n                            width: 11,\n                            margin: new go.Margin(0, 4, 0, 0)\n                        }),\n                    $(go.TextBlock,\n                        new go.Binding(\"stroke\", '', function(linkData, linkObj) {\n                            if (linkData.addBtnText) {\n                                linkObj.text = linkData.addBtnText;\n                                linkObj.margin = new go.Margin(2, 0, 0, 0);\n                                return nowColorTextTertiary;\n                            } else {\n                                linkObj.text = '+';\n                                return nowColorTextPrimary;\n                            }\n                        }), {\n                            verticalAlignment: go.Spot.Center,\n                            name: \"addBtnPlus\"\n                        }\n                    )\n                )\n            )\n        )\n    );\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_f241af70b7510110f92afd31ae11a9c0","has_recenter_handler":"false","name":"Flow Link Add Text Button Advanced","tab_click_handler":" function onGraphObjectClicked(item, diagram, dispatch) {\n    // Implement click handler \n}","sys_policy":""},{"description":"","sys_updated_on":"2021-10-27 11:20:49","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"f39a8096537c20100b0cddeeff7b123e","recenter_handler":"","sys_updated_by":"admin","tabbable":"true","sys_created_on":"2020-12-02 10:40:57","sys_name":"Replace Node Button Panel Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"extended","sys_created_by":"admin","aria_label":"Opens action picker to replace this placeholder node by action","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/5d3727d3530310100b0cddeeff7b12d7","value":"5d3727d3530310100b0cddeeff7b12d7"},"sys_mod_count":"9","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_f39a8096537c20100b0cddeeff7b123e","has_recenter_handler":"false","name":"Replace Node Button Panel Template","tab_click_handler":"","sys_policy":""},{"description":"","sys_updated_on":"2021-10-27 11:20:49","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"f79950fb538310100b0cddeeff7b1253","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2020-09-11 03:47:35","sys_name":"Link To Arrow Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/87c9ab17530310100b0cddeeff7b123d","value":"87c9ab17530310100b0cddeeff7b123d"},"sys_mod_count":"5","active":"true","sys_tags":"","script":"","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_f79950fb538310100b0cddeeff7b1253","has_recenter_handler":"false","name":"Link To Arrow Template","tab_click_handler":"","sys_policy":""},{"description":"","sys_updated_on":"2021-10-27 11:20:49","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"fa67516b5398a0100b0cddeeff7b12f8","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2020-11-11 16:57:57","sys_name":"Loop Node Shape Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"base","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/03775d6b5398a0100b0cddeeff7b129e","value":"03775d6b5398a0100b0cddeeff7b129e"},"sys_mod_count":"18","active":"true","sys_tags":"","script":"","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_fa67516b5398a0100b0cddeeff7b12f8","has_recenter_handler":"false","name":"Loop Node Shape Template","tab_click_handler":"","sys_policy":""},{"description":"","sys_updated_on":"2021-10-27 11:20:49","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"fe6e3ddd53b92010b553ddeeff7b12ca","recenter_handler":"","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2021-01-18 09:35:42","sys_name":"Loop Node Content Panel Template","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/802a6f17530310100b0cddeeff7b1213","value":"802a6f17530310100b0cddeeff7b1213"},"sys_mod_count":"5","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/1cf7ad026abf3abab12e761ddaa6e9df","value":"1cf7ad026abf3abab12e761ddaa6e9df"},"sys_update_name":"sn_diagram_builder_shape_template_fe6e3ddd53b92010b553ddeeff7b12ca","has_recenter_handler":"false","name":"Loop Node Content Panel Template","tab_click_handler":"","sys_policy":""},{"description":"","sys_updated_on":"2023-07-04 07:17:56","has_tab_handler":"false","sys_class_name":"sn_diagram_builder_shape_template","sys_id":"fe6f2c46437321109177f17dd9b8f2d8","recenter_handler":"function isRecenterRequired(selection, diagram, threshold, dispatch) {\n\t// Implement recenter handler\n\treturn true;\n}","sys_updated_by":"admin","tabbable":"false","sys_created_on":"2023-07-04 06:36:11","sys_name":"Flow Action Node Info Container","sys_scope":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_scope/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"template_type":"extended","sys_created_by":"admin","aria_label":"","shape":{"link":"https://dev315171.service-now.com/api/now/v1/table/sn_diagram_builder_shape/3ff9eb17530310100b0cddeeff7b12b4","value":"3ff9eb17530310100b0cddeeff7b12b4"},"sys_mod_count":"1","active":"true","sys_tags":"","script":"function getShapeTemplate($, go, dispatch, buildShapeTemplate, children) {\n\treturn $(go.Node, 'Auto');\n}","sys_package":{"link":"https://dev315171.service-now.com/api/now/v1/table/sys_package/a4f5f4d7ca80209b2a32be23119ae821","value":"a4f5f4d7ca80209b2a32be23119ae821"},"sys_update_name":"sn_diagram_builder_shape_template_fe6f2c46437321109177f17dd9b8f2d8","has_recenter_handler":"false","name":"Flow Action Node Info Container","tab_click_handler":"function onGraphObjectClicked(item, diagram, dispatch) {\n\t// Implement click handler\n}","sys_policy":""}]}